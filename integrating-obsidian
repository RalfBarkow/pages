{
  "title": "Integrating Obsidian",
  "story": [
    {
      "type": "paragraph",
      "id": "3811484fd59f3196",
      "text": "Robert writes, Had success tonight syncing a folder on my phone that obsidian writes to, to a wiki asset folder using nextcloud... So I write in obsidian and markdown files with page names show up in the asset folder.\n"
    },
    {
      "type": "paragraph",
      "id": "7dd76d73aaa3d339",
      "text": "Thinking I might do something similar to what you recommended Thompson... Collect ideas with some other tool, then migrate them into wiki. This obsidian sync thing will help with that. And if I write in a wiki style, I'm sure those MD files that collect in the asset folder can be converted into ghost pages and then forked in."
    },
    {
      "type": "paragraph",
      "id": "a72909042b09b292",
      "text": "Ward replies, Are you thinking that an html script in a Frame plugin would convert those, one at a time, to ghost pages that you could choose to keep?"
    },
    {
      "type": "paragraph",
      "id": "12104289be3bf84f",
      "text": "Would you like help getting started with that html script?"
    },
    {
      "type": "paragraph",
      "id": "9094ddd296f2a26a",
      "text": "Script would have several parts. See below.\nSeven parts, each three or four lines. That comes to about 25 lines. Which one would you want to do first?"
    },
    {
      "type": "pagefold",
      "id": "b606209c9c613bc2",
      "text": "tips"
    },
    {
      "type": "paragraph",
      "id": "3b331d0421408574",
      "text": "An html script has maybe one or two important statements for each part we outline. These will be connected by ordinary statements and punctuation left as an exercise for the reader."
    },
    {
      "type": "paragraph",
      "id": "11a6c8423d149379",
      "text": "html <div> that will show the list of files."
    },
    {
      "type": "code",
      "id": "260314df4ffaaf39",
      "text": "<div id=result onclick=doclick(event)>working</div>"
    },
    {
      "type": "paragraph",
      "id": "25a22bc1eeb5097a",
      "text": "script that would do the rest."
    },
    {
      "type": "code",
      "id": "7c06c7c412f3a1b2",
      "text": "<script type=module>\nimport * as frame from './frame.js'"
    },
    {
      "type": "paragraph",
      "id": "051dc6bfde9bbb27",
      "text": "script gets the list of assets and filters only .md files."
    },
    {
      "type": "code",
      "id": "4eec07eea6f325fa",
      "text": "const assets = await frame.assets() "
    },
    {
      "type": "paragraph",
      "id": "30135234a3462df9",
      "text": "script formats the list as <li> items that can be clicked."
    },
    {
      "type": "code",
      "id": "8262ba38bd3bc548",
      "text": "window.result.innerHTML = assets.map(asset =>\n  `<li data-url=\"${asset.url}\">${asset.file}</li>`)"
    },
    {
      "type": "paragraph",
      "id": "b9398e8f85c27bb0",
      "text": "script click handler reads the corresponding asset file."
    },
    {
      "type": "code",
      "id": "80fcda74143d6be2",
      "text": "const text = await fetch(event.target.dataset.url)\n  .then(res => res.text())"
    },
    {
      "type": "paragraph",
      "id": "aa3b096d9d318e4d",
      "text": "script click handler formats file contents as title and story."
    },
    {
      "type": "code",
      "id": "404b9853b594a311",
      "text": "const title = 'New Note from Obsidian'\nconst story = [{type:'markdown', text}]"
    },
    {
      "type": "paragraph",
      "id": "2c74cb17f88b8477",
      "text": "script click handler opens the ghost page with story."
    },
    {
      "type": "code",
      "id": "5f194552abfd1d5e",
      "text": "frame.open({title,story}, event.shiftKey) "
    },
    {
      "type": "paragraph",
      "id": "6aba29ae2cc2b60a",
      "text": "The test.html script and the frame.js scripts can be stored as assets and then added to a Frame plugin near the Obsidian md files."
    },
    {
      "type": "pagefold",
      "id": "225c8133c70490f0",
      "text": "."
    },
    {
      "type": "reference",
      "id": "049ef5f1b956fc16",
      "site": "code.fed.wiki",
      "slug": "frame-integration-promises",
      "title": "Frame Integration Promises",
      "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers found useful. [https://github.com/WardCunningham/assets/tree/master/pages/frame-integration-promises github]"
    },
    {
      "type": "paragraph",
      "id": "9639fbab96d1f73a",
      "text": "See also [[Better Obsidian Markup]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Integrating Obsidian",
        "story": []
      },
      "date": 1668308913525
    },
    {
      "item": {
        "type": "factory",
        "id": "3811484fd59f3196"
      },
      "id": "3811484fd59f3196",
      "type": "add",
      "date": 1668308915159
    },
    {
      "type": "edit",
      "id": "3811484fd59f3196",
      "item": {
        "type": "paragraph",
        "id": "3811484fd59f3196",
        "text": "Robert writes, Had success tonight syncing a folder on my phone that obsidian writes to, to a wiki asset folder using nextcloud... So I write in obsidian and markdown files with page names show up in the asset folder.\n"
      },
      "date": 1668308943607
    },
    {
      "type": "add",
      "id": "7dd76d73aaa3d339",
      "item": {
        "type": "paragraph",
        "id": "7dd76d73aaa3d339",
        "text": "Thinking I might do something similar to what you recommended Thompson... Collect ideas with some other tool, then migrate them into wiki. This obsidian sync thing will help with that. And if I write in a wiki style, I'm sure those MD files that collect in the asset folder can be converted into ghost pages and then forked in."
      },
      "after": "3811484fd59f3196",
      "date": 1668308945235
    },
    {
      "item": {
        "type": "factory",
        "id": "a72909042b09b292"
      },
      "id": "a72909042b09b292",
      "type": "add",
      "after": "7dd76d73aaa3d339",
      "date": 1668311002685
    },
    {
      "type": "edit",
      "id": "a72909042b09b292",
      "item": {
        "type": "paragraph",
        "id": "a72909042b09b292",
        "text": "Ward replies, Are you thinking that an html script in a Frame plugin would convert those, one at a time, to ghost pages that you could choose to keep?"
      },
      "date": 1668311022833
    },
    {
      "type": "add",
      "id": "12104289be3bf84f",
      "item": {
        "type": "paragraph",
        "id": "12104289be3bf84f",
        "text": "Wou"
      },
      "after": "a72909042b09b292",
      "date": 1668311064963
    },
    {
      "type": "edit",
      "id": "12104289be3bf84f",
      "item": {
        "type": "paragraph",
        "id": "12104289be3bf84f",
        "text": "Would you like help getting started with that html script?"
      },
      "date": 1668311074464
    },
    {
      "item": {
        "type": "factory",
        "id": "9094ddd296f2a26a"
      },
      "id": "9094ddd296f2a26a",
      "type": "add",
      "after": "12104289be3bf84f",
      "date": 1668311135971
    },
    {
      "type": "edit",
      "id": "9094ddd296f2a26a",
      "item": {
        "type": "paragraph",
        "id": "9094ddd296f2a26a",
        "text": "Script would have several parts. See below.\nSeven parts, each three or four lines. That comes to about 25 lines. Which one would you want to do first?"
      },
      "date": 1668311169562
    },
    {
      "item": {
        "type": "factory",
        "id": "b606209c9c613bc2"
      },
      "id": "b606209c9c613bc2",
      "type": "add",
      "after": "9094ddd296f2a26a",
      "date": 1668311174996
    },
    {
      "type": "edit",
      "id": "b606209c9c613bc2",
      "item": {
        "type": "pagefold",
        "id": "b606209c9c613bc2",
        "text": "tips"
      },
      "date": 1668311186538
    },
    {
      "item": {
        "type": "factory",
        "id": "3b331d0421408574"
      },
      "id": "3b331d0421408574",
      "type": "add",
      "after": "b606209c9c613bc2",
      "date": 1668311190257
    },
    {
      "type": "edit",
      "id": "3b331d0421408574",
      "item": {
        "type": "paragraph",
        "id": "3b331d0421408574",
        "text": "An html script has maybe one or two important statements for each part we outline. These will be connected by ordinary statements and punctuation left as an exercise for the reader."
      },
      "date": 1668311350570
    },
    {
      "type": "add",
      "id": "11a6c8423d149379",
      "item": {
        "type": "paragraph",
        "id": "11a6c8423d149379",
        "text": "html <div> that will show the list of files."
      },
      "after": "3b331d0421408574",
      "date": 1668311372222
    },
    {
      "type": "add",
      "id": "25a22bc1eeb5097a",
      "item": {
        "type": "paragraph",
        "id": "25a22bc1eeb5097a",
        "text": "script that would do the rest."
      },
      "after": "11a6c8423d149379",
      "date": 1668311376782
    },
    {
      "type": "add",
      "id": "051dc6bfde9bbb27",
      "item": {
        "type": "paragraph",
        "id": "051dc6bfde9bbb27",
        "text": "script gets the list of assets and filters only .md files."
      },
      "after": "25a22bc1eeb5097a",
      "date": 1668311381354
    },
    {
      "type": "add",
      "id": "30135234a3462df9",
      "item": {
        "type": "paragraph",
        "id": "30135234a3462df9",
        "text": "script formats the list as <li> items that can be clicked."
      },
      "after": "051dc6bfde9bbb27",
      "date": 1668311385463
    },
    {
      "type": "add",
      "id": "b9398e8f85c27bb0",
      "item": {
        "type": "paragraph",
        "id": "b9398e8f85c27bb0",
        "text": "script click handler reads the corresponding asset file."
      },
      "after": "30135234a3462df9",
      "date": 1668311389866
    },
    {
      "type": "add",
      "id": "aa3b096d9d318e4d",
      "item": {
        "type": "paragraph",
        "id": "aa3b096d9d318e4d",
        "text": "script click handler formats file contents as title and story."
      },
      "after": "b9398e8f85c27bb0",
      "date": 1668311393152
    },
    {
      "type": "add",
      "id": "2c74cb17f88b8477",
      "item": {
        "type": "paragraph",
        "id": "2c74cb17f88b8477",
        "text": "script click handler opens the ghost page with title and story."
      },
      "after": "aa3b096d9d318e4d",
      "date": 1668311401849
    },
    {
      "item": {
        "type": "factory",
        "id": "260314df4ffaaf39"
      },
      "id": "260314df4ffaaf39",
      "type": "add",
      "after": "2c74cb17f88b8477",
      "date": 1668311420662
    },
    {
      "type": "edit",
      "id": "260314df4ffaaf39",
      "item": {
        "type": "code",
        "id": "260314df4ffaaf39",
        "text": "<div id=result>working</div>"
      },
      "date": 1668311456979
    },
    {
      "id": "260314df4ffaaf39",
      "type": "move",
      "order": [
        "3811484fd59f3196",
        "7dd76d73aaa3d339",
        "a72909042b09b292",
        "12104289be3bf84f",
        "9094ddd296f2a26a",
        "b606209c9c613bc2",
        "3b331d0421408574",
        "11a6c8423d149379",
        "260314df4ffaaf39",
        "25a22bc1eeb5097a",
        "051dc6bfde9bbb27",
        "30135234a3462df9",
        "b9398e8f85c27bb0",
        "aa3b096d9d318e4d",
        "2c74cb17f88b8477"
      ],
      "date": 1668311461933
    },
    {
      "type": "add",
      "id": "7c06c7c412f3a1b2",
      "item": {
        "type": "factory",
        "id": "7c06c7c412f3a1b2",
        "text": "<script type=module"
      },
      "after": "25a22bc1eeb5097a",
      "date": 1668311488348
    },
    {
      "type": "edit",
      "id": "7c06c7c412f3a1b2",
      "item": {
        "type": "code",
        "id": "7c06c7c412f3a1b2",
        "text": "<script type=module>"
      },
      "date": 1668311494018
    },
    {
      "type": "edit",
      "id": "7c06c7c412f3a1b2",
      "item": {
        "type": "code",
        "id": "7c06c7c412f3a1b2",
        "text": "<script type=module>\nimport * as frame from 'http://code.fed.wiki/assets/v1/frame.js'"
      },
      "date": 1668311552094
    },
    {
      "type": "edit",
      "id": "7c06c7c412f3a1b2",
      "item": {
        "type": "code",
        "id": "7c06c7c412f3a1b2",
        "text": "<script type=module>\nimport * as frame from './frame.js'"
      },
      "date": 1668311577966
    },
    {
      "type": "add",
      "id": "4eec07eea6f325fa",
      "item": {
        "type": "paragraph",
        "id": "4eec07eea6f325fa",
        "text": "const assets = await frame.assets()"
      },
      "after": "051dc6bfde9bbb27",
      "date": 1668311659176
    },
    {
      "type": "edit",
      "id": "4eec07eea6f325fa",
      "item": {
        "type": "code",
        "id": "4eec07eea6f325fa",
        "text": "const assets = await frame.assets() "
      },
      "date": 1668311669556
    },
    {
      "type": "add",
      "id": "8262ba38bd3bc548",
      "item": {
        "type": "paragraph",
        "id": "8262ba38bd3bc548",
        "text": "window.result = assets.map(asset =>"
      },
      "after": "30135234a3462df9",
      "date": 1668311807367
    },
    {
      "type": "add",
      "id": "cf35c9c8d3ce1341",
      "item": {
        "type": "paragraph",
        "id": "cf35c9c8d3ce1341",
        "text": "`<li data-url=\"${asset.url}>$"
      },
      "after": "8262ba38bd3bc548",
      "date": 1668311878935
    },
    {
      "type": "edit",
      "id": "260314df4ffaaf39",
      "item": {
        "type": "code",
        "id": "260314df4ffaaf39",
        "text": "<div id=result onclick=doclick(event)>working</div>"
      },
      "date": 1668311898614
    },
    {
      "type": "remove",
      "id": "cf35c9c8d3ce1341",
      "date": 1668311941251
    },
    {
      "type": "edit",
      "id": "8262ba38bd3bc548",
      "item": {
        "type": "factory",
        "id": "8262ba38bd3bc548",
        "text": "window.result = assets.map(asset =>`<li data-url=\"${asset.url}>$"
      },
      "date": 1668311943365
    },
    {
      "type": "edit",
      "id": "8262ba38bd3bc548",
      "item": {
        "type": "code",
        "id": "8262ba38bd3bc548",
        "text": "window.result = assets.map(asset =>\n  `<li data-url=\"${asset.url}>${asset.file}</li>`)"
      },
      "date": 1668311979121
    },
    {
      "type": "add",
      "id": "80fcda74143d6be2",
      "item": {
        "type": "paragraph",
        "id": "80fcda74143d6be2",
        "text": "const text = await fetch(event.target.dataset.url)"
      },
      "after": "b9398e8f85c27bb0",
      "date": 1668312069931
    },
    {
      "type": "edit",
      "id": "80fcda74143d6be2",
      "item": {
        "type": "code",
        "id": "80fcda74143d6be2",
        "text": "const text = await fetch(event.target.dataset.url)\n  .then(res => res.text())"
      },
      "date": 1668312114930
    },
    {
      "type": "add",
      "id": "404b9853b594a311",
      "item": {
        "type": "paragraph",
        "id": "404b9853b594a311",
        "text": "const title = 'New Note from Obsidian'"
      },
      "after": "aa3b096d9d318e4d",
      "date": 1668312251335
    },
    {
      "type": "edit",
      "id": "404b9853b594a311",
      "item": {
        "type": "code",
        "id": "404b9853b594a311",
        "text": "const title = 'New Note from Obsidian'\nconst story = [{type:'markdown', text}]"
      },
      "date": 1668312290124
    },
    {
      "type": "edit",
      "id": "2c74cb17f88b8477",
      "item": {
        "type": "paragraph",
        "id": "2c74cb17f88b8477",
        "text": "script click handler opens the ghost page with story."
      },
      "date": 1668312313015
    },
    {
      "type": "add",
      "id": "5f194552abfd1d5e",
      "item": {
        "type": "paragraph",
        "id": "5f194552abfd1d5e",
        "text": "frame.open({title,story}, event.shiftKey)"
      },
      "after": "2c74cb17f88b8477",
      "date": 1668312374959
    },
    {
      "type": "edit",
      "id": "5f194552abfd1d5e",
      "item": {
        "type": "code",
        "id": "5f194552abfd1d5e",
        "text": "frame.open({title,story}, event.shiftKey) "
      },
      "date": 1668312385284
    },
    {
      "item": {
        "type": "factory",
        "id": "6aba29ae2cc2b60a"
      },
      "id": "6aba29ae2cc2b60a",
      "type": "add",
      "after": "5f194552abfd1d5e",
      "date": 1668312595742
    },
    {
      "type": "edit",
      "id": "6aba29ae2cc2b60a",
      "item": {
        "type": "paragraph",
        "id": "6aba29ae2cc2b60a",
        "text": "The test.html script and the frame.js scripts can be stored as assets and then added to a Frame plugin under the Obsidian assets. "
      },
      "date": 1668312841331
    },
    {
      "type": "edit",
      "id": "6aba29ae2cc2b60a",
      "item": {
        "type": "paragraph",
        "id": "6aba29ae2cc2b60a",
        "text": "The test.html script and the frame.js scripts can be stored as assets and then added to a Frame plugin near the Obsidian md files."
      },
      "date": 1668312886470
    },
    {
      "item": {
        "type": "factory",
        "id": "049ef5f1b956fc16"
      },
      "id": "049ef5f1b956fc16",
      "type": "add",
      "after": "6aba29ae2cc2b60a",
      "date": 1668312893564
    },
    {
      "type": "edit",
      "id": "049ef5f1b956fc16",
      "item": {
        "type": "reference",
        "id": "049ef5f1b956fc16",
        "site": "code.fed.wiki",
        "slug": "frame-integration-promises",
        "title": "Frame Integration Promises",
        "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers found useful. [https://github.com/WardCunningham/assets/tree/master/pages/frame-integration-promises github]"
      },
      "date": 1668312903422
    },
    {
      "item": {
        "type": "factory",
        "id": "225c8133c70490f0"
      },
      "id": "225c8133c70490f0",
      "type": "add",
      "after": "049ef5f1b956fc16",
      "date": 1668312914158
    },
    {
      "type": "edit",
      "id": "225c8133c70490f0",
      "item": {
        "type": "pagefold",
        "id": "225c8133c70490f0",
        "text": "."
      },
      "date": 1668312917254
    },
    {
      "id": "225c8133c70490f0",
      "type": "move",
      "order": [
        "3811484fd59f3196",
        "7dd76d73aaa3d339",
        "a72909042b09b292",
        "12104289be3bf84f",
        "9094ddd296f2a26a",
        "b606209c9c613bc2",
        "3b331d0421408574",
        "11a6c8423d149379",
        "260314df4ffaaf39",
        "25a22bc1eeb5097a",
        "7c06c7c412f3a1b2",
        "051dc6bfde9bbb27",
        "4eec07eea6f325fa",
        "30135234a3462df9",
        "8262ba38bd3bc548",
        "b9398e8f85c27bb0",
        "80fcda74143d6be2",
        "aa3b096d9d318e4d",
        "404b9853b594a311",
        "2c74cb17f88b8477",
        "5f194552abfd1d5e",
        "225c8133c70490f0",
        "6aba29ae2cc2b60a",
        "049ef5f1b956fc16"
      ],
      "date": 1668312920842
    },
    {
      "id": "225c8133c70490f0",
      "type": "move",
      "order": [
        "3811484fd59f3196",
        "7dd76d73aaa3d339",
        "a72909042b09b292",
        "12104289be3bf84f",
        "9094ddd296f2a26a",
        "b606209c9c613bc2",
        "3b331d0421408574",
        "11a6c8423d149379",
        "260314df4ffaaf39",
        "25a22bc1eeb5097a",
        "7c06c7c412f3a1b2",
        "051dc6bfde9bbb27",
        "4eec07eea6f325fa",
        "30135234a3462df9",
        "8262ba38bd3bc548",
        "b9398e8f85c27bb0",
        "80fcda74143d6be2",
        "aa3b096d9d318e4d",
        "404b9853b594a311",
        "2c74cb17f88b8477",
        "5f194552abfd1d5e",
        "6aba29ae2cc2b60a",
        "225c8133c70490f0",
        "049ef5f1b956fc16"
      ],
      "date": 1668312930075
    },
    {
      "type": "edit",
      "id": "8262ba38bd3bc548",
      "item": {
        "type": "code",
        "id": "8262ba38bd3bc548",
        "text": "window.result = assets.map(asset =>\n  `<li data-url=\"${asset.url}\">${asset.file}</li>`)"
      },
      "date": 1668313324264
    },
    {
      "item": {
        "type": "factory",
        "id": "9639fbab96d1f73a"
      },
      "id": "9639fbab96d1f73a",
      "type": "add",
      "after": "049ef5f1b956fc16",
      "date": 1668313542494
    },
    {
      "type": "edit",
      "id": "9639fbab96d1f73a",
      "item": {
        "type": "paragraph",
        "id": "9639fbab96d1f73a",
        "text": "See also [[Better Obsidian Markup]]"
      },
      "date": 1668313564486
    },
    {
      "type": "edit",
      "id": "8262ba38bd3bc548",
      "item": {
        "type": "code",
        "id": "8262ba38bd3bc548",
        "text": "window.result.innerHTML = assets.map(asset =>\n  `<li data-url=\"${asset.url}\">${asset.file}</li>`)"
      },
      "date": 1668354539830
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1669244061999
    }
  ]
}