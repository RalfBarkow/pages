{
  "title": "painlessMesh",
  "story": [
    {
      "type": "markdown",
      "id": "7b9cca62107e4a28",
      "text": "The so called *painlessMesh* is a WiFi mesh network library specifically written for the [[ESP8266]] platforms, and is actively maintained by the community. It is called painlessMesh for it is intended to be auto-configure and easy to setup. It is an ad-hoc network which requires neither routing plan nor central controller, and all nodes are equal."
    },
    {
      "type": "paragraph",
      "id": "04a081dc9e031388",
      "text": "The painlessMesh library is unique for it enables the resource limited ESP8266 device to form a mesh network. Two or more modules, also called nodes, with the same SSID (service set identifier) will be automatically connected to form a mesh network. The topology is in fact not a full mesh network. Due to constrained resources, cyclic paths are actively avoided so that routing tasks can be greatly simplified. The formed network actually is more resembling a star network. However, it differs from a usual WiFi star network that typically consists of a central access point to which one or more stations are connected. In the painlessMesh network, each node can serve as both an access point for other nodes to connect to, and also a station connecting to another node."
    },
    {
      "type": "paragraph",
      "id": "e98f133c9786c9a9",
      "text": "Every node is aware of the whole network topology which is updated periodically every 3 seconds. Every node tells its neighbors about other nodes it is directly or indirectly connected to. A node’s station which is not connected to any access point will actively look for an access point that has the strongest signal but is not listed yet in its network topology. This mechanism prevents the formation of cyclic paths. So there will be only a single path between a pair of nodes. Figure 1 shows the diagram of a painlessMesh network."
    },
    {
      "type": "paragraph",
      "id": "b793beb4174491e0",
      "text": "The painlessMesh works on layer 3 but not based on IP addressing. Instead, each node is distinguished by a unique 32-bit number taken from the chip MAC address. Communication in the mesh is done via JSON formatted messaging. Although it is less efficient than low level binary messaging, it is easier for users to understand and to incorporate in Javascript or web applications. There are two types of user message, i.e. single and broadcast message. Single message is sent from a node to another specific node, whereas broadcast message is addressed to all other nodes connected in the network. All nodes are time synchronized with a precision of less than 10 ms. This is useful for the nodes to run synchronous tasks [13]. The painlessMesh library used in this experiment is of version 1.0.1."
    },
    {
      "type": "paragraph",
      "id": "744fbfb0dc2f1dda",
      "text": "Mesh network offers its usefulness by allowing a collection of ESP8266 nodes to cover larger area through multi-hop messaging. Any nodes within reachable range will be automatically forming a mesh network. Therefore, the mesh network also leverages the network reliability by automatically joining to a neighboring network in the event of disconnection. These features may open up new potential applications."
    },
    {
      "type": "paragraph",
      "id": "3bfe386c90f50b05",
      "text": "For example, this might find applications in smart LED lighting in passenger trains. The lighting in every coach is controlled by a node. Every node is connected to its neighboring nodes and such that forming a linear network. This solution might be impractical in the usual star topology because the total length of a passenger train is most likely out of the WiFi coverage."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "painlessMesh",
        "story": []
      },
      "date": 1663153248966
    },
    {
      "item": {
        "type": "factory",
        "id": "7b9cca62107e4a28"
      },
      "id": "7b9cca62107e4a28",
      "type": "add",
      "date": 1663153256921
    },
    {
      "type": "edit",
      "id": "7b9cca62107e4a28",
      "item": {
        "type": "paragraph",
        "id": "7b9cca62107e4a28",
        "text": "The so called painlessMesh is a WiFi mesh network library specifically written for the ESP8266 platforms, and is actively maintained by the community. It is called painlessMesh for it is intended to be auto-configure and easy to setup. It is an ad-hoc network which requires neither routing plan nor central controller, and all nodes are equal."
      },
      "date": 1663153258430
    },
    {
      "type": "edit",
      "id": "7b9cca62107e4a28",
      "item": {
        "type": "paragraph",
        "id": "7b9cca62107e4a28",
        "text": "The so called *painlessMesh* is a WiFi mesh network library specifically written for the ESP8266 platforms, and is actively maintained by the community. It is called painlessMesh for it is intended to be auto-configure and easy to setup. It is an ad-hoc network which requires neither routing plan nor central controller, and all nodes are equal."
      },
      "date": 1663153267380
    },
    {
      "type": "edit",
      "id": "7b9cca62107e4a28",
      "item": {
        "type": "markdown",
        "id": "7b9cca62107e4a28",
        "text": "The so called *painlessMesh* is a WiFi mesh network library specifically written for the ESP8266 platforms, and is actively maintained by the community. It is called painlessMesh for it is intended to be auto-configure and easy to setup. It is an ad-hoc network which requires neither routing plan nor central controller, and all nodes are equal."
      },
      "date": 1663153268997
    },
    {
      "type": "edit",
      "id": "7b9cca62107e4a28",
      "item": {
        "type": "markdown",
        "id": "7b9cca62107e4a28",
        "text": "The so called *painlessMesh* is a WiFi mesh network library specifically written for the [[ESP8266]] platforms, and is actively maintained by the community. It is called painlessMesh for it is intended to be auto-configure and easy to setup. It is an ad-hoc network which requires neither routing plan nor central controller, and all nodes are equal."
      },
      "date": 1663153279693
    },
    {
      "item": {
        "type": "factory",
        "id": "04a081dc9e031388"
      },
      "id": "04a081dc9e031388",
      "type": "add",
      "after": "7b9cca62107e4a28",
      "date": 1663153305766
    },
    {
      "type": "edit",
      "id": "04a081dc9e031388",
      "item": {
        "type": "paragraph",
        "id": "04a081dc9e031388",
        "text": "The painlessMesh library is unique for it enables the resource limited ESP8266 device to form a mesh network. Two or more modules, also called nodes, with the same SSID (service set identifier) will be automatically connected to form a mesh network. The topology is in fact not a full mesh network. Due to constrained resources, cyclic paths are actively avoided so that routing tasks can be greatly simplified. The formed network actually is more resembling a star network. However, it differs from a usual WiFi star network that typically consists of a central access point to which one or more stations are connected. In the painlessMesh network, each node can serve as both an access point for other nodes to connect to, and also a station connecting to another node."
      },
      "date": 1663153307080
    },
    {
      "item": {
        "type": "factory",
        "id": "e98f133c9786c9a9"
      },
      "id": "e98f133c9786c9a9",
      "type": "add",
      "after": "04a081dc9e031388",
      "date": 1663153348460
    },
    {
      "type": "edit",
      "id": "e98f133c9786c9a9",
      "item": {
        "type": "paragraph",
        "id": "e98f133c9786c9a9",
        "text": "Every node is aware of the whole network topology which is updated periodically every 3 seconds. Every node tells its neighbors about other nodes it is directly or indirectly connected to. A node’s station which is not connected to any access point will actively look for an access point that has the strongest signal but is not listed yet in its network topology. This mechanism prevents the formation of cyclic paths. So there will be only a single path between a pair of nodes. Figure 1 shows the diagram of a painlessMesh network."
      },
      "date": 1663153349909
    },
    {
      "item": {
        "type": "factory",
        "id": "b793beb4174491e0"
      },
      "id": "b793beb4174491e0",
      "type": "add",
      "after": "e98f133c9786c9a9",
      "date": 1663153370358
    },
    {
      "type": "edit",
      "id": "b793beb4174491e0",
      "item": {
        "type": "paragraph",
        "id": "b793beb4174491e0",
        "text": "The painlessMesh works on layer 3 but not based on IP addressing. Instead, each node is distinguished by a unique 32-bit number taken from the chip MAC address. Communication in the mesh is done via JSON formatted messaging. Although it is less efficient than low level binary messaging, it is easier for users to understand and to incorporate in Javascript or web applications. There are two types of user message, i.e. single and broadcast message. Single message is sent from a node to another specific node, whereas broadcast message is addressed to all other nodes connected in the network. All nodes are time synchronized with a precision of less than 10 ms. This is useful for the nodes to run synchronous tasks [13]. The painlessMesh library used in this experiment is of version 1.0.1."
      },
      "date": 1663153371841
    },
    {
      "item": {
        "type": "factory",
        "id": "744fbfb0dc2f1dda"
      },
      "id": "744fbfb0dc2f1dda",
      "type": "add",
      "after": "b793beb4174491e0",
      "date": 1663153416897
    },
    {
      "type": "edit",
      "id": "744fbfb0dc2f1dda",
      "item": {
        "type": "paragraph",
        "id": "744fbfb0dc2f1dda",
        "text": "Mesh network offers its usefulness by allowing a collection of ESP8266 nodes to cover larger area through multi-hop messaging. Any nodes within reachable range will be automatically forming a mesh network. Therefore, the mesh network also leverages the network reliability by automatically joining to a neighboring network in the event of disconnection. These features may open up new potential applications."
      },
      "date": 1663153418397
    },
    {
      "item": {
        "type": "factory",
        "id": "3bfe386c90f50b05"
      },
      "id": "3bfe386c90f50b05",
      "type": "add",
      "after": "744fbfb0dc2f1dda",
      "date": 1663153454145
    },
    {
      "type": "edit",
      "id": "3bfe386c90f50b05",
      "item": {
        "type": "paragraph",
        "id": "3bfe386c90f50b05",
        "text": "For example, this might find applications in smart LED lighting in passenger trains. The lighting in every coach is controlled by a node. Every node is connected to its neighboring nodes and such that forming a linear network. This solution might be impractical in the usual star topology because the total length of a passenger train is most likely out of the WiFi coverage."
      },
      "date": 1663153455668
    }
  ]
}