{
  "title": "GtExternalProcessBuilder",
  "story": [
    {
      "type": "markdown",
      "id": "dd013518a9bee474",
      "text": "# External process builder\nA process builder, providing fine-grained control over how a new process should be spawned.\nA default configuration can be generated using:\n{{gtExample:GtExternalProcessExamples>>defaultProcessBuilder}}\n \n"
    },
    {
      "type": "code",
      "id": "90d6749c706ca612",
      "text": "defaultProcessBuilder\n\t<gtExample>\n\t| aProcessBuilder |\n\t\n\taProcessBuilder := GtExternalProcessBuilder new\n\t\tcommand: 'date'.\n\t\t\n\t^ aProcessBuilder"
    },
    {
      "type": "markdown",
      "id": "4c8900ac59e572be",
      "text": "Additional builder methods allow the configuration to be changed (for example, by adding arguments) prior to spawning:\n{{gtExample:GtExternalProcessExamples>>echoHello}}"
    },
    {
      "type": "code",
      "id": "9b35bb9141a216de",
      "text": "echoHello\n\t<gtExample>\n\t| anOutput anStdout |\n\t\n\tanOutput := OSPlatform current isWindows\n\t\tifTrue: [\n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'cmd';\n\t\t\t\targs: #('/C' 'echo hello');\n\t\t\t\toutput ]\n\t\tifFalse: [ \n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'sh';\n\t\t\t\targs: #('-c' 'echo hello');\n\t\t\t\toutput ].\n\n\tanStdout := anOutput stdout trimBoth.\n\tself assert: anStdout equals: 'hello'.\n\t\n\t^ anStdout"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "GtExternalProcessBuilder",
        "story": []
      },
      "date": 1662035988025
    },
    {
      "item": {
        "type": "factory",
        "id": "dd013518a9bee474"
      },
      "id": "dd013518a9bee474",
      "type": "add",
      "date": 1662036001621
    },
    {
      "type": "edit",
      "id": "dd013518a9bee474",
      "item": {
        "type": "markdown",
        "id": "dd013518a9bee474",
        "text": "# External process builder\nA process builder, providing fine-grained control over how a new process should be spawned.\nA default configuration can be generated using:\n{{gtExample:GtExternalProcessExamples>>defaultProcessBuilder}}\n \n"
      },
      "date": 1662036004243
    },
    {
      "type": "fork",
      "date": 1662036023072
    },
    {
      "type": "edit",
      "id": "dd013518a9bee474",
      "item": {
        "type": "markdown",
        "id": "dd013518a9bee474",
        "text": "# External process builder\nA process builder, providing fine-grained control over how a new process should be spawned.\nA default configuration can be generated using:\n{{gtExample:GtExternalProcessExamples>>defaultProcessBuilder}}\n \n"
      },
      "date": 1662036028339
    },
    {
      "item": {
        "type": "code",
        "id": "9b35bb9141a216de",
        "text": "echoHello\n\t<gtExample>\n\t| anOutput anStdout |\n\t\n\tanOutput := OSPlatform current isWindows\n\t\tifTrue: [\n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'cmd';\n\t\t\t\targs: #('/C' 'echo hello');\n\t\t\t\toutput ]\n\t\tifFalse: [ \n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'sh';\n\t\t\t\targs: #('-c' 'echo hello');\n\t\t\t\toutput ].\n\n\tanStdout := anOutput stdout trimBoth.\n\tself assert: anStdout equals: 'hello'.\n\t\n\t^ anStdout"
      },
      "id": "9b35bb9141a216de",
      "type": "add",
      "after": "dd013518a9bee474",
      "date": 1662036059859
    },
    {
      "type": "edit",
      "id": "dd013518a9bee474",
      "item": {
        "type": "markdown",
        "id": "dd013518a9bee474",
        "text": "# External process builder\nA process builder, providing fine-grained control over how a new process should be spawned.\nA default configuration can be generated using:\n{{gtExample:GtExternalProcessExamples>>defaultProcessBuilder}}\n \n"
      },
      "date": 1662036071695
    },
    {
      "item": {
        "type": "code",
        "id": "90d6749c706ca612",
        "text": "defaultProcessBuilder\n\t<gtExample>\n\t| aProcessBuilder |\n\t\n\taProcessBuilder := GtExternalProcessBuilder new\n\t\tcommand: 'date'.\n\t\t\n\t^ aProcessBuilder"
      },
      "id": "90d6749c706ca612",
      "type": "add",
      "after": "9b35bb9141a216de",
      "date": 1662036075085
    },
    {
      "id": "90d6749c706ca612",
      "type": "move",
      "order": [
        "dd013518a9bee474",
        "90d6749c706ca612",
        "4c8900ac59e572be",
        "9b35bb9141a216de"
      ],
      "date": 1662036077512,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "4c8900ac59e572be",
      "item": {
        "type": "markdown",
        "id": "4c8900ac59e572be",
        "text": "Additional builder methods allow the configuration to be changed (for example, by adding arguments) prior to spawning:\n{{gtExample:GtExternalProcessExamples>>echoHello}}"
      },
      "after": "dd013518a9bee474",
      "date": 1662036079498
    },
    {
      "type": "edit",
      "id": "90d6749c706ca612",
      "item": {
        "type": "code",
        "id": "90d6749c706ca612",
        "text": "defaultProcessBuilder\n\t<gtExample>\n\t| aProcessBuilder |\n\t\n\taProcessBuilder := GtExternalProcessBuilder new\n\t\tcommand: 'date'.\n\t\t\n\t^ aProcessBuilder"
      },
      "date": 1662036080341
    },
    {
      "type": "edit",
      "id": "9b35bb9141a216de",
      "item": {
        "type": "code",
        "id": "9b35bb9141a216de",
        "text": "echoHello\n\t<gtExample>\n\t| anOutput anStdout |\n\t\n\tanOutput := OSPlatform current isWindows\n\t\tifTrue: [\n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'cmd';\n\t\t\t\targs: #('/C' 'echo hello');\n\t\t\t\toutput ]\n\t\tifFalse: [ \n\t\t\tGtExternalProcessBuilder new\n\t\t\t\tcommand: 'sh';\n\t\t\t\targs: #('-c' 'echo hello');\n\t\t\t\toutput ].\n\n\tanStdout := anOutput stdout trimBoth.\n\tself assert: anStdout equals: 'hello'.\n\t\n\t^ anStdout"
      },
      "date": 1662036116887
    },
    {
      "type": "fork",
      "date": 1662036119178
    },
    {
      "id": "90d6749c706ca612",
      "type": "move",
      "order": [
        "dd013518a9bee474",
        "90d6749c706ca612",
        "4c8900ac59e572be",
        "9b35bb9141a216de"
      ],
      "date": 1662036162343
    }
  ]
}