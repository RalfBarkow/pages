{
  "title": "Subclass Responsibility",
  "story": [
    {
      "type": "paragraph",
      "id": "2826c5df66d9ac9d",
      "text": "The implementation of primitive operations must be the responsibility of the subclasses.\n"
    },
    {
      "type": "markdown",
      "id": "4fe03cfb099f8ace",
      "text": "For messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The `[[subclassResponsibility]]` protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire [[protocol]] specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
    },
    {
      "type": "code",
      "id": "06fbce27effd6729",
      "text": "self subclassResponsibility"
    },
    {
      "type": "pagefold",
      "id": "90c326aeeb3bb840",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "c3b16b97f0fbb808",
      "text": "LALONDE, Wilf R. and PUGH, John R., 1990. [[Inside Smalltalk]].  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00c , p. 61"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Subclass Responsibility",
        "story": []
      },
      "date": 1660889888525
    },
    {
      "item": {
        "type": "factory",
        "id": "2826c5df66d9ac9d"
      },
      "id": "2826c5df66d9ac9d",
      "type": "add",
      "date": 1660889891019
    },
    {
      "type": "edit",
      "id": "2826c5df66d9ac9d",
      "item": {
        "type": "paragraph",
        "id": "2826c5df66d9ac9d",
        "text": "The implementation of primitive operations must be the responsibility of the subclasses.\nFor messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The subclassResponsibility protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire protocol specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\nself subclassResponsibility"
      },
      "date": 1660889909090
    },
    {
      "item": {
        "type": "factory",
        "id": "06fbce27effd6729"
      },
      "id": "06fbce27effd6729",
      "type": "add",
      "after": "2826c5df66d9ac9d",
      "date": 1660889913151
    },
    {
      "type": "edit",
      "id": "2826c5df66d9ac9d",
      "item": {
        "type": "paragraph",
        "id": "2826c5df66d9ac9d",
        "text": "The implementation of primitive operations must be the responsibility of the subclasses.\nFor messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The subclassResponsibility protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire protocol specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
      },
      "date": 1660889921853
    },
    {
      "type": "edit",
      "id": "06fbce27effd6729",
      "item": {
        "type": "code",
        "id": "06fbce27effd6729",
        "text": "self subclassResponsibility"
      },
      "date": 1660889922475
    },
    {
      "item": {
        "type": "factory",
        "id": "90c326aeeb3bb840"
      },
      "id": "90c326aeeb3bb840",
      "type": "add",
      "after": "06fbce27effd6729",
      "date": 1660889958535
    },
    {
      "type": "edit",
      "id": "90c326aeeb3bb840",
      "item": {
        "type": "pagefold",
        "id": "90c326aeeb3bb840",
        "text": "~"
      },
      "date": 1660889961296
    },
    {
      "item": {
        "type": "factory",
        "id": "c3b16b97f0fbb808"
      },
      "id": "c3b16b97f0fbb808",
      "type": "add",
      "after": "90c326aeeb3bb840",
      "date": 1660889963105
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "paragraph",
        "id": "c3b16b97f0fbb808",
        "text": "\nLALONDE, Wilf R. and PUGH, John R., 1990. Inside Smalltalk.  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00cQA76.73.S59 L35 1990\n"
      },
      "date": 1660889965049
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "markdown",
        "id": "c3b16b97f0fbb808",
        "text": "\nLALONDE, Wilf R. and PUGH, John R., 1990. Inside Smalltalk.  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00cQA76.73.S59 L35 1990\n"
      },
      "date": 1660889976107
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "markdown",
        "id": "c3b16b97f0fbb808",
        "text": "LALONDE, Wilf R. and PUGH, John R., 1990. Inside Smalltalk.  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00c"
      },
      "date": 1660889999459
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "markdown",
        "id": "c3b16b97f0fbb808",
        "text": "LALONDE, Wilf R. and PUGH, John R., 1990. [[Inside Smalltalk]].  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00c"
      },
      "date": 1660890070787
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "markdown",
        "id": "c3b16b97f0fbb808",
        "text": "LALONDE, Wilf R. and PUGH, John R., 1990. [[Inside Smalltalk]].  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00c , p. "
      },
      "date": 1660890109100
    },
    {
      "type": "edit",
      "id": "c3b16b97f0fbb808",
      "item": {
        "type": "markdown",
        "id": "c3b16b97f0fbb808",
        "text": "LALONDE, Wilf R. and PUGH, John R., 1990. [[Inside Smalltalk]].  Online. Englewood Cliffs, N.J: Prentice Hall. [Accessed 1 June 2021]. ISBN 978-0-13-468414-7. Available from: https://ur.zlibcdn2.com/book/679577/a5e00c , p. 61"
      },
      "date": 1660890115350
    },
    {
      "type": "edit",
      "id": "2826c5df66d9ac9d",
      "item": {
        "type": "paragraph",
        "id": "2826c5df66d9ac9d",
        "text": "The implementation of primitive operations must be the responsibility of the subclasses.\n"
      },
      "date": 1660890124736
    },
    {
      "type": "add",
      "id": "4fe03cfb099f8ace",
      "item": {
        "type": "paragraph",
        "id": "4fe03cfb099f8ace",
        "text": "For messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The subclassResponsibility protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire protocol specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
      },
      "after": "2826c5df66d9ac9d",
      "date": 1660890125470
    },
    {
      "type": "edit",
      "id": "4fe03cfb099f8ace",
      "item": {
        "type": "paragraph",
        "id": "4fe03cfb099f8ace",
        "text": "For messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The `[[subclassResponsibility]]` protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire protocol specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
      },
      "date": 1660890207284
    },
    {
      "type": "edit",
      "id": "4fe03cfb099f8ace",
      "item": {
        "type": "markdown",
        "id": "4fe03cfb099f8ace",
        "text": "For messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The `[[subclassResponsibility]]` protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire protocol specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
      },
      "date": 1660890209296
    },
    {
      "type": "edit",
      "id": "4fe03cfb099f8ace",
      "item": {
        "type": "markdown",
        "id": "4fe03cfb099f8ace",
        "text": "For messages where it is the responsibility of a subclass to provide the implementation, an abstract class implements the method by generating an error message. The `[[subclassResponsibility]]` protocol supported by class Object can be used to generate a message indicating that a subclass should have overridden the implementation of this method. This is useful when a new subclass is added and the programmer forgets to implement the entire [[protocol]] specified by the abstract superclass. Methods in the abstract class that must be re-implemented by subclasses should have the body\n"
      },
      "date": 1660890644567
    }
  ]
}