{
  "title": "Work Flow",
  "story": [
    {
      "type": "html",
      "text": "See also [[Work Flow Literature]]",
      "id": "eb5480bea46a2b152c0a786100e10424"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "People interested in workflow:",
      "id": "d19fcb3bafe778b63f64ac866b463153"
    },
    {
      "type": "html",
      "text": " [[Bobby Woolf]]",
      "id": "b666458560c7d803bd072439fb6d4bfc"
    },
    {
      "type": "html",
      "text": " [[Dragos Manolescu]]",
      "id": "7dd2614605ef713bf09f1d390365007c"
    },
    {
      "type": "html",
      "text": " [[Russell Gold]]",
      "id": "7f9a08ad296a1178138dde8f9b16271d"
    },
    {
      "type": "html",
      "text": " [[Walden Mathews]]",
      "id": "4783a821d294b66b2e72e1a732556e19"
    },
    {
      "type": "html",
      "text": " [[John Harby]]",
      "id": "a859e368acf7643aaf24058e006bad52"
    },
    {
      "type": "html",
      "text": " [[Olaf Kummer]]",
      "id": "0793ffcaf1cb394f54d862e9d5cc490e"
    },
    {
      "type": "html",
      "text": " [[Geraldo Xexeo]]",
      "id": "4048607838a5a654b078379e4c972df4"
    },
    {
      "type": "html",
      "text": " [[Michael Wax]]",
      "id": "e8fe0a7b8347b0332476aef2f302ecc5"
    },
    {
      "type": "html",
      "text": " [[Steph Mader]]",
      "id": "94dd5dcd8201feb81dbdfa461b395a93"
    },
    {
      "type": "html",
      "text": " [[Craig Cameron]]",
      "id": "159bbd36eef911fe5bbd8de72fc4b9fd"
    },
    {
      "type": "html",
      "text": " (add yourself here)",
      "id": "cdf62fd09b488f0adb1f8bd15a07c15d"
    },
    {
      "type": "html",
      "text": "Also, see the Workflow Management Coalition site [[http://www.wfmc.org/ www.wfmc.org]] and [[Verve Product]].",
      "id": "a3e0f75837ffced7fc1ab50fc4e2764e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "<b>Context</b>",
      "id": "517304d1e0eb25fd781e663bbee51ba4"
    },
    {
      "type": "html",
      "text": "\nMost commercial applications manage a lot of complex information. Users usually construct complex business objects by following structured dialogs. The system will compute various attributes for the user. Applications usually create these business objects with monolithic procedural code. This makes it hard to re-model the application and re-use work-flow behaviours between applications.",
      "id": "67af28e6286994a400c588e3f6210790"
    },
    {
      "type": "html",
      "text": "<b>Solution</b>",
      "id": "4d436df014885dc9dad5922ac53800c8"
    },
    {
      "type": "html",
      "text": "\nManage dialog flows with a workflow framework that lets you describe an application's dialog flow in a declarative and abstract fashion. The same framework may be used to map the corresponding business objects to and from the associated workflow objects.",
      "id": "02caaef1e0e0ca059040ddec27f4bb62"
    },
    {
      "type": "html",
      "text": "<b>Example</b>",
      "id": "028a235885caa9d2f68b5ad52ba7c3f0"
    },
    {
      "type": "html",
      "text": "\nConsider an insurance application. It must record information about the policyholder, the nature of risks to be covered and payment history. Data gathered at one stage in the policy issue process determines the type and behavior of subsequent dialogs. To encapsulate this behavior a work-flow manager object can be constructed that manages the order of dialog display and the creation and persistence of the appropriate business objects. This work-flow manager object may choose to make the dialog flow and dependency explicit through the use of a state-machine object that declares which combination of state and event causes the transition to a dependent state. Alternatively the state-machine can be made implicit in the work-flow object by having an enumerated state instance variable which is changed indirectly through invocation of public methods.",
      "id": "5a202843fc0b3ec9c3a3f6b87a372208"
    },
    {
      "type": "html",
      "text": "<b>Consequences</b>",
      "id": "f7f0321272a1a0a27a32371a246e03cf"
    },
    {
      "type": "html",
      "text": "\nIn many applications the dialog flow is programmed directly using whatever interfaces exist to the Window management library. This imperative approach is familiar to application programmers but can lead to many problems later on in the development process. In managing the flow by reference to explicitly declared work-flow it is possible to more easily change the details of the flow without having to re-write large sections of it. Also it is possible to more easily change the interface to the user, or delegate to the user as in [[Operator Work Selection]]. For example, an application may find that the user is no longer a human but another application. If a state-machine approach has been used it will be much easier to re-write the \"user\" interface to support the automaton.",
      "id": "bd7f1723ef25e17008a8f9c42121f761"
    },
    {
      "type": "html",
      "text": "<b>Known Uses</b> ",
      "id": "29ead62add46628ea6e87837a31d4f73"
    },
    {
      "type": "html",
      "text": "\nThe work-flow pattern is used at a macro-level in contemporary business practice as a technique to measure and improve productivity. This pattern description advocates its use on a micro-level when developing applications to improve the application quality, longevity and usability.",
      "id": "84c5dc4cfe7e10adf2daabd25428382e"
    },
    {
      "type": "html",
      "text": "-- [[Warrell Harries]]",
      "id": "08eabb2738d2d6a8120fd86b69b2fb94"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "\nSee also [[Operator Work Selection]]",
      "id": "c202238bab650546c6d8b095048db395"
    },
    {
      "type": "html",
      "text": "\nCould I impose upon you to provide a definition of \"workflow\" (not workflow-system, or workflow-automation, just \"workflow\")? What exactly is it that is flowing? Is it work artifacts? work effort? work changes? work knowledge? work responsibility? or is it the ever vague \"all of the above?\"",
      "id": "098268a7b30bc0ddd5f6e84eb66d9fee"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "When I think \"work flow\" I think of systems like Remedy's Action Request System and such. Is that the meaning used here? Also, \"workflow\" used with \"dialog\" flow, raises visions of conversational mode (or at least modal) system interaction - which I've always viewed as a [[Bad Thing]]. What am I missing? -- [[Jim Russell]]",
      "id": "3978ffff653fe8652b6744afbe0ccd3c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "\nModal can be good. In many systems is good to have a modal conversation, or a state-aware conversation, although the interface should be amodal.",
      "id": "9ed250a1588d303f91248ac3d0e65c65"
    },
    {
      "type": "html",
      "text": "Consider a task management system in a software development company. Its workflow is about tasks. It has the states: requested, assigned, executed, tested, accepted. The following transitions are possible: requested->assigned, assigned->requested (a refusal to do something), assigned->executed, executed->tested, tested->assigned (failed the test), tested->accepted.",
      "id": "797ea53359150c9a49be0b9da314dd83"
    },
    {
      "type": "html",
      "text": "\nNow, if you implement it really well, one could add a new state, let's say \"need explanation\" and new transitions \"assigned->need explanation\" , \"need explanation->assigned\" later, without any or with very few programming effort.",
      "id": "d23b396a2d0ac0d327818f6abd376270"
    },
    {
      "type": "html",
      "text": "\nSome people can complain that the workflow is too strict. This is a problem or not, depending if you wanted, or not, to enforce dialog rules. Many companies actually <b>need</b> some organization to streamline the process, while I have to admit other companies need flexible processes. As an example, once I was modeling a non-workflow system that had some workflows hard-coded. A lot of time was invested to discover how a specific process worked, because it involved large sums of money and was very flexible. Meanwhile, we discovered that this specific process only happened 3 or 4 times in 10 years, while other processes were occurring many times a week. So we took out the process that needed flexibility from the scope of the system and everything went fine. ",
      "id": "a042a37e172fdf221b85166e6c24c7fb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "\nOne should be aware that this is not a basic Pattern, but actually a very difficult thing to implement well and in a generalized way. I would be very afraid, for example, to do my first application work for a workflow system, mainly because I would know very little about how the processes of the domain generalize.",
      "id": "a4c79298e01982147d5eef35d2f9ba54"
    },
    {
      "type": "html",
      "text": "\nYou would need a good theoretical background also. you should understand fully [[State Machine]]s, or better, [[Petri Net]]s, to model your [[Work Flow]]s.",
      "id": "6d012b75ce8713c4376f754bf8560e5b"
    },
    {
      "type": "html",
      "text": "-- [[Geraldo Xexeo]]",
      "id": "f397a2189ada9dae8fd0bbff82be6ca6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "I'm not sure anything \"flows\" in a workflow, exactly, as it's sort of a metaphor.  What happens is that there is a whole web of tasks needed to produce an outcome, say, a signed insurance policy. The order of those tasks will depend on external influences, and there is not just one single ordering or task set that will produce the result. So, the \"flow\" is a flow of attention among this set of tasks. There is also a slow accumulation of information leading up to the making of a contract. This may be thought of as a kind of data flow. Mary Shaw and others coined the term \"data ooze\" for this kind of system, and called it an [[Architectural Style]].",
      "id": "b3355584c9a789c1b679d75c0f396b12"
    },
    {
      "type": "html",
      "text": "\nOne of the reasons for having such a system is so the users can ask \"What should we do next?\", when the answer may not be simple.  There is much similarity to managing a project with a work breakdown, including periodic replanning of the project tasks.  The same fluidity is needed, hence the term \"flow\". -- [[Walden Mathews]]",
      "id": "a8e91a8cb69641d297dee4247a487989"
    },
    {
      "type": "html",
      "text": "\nRegarding your ooze comment, Kontinuum by web and flo actually does ooze. You get to see graphically and in an animated fashion the process ooze across your petri net. You can check it out at [http://www.webandflo.com/activeeye.html www.webandflo.com].",
      "id": "0aff7a733f7a56d5c76e5bcd95e0518a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "A [[Work Flow]] is very general concept describing how to model a process. ",
      "id": "38afc684ae4a7dad45eb447e5f9130d3"
    },
    {
      "type": "html",
      "text": "\nSomething must flow. Usually you should model separately <i>information flow</i> and <i>material flow</i>. Most of the time, computer systems only model <i>information flow</i> and it physical counter-part, <i>document flow</i>.",
      "id": "ee2d7409d8a6d967c381cb2d2afd72b0"
    },
    {
      "type": "html",
      "text": "\nIf nothing flows, what the process is doing. If a processor (usually a person) changes nothing, adds nothing and reads nothings, it should not be in the process.",
      "id": "7d35e65e9e531aa08eea4928be2acac6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "There is a site specifically about patterns that occur in workflow systems ([http://tmitwww.tm.tue.nl/research/patterns/ tmitwww.tm.tue.nl]) which is maintained by Wil van der Aalst, Bartek Kiepuszewski, Arthur ter Hofstede, and Alistair Barros. It takes a view that is strongly based on the theory of [[Petri Net]]s, but it is fairly readable without any detailed knowledge of that field. -- [[Olaf Kummer]]",
      "id": "2a8189f04342ced9bd409ef24f2e786f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "I've found the writings of Ilia Bider interesting in this regard. For example see [http://www.ibissoft.com/english/ExpReport.htm www.ibissoft.com]   ",
      "id": "2f5097e425e854e088385c873d351783"
    },
    {
      "type": "html",
      "text": "\nHe introduces the idea of [[State Flow]] which is one way to organize work flow.",
      "id": "ea01639a003ada14bc410e17a3078df9"
    },
    {
      "type": "html",
      "text": "-- [[Bill Hamaker]]",
      "id": "bbab61876b8095d97e98f7516de6fcb2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "\nSo what is a \"workflow engine component\" ?",
      "id": "a7bfa4157a38c59100a8b37650890826"
    },
    {
      "type": "html",
      "text": "<i>See [http://wfmopen.sourceforge.net/ wfmopen.sourceforge.net] </i>",
      "id": "8150da3af14ee8c90714433bd6898c9b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "<b>[[Work Flow]] and [[Business Process Management]]</b>",
      "id": "d39945029fd8b14c2ab2c1b6e241ca54"
    },
    {
      "type": "html",
      "text": "\nSee [http://www.bpmg.org/downloads/LookingAskance/Looking_Askance_3.pdf www.bpmg.org] for a tabulation of the differences in software solutions for the two target markets.",
      "id": "986a51890f45f44dff7a4c5da295644c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "c2cb5444f14675e4b6963485c46a75b2"
    },
    {
      "type": "html",
      "text": "See also:  [[Architectural Pattern]]",
      "id": "27b796914d96eb618b50d95bc8b81e07"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?WorkFlow c2.com]",
      "id": "a0529dd3eb4723e7607768666cffda9b"
    }
  ],
  "journal": [
    {
      "date": 1334110582000,
      "id": "4d48817d4b559e463e131a2511ac25a4",
      "type": "create",
      "item": {
        "title": "Work Flow",
        "story": [
          {
            "type": "html",
            "text": "See also [[Work Flow Literature]]",
            "id": "eb5480bea46a2b152c0a786100e10424"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "People interested in workflow:",
            "id": "d19fcb3bafe778b63f64ac866b463153"
          },
          {
            "type": "html",
            "text": " [[Bobby Woolf]]",
            "id": "b666458560c7d803bd072439fb6d4bfc"
          },
          {
            "type": "html",
            "text": " [[Dragos Manolescu]]",
            "id": "7dd2614605ef713bf09f1d390365007c"
          },
          {
            "type": "html",
            "text": " [[Russell Gold]]",
            "id": "7f9a08ad296a1178138dde8f9b16271d"
          },
          {
            "type": "html",
            "text": " [[Walden Mathews]]",
            "id": "4783a821d294b66b2e72e1a732556e19"
          },
          {
            "type": "html",
            "text": " [[John Harby]]",
            "id": "a859e368acf7643aaf24058e006bad52"
          },
          {
            "type": "html",
            "text": " [[Olaf Kummer]]",
            "id": "0793ffcaf1cb394f54d862e9d5cc490e"
          },
          {
            "type": "html",
            "text": " [[Geraldo Xexeo]]",
            "id": "4048607838a5a654b078379e4c972df4"
          },
          {
            "type": "html",
            "text": " [[Michael Wax]]",
            "id": "e8fe0a7b8347b0332476aef2f302ecc5"
          },
          {
            "type": "html",
            "text": " [[Steph Mader]]",
            "id": "94dd5dcd8201feb81dbdfa461b395a93"
          },
          {
            "type": "html",
            "text": " [[Craig Cameron]]",
            "id": "159bbd36eef911fe5bbd8de72fc4b9fd"
          },
          {
            "type": "html",
            "text": " (add yourself here)",
            "id": "cdf62fd09b488f0adb1f8bd15a07c15d"
          },
          {
            "type": "html",
            "text": "Also, see the Workflow Management Coalition site [[http://www.wfmc.org/ www.wfmc.org]] and [[Verve Product]].",
            "id": "a3e0f75837ffced7fc1ab50fc4e2764e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "<b>Context</b>",
            "id": "517304d1e0eb25fd781e663bbee51ba4"
          },
          {
            "type": "html",
            "text": "\nMost commercial applications manage a lot of complex information. Users usually construct complex business objects by following structured dialogs. The system will compute various attributes for the user. Applications usually create these business objects with monolithic procedural code. This makes it hard to re-model the application and re-use work-flow behaviours between applications.",
            "id": "67af28e6286994a400c588e3f6210790"
          },
          {
            "type": "html",
            "text": "<b>Solution</b>",
            "id": "4d436df014885dc9dad5922ac53800c8"
          },
          {
            "type": "html",
            "text": "\nManage dialog flows with a workflow framework that lets you describe an application's dialog flow in a declarative and abstract fashion. The same framework may be used to map the corresponding business objects to and from the associated workflow objects.",
            "id": "02caaef1e0e0ca059040ddec27f4bb62"
          },
          {
            "type": "html",
            "text": "<b>Example</b>",
            "id": "028a235885caa9d2f68b5ad52ba7c3f0"
          },
          {
            "type": "html",
            "text": "\nConsider an insurance application. It must record information about the policyholder, the nature of risks to be covered and payment history. Data gathered at one stage in the policy issue process determines the type and behavior of subsequent dialogs. To encapsulate this behavior a work-flow manager object can be constructed that manages the order of dialog display and the creation and persistence of the appropriate business objects. This work-flow manager object may choose to make the dialog flow and dependency explicit through the use of a state-machine object that declares which combination of state and event causes the transition to a dependent state. Alternatively the state-machine can be made implicit in the work-flow object by having an enumerated state instance variable which is changed indirectly through invocation of public methods.",
            "id": "5a202843fc0b3ec9c3a3f6b87a372208"
          },
          {
            "type": "html",
            "text": "<b>Consequences</b>",
            "id": "f7f0321272a1a0a27a32371a246e03cf"
          },
          {
            "type": "html",
            "text": "\nIn many applications the dialog flow is programmed directly using whatever interfaces exist to the Window management library. This imperative approach is familiar to application programmers but can lead to many problems later on in the development process. In managing the flow by reference to explicitly declared work-flow it is possible to more easily change the details of the flow without having to re-write large sections of it. Also it is possible to more easily change the interface to the user, or delegate to the user as in [[Operator Work Selection]]. For example, an application may find that the user is no longer a human but another application. If a state-machine approach has been used it will be much easier to re-write the \"user\" interface to support the automaton.",
            "id": "bd7f1723ef25e17008a8f9c42121f761"
          },
          {
            "type": "html",
            "text": "<b>Known Uses</b> ",
            "id": "29ead62add46628ea6e87837a31d4f73"
          },
          {
            "type": "html",
            "text": "\nThe work-flow pattern is used at a macro-level in contemporary business practice as a technique to measure and improve productivity. This pattern description advocates its use on a micro-level when developing applications to improve the application quality, longevity and usability.",
            "id": "84c5dc4cfe7e10adf2daabd25428382e"
          },
          {
            "type": "html",
            "text": "-- [[Warrell Harries]]",
            "id": "08eabb2738d2d6a8120fd86b69b2fb94"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "\nSee also [[Operator Work Selection]]",
            "id": "c202238bab650546c6d8b095048db395"
          },
          {
            "type": "html",
            "text": "\nCould I impose upon you to provide a definition of \"workflow\" (not workflow-system, or workflow-automation, just \"workflow\")? What exactly is it that is flowing? Is it work artifacts? work effort? work changes? work knowledge? work responsibility? or is it the ever vague \"all of the above?\"",
            "id": "098268a7b30bc0ddd5f6e84eb66d9fee"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "When I think \"work flow\" I think of systems like Remedy's Action Request System and such. Is that the meaning used here? Also, \"workflow\" used with \"dialog\" flow, raises visions of conversational mode (or at least modal) system interaction - which I've always viewed as a [[Bad Thing]]. What am I missing? -- [[Jim Russell]]",
            "id": "3978ffff653fe8652b6744afbe0ccd3c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "\nModal can be good. In many systems is good to have a modal conversation, or a state-aware conversation, although the interface should be amodal.",
            "id": "9ed250a1588d303f91248ac3d0e65c65"
          },
          {
            "type": "html",
            "text": "Consider a task management system in a software development company. Its workflow is about tasks. It has the states: requested, assigned, executed, tested, accepted. The following transitions are possible: requested->assigned, assigned->requested (a refusal to do something), assigned->executed, executed->tested, tested->assigned (failed the test), tested->accepted.",
            "id": "797ea53359150c9a49be0b9da314dd83"
          },
          {
            "type": "html",
            "text": "\nNow, if you implement it really well, one could add a new state, let's say \"need explanation\" and new transitions \"assigned->need explanation\" , \"need explanation->assigned\" later, without any or with very few programming effort.",
            "id": "d23b396a2d0ac0d327818f6abd376270"
          },
          {
            "type": "html",
            "text": "\nSome people can complain that the workflow is too strict. This is a problem or not, depending if you wanted, or not, to enforce dialog rules. Many companies actually <b>need</b> some organization to streamline the process, while I have to admit other companies need flexible processes. As an example, once I was modeling a non-workflow system that had some workflows hard-coded. A lot of time was invested to discover how a specific process worked, because it involved large sums of money and was very flexible. Meanwhile, we discovered that this specific process only happened 3 or 4 times in 10 years, while other processes were occurring many times a week. So we took out the process that needed flexibility from the scope of the system and everything went fine. ",
            "id": "a042a37e172fdf221b85166e6c24c7fb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "\nOne should be aware that this is not a basic Pattern, but actually a very difficult thing to implement well and in a generalized way. I would be very afraid, for example, to do my first application work for a workflow system, mainly because I would know very little about how the processes of the domain generalize.",
            "id": "a4c79298e01982147d5eef35d2f9ba54"
          },
          {
            "type": "html",
            "text": "\nYou would need a good theoretical background also. you should understand fully [[State Machine]]s, or better, [[Petri Net]]s, to model your [[Work Flow]]s.",
            "id": "6d012b75ce8713c4376f754bf8560e5b"
          },
          {
            "type": "html",
            "text": "-- [[Geraldo Xexeo]]",
            "id": "f397a2189ada9dae8fd0bbff82be6ca6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "I'm not sure anything \"flows\" in a workflow, exactly, as it's sort of a metaphor.  What happens is that there is a whole web of tasks needed to produce an outcome, say, a signed insurance policy. The order of those tasks will depend on external influences, and there is not just one single ordering or task set that will produce the result. So, the \"flow\" is a flow of attention among this set of tasks. There is also a slow accumulation of information leading up to the making of a contract. This may be thought of as a kind of data flow. Mary Shaw and others coined the term \"data ooze\" for this kind of system, and called it an [[Architectural Style]].",
            "id": "b3355584c9a789c1b679d75c0f396b12"
          },
          {
            "type": "html",
            "text": "\nOne of the reasons for having such a system is so the users can ask \"What should we do next?\", when the answer may not be simple.  There is much similarity to managing a project with a work breakdown, including periodic replanning of the project tasks.  The same fluidity is needed, hence the term \"flow\". -- [[Walden Mathews]]",
            "id": "a8e91a8cb69641d297dee4247a487989"
          },
          {
            "type": "html",
            "text": "\nRegarding your ooze comment, Kontinuum by web and flo actually does ooze. You get to see graphically and in an animated fashion the process ooze across your petri net. You can check it out at [http://www.webandflo.com/activeeye.html www.webandflo.com].",
            "id": "0aff7a733f7a56d5c76e5bcd95e0518a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "A [[Work Flow]] is very general concept describing how to model a process. ",
            "id": "38afc684ae4a7dad45eb447e5f9130d3"
          },
          {
            "type": "html",
            "text": "\nSomething must flow. Usually you should model separately <i>information flow</i> and <i>material flow</i>. Most of the time, computer systems only model <i>information flow</i> and it physical counter-part, <i>document flow</i>.",
            "id": "ee2d7409d8a6d967c381cb2d2afd72b0"
          },
          {
            "type": "html",
            "text": "\nIf nothing flows, what the process is doing. If a processor (usually a person) changes nothing, adds nothing and reads nothings, it should not be in the process.",
            "id": "7d35e65e9e531aa08eea4928be2acac6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "There is a site specifically about patterns that occur in workflow systems ([http://tmitwww.tm.tue.nl/research/patterns/ tmitwww.tm.tue.nl]) which is maintained by Wil van der Aalst, Bartek Kiepuszewski, Arthur ter Hofstede, and Alistair Barros. It takes a view that is strongly based on the theory of [[Petri Net]]s, but it is fairly readable without any detailed knowledge of that field. -- [[Olaf Kummer]]",
            "id": "2a8189f04342ced9bd409ef24f2e786f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "I've found the writings of Ilia Bider interesting in this regard. For example see [http://www.ibissoft.com/english/ExpReport.htm www.ibissoft.com]   ",
            "id": "2f5097e425e854e088385c873d351783"
          },
          {
            "type": "html",
            "text": "\nHe introduces the idea of [[State Flow]] which is one way to organize work flow.",
            "id": "ea01639a003ada14bc410e17a3078df9"
          },
          {
            "type": "html",
            "text": "-- [[Bill Hamaker]]",
            "id": "bbab61876b8095d97e98f7516de6fcb2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "\nSo what is a \"workflow engine component\" ?",
            "id": "a7bfa4157a38c59100a8b37650890826"
          },
          {
            "type": "html",
            "text": "<i>See [http://wfmopen.sourceforge.net/ wfmopen.sourceforge.net] </i>",
            "id": "8150da3af14ee8c90714433bd6898c9b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "<b>[[Work Flow]] and [[Business Process Management]]</b>",
            "id": "d39945029fd8b14c2ab2c1b6e241ca54"
          },
          {
            "type": "html",
            "text": "\nSee [http://www.bpmg.org/downloads/LookingAskance/Looking_Askance_3.pdf www.bpmg.org] for a tabulation of the differences in software solutions for the two target markets.",
            "id": "986a51890f45f44dff7a4c5da295644c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "c2cb5444f14675e4b6963485c46a75b2"
          },
          {
            "type": "html",
            "text": "See also:  [[Architectural Pattern]]",
            "id": "27b796914d96eb618b50d95bc8b81e07"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?WorkFlow c2.com]",
            "id": "a0529dd3eb4723e7607768666cffda9b"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1627081113727
    }
  ]
}