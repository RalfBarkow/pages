{
  "title": "2024-01-19",
  "story": [
    {
      "type": "paragraph",
      "id": "0f4c29dae5d17ddf",
      "text": "⇒ [[Abstraktion und Isolation]] ⇒ [[Abstraction and Isolation]]"
    },
    {
      "type": "roster",
      "id": "a0911429dee2e74b",
      "text": "de.dreyeck.ch"
    },
    {
      "type": "pagefold",
      "id": "53506c9b34ed7b94",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "0b0e263c4d282053",
      "site": "newstate.relocalizecreativity.net",
      "slug": "whole-in-each-part",
      "title": "Whole In Each Part",
      "text": "This is what Follett is helping us understand. Her hope was that we, who follow after, would discover group methods for developing and acting from such an understanding. She believed this was a practical project that necessarily must have its beginning in our neighborhood associations. She imagined fractal unfolding from diverse associations."
    },
    {
      "type": "reference",
      "id": "32967eb4c016b3f5",
      "site": "wiki.ralfbarkow.ch",
      "slug": "whole",
      "title": "Whole",
      "text": "⇒ Universality ⇒ [[God’s Eye View]] ⇒ Holographic New Age Mysticism ⇒ Form ⇒ Creativity refers to a model of the \"creative\" that ties it back to the modern figure of the [[Artist]], to the artistic and aesthetic as a whole. It is about more than a purely technical production of innovations, but about the sensual and affective excitement through the produced new."
    },
    {
      "type": "reference",
      "id": "2e0a140e48524b03",
      "site": "wiki.ralfbarkow.ch",
      "slug": "whole-part-theory",
      "title": "Whole-Part Theory",
      "text": "\"Systems theory 1.0 revolves around the mereological notion of whole-part theory. In this model, the system equals the whole. The parts are like organs in a body yet are thought of as more modular and static in nature. When you think of systems theory 1.0, think simple input-output machines (like a vending machine). You put a dollar in, and it spits out a snack (assuming it doesn’t get stuck)!\""
    },
    {
      "type": "pagefold",
      "id": "835a55d656dbc37a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b25cf89af0bd5ca3",
      "text": "RecursiveWriteBarrier is used to make some objects fully immutable. [https://github.com//khinsen/RecursiveWriteBarrier github] [https://github.com/khinsen/leibniz-pharo/ github]"
    },
    {
      "type": "reference",
      "id": "911b0ee4461bdcca",
      "site": "wiki.ralfbarkow.ch",
      "slug": "lotka-volterra-equations",
      "title": "Lotka-Volterra Equations",
      "text": "⇒ [[Leibniz]] ⇒ [[Leibniz in 4']]"
    },
    {
      "type": "pagefold",
      "id": "832702dac097d29e",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "7fe230c6b0267b17",
      "text": "NIERSTRASZ, Oscar and GÎRBA, Tudor, 2024. [[Moldable Development Patterns]]. Draft. [https://cdn.discordapp.com/attachments/1194986818534379610/1196822701902409769/moldablePatterns-DRAFT-2024-01-16.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "c899cfdaba88f4dc",
      "text": "Moldable development supports decision-making by making software systems explainable. This is done by making it cheap to add numerous custom tools to your software, turning it into a live, explorable domain model. Based on several years of experience of applying moldable development to both open-source and industrial systems, we have identified several mutually supporting patterns to explain how moldable development works in practice.\n [https://cdn.discordapp.com/attachments/1194986818534379610/1196822701902409769/moldablePatterns-DRAFT-2024-01-16.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "6dbfbe02f0153352",
      "text": "A [[Blind Spot]] is problematic part of the target system that is hard to understand and work with, and may be a promising starting point for moldable development to initially engage Stakeholders."
    },
    {
      "type": "paragraph",
      "id": "eb068a850069feee",
      "text": "⇒ [[Island Parsing]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-01-19",
        "story": []
      },
      "date": 1705641094650
    },
    {
      "item": {
        "type": "factory",
        "id": "0f4c29dae5d17ddf"
      },
      "id": "0f4c29dae5d17ddf",
      "type": "add",
      "date": 1705641096213
    },
    {
      "type": "edit",
      "id": "0f4c29dae5d17ddf",
      "item": {
        "type": "paragraph",
        "id": "0f4c29dae5d17ddf",
        "text": "⇒ [[Abstraktion und Isolation]]"
      },
      "date": 1705641112893
    },
    {
      "type": "edit",
      "id": "0f4c29dae5d17ddf",
      "item": {
        "type": "paragraph",
        "id": "0f4c29dae5d17ddf",
        "text": "⇒ [[Abstraktion und Isolation]] ⇒ [[Abstraction and Isolation]]"
      },
      "date": 1705641282941
    },
    {
      "item": {
        "type": "factory",
        "id": "53506c9b34ed7b94"
      },
      "id": "53506c9b34ed7b94",
      "type": "add",
      "after": "0f4c29dae5d17ddf",
      "date": 1705649407889
    },
    {
      "type": "edit",
      "id": "53506c9b34ed7b94",
      "item": {
        "type": "pagefold",
        "id": "53506c9b34ed7b94",
        "text": "~"
      },
      "date": 1705649410947
    },
    {
      "item": {
        "type": "factory",
        "id": "0b0e263c4d282053"
      },
      "id": "0b0e263c4d282053",
      "type": "add",
      "after": "53506c9b34ed7b94",
      "date": 1705649412975
    },
    {
      "type": "edit",
      "id": "0b0e263c4d282053",
      "item": {
        "type": "reference",
        "id": "0b0e263c4d282053",
        "site": "newstate.relocalizecreativity.net",
        "slug": "whole-in-each-part",
        "title": "Whole In Each Part",
        "text": "This is what Follett is helping us understand. Her hope was that we, who follow after, would discover group methods for developing and acting from such an understanding. She believed this was a practical project that necessarily must have its beginning in our neighborhood associations. She imagined fractal unfolding from diverse associations."
      },
      "date": 1705649418135
    },
    {
      "item": {
        "type": "factory",
        "id": "32967eb4c016b3f5"
      },
      "id": "32967eb4c016b3f5",
      "type": "add",
      "after": "0b0e263c4d282053",
      "date": 1705649453458
    },
    {
      "type": "edit",
      "id": "32967eb4c016b3f5",
      "item": {
        "type": "reference",
        "id": "32967eb4c016b3f5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "whole",
        "title": "Whole",
        "text": "⇒ Universality ⇒ [[God’s Eye View]] ⇒ Holographic New Age Mysticism ⇒ Form ⇒ Creativity refers to a model of the \"creative\" that ties it back to the modern figure of the [[Artist]], to the artistic and aesthetic as a whole. It is about more than a purely technical production of innovations, but about the sensual and affective excitement through the produced new."
      },
      "date": 1705649455712
    },
    {
      "id": "32967eb4c016b3f5",
      "type": "move",
      "order": [
        "0f4c29dae5d17ddf",
        "53506c9b34ed7b94",
        "32967eb4c016b3f5",
        "0b0e263c4d282053"
      ],
      "date": 1705649457659
    },
    {
      "item": {
        "type": "factory",
        "id": "2e0a140e48524b03"
      },
      "id": "2e0a140e48524b03",
      "type": "add",
      "after": "0b0e263c4d282053",
      "date": 1705649491156
    },
    {
      "type": "edit",
      "id": "2e0a140e48524b03",
      "item": {
        "type": "reference",
        "id": "2e0a140e48524b03",
        "site": "wiki.ralfbarkow.ch",
        "slug": "whole-part-theory",
        "title": "Whole-Part Theory",
        "text": "\"Systems theory 1.0 revolves around the mereological notion of whole-part theory. In this model, the system equals the whole. The parts are like organs in a body yet are thought of as more modular and static in nature. When you think of systems theory 1.0, think simple input-output machines (like a vending machine). You put a dollar in, and it spits out a snack (assuming it doesn’t get stuck)!\""
      },
      "date": 1705649494276
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1705649557674
    },
    {
      "id": "0b0e263c4d282053",
      "type": "move",
      "order": [
        "0f4c29dae5d17ddf",
        "53506c9b34ed7b94",
        "0b0e263c4d282053",
        "32967eb4c016b3f5",
        "2e0a140e48524b03"
      ],
      "date": 1705649579985
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1705649609203
    },
    {
      "item": {
        "type": "factory",
        "id": "a0911429dee2e74b"
      },
      "id": "a0911429dee2e74b",
      "type": "add",
      "after": "2e0a140e48524b03",
      "date": 1705649631017
    },
    {
      "type": "edit",
      "id": "a0911429dee2e74b",
      "item": {
        "type": "roster",
        "id": "a0911429dee2e74b",
        "text": "de.dreyeck.ch"
      },
      "date": 1705649637865
    },
    {
      "id": "a0911429dee2e74b",
      "type": "move",
      "order": [
        "0f4c29dae5d17ddf",
        "a0911429dee2e74b",
        "53506c9b34ed7b94",
        "0b0e263c4d282053",
        "32967eb4c016b3f5",
        "2e0a140e48524b03"
      ],
      "date": 1705649641711
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1705650113299
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1705667911819
    },
    {
      "id": "835a55d656dbc37a",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "835a55d656dbc37a",
        "text": "~"
      },
      "after": "2e0a140e48524b03",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705667930115
    },
    {
      "id": "b25cf89af0bd5ca3",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b25cf89af0bd5ca3",
        "text": "RecursiveWriteBarrier is used to make some objects fully immutable. [https://github.com//khinsen/RecursiveWriteBarrier github] [https://github.com/khinsen/leibniz-pharo/ github]"
      },
      "after": "835a55d656dbc37a",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705667958645
    },
    {
      "id": "0b4f59bc7188828b",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "0b4f59bc7188828b",
        "text": "~"
      },
      "after": "911b0ee4461bdcca",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705667964165
    },
    {
      "id": "911b0ee4461bdcca",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "911b0ee4461bdcca",
        "site": "wiki.ralfbarkow.ch",
        "slug": "lotka-volterra-equations",
        "title": "Lotka-Volterra Equations",
        "text": "⇒ [[Leibniz]] ⇒ [[Leibniz in 4']]"
      },
      "after": "b25cf89af0bd5ca3",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668013429
    },
    {
      "id": "832702dac097d29e",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "832702dac097d29e",
        "text": "~"
      },
      "after": "911b0ee4461bdcca",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668054695
    },
    {
      "id": "7fe230c6b0267b17",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7fe230c6b0267b17",
        "text": "NIERSTRASZ, Oscar and GÎRBA, Tudor, 2024. [[Moldable Development Patterns]]. Draft. [https://cdn.discordapp.com/attachments/1194986818534379610/1196822701902409769/moldablePatterns-DRAFT-2024-01-16.pdf pdf]"
      },
      "after": "832702dac097d29e",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668057691
    },
    {
      "id": "c899cfdaba88f4dc",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c899cfdaba88f4dc",
        "text": "Moldable development supports decision-making by making software systems explainable. This is done by making it cheap to add numerous custom tools to your software, turning it into a live, explorable domain model. Based on several years of experience of applying moldable development to both open-source and industrial systems, we have identified several mutually supporting patterns to explain how moldable development works in practice.\n [https://cdn.discordapp.com/attachments/1194986818534379610/1196822701902409769/moldablePatterns-DRAFT-2024-01-16.pdf pdf]"
      },
      "after": "7fe230c6b0267b17",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668063078
    },
    {
      "id": "6dbfbe02f0153352",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6dbfbe02f0153352",
        "text": "A [[Blind Spot]] is problematic part of the target system that is hard to understand and work with, and may be a promising starting point for moldable development to initially engage Stakeholders."
      },
      "after": "c899cfdaba88f4dc",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668067263
    },
    {
      "id": "eb068a850069feee",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "eb068a850069feee",
        "text": "⇒ [[Island Parsing]]"
      },
      "after": "6dbfbe02f0153352",
      "attribution": {
        "page": "scratch"
      },
      "date": 1705668071063
    },
    {
      "type": "remove",
      "id": "0b4f59bc7188828b",
      "date": 1705668097745
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1705668199281
    }
  ]
}