{
  "title": "Bounded Observer",
  "story": [
    {
      "type": "markdown",
      "id": "9c0d50544c703031",
      "text": "# Computationally Bounded Observer"
    },
    {
      "type": "reference",
      "id": "941b239f9d0fdecc",
      "site": "wiki.ralfbarkow.ch",
      "slug": "observers",
      "title": "Observers",
      "text": "If the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Bounded Observer",
        "story": []
      },
      "date": 1649831065570
    },
    {
      "item": {
        "type": "factory",
        "id": "9c0d50544c703031"
      },
      "id": "9c0d50544c703031",
      "type": "add",
      "date": 1649831067085
    },
    {
      "type": "edit",
      "id": "9c0d50544c703031",
      "item": {
        "type": "paragraph",
        "id": "9c0d50544c703031",
        "text": "# Computationally Bounded Observer"
      },
      "date": 1649831081800
    },
    {
      "type": "edit",
      "id": "9c0d50544c703031",
      "item": {
        "type": "markdown",
        "id": "9c0d50544c703031",
        "text": "# Computationally Bounded Observer"
      },
      "date": 1649831083594
    },
    {
      "id": "fc729b60d0e70a51",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fc729b60d0e70a51",
        "text": "If the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems."
      },
      "after": "9c0d50544c703031",
      "date": 1649831182841
    },
    {
      "item": {
        "type": "factory",
        "id": "941b239f9d0fdecc"
      },
      "id": "941b239f9d0fdecc",
      "type": "add",
      "after": "fc729b60d0e70a51",
      "date": 1649831281140
    },
    {
      "type": "edit",
      "id": "941b239f9d0fdecc",
      "item": {
        "type": "reference",
        "id": "941b239f9d0fdecc",
        "site": "wiki.ralfbarkow.ch",
        "slug": "observers",
        "title": "Observers",
        "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an irreducible computation, but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads."
      },
      "date": 1649831286166
    },
    {
      "type": "remove",
      "id": "fc729b60d0e70a51",
      "date": 1649831300348
    },
    {
      "type": "edit",
      "id": "941b239f9d0fdecc",
      "item": {
        "type": "reference",
        "id": "941b239f9d0fdecc",
        "site": "wiki.ralfbarkow.ch",
        "slug": "observers",
        "title": "Observers",
        "text": "If the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems."
      },
      "date": 1649831301590
    }
  ]
}