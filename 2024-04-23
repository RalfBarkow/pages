{
  "title": "2024-04-23",
  "story": [
    {
      "type": "paragraph",
      "id": "157c8c9544eefa26",
      "text": "HTML Drag and Drop API. [https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API mdn], [https://web.dev/articles/drag-and-drop web.dev]"
    },
    {
      "type": "assets",
      "id": "726d89a4f49e3e91",
      "text": "pages/2024-04-23"
    },
    {
      "type": "paragraph",
      "id": "5e09d966cd39d2d0",
      "text": "NB. [[CORS]] – Uncaught DOMException: Permission denied to access property \"document\" on cross-origin object / src attribute of iframe ? / Partitioned: All third-party storage access requests [https://developer.mozilla.org/en-US/docs/Web/Privacy/Storage_Access_Policy/Errors/CookiePartitionedForeign mdn]"
    },
    {
      "type": "frame",
      "id": "cb1617222dee62a9",
      "text": "//wiki.ralfbarkow.ch/assets/pages/2024-04-23/index.html"
    },
    {
      "type": "paragraph",
      "id": "9b221290c82f7253",
      "text": "[https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/index.html expand]"
    },
    {
      "type": "paragraph",
      "id": "ac08c18be013edf4",
      "text": "To make an object draggable, set draggable=true on that element. Set the dataTransfer value when initiating the drag event:"
    },
    {
      "type": "code",
      "id": "78dad9081391a7b1",
      "text": "<div class=\"iframe-container\" id=\"iframe1\" draggable=\"true\" \n     ondragstart=\"dragStartHandler(event)\">\n    <h2>Drag me</h2>\n    <p>I am iframe1</p>\n</div>\n"
    },
    {
      "type": "paragraph",
      "id": "fcab1868f63b1f29",
      "text": "And here's the updated dragStartHandler function in [https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/iframe1.html iframe1.html]:"
    },
    {
      "type": "code",
      "id": "a078af0e036d54bd",
      "text": "function dragStartHandler(event) {\n    event.dataTransfer.setData('text/plain', event.target.id);\n}\n"
    },
    {
      "type": "paragraph",
      "id": "f5d8a6b30350330a",
      "text": "See also [https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/setData.html setData.html]"
    },
    {
      "type": "paragraph",
      "id": "82bbe877246122a1",
      "text": "Appending html using native javaScript. [https://stackoverflow.com/questions/42517697/appending-html-using-native-javascript stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "150c4c49d9eb7b15",
      "text": "Cross domain iframe issue. [https://stackoverflow.com/questions/9393532/cross-domain-iframe-issue/9393545#9393545 stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "76770bebe9b712be",
      "text": "Get DOM content of cross-domain iframe. [https://stackoverflow.com/questions/6170925/get-dom-content-of-cross-domain-iframe stackoverflow], [https://stackoverflow.com/questions/9393532/cross-domain-iframe-issue stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "22e38444cb510bed",
      "text": "Breaking down barriers using the DataTransfer API. [https://web.dev/articles/datatransfer web.dev]"
    },
    {
      "type": "video",
      "id": "64600431a7b138fd",
      "text": "YOUTUBE EYMgUhn_Zdo\nWeb.dev - DataTransfer\njorik@\n"
    },
    {
      "type": "paragraph",
      "id": "684000fb274cc372",
      "text": "Demo for [https://web.dev/datatransfer web.dev/datatransfer]."
    },
    {
      "type": "paragraph",
      "id": "166f93b60b6211dc",
      "text": "Transmat [https://google.github.io/transmat/ site], [https://github.com/google/transmat github] – Share data beyond the browser boundaries. Enable users to transfer data to external apps, and open your webapp to receive external data."
    },
    {
      "type": "paragraph",
      "id": "e54bfcdf20efc3ed",
      "text": "– Connecting the web, with JSON-LD"
    },
    {
      "type": "paragraph",
      "id": "99830ebdde9c59cd",
      "text": "– JSON for Linking Data. [https://json-ld.org/ site]"
    },
    {
      "type": "paragraph",
      "id": "442dc98a51a6bd1a",
      "text": "The HTML5 Drag and Drop API. [https://web.dev/articles/drag-and-drop web.dev]"
    },
    {
      "type": "pagefold",
      "id": "a070e63265e56b9a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "51d6ccaa0e5e8a28",
      "text": "⇒ [[Playground: dgraph-dot]]"
    },
    {
      "type": "paragraph",
      "id": "23619a4b12b86ccb",
      "text": "⇒  [[Playground: frame]]"
    },
    {
      "type": "paragraph",
      "id": "f6756eacd4c6503d",
      "text": "#HowToThing #018 — Topological sorting, creating and visualizing a task dependency graph. [https://gist.github.com/postspectacular/4270801b1ffa98b381843ada4c59b0cb gist] "
    },
    {
      "type": "reference",
      "id": "28580eee6581fe2d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "howtothing-001",
      "title": "#HowToThing #001",
      "text": "Ongoing since August 2023: #HowToThing is a series of short posts from [[Karsten Schmidt]] on Mastodon, demonstrating a range of different techniques, patterns and use cases from across the thi.ng/umbrella ecosystem. [https://mastodon.thi.ng/@toxi/110898928550740865 mastodon], [https://thi.ng/ site]"
    },
    {
      "type": "pagefold",
      "id": "90ed88065add477c",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "791ef8c3ddded526",
      "text": "HAJEWSKI, Jeff, 2020. New parallel algorithms for support vector machines and neural architecture search. The University of Iowa. [https://search.proquest.com/openview/8c17c280f74c3fb5302722174e234bc0/1?pq-origsite=gscholar&cbl=18750&diss=y proquest]. p. 58.\n"
    },
    {
      "type": "image",
      "id": "d2bb3f84de617adb",
      "text": "Figure 5.4: (Left) A neural network architecture that is composable via neural modules, represented via dotted lines. (Right) a DAG representation of the same network where nodes represent modules.",
      "size": "wide",
      "width": 430,
      "height": 309,
      "url": "/assets/plugins/image/19351a171c2f391e2d4da3df44c98e0e.jpg"
    },
    {
      "type": "paragraph",
      "id": "f35f98c3f704e5c0",
      "text": "[…] Figure 5.4 shows a convolutional network represented as a DAG whose nodes correspond to network layers. […]"
    },
    {
      "type": "paragraph",
      "id": "d35785fec2eed512",
      "text": "[…]"
    },
    {
      "type": "paragraph",
      "id": "807f8e2711d7e67d",
      "text": "In [198], the resources required to find the target network are on the order of 1,500 GPU days while ENAS achieves similar test performance in less than a single GPU day using a commoditygrade GPU. This is particularly interesting because ENAS uses a reinforcement learning approach similar to that of [198]. The search space of [198] is represented as a DAG, where vertices represent layers and activations. An LSTM policy creates candidate networks by picking connections between the nodes of the template graph and each candidate is evaluated on a single validation set minibatch. The weights of the corresponding nodes in the DAG are updated based on the gradient estimate from any of the sample networks. Thus, the weight sharing happens at the beginning of the training process when multiple candidates are sampled from the DAG. […] (p. 62)"
    },
    {
      "type": "paragraph",
      "id": "dc99ac8facec4972",
      "text": "Unlike evolutionary techniques, using the DAG to sample architectures places an implicit restriction on available topologies — it is not possible to generate a target network whose diameter is greater than the diameter of the graph. Despite this restriction, parameter sharing remains a very powerful and efficient technique for neural architecture search. (p. 62–63)"
    },
    {
      "type": "pagefold",
      "id": "885235bfc10c4b1b",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "85fe4cfd9eda56f4",
      "text": "⇒ [[Recourse]]"
    },
    {
      "type": "reference",
      "id": "9500ab14f2e04f34",
      "site": "wiki.ralfbarkow.ch",
      "slug": "counterfactual",
      "title": "counterfactual",
      "text": "⇒  [[Universality]] is a counterfactual property (about what is possible), and it has sweeping consequences: it is universality that permits the existence of a [[Universal Computer]], like the ones we use nowadays."
    },
    {
      "type": "paragraph",
      "id": "ed7f81ff878fad46",
      "text": "As opposed to searching the DAG for casual discovery via local heuristics, authors in [53] have shown that RL and encoder-decoder NN models are extremely promising when combined (using RL as a search strategy rather than to learn policy) but scaling the experiments has been a problem as well as slow scoring functions."
    },
    {
      "type": "paragraph",
      "id": "d8ce0b28a4961846",
      "text": "TAHOUN, Ezzeldin and KASSIS, Andre, [no date]. Beyond Explanations: Recourse via Actionable Interpretability. [https://www.researchgate.net/profile/Ezzeldin-Tahoun/publication/345974473_Beyond_Explanations_Recourse_via_Actionable_Interpretability_-_Extended/links/5fb3775ba6fdcc9ae05b25e4/Beyond-Explanations-Recourse-via-Actionable-Interpretability-Extended.pdf researchgate]. \n"
    },
    {
      "type": "pagefold",
      "id": "684011b0406da5f8",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "947fb8fd5cf4ae48",
      "text": "BONDU, Alexis, ACHENCHABE, Youssef, BIFET, Albert, CLEROT, Fabrice, CORNUEJOLS, Antoine, GAMA, Joao, HEBRAIL, Georges, LEMAIRE, Vincent and MARTEAU, Pierre-Francois, 2022. Open challenges for Machine Learning based Early Decision-Making research. ACM SIGKDD Explorations Newsletter. 29 November 2022. Vol. 24, no. 2, p. 12–31. DOI 10.1145/3575637.3575643."
    },
    {
      "type": "image",
      "id": "bf6b346802492754",
      "text": "Figure 5: DAGs of tasks to be performed after the triggering of a decision. (Bondu et al., Open Challenges for Machine Learning Based Early Decision-Making Research, p. 22)",
      "size": "wide",
      "width": 430,
      "height": 371,
      "url": "/assets/plugins/image/e05420dee981babc75a1d2c76a9389d7.jpg"
    },
    {
      "type": "paragraph",
      "id": "65c5c881de40144c",
      "text": "More and more applications require early decisions, i.e. taken as soon as possible from partially observed data. However, the later a decision is made, the more its accuracy tends to improve, since the description of the problem to hand is enriched over time. Such a compromise between the earliness and the accuracy of decisions has been particularly studied in the field of Early Time Series Classification. This paper introduces a more general problem, called Machine Learning based Early Decision Making (ML-EDM), which consists in optimizing the decision times of models in a wide range of settings where data is collected over time. After defining the ML-EDM problem, ten challenges are identified and proposed to the scientific community to further research in this area. These challenges open important application perspectives, discussed in this paper."
    },
    {
      "type": "pagefold",
      "id": "f061e79415cca9c9",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "8aab259533ed859b",
      "text": "BROUILLARD, Philippe, TASLAKIAN, Perouz, LACOSTE, Alexandre, LACHAPELLE, Sébastien and DROUIN, Alexandre, 2022. Typing assumptions improve identification in causal discovery. In: Conference on Causal Learning and Reasoning. PMLR. 2022. p. 162–177. [https://proceedings.mlr.press/v177/brouillard22a page]."
    },
    {
      "type": "paragraph",
      "id": "7934b2b1cd38cfd8",
      "text": "– Equivalence classes. (p. 3)"
    },
    {
      "type": "pagefold",
      "id": "4d2187b25cb6ca43",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "eaf2d22c2205170c",
      "text": "\nDAUBECHIES, Ingrid, GÜNTÜRK, C. Sinan, WANG, Yang and YILMAZ, Özgür, 2010. The golden ratio encoder. IEEE Transactions on Information Theory. 2010. Vol. 56, no. 10, p. 5097–5110. \n"
    },
    {
      "type": "markdown",
      "id": "9574fa9cf1fa1227",
      "text": "> A directed acyclic graph (DAG) is a directed graph with no directed cycles. In a DAG, a source is a node (vertex) that has no incoming edges. Similarly, a sink is a node with no outgoing edges. Every DAG has a set of sources and a set of sinks, and every directed path starts from a source and ends at a sink. (p. 7)"
    },
    {
      "type": "paragraph",
      "id": "da7d0f1bac8a80aa",
      "text": "This paper proposes a novel Nyquist-rate analog-to-digital (A/D) conversion algorithm which achieves exponential accuracy in the bit-rate despite using imperfect components. The proposed algorithm is based on a robust implementation of a beta-encoder with β = φ = (1 + √5)/2, the golden ratio. It was previously shown that beta-encoders can be implemented in such a way that their exponential accuracy is robust against threshold offsets in the quantizer element. This paper extends this result by allowing for imperfect analog multipliers with imprecise gain values as well. We also propose a formal computational model for algorithmic encoders and a general test bed for evaluating their robustness."
    },
    {
      "type": "paragraph",
      "id": "1d17a6254ad8c79a",
      "text": "⇐ [[Speed Bot]]: every directed path starts from a source and ends at a sink."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-04-23",
        "story": []
      },
      "date": 1713839226420
    },
    {
      "item": {
        "type": "factory",
        "id": "726d89a4f49e3e91"
      },
      "id": "726d89a4f49e3e91",
      "type": "add",
      "date": 1713839228191
    },
    {
      "type": "edit",
      "id": "726d89a4f49e3e91",
      "item": {
        "type": "assets",
        "id": "726d89a4f49e3e91",
        "text": "pages/2024-04-23"
      },
      "date": 1713839237414
    },
    {
      "item": {
        "type": "factory",
        "id": "89da8befa0dd65bc"
      },
      "id": "89da8befa0dd65bc",
      "type": "add",
      "after": "726d89a4f49e3e91",
      "date": 1713839440218
    },
    {
      "type": "remove",
      "id": "89da8befa0dd65bc",
      "date": 1713839445953
    },
    {
      "item": {
        "type": "factory",
        "id": "dee95d2b4f1260ce"
      },
      "id": "dee95d2b4f1260ce",
      "type": "add",
      "after": "726d89a4f49e3e91",
      "date": 1713839458014
    },
    {
      "type": "edit",
      "id": "dee95d2b4f1260ce",
      "item": {
        "type": "code",
        "id": "dee95d2b4f1260ce",
        "text": "    window.addEventListener('load', () => {\n      const iframe1 = document.getElementById('iframe1');\n      const iframe2 = document.getElementById('iframe2');\n\n      iframe1.addEventListener('dragstart', dragStart);\n      iframe2.addEventListener('dragover', dragOver);\n      iframe2.addEventListener('drop', drop);\n\n      function dragStart(event) {\n        event.dataTransfer.setData('text/plain', event.target.id);\n      }\n\n      function dragOver(event) {\n        event.preventDefault();\n      }\n\n      function drop(event) {\n        event.preventDefault();\n        const iframeId = event.dataTransfer.getData('text/plain');\n        const iframe = document.getElementById(iframeId);\n        if (iframe && iframe !== event.target) {\n          // Append iframe1 to the body of iframe2's document\n          event.target.contentDocument.body.appendChild(iframe);\n        }\n      }\n    });"
      },
      "date": 1713839460024
    },
    {
      "id": "dee95d2b4f1260ce",
      "type": "move",
      "order": [
        "dee95d2b4f1260ce",
        "726d89a4f49e3e91"
      ],
      "date": 1713839461772
    },
    {
      "item": {
        "type": "factory",
        "id": "2366c656cb4025ae"
      },
      "id": "2366c656cb4025ae",
      "type": "add",
      "after": "726d89a4f49e3e91",
      "date": 1713839488934
    },
    {
      "type": "edit",
      "id": "2366c656cb4025ae",
      "item": {
        "type": "frame",
        "id": "2366c656cb4025ae",
        "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "date": 1713839491325
    },
    {
      "item": {
        "type": "factory",
        "id": "cb1617222dee62a9"
      },
      "id": "cb1617222dee62a9",
      "type": "add",
      "after": "2366c656cb4025ae",
      "date": 1713839512240
    },
    {
      "type": "edit",
      "id": "cb1617222dee62a9",
      "item": {
        "type": "frame",
        "id": "cb1617222dee62a9",
        "text": "http://localhost:3000/assets/pages/2024-04-23/index.html"
      },
      "date": 1713839515901
    },
    {
      "id": "2366c656cb4025ae",
      "type": "move",
      "order": [
        "dee95d2b4f1260ce",
        "2366c656cb4025ae",
        "726d89a4f49e3e91",
        "cb1617222dee62a9"
      ],
      "date": 1713839584012
    },
    {
      "item": {
        "type": "factory",
        "id": "ac08c18be013edf4"
      },
      "id": "ac08c18be013edf4",
      "type": "add",
      "after": "cb1617222dee62a9",
      "date": 1713840403840
    },
    {
      "type": "edit",
      "id": "517ae421954c6b43",
      "item": {
        "type": "code",
        "id": "517ae421954c6b43",
        "text": "<div class=\"iframe-container\" id=\"iframe2\" ondrop=\"dropHandler(event)\" ondragover=\"event.preventDefault()\">\n  <h2>Drop Zone (iframe2)</h2>\n</div>\n\n<script>\n  function dropHandler(event) {\n    event.preventDefault();\n\n    console.log('Drop received in iframe2');\n\n    // Get the data transfer from the event\n    const data = event.dataTransfer.getData('text/html');\n    \n    // Create a new div element to contain the dropped iframe content\n    const container = document.createElement('div');\n    container.innerHTML = data;\n\n    // Append the content of iframe1 to iframe2\n    const iframe1Content = container.querySelector('.iframe-container');\n    document.getElementById('iframe2').appendChild(iframe1Content);\n  }\n</script>\n"
      },
      "date": 1713840412390
    },
    {
      "id": "dee95d2b4f1260ce",
      "type": "move",
      "order": [
        "2366c656cb4025ae",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "dee95d2b4f1260ce",
        "ac08c18be013edf4"
      ],
      "date": 1713840533928
    },
    {
      "type": "edit",
      "id": "ac08c18be013edf4",
      "item": {
        "type": "paragraph",
        "id": "ac08c18be013edf4",
        "text": "set the dataTransfer value when initiating the drag event:"
      },
      "date": 1713840997063
    },
    {
      "type": "edit",
      "id": "ac08c18be013edf4",
      "item": {
        "type": "paragraph",
        "id": "ac08c18be013edf4",
        "text": "Set the dataTransfer value when initiating the drag event:"
      },
      "date": 1713841003477
    },
    {
      "item": {
        "type": "factory",
        "id": "78dad9081391a7b1"
      },
      "id": "78dad9081391a7b1",
      "type": "add",
      "after": "ac08c18be013edf4",
      "date": 1713841007191
    },
    {
      "type": "edit",
      "id": "78dad9081391a7b1",
      "item": {
        "type": "code",
        "id": "78dad9081391a7b1",
        "text": "<div class=\"iframe-container\" id=\"iframe1\" draggable=\"true\" \n     ondragstart=\"dragStartHandler(event)\">\n    <h2>Drag me</h2>\n    <p>I am iframe1</p>\n</div>\n"
      },
      "date": 1713841011377
    },
    {
      "item": {
        "type": "factory",
        "id": "fcab1868f63b1f29"
      },
      "id": "fcab1868f63b1f29",
      "type": "add",
      "after": "78dad9081391a7b1",
      "date": 1713841019450
    },
    {
      "type": "edit",
      "id": "fcab1868f63b1f29",
      "item": {
        "type": "paragraph",
        "id": "fcab1868f63b1f29",
        "text": "And here's the updated dragStartHandler function in iframe1.html:"
      },
      "date": 1713841021105
    },
    {
      "item": {
        "type": "factory",
        "id": "a078af0e036d54bd"
      },
      "id": "a078af0e036d54bd",
      "type": "add",
      "after": "fcab1868f63b1f29",
      "date": 1713841027157
    },
    {
      "type": "edit",
      "id": "a078af0e036d54bd",
      "item": {
        "type": "code",
        "id": "a078af0e036d54bd",
        "text": "function dragStartHandler(event) {\n    event.dataTransfer.setData('text/plain', event.target.id);\n}\n"
      },
      "date": 1713841029604
    },
    {
      "item": {
        "type": "factory",
        "id": "f5d8a6b30350330a"
      },
      "id": "f5d8a6b30350330a",
      "type": "add",
      "after": "a078af0e036d54bd",
      "date": 1713841578722
    },
    {
      "type": "edit",
      "id": "f5d8a6b30350330a",
      "item": {
        "type": "paragraph",
        "id": "f5d8a6b30350330a",
        "text": "Appending html using native javaScript"
      },
      "date": 1713841581408
    },
    {
      "type": "edit",
      "id": "f5d8a6b30350330a",
      "item": {
        "type": "paragraph",
        "id": "f5d8a6b30350330a",
        "text": "Appending html using native javaScript [https://stackoverflow.com/questions/42517697/appending-html-using-native-javascript stackoverflow]"
      },
      "date": 1713841592112
    },
    {
      "type": "edit",
      "id": "f5d8a6b30350330a",
      "item": {
        "type": "paragraph",
        "id": "f5d8a6b30350330a",
        "text": "Appending html using native javaScript. [https://stackoverflow.com/questions/42517697/appending-html-using-native-javascript stackoverflow]"
      },
      "date": 1713841605221
    },
    {
      "item": {
        "type": "factory",
        "id": "157c8c9544eefa26"
      },
      "id": "157c8c9544eefa26",
      "type": "add",
      "after": "f5d8a6b30350330a",
      "date": 1713843923891
    },
    {
      "type": "edit",
      "id": "157c8c9544eefa26",
      "item": {
        "type": "paragraph",
        "id": "157c8c9544eefa26",
        "text": "HTML Drag and Drop API"
      },
      "date": 1713843926796
    },
    {
      "type": "edit",
      "id": "157c8c9544eefa26",
      "item": {
        "type": "paragraph",
        "id": "157c8c9544eefa26",
        "text": "HTML Drag and Drop API. [https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API mdn]"
      },
      "date": 1713843935663
    },
    {
      "item": {
        "type": "factory",
        "id": "4bca5561a8728505"
      },
      "id": "4bca5561a8728505",
      "type": "add",
      "after": "157c8c9544eefa26",
      "date": 1713844599909
    },
    {
      "type": "edit",
      "id": "4bca5561a8728505",
      "item": {
        "type": "paragraph",
        "id": "4bca5561a8728505",
        "text": "Aattach the drop event listener directly to the <div> element with the class iframe-container. This ensures that event.target refers to the <div> element when the drop event is triggered."
      },
      "date": 1713844624244
    },
    {
      "item": {
        "type": "factory",
        "id": "71741918ed747178"
      },
      "id": "71741918ed747178",
      "type": "add",
      "after": "4bca5561a8728505",
      "date": 1713845450243
    },
    {
      "type": "edit",
      "id": "71741918ed747178",
      "item": {
        "type": "markdown",
        "id": "71741918ed747178",
        "text": "It seems there's an issue with accessing the content of `iframe2`. The error message \"iframeDocument is not available\" indicates that `iframe2.contentDocument` or `iframe2.contentWindow` is returning `undefined`.\n\nThis issue might occur due to the security restrictions imposed by the same-origin policy, which prevents accessing the content of an iframe from a different origin. \n\nTo resolve this issue, ensure that both iframes (`iframe1` and `iframe2`) have the same origin (i.e., they are loaded from the same domain). If they are from different origins, you won't be able to access the content directly in this manner due to security restrictions.\n\nIf the iframes are from the same origin, please verify that the `src` attribute of `iframe2` is correctly set to the desired HTML file.\n\nAdditionally, ensure that the parent window and the iframe content are fully loaded before attempting to access their contents.\n\nYou can check the network tab of your browser's developer tools to see if there are any errors related to loading the favicon.ico file, which might indicate issues with the file path or permissions.\n\nOnce these issues are resolved, the `dropHandler` function should be able to access the contentDocument or contentWindow of `iframe2` successfully. (ChatGPT 3.5)"
      },
      "date": 1713845458470
    },
    {
      "item": {
        "type": "factory",
        "id": "150c4c49d9eb7b15"
      },
      "id": "150c4c49d9eb7b15",
      "type": "add",
      "after": "71741918ed747178",
      "date": 1713845660086
    },
    {
      "type": "edit",
      "id": "150c4c49d9eb7b15",
      "item": {
        "type": "paragraph",
        "id": "150c4c49d9eb7b15",
        "text": "Cross domain iframe issue."
      },
      "date": 1713845664868
    },
    {
      "type": "edit",
      "id": "150c4c49d9eb7b15",
      "item": {
        "type": "paragraph",
        "id": "150c4c49d9eb7b15",
        "text": "Cross domain iframe issue. [https://stackoverflow.com/questions/9393532/cross-domain-iframe-issue/9393545#9393545 stackoverflow]"
      },
      "date": 1713845677959
    },
    {
      "type": "add",
      "id": "76770bebe9b712be",
      "item": {
        "type": "paragraph",
        "id": "76770bebe9b712be",
        "text": "Get DOM content of cross-domain iframe. []"
      },
      "after": "150c4c49d9eb7b15",
      "date": 1713845696925
    },
    {
      "type": "edit",
      "id": "76770bebe9b712be",
      "item": {
        "type": "paragraph",
        "id": "76770bebe9b712be",
        "text": "Get DOM content of cross-domain iframe. [https://stackoverflow.com/questions/6170925/get-dom-content-of-cross-domain-iframe stackoverflow]"
      },
      "date": 1713845717376
    },
    {
      "type": "edit",
      "id": "76770bebe9b712be",
      "item": {
        "type": "paragraph",
        "id": "76770bebe9b712be",
        "text": "Get DOM content of cross-domain iframe. [https://stackoverflow.com/questions/6170925/get-dom-content-of-cross-domain-iframe stackoverflow], [https://stackoverflow.com/questions/9393532/cross-domain-iframe-issue stackoverflow]"
      },
      "date": 1713845752994
    },
    {
      "item": {
        "type": "factory",
        "id": "22e38444cb510bed"
      },
      "id": "22e38444cb510bed",
      "type": "add",
      "after": "76770bebe9b712be",
      "date": 1713848832853
    },
    {
      "type": "edit",
      "id": "22e38444cb510bed",
      "item": {
        "type": "paragraph",
        "id": "22e38444cb510bed",
        "text": "Breaking down barriers using the DataTransfer API"
      },
      "date": 1713848835409
    },
    {
      "type": "edit",
      "id": "22e38444cb510bed",
      "item": {
        "type": "paragraph",
        "id": "22e38444cb510bed",
        "text": "Breaking down barriers using the DataTransfer API. [https://web.dev/articles/datatransfer web.dev]"
      },
      "date": 1713848851595
    },
    {
      "item": {
        "type": "factory",
        "id": "684000fb274cc372"
      },
      "id": "684000fb274cc372",
      "type": "add",
      "after": "22e38444cb510bed",
      "date": 1713849000198
    },
    {
      "type": "edit",
      "id": "684000fb274cc372",
      "item": {
        "type": "paragraph",
        "id": "684000fb274cc372",
        "text": "Transmat"
      },
      "date": 1713849002899
    },
    {
      "type": "add",
      "id": "442dc98a51a6bd1a",
      "item": {
        "type": "paragraph",
        "id": "442dc98a51a6bd1a",
        "text": "The HTML5 Drag and Drop API. "
      },
      "after": "684000fb274cc372",
      "date": 1713849236821
    },
    {
      "type": "edit",
      "id": "442dc98a51a6bd1a",
      "item": {
        "type": "paragraph",
        "id": "442dc98a51a6bd1a",
        "text": "The HTML5 Drag and Drop API. [https://web.dev/articles/drag-and-drop web.dev]"
      },
      "date": 1713849247496
    },
    {
      "type": "edit",
      "id": "684000fb274cc372",
      "item": {
        "type": "paragraph",
        "id": "684000fb274cc372",
        "text": "Transmat [https://google.github.io/transmat/ site]"
      },
      "date": 1713849265040
    },
    {
      "type": "edit",
      "id": "684000fb274cc372",
      "item": {
        "type": "paragraph",
        "id": "684000fb274cc372",
        "text": "Transmat [https://google.github.io/transmat/ site], [https://github.com/google/transmat github]"
      },
      "date": 1713849447129
    },
    {
      "type": "remove",
      "id": "2366c656cb4025ae",
      "date": 1713852245959
    },
    {
      "id": "157c8c9544eefa26",
      "type": "move",
      "order": [
        "157c8c9544eefa26",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "dee95d2b4f1260ce",
        "ac08c18be013edf4",
        "78dad9081391a7b1",
        "fcab1868f63b1f29",
        "a078af0e036d54bd",
        "f5d8a6b30350330a",
        "4bca5561a8728505",
        "71741918ed747178",
        "150c4c49d9eb7b15",
        "76770bebe9b712be",
        "22e38444cb510bed",
        "684000fb274cc372",
        "442dc98a51a6bd1a"
      ],
      "date": 1713854181174
    },
    {
      "type": "add",
      "id": "9b221290c82f7253",
      "item": {
        "type": "paragraph",
        "id": "9b221290c82f7253",
        "text": "[http://localhost:3000/assets/pages/2024-04-23/index.html expand]"
      },
      "after": "157c8c9544eefa26",
      "date": 1713854332422
    },
    {
      "id": "9b221290c82f7253",
      "type": "move",
      "order": [
        "157c8c9544eefa26",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "9b221290c82f7253",
        "dee95d2b4f1260ce",
        "ac08c18be013edf4",
        "78dad9081391a7b1",
        "fcab1868f63b1f29",
        "a078af0e036d54bd",
        "f5d8a6b30350330a",
        "4bca5561a8728505",
        "71741918ed747178",
        "150c4c49d9eb7b15",
        "76770bebe9b712be",
        "22e38444cb510bed",
        "684000fb274cc372",
        "442dc98a51a6bd1a"
      ],
      "date": 1713854335265
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713854504232
    },
    {
      "type": "edit",
      "id": "cb1617222dee62a9",
      "item": {
        "type": "frame",
        "id": "cb1617222dee62a9",
        "text": "//wiki.ralfbarkow.ch/assets/pages/2024-04-23/index.html"
      },
      "date": 1713854566358
    },
    {
      "type": "edit",
      "id": "9b221290c82f7253",
      "item": {
        "type": "paragraph",
        "id": "9b221290c82f7253",
        "text": "[https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/index.html expand]"
      },
      "date": 1713854583374
    },
    {
      "type": "remove",
      "id": "dee95d2b4f1260ce",
      "date": 1713854634828
    },
    {
      "type": "edit",
      "id": "f5d8a6b30350330a",
      "item": {
        "type": "paragraph",
        "id": "f5d8a6b30350330a",
        "text": "See setData.html"
      },
      "date": 1713854706325
    },
    {
      "type": "add",
      "id": "82bbe877246122a1",
      "item": {
        "type": "paragraph",
        "id": "82bbe877246122a1",
        "text": "Appending html using native javaScript. [https://stackoverflow.com/questions/42517697/appending-html-using-native-javascript stackoverflow]"
      },
      "after": "f5d8a6b30350330a",
      "date": 1713854707246
    },
    {
      "type": "edit",
      "id": "f5d8a6b30350330a",
      "item": {
        "type": "paragraph",
        "id": "f5d8a6b30350330a",
        "text": "See also [https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/setData.html setData.html]"
      },
      "date": 1713854727089
    },
    {
      "type": "remove",
      "id": "4bca5561a8728505",
      "date": 1713854764827
    },
    {
      "type": "remove",
      "id": "71741918ed747178",
      "date": 1713854767044
    },
    {
      "type": "edit",
      "id": "157c8c9544eefa26",
      "item": {
        "type": "paragraph",
        "id": "157c8c9544eefa26",
        "text": "HTML Drag and Drop API. [https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API mdn], [https://web.dev/articles/drag-and-drop web.dev]"
      },
      "date": 1713854881828
    },
    {
      "type": "edit",
      "id": "ac08c18be013edf4",
      "item": {
        "type": "paragraph",
        "id": "ac08c18be013edf4",
        "text": "To make an object draggable, set draggable=true on that element. Set the dataTransfer value when initiating the drag event:"
      },
      "date": 1713854929455
    },
    {
      "type": "edit",
      "id": "fcab1868f63b1f29",
      "item": {
        "type": "paragraph",
        "id": "fcab1868f63b1f29",
        "text": "And here's the updated dragStartHandler function in [http://wiki.ralfbarkow.ch/assets/pages/2024-04-23/iframe1.html iframe1.html]:"
      },
      "date": 1713855004238
    },
    {
      "type": "edit",
      "id": "fcab1868f63b1f29",
      "item": {
        "type": "paragraph",
        "id": "fcab1868f63b1f29",
        "text": "And here's the updated dragStartHandler function in [https://wiki.ralfbarkow.ch/assets/pages/2024-04-23/iframe1.html iframe1.html]:"
      },
      "date": 1713855012206
    },
    {
      "item": {
        "type": "factory",
        "id": "64600431a7b138fd"
      },
      "id": "64600431a7b138fd",
      "type": "add",
      "after": "442dc98a51a6bd1a",
      "date": 1713855061494
    },
    {
      "id": "64600431a7b138fd",
      "type": "move",
      "order": [
        "157c8c9544eefa26",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "9b221290c82f7253",
        "ac08c18be013edf4",
        "78dad9081391a7b1",
        "fcab1868f63b1f29",
        "a078af0e036d54bd",
        "f5d8a6b30350330a",
        "82bbe877246122a1",
        "150c4c49d9eb7b15",
        "76770bebe9b712be",
        "22e38444cb510bed",
        "64600431a7b138fd",
        "684000fb274cc372",
        "442dc98a51a6bd1a"
      ],
      "date": 1713855069842
    },
    {
      "type": "edit",
      "id": "64600431a7b138fd",
      "item": {
        "type": "video",
        "id": "64600431a7b138fd",
        "text": "YOUTUBE EYMgUhn_Zdo"
      },
      "date": 1713855083093
    },
    {
      "type": "edit",
      "id": "64600431a7b138fd",
      "item": {
        "type": "video",
        "id": "64600431a7b138fd",
        "text": "YOUTUBE EYMgUhn_Zdo\nWeb.dev - DataTransfer\njorik@\n"
      },
      "date": 1713855134148
    },
    {
      "type": "edit",
      "id": "684000fb274cc372",
      "item": {
        "type": "paragraph",
        "id": "684000fb274cc372",
        "text": "Demo for https://web.dev/datatransfer."
      },
      "date": 1713855193939
    },
    {
      "type": "add",
      "id": "166f93b60b6211dc",
      "item": {
        "type": "paragraph",
        "id": "166f93b60b6211dc",
        "text": "Transmat [https://google.github.io/transmat/ site], [https://github.com/google/transmat github]"
      },
      "after": "684000fb274cc372",
      "date": 1713855196378
    },
    {
      "type": "edit",
      "id": "684000fb274cc372",
      "item": {
        "type": "paragraph",
        "id": "684000fb274cc372",
        "text": "Demo for [https://web.dev/datatransfer web.dev/datatransfer]."
      },
      "date": 1713855214402
    },
    {
      "type": "edit",
      "id": "166f93b60b6211dc",
      "item": {
        "type": "paragraph",
        "id": "166f93b60b6211dc",
        "text": "Transmat [https://google.github.io/transmat/ site], [https://github.com/google/transmat github] – Share data beyond the browser boundaries. Enable users to transfer data to external apps, and open your webapp to receive external data."
      },
      "date": 1713855301798
    },
    {
      "type": "add",
      "id": "e54bfcdf20efc3ed",
      "item": {
        "type": "paragraph",
        "id": "e54bfcdf20efc3ed",
        "text": "– Connecting the web, with JSON-LD"
      },
      "after": "166f93b60b6211dc",
      "date": 1713855390285
    },
    {
      "type": "add",
      "id": "99830ebdde9c59cd",
      "item": {
        "type": "paragraph",
        "id": "99830ebdde9c59cd",
        "text": "– JSON for Linking Data"
      },
      "after": "e54bfcdf20efc3ed",
      "date": 1713855483321
    },
    {
      "type": "edit",
      "id": "99830ebdde9c59cd",
      "item": {
        "type": "paragraph",
        "id": "99830ebdde9c59cd",
        "text": "– JSON for Linking Data. [https://json-ld.org/ site]"
      },
      "date": 1713855495630
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713873380047
    },
    {
      "item": {
        "type": "factory",
        "id": "a070e63265e56b9a"
      },
      "id": "a070e63265e56b9a",
      "type": "add",
      "after": "442dc98a51a6bd1a",
      "date": 1713873384913
    },
    {
      "type": "edit",
      "id": "a070e63265e56b9a",
      "item": {
        "type": "pagefold",
        "id": "a070e63265e56b9a",
        "text": "~"
      },
      "date": 1713873387766
    },
    {
      "item": {
        "type": "factory",
        "id": "51d6ccaa0e5e8a28"
      },
      "id": "51d6ccaa0e5e8a28",
      "type": "add",
      "after": "a070e63265e56b9a",
      "date": 1713873389356
    },
    {
      "type": "edit",
      "id": "51d6ccaa0e5e8a28",
      "item": {
        "type": "paragraph",
        "id": "51d6ccaa0e5e8a28",
        "text": "[[hypergraph]]"
      },
      "date": 1713873393064
    },
    {
      "type": "edit",
      "id": "51d6ccaa0e5e8a28",
      "item": {
        "type": "paragraph",
        "id": "51d6ccaa0e5e8a28",
        "text": "⇐ [[Hypergraph]]: [[Playground: dgraph-dot]]"
      },
      "date": 1713873448577
    },
    {
      "item": {
        "type": "factory",
        "id": "23619a4b12b86ccb"
      },
      "id": "23619a4b12b86ccb",
      "type": "add",
      "after": "51d6ccaa0e5e8a28",
      "date": 1713875542522
    },
    {
      "type": "edit",
      "id": "23619a4b12b86ccb",
      "item": {
        "type": "paragraph",
        "id": "23619a4b12b86ccb",
        "text": "[[Playground]]"
      },
      "date": 1713875548647
    },
    {
      "type": "edit",
      "id": "23619a4b12b86ccb",
      "item": {
        "type": "paragraph",
        "id": "23619a4b12b86ccb",
        "text": "[[Playground: frame]]"
      },
      "date": 1713875579958
    },
    {
      "item": {
        "type": "factory",
        "id": "f6756eacd4c6503d"
      },
      "id": "f6756eacd4c6503d",
      "type": "add",
      "after": "23619a4b12b86ccb",
      "date": 1713878372062
    },
    {
      "type": "edit",
      "id": "f6756eacd4c6503d",
      "item": {
        "type": "paragraph",
        "id": "f6756eacd4c6503d",
        "text": "#HowToThing #018 — Topological sorting, creating and visualizing a task dependency graph "
      },
      "date": 1713878382193
    },
    {
      "item": {
        "type": "factory",
        "id": "28580eee6581fe2d"
      },
      "id": "28580eee6581fe2d",
      "type": "add",
      "after": "f6756eacd4c6503d",
      "date": 1713878397644
    },
    {
      "type": "edit",
      "id": "28580eee6581fe2d",
      "item": {
        "type": "reference",
        "id": "28580eee6581fe2d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "howtothing-001",
        "title": "#HowToThing #001",
        "text": "Ongoing since August 2023: #HowToThing is a series of short posts from [[Karsten Schmidt]] on Mastodon, demonstrating a range of different techniques, patterns and use cases from across the thi.ng/umbrella ecosystem. [https://mastodon.thi.ng/@toxi/110898928550740865 mastodon], [https://thi.ng/ site]"
      },
      "date": 1713878400353
    },
    {
      "type": "edit",
      "id": "f6756eacd4c6503d",
      "item": {
        "type": "paragraph",
        "id": "f6756eacd4c6503d",
        "text": "#HowToThing #018 — Topological sorting, creating and visualizing a task dependency graph. []https://gist.github.com/postspectacular/4270801b1ffa98b381843ada4c59b0cb gist "
      },
      "date": 1713878413884
    },
    {
      "type": "edit",
      "id": "f6756eacd4c6503d",
      "item": {
        "type": "paragraph",
        "id": "f6756eacd4c6503d",
        "text": "#HowToThing #018 — Topological sorting, creating and visualizing a task dependency graph. [https://gist.github.com/postspectacular/4270801b1ffa98b381843ada4c59b0cb gist] "
      },
      "date": 1713878421209
    },
    {
      "item": {
        "type": "factory",
        "id": "1843b8a1c8a354b6"
      },
      "id": "1843b8a1c8a354b6",
      "type": "add",
      "after": "28580eee6581fe2d",
      "date": 1713878452694
    },
    {
      "type": "edit",
      "id": "1843b8a1c8a354b6",
      "item": {
        "type": "paragraph",
        "id": "1843b8a1c8a354b6",
        "text": "Drawing graphs with dot"
      },
      "date": 1713878460037
    },
    {
      "type": "edit",
      "id": "1843b8a1c8a354b6",
      "item": {
        "type": "paragraph",
        "id": "1843b8a1c8a354b6",
        "text": "Drawing graphs with dot. [https://graphviz.gitlab.io/pdf/dotguide.pdf pdf]"
      },
      "date": 1713878465612
    },
    {
      "id": "1843b8a1c8a354b6",
      "type": "remove",
      "removedTo": {
        "page": "Playground: dgraph-dot"
      },
      "date": 1713878468502
    },
    {
      "item": {
        "type": "factory",
        "id": "a00e42eac05c4c01"
      },
      "id": "a00e42eac05c4c01",
      "type": "add",
      "after": "28580eee6581fe2d",
      "date": 1713878572084
    },
    {
      "type": "edit",
      "id": "a00e42eac05c4c01",
      "item": {
        "type": "paragraph",
        "id": "a00e42eac05c4c01",
        "text": "[[dgraph-dot]]. [https://docs.thi.ng/umbrella/dgraph-dot/ docs]"
      },
      "date": 1713878597128
    },
    {
      "id": "a00e42eac05c4c01",
      "type": "remove",
      "removedTo": {
        "page": "Playground: dgraph-dot"
      },
      "date": 1713878606913
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713879438021
    },
    {
      "type": "edit",
      "id": "51d6ccaa0e5e8a28",
      "item": {
        "type": "paragraph",
        "id": "51d6ccaa0e5e8a28",
        "text": "⇒ [[Playground: dgraph-dot]]"
      },
      "date": 1713882963947
    },
    {
      "type": "edit",
      "id": "23619a4b12b86ccb",
      "item": {
        "type": "paragraph",
        "id": "23619a4b12b86ccb",
        "text": "⇒  [[Playground: frame]]"
      },
      "date": 1713882967928
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713886232879
    },
    {
      "item": {
        "type": "factory",
        "id": "90ed88065add477c"
      },
      "id": "90ed88065add477c",
      "type": "add",
      "after": "28580eee6581fe2d",
      "date": 1713886458409
    },
    {
      "type": "edit",
      "id": "90ed88065add477c",
      "item": {
        "type": "pagefold",
        "id": "90ed88065add477c",
        "text": "~"
      },
      "date": 1713886462447
    },
    {
      "item": {
        "type": "factory",
        "id": "d2bb3f84de617adb"
      },
      "id": "d2bb3f84de617adb",
      "type": "add",
      "after": "90ed88065add477c",
      "date": 1713886464056
    },
    {
      "type": "edit",
      "id": "d2bb3f84de617adb",
      "item": {
        "type": "image",
        "id": "d2bb3f84de617adb",
        "text": "Figure 5.4: (Left) A neural network architecture that is composable via neural modules, represented via dotted lines. (Right) a DAG representation of the same network where nodes represent modules.",
        "size": "wide",
        "width": 430,
        "height": 309,
        "url": "/assets/plugins/image/19351a171c2f391e2d4da3df44c98e0e.jpg"
      },
      "date": 1713886505515
    },
    {
      "item": {
        "type": "factory",
        "id": "791ef8c3ddded526"
      },
      "id": "791ef8c3ddded526",
      "type": "add",
      "after": "d2bb3f84de617adb",
      "date": 1713886518470
    },
    {
      "type": "edit",
      "id": "791ef8c3ddded526",
      "item": {
        "type": "paragraph",
        "id": "791ef8c3ddded526",
        "text": "\nHAJEWSKI, Jeff, 2020. New parallel algorithms for support vector machines and neural architecture search. Online. The University of Iowa. Available from: https://search.proquest.com/openview/8c17c280f74c3fb5302722174e234bc0/1?pq-origsite=gscholar&cbl=18750&diss=y [Accessed 23 April 2024]. \n"
      },
      "date": 1713886520180
    },
    {
      "type": "edit",
      "id": "791ef8c3ddded526",
      "item": {
        "type": "paragraph",
        "id": "791ef8c3ddded526",
        "text": "HAJEWSKI, Jeff, 2020. New parallel algorithms for support vector machines and neural architecture search. The University of Iowa. [https://search.proquest.com/openview/8c17c280f74c3fb5302722174e234bc0/1?pq-origsite=gscholar&cbl=18750&diss=y pdf]. p. 58.\n"
      },
      "date": 1713886554201
    },
    {
      "type": "edit",
      "id": "791ef8c3ddded526",
      "item": {
        "type": "paragraph",
        "id": "791ef8c3ddded526",
        "text": "HAJEWSKI, Jeff, 2020. New parallel algorithms for support vector machines and neural architecture search. The University of Iowa. [https://search.proquest.com/openview/8c17c280f74c3fb5302722174e234bc0/1?pq-origsite=gscholar&cbl=18750&diss=y proquest]. p. 58.\n"
      },
      "date": 1713886601762
    },
    {
      "id": "791ef8c3ddded526",
      "type": "move",
      "order": [
        "157c8c9544eefa26",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "9b221290c82f7253",
        "ac08c18be013edf4",
        "78dad9081391a7b1",
        "fcab1868f63b1f29",
        "a078af0e036d54bd",
        "f5d8a6b30350330a",
        "82bbe877246122a1",
        "150c4c49d9eb7b15",
        "76770bebe9b712be",
        "22e38444cb510bed",
        "64600431a7b138fd",
        "684000fb274cc372",
        "166f93b60b6211dc",
        "e54bfcdf20efc3ed",
        "99830ebdde9c59cd",
        "442dc98a51a6bd1a",
        "a070e63265e56b9a",
        "51d6ccaa0e5e8a28",
        "23619a4b12b86ccb",
        "f6756eacd4c6503d",
        "28580eee6581fe2d",
        "90ed88065add477c",
        "791ef8c3ddded526",
        "d2bb3f84de617adb"
      ],
      "date": 1713886623883
    },
    {
      "item": {
        "type": "factory",
        "id": "f35f98c3f704e5c0"
      },
      "id": "f35f98c3f704e5c0",
      "type": "add",
      "after": "d2bb3f84de617adb",
      "date": 1713886662032
    },
    {
      "type": "edit",
      "id": "f35f98c3f704e5c0",
      "item": {
        "type": "paragraph",
        "id": "f35f98c3f704e5c0",
        "text": "[…] Figure 5.4 shows a convolutional network represented as a DAG whose nodes correspond to network layers. […]"
      },
      "date": 1713886668537
    },
    {
      "type": "add",
      "id": "d35785fec2eed512",
      "item": {
        "type": "paragraph",
        "id": "d35785fec2eed512",
        "text": "[…]"
      },
      "after": "f35f98c3f704e5c0",
      "date": 1713886752370
    },
    {
      "type": "add",
      "id": "807f8e2711d7e67d",
      "item": {
        "type": "paragraph",
        "id": "807f8e2711d7e67d",
        "text": "In [198], the resources required to find the target network are on the order of 1,500 GPU days while ENAS achieves similar test performance in less than a single GPU day using a commoditygrade GPU. This is particularly interesting because ENAS uses a reinforcement learning approach similar to that of [198]. The search space of [198] is represented as a DAG, where vertices represent layers and activations. An LSTM policy creates candidate networks by picking connections between the nodes of the template graph and each candidate is evaluated on a single validation set minibatch. The weights of the corresponding nodes in the DAG are updated based on the gradient estimate from any of the sample networks. Thus, the weight sharing happens at the beginning of the training process when multiple candidates are sampled from the DAG. […]"
      },
      "after": "d35785fec2eed512",
      "date": 1713886755506
    },
    {
      "type": "edit",
      "id": "807f8e2711d7e67d",
      "item": {
        "type": "paragraph",
        "id": "807f8e2711d7e67d",
        "text": "In [198], the resources required to find the target network are on the order of 1,500 GPU days while ENAS achieves similar test performance in less than a single GPU day using a commoditygrade GPU. This is particularly interesting because ENAS uses a reinforcement learning approach similar to that of [198]. The search space of [198] is represented as a DAG, where vertices represent layers and activations. An LSTM policy creates candidate networks by picking connections between the nodes of the template graph and each candidate is evaluated on a single validation set minibatch. The weights of the corresponding nodes in the DAG are updated based on the gradient estimate from any of the sample networks. Thus, the weight sharing happens at the beginning of the training process when multiple candidates are sampled from the DAG. […] (p. 62)"
      },
      "date": 1713886766178
    },
    {
      "type": "add",
      "id": "dc99ac8facec4972",
      "item": {
        "type": "paragraph",
        "id": "dc99ac8facec4972",
        "text": "Unlike evolutionary techniques, using"
      },
      "after": "807f8e2711d7e67d",
      "date": 1713886821233
    },
    {
      "type": "edit",
      "id": "dc99ac8facec4972",
      "item": {
        "type": "paragraph",
        "id": "dc99ac8facec4972",
        "text": "Unlike evolutionary techniques, using the DAG to sample architectures places an implicit restriction on available topologies — it is not possible to generate a target network whose diameter is greater than the diameter of the graph. Despite this restriction, parameter sharing remains a very powerful and efficient technique for neural architecture search. (p. 62–63)"
      },
      "date": 1713886841861
    },
    {
      "item": {
        "type": "factory",
        "id": "885235bfc10c4b1b"
      },
      "id": "885235bfc10c4b1b",
      "type": "add",
      "after": "dc99ac8facec4972",
      "date": 1713887034787
    },
    {
      "item": {
        "type": "factory",
        "id": "85fe4cfd9eda56f4"
      },
      "id": "85fe4cfd9eda56f4",
      "type": "add",
      "after": "885235bfc10c4b1b",
      "date": 1713887039257
    },
    {
      "type": "edit",
      "id": "85fe4cfd9eda56f4",
      "item": {
        "type": "paragraph",
        "id": "85fe4cfd9eda56f4",
        "text": "[[Recourse]]"
      },
      "date": 1713887050468
    },
    {
      "id": "9500ab14f2e04f34",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "9500ab14f2e04f34",
        "site": "wiki.ralfbarkow.ch",
        "slug": "counterfactual",
        "title": "counterfactual",
        "text": "⇒  [[Universality]] is a counterfactual property (about what is possible), and it has sweeping consequences: it is universality that permits the existence of a [[Universal Computer]], like the ones we use nowadays."
      },
      "after": "85fe4cfd9eda56f4",
      "attribution": {
        "page": "Recourse"
      },
      "date": 1713887190085
    },
    {
      "type": "edit",
      "id": "85fe4cfd9eda56f4",
      "item": {
        "type": "paragraph",
        "id": "85fe4cfd9eda56f4",
        "text": "⇒ [[Recourse]]"
      },
      "date": 1713887197448
    },
    {
      "id": "ed7f81ff878fad46",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ed7f81ff878fad46",
        "text": "As opposed to searching the DAG for casual discovery via local heuristics, authors in [53] have shown that RL and encoder-decoder NN models are extremely promising when combined (using RL as a search strategy rather than to learn policy) but scaling the experiments has been a problem as well as slow scoring functions."
      },
      "after": "9500ab14f2e04f34",
      "attribution": {
        "page": "Recourse"
      },
      "date": 1713887388729
    },
    {
      "id": "d8ce0b28a4961846",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d8ce0b28a4961846",
        "text": "TAHOUN, Ezzeldin and KASSIS, Andre, [no date]. Beyond Explanations: Recourse via Actionable Interpretability. [https://www.researchgate.net/profile/Ezzeldin-Tahoun/publication/345974473_Beyond_Explanations_Recourse_via_Actionable_Interpretability_-_Extended/links/5fb3775ba6fdcc9ae05b25e4/Beyond-Explanations-Recourse-via-Actionable-Interpretability-Extended.pdf researchgate]. \n"
      },
      "after": "ed7f81ff878fad46",
      "attribution": {
        "page": "Recourse"
      },
      "date": 1713887392859
    },
    {
      "type": "edit",
      "id": "885235bfc10c4b1b",
      "item": {
        "type": "pagefold",
        "id": "885235bfc10c4b1b",
        "text": "~"
      },
      "date": 1713888187448
    },
    {
      "item": {
        "type": "pagefold",
        "id": "684011b0406da5f8",
        "text": "~"
      },
      "id": "684011b0406da5f8",
      "type": "add",
      "after": "d8ce0b28a4961846",
      "date": 1713888189742
    },
    {
      "type": "edit",
      "id": "684011b0406da5f8",
      "item": {
        "type": "pagefold",
        "id": "684011b0406da5f8",
        "text": "~"
      },
      "date": 1713888192442
    },
    {
      "item": {
        "type": "image",
        "id": "bf6b346802492754",
        "text": "Figure 5: DAGs of tasks to be performed after the triggering of a decision. (p. 22)",
        "size": "wide",
        "width": 430,
        "height": 371,
        "url": "/assets/plugins/image/e05420dee981babc75a1d2c76a9389d7.jpg"
      },
      "id": "bf6b346802492754",
      "type": "add",
      "after": "684011b0406da5f8",
      "date": 1713888193840
    },
    {
      "type": "edit",
      "id": "bf6b346802492754",
      "item": {
        "type": "image",
        "id": "bf6b346802492754",
        "text": "Figure 5: DAGs of tasks to be performed after the triggering of a decision. (p. 22)",
        "size": "wide",
        "width": 430,
        "height": 371,
        "url": "/assets/plugins/image/e05420dee981babc75a1d2c76a9389d7.jpg"
      },
      "date": 1713888268437
    },
    {
      "item": {
        "type": "paragraph",
        "id": "947fb8fd5cf4ae48",
        "text": "BONDU, Alexis, ACHENCHABE, Youssef, BIFET, Albert, CLEROT, Fabrice, CORNUEJOLS, Antoine, GAMA, Joao, HEBRAIL, Georges, LEMAIRE, Vincent and MARTEAU, Pierre-Francois, 2022. Open challenges for Machine Learning based Early Decision-Making research. ACM SIGKDD Explorations Newsletter. 29 November 2022. Vol. 24, no. 2, p. 12–31. DOI 10.1145/3575637.3575643."
      },
      "id": "947fb8fd5cf4ae48",
      "type": "add",
      "after": "bf6b346802492754",
      "date": 1713888290331
    },
    {
      "type": "edit",
      "id": "947fb8fd5cf4ae48",
      "item": {
        "type": "paragraph",
        "id": "947fb8fd5cf4ae48",
        "text": "BONDU, Alexis, ACHENCHABE, Youssef, BIFET, Albert, CLEROT, Fabrice, CORNUEJOLS, Antoine, GAMA, Joao, HEBRAIL, Georges, LEMAIRE, Vincent and MARTEAU, Pierre-Francois, 2022. Open challenges for Machine Learning based Early Decision-Making research. ACM SIGKDD Explorations Newsletter. 29 November 2022. Vol. 24, no. 2, p. 12–31. DOI 10.1145/3575637.3575643."
      },
      "date": 1713888292451
    },
    {
      "type": "edit",
      "id": "947fb8fd5cf4ae48",
      "item": {
        "type": "paragraph",
        "id": "947fb8fd5cf4ae48",
        "text": "BONDU, Alexis, ACHENCHABE, Youssef, BIFET, Albert, CLEROT, Fabrice, CORNUEJOLS, Antoine, GAMA, Joao, HEBRAIL, Georges, LEMAIRE, Vincent and MARTEAU, Pierre-Francois, 2022. Open challenges for Machine Learning based Early Decision-Making research. ACM SIGKDD Explorations Newsletter. 29 November 2022. Vol. 24, no. 2, p. 12–31. DOI 10.1145/3575637.3575643."
      },
      "date": 1713888327755
    },
    {
      "type": "add",
      "id": "65c5c881de40144c",
      "item": {
        "type": "paragraph",
        "id": "65c5c881de40144c",
        "text": "More and more applications require early decisions, i.e. taken as soon as possible from partially observed data. However, the later a decision is made, the more its accuracy tends to improve, since the description of the problem to hand is enriched over time. Such a compromise between the earliness and the accuracy of decisions has been particularly studied in the field of Early Time Series Classification. This paper introduces a more general problem, called Machine Learning based Early Decision Making (ML-EDM), which consists in optimizing the decision times of models in a wide range of settings where data is collected over time. After defining the ML-EDM problem, ten challenges are identified and proposed to the scientific community to further research in this area. These challenges open important application perspectives, discussed in this paper."
      },
      "after": "947fb8fd5cf4ae48",
      "date": 1713888328773
    },
    {
      "id": "947fb8fd5cf4ae48",
      "type": "move",
      "order": [
        "157c8c9544eefa26",
        "726d89a4f49e3e91",
        "cb1617222dee62a9",
        "9b221290c82f7253",
        "ac08c18be013edf4",
        "78dad9081391a7b1",
        "fcab1868f63b1f29",
        "a078af0e036d54bd",
        "f5d8a6b30350330a",
        "82bbe877246122a1",
        "150c4c49d9eb7b15",
        "76770bebe9b712be",
        "22e38444cb510bed",
        "64600431a7b138fd",
        "684000fb274cc372",
        "166f93b60b6211dc",
        "e54bfcdf20efc3ed",
        "99830ebdde9c59cd",
        "442dc98a51a6bd1a",
        "a070e63265e56b9a",
        "51d6ccaa0e5e8a28",
        "23619a4b12b86ccb",
        "f6756eacd4c6503d",
        "28580eee6581fe2d",
        "90ed88065add477c",
        "791ef8c3ddded526",
        "d2bb3f84de617adb",
        "f35f98c3f704e5c0",
        "d35785fec2eed512",
        "807f8e2711d7e67d",
        "dc99ac8facec4972",
        "885235bfc10c4b1b",
        "85fe4cfd9eda56f4",
        "9500ab14f2e04f34",
        "ed7f81ff878fad46",
        "d8ce0b28a4961846",
        "684011b0406da5f8",
        "947fb8fd5cf4ae48",
        "bf6b346802492754",
        "65c5c881de40144c"
      ],
      "date": 1713888333045,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "bf6b346802492754",
      "item": {
        "type": "image",
        "id": "bf6b346802492754",
        "text": "Figure 5: DAGs of tasks to be performed after the triggering of a decision. (p. 22)",
        "size": "wide",
        "width": 430,
        "height": 371,
        "url": "/assets/plugins/image/e05420dee981babc75a1d2c76a9389d7.jpg"
      },
      "date": 1713888351326
    },
    {
      "type": "fork",
      "date": 1713888356687
    },
    {
      "type": "edit",
      "id": "bf6b346802492754",
      "item": {
        "type": "image",
        "id": "bf6b346802492754",
        "text": "Figure 5: DAGs of tasks to be performed after the triggering of a decision. (Bondu et al., Open Challenges for Machine Learning Based Early Decision-Making Research, p. 22)",
        "size": "wide",
        "width": 430,
        "height": 371,
        "url": "/assets/plugins/image/e05420dee981babc75a1d2c76a9389d7.jpg"
      },
      "date": 1713888399660
    },
    {
      "item": {
        "type": "factory",
        "id": "f061e79415cca9c9"
      },
      "id": "f061e79415cca9c9",
      "type": "add",
      "after": "65c5c881de40144c",
      "date": 1713888622538
    },
    {
      "type": "edit",
      "id": "8aab259533ed859b",
      "item": {
        "type": "paragraph",
        "id": "8aab259533ed859b",
        "text": "\nBROUILLARD, Philippe, TASLAKIAN, Perouz, LACOSTE, Alexandre, LACHAPELLE, Sébastien and DROUIN, Alexandre, 2022. Typing assumptions improve identification in causal discovery. In: Conference on Causal Learning and Reasoning. Online. PMLR. 2022. p. 162–177. Available from: https://proceedings.mlr.press/v177/brouillard22a [Accessed 23 April 2024]. \n"
      },
      "date": 1713888630848
    },
    {
      "type": "edit",
      "id": "8aab259533ed859b",
      "item": {
        "type": "paragraph",
        "id": "8aab259533ed859b",
        "text": "BROUILLARD, Philippe, TASLAKIAN, Perouz, LACOSTE, Alexandre, LACHAPELLE, Sébastien and DROUIN, Alexandre, 2022. Typing assumptions improve identification in causal discovery. In: Conference on Causal Learning and Reasoning. Online. PMLR. 2022. p. 162–177. Available from: https://proceedings.mlr.press/v177/brouillard22a [Accessed 23 April 2024]."
      },
      "date": 1713888646897
    },
    {
      "type": "add",
      "id": "7934b2b1cd38cfd8",
      "item": {
        "type": "paragraph",
        "id": "7934b2b1cd38cfd8",
        "text": "– Equivalence classes. p. "
      },
      "after": "8aab259533ed859b",
      "date": 1713888652687
    },
    {
      "type": "edit",
      "id": "7934b2b1cd38cfd8",
      "item": {
        "type": "paragraph",
        "id": "7934b2b1cd38cfd8",
        "text": "– Equivalence classes. (p. 3)"
      },
      "date": 1713888667445
    },
    {
      "type": "edit",
      "id": "8aab259533ed859b",
      "item": {
        "type": "paragraph",
        "id": "8aab259533ed859b",
        "text": "BROUILLARD, Philippe, TASLAKIAN, Perouz, LACOSTE, Alexandre, LACHAPELLE, Sébastien and DROUIN, Alexandre, 2022. Typing assumptions improve identification in causal discovery. In: Conference on Causal Learning and Reasoning. PMLR. 2022. p. 162–177. [https://proceedings.mlr.press/v177/brouillard22a page]."
      },
      "date": 1713888687625
    },
    {
      "id": "7934b2b1cd38cfd8",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1713889551490
    },
    {
      "type": "edit",
      "id": "f061e79415cca9c9",
      "item": {
        "type": "pagefold",
        "id": "f061e79415cca9c9",
        "text": "~"
      },
      "date": 1713889569994
    },
    {
      "id": "8aab259533ed859b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8aab259533ed859b",
        "text": "BROUILLARD, Philippe, TASLAKIAN, Perouz, LACOSTE, Alexandre, LACHAPELLE, Sébastien and DROUIN, Alexandre, 2022. Typing assumptions improve identification in causal discovery. In: Conference on Causal Learning and Reasoning. PMLR. 2022. p. 162–177. [https://proceedings.mlr.press/v177/brouillard22a page]."
      },
      "after": "f061e79415cca9c9",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713889580619
    },
    {
      "id": "7934b2b1cd38cfd8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7934b2b1cd38cfd8",
        "text": "– Equivalence classes. (p. 3)"
      },
      "after": "8aab259533ed859b",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713889584223
    },
    {
      "id": "4d2187b25cb6ca43",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "4d2187b25cb6ca43",
        "text": "~"
      },
      "after": "7934b2b1cd38cfd8",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713889593032
    },
    {
      "item": {
        "type": "factory",
        "id": "eaf2d22c2205170c"
      },
      "id": "eaf2d22c2205170c",
      "type": "add",
      "after": "4d2187b25cb6ca43",
      "date": 1713889605747
    },
    {
      "type": "edit",
      "id": "eaf2d22c2205170c",
      "item": {
        "type": "paragraph",
        "id": "eaf2d22c2205170c",
        "text": "\nDAUBECHIES, Ingrid, GÜNTÜRK, C. Sinan, WANG, Yang and YILMAZ, Özgür, 2010. The golden ratio encoder. IEEE Transactions on Information Theory. 2010. Vol. 56, no. 10, p. 5097–5110. \n"
      },
      "date": 1713889608100
    },
    {
      "item": {
        "type": "factory",
        "id": "9574fa9cf1fa1227"
      },
      "id": "9574fa9cf1fa1227",
      "type": "add",
      "after": "eaf2d22c2205170c",
      "date": 1713889629843
    },
    {
      "type": "edit",
      "id": "9574fa9cf1fa1227",
      "item": {
        "type": "paragraph",
        "id": "9574fa9cf1fa1227",
        "text": "A directed acyclic graph (DAG) is a directed graph with no directed cycles. In a DAG, a source is a node (vertex) that has no incoming edges. Similarly, a sink is a node with no outgoing edges. Every DAG has a set of sources and a set of sinks, and every directed path starts from a source and ends at a sink."
      },
      "date": 1713889632013
    },
    {
      "item": {
        "type": "factory",
        "id": "da7d0f1bac8a80aa"
      },
      "id": "da7d0f1bac8a80aa",
      "type": "add",
      "after": "9574fa9cf1fa1227",
      "date": 1713889749226
    },
    {
      "type": "edit",
      "id": "da7d0f1bac8a80aa",
      "item": {
        "type": "paragraph",
        "id": "da7d0f1bac8a80aa",
        "text": "This paper proposes a novel Nyquist-rate analog-to-digital (A/D) conversion algorithm which achieves exponential accuracy in the bit-rate despite using imperfect components. The proposed algorithm is based on a robust implementation of a beta-encoder with β = φ = (1 + √5)/2, the golden ratio. It was previously shown that beta-encoders can be implemented in such a way that their exponential accuracy is robust against threshold offsets in the quantizer element. This paper extends this result by allowing for imperfect analog multipliers with imprecise gain values as well. We also propose a formal computational model for algorithmic encoders and a general test bed for evaluating their robustness."
      },
      "date": 1713889751797
    },
    {
      "type": "edit",
      "id": "9574fa9cf1fa1227",
      "item": {
        "type": "paragraph",
        "id": "9574fa9cf1fa1227",
        "text": "> A directed acyclic graph (DAG) is a directed graph with no directed cycles. In a DAG, a source is a node (vertex) that has no incoming edges. Similarly, a sink is a node with no outgoing edges. Every DAG has a set of sources and a set of sinks, and every directed path starts from a source and ends at a sink."
      },
      "date": 1713889755884
    },
    {
      "type": "edit",
      "id": "9574fa9cf1fa1227",
      "item": {
        "type": "markdown",
        "id": "9574fa9cf1fa1227",
        "text": "> A directed acyclic graph (DAG) is a directed graph with no directed cycles. In a DAG, a source is a node (vertex) that has no incoming edges. Similarly, a sink is a node with no outgoing edges. Every DAG has a set of sources and a set of sinks, and every directed path starts from a source and ends at a sink."
      },
      "date": 1713889756911
    },
    {
      "type": "edit",
      "id": "9574fa9cf1fa1227",
      "item": {
        "type": "markdown",
        "id": "9574fa9cf1fa1227",
        "text": "> A directed acyclic graph (DAG) is a directed graph with no directed cycles. In a DAG, a source is a node (vertex) that has no incoming edges. Similarly, a sink is a node with no outgoing edges. Every DAG has a set of sources and a set of sinks, and every directed path starts from a source and ends at a sink. (p. 7)"
      },
      "date": 1713889768764
    },
    {
      "item": {
        "type": "factory",
        "id": "1d17a6254ad8c79a"
      },
      "id": "1d17a6254ad8c79a",
      "type": "add",
      "after": "da7d0f1bac8a80aa",
      "date": 1713890308627
    },
    {
      "type": "edit",
      "id": "1d17a6254ad8c79a",
      "item": {
        "type": "paragraph",
        "id": "1d17a6254ad8c79a",
        "text": "⇐ [[Speed Bot]]: every directed path starts from a source and ends at a sink."
      },
      "date": 1713890322156
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713903238901
    },
    {
      "id": "5e09d966cd39d2d0",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5e09d966cd39d2d0",
        "text": "NB. [[CORS]] – Uncaught DOMException: Permission denied to access property \"document\" on cross-origin object / src attribute of iframe ? / Partitioned: All third-party storage access requests [https://developer.mozilla.org/en-US/docs/Web/Privacy/Storage_Access_Policy/Errors/CookiePartitionedForeign mdn]"
      },
      "after": "726d89a4f49e3e91",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713903271444
    }
  ]
}