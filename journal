{
  "title": "Journal",
  "story": [
    {
      "type": "paragraph",
      "id": "fadb8b1e7119a589",
      "text": "A [[Wiki Page]] has a journal of actions that have been completed. "
    },
    {
      "type": "paragraph",
      "id": "7cbaf2313c9e6dba",
      "text": "The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[History]] of how the page was made and where it has traveled."
    },
    {
      "type": "markdown",
      "id": "7d783bf30a1a0f50",
      "text": "The `addToJournal` function is called when the origin server response that the network operation is complete."
    },
    {
      "type": "paragraph",
      "id": "14807cdb8595a3cb",
      "text": "When the journal is accurate it can be replayed to recreate every version of the page through its history."
    },
    {
      "type": "paragraph",
      "id": "5e712657dd8713b2",
      "text": "When the journal identifies sites from which it has been copied (forked) those sites will be added to the [[Neighborhood]] upon display."
    },
    {
      "type": "paragraph",
      "id": "3ed7455dddadd9c1",
      "text": "See our glossary for more [[Names of Things]]"
    },
    {
      "type": "pagefold",
      "id": "d144639fb7552b01",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "a322124415bc6d92",
      "text": "The page journal is now accessed via a frame in the page that surrounds the frame:"
    },
    {
      "type": "reference",
      "id": "6e7adca8a4947ee9",
      "site": "wiki.ralfbarkow.ch",
      "slug": "read-context-of-frame",
      "title": "Read Context of Frame",
      "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
    },
    {
      "type": "code",
      "id": "c8963fb39e7da82f",
      "text": "window.addEventListener(\"message\", handler)\nlet message = { action:\"sendFrameContext\" }\nwindow.parent.postMessage(message, \"*\")"
    },
    {
      "type": "paragraph",
      "id": "433e0069aa2ef6ee",
      "text": "We stop listening then process the data we got."
    },
    {
      "type": "code",
      "id": "00e55c113558b626",
      "text": "function handler ({data}) {\n  if (data.action == \"frameContext\") {\n    window.removeEventListener(\"message\", handler)\n    const {slug, item, page} = data\n    show(page)\n  }\n}"
    },
    {
      "type": "paragraph",
      "id": "ca075d681c953999",
      "text": "The page we show is the page on the screen which might be a ghost, maybe retrieved from history."
    },
    {
      "type": "code",
      "id": "d4ee6431abc012ac",
      "text": "function show (page) {\n  let actions = page.journal.map(item => [ item.type, item.id ])\n  let html = `<pre>${actions.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
    },
    {
      "type": "paragraph",
      "id": "fe1ab36ecb268415",
      "text": "Note: page.journal.[…] – the information stored must support path playback and path visualization."
    },
    {
      "type": "paragraph",
      "id": "174138ed693bdfc5",
      "text": "We change the show function to see actions as objects. An action, i.e. a page.journal.item, has an ID, a text and a type."
    },
    {
      "type": "paragraph",
      "id": "e747c2f0cbd1f135",
      "text": "Note: item.text seems to be something special."
    },
    {
      "type": "paragraph",
      "id": "4cf8bae39d8dbc68",
      "text": "Actions: [⇒ Updating [[Events and Causal Dependence]]]"
    },
    {
      "type": "frame",
      "id": "777ff878d8f1cc7e",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
    },
    {
      "type": "pagefold",
      "id": "6c5246c1b8e74fa5",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "5ed231f170ce7dce",
      "text": "See Array.prototype.map() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?retiredLocale=de mdn]"
    },
    {
      "type": "paragraph",
      "id": "13932101000d640f",
      "text": "Element list?"
    },
    {
      "type": "paragraph",
      "id": "e48e6adedbff043f",
      "text": "item.text: Object.prototype.toString() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString?retiredLocale=de mdn]"
    },
    {
      "type": "paragraph",
      "id": "a1bfcff94c1ca779",
      "text": "Deserialization [https://developer.mozilla.org/en-US/docs/Glossary/Deserialization mdn], JSON.parse() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse mdn]"
    },
    {
      "type": "pagefold",
      "id": "77d3e6ac22dd7cbd",
      "text": "Event-Driven System Domain"
    },
    {
      "type": "markdown",
      "id": "7c4cb7f89de36909",
      "text": "In an event-driven system, domain [[Events]] are published to a *journal*. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
    },
    {
      "type": "paragraph",
      "id": "843ee475ee6c09ae",
      "text": "See [[Event Sourcing]]"
    },
    {
      "type": "pagefold",
      "id": "6ae8778a6ba46743",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "97e329ce025e0410",
      "text": "⇒ [[Journal to Graph]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Journal",
        "story": []
      },
      "date": 1423063375156
    },
    {
      "item": {
        "type": "factory",
        "id": "fadb8b1e7119a589"
      },
      "id": "fadb8b1e7119a589",
      "type": "add",
      "date": 1423063377978
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal that records the history of how the page was made and where it has traveled."
      },
      "date": 1423063448614
    },
    {
      "item": {
        "type": "factory",
        "id": "fb31d70b09f0dc94"
      },
      "id": "fb31d70b09f0dc94",
      "type": "add",
      "after": "fadb8b1e7119a589",
      "date": 1423063499447
    },
    {
      "type": "edit",
      "id": "fb31d70b09f0dc94",
      "item": {
        "type": "paragraph",
        "id": "fb31d70b09f0dc94",
        "text": "The journal lists each [[Action]] that contributed to the page being what and where it is now."
      },
      "date": 1423063615717
    },
    {
      "type": "add",
      "id": "14807cdb8595a3cb",
      "item": {
        "type": "paragraph",
        "id": "14807cdb8595a3cb",
        "text": "When the journal is accurate it can be replayed to recreate every version of the page through its history."
      },
      "after": "fb31d70b09f0dc94",
      "date": 1423063661765
    },
    {
      "type": "add",
      "id": "5e712657dd8713b2",
      "item": {
        "type": "paragraph",
        "id": "5e712657dd8713b2",
        "text": "When the journal identifies sites from which it has been copied (forked) those sites are added to the [[Neighborhood]]."
      },
      "after": "14807cdb8595a3cb",
      "date": 1423063810905
    },
    {
      "type": "edit",
      "id": "5e712657dd8713b2",
      "item": {
        "type": "paragraph",
        "id": "5e712657dd8713b2",
        "text": "When the journal identifies sites from which it has been copied (forked) those sites will be added to the [[Neighborhood]] upon display."
      },
      "date": 1423063862602
    },
    {
      "type": "fork",
      "site": "glossary.asia.wiki.org",
      "date": 1488039637897
    },
    {
      "type": "add",
      "id": "3ed7455dddadd9c1",
      "item": {
        "type": "paragraph",
        "id": "3ed7455dddadd9c1",
        "text": "See our glossary for more [[Names of Things]]"
      },
      "after": "5e712657dd8713b2",
      "date": 1488039720389
    },
    {
      "type": "fork",
      "site": "fed.wiki.org",
      "date": 1626867858381
    },
    {
      "type": "add",
      "id": "b426dd1b5deb7e22",
      "item": {
        "type": "paragraph",
        "id": "b426dd1b5deb7e22",
        "text": "// A wiki page has a journal of actions that have been completed.\n// The addToJournal function is called when the origin server\n// response that the network operation is complete."
      },
      "after": "fadb8b1e7119a589",
      "date": 1630751307921
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal of actions that have been completed. The journal records the history of how the page was made and where it has traveled."
      },
      "date": 1630751339780
    },
    {
      "type": "edit",
      "id": "b426dd1b5deb7e22",
      "item": {
        "type": "paragraph",
        "id": "b426dd1b5deb7e22",
        "text": "The `addToJournal` function is called when the origin server response that the network operation is complete."
      },
      "date": 1630751357553
    },
    {
      "item": {
        "type": "factory",
        "id": "7d783bf30a1a0f50"
      },
      "id": "7d783bf30a1a0f50",
      "type": "add",
      "after": "3ed7455dddadd9c1",
      "date": 1630751360164
    },
    {
      "type": "edit",
      "id": "7d783bf30a1a0f50",
      "item": {
        "type": "markdown",
        "id": "7d783bf30a1a0f50",
        "text": "T"
      },
      "date": 1630751363639
    },
    {
      "id": "7d783bf30a1a0f50",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7d783bf30a1a0f50",
        "b426dd1b5deb7e22",
        "fb31d70b09f0dc94",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1"
      ],
      "date": 1630751365295
    },
    {
      "type": "remove",
      "id": "b426dd1b5deb7e22",
      "date": 1630751368737
    },
    {
      "type": "edit",
      "id": "7d783bf30a1a0f50",
      "item": {
        "type": "markdown",
        "id": "7d783bf30a1a0f50",
        "text": "The `addToJournal` function is called when the origin server response that the network operation is complete."
      },
      "date": 1630751370041
    },
    {
      "id": "fb31d70b09f0dc94",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "fb31d70b09f0dc94",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1"
      ],
      "date": 1630752792914
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal of actions that have been completed. "
      },
      "date": 1630752806527
    },
    {
      "type": "remove",
      "id": "fb31d70b09f0dc94",
      "date": 1630752810257
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal of actions that have been completed. The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal records the history of how the page was made and where it has traveled."
      },
      "date": 1630752815563
    },
    {
      "type": "fork",
      "date": 1630757920856
    },
    {
      "item": {
        "type": "factory",
        "id": "45f4ed5fd18fc01f"
      },
      "id": "45f4ed5fd18fc01f",
      "type": "add",
      "after": "3ed7455dddadd9c1",
      "date": 1630758289061
    },
    {
      "type": "remove",
      "id": "45f4ed5fd18fc01f",
      "date": 1630943453359
    },
    {
      "item": {
        "type": "factory",
        "id": "77d3e6ac22dd7cbd"
      },
      "id": "77d3e6ac22dd7cbd",
      "type": "add",
      "after": "3ed7455dddadd9c1",
      "date": 1630943481582
    },
    {
      "item": {
        "type": "factory",
        "id": "7c4cb7f89de36909"
      },
      "id": "7c4cb7f89de36909",
      "type": "add",
      "after": "77d3e6ac22dd7cbd",
      "date": 1630943486519
    },
    {
      "type": "edit",
      "id": "77d3e6ac22dd7cbd",
      "item": {
        "type": "pagefold",
        "id": "77d3e6ac22dd7cbd",
        "text": "~"
      },
      "date": 1630943488073
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a journal. "
      },
      "date": 1630943516449
    },
    {
      "type": "edit",
      "id": "77d3e6ac22dd7cbd",
      "item": {
        "type": "pagefold",
        "id": "77d3e6ac22dd7cbd",
        "text": "Event-Driven System Domain"
      },
      "date": 1630943528513
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a journal. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page]"
      },
      "date": 1630944043896
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a journal. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with Event Storming and Domain-Driven Design"
      },
      "date": 1630944057654
    },
    {
      "item": {
        "type": "factory",
        "id": "c0037e7895b95bb5"
      },
      "id": "c0037e7895b95bb5",
      "type": "add",
      "after": "7c4cb7f89de36909",
      "date": 1641309106966
    },
    {
      "type": "edit",
      "id": "c0037e7895b95bb5",
      "item": {
        "type": "reference",
        "id": "c0037e7895b95bb5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "event-driven-architectures-in-pharo",
        "title": "Event-Driven Architectures in Pharo",
        "text": "PharoEDA is a framework that simplifies developing Event-Driven Architectures [https://en.wikipedia.org/wiki/Event-driven_architecture wikipedia]. It's also an opinionated framework favoring Domain-Driven Design [2], which means that if you honor some conventions, and the adapters are available, PharoEDA will let you focus in your domain and only in your domain. It works out-of-the-box. Please read on even if your programming language of choice is not Pharo Smalltalk [3]. [https://github.com/osoco/pharo-eda#event-driven-architectures-in-pharo github]"
      },
      "date": 1641309109809
    },
    {
      "item": {
        "type": "factory",
        "id": "843ee475ee6c09ae"
      },
      "id": "843ee475ee6c09ae",
      "type": "add",
      "after": "c0037e7895b95bb5",
      "date": 1641309146407
    },
    {
      "type": "edit",
      "id": "843ee475ee6c09ae",
      "item": {
        "type": "paragraph",
        "id": "843ee475ee6c09ae",
        "text": "See [[Event-Driven Architectures]]"
      },
      "date": 1641309151251
    },
    {
      "type": "remove",
      "id": "c0037e7895b95bb5",
      "date": 1641309170169
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a [[journal]]. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with Event Storming and Domain-Driven Design"
      },
      "date": 1641309199299
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a [[journal]]. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and Domain-Driven Design"
      },
      "date": 1641309282021
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain events are published to a [[journal]]. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
      },
      "date": 1641309370877
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal of actions that have been completed. The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[history]] of how the page was made and where it has traveled."
      },
      "date": 1651397552842
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain [[events]] are published to a [[journal]]. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
      },
      "date": 1652882116734
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain [[Events]] are published to a [[journal]]. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
      },
      "date": 1663797324165
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system domain [[Events]] are published to a *journal*. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
      },
      "date": 1663797351832
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A wiki page has a journal of actions that have been completed. The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[History]] of how the page was made and where it has traveled."
      },
      "date": 1663797382586
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A [[Wiki Page]] has a journal of actions that have been completed. The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[History]] of how the page was made and where it has traveled.[["
      },
      "date": 1678480959659
    },
    {
      "type": "edit",
      "id": "fadb8b1e7119a589",
      "item": {
        "type": "paragraph",
        "id": "fadb8b1e7119a589",
        "text": "A [[Wiki Page]] has a journal of actions that have been completed. "
      },
      "date": 1678480995562
    },
    {
      "type": "add",
      "id": "7cbaf2313c9e6dba",
      "item": {
        "type": "paragraph",
        "id": "7cbaf2313c9e6dba",
        "text": "The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[History]] of how the page was made and where it has traveled.[["
      },
      "after": "fadb8b1e7119a589",
      "date": 1678480997185
    },
    {
      "type": "edit",
      "id": "7cbaf2313c9e6dba",
      "item": {
        "type": "paragraph",
        "id": "7cbaf2313c9e6dba",
        "text": "The journal lists each [[Action]] that contributed to the page being what and where it is now. The journal [[record]]s the [[History]] of how the page was made and where it has traveled."
      },
      "date": 1678481010914
    },
    {
      "item": {
        "type": "factory",
        "id": "d144639fb7552b01"
      },
      "id": "d144639fb7552b01",
      "type": "add",
      "after": "843ee475ee6c09ae",
      "date": 1679155881567
    },
    {
      "type": "edit",
      "id": "d144639fb7552b01",
      "item": {
        "type": "pagefold",
        "id": "d144639fb7552b01",
        "text": "~"
      },
      "date": 1679155884640
    },
    {
      "id": "6e7adca8a4947ee9",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "6e7adca8a4947ee9",
        "site": "wiki.ralfbarkow.ch",
        "slug": "read-context-of-frame",
        "title": "Read Context of Frame",
        "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
      },
      "after": "843ee475ee6c09ae",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155889968
    },
    {
      "id": "d144639fb7552b01",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9"
      ],
      "date": 1679155891697
    },
    {
      "id": "c8963fb39e7da82f",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "window.addEventListener(\"message\", handler)\nlet message = { action:\"sendFrameContext\" }\nwindow.parent.postMessage(message, \"*\")"
      },
      "after": "6e7adca8a4947ee9",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155893940
    },
    {
      "id": "433e0069aa2ef6ee",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "433e0069aa2ef6ee",
        "text": "We stop listening then process the data we got."
      },
      "after": "c8963fb39e7da82f",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155896925
    },
    {
      "id": "00e55c113558b626",
      "type": "add",
      "item": {
        "type": "code",
        "id": "00e55c113558b626",
        "text": "function handler ({data}) {\n  if (data.action == \"frameContext\") {\n    window.removeEventListener(\"message\", handler)\n    const {slug, item, page} = data\n    show(page)\n  }\n}"
      },
      "after": "433e0069aa2ef6ee",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155902508
    },
    {
      "id": "ca075d681c953999",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ca075d681c953999",
        "text": "The page we show is the page on the screen which might be a ghost, maybe retrieved from history."
      },
      "after": "00e55c113558b626",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155907304
    },
    {
      "id": "d4ee6431abc012ac",
      "type": "add",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => item.type)\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "after": "ca075d681c953999",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155912181
    },
    {
      "id": "fe1ab36ecb268415",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fe1ab36ecb268415",
        "text": "Note: page.journal.[…] – the information stored must support path playback and path visualization."
      },
      "after": "d4ee6431abc012ac",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155917883
    },
    {
      "id": "4cf8bae39d8dbc68",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4cf8bae39d8dbc68",
        "text": "Updating events: [⇒ Updating [[Events and Causal Dependence]]]"
      },
      "after": "fe1ab36ecb268415",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155921719
    },
    {
      "id": "777ff878d8f1cc7e",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
      },
      "after": "d4ee6431abc012ac",
      "attribution": {
        "page": "2023-03-17"
      },
      "date": 1679155929671
    },
    {
      "id": "777ff878d8f1cc7e",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e"
      ],
      "date": 1679155934668
    },
    {
      "item": {
        "type": "factory",
        "id": "5ed231f170ce7dce"
      },
      "id": "5ed231f170ce7dce",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1679295853510
    },
    {
      "type": "edit",
      "id": "5ed231f170ce7dce",
      "item": {
        "type": "paragraph",
        "id": "5ed231f170ce7dce",
        "text": "Array.prototype.map()"
      },
      "date": 1679295858789
    },
    {
      "type": "edit",
      "id": "5ed231f170ce7dce",
      "item": {
        "type": "paragraph",
        "id": "5ed231f170ce7dce",
        "text": "Array.prototype.map() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?retiredLocale=de mdn]"
      },
      "date": 1679295869395
    },
    {
      "type": "edit",
      "id": "5ed231f170ce7dce",
      "item": {
        "type": "paragraph",
        "id": "5ed231f170ce7dce",
        "text": "See Array.prototype.map() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map?retiredLocale=de mdn]"
      },
      "date": 1679295881045
    },
    {
      "item": {
        "type": "factory",
        "id": "6c5246c1b8e74fa5"
      },
      "id": "6c5246c1b8e74fa5",
      "type": "add",
      "after": "5ed231f170ce7dce",
      "date": 1679295938967
    },
    {
      "type": "edit",
      "id": "6c5246c1b8e74fa5",
      "item": {
        "type": "pagefold",
        "id": "6c5246c1b8e74fa5",
        "text": "~"
      },
      "date": 1679295941832
    },
    {
      "id": "6c5246c1b8e74fa5",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce"
      ],
      "date": 1679295943963
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [ item.type, item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296194412
    },
    {
      "item": {
        "type": "factory",
        "id": "174138ed693bdfc5"
      },
      "id": "174138ed693bdfc5",
      "type": "add",
      "after": "5ed231f170ce7dce",
      "date": 1679296290115
    },
    {
      "id": "174138ed693bdfc5",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "174138ed693bdfc5",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce"
      ],
      "date": 1679296292422
    },
    {
      "type": "edit",
      "id": "174138ed693bdfc5",
      "item": {
        "type": "paragraph",
        "id": "174138ed693bdfc5",
        "text": "We modify the show function to see updates as objects."
      },
      "date": 1679296335198
    },
    {
      "type": "edit",
      "id": "174138ed693bdfc5",
      "item": {
        "type": "paragraph",
        "id": "174138ed693bdfc5",
        "text": "We modify the show function to see updates as objects. An item has an id, a text and a type."
      },
      "date": 1679296410118
    },
    {
      "id": "174138ed693bdfc5",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce"
      ],
      "date": 1679296432743
    },
    {
      "id": "4cf8bae39d8dbc68",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "4cf8bae39d8dbc68",
        "174138ed693bdfc5",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce"
      ],
      "date": 1679296437105
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [  item.id, item.text, item.type ])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296467327
    },
    {
      "type": "add",
      "id": "e747c2f0cbd1f135",
      "item": {
        "type": "paragraph",
        "id": "e747c2f0cbd1f135",
        "text": "item.text seems to be special."
      },
      "after": "174138ed693bdfc5",
      "date": 1679296501726
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [  item.id, item.type ])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296516389
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.id item.type])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296550907
    },
    {
      "type": "add",
      "id": "13932101000d640f",
      "item": {
        "type": "paragraph",
        "id": "13932101000d640f",
        "text": "Element list?"
      },
      "after": "e747c2f0cbd1f135",
      "date": 1679296588616
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.id, item.type])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296602390
    },
    {
      "id": "13932101000d640f",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "4cf8bae39d8dbc68",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f"
      ],
      "date": 1679296640371
    },
    {
      "type": "edit",
      "id": "174138ed693bdfc5",
      "item": {
        "type": "paragraph",
        "id": "174138ed693bdfc5",
        "text": "We modify the show function to see updates as objects. A page.journal.item has an id, a text and a type."
      },
      "date": 1679296689390
    },
    {
      "type": "edit",
      "id": "e747c2f0cbd1f135",
      "item": {
        "type": "paragraph",
        "id": "e747c2f0cbd1f135",
        "text": "Note: item.text seems to be special."
      },
      "date": 1679296721107
    },
    {
      "id": "4cf8bae39d8dbc68",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "4cf8bae39d8dbc68",
        "e747c2f0cbd1f135",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f"
      ],
      "date": 1679296733784
    },
    {
      "id": "e747c2f0cbd1f135",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f"
      ],
      "date": 1679296735310
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type,item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296800420
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type;item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296816037
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296821908
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, \"item.text\"])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296876860
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, string(item.textI])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296903410
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, string(item.text)])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296908406
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, toString(item.text)])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296935032
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, toString(this.item.text)])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679296961706
    },
    {
      "item": {
        "type": "factory",
        "id": "e48e6adedbff043f"
      },
      "id": "e48e6adedbff043f",
      "type": "add",
      "after": "13932101000d640f",
      "date": 1679296985770
    },
    {
      "type": "edit",
      "id": "e48e6adedbff043f",
      "item": {
        "type": "paragraph",
        "id": "e48e6adedbff043f",
        "text": "Object.prototype.toString()"
      },
      "date": 1679296988187
    },
    {
      "type": "edit",
      "id": "e48e6adedbff043f",
      "item": {
        "type": "paragraph",
        "id": "e48e6adedbff043f",
        "text": "Object.prototype.toString() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString?retiredLocale=de mdn]"
      },
      "date": 1679297002539
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297012255
    },
    {
      "type": "edit",
      "id": "e48e6adedbff043f",
      "item": {
        "type": "paragraph",
        "id": "e48e6adedbff043f",
        "text": "item.text: Object.prototype.toString() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/toString?retiredLocale=de mdn]"
      },
      "date": 1679297086470
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, ${item.text}])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297140019
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, toString(${item.text})])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297157655
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297207237
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id, Symbol(item.text)])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297269785
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let updates = page.journal.map(item => [item.type, item.id])\n  let html = `<pre>${updates.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679297304944
    },
    {
      "type": "edit",
      "id": "7c4cb7f89de36909",
      "item": {
        "type": "markdown",
        "id": "7c4cb7f89de36909",
        "text": "In an event-driven system, domain [[Events]] are published to a *journal*. [https://blog.redelastic.com/corporate-arts-crafts-modelling-reactive-systems-with-event-storming-73c6236f5dd7?utm_source=pocket_mylist&gi=636f82227886 page] – Modelling Reactive Systems with [[Event Storming]] and [[Domain-Driven Design]]"
      },
      "date": 1679297437404
    },
    {
      "type": "edit",
      "id": "843ee475ee6c09ae",
      "item": {
        "type": "paragraph",
        "id": "843ee475ee6c09ae",
        "text": "See [[Event Sourcing]]"
      },
      "date": 1679297483216
    },
    {
      "id": "77d3e6ac22dd7cbd",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f",
        "e48e6adedbff043f",
        "77d3e6ac22dd7cbd"
      ],
      "date": 1679297522263
    },
    {
      "id": "7c4cb7f89de36909",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "843ee475ee6c09ae",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f",
        "e48e6adedbff043f",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909"
      ],
      "date": 1679297532848
    },
    {
      "id": "843ee475ee6c09ae",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "d144639fb7552b01",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f",
        "e48e6adedbff043f",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae"
      ],
      "date": 1679297542429
    },
    {
      "type": "add",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "We now access the page.journal in a frame in the page itself."
      },
      "after": "3ed7455dddadd9c1",
      "date": 1679297730995
    },
    {
      "id": "a322124415bc6d92",
      "type": "move",
      "order": [
        "fadb8b1e7119a589",
        "7cbaf2313c9e6dba",
        "7d783bf30a1a0f50",
        "14807cdb8595a3cb",
        "5e712657dd8713b2",
        "3ed7455dddadd9c1",
        "d144639fb7552b01",
        "a322124415bc6d92",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "ca075d681c953999",
        "d4ee6431abc012ac",
        "fe1ab36ecb268415",
        "174138ed693bdfc5",
        "e747c2f0cbd1f135",
        "4cf8bae39d8dbc68",
        "777ff878d8f1cc7e",
        "6c5246c1b8e74fa5",
        "5ed231f170ce7dce",
        "13932101000d640f",
        "e48e6adedbff043f",
        "77d3e6ac22dd7cbd",
        "7c4cb7f89de36909",
        "843ee475ee6c09ae"
      ],
      "date": 1679297733777
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "We now access the page.journal in a frame in the page itself:"
      },
      "date": 1679297742530
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "We now access the page journal in a frame in the page itself:"
      },
      "date": 1679297773800
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "We now access the page journal via a frame in the page itself:"
      },
      "date": 1679297797920
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "The page journal is now accessed via a frame on the page itself:"
      },
      "date": 1679297833890
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "The page journal is now accessed via a frame in the page itself:"
      },
      "date": 1679297894361
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "The page journal is now accessed via a frame in the page surrounding it:"
      },
      "date": 1679297952864
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "The page journal is now accessed via a frame in the page that surrounds it:"
      },
      "date": 1679297986910
    },
    {
      "type": "edit",
      "id": "a322124415bc6d92",
      "item": {
        "type": "paragraph",
        "id": "a322124415bc6d92",
        "text": "The page journal is now accessed via a frame in the page that surrounds the frame:"
      },
      "date": 1679298029184
    },
    {
      "type": "add",
      "id": "a1bfcff94c1ca779",
      "item": {
        "type": "paragraph",
        "id": "a1bfcff94c1ca779",
        "text": "Deserialization"
      },
      "after": "e48e6adedbff043f",
      "date": 1679299686968
    },
    {
      "type": "edit",
      "id": "a1bfcff94c1ca779",
      "item": {
        "type": "paragraph",
        "id": "a1bfcff94c1ca779",
        "text": "Deserialization [https://developer.mozilla.org/en-US/docs/Glossary/Deserialization mdn]"
      },
      "date": 1679299701589
    },
    {
      "type": "edit",
      "id": "a1bfcff94c1ca779",
      "item": {
        "type": "paragraph",
        "id": "a1bfcff94c1ca779",
        "text": "Deserialization [https://developer.mozilla.org/en-US/docs/Glossary/Deserialization mdn], JSON.parse()"
      },
      "date": 1679299742724
    },
    {
      "type": "edit",
      "id": "a1bfcff94c1ca779",
      "item": {
        "type": "paragraph",
        "id": "a1bfcff94c1ca779",
        "text": "Deserialization [https://developer.mozilla.org/en-US/docs/Glossary/Deserialization mdn], JSON.parse() [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse mdn]"
      },
      "date": 1679299752694
    },
    {
      "type": "edit",
      "id": "e747c2f0cbd1f135",
      "item": {
        "type": "paragraph",
        "id": "e747c2f0cbd1f135",
        "text": "Note: item.text seems to be something special."
      },
      "date": 1679300208599
    },
    {
      "type": "edit",
      "id": "174138ed693bdfc5",
      "item": {
        "type": "paragraph",
        "id": "174138ed693bdfc5",
        "text": "We modify the show function to see actions as objects. A page.journal.item has an id, a text and a type."
      },
      "date": 1679300327538
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let actions = page.journal.map(item => [item.type, item.id])\n  let html = `<pre>${actions.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679300332506
    },
    {
      "type": "edit",
      "id": "4cf8bae39d8dbc68",
      "item": {
        "type": "paragraph",
        "id": "4cf8bae39d8dbc68",
        "text": "Actions/Updating events: [⇒ Updating [[Events and Causal Dependence]]]"
      },
      "date": 1679300356538
    },
    {
      "type": "edit",
      "id": "4cf8bae39d8dbc68",
      "item": {
        "type": "paragraph",
        "id": "4cf8bae39d8dbc68",
        "text": "Actions: [⇒ Updating [[Events and Causal Dependence]]]"
      },
      "date": 1679300397653
    },
    {
      "type": "edit",
      "id": "d4ee6431abc012ac",
      "item": {
        "type": "code",
        "id": "d4ee6431abc012ac",
        "text": "function show (page) {\n  let actions = page.journal.map(item => [ item.type, item.id ])\n  let html = `<pre>${actions.join(\"\\n\")}</pre>`\n  output.innerHTML = html\n}"
      },
      "date": 1679300467458
    },
    {
      "type": "edit",
      "id": "174138ed693bdfc5",
      "item": {
        "type": "paragraph",
        "id": "174138ed693bdfc5",
        "text": "We change the show function to see actions as objects. An action, i.e. a page.journal.item, has an ID, a text and a type."
      },
      "date": 1679300543103
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1679325385880
    },
    {
      "type": "fork",
      "date": 1679334915916
    },
    {
      "item": {
        "type": "factory",
        "id": "6ae8778a6ba46743"
      },
      "id": "6ae8778a6ba46743",
      "type": "add",
      "after": "843ee475ee6c09ae",
      "date": 1679334919029
    },
    {
      "type": "edit",
      "id": "6ae8778a6ba46743",
      "item": {
        "type": "pagefold",
        "id": "6ae8778a6ba46743",
        "text": "~"
      },
      "date": 1679334922484
    },
    {
      "item": {
        "type": "factory",
        "id": "97e329ce025e0410"
      },
      "id": "97e329ce025e0410",
      "type": "add",
      "after": "6ae8778a6ba46743",
      "date": 1679334924108
    },
    {
      "type": "edit",
      "id": "97e329ce025e0410",
      "item": {
        "type": "paragraph",
        "id": "97e329ce025e0410",
        "text": "⇒ [[Journal to Graph]]"
      },
      "date": 1679334939000
    },
    {
      "type": "fork",
      "site": "code.dreyeck.ch",
      "date": 1679335982056
    }
  ]
}