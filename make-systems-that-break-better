{
  "title": "Make Systems that Break Better",
  "story": [
    {
      "type": "paragraph",
      "id": "52360d2b5dfb7e6d",
      "text": "We understand that complex systems will relentlessly [[surprise]] and that as such humans will be called upon to make them right again. We seek a familiarity where logic complements intuition and intuition supports ongoing accumulation of logic. A better break exposes things that respond to logic and and can be said to be interesting."
    },
    {
      "type": "paragraph",
      "id": "9cf20d768b93d0bb",
      "text": "Prof. Robert Daasch makes the distinction between problems and difficulties. A problem can be savored, enjoyed even, for with their solutions there is learning. Difficulties return nothing but a little more exhaustion. To his students his office was always open to problems but students were expected to solve the many difficulties associated with doing anything on a computer amongst themselves. See [[Computer Problems]]"
    },
    {
      "type": "paragraph",
      "id": "80b0281e29befbe1",
      "text": "Tip: share problems, consume difficulties."
    },
    {
      "type": "paragraph",
      "id": "cc7cce711b486b76",
      "text": "Some associate friction and toil with persistent difficulties. More automation can conceal difficulties but may just postpone them to be rediscovered."
    },
    {
      "type": "paragraph",
      "id": "73f2203ed0fe0fdc",
      "text": "Automation that transforms difficulties such that they are subject to logic can make systems break better. Imagine advanced mathematics that makes unsolved problems tractable, even if the math itself takes years to learn."
    },
    {
      "type": "paragraph",
      "id": "18ad16c8bd4f6059",
      "text": "Be suspicious of solutions that allow one to do the same work faster. There can be interesting problems lurking behind tedious difficulties but faster work leaves less time to notice them. If adding 100 lines to a 1000 line program only postpones difficulty ask what 100 lines can be removed for only by new logic is this possible."
    },
    {
      "type": "paragraph",
      "id": "96a0701ad1f1c647",
      "text": "See [[Windmill Problem]] for a solution to be savored."
    },
    {
      "type": "paragraph",
      "id": "9a7fe9953ee769cc",
      "text": "See [[Tension, Real and Imagined]] for related contrasts."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Make Systems that Break Better",
        "story": []
      },
      "date": 1565232286884
    },
    {
      "item": {
        "type": "factory",
        "id": "52360d2b5dfb7e6d"
      },
      "id": "52360d2b5dfb7e6d",
      "type": "add",
      "date": 1565232289747
    },
    {
      "type": "edit",
      "id": "52360d2b5dfb7e6d",
      "item": {
        "type": "paragraph",
        "id": "52360d2b5dfb7e6d",
        "text": "We understand that complex systems will relentlessly surprise and that as such humans will be called upon to make them right again. We seek a familiarity where logic complements intuition and intuition supports ongoing accumulation of logic. A better break exposes things that respond to logic and and can be said to be interesting."
      },
      "date": 1565232939482
    },
    {
      "type": "add",
      "id": "9cf20d768b93d0bb",
      "item": {
        "type": "paragraph",
        "id": "9cf20d768b93d0bb",
        "text": "Prof. Robert Daash makes the distinction between problems and difficulties. A problem can be savored, enjoyed even, for with their solutions there is learning. Difficulties return nothing but a little more exhaustion. To his students his office was always open to problems but students were expected to solve the many difficulties associated with doing anything on a computer amongst themselves."
      },
      "after": "52360d2b5dfb7e6d",
      "date": 1565233165209
    },
    {
      "type": "add",
      "id": "80b0281e29befbe1",
      "item": {
        "type": "paragraph",
        "id": "80b0281e29befbe1",
        "text": "Tip: share problems, consume difficulties."
      },
      "after": "9cf20d768b93d0bb",
      "date": 1565233491888
    },
    {
      "type": "add",
      "id": "cc7cce711b486b76",
      "item": {
        "type": "paragraph",
        "id": "cc7cce711b486b76",
        "text": "Some associate friction and toil with persistent difficulties. More automation can conceal difficulties but maybe just postponing it to be rediscovered at a less opportune time."
      },
      "after": "80b0281e29befbe1",
      "date": 1565233612514
    },
    {
      "type": "edit",
      "id": "cc7cce711b486b76",
      "item": {
        "type": "paragraph",
        "id": "cc7cce711b486b76",
        "text": "Some associate friction and toil with persistent difficulties. More automation can conceal difficulties but may just postponing it to be rediscovered at a less opportune time."
      },
      "date": 1565233631752
    },
    {
      "type": "add",
      "id": "73f2203ed0fe0fdc",
      "item": {
        "type": "paragraph",
        "id": "73f2203ed0fe0fdc",
        "text": "Automation that transforms difficulties such that they are subject to logic can make systems break better. Imagine the advanced mathematics that makes unsolved problems tractable, even if the math itself takes years to learn."
      },
      "after": "cc7cce711b486b76",
      "date": 1565233821523
    },
    {
      "type": "edit",
      "id": "73f2203ed0fe0fdc",
      "item": {
        "type": "paragraph",
        "id": "73f2203ed0fe0fdc",
        "text": "Automation that transforms difficulties such that they are subject to logic can make systems break better. Imagine advanced mathematics that makes unsolved problems tractable, even if the math itself takes years to learn."
      },
      "date": 1565233849194
    },
    {
      "type": "edit",
      "id": "9cf20d768b93d0bb",
      "item": {
        "type": "paragraph",
        "id": "9cf20d768b93d0bb",
        "text": "Prof. Robert Daash makes the distinction between problems and difficulties. A problem can be savored, enjoyed even, for with their solutions there is learning. Difficulties return nothing but a little more exhaustion. To his students his office was always open to problems but students were expected to solve the many difficulties associated with doing anything on a computer amongst themselves. See [[Computer Problems]]"
      },
      "date": 1565234060181
    },
    {
      "type": "edit",
      "id": "cc7cce711b486b76",
      "item": {
        "type": "paragraph",
        "id": "cc7cce711b486b76",
        "text": "Some associate friction and toil with persistent difficulties. More automation can conceal difficulties but may just postpone them to be rediscovered at a less opportune time."
      },
      "date": 1565234173560
    },
    {
      "type": "edit",
      "id": "cc7cce711b486b76",
      "item": {
        "type": "paragraph",
        "id": "cc7cce711b486b76",
        "text": "Some associate friction and toil with persistent difficulties. More automation can conceal difficulties but may just postpone them to be rediscovered."
      },
      "date": 1565234184513
    },
    {
      "type": "edit",
      "id": "9cf20d768b93d0bb",
      "item": {
        "type": "paragraph",
        "id": "9cf20d768b93d0bb",
        "text": "Prof. Robert Daasch makes the distinction between problems and difficulties. A problem can be savored, enjoyed even, for with their solutions there is learning. Difficulties return nothing but a little more exhaustion. To his students his office was always open to problems but students were expected to solve the many difficulties associated with doing anything on a computer amongst themselves. See [[Computer Problems]]"
      },
      "date": 1565234416483
    },
    {
      "type": "add",
      "id": "18ad16c8bd4f6059",
      "item": {
        "type": "paragraph",
        "id": "18ad16c8bd4f6059",
        "text": "Be suspicious of solutions that allow one to do the same work faster. There can be interesting problems lurking behind tedious difficulties but faster work leaves less time to notice them. If adding 100 lines to a 1000 line program only postpones difficulty ask what 100 lines can be removed for only by new logic is this possible."
      },
      "after": "73f2203ed0fe0fdc",
      "date": 1565234914784
    },
    {
      "type": "add",
      "id": "96a0701ad1f1c647",
      "item": {
        "type": "paragraph",
        "id": "96a0701ad1f1c647",
        "text": "See [[Windmill Problem]] for a solution to be savored."
      },
      "after": "18ad16c8bd4f6059",
      "date": 1565268763212
    },
    {
      "type": "add",
      "id": "9a7fe9953ee769cc",
      "item": {
        "type": "paragraph",
        "id": "9a7fe9953ee769cc",
        "text": "See [[Tension, Real and Imagined]] for related contrasts."
      },
      "after": "96a0701ad1f1c647",
      "date": 1565274237634
    },
    {
      "type": "fork",
      "site": "code.fed.wiki",
      "date": 1565299693532
    },
    {
      "type": "fork",
      "site": "wellspring.fed.wiki",
      "date": 1644850519741
    },
    {
      "type": "edit",
      "id": "52360d2b5dfb7e6d",
      "item": {
        "type": "paragraph",
        "id": "52360d2b5dfb7e6d",
        "text": "We understand that complex systems will relentlessly [[surprise]] and that as such humans will be called upon to make them right again. We seek a familiarity where logic complements intuition and intuition supports ongoing accumulation of logic. A better break exposes things that respond to logic and and can be said to be interesting."
      },
      "date": 1644928610239
    }
  ]
}