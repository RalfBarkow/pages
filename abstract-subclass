{
  "title": "Abstract Subclass",
  "story": [
    {
      "type": "html",
      "text": "[[Abstract Subclass]] is a class that provides additional services based on the services the potential super/parent class provides.",
      "id": "a9407ccf6327d21e20bc1a610b50a3b7"
    },
    {
      "type": "html",
      "text": "\nIt is abstract in the sense that there are abstract requirements of what the super/parent class needs to implement.",
      "id": "255047b779e6f526de4763cb799c3ebe"
    },
    {
      "type": "html",
      "text": "\nSee Also [[Mix In]]",
      "id": "8dc5661c3c435448f66300718a664d79"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e74dd905b1e8f79dae8ca44a059259e4"
    },
    {
      "type": "html",
      "text": "A simple example would be the EnumerableM<b></b>odule in [[Ruby Language]] in which a class provides an [[Internal Iterator]] method called 'each', then by including/mixing in the EnumerableM<b></b>odule, the original class will be enhanced with new functionalities such as collect, detect, find, includes, etc.",
      "id": "cbdbdfb981d668ab9f16c1b6df033b36"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?AbstractSubclass c2.com]",
      "id": "f125b5087983519f4e56b4d655e031bf"
    }
  ],
  "journal": [
    {
      "date": 1099063356000,
      "id": "41c1a9351e2ce6d5d7ac6bb6e38f8f59",
      "type": "create",
      "item": {
        "title": "Abstract Subclass",
        "story": [
          {
            "type": "html",
            "text": "[[Abstract Subclass]] is a class that provides additional services based on the services the potential super/parent class provides.",
            "id": "a9407ccf6327d21e20bc1a610b50a3b7"
          },
          {
            "type": "html",
            "text": "\nIt is abstract in the sense that there are abstract requirements of what the super/parent class needs to implement.",
            "id": "255047b779e6f526de4763cb799c3ebe"
          },
          {
            "type": "html",
            "text": "\nSee Also [[Mix In]]",
            "id": "8dc5661c3c435448f66300718a664d79"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e74dd905b1e8f79dae8ca44a059259e4"
          },
          {
            "type": "html",
            "text": "A simple example would be the EnumerableM<b></b>odule in [[Ruby Language]] in which a class provides an [[Internal Iterator]] method called 'each', then by including/mixing in the EnumerableM<b></b>odule, the original class will be enhanced with new functionalities such as collect, detect, find, includes, etc.",
            "id": "cbdbdfb981d668ab9f16c1b6df033b36"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?AbstractSubclass c2.com]",
            "id": "f125b5087983519f4e56b4d655e031bf"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1631860148344
    }
  ]
}