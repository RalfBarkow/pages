{
  "title": "HTML Test",
  "story": [
    {
      "type": "html",
      "id": "078f5f6cf152b7cb",
      "text": "<body>\n  <p>HTML Test</p>\n  <simple-greeting name=\"World\"></simple-greeting>\n</body>"
    },
    {
      "type": "code",
      "id": "3e1f6235b6ca0e8e",
      "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n"
    },
    {
      "type": "paragraph",
      "id": "313907154e6512d9",
      "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting/>\n</body>`;\n}\n"
    },
    {
      "type": "paragraph",
      "id": "f50d8bf303fcced5",
      "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
    },
    {
      "type": "code",
      "id": "86b33666cf5f5ba4",
      "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
      "alias": "5eb6b67568179aa3"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame (esm) with simple-greeting"
    },
    {
      "type": "frame",
      "id": "f3592f168ab4c6c7",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "HTML Test",
        "story": []
      },
      "date": 1711204578304
    },
    {
      "item": {
        "type": "factory",
        "id": "078f5f6cf152b7cb"
      },
      "id": "078f5f6cf152b7cb",
      "type": "add",
      "date": 1711204579915
    },
    {
      "type": "edit",
      "id": "078f5f6cf152b7cb",
      "item": {
        "type": "html",
        "id": "078f5f6cf152b7cb",
        "text": "<body>\n  <p>HTML Test</p>\n</body>"
      },
      "date": 1711204604460
    },
    {
      "id": "3e1f6235b6ca0e8e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n"
      },
      "after": "078f5f6cf152b7cb",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204630418
    },
    {
      "id": "313907154e6512d9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204635634
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting/>\n</body>`;\n}\n"
      },
      "after": "313907154e6512d9",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204638379
    },
    {
      "id": "f50d8bf303fcced5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "after": "5eb6b67568179aa3",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204644155
    },
    {
      "id": "86b33666cf5f5ba4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "86b33666cf5f5ba4",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
        "alias": "5eb6b67568179aa3"
      },
      "after": "f50d8bf303fcced5",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204652811
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame (esm) with simple-greeting"
      },
      "after": "86b33666cf5f5ba4",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204657567
    },
    {
      "id": "f3592f168ab4c6c7",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "f3592f168ab4c6c7",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "00f76ff348892888",
      "attribution": {
        "page": "Lit",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711204663464
    },
    {
      "type": "edit",
      "id": "078f5f6cf152b7cb",
      "item": {
        "type": "html",
        "id": "078f5f6cf152b7cb",
        "text": "<body>\n  <p>HTML Test</p>\n<simple-greeting/>\n</body>"
      },
      "date": 1711204680085
    },
    {
      "type": "edit",
      "id": "078f5f6cf152b7cb",
      "item": {
        "type": "html",
        "id": "078f5f6cf152b7cb",
        "text": "<body>\n  <p>HTML Test</p>\n  <simple-greeting/>\n</body>"
      },
      "date": 1711204690079
    },
    {
      "type": "edit",
      "id": "078f5f6cf152b7cb",
      "item": {
        "type": "html",
        "id": "078f5f6cf152b7cb",
        "text": "<body>\n  <p>HTML Test</p>\n  <simple-greeting name=\"World\"></simple-greeting>\n</body>"
      },
      "date": 1711204742597
    },
    {
      "item": {
        "type": "factory",
        "id": "13ff8c7ec153d63e"
      },
      "id": "13ff8c7ec153d63e",
      "type": "add",
      "after": "f3592f168ab4c6c7",
      "date": 1711208933013
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "window.addEventListener('DOMContentLoaded', () => {\n\twindow.addEventListener('message', event => {\n\tdocument.querySelector('p'),innerHTML = 'Message from index.html: ${$event.data}'\n\tevent.ports[0].postMessage('Ho!')\n\t})\n})"
      },
      "date": 1711208938354
    },
    {
      "id": "13ff8c7ec153d63e",
      "type": "remove",
      "removedTo": {
        "page": "2024-03-23"
      },
      "date": 1711209631142
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711469063959
    }
  ]
}