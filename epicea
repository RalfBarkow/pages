{
  "title": "Epicea",
  "story": [
    {
      "type": "markdown",
      "id": "b240ec82a610a339",
      "text": "M. Marra, “IDRA: An out-of-place debugger for non-stoppable applications,” 2017. https://soft.vub.ac.be/Publications/2017/vub-soft-ms-17-01.pdf (accessed Sep. 01, 2021).\n\n> [[Epicea]] provides several visitors that simplify the interaction with the changes, such as `EpApplyVisitor`, the `EpUndo` and the `EpRedo`. It is important that the changes are applied in the same order they were retrieved, to avoid missing dependencies.\n"
    },
    {
      "type": "markdown",
      "id": "78fa406d789064eb",
      "text": "See [[EpApplyVisitor]] and [[How to Work with a Remote Code Synced Image]]\n"
    },
    {
      "type": "markdown",
      "id": "013a860f452e20e3",
      "text": "# Retrieving and applying changes\nEpicea offers a class `EpMonitor` which is the one holding a reference to the current *changes store*. The *changes store* is the data structure in which all the changes are stored. This data structure can be retrieved at any moment, and will give a set of `EpEntries` representing the changes of the current session. The *changes store* is totally accessible, and its changes can be re-applied using a visitor pattern. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Epicea",
        "story": []
      },
      "date": 1630488268813
    },
    {
      "item": {
        "type": "factory",
        "id": "b240ec82a610a339"
      },
      "id": "b240ec82a610a339",
      "type": "add",
      "date": 1630488283948
    },
    {
      "type": "edit",
      "id": "b240ec82a610a339",
      "item": {
        "type": "markdown",
        "id": "b240ec82a610a339",
        "text": "[[Epicea]] provides several visitors that simplify the interaction with the changes, such as EpApplyVisitor, the EpUndo and the EpRedo. It is important that the changes are applied in the same order they were retrieved, to avoid missing dependencies."
      },
      "date": 1630488309821
    },
    {
      "type": "edit",
      "id": "b240ec82a610a339",
      "item": {
        "type": "markdown",
        "id": "b240ec82a610a339",
        "text": "[[Epicea]] provides several visitors that simplify the interaction with the changes, such as `EpApplyVisitor`, the `EpUndo` and the `EpRedo`. It is important that the changes are applied in the same order they were retrieved, to avoid missing dependencies."
      },
      "date": 1630488735507
    },
    {
      "type": "edit",
      "id": "b240ec82a610a339",
      "item": {
        "type": "markdown",
        "id": "b240ec82a610a339",
        "text": "M. Marra, “IDRA: An out-of-place debugger for non-stoppable applications,” 2017. https://soft.vub.ac.be/Publications/2017/vub-soft-ms-17-01.pdf (accessed Sep. 01, 2021).\n\n> [[Epicea]] provides several visitors that simplify the interaction with the changes, such as `EpApplyVisitor`, the `EpUndo` and the `EpRedo`. It is important that the changes are applied in the same order they were retrieved, to avoid missing dependencies."
      },
      "date": 1630490584175
    },
    {
      "type": "edit",
      "id": "b240ec82a610a339",
      "item": {
        "type": "markdown",
        "id": "b240ec82a610a339",
        "text": "M. Marra, “IDRA: An out-of-place debugger for non-stoppable applications,” 2017. https://soft.vub.ac.be/Publications/2017/vub-soft-ms-17-01.pdf (accessed Sep. 01, 2021).\n\n> [[Epicea]] provides several visitors that simplify the interaction with the changes, such as `EpApplyVisitor`, the `EpUndo` and the `EpRedo`. It is important that the changes are applied in the same order they were retrieved, to avoid missing dependencies.\n"
      },
      "date": 1630490740862
    },
    {
      "type": "add",
      "id": "78fa406d789064eb",
      "item": {
        "type": "markdown",
        "id": "78fa406d789064eb",
        "text": "See [[EpApplyVisitor]]"
      },
      "after": "b240ec82a610a339",
      "date": 1630490755007
    },
    {
      "type": "edit",
      "id": "78fa406d789064eb",
      "item": {
        "type": "markdown",
        "id": "78fa406d789064eb",
        "text": "See [[EpApplyVisitor]] and"
      },
      "date": 1630490767065
    },
    {
      "type": "edit",
      "id": "78fa406d789064eb",
      "item": {
        "type": "markdown",
        "id": "78fa406d789064eb",
        "text": "See [[EpApplyVisitor]] and [[How to Work with a Remote Code Synced Image]]"
      },
      "date": 1630490777895
    },
    {
      "type": "edit",
      "id": "78fa406d789064eb",
      "item": {
        "type": "markdown",
        "id": "78fa406d789064eb",
        "text": "See [[EpApplyVisitor]] and [[How to Work with a Remote Code Synced Image]]\n"
      },
      "date": 1630490886055
    },
    {
      "type": "add",
      "id": "013a860f452e20e3",
      "item": {
        "type": "markdown",
        "id": "013a860f452e20e3",
        "text": "# Retrieving and applying changes\nEpicea offers a class EpMonitor which is the one holding a reference to the\ncurrent changes store. The changes store is the data structure in which all the\nchanges are stored. This data structure can be retrieved at any moment, and\nwill give a set of EpEntries representing the changes of the current session.\nThe changes store is totally accessible, and its changes can be re-applied using\na visitor pattern. "
      },
      "after": "78fa406d789064eb",
      "date": 1630490891339
    },
    {
      "type": "edit",
      "id": "013a860f452e20e3",
      "item": {
        "type": "markdown",
        "id": "013a860f452e20e3",
        "text": "# Retrieving and applying changes\nEpicea offers a class `EpMonitor` which is the one holding a reference to the current changes store. The changes store is the data structure in which all the changes are stored. This data structure can be retrieved at any moment, and will give a set of EpEntries representing the changes of the current session. The changes store is totally accessible, and its changes can be re-applied usinga visitor pattern. "
      },
      "date": 1630490927009
    },
    {
      "type": "edit",
      "id": "013a860f452e20e3",
      "item": {
        "type": "markdown",
        "id": "013a860f452e20e3",
        "text": "# Retrieving and applying changes\nEpicea offers a class `EpMonitor` which is the one holding a reference to the current *changes store*. The *changes store* is the data structure in which all the changes are stored. This data structure can be retrieved at any moment, and will give a set of `EpEntries` representing the changes of the current session. The *changes store* is totally accessible, and its changes can be re-applied using a visitor pattern. "
      },
      "date": 1630490988852
    }
  ]
}