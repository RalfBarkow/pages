{
  "title": "Prefiltering Antialiasing for General Vector Graphics",
  "story": [
    {
      "type": "paragraph",
      "id": "2a1d632369a1ad21",
      "text": "The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. "
    },
    {
      "type": "paragraph",
      "id": "51e2d5ae10ef227b",
      "text": "The quality of the results could be greatly improved through the application of [[Sampling Theory]]. "
    },
    {
      "type": "pagefold",
      "id": "9d7c7281b2f276b8",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "d07c8a8a98f2f2ce",
      "text": "VULETICH, Juan, 2013. Prefiltering Antialiasing for General Vector Graphics. [https://www.researchgate.net/publication/267152327_Prefiltering_Antialiasing_for_General_Vector_Graphics researchgate], [https://priorart.ip.com/IPCOM/000232657 page], [https://www.researchgate.net/profile/Juan-Vuletich/publication/267152327_Prefiltering_Antialiasing_for_General_Vector_Graphics/links/54465c1e0cf22b3c14de1cb1/Prefiltering-Antialiasing-for-General-Vector-Graphics.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "95297aade5209c4f",
      "text": "⇒ [[Vector Graphics and Morphic 3]]"
    },
    {
      "type": "paragraph",
      "id": "06933e729a37627b",
      "text": "The main parts of the disclosed solution are: "
    },
    {
      "type": "paragraph",
      "id": "e2bad91841e409e5",
      "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of [[Paper]], in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This [[Model]] of the drawing to be made is [[continuous]] and independent of any specific pixel grid."
    },
    {
      "type": "paragraph",
      "id": "3dd0712fc3715008",
      "text": "[…] Figure 1. The outline of a sample shape, and the opacity function (i.e. the pen nib of width w) to draw it. The pen nib is completely opaque, and therefore paints over any existing background. We can say that the pen function is transparent everywhere outside the nib, as those areas won’t be affected at all. The dashed line is the path followed by the pen."
    },
    {
      "type": "paragraph",
      "id": "61c3c15690d3a518",
      "text": "b) The destination frame buffer where the drawing is to be done. This is usually 24 bit RGB, or as appropriate for the application. The destination specifies the pixel grid that the shape must be sampled at."
    },
    {
      "type": "paragraph",
      "id": "7d27700c2cc08a3e",
      "text": "[…] Figure 2. Destination frame buffer and pixel [[Grid]] for the rasterization of our example"
    },
    {
      "type": "pagefold",
      "id": "2712d77eb726f847",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "b9bde4b34012b5a4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "generate-a-rectangular-grid",
      "title": "Generate a Rectangular Grid",
      "text": "[[kohonen-stars]] [https://github.com/seracio/kohonen-stars github] is an example for our library kohonen [https://github.com/seracio/kohonen github], a basic implementation of [[SOM]] algorithm in JavaScript."
    },
    {
      "type": "pagefold",
      "id": "f2fe0c81cb4f0cb2",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "f00edb77a3d7de60",
      "text": "c) A filter size parameter r. In the following diagrams, we’ll assume r = 1.5. This means that the transition from transparent to opaque will take at least 1.5 pixels. Other values are possible, and useful values were found to be between 1 (very crisp, some jaggies are visible) to 2 (very soft, absolutely no jaggies or aliasing)."
    },
    {
      "type": "paragraph",
      "id": "2d4e82fcfc75638b",
      "text": "d) A prefiltering pen. It is a pen with an opaque center and translucent borders. The area under the opacity function is the same as in (a) and equals w, meaning that the weight of the line will not change. But the transition from transparent to opaque is gradual, leading to a translucent stripe of width r at each border of the line drawn by the pen."
    },
    {
      "type": "paragraph",
      "id": "aa8f45dec269ce07",
      "text": "[…] Figure 3. Opacity function of our prefiltering pen, and our example shape as drawn by it. Translucent parts of the pen will mean that the existing background is somewhat visible behind the outline."
    },
    {
      "type": "paragraph",
      "id": "c55fe6aa0f79574e",
      "text": "e) An auxiliary distance buffer, with the same extent as the destination. It needs to store for each pixel in the destination, a float number, or alternately a fixed point number."
    },
    {
      "type": "paragraph",
      "id": "22de749f9f714172",
      "text": "[…] Figure 4. Our sample shape, as drawn by an ideal continuous prefiltering pen, shown over the pixel grid. The light gray background is more visible near the borders of the outline, where the pen gets progressively translucent."
    },
    {
      "type": "paragraph",
      "id": "b8b6323dfcdf2e53",
      "text": "⇒ [[draw]] ⇒ [[Outline of a Shape]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Prefiltering Antialiasing for General Vector Graphics",
        "story": []
      },
      "date": 1662976083569
    },
    {
      "item": {
        "type": "factory",
        "id": "d07c8a8a98f2f2ce"
      },
      "id": "d07c8a8a98f2f2ce",
      "type": "add",
      "date": 1662976084881
    },
    {
      "type": "edit",
      "id": "d07c8a8a98f2f2ce",
      "item": {
        "type": "paragraph",
        "id": "d07c8a8a98f2f2ce",
        "text": "\nVULETICH, Juan, 2013. Prefiltering Antialiasing for General Vector Graphics. . The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as pixel coverage. The quality of the results could be greatly improved through the application of sampling theory. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1662976086345
    },
    {
      "type": "edit",
      "id": "d07c8a8a98f2f2ce",
      "item": {
        "type": "paragraph",
        "id": "d07c8a8a98f2f2ce",
        "text": "VULETICH, Juan, 2013. Prefiltering Antialiasing for General Vector Graphics. "
      },
      "date": 1662976107413
    },
    {
      "type": "add",
      "id": "9dde05b5386d4a2f",
      "item": {
        "type": "paragraph",
        "id": "9dde05b5386d4a2f",
        "text": "> The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. The quality of the results could be greatly improved through the application of sampling theory. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "after": "d07c8a8a98f2f2ce",
      "date": 1662976124254
    },
    {
      "type": "edit",
      "id": "9dde05b5386d4a2f",
      "item": {
        "type": "markdown",
        "id": "9dde05b5386d4a2f",
        "text": "> The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. The quality of the results could be greatly improved through the application of sampling theory. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1662976125906
    },
    {
      "type": "edit",
      "id": "9dde05b5386d4a2f",
      "item": {
        "type": "markdown",
        "id": "9dde05b5386d4a2f",
        "text": "> The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. The quality of the results could be greatly improved through the application of [[Sampling Theory]]. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1662976147955
    },
    {
      "item": {
        "type": "factory",
        "id": "95297aade5209c4f"
      },
      "id": "95297aade5209c4f",
      "type": "add",
      "after": "9dde05b5386d4a2f",
      "date": 1662976434559
    },
    {
      "type": "edit",
      "id": "95297aade5209c4f",
      "item": {
        "type": "paragraph",
        "id": "95297aade5209c4f",
        "text": "⇒ [["
      },
      "date": 1662976438376
    },
    {
      "type": "edit",
      "id": "95297aade5209c4f",
      "item": {
        "type": "paragraph",
        "id": "95297aade5209c4f",
        "text": "⇒ [[Vector Graphics and Morphic 3]]"
      },
      "date": 1662976448351
    },
    {
      "type": "edit",
      "id": "d07c8a8a98f2f2ce",
      "item": {
        "type": "paragraph",
        "id": "d07c8a8a98f2f2ce",
        "text": "VULETICH, Juan, 2013. Prefiltering Antialiasing for General Vector Graphics. [https://www.researchgate.net/publication/267152327_Prefiltering_Antialiasing_for_General_Vector_Graphics researchgate], [https://priorart.ip.com/IPCOM/000232657 page]"
      },
      "date": 1662977536581
    },
    {
      "type": "edit",
      "id": "d07c8a8a98f2f2ce",
      "item": {
        "type": "paragraph",
        "id": "d07c8a8a98f2f2ce",
        "text": "VULETICH, Juan, 2013. Prefiltering Antialiasing for General Vector Graphics. [https://www.researchgate.net/publication/267152327_Prefiltering_Antialiasing_for_General_Vector_Graphics researchgate], [https://priorart.ip.com/IPCOM/000232657 page], [https://www.researchgate.net/profile/Juan-Vuletich/publication/267152327_Prefiltering_Antialiasing_for_General_Vector_Graphics/links/54465c1e0cf22b3c14de1cb1/Prefiltering-Antialiasing-for-General-Vector-Graphics.pdf pdf]"
      },
      "date": 1662977550491
    },
    {
      "item": {
        "type": "factory",
        "id": "2a1d632369a1ad21"
      },
      "id": "2a1d632369a1ad21",
      "type": "add",
      "after": "95297aade5209c4f",
      "date": 1675338126784
    },
    {
      "type": "remove",
      "id": "9dde05b5386d4a2f",
      "date": 1675338128036
    },
    {
      "type": "edit",
      "id": "2a1d632369a1ad21",
      "item": {
        "type": "paragraph",
        "id": "2a1d632369a1ad21",
        "text": "> The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. The quality of the results could be greatly improved through the application of [[Sampling Theory]]. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1675338128406
    },
    {
      "id": "2a1d632369a1ad21",
      "type": "move",
      "order": [
        "2a1d632369a1ad21",
        "d07c8a8a98f2f2ce",
        "95297aade5209c4f"
      ],
      "date": 1675338130949
    },
    {
      "type": "edit",
      "id": "2a1d632369a1ad21",
      "item": {
        "type": "paragraph",
        "id": "2a1d632369a1ad21",
        "text": "The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. The quality of the results could be greatly improved through the application of [[Sampling Theory]]. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1675338135823
    },
    {
      "item": {
        "type": "factory",
        "id": "9d7c7281b2f276b8"
      },
      "id": "9d7c7281b2f276b8",
      "type": "add",
      "after": "95297aade5209c4f",
      "date": 1675338138022
    },
    {
      "type": "edit",
      "id": "9d7c7281b2f276b8",
      "item": {
        "type": "pagefold",
        "id": "9d7c7281b2f276b8",
        "text": "~"
      },
      "date": 1675338141398
    },
    {
      "id": "9d7c7281b2f276b8",
      "type": "move",
      "order": [
        "2a1d632369a1ad21",
        "9d7c7281b2f276b8",
        "d07c8a8a98f2f2ce",
        "95297aade5209c4f"
      ],
      "date": 1675338145374
    },
    {
      "type": "edit",
      "id": "2a1d632369a1ad21",
      "item": {
        "type": "paragraph",
        "id": "2a1d632369a1ad21",
        "text": "The graphics engines commonly used to draw vector graphics apply the antialiasing technique known as [[Pixel Coverage]]. "
      },
      "date": 1675338155641
    },
    {
      "type": "add",
      "id": "51e2d5ae10ef227b",
      "item": {
        "type": "paragraph",
        "id": "51e2d5ae10ef227b",
        "text": "The quality of the results could be greatly improved through the application of [[Sampling Theory]]. This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "after": "2a1d632369a1ad21",
      "date": 1675338156046
    },
    {
      "type": "edit",
      "id": "51e2d5ae10ef227b",
      "item": {
        "type": "paragraph",
        "id": "51e2d5ae10ef227b",
        "text": "The quality of the results could be greatly improved through the application of [[Sampling Theory]]. "
      },
      "date": 1675338167033
    },
    {
      "type": "add",
      "id": "88543e1a1fc2abf2",
      "item": {
        "type": "paragraph",
        "id": "88543e1a1fc2abf2",
        "text": "This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a shape, and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "after": "51e2d5ae10ef227b",
      "date": 1675338168304
    },
    {
      "type": "edit",
      "id": "88543e1a1fc2abf2",
      "item": {
        "type": "paragraph",
        "id": "88543e1a1fc2abf2",
        "text": "This work presents a simple and practical technique for the rasterization of general vector graphics with correct prefiltering antialiasing: An appropriate antialiasing filter is applied to a continuous model of a [[Shape]], and the result is sampled at each pixel position, producing the rasterized output. The use of this technique can significantly enhance the visual quality of most computer applications.\n"
      },
      "date": 1675338214456
    },
    {
      "id": "88543e1a1fc2abf2",
      "type": "remove",
      "date": 1675338361687
    },
    {
      "item": {
        "type": "factory",
        "id": "06933e729a37627b"
      },
      "id": "06933e729a37627b",
      "type": "add",
      "after": "95297aade5209c4f",
      "date": 1675342375618
    },
    {
      "type": "edit",
      "id": "06933e729a37627b",
      "item": {
        "type": "paragraph",
        "id": "06933e729a37627b",
        "text": "The main parts of the disclosed solution are: a) The outline of the shape to be drawn. This is a description of how a pen should be dragged over a piece of paper, in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This model of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342377518
    },
    {
      "type": "edit",
      "id": "06933e729a37627b",
      "item": {
        "type": "paragraph",
        "id": "06933e729a37627b",
        "text": "The main parts of the disclosed solution are: "
      },
      "date": 1675342382964
    },
    {
      "type": "add",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the shape to be drawn. This is a description of how a pen should be dragged over a piece of paper, in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This model of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "after": "06933e729a37627b",
      "date": 1675342383352
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a pen should be dragged over a piece of paper, in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This model of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342398021
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of paper, in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This model of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342416091
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of [[paper]], in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This model of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342428535
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of [[paper]], in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This [[Model]] of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342467932
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of [[Paper]], in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This [[Model]] of the drawing to be made is continuous and independent of any specific pixel grid."
      },
      "date": 1675342536741
    },
    {
      "type": "edit",
      "id": "e2bad91841e409e5",
      "item": {
        "type": "paragraph",
        "id": "e2bad91841e409e5",
        "text": "a) The outline of the [[Shape]] to be drawn. This is a description of how a [[Pen]] should be dragged over a piece of [[Paper]], in order to draw it. It is specified as a sequence of straight lines or curves. It also includes a line width w (a real number) and a color. All points (segment endpoints, center and radius for circles, control points for Bézier curves, etc.) use real numbers too. This [[Model]] of the drawing to be made is [[continuous]] and independent of any specific pixel grid."
      },
      "date": 1675342567871
    },
    {
      "item": {
        "type": "factory",
        "id": "3dd0712fc3715008"
      },
      "id": "3dd0712fc3715008",
      "type": "add",
      "after": "e2bad91841e409e5",
      "date": 1675342578976
    },
    {
      "type": "edit",
      "id": "3dd0712fc3715008",
      "item": {
        "type": "paragraph",
        "id": "3dd0712fc3715008",
        "text": "[…] Figure 1. The outline of a sample shape, and the opacity function (i.e. the pen nib of width w) to draw it. The pen nib is completely opaque, and therefore paints over any existing background. We can say that the pen function is transparent everywhere outside the nib, as those areas won’t be affected at all. The dashed line is the path followed by the pen."
      },
      "date": 1675342581987
    },
    {
      "item": {
        "type": "factory",
        "id": "61c3c15690d3a518"
      },
      "id": "61c3c15690d3a518",
      "type": "add",
      "after": "3dd0712fc3715008",
      "date": 1675342610706
    },
    {
      "type": "edit",
      "id": "61c3c15690d3a518",
      "item": {
        "type": "paragraph",
        "id": "61c3c15690d3a518",
        "text": "b) The destination frame buffer where the drawing is to be done. This is usually 24 bit RGB, or as appropriate for the application. The destination specifies the pixel grid that the shape must be sampled at."
      },
      "date": 1675342612188
    },
    {
      "item": {
        "type": "factory",
        "id": "7d27700c2cc08a3e"
      },
      "id": "7d27700c2cc08a3e",
      "type": "add",
      "after": "61c3c15690d3a518",
      "date": 1675342622560
    },
    {
      "type": "edit",
      "id": "7d27700c2cc08a3e",
      "item": {
        "type": "paragraph",
        "id": "7d27700c2cc08a3e",
        "text": "[…] Figure 2. Destination frame buffer and pixel grid for the rasterization of our example"
      },
      "date": 1675342635740
    },
    {
      "item": {
        "type": "factory",
        "id": "b9bde4b34012b5a4"
      },
      "id": "b9bde4b34012b5a4",
      "type": "add",
      "after": "7d27700c2cc08a3e",
      "date": 1675342677361
    },
    {
      "type": "edit",
      "id": "b9bde4b34012b5a4",
      "item": {
        "type": "reference",
        "id": "b9bde4b34012b5a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "generate-a-rectangular-grid",
        "title": "Generate a Rectangular Grid",
        "text": "[[kohonen-stars]] [https://github.com/seracio/kohonen-stars github] is an example for our library kohonen [https://github.com/seracio/kohonen github], a basic implementation of [[SOM]] algorithm in JavaScript."
      },
      "date": 1675342680533
    },
    {
      "item": {
        "type": "factory",
        "id": "2712d77eb726f847"
      },
      "id": "2712d77eb726f847",
      "type": "add",
      "after": "b9bde4b34012b5a4",
      "date": 1675342682761
    },
    {
      "type": "edit",
      "id": "2712d77eb726f847",
      "item": {
        "type": "pagefold",
        "id": "2712d77eb726f847",
        "text": "~"
      },
      "date": 1675342686265
    },
    {
      "id": "2712d77eb726f847",
      "type": "move",
      "order": [
        "2a1d632369a1ad21",
        "51e2d5ae10ef227b",
        "9d7c7281b2f276b8",
        "d07c8a8a98f2f2ce",
        "95297aade5209c4f",
        "06933e729a37627b",
        "e2bad91841e409e5",
        "3dd0712fc3715008",
        "61c3c15690d3a518",
        "7d27700c2cc08a3e",
        "2712d77eb726f847",
        "b9bde4b34012b5a4"
      ],
      "date": 1675342688349
    },
    {
      "item": {
        "type": "factory",
        "id": "f2fe0c81cb4f0cb2"
      },
      "id": "f2fe0c81cb4f0cb2",
      "type": "add",
      "after": "b9bde4b34012b5a4",
      "date": 1675342689786
    },
    {
      "type": "edit",
      "id": "f2fe0c81cb4f0cb2",
      "item": {
        "type": "pagefold",
        "id": "f2fe0c81cb4f0cb2",
        "text": "~"
      },
      "date": 1675342692347
    },
    {
      "type": "edit",
      "id": "7d27700c2cc08a3e",
      "item": {
        "type": "paragraph",
        "id": "7d27700c2cc08a3e",
        "text": "[…] Figure 2. Destination frame buffer and pixel [[Grid]] for the rasterization of our example"
      },
      "date": 1675342726259
    },
    {
      "item": {
        "type": "factory",
        "id": "f00edb77a3d7de60"
      },
      "id": "f00edb77a3d7de60",
      "type": "add",
      "after": "f2fe0c81cb4f0cb2",
      "date": 1675342756331
    },
    {
      "type": "edit",
      "id": "f00edb77a3d7de60",
      "item": {
        "type": "paragraph",
        "id": "f00edb77a3d7de60",
        "text": "c) A filter size parameter r. In the following diagrams, we’ll assume r = 1.5. This means that the transition from transparent to opaque will take at least 1.5 pixels. Other values are possible, and useful values were found to be between 1 (very crisp, some jaggies are visible) to 2 (very soft, absolutely no jaggies or aliasing)."
      },
      "date": 1675342758045
    },
    {
      "item": {
        "type": "factory",
        "id": "2d4e82fcfc75638b"
      },
      "id": "2d4e82fcfc75638b",
      "type": "add",
      "after": "f00edb77a3d7de60",
      "date": 1675342779811
    },
    {
      "type": "edit",
      "id": "2d4e82fcfc75638b",
      "item": {
        "type": "paragraph",
        "id": "2d4e82fcfc75638b",
        "text": "d) A prefiltering pen. It is a pen with an opaque center and translucent borders. The area under the opacity function is the same as in (a) and equals w, meaning that the weight of the line will not change. But the transition from transparent to opaque is gradual, leading to a translucent stripe of width r at each border of the line drawn by the pen."
      },
      "date": 1675342781618
    },
    {
      "item": {
        "type": "factory",
        "id": "aa8f45dec269ce07"
      },
      "id": "aa8f45dec269ce07",
      "type": "add",
      "after": "2d4e82fcfc75638b",
      "date": 1675342814832
    },
    {
      "type": "edit",
      "id": "aa8f45dec269ce07",
      "item": {
        "type": "paragraph",
        "id": "aa8f45dec269ce07",
        "text": "[…] Figure 3. Opacity function of our prefiltering pen, and our example shape as drawn by it. Translucent parts of the pen will mean that the existing background is somewhat visible behind the outline."
      },
      "date": 1675342819115
    },
    {
      "item": {
        "type": "factory",
        "id": "c55fe6aa0f79574e"
      },
      "id": "c55fe6aa0f79574e",
      "type": "add",
      "after": "aa8f45dec269ce07",
      "date": 1675342827907
    },
    {
      "type": "edit",
      "id": "c55fe6aa0f79574e",
      "item": {
        "type": "paragraph",
        "id": "c55fe6aa0f79574e",
        "text": "e) An auxiliary distance buffer, with the same extent as the destination. It needs to store for each pixel in the destination, a float number, or alternately a fixed point number."
      },
      "date": 1675342829441
    },
    {
      "item": {
        "type": "factory",
        "id": "22de749f9f714172"
      },
      "id": "22de749f9f714172",
      "type": "add",
      "after": "c55fe6aa0f79574e",
      "date": 1675342851856
    },
    {
      "type": "edit",
      "id": "22de749f9f714172",
      "item": {
        "type": "paragraph",
        "id": "22de749f9f714172",
        "text": "[…] Figure 4. Our sample shape, as drawn by an ideal continuous prefiltering pen, shown over the pixel grid. The light gray background is more visible near the borders of the outline, where the pen gets progressively translucent."
      },
      "date": 1675342855024
    },
    {
      "item": {
        "type": "factory",
        "id": "b8b6323dfcdf2e53"
      },
      "id": "b8b6323dfcdf2e53",
      "type": "add",
      "after": "22de749f9f714172",
      "date": 1675342886371
    },
    {
      "type": "edit",
      "id": "b8b6323dfcdf2e53",
      "item": {
        "type": "paragraph",
        "id": "b8b6323dfcdf2e53",
        "text": "[[Outline of a Shap]]"
      },
      "date": 1675342891799
    },
    {
      "type": "edit",
      "id": "b8b6323dfcdf2e53",
      "item": {
        "type": "paragraph",
        "id": "b8b6323dfcdf2e53",
        "text": "⇒ [[draw]] ⇒ [[Outline of a Shap]]"
      },
      "date": 1675342909524
    },
    {
      "type": "edit",
      "id": "b8b6323dfcdf2e53",
      "item": {
        "type": "paragraph",
        "id": "b8b6323dfcdf2e53",
        "text": "⇒ [[draw]] ⇒ [[Outline of a Shape]]"
      },
      "date": 1675342951818
    }
  ]
}