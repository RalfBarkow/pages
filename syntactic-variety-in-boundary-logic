{
  "title": "Syntactic Variety in Boundary Logic",
  "story": [
    {
      "type": "paragraph",
      "id": "b599b2c9fd777b3f",
      "text": "\nBRICKEN, William, 2006. Syntactic Variety in Boundary Logic. In: BARKER-PLUMMER, Dave, COX, Richard and SWOBODA, Nik (eds.), Diagrammatic Representation and Inference. Online. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 73–87. Lecture Notes in Computer Science. [Accessed 31 July 2022]. ISBN 978-3-540-35623-3. \n"
    },
    {
      "type": "markdown",
      "id": "4f72b80ef95106bb",
      "text": "> Boundary logic is a formal diagrammatic system that combines Peirce’s Entitative Graphs with Spencer Brown’s Laws of Form. Its conceptual basis includes boundary forms composed of non-intersecting closed curves, void-substitution (deletion of irrelevant structure) as the primary mechanism of reduction, and spatial pattern-equations that define valid transformations. Pure boundary algebra, free of interpretation, is first briefly described, followed by a description of boundary logic. Then several new diagrammatic notations for logic derived from geometrical and topological transformation of boundary forms are presented. The algebra and an example proof of modus ponens is provided for textual, enclosure, graph, map, path and block based forms. These new diagrammatic languages for logic convert connectives into configurations of containment, connectivity, contact, conveyance, and concreteness."
    },
    {
      "type": "markdown",
      "id": "094cdafbb17c2b49",
      "text": "* [[Axiomitization of Boundary Logic]]\n* [[Boundary Algebra]] ⇒ [[Boundaries]]"
    },
    {
      "type": "graphviz",
      "id": "b5f1b28cb6983975",
      "text": "DOT FROM lambda-browsing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Syntactic Variety in Boundary Logic",
        "story": []
      },
      "date": 1659264089319
    },
    {
      "item": {
        "type": "factory",
        "id": "b599b2c9fd777b3f"
      },
      "id": "b599b2c9fd777b3f",
      "type": "add",
      "date": 1659264091170
    },
    {
      "type": "edit",
      "id": "b599b2c9fd777b3f",
      "item": {
        "type": "paragraph",
        "id": "b599b2c9fd777b3f",
        "text": "\nBRICKEN, William, 2006. Syntactic Variety in Boundary Logic. In: BARKER-PLUMMER, Dave, COX, Richard and SWOBODA, Nik (eds.), Diagrammatic Representation and Inference. Online. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 73–87. Lecture Notes in Computer Science. [Accessed 31 July 2022]. ISBN 978-3-540-35623-3. \n"
      },
      "date": 1659264092712
    },
    {
      "item": {
        "type": "factory",
        "id": "4f72b80ef95106bb"
      },
      "id": "4f72b80ef95106bb",
      "type": "add",
      "after": "b599b2c9fd777b3f",
      "date": 1659264125366
    },
    {
      "type": "edit",
      "id": "4f72b80ef95106bb",
      "item": {
        "type": "markdown",
        "id": "4f72b80ef95106bb",
        "text": "> Boundary logic is a formal diagrammatic system that combines Peirce’s Entitative Graphs with Spencer Brown’s Laws of Form. Its conceptual basis includes boundary forms composed of non-intersecting closed curves, void-substitution (deletion of irrelevant structure) as the primary mechanism of reduction, and spatial pattern-equations that define valid transformations. Pure boundary algebra, free of interpretation, is first briefly described, followed by a description of boundary logic. Then several new diagrammatic notations for logic derived from geometrical and topological transformation of boundary forms are presented. The algebra and an example proof of modus ponens is provided for textual, enclosure, graph, map, path and block based forms. These new diagrammatic languages for logic convert connectives into configurations of containment, connectivity, contact, conveyance, and concreteness."
      },
      "date": 1659264128562
    },
    {
      "item": {
        "type": "factory",
        "id": "094cdafbb17c2b49"
      },
      "id": "094cdafbb17c2b49",
      "type": "add",
      "after": "4f72b80ef95106bb",
      "date": 1659264215032
    },
    {
      "type": "edit",
      "id": "094cdafbb17c2b49",
      "item": {
        "type": "markdown",
        "id": "094cdafbb17c2b49",
        "text": "* [[Boundary Algebra]] "
      },
      "date": 1659264221674
    },
    {
      "type": "edit",
      "id": "094cdafbb17c2b49",
      "item": {
        "type": "markdown",
        "id": "094cdafbb17c2b49",
        "text": "* [[Boundary Algebra]] – [[Boundaries]]"
      },
      "date": 1659264234892
    },
    {
      "item": {
        "type": "factory",
        "id": "b5f1b28cb6983975"
      },
      "id": "b5f1b28cb6983975",
      "type": "add",
      "after": "094cdafbb17c2b49",
      "date": 1659264243791
    },
    {
      "type": "edit",
      "id": "094cdafbb17c2b49",
      "item": {
        "type": "markdown",
        "id": "094cdafbb17c2b49",
        "text": "* [[Boundary Algebra]] ⇒ [[Boundaries]]"
      },
      "date": 1659264246086
    },
    {
      "type": "edit",
      "id": "b5f1b28cb6983975",
      "item": {
        "type": "graphviz",
        "id": "b5f1b28cb6983975",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1659264265869
    },
    {
      "type": "edit",
      "id": "094cdafbb17c2b49",
      "item": {
        "type": "markdown",
        "id": "094cdafbb17c2b49",
        "text": "* [[Axiomitization of Boundary Logic]]\n* [[Boundary Algebra]] ⇒ [[Boundaries]]"
      },
      "date": 1659264333174
    }
  ]
}