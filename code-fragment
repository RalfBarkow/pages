{
  "title": "Code Fragment",
  "story": [
    {
      "type": "paragraph",
      "id": "ffe4111144aa4308",
      "text": "Ward suggested that Thompson join him and metaphorically [[Rake in the Field]] of computer programming."
    },
    {
      "type": "markdown",
      "id": "7343e324ad82114f",
      "text": ">To be native to a place we must learn to speak its language -- Robin Wall Kimmerer"
    },
    {
      "type": "paragraph",
      "id": "691a8216b27e75b5",
      "text": "I talked him through opening the javascript editor on the very page we were using to video chat. cmd-option-i does this for Chrome on a Mac."
    },
    {
      "type": "paragraph",
      "id": "1a109a1a5388f4fe",
      "text": "I suggest things to type into the console command line."
    },
    {
      "type": "markdown",
      "id": "6e74155787d5e152",
      "text": "5\n5\n"
    },
    {
      "type": "markdown",
      "id": "670a1220bd5b09fa",
      "text": "2+3\n5\n"
    },
    {
      "type": "markdown",
      "id": "2b287635ac970f33",
      "text": "x=2+3\n5\n"
    },
    {
      "type": "markdown",
      "id": "ad51ada6ffdd0329",
      "text": "x\n5\n"
    },
    {
      "type": "markdown",
      "id": "f799ee05aa951c16",
      "text": "y=\"five\"\n\"five\"\n"
    },
    {
      "type": "markdown",
      "id": "36d452d998bd2257",
      "text": "y.length\n4\n"
    },
    {
      "type": "paragraph",
      "id": "eb0b0c60e71f3afc",
      "text": "We have created some numbers and strings which we save in variables. Strings have a length, a property of string objects."
    },
    {
      "type": "markdown",
      "id": "d4e931e3b7d239b0",
      "text": "z=[x,y]\n2\n"
    },
    {
      "type": "markdown",
      "id": "70773ee9462f4212",
      "text": "z\n(2) [5, \"five\"]"
    },
    {
      "type": "markdown",
      "id": "370786c7b3fdc3e6",
      "text": "z[1]\n\"five\"\n"
    },
    {
      "type": "markdown",
      "id": "d666afa2a2f1bade",
      "text": "z[0]\n5\n"
    },
    {
      "type": "markdown",
      "id": "5e469bc8f77dd69c",
      "text": "z[2]\nundefined\n"
    },
    {
      "type": "paragraph",
      "id": "7550330c19316390",
      "text": "We have created an array that holds the values we had stored in x and y. The array becomes the value of z."
    },
    {
      "type": "markdown",
      "id": "1d09ba8ea4872537",
      "text": "z.length\n2\n"
    },
    {
      "type": "markdown",
      "id": "4c39ad723783133b",
      "text": "z.push(3.14)\n3\n"
    },
    {
      "type": "markdown",
      "id": "6533836866ee252c",
      "text": "z.length\n3\n"
    },
    {
      "type": "markdown",
      "id": "24cb57f7ee2a2e5f",
      "text": "z\n(3) [5, \"five\", 3.14]\n"
    },
    {
      "type": "paragraph",
      "id": "ed5693081d2f5b72",
      "text": "Arrays have a property length, a number, and property push, a function, that modifies the array. Function joins number, string and array as basic types."
    },
    {
      "type": "markdown",
      "id": "91923a06f5cccd17",
      "text": "z.push(z)\n4\n"
    },
    {
      "type": "markdown",
      "id": "4478e757c882dc22",
      "text": "z\n(4) [5, \"five\", 3.14, Array(4)]\n\n"
    },
    {
      "type": "markdown",
      "id": "643c32d42c9b424a",
      "text": "z[3]\n(4) [5, \"five\", 3.14, Array(4)]\n\n"
    },
    {
      "type": "paragraph",
      "id": "062ad0425c5bfb45",
      "text": "We push the array onto the end of itself. What does this even mean? Javascript makes sense of this and Chrome handles printing it without looping infinitely."
    },
    {
      "type": "markdown",
      "id": "7421861e6528a5e4",
      "text": "z.push(Math.PI)\n5\n\n"
    },
    {
      "type": "markdown",
      "id": "a3c9f70982094f2d",
      "text": "z\n(5) [5, \"five\", 3.14, Array(5), 3.141592653589793]\n"
    },
    {
      "type": "paragraph",
      "id": "892c2e70e8510970",
      "text": "We push a more accurate pi onto the array to make five elements. We see from this print that the array within the array has grown to five elements too because it is the same array."
    },
    {
      "type": "markdown",
      "id": "30ad07cd9ac5722d",
      "text": "# Reflection"
    },
    {
      "type": "paragraph",
      "id": "5fa770fe11eacb07",
      "text": "What did we expect to come from this brief tour into javascript programming? We will explore this episode in five parts."
    },
    {
      "type": "markdown",
      "id": "cd6fc44a4da7b152",
      "text": "intention\nexploring\nevidence\nthis is interesting...\nwhat does it mean? \n"
    },
    {
      "type": "markdown",
      "id": "9004e15412d10071",
      "text": "# Ward"
    },
    {
      "type": "paragraph",
      "id": "d14a573a2f794014",
      "text": "I wanted to expose Thompson to programming at pretty much the same level Alan Kay spoke to kids. Alan and I both feel the power in the [[Abstraction]] and want to share it."
    },
    {
      "type": "paragraph",
      "id": "a78fc33f35762d9e",
      "text": "Javascript and the browser are both descendents of Smalltalk in a way that will be useful when exploring object-oriented computation. We will try things. I'll suggest things with the strongest resemblance to the roots."
    },
    {
      "type": "paragraph",
      "id": "234a205b6faa57b4",
      "text": "Javascript stores objects in the browser's memory and can evaluate expressions which the browser then prints. Everything we type is a [[Question]]. Every print an answer. The specific answers suggest how javascript and the browser work. We found that z[3] was \"undefined\" but not otherwise an error. We found that an array can hold itself and that this doesn't confuse the browser's print routine."
    },
    {
      "type": "paragraph",
      "id": "d509cc8615f90dc8",
      "text": "I wasn't sure I could lead a tour that would be both short and meaningful. I became more engaged as we progressed. My wife, half listening, laughed with horror when I suggested pushing x into x. Now we both need to know, what would happen."
    },
    {
      "type": "paragraph",
      "id": "eee53f39c81580cd",
      "text": "The computer is a machine made out of small simple parts. It is only complicated because there are billions of them. There are a few hundred kinds of parts and a few dozen ways of making each. This is still a lot to know but it is knowable. People know it."
    },
    {
      "type": "markdown",
      "id": "83c61e8b8efe28a7",
      "text": "# Thompson"
    },
    {
      "type": "paragraph",
      "id": "c0dfe74b3b6923f5",
      "text": "I am a curious learner about learning. I see myself as an experiment. Perhaps, in my explorations, I might stumble upon insights that illuminate a greater meaning. It was with that curiosity that I first started writing in the wiki."
    },
    {
      "type": "paragraph",
      "id": "0b379c67c8edb1c2",
      "text": "But now Ward is leading me into another journey. One where I have an 'everyman' fear when in the audience of code wizards. There is much to understand and little that is immediately obvious. Having spent years around developers, I have known how to nod knowingly without knowing."
    },
    {
      "type": "paragraph",
      "id": "c32c034b5b9ee878",
      "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare arrangement. I learned to type into a terminal that punched a tape holding a simple program that would then be read back in to be run. But I was not curious enough to continue my explorations. "
    },
    {
      "type": "paragraph",
      "id": "f1cd8208e036edd1",
      "text": "I was curious again when PCs were first introduced in the earlier eighties. Enough so that I learned to program a time management system for a design company that I was working at as a photographer. My thinking became obsessive and I once again walked away."
    },
    {
      "type": "paragraph",
      "id": "ab8b09e2980dc4f4",
      "text": "That was over thirty years ago. Most has been lost, much like my paltry Chinese. Forgotten unlearned languages."
    },
    {
      "type": "paragraph",
      "id": "fbbd5348d556dc50",
      "text": "But now I am curious about learning how understanding emerges that empowers creativity – these inference networks known as Markov Blankets. "
    },
    {
      "type": "paragraph",
      "id": "6ce7c5372758fa62",
      "text": "Parent, child and child's parents forming increasing complex meaning matrices in our schema."
    },
    {
      "type": "paragraph",
      "id": "f48f60bcc36c8ca3",
      "text": "So we begin: 2+3=5.  "
    },
    {
      "type": "paragraph",
      "id": "67859826c755f9f2",
      "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as a fractal expression? At least the browser didn't crash. "
    },
    {
      "type": "paragraph",
      "id": "f1ab587e99c08863",
      "text": "Curiosity: another experiment. "
    },
    {
      "type": "markdown",
      "id": "4445e264c82cdb1c",
      "text": "# Recursion"
    },
    {
      "type": "paragraph",
      "id": "34d04bdf3975083f",
      "text": "We made this first programming experience interesting by inserting a self-reference into an array. Similarly philosophers notice circular arguments quickly while amateurs might go around the loop many times and quit only when they get tired. We might ask, when and how do programers break the loop in computations compared to other disciplines?"
    },
    {
      "type": "paragraph",
      "id": "d3b702c43f1b40de",
      "text": "See [[Abstracting Words and Numbers]]"
    },
    {
      "type": "paragraph",
      "id": "83719b48ce88c7e9",
      "text": "Mathematics is more careful but not immune to destructive self-reference. Kurt Gödel famously showed that arithmetic cannot be completely axiomatically defined due to a variation of self-reference in the axioms."
    },
    {
      "type": "paragraph",
      "id": "b6087d655cf05f83",
      "text": "Computation deals routinely with self-reference by representing values with memory addresses of the values. The hitch comes from algorithms that blindly follow these pointers endlessly. Thus one must \"break the recursion\" with some sort of additional check. Here we saw the print routine choose between two possible print representation of an array: [ ... ] or Array(size)."
    },
    {
      "type": "paragraph",
      "id": "e51418c0f0cbae2b",
      "text": "Hypertext avoids most risks of self-reference by following links only one step at a time. We somewhat humorously describe the 99 Bottles of Beer song with self-reference on [[Seventh Floor]] of a learning game. There is no break so one can keep playing until negative numbers appear."
    },
    {
      "type": "paragraph",
      "id": "9b0d9e868f22ac2b",
      "text": "See [[Diagramming Self-Reference]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "code fragment",
        "story": []
      },
      "date": 1575136449859
    },
    {
      "item": {
        "type": "factory",
        "id": "adf2d60c1eef35f6"
      },
      "id": "adf2d60c1eef35f6",
      "type": "add",
      "date": 1575136451429
    },
    {
      "type": "remove",
      "id": "adf2d60c1eef35f6",
      "date": 1575136455041
    },
    {
      "item": {
        "type": "factory",
        "id": "6e74155787d5e152"
      },
      "id": "6e74155787d5e152",
      "type": "add",
      "date": 1575136457056
    },
    {
      "type": "edit",
      "id": "6e74155787d5e152",
      "item": {
        "type": "markdown",
        "id": "6e74155787d5e152",
        "text": "5\n5\n2+3\n5\nx=2+3\n5\nx\n5\nx\n5\ny=\"five\"\n\"five\"\ny.length\n4\nz=[x,y]\n(2) [5, \"five\"]0: 51: \"five\"length: 2__proto__: Array(0)concat: ƒ concat()constructor: ƒ Array()copyWithin: ƒ copyWithin()entries: ƒ entries()every: ƒ every()fill: ƒ fill()filter: ƒ filter()find: ƒ find()findIndex: ƒ findIndex()flat: ƒ flat()flatMap: ƒ flatMap()forEach: ƒ forEach()includes: ƒ includes()indexOf: ƒ indexOf()join: ƒ join()keys: ƒ keys()lastIndexOf: ƒ lastIndexOf()length: 0map: ƒ map()pop: ƒ pop()push: ƒ push()arguments: (...)caller: (...)length: 1name: \"push\"__proto__: ƒ ()apply: ƒ apply()arguments: (...)bind: ƒ bind()call: ƒ call()caller: (...)constructor: ƒ Function()length: 0name: \"\"toString: ƒ toString()Symbol(Symbol.hasInstance): ƒ [Symbol.hasInstance]()get arguments: ƒ ()set arguments: ƒ ()get caller: ƒ ()set caller: ƒ ()__proto__: Object[[FunctionLocation]]: <unknown>[[Scopes]]: Scopes[0][[Scopes]]: Scopes[0]reduce: ƒ reduce()reduceRight: ƒ reduceRight()reverse: ƒ reverse()shift: ƒ shift()slice: ƒ slice()some: ƒ some()sort: ƒ sort()splice: ƒ splice()toLocaleString: ƒ toLocaleString()toString: ƒ toString()unshift: ƒ unshift()values: ƒ values()Symbol(Symbol.iterator): ƒ values()Symbol(Symbol.unscopables): {copyWithin: true, entries: true, fill: true, find: true, findIndex: true, …}__proto__: Object\nz.push(3.14)\n3\nz\n(3) [5, \"five\", 3.14]\nx[1]\nundefined\nz.push(z)\n4\nz\n(4) [5, \"five\", 3.14, Array(4)]\nz[3]\n(4) [5, \"five\", 3.14, Array(4)]\nz.push(Math.PI)\n5\nz\n(5) [5, \"five\", 3.14, Array(5), 3.141592653589793]\n"
      },
      "date": 1575136467381
    },
    {
      "type": "edit",
      "id": "6e74155787d5e152",
      "item": {
        "type": "markdown",
        "id": "6e74155787d5e152",
        "text": "5\n5\n2+3\n5\nx=2+3\n5\nx\n5\nx\n5\ny=\"five\"\n\"five\"\ny.length\n4\nz=[x,y]\n3\nz\n(3) [5, \"five\", 3.14]\nx[1]\nundefined\nz.push(z)\n4\nz\n(4) [5, \"five\", 3.14, Array(4)]\nz[3]\n(4) [5, \"five\", 3.14, Array(4)]\nz.push(Math.PI)\n5\nz\n(5) [5, \"five\", 3.14, Array(5), 3.141592653589793]\n"
      },
      "date": 1575136499185
    },
    {
      "item": {
        "type": "factory",
        "id": "cd6fc44a4da7b152"
      },
      "id": "cd6fc44a4da7b152",
      "type": "add",
      "after": "6e74155787d5e152",
      "date": 1575136697374
    },
    {
      "type": "edit",
      "id": "cd6fc44a4da7b152",
      "item": {
        "type": "paragraph",
        "id": "cd6fc44a4da7b152",
        "text": "intention\nexploring\nevidence\nthis is interesting...\nwhat does it mean?"
      },
      "date": 1575136700668
    },
    {
      "item": {
        "type": "factory",
        "id": "a6c044ec2fe8c3db"
      },
      "id": "a6c044ec2fe8c3db",
      "type": "add",
      "after": "cd6fc44a4da7b152",
      "date": 1575136706462
    },
    {
      "type": "edit",
      "id": "cd6fc44a4da7b152",
      "item": {
        "type": "markdown",
        "id": "cd6fc44a4da7b152",
        "text": "intention\nexploring\nevidence\nthis is interesting...\nwhat does it mean? "
      },
      "date": 1575136714408
    },
    {
      "type": "remove",
      "id": "a6c044ec2fe8c3db",
      "date": 1575136730567
    },
    {
      "type": "fork",
      "site": "thompson.path.fed.wiki",
      "date": 1575138966607
    },
    {
      "item": {
        "type": "factory",
        "id": "ffe4111144aa4308"
      },
      "id": "ffe4111144aa4308",
      "type": "add",
      "after": "cd6fc44a4da7b152",
      "date": 1575138982156
    },
    {
      "type": "edit",
      "id": "ffe4111144aa4308",
      "item": {
        "type": "paragraph",
        "id": "ffe4111144aa4308",
        "text": "I suggested that Thompson join me and metaphorically \"rake in the field\" of computer programming."
      },
      "date": 1575139051258
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "6e74155787d5e152",
        "cd6fc44a4da7b152"
      ],
      "id": "ffe4111144aa4308",
      "date": 1575139058062
    },
    {
      "type": "add",
      "id": "691a8216b27e75b5",
      "item": {
        "type": "paragraph",
        "id": "691a8216b27e75b5",
        "text": "I talked him through opening the javascript editor on the very page we were using to video chat. cmd-option-i does this for Chrome on a Mac."
      },
      "after": "ffe4111144aa4308",
      "date": 1575139181621
    },
    {
      "type": "add",
      "id": "1a109a1a5388f4fe",
      "item": {
        "type": "paragraph",
        "id": "1a109a1a5388f4fe",
        "text": "I suggest things to type into the console command line."
      },
      "after": "691a8216b27e75b5",
      "date": 1575139207795
    },
    {
      "type": "edit",
      "id": "6e74155787d5e152",
      "item": {
        "type": "markdown",
        "id": "6e74155787d5e152",
        "text": "5\n5\n"
      },
      "date": 1575139215530
    },
    {
      "type": "add",
      "id": "670a1220bd5b09fa",
      "item": {
        "type": "markdown",
        "id": "670a1220bd5b09fa",
        "text": "2+3\n5\n"
      },
      "after": "6e74155787d5e152",
      "date": 1575139218858
    },
    {
      "type": "add",
      "id": "2b287635ac970f33",
      "item": {
        "type": "markdown",
        "id": "2b287635ac970f33",
        "text": "x=2+3\n5\n"
      },
      "after": "670a1220bd5b09fa",
      "date": 1575139224622
    },
    {
      "type": "add",
      "id": "ad51ada6ffdd0329",
      "item": {
        "type": "markdown",
        "id": "ad51ada6ffdd0329",
        "text": "x\n5\n"
      },
      "after": "2b287635ac970f33",
      "date": 1575139228108
    },
    {
      "type": "add",
      "id": "f799ee05aa951c16",
      "item": {
        "type": "markdown",
        "id": "f799ee05aa951c16",
        "text": "y=\"five\"\n\"five\"\n"
      },
      "after": "ad51ada6ffdd0329",
      "date": 1575139243452
    },
    {
      "type": "add",
      "id": "36d452d998bd2257",
      "item": {
        "type": "markdown",
        "id": "36d452d998bd2257",
        "text": "y.length\n4\n"
      },
      "after": "f799ee05aa951c16",
      "date": 1575139246757
    },
    {
      "type": "add",
      "id": "d4e931e3b7d239b0",
      "item": {
        "type": "markdown",
        "id": "d4e931e3b7d239b0",
        "text": "z=[x,y]\n3\n"
      },
      "after": "36d452d998bd2257",
      "date": 1575139250821
    },
    {
      "type": "add",
      "id": "24cb57f7ee2a2e5f",
      "item": {
        "type": "markdown",
        "id": "24cb57f7ee2a2e5f",
        "text": "z\n(3) [5, \"five\", 3.14]\n"
      },
      "after": "d4e931e3b7d239b0",
      "date": 1575139254722
    },
    {
      "type": "add",
      "id": "91923a06f5cccd17",
      "item": {
        "type": "markdown",
        "id": "91923a06f5cccd17",
        "text": "z.push(z)\n4\n"
      },
      "after": "24cb57f7ee2a2e5f",
      "date": 1575139309052
    },
    {
      "type": "add",
      "id": "4478e757c882dc22",
      "item": {
        "type": "markdown",
        "id": "4478e757c882dc22",
        "text": "z\n(4) [5, \"five\", 3.14, Array(4)]\n\n"
      },
      "after": "91923a06f5cccd17",
      "date": 1575139315027
    },
    {
      "type": "add",
      "id": "643c32d42c9b424a",
      "item": {
        "type": "markdown",
        "id": "643c32d42c9b424a",
        "text": "z[3]\n(4) [5, \"five\", 3.14, Array(4)]\n\n"
      },
      "after": "4478e757c882dc22",
      "date": 1575139320920
    },
    {
      "type": "add",
      "id": "7421861e6528a5e4",
      "item": {
        "type": "markdown",
        "id": "7421861e6528a5e4",
        "text": "z.push(Math.PI)\n5\n\n"
      },
      "after": "643c32d42c9b424a",
      "date": 1575139325162
    },
    {
      "type": "add",
      "id": "a3c9f70982094f2d",
      "item": {
        "type": "markdown",
        "id": "a3c9f70982094f2d",
        "text": "z\n(5) [5, \"five\", 3.14, Array(5), 3.141592653589793]\n"
      },
      "after": "7421861e6528a5e4",
      "date": 1575139327432
    },
    {
      "type": "add",
      "id": "370786c7b3fdc3e6",
      "item": {
        "type": "markdown",
        "id": "370786c7b3fdc3e6",
        "text": "x[1]\n\"five\"\n"
      },
      "after": "d4e931e3b7d239b0",
      "date": 1575139374248
    },
    {
      "type": "add",
      "id": "d666afa2a2f1bade",
      "item": {
        "type": "markdown",
        "id": "d666afa2a2f1bade",
        "text": "x[0]\n5\n"
      },
      "after": "370786c7b3fdc3e6",
      "date": 1575139385168
    },
    {
      "type": "add",
      "id": "5e469bc8f77dd69c",
      "item": {
        "type": "markdown",
        "id": "5e469bc8f77dd69c",
        "text": "x[2]\nundefined\n"
      },
      "after": "d666afa2a2f1bade",
      "date": 1575139396937
    },
    {
      "type": "edit",
      "id": "370786c7b3fdc3e6",
      "item": {
        "type": "markdown",
        "id": "370786c7b3fdc3e6",
        "text": "z[1]\n\"five\"\n"
      },
      "date": 1575139419814
    },
    {
      "type": "edit",
      "id": "d666afa2a2f1bade",
      "item": {
        "type": "markdown",
        "id": "d666afa2a2f1bade",
        "text": "z[0]\n5\n"
      },
      "date": 1575139427288
    },
    {
      "type": "edit",
      "id": "5e469bc8f77dd69c",
      "item": {
        "type": "markdown",
        "id": "5e469bc8f77dd69c",
        "text": "z[2]\nundefined\n"
      },
      "date": 1575139434047
    },
    {
      "type": "add",
      "id": "1d09ba8ea4872537",
      "item": {
        "type": "markdown",
        "id": "1d09ba8ea4872537",
        "text": "z.push(Math.PI)"
      },
      "after": "5e469bc8f77dd69c",
      "date": 1575139461758
    },
    {
      "type": "edit",
      "id": "1d09ba8ea4872537",
      "item": {
        "type": "markdown",
        "id": "1d09ba8ea4872537",
        "text": "z.push(3.14)"
      },
      "date": 1575139476275
    },
    {
      "type": "edit",
      "id": "1d09ba8ea4872537",
      "item": {
        "type": "markdown",
        "id": "1d09ba8ea4872537",
        "text": "z.push(3.14)\n3"
      },
      "date": 1575139510140
    },
    {
      "type": "edit",
      "id": "d4e931e3b7d239b0",
      "item": {
        "type": "markdown",
        "id": "d4e931e3b7d239b0",
        "text": "z=[x,y]\n2"
      },
      "date": 1575139522914
    },
    {
      "type": "add",
      "id": "eb0b0c60e71f3afc",
      "item": {
        "type": "paragraph",
        "id": "eb0b0c60e71f3afc",
        "text": "We have created some numbers and strings which we save in variables. Strings have a length, a property of these objects."
      },
      "after": "1a109a1a5388f4fe",
      "date": 1575139662981
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "1d09ba8ea4872537",
        "24cb57f7ee2a2e5f",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "cd6fc44a4da7b152"
      ],
      "id": "eb0b0c60e71f3afc",
      "date": 1575139669323
    },
    {
      "type": "edit",
      "id": "d4e931e3b7d239b0",
      "item": {
        "type": "markdown",
        "id": "d4e931e3b7d239b0",
        "text": "z=[x,y]\n2\n"
      },
      "date": 1575139689750
    },
    {
      "type": "add",
      "id": "70773ee9462f4212",
      "item": {
        "type": "markdown",
        "id": "70773ee9462f4212",
        "text": "z\n(2) [5, \"five\"]"
      },
      "after": "d4e931e3b7d239b0",
      "date": 1575139717687
    },
    {
      "type": "add",
      "id": "7550330c19316390",
      "item": {
        "type": "paragraph",
        "id": "7550330c19316390",
        "text": "We have created an array that holds the values we had stored in x and y. The array becomes the value of z."
      },
      "after": "eb0b0c60e71f3afc",
      "date": 1575139843263
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "24cb57f7ee2a2e5f",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "cd6fc44a4da7b152"
      ],
      "id": "7550330c19316390",
      "date": 1575139860361
    },
    {
      "type": "add",
      "id": "ed5693081d2f5b72",
      "item": {
        "type": "paragraph",
        "id": "ed5693081d2f5b72",
        "text": "Arrays have a property length, a number, and property push, a function, that modifies the array."
      },
      "after": "7550330c19316390",
      "date": 1575139936533
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "cd6fc44a4da7b152"
      ],
      "id": "ed5693081d2f5b72",
      "date": 1575139951242
    },
    {
      "type": "edit",
      "id": "1d09ba8ea4872537",
      "item": {
        "type": "markdown",
        "id": "1d09ba8ea4872537",
        "text": "z.length\n2\n"
      },
      "date": 1575139963564
    },
    {
      "type": "add",
      "id": "4c39ad723783133b",
      "item": {
        "type": "markdown",
        "id": "4c39ad723783133b",
        "text": "z.push(3.14)\n3\n"
      },
      "after": "1d09ba8ea4872537",
      "date": 1575139970525
    },
    {
      "type": "add",
      "id": "6533836866ee252c",
      "item": {
        "type": "markdown",
        "id": "6533836866ee252c",
        "text": "z.length\n3"
      },
      "after": "4c39ad723783133b",
      "date": 1575139980520
    },
    {
      "type": "edit",
      "id": "6533836866ee252c",
      "item": {
        "type": "markdown",
        "id": "6533836866ee252c",
        "text": "z.length\n3\n"
      },
      "date": 1575140016519
    },
    {
      "type": "add",
      "id": "75b98393a2ac03ea",
      "item": {
        "type": "markdown",
        "id": "75b98393a2ac03ea",
        "text": "z.push(3.14)"
      },
      "after": "6533836866ee252c",
      "date": 1575140026190
    },
    {
      "type": "remove",
      "id": "75b98393a2ac03ea",
      "date": 1575140044354
    },
    {
      "type": "add",
      "id": "062ad0425c5bfb45",
      "item": {
        "type": "paragraph",
        "id": "062ad0425c5bfb45",
        "text": "We push the array on to the end of itself. What does this even mean? Javascript makes sense of this and Chrome handles printing it without looping infinitely."
      },
      "after": "ed5693081d2f5b72",
      "date": 1575140233997
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "cd6fc44a4da7b152"
      ],
      "id": "062ad0425c5bfb45",
      "date": 1575140244401
    },
    {
      "type": "add",
      "id": "892c2e70e8510970",
      "item": {
        "type": "paragraph",
        "id": "892c2e70e8510970",
        "text": "We push a more accurate pi onto the array to make five elements. We see from this print that the array within the array has grown to five elements too because it is the same array."
      },
      "after": "062ad0425c5bfb45",
      "date": 1575140418862
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "892c2e70e8510970",
        "cd6fc44a4da7b152"
      ],
      "id": "892c2e70e8510970",
      "date": 1575140424484
    },
    {
      "item": {
        "type": "factory",
        "id": "30ad07cd9ac5722d"
      },
      "id": "30ad07cd9ac5722d",
      "type": "add",
      "after": "cd6fc44a4da7b152",
      "date": 1575140531686
    },
    {
      "type": "edit",
      "id": "30ad07cd9ac5722d",
      "item": {
        "type": "paragraph",
        "id": "30ad07cd9ac5722d",
        "text": "# Reflection"
      },
      "date": 1575140542560
    },
    {
      "type": "edit",
      "id": "30ad07cd9ac5722d",
      "item": {
        "type": "markdown",
        "id": "30ad07cd9ac5722d",
        "text": "# Reflection"
      },
      "date": 1575140546990
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "892c2e70e8510970",
        "30ad07cd9ac5722d",
        "cd6fc44a4da7b152"
      ],
      "id": "30ad07cd9ac5722d",
      "date": 1575140552434
    },
    {
      "type": "add",
      "id": "5fa770fe11eacb07",
      "item": {
        "type": "paragraph",
        "id": "5fa770fe11eacb07",
        "text": "What did we expect to come from this brief tour into javascript programming? We will explore this episode in five parts."
      },
      "after": "892c2e70e8510970",
      "date": 1575141990683
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "892c2e70e8510970",
        "30ad07cd9ac5722d",
        "5fa770fe11eacb07",
        "cd6fc44a4da7b152"
      ],
      "id": "5fa770fe11eacb07",
      "date": 1575141994635
    },
    {
      "item": {
        "type": "factory",
        "id": "d14a573a2f794014"
      },
      "id": "d14a573a2f794014",
      "type": "add",
      "after": "cd6fc44a4da7b152",
      "date": 1575142006388
    },
    {
      "type": "edit",
      "id": "d14a573a2f794014",
      "item": {
        "type": "paragraph",
        "id": "d14a573a2f794014",
        "text": "I wanted to expose Thompson to programming at pretty much the same level Alan Kay spoke to kids. Alan and I both felt the power in the abstraction and want to share it."
      },
      "date": 1575142112996
    },
    {
      "type": "add",
      "id": "a78fc33f35762d9e",
      "item": {
        "type": "paragraph",
        "id": "a78fc33f35762d9e",
        "text": "Javascript and the browser are both descendents of Smalltalk in a way that will be useful when exploring object-oriented computation. We will try things. I'll suggest things with the strongest resemblance to the roots."
      },
      "after": "d14a573a2f794014",
      "date": 1575142319250
    },
    {
      "type": "add",
      "id": "234a205b6faa57b4",
      "item": {
        "type": "paragraph",
        "id": "234a205b6faa57b4",
        "text": "Javascript stores objects in the browser's memory and can evaluate expressions which the browser then prints. Everything we type is a question. Every print an answer that suggests how javascript/browser works. We found that z[3] was \"undefined\" but not otherwise an error. We found that an array can hold itself and that this doesn't confuse the browser's print routine."
      },
      "after": "a78fc33f35762d9e",
      "date": 1575142587328
    },
    {
      "type": "edit",
      "id": "d14a573a2f794014",
      "item": {
        "type": "paragraph",
        "id": "d14a573a2f794014",
        "text": "I wanted to expose Thompson to programming at pretty much the same level Alan Kay spoke to kids. Alan and I both feel the power in the abstraction and want to share it."
      },
      "date": 1575142656792
    },
    {
      "type": "edit",
      "id": "234a205b6faa57b4",
      "item": {
        "type": "paragraph",
        "id": "234a205b6faa57b4",
        "text": "Javascript stores objects in the browser's memory and can evaluate expressions which the browser then prints. Everything we type is a question. Every print an answer. The specific answers suggest how javascript and the browser work. We found that z[3] was \"undefined\" but not otherwise an error. We found that an array can hold itself and that this doesn't confuse the browser's print routine."
      },
      "date": 1575142737767
    },
    {
      "type": "add",
      "id": "d509cc8615f90dc8",
      "item": {
        "type": "paragraph",
        "id": "d509cc8615f90dc8",
        "text": "I wasn't sure I could lead a tour that would be both short and meaningful. I became more engaged as we progressed. My wife, half listening, laughed with horror when I suggested pushing x into x. Now we both need to know, what would happen."
      },
      "after": "234a205b6faa57b4",
      "date": 1575143037861
    },
    {
      "type": "add",
      "id": "eee53f39c81580cd",
      "item": {
        "type": "paragraph",
        "id": "eee53f39c81580cd",
        "text": "The computer is a machine made out of small parts. It is only complicated because there are a billion of them. There are maybe only a few hundred kinds of parts "
      },
      "after": "d509cc8615f90dc8",
      "date": 1575143344431
    },
    {
      "type": "edit",
      "id": "eee53f39c81580cd",
      "item": {
        "type": "paragraph",
        "id": "eee53f39c81580cd",
        "text": "The computer is a machine made out of small parts. It is only complicated because there are billions of them. There are maybe only a few hundred kinds of parts and a few dozen ways of making each. This is still a lot to know but it is knowable. People know it."
      },
      "date": 1575143679444
    },
    {
      "type": "edit",
      "id": "eee53f39c81580cd",
      "item": {
        "type": "paragraph",
        "id": "eee53f39c81580cd",
        "text": "The computer is a machine made out of small simple parts. It is only complicated because there are billions of them. There are a few hundred kinds of parts and a few dozen ways of making each. This is still a lot to know but it is knowable. People know it."
      },
      "date": 1575143758159
    },
    {
      "type": "edit",
      "id": "cd6fc44a4da7b152",
      "item": {
        "type": "markdown",
        "id": "cd6fc44a4da7b152",
        "text": "intention\nexploring\nevidence\nthis is interesting...\nwhat does it mean? \n"
      },
      "date": 1575148958017
    },
    {
      "type": "add",
      "id": "9004e15412d10071",
      "item": {
        "type": "markdown",
        "id": "9004e15412d10071",
        "text": "# Ward"
      },
      "after": "cd6fc44a4da7b152",
      "date": 1575148966629
    },
    {
      "item": {
        "type": "factory",
        "id": "83c61e8b8efe28a7"
      },
      "id": "83c61e8b8efe28a7",
      "type": "add",
      "after": "eee53f39c81580cd",
      "date": 1575148974404
    },
    {
      "type": "edit",
      "id": "83c61e8b8efe28a7",
      "item": {
        "type": "markdown",
        "id": "83c61e8b8efe28a7",
        "text": "# Thompson"
      },
      "date": 1575148981425
    },
    {
      "item": {
        "type": "factory",
        "id": "c0dfe74b3b6923f5"
      },
      "id": "c0dfe74b3b6923f5",
      "type": "add",
      "after": "83c61e8b8efe28a7",
      "date": 1575148995059
    },
    {
      "type": "edit",
      "id": "c0dfe74b3b6923f5",
      "item": {
        "type": "paragraph",
        "id": "c0dfe74b3b6923f5",
        "text": "Ward makes me do lots of things I'm not sure I want to do."
      },
      "date": 1575149012421
    },
    {
      "type": "edit",
      "id": "eb0b0c60e71f3afc",
      "item": {
        "type": "paragraph",
        "id": "eb0b0c60e71f3afc",
        "text": "We have created some numbers and strings which we save in variables. Strings have a length, a property of string objects."
      },
      "date": 1575149136094
    },
    {
      "type": "edit",
      "id": "ed5693081d2f5b72",
      "item": {
        "type": "paragraph",
        "id": "ed5693081d2f5b72",
        "text": "Arrays have a property length, a number, and property push, a function, that modifies the array. Function joins number, string and array as basic types."
      },
      "date": 1575149279468
    },
    {
      "type": "edit",
      "id": "062ad0425c5bfb45",
      "item": {
        "type": "paragraph",
        "id": "062ad0425c5bfb45",
        "text": "We push the array onto the end of itself. What does this even mean? Javascript makes sense of this and Chrome handles printing it without looping infinitely."
      },
      "date": 1575149312560
    },
    {
      "type": "fork",
      "site": "code.fed.wiki",
      "date": 1575149453266
    },
    {
      "type": "edit",
      "id": "c0dfe74b3b6923f5",
      "item": {
        "type": "paragraph",
        "id": "c0dfe74b3b6923f5",
        "text": "I am a curious learner about learning. I see myself as an experiment. Perhaps, in my explorations, I will stumble on insights that illuminate a greater meaning. It was with that curiousity that I first started writing in the wiki."
      },
      "date": 1575149610028
    },
    {
      "type": "edit",
      "id": "c0dfe74b3b6923f5",
      "item": {
        "type": "paragraph",
        "id": "c0dfe74b3b6923f5",
        "text": "I am a curious learner about learning. I see myself as an experiment. Perhaps, in my explorations, I will stumble on insights that illuminate a greater meaning. It was with that curiosity that I first started writing in the wiki."
      },
      "date": 1575149616207
    },
    {
      "type": "add",
      "id": "0b379c67c8edb1c2",
      "item": {
        "type": "paragraph",
        "id": "0b379c67c8edb1c2",
        "text": "But now Ward is leading me into another journey. One where I have an 'everyman' fear when in the audience of code wizards. There is much to understand and little the is immediately obvois"
      },
      "after": "c0dfe74b3b6923f5",
      "date": 1575149700172
    },
    {
      "type": "edit",
      "id": "0b379c67c8edb1c2",
      "item": {
        "type": "paragraph",
        "id": "0b379c67c8edb1c2",
        "text": "But now Ward is leading me into another journey. One where I have an 'everyman' fear when in the audience of code wizards. There is much to understand and little the is immediately obvious. Having spent years around developers, I have know how to nod knowingly without knowing."
      },
      "date": 1575149742139
    },
    {
      "type": "add",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare. I learned to type into a terminal that punched a tape, that would then be read back in. But I was not curious enough to continue my explorations."
      },
      "after": "0b379c67c8edb1c2",
      "date": 1575149889747
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare. I learned to type into a terminal that punched a tape holding the simple program, that would then be read back in. But I was not curious enough to continue my explorations."
      },
      "date": 1575149927680
    },
    {
      "type": "add",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced. Enough so that I learned to program a time management system for a company I was working at. My thinking became obsessive and I once again walked away."
      },
      "after": "c32c034b5b9ee878",
      "date": 1575150030302
    },
    {
      "type": "edit",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced. Enough so that I learned to program a time management system for a design company I was working at as a photographer. My thinking became obsessive and I once again walked away."
      },
      "date": 1575150056340
    },
    {
      "type": "add",
      "id": "ab8b09e2980dc4f4",
      "item": {
        "type": "paragraph",
        "id": "ab8b09e2980dc4f4",
        "text": "That was thirty years ago. All has been lost, much like my paltry Chinese. Forgotten unlearned languages."
      },
      "after": "f1cd8208e036edd1",
      "date": 1575150141982
    },
    {
      "type": "add",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But I am curious about learning how understanding manifests that empowers creativity – these inference networks known Markov Blankets. "
      },
      "after": "ab8b09e2980dc4f4",
      "date": 1575150275297
    },
    {
      "type": "add",
      "id": "6ce7c5372758fa62",
      "item": {
        "type": "paragraph",
        "id": "6ce7c5372758fa62",
        "text": "Parent, child and child's parents forming increasing complex meaning matrices."
      },
      "after": "fbbd5348d556dc50",
      "date": 1575150332211
    },
    {
      "type": "add",
      "id": "f48f60bcc36c8ca3",
      "item": {
        "type": "paragraph",
        "id": "f48f60bcc36c8ca3",
        "text": "So we begin: 2+3=5"
      },
      "after": "6ce7c5372758fa62",
      "date": 1575150351316
    },
    {
      "type": "add",
      "id": "f2f693d4028c93de",
      "item": {
        "type": "paragraph",
        "id": "f2f693d4028c93de",
        "text": "And are led to the question, how might an array hold itself? "
      },
      "after": "f48f60bcc36c8ca3",
      "date": 1575150407199
    },
    {
      "type": "add",
      "id": "f1ab587e99c08863",
      "item": {
        "type": "paragraph",
        "id": "f1ab587e99c08863",
        "text": "Curiosity: another exploration. "
      },
      "after": "f2f693d4028c93de",
      "date": 1575150428163
    },
    {
      "type": "edit",
      "id": "c0dfe74b3b6923f5",
      "item": {
        "type": "paragraph",
        "id": "c0dfe74b3b6923f5",
        "text": "I am a curious learner about learning. I see myself as an experiment. Perhaps, in my explorations, I will stumble upon insights that illuminate a greater meaning. It was with that curiosity that I first started writing in the wiki."
      },
      "date": 1575150459409
    },
    {
      "type": "edit",
      "id": "0b379c67c8edb1c2",
      "item": {
        "type": "paragraph",
        "id": "0b379c67c8edb1c2",
        "text": "But now Ward is leading me into another journey. One where I have an 'everyman' fear when in the audience of code wizards. There is much to understand and little that is immediately obvious. Having spent years around developers, I have know how to nod knowingly without knowing."
      },
      "date": 1575150488105
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare. I learned to type into a terminal that punched a tape holding a simple program, that would then be read back in. But I was not curious enough to continue my explorations."
      },
      "date": 1575150540116
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare. I learned to type into a terminal that punched a tape holding a simple program that would then be read back in. But I was not curious enough to continue my explorations."
      },
      "date": 1575150548008
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare. I learned to type into a terminal that punched a tape holding a simple program that would then be read back in. But I was not curious enough to continue my explorations. "
      },
      "date": 1575150580616
    },
    {
      "type": "edit",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced in the earlier eighties. Enough so that I learned to program a time management system for a design company I was working at as a photographer. My thinking became obsessive and I once again walked away."
      },
      "date": 1575150592165
    },
    {
      "type": "edit",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But I am curious about learning how understanding manifests that empowers creativity – these inference networks now known Markov Blankets. "
      },
      "date": 1575150649167
    },
    {
      "type": "edit",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But I am curious about learning how understanding manifests that empowers creativity – these inference networks now known as Markov Blankets. "
      },
      "date": 1575150662016
    },
    {
      "type": "edit",
      "id": "6ce7c5372758fa62",
      "item": {
        "type": "paragraph",
        "id": "6ce7c5372758fa62",
        "text": "Parent, child and children's parents forming increasing complex meaning matrices."
      },
      "date": 1575150687230
    },
    {
      "type": "edit",
      "id": "6ce7c5372758fa62",
      "item": {
        "type": "paragraph",
        "id": "6ce7c5372758fa62",
        "text": "Parent, child and children's parents forming increasing complex meaning matrices of our schema."
      },
      "date": 1575150723243
    },
    {
      "type": "edit",
      "id": "f2f693d4028c93de",
      "item": {
        "type": "paragraph",
        "id": "f2f693d4028c93de",
        "text": "And are quickly led to the question, how might an array hold itself? "
      },
      "date": 1575150750921
    },
    {
      "type": "remove",
      "id": "f2f693d4028c93de",
      "date": 1575150754891
    },
    {
      "type": "edit",
      "id": "f48f60bcc36c8ca3",
      "item": {
        "type": "paragraph",
        "id": "f48f60bcc36c8ca3",
        "text": "So we begin: 2+3=5 and are quickly led to the question, how might an array hold itself? "
      },
      "date": 1575150759176
    },
    {
      "type": "edit",
      "id": "f48f60bcc36c8ca3",
      "item": {
        "type": "paragraph",
        "id": "f48f60bcc36c8ca3",
        "text": "So we begin: 2+3=5 and are quickly led to the question: how might an array hold itself? "
      },
      "date": 1575150775505
    },
    {
      "type": "edit",
      "id": "f1ab587e99c08863",
      "item": {
        "type": "paragraph",
        "id": "f1ab587e99c08863",
        "text": "Curiosity: another experiment. "
      },
      "date": 1575150792931
    },
    {
      "type": "edit",
      "id": "c0dfe74b3b6923f5",
      "item": {
        "type": "paragraph",
        "id": "c0dfe74b3b6923f5",
        "text": "I am a curious learner about learning. I see myself as an experiment. Perhaps, in my explorations, I might stumble upon insights that illuminate a greater meaning. It was with that curiosity that I first started writing in the wiki."
      },
      "date": 1575150833700
    },
    {
      "type": "edit",
      "id": "0b379c67c8edb1c2",
      "item": {
        "type": "paragraph",
        "id": "0b379c67c8edb1c2",
        "text": "But now Ward is leading me into another journey. One where I have an 'everyman' fear when in the audience of code wizards. There is much to understand and little that is immediately obvious. Having spent years around developers, I have known how to nod knowingly without knowing."
      },
      "date": 1575150856514
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare arrangement. I learned to type into a terminal that punched a tape holding a simple program that would then be read back in. But I was not curious enough to continue my explorations. "
      },
      "date": 1575150891344
    },
    {
      "type": "edit",
      "id": "c32c034b5b9ee878",
      "item": {
        "type": "paragraph",
        "id": "c32c034b5b9ee878",
        "text": "I first learned to code in the simplest way when I was in middle school. We had a terminal that connected to a computer at a nearby college – a timeshare arrangement. I learned to type into a terminal that punched a tape holding a simple program that would then be read back in to be run. But I was not curious enough to continue my explorations. "
      },
      "date": 1575150906587
    },
    {
      "type": "edit",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced in the earlier eighties. Enough so that I learned to program a time management system for a design company that I was working at as a photographer. My thinking became obsessive and I once again walked away."
      },
      "date": 1575150955445
    },
    {
      "type": "edit",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced in the earlier eighties. Enough so that I learned to program a time management system for a design company that I was working at as a photographer. My thinking became too obsessive and I once again walked away."
      },
      "date": 1575150983377
    },
    {
      "type": "edit",
      "id": "f1cd8208e036edd1",
      "item": {
        "type": "paragraph",
        "id": "f1cd8208e036edd1",
        "text": "I was curious again when PCs were first introduced in the earlier eighties. Enough so that I learned to program a time management system for a design company that I was working at as a photographer. My thinking became obsessive and I once again walked away."
      },
      "date": 1575150988691
    },
    {
      "type": "edit",
      "id": "ab8b09e2980dc4f4",
      "item": {
        "type": "paragraph",
        "id": "ab8b09e2980dc4f4",
        "text": "That was over thirty years ago. All has been lost, much like my paltry Chinese. Forgotten unlearned languages."
      },
      "date": 1575150998547
    },
    {
      "type": "edit",
      "id": "ab8b09e2980dc4f4",
      "item": {
        "type": "paragraph",
        "id": "ab8b09e2980dc4f4",
        "text": "That was over thirty years ago. Most has been lost, much like my paltry Chinese. Forgotten unlearned languages."
      },
      "date": 1575151006688
    },
    {
      "type": "edit",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But now I am curious about learning how understanding manifests that empowers creativity – these inference networks now known as Markov Blankets. "
      },
      "date": 1575151027866
    },
    {
      "type": "edit",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But now I am curious about learning how understanding emerges that empowers creativity – these inference networks now known as Markov Blankets. "
      },
      "date": 1575151059528
    },
    {
      "type": "edit",
      "id": "fbbd5348d556dc50",
      "item": {
        "type": "paragraph",
        "id": "fbbd5348d556dc50",
        "text": "But now I am curious about learning how understanding emerges that empowers creativity – these inference networks known as Markov Blankets. "
      },
      "date": 1575151070528
    },
    {
      "type": "edit",
      "id": "6ce7c5372758fa62",
      "item": {
        "type": "paragraph",
        "id": "6ce7c5372758fa62",
        "text": "Parent, child and child's parents forming increasing complex meaning matrices of our schema."
      },
      "date": 1575151100220
    },
    {
      "type": "edit",
      "id": "f48f60bcc36c8ca3",
      "item": {
        "type": "paragraph",
        "id": "f48f60bcc36c8ca3",
        "text": "So we begin: 2+3=5.  We find ourselves quickly led to the question: how might an array hold itself? "
      },
      "date": 1575151142079
    },
    {
      "type": "edit",
      "id": "f48f60bcc36c8ca3",
      "item": {
        "type": "paragraph",
        "id": "f48f60bcc36c8ca3",
        "text": "So we begin: 2+3=5.  "
      },
      "date": 1575151156014
    },
    {
      "type": "add",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to the question: how might an array hold itself? "
      },
      "after": "f48f60bcc36c8ca3",
      "date": 1575151156949
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to the question: how might an array – an object – hold itself? "
      },
      "date": 1575151191930
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to the question: what does it mean for an array – an object – to hold itself? "
      },
      "date": 1575151222877
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to the question: what might it mean for an array – an object – to hold itself? "
      },
      "date": 1575151242955
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to the philosophical question: what might it mean for an array – an object – to hold itself? "
      },
      "date": 1575151264969
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to a philosophical question: what might it mean for an array – an object – to hold itself? "
      },
      "date": 1575151275741
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to a philosophical question: what might it mean for an array – an object – to hold itself as a fractal expression? "
      },
      "date": 1575151317098
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to a philosophical question: what might it mean for an array – an object – to hold itself as a fractal expression?"
      },
      "date": 1575151385621
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to a philosophical question: what might it mean for an array, an object, to hold itself – a fractal expression?"
      },
      "date": 1575151438874
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to a philosophical question: what might it mean for an array, an object, to hold itself – a infinitely repeating fractal expression?"
      },
      "date": 1575151467149
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself – an infinitely repeating fractal expression?"
      },
      "date": 1575151533027
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as an infinitely repeating fractal expression?"
      },
      "date": 1575151547051
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as an infinitely repeating fractal expression? "
      },
      "date": 1575151594795
    },
    {
      "type": "fork",
      "site": "thompson.wiki.innovateoregon.org",
      "date": 1575151693733
    },
    {
      "type": "edit",
      "id": "6ce7c5372758fa62",
      "item": {
        "type": "paragraph",
        "id": "6ce7c5372758fa62",
        "text": "Parent, child and child's parents forming increasing complex meaning matrices in our schema."
      },
      "date": 1575151819420
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as an infinitely repeating fractal expression of itself? "
      },
      "date": 1575151852087
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as an infinitely repeating fractal expression of itself? At least the browser didn't crash. "
      },
      "date": 1575151935069
    },
    {
      "type": "fork",
      "site": "thompson.path.fed.wiki",
      "date": 1575152041208
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as an infinitely repeating fractal expression? At least the browser didn't crash. "
      },
      "date": 1575152687920
    },
    {
      "type": "edit",
      "id": "67859826c755f9f2",
      "item": {
        "type": "paragraph",
        "id": "67859826c755f9f2",
        "text": "We find ourselves quickly led to an unexpected philosophical question: what might it mean for an array, an object, to hold itself as a fractal expression? At least the browser didn't crash. "
      },
      "date": 1575154315416
    },
    {
      "item": {
        "type": "factory",
        "id": "7343e324ad82114f"
      },
      "id": "7343e324ad82114f",
      "type": "add",
      "after": "f1ab587e99c08863",
      "date": 1575227749462
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language\n- Robin Wall Kimmerer"
      },
      "date": 1575227801992
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language\n - Robin Wall Kimmerer"
      },
      "date": 1575227806786
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language\n_Robin Wall Kimmerer_"
      },
      "date": 1575227816668
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language\n\n_Robin Wall Kimmerer_"
      },
      "date": 1575227821040
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language\n>\n_Robin Wall Kimmerer_"
      },
      "date": 1575227824918
    },
    {
      "type": "move",
      "order": [
        "7343e324ad82114f",
        "ffe4111144aa4308",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "892c2e70e8510970",
        "30ad07cd9ac5722d",
        "5fa770fe11eacb07",
        "cd6fc44a4da7b152",
        "9004e15412d10071",
        "d14a573a2f794014",
        "a78fc33f35762d9e",
        "234a205b6faa57b4",
        "d509cc8615f90dc8",
        "eee53f39c81580cd",
        "83c61e8b8efe28a7",
        "c0dfe74b3b6923f5",
        "0b379c67c8edb1c2",
        "c32c034b5b9ee878",
        "f1cd8208e036edd1",
        "ab8b09e2980dc4f4",
        "fbbd5348d556dc50",
        "6ce7c5372758fa62",
        "f48f60bcc36c8ca3",
        "67859826c755f9f2",
        "f1ab587e99c08863"
      ],
      "id": "7343e324ad82114f",
      "date": 1575227845172
    },
    {
      "type": "edit",
      "id": "ffe4111144aa4308",
      "item": {
        "type": "paragraph",
        "id": "ffe4111144aa4308",
        "text": "I suggested that Thompson join me and metaphorically [[Rake in the Field]] of computer programming."
      },
      "date": 1575227906626
    },
    {
      "type": "fork",
      "site": "thompson.wiki.innovateoregon.org",
      "date": 1575249158701
    },
    {
      "type": "move",
      "order": [
        "ffe4111144aa4308",
        "7343e324ad82114f",
        "691a8216b27e75b5",
        "1a109a1a5388f4fe",
        "6e74155787d5e152",
        "670a1220bd5b09fa",
        "2b287635ac970f33",
        "ad51ada6ffdd0329",
        "f799ee05aa951c16",
        "36d452d998bd2257",
        "eb0b0c60e71f3afc",
        "d4e931e3b7d239b0",
        "70773ee9462f4212",
        "370786c7b3fdc3e6",
        "d666afa2a2f1bade",
        "5e469bc8f77dd69c",
        "7550330c19316390",
        "1d09ba8ea4872537",
        "4c39ad723783133b",
        "6533836866ee252c",
        "24cb57f7ee2a2e5f",
        "ed5693081d2f5b72",
        "91923a06f5cccd17",
        "4478e757c882dc22",
        "643c32d42c9b424a",
        "062ad0425c5bfb45",
        "7421861e6528a5e4",
        "a3c9f70982094f2d",
        "892c2e70e8510970",
        "30ad07cd9ac5722d",
        "5fa770fe11eacb07",
        "cd6fc44a4da7b152",
        "9004e15412d10071",
        "d14a573a2f794014",
        "a78fc33f35762d9e",
        "234a205b6faa57b4",
        "d509cc8615f90dc8",
        "eee53f39c81580cd",
        "83c61e8b8efe28a7",
        "c0dfe74b3b6923f5",
        "0b379c67c8edb1c2",
        "c32c034b5b9ee878",
        "f1cd8208e036edd1",
        "ab8b09e2980dc4f4",
        "fbbd5348d556dc50",
        "6ce7c5372758fa62",
        "f48f60bcc36c8ca3",
        "67859826c755f9f2",
        "f1ab587e99c08863"
      ],
      "id": "7343e324ad82114f",
      "date": 1575249171893
    },
    {
      "type": "edit",
      "id": "7343e324ad82114f",
      "item": {
        "type": "markdown",
        "id": "7343e324ad82114f",
        "text": ">To be native to a place we must learn to speak its language -- Robin Wall Kimmerer"
      },
      "date": 1575249199158
    },
    {
      "item": {
        "type": "factory",
        "id": "4445e264c82cdb1c"
      },
      "id": "4445e264c82cdb1c",
      "type": "add",
      "after": "f1ab587e99c08863",
      "date": 1575308433000
    },
    {
      "type": "edit",
      "id": "4445e264c82cdb1c",
      "item": {
        "type": "markdown",
        "id": "4445e264c82cdb1c",
        "text": "# Recursion"
      },
      "date": 1575308446553
    },
    {
      "item": {
        "type": "factory",
        "id": "34d04bdf3975083f"
      },
      "id": "34d04bdf3975083f",
      "type": "add",
      "after": "4445e264c82cdb1c",
      "date": 1575308469670
    },
    {
      "type": "edit",
      "id": "34d04bdf3975083f",
      "item": {
        "type": "paragraph",
        "id": "34d04bdf3975083f",
        "text": "We made this first programming experience interesting by inserting a self-reference into an array. Philosophers notice circular arguments quickly while amateurs might go around the loop many times and quit only when they get tired. We might ask, when and how do we break the loop in computations compared to other disciplines?"
      },
      "date": 1575308813467
    },
    {
      "type": "add",
      "id": "d3b702c43f1b40de",
      "item": {
        "type": "paragraph",
        "id": "d3b702c43f1b40de",
        "text": "See [[Abstracting Words and Numbers]]"
      },
      "after": "34d04bdf3975083f",
      "date": 1575308820477
    },
    {
      "type": "add",
      "id": "83719b48ce88c7e9",
      "item": {
        "type": "paragraph",
        "id": "83719b48ce88c7e9",
        "text": "Mathematics is more careful but not immune to destructive self-reference. "
      },
      "after": "d3b702c43f1b40de",
      "date": 1575308897603
    },
    {
      "type": "edit",
      "id": "83719b48ce88c7e9",
      "item": {
        "type": "paragraph",
        "id": "83719b48ce88c7e9",
        "text": "Mathematics is more careful but not immune to destructive self-reference. Kurt Gödel famously showed that arithmetic cannot be completely axiomatically defined due to a variation of self-reference in the axioms."
      },
      "date": 1575309221651
    },
    {
      "type": "add",
      "id": "b6087d655cf05f83",
      "item": {
        "type": "paragraph",
        "id": "b6087d655cf05f83",
        "text": "Computation deals routinely with self-reference by representing values with memory addresses of the values. The hitch comes from algorithms that blindly follow these pointers endlessly. Thus one must \"break the recursion\" with some sort of additional check. Here we saw the print routine choose between two possible print representation of an array: [ ... ] or Array(size)."
      },
      "after": "83719b48ce88c7e9",
      "date": 1575309488053
    },
    {
      "type": "add",
      "id": "e51418c0f0cbae2b",
      "item": {
        "type": "paragraph",
        "id": "e51418c0f0cbae2b",
        "text": "Hypertext avoids most risks of self-reference by following links only one step at a time. "
      },
      "after": "b6087d655cf05f83",
      "date": 1575309567001
    },
    {
      "type": "edit",
      "id": "e51418c0f0cbae2b",
      "item": {
        "type": "paragraph",
        "id": "e51418c0f0cbae2b",
        "text": "Hypertext avoids most risks of self-reference by following links only one step at a time. We somewhat humorously describe the 99 Bottles of Beer song with self-reference on [[Seventh Floor]] of a learning game. There is no break so one can keep playing until negative numbers appear."
      },
      "date": 1575309825542
    },
    {
      "type": "add",
      "id": "9b0d9e868f22ac2b",
      "item": {
        "type": "paragraph",
        "id": "9b0d9e868f22ac2b",
        "text": "See [[Diagramming Self-Reference]]"
      },
      "after": "e51418c0f0cbae2b",
      "date": 1575309980787
    },
    {
      "type": "edit",
      "id": "34d04bdf3975083f",
      "item": {
        "type": "paragraph",
        "id": "34d04bdf3975083f",
        "text": "We made this first programming experience interesting by inserting a self-reference into an array. Similarly philosophers notice circular arguments quickly while amateurs might go around the loop many times and quit only when they get tired. We might ask, when and how do programers break the loop in computations compared to other disciplines?"
      },
      "date": 1575311094837
    },
    {
      "type": "fork",
      "site": "code.fed.wiki",
      "date": 1676998766277
    },
    {
      "type": "edit",
      "id": "d14a573a2f794014",
      "item": {
        "type": "paragraph",
        "id": "d14a573a2f794014",
        "text": "I wanted to expose Thompson to programming at pretty much the same level Alan Kay spoke to kids. Alan and I both feel the power in the [[Abstraction]] and want to share it."
      },
      "date": 1676998948853
    },
    {
      "type": "edit",
      "id": "234a205b6faa57b4",
      "item": {
        "type": "paragraph",
        "id": "234a205b6faa57b4",
        "text": "Javascript stores objects in the browser's memory and can evaluate expressions which the browser then prints. Everything we type is a [[Question]]. Every print an answer. The specific answers suggest how javascript and the browser work. We found that z[3] was \"undefined\" but not otherwise an error. We found that an array can hold itself and that this doesn't confuse the browser's print routine."
      },
      "date": 1676998980983
    },
    {
      "type": "edit",
      "id": "ffe4111144aa4308",
      "item": {
        "type": "paragraph",
        "id": "ffe4111144aa4308",
        "text": "Ward suggested that Thompson join him and metaphorically [[Rake in the Field]] of computer programming."
      },
      "date": 1677052421439
    }
  ]
}