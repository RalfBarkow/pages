{
  "title": "Behavior Tree",
  "story": [
    {
      "type": "markdown",
      "id": "951113f3bc95320b",
      "text": "A behavior tree is a mathematical model of plan execution used in computer science, robotics, control systems and video games. [https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control) wikipedia]\n"
    },
    {
      "type": "markdown",
      "id": "8ac1616c9862a8d5",
      "text": "They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. Behavior trees present some similarities to hierarchical state machines with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make behavior trees less error prone and very popular in the game developer community. Behavior trees have been shown to generalize several other control architectures. Mathematically, they are directed acyclic graphs. "
    },
    {
      "type": "paragraph",
      "id": "8008b75178dedba6",
      "text": "⇒ [[Unity]]"
    },
    {
      "type": "paragraph",
      "id": "723b490f0b021d59",
      "text": "⇒ [[Unreal Engine]]"
    },
    {
      "type": "pagefold",
      "id": "de37d04b780dc232",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "e25e11ee2b0af7a6",
      "text": "CHAMPANDARD, Alex J and DUNSTAN, Philip, [no date]. The Behavior Tree Starter Kit. [http://www.gameaipro.com/GameAIPro/GameAIPro_Chapter06_The_Behavior_Tree_Starter_Kit.pdf pdf]\n"
    },
    {
      "type": "markdown",
      "id": "c762cb734e78e148",
      "text": "[BTSK 12] A. Champandard and P. Dunstan. The Behavior Tree Starter Kit. http://github.com/aigamedev, 2012.\n\n"
    },
    {
      "type": "markdown",
      "id": "ff10db40f00c9e43",
      "text": "[Champandard 07] A. Champandard. “Behavior trees for Next-Gen AI.” Game Developers\nConference Europe, 2007.\n\n\n"
    },
    {
      "type": "markdown",
      "id": "9537c961b265c994",
      "text": "[Isla 05] D. Isla. “Handling complexity in the Halo 2 AI.” Game Developers Conference, 2005.\n\n"
    },
    {
      "type": "markdown",
      "id": "bb8c3f5c91a069c3",
      "text": "[PSS 11] M. Martins, G. Robert, M. Vehkala, M. Zielinski, and A. Champandard (editor).\n“Part 3 on Behavior Trees.” Paris Shooter Symposium, 2011. http://gameaiconf.com/."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Behavior Tree",
        "story": []
      },
      "date": 1654943774690
    },
    {
      "item": {
        "type": "factory",
        "id": "951113f3bc95320b"
      },
      "id": "951113f3bc95320b",
      "type": "add",
      "date": 1654943780835
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "paragraph",
        "id": "951113f3bc95320b",
        "text": "– https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control)"
      },
      "date": 1654943784431
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "markdown",
        "id": "951113f3bc95320b",
        "text": "– https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control)"
      },
      "date": 1654943785514
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "markdown",
        "id": "951113f3bc95320b",
        "text": "– [https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control) wikipedia]"
      },
      "date": 1654943807039
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "markdown",
        "id": "951113f3bc95320b",
        "text": "A behavior tree is a mathematical model of plan execution used in computer science, robotics, control systems and video games. They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. Behavior trees present some similarities to hierarchical state machines with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make behavior trees less error prone and very popular in the game developer community. Behavior trees have been shown to generalize several other control architectures.[1][2] Mathematically, they are directed acyclic graphs. [https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control) wikipedia]"
      },
      "date": 1654943819580
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "markdown",
        "id": "951113f3bc95320b",
        "text": "A behavior tree is a mathematical model of plan execution used in computer science, robotics, control systems and video games. They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. Behavior trees present some similarities to hierarchical state machines with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make behavior trees less error prone and very popular in the game developer community. Behavior trees have been shown to generalize several other control architectures. Mathematically, they are directed acyclic graphs. [https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control) wikipedia]"
      },
      "date": 1654943859797
    },
    {
      "type": "edit",
      "id": "951113f3bc95320b",
      "item": {
        "type": "markdown",
        "id": "951113f3bc95320b",
        "text": "A behavior tree is a mathematical model of plan execution used in computer science, robotics, control systems and video games. [https://en.wikipedia.org/wiki/Behavior_tree_(artificial_intelligence,_robotics_and_control) wikipedia]\n"
      },
      "date": 1654943872399
    },
    {
      "type": "add",
      "id": "8ac1616c9862a8d5",
      "item": {
        "type": "markdown",
        "id": "8ac1616c9862a8d5",
        "text": "They describe switchings between a finite set of tasks in a modular fashion. Their strength comes from their ability to create very complex tasks composed of simple tasks, without worrying how the simple tasks are implemented. Behavior trees present some similarities to hierarchical state machines with the key difference that the main building block of a behavior is a task rather than a state. Its ease of human understanding make behavior trees less error prone and very popular in the game developer community. Behavior trees have been shown to generalize several other control architectures. Mathematically, they are directed acyclic graphs. "
      },
      "after": "951113f3bc95320b",
      "date": 1654943872601
    },
    {
      "item": {
        "type": "factory",
        "id": "8008b75178dedba6"
      },
      "id": "8008b75178dedba6",
      "type": "add",
      "after": "8ac1616c9862a8d5",
      "date": 1655196558170
    },
    {
      "type": "edit",
      "id": "8008b75178dedba6",
      "item": {
        "type": "paragraph",
        "id": "8008b75178dedba6",
        "text": "– [[Unity]]"
      },
      "date": 1655196564520
    },
    {
      "type": "edit",
      "id": "8008b75178dedba6",
      "item": {
        "type": "paragraph",
        "id": "8008b75178dedba6",
        "text": "⇒ [[Unity]]"
      },
      "date": 1655196571490
    },
    {
      "type": "add",
      "id": "723b490f0b021d59",
      "item": {
        "type": "paragraph",
        "id": "723b490f0b021d59",
        "text": "[[Unreal Engine]]"
      },
      "after": "8008b75178dedba6",
      "date": 1655196741953
    },
    {
      "type": "edit",
      "id": "723b490f0b021d59",
      "item": {
        "type": "paragraph",
        "id": "723b490f0b021d59",
        "text": "⇒ [[Unreal Engine]]"
      },
      "date": 1655196750496
    },
    {
      "item": {
        "type": "factory",
        "id": "de37d04b780dc232"
      },
      "id": "de37d04b780dc232",
      "type": "add",
      "after": "723b490f0b021d59",
      "date": 1655197020450
    },
    {
      "type": "edit",
      "id": "de37d04b780dc232",
      "item": {
        "type": "pagefold",
        "id": "de37d04b780dc232",
        "text": "~"
      },
      "date": 1655197023822
    },
    {
      "item": {
        "type": "factory",
        "id": "e25e11ee2b0af7a6"
      },
      "id": "e25e11ee2b0af7a6",
      "type": "add",
      "after": "de37d04b780dc232",
      "date": 1655197024939
    },
    {
      "type": "edit",
      "id": "e25e11ee2b0af7a6",
      "item": {
        "type": "paragraph",
        "id": "e25e11ee2b0af7a6",
        "text": "\nCHAMPANDARD, Alex J and DUNSTAN, Philip, [no date]. The Behavior Tree Starter Kit. . P. 19. \n"
      },
      "date": 1655197026999
    },
    {
      "type": "edit",
      "id": "e25e11ee2b0af7a6",
      "item": {
        "type": "paragraph",
        "id": "e25e11ee2b0af7a6",
        "text": "CHAMPANDARD, Alex J and DUNSTAN, Philip, [no date]. The Behavior Tree Starter Kit.[http://www.gameaipro.com/GameAIPro/GameAIPro_Chapter06_The_Behavior_Tree_Starter_Kit.pdf pdf]\n"
      },
      "date": 1655197046379
    },
    {
      "type": "edit",
      "id": "e25e11ee2b0af7a6",
      "item": {
        "type": "paragraph",
        "id": "e25e11ee2b0af7a6",
        "text": "CHAMPANDARD, Alex J and DUNSTAN, Philip, [no date]. The Behavior Tree Starter Kit. [http://www.gameaipro.com/GameAIPro/GameAIPro_Chapter06_The_Behavior_Tree_Starter_Kit.pdf pdf]\n"
      },
      "date": 1655197051213
    },
    {
      "item": {
        "type": "factory",
        "id": "c762cb734e78e148"
      },
      "id": "c762cb734e78e148",
      "type": "add",
      "after": "e25e11ee2b0af7a6",
      "date": 1655197110294
    },
    {
      "type": "edit",
      "id": "c762cb734e78e148",
      "item": {
        "type": "paragraph",
        "id": "c762cb734e78e148",
        "text": "References\n[BTSK 12] A. Champandard and P. Dunstan. The Behavior Tree Starter Kit. http://github.com/\naigamedev, 2012.\n[Champandard 07] A. Champandard. “Behavior trees for Next-Gen AI.” Game Developers\nConference Europe, 2007.\n[Isla 05] D. Isla. “Handling complexity in the Halo 2 AI.” Game Developers Conference, 2005.\n[PSS 11] M. Martins, G. Robert, M. Vehkala, M. Zielinski, and A. Champandard (editor).\n“Part 3 on Behavior Trees.” Paris Shooter Symposium, 2011. http://gameaiconf.com/."
      },
      "date": 1655197113250
    },
    {
      "type": "edit",
      "id": "c762cb734e78e148",
      "item": {
        "type": "markdown",
        "id": "c762cb734e78e148",
        "text": "References\n[BTSK 12] A. Champandard and P. Dunstan. The Behavior Tree Starter Kit. http://github.com/\naigamedev, 2012.\n[Champandard 07] A. Champandard. “Behavior trees for Next-Gen AI.” Game Developers\nConference Europe, 2007.\n[Isla 05] D. Isla. “Handling complexity in the Halo 2 AI.” Game Developers Conference, 2005.\n[PSS 11] M. Martins, G. Robert, M. Vehkala, M. Zielinski, and A. Champandard (editor).\n“Part 3 on Behavior Trees.” Paris Shooter Symposium, 2011. http://gameaiconf.com/."
      },
      "date": 1655197114357
    },
    {
      "type": "edit",
      "id": "c762cb734e78e148",
      "item": {
        "type": "markdown",
        "id": "c762cb734e78e148",
        "text": "References\n[BTSK 12] A. Champandard and P. Dunstan. The Behavior Tree Starter Kit. http://github.com/aigamedev, 2012.\n[Champandard 07] A. Champandard. “Behavior trees for Next-Gen AI.” Game Developers\nConference Europe, 2007.\n[Isla 05] D. Isla. “Handling complexity in the Halo 2 AI.” Game Developers Conference, 2005.\n[PSS 11] M. Martins, G. Robert, M. Vehkala, M. Zielinski, and A. Champandard (editor).\n“Part 3 on Behavior Trees.” Paris Shooter Symposium, 2011. http://gameaiconf.com/."
      },
      "date": 1655197126282
    },
    {
      "type": "edit",
      "id": "c762cb734e78e148",
      "item": {
        "type": "markdown",
        "id": "c762cb734e78e148",
        "text": "[BTSK 12] A. Champandard and P. Dunstan. The Behavior Tree Starter Kit. http://github.com/aigamedev, 2012.\n\n"
      },
      "date": 1655197149965
    },
    {
      "type": "add",
      "id": "ff10db40f00c9e43",
      "item": {
        "type": "markdown",
        "id": "ff10db40f00c9e43",
        "text": "[Champandard 07] A. Champandard. “Behavior trees for Next-Gen AI.” Game Developers\nConference Europe, 2007.\n\n\n"
      },
      "after": "c762cb734e78e148",
      "date": 1655197152641
    },
    {
      "type": "add",
      "id": "9537c961b265c994",
      "item": {
        "type": "markdown",
        "id": "9537c961b265c994",
        "text": "[Isla 05] D. Isla. “Handling complexity in the Halo 2 AI.” Game Developers Conference, 2005.\n\n"
      },
      "after": "ff10db40f00c9e43",
      "date": 1655197154212
    },
    {
      "type": "add",
      "id": "bb8c3f5c91a069c3",
      "item": {
        "type": "markdown",
        "id": "bb8c3f5c91a069c3",
        "text": "[PSS 11] M. Martins, G. Robert, M. Vehkala, M. Zielinski, and A. Champandard (editor).\n“Part 3 on Behavior Trees.” Paris Shooter Symposium, 2011. http://gameaiconf.com/."
      },
      "after": "9537c961b265c994",
      "date": 1655197155844
    }
  ]
}