{
  "title": "2022-04-23",
  "story": [
    {
      "type": "paragraph",
      "id": "f3d4d97ec4b3fccf",
      "text": "[[Cordova]], Get Started Fast. [https://cordova.apache.org/#getstarted page]"
    },
    {
      "type": "markdown",
      "id": "2388afffb788ccf4",
      "text": "## Installing Cordova\nCordova command-line runs on Node.js and is available on NPM. Follow platform specific guides to install additional platform dependencies. Open a command prompt or Terminal, and type:"
    },
    {
      "type": "code",
      "id": "faf1422d3dd33bc2",
      "text": "npm install -g cordova"
    },
    {
      "type": "markdown",
      "id": "956e8a347875460d",
      "text": "## Create a project\nCreate a blank Cordova project using the command-line tool. Navigate to the directory where you wish to create your project and type cordova create <path>.\n\nFor a complete set of options, type:"
    },
    {
      "type": "code",
      "id": "551a7f0dc1822b79",
      "text": "cordova help create"
    },
    {
      "type": "paragraph",
      "id": "72b876787d7d41ec",
      "text": "⇒ [[Mobile Apps Development]]"
    },
    {
      "type": "code",
      "id": "dbff9b7ed86edc0d",
      "text": "cordova create Counter"
    },
    {
      "type": "markdown",
      "id": "d52e9884cae1b3b1",
      "text": "⇒ `~/workspace/Counter`"
    },
    {
      "type": "paragraph",
      "id": "67071edc1639ef06",
      "text": "Define your target platforms, by running the following command line in your project folder:\n"
    },
    {
      "type": "code",
      "id": "2875224d48e23851",
      "text": "cordova platform add ios android"
    },
    {
      "type": "markdown",
      "id": "76f22fa3d5f91a30",
      "text": "⇒ Using cordova-fetch for cordova-ios@^6.2.0\nAdding ios project...\nCreating Cordova project for the iOS platform:\n\tPath: platforms/ios\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\niOS project created with cordova-ios@6.2.0\nUsing cordova-fetch for cordova-android@^10.1.1\nAdding android project...\nCreating Cordova project for the Android platform:\n\tPath: platforms/android\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\n\tActivity: MainActivity\n\tAndroid target: android-30\nSubproject Path: CordovaLib\nSubproject Path: app\nAndroid project created with cordova-android@10.1.2\n"
    },
    {
      "type": "paragraph",
      "id": "9065d7558c3f6fa9",
      "text": "Add any Codova plugins, you might need. There exist [https://cordova.apache.org/plugins/ many plugins] that deal with all aspects of mobile apps, such as using a camera or accelerometers. Plugins rely on platform specific code, with a Javascript API. In this example, we don't need any plugin."
    },
    {
      "type": "paragraph",
      "id": "cea4eba434a1b2ef",
      "text": "⇒ [[Develop Your PharoJS App]]"
    },
    {
      "type": "pagefold",
      "id": "5c0f6721e8bdfe12",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "40b92fc22d4e10ec",
      "text": "[[Gerhard Stapelfeldt]]: Revolte der Natur und konformistischer Protest – Über die Klimaschutzbewegung „Fridays for Future“ [https://kukoon.de/de/events/2022-02-18-gerhard-stapelfeldt-revolte-der-natur-und-konformistischer-protest-ueber-die-klimaschutzbewegung-fridays-for-future page]"
    },
    {
      "type": "paragraph",
      "id": "0de164fbc8674b6c",
      "text": "The realization that the increasingly noticeable \"climate crisis\" is anthropogenic is currently only disputed by right-wing populists. Nevertheless, not the \"anthropogenic\", i.e. social and economic causes are well researched, but only the phenomena and the scientifically determinable connections. Similarly, the spokespersons of the climate protection movement Fridays for Future only demand that the climate researchers should finally be listened to. Because the movement's resistance is illiterate in the fields of social theory and political economy and is not directed against the social and economic causes of the crisis, it does not meet with any significant social and political resistance. The rebellion of climate change activists is a conformist protest: a neoliberal critique of globalized neoliberalism. In the lecture a meta-critique of this social and economic illiteracy will be attempted: The social speechlessness will not be denounced abstractly, but will be elucidated from the existing neoliberal relations in order to overcome this unconsciousness and to radicalize the critique of the movement social-theoretically and politically-practically."
    },
    {
      "type": "pagefold",
      "id": "7b79a897168431d1",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "288d961b575e8e77",
      "text": "[[iPharo and ZeroMQ]]"
    },
    {
      "type": "markdown",
      "id": "7fb74dd4fcc2d8ee",
      "text": "> First of all install Jupyter notebooks, I suggest you to install Anaconda package. Once you have Jupyter Notebooks installed, load iPharo in a fresh Pharo image."
    },
    {
      "type": "pagefold",
      "id": "23918d51b9b1c046",
      "text": "~\n"
    },
    {
      "type": "paragraph",
      "id": "0ff29eaf6395cab3",
      "text": "Install the Android build tools version 30.0.3. [https://stackoverflow.com/questions/70145085/no-installed-build-tools-found-install-the-android-build-tools-version-30-0 stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "d79ea8040088fbcb",
      "text": "Android Studion > Android Virtual Device Manager > Android Virtual Device Configuration"
    },
    {
      "type": "paragraph",
      "id": "0e033aec8de4c203",
      "text": "Creating an AVD profile via ADB. [https://stackoverflow.com/questions/17951131/creating-an-avd-profile-via-adb stackoverflow]"
    },
    {
      "type": "markdown",
      "id": "30f83e2d04d439e3",
      "text": "> adb-shell"
    },
    {
      "type": "pagefold",
      "id": "ae87e024bffac9b8",
      "text": "gt"
    },
    {
      "type": "paragraph",
      "id": "24f684551a0c730e",
      "text": "[[John Grant]] — 2022-04-07 via [https://discord.com/channels/729445214812504107/834369757452697641/961522576373477446 discord]\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\n[[Bosque Programming Language]]. [https://github.com/Microsoft/BosqueLanguage github]\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?"
    },
    {
      "type": "paragraph",
      "id": "d38d868d50339968",
      "text": "Thread\n"
    },
    {
      "type": "paragraph",
      "id": "396887bf8f471953",
      "text": "tudor girba — 07.04.2022\nPrecisely! The more writing becomes a commodity, the more reading gets increasingly critical"
    },
    {
      "type": "paragraph",
      "id": "ad48e303c62dfd63",
      "text": "John Grant — 07.04.2022\nI like that turn of phrase\n\nThere will be similarities between readable code and explainable AI. So, these are tools necessary to enable compliance with regulations\n\nHowever, these tools will require a different set of skills. Regularized intermediate language generation represents a convergence of symbolic AI and statistical AI. How will people develop these skills? \n\nSo, perhaps GT will play an important role in training future regularized programming engineers?"
    },
    {
      "type": "markdown",
      "id": "9bad8bfad3d172c4",
      "text": "tudor girba — 07.04.2022\nYes. Before we can reason about AI systems, we first have to be able to reason about regular systems. This is foundational. What we have learnt over the past decade+ is that there is a high degree of variability in how semantics are captured in systems, So, the more specific the question gets, and interesting questions are always specific, the more adapted the reading tool is needed. I believe AI generated systems will not change this nature much. However, what will change is the opportunity we can use to create the reading tool. If we understand the model that led to the creation of something, we can leverage that same model to create introspection tools. I also believe that we will have the environment suggest reading tools, much like how today we get completion suggestions when we type code.\n\nRegularized programmers can be an interesting driving force. **But I believe the goal is to empower regular humans to inquire the inside of systems. That is the only way in which a society based on software systems can be sustainable for humans.**"
    },
    {
      "type": "paragraph",
      "id": "9eb12f1b29622c74",
      "text": "John Grant — 07.04.2022\nI agree to an extent. The democratisation of coding will be enabled by Bosque-like programming languages, but further down the stack engineers and scientists will play an important role. 'Regularized programmers' like data scientists will provide the human bridge between higher and lower levels of abstraction within specialised tech stacks. How the industry will provide sufficient technical training and appropriate tooling to support these increasingly complex roles is unclear. "
    },
    {
      "type": "paragraph",
      "id": "98c5fd3dddfc5aa7",
      "text": "AndreaSomePostfix — 09.04.2022\nMmm have you put some thought about how to select reading tools for suggestion? It seems that the main obstacle is to express your context and goal to a machine. \nFor example, say I have reading tools that can interpret a sentence according to different ethnic groups and my problem is to judge if this sentence I just wrote doesn't offend my readers: my mental block is how to express what an \"offense\" is to actually select the interesting ethnic reading tools.\n(The ironic bit is that if I know the reading tools exist, I will attempt to bias my goal towards how they work: a bit like when I adjust my search query for the search engine fitter results) "
    },
    {
      "type": "paragraph",
      "id": "567a54e33502661c",
      "text": "tudor girba — 09.04.2022\nFirst, we should accept that reading is first and foremost an individual skill of the reader. The choice of tools is then primarily the responsibility of the reader. Tools can help though. For example, if a reader does certain actions in repetition, a tool can offer a summary based on that pattern."
    },
    {
      "type": "pagefold",
      "id": "c2f813852e6cb39e",
      "text": "Federated Wiki"
    },
    {
      "type": "paragraph",
      "id": "3eec3eeef20d7eca",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1650682728110698sRtoT:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]\nThe merge logic in [[Composite Graph]] now tries harder to merge properties on nodes with the same type and name. Similarly relation properties are merged when a relation connects nodes already resolved. When properties conflict one property value is chosen and the alternative is mentioned in the report."
    },
    {
      "type": "pagefold",
      "id": "95066459c4921d55",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "1d2365bf0aafb373",
      "text": "JUNG, Kumseok, GASCON-SAMSON, Julien, GOYAL, Shivanshu, REZAIEAN-ASEL, Armin and PATTABIRAMAN, Karthik, 2021. ThingsMigrate: Platform-independent migration of stateful JavaScript Internet of Things applications. Software: Practice and Experience. Online. 2021. Vol. 51, no. 1, p. 117–155. [Accessed 23 April 2022]. DOI 10.1002/spe.2936. "
    },
    {
      "type": "markdown",
      "id": "5cf286eb49532c61",
      "text": "> The Internet of Things (IoT) has gained wide popularity both in academic and industrial contexts. Unlike traditional embedded devices with specialized firmwares, modern IoT devices accommodate general-purpose operating systems, allowing developers to run more sophisticated applications written in high-level languages like JavaScript. Because IoT devices are subject to resource constraints like available battery power, we need to dynamically migrate a running process between different devices to prevent losing state. However, it is challenging to apply migration techniques using memory snapshots across the heterogeneous pool of IoT devices. We present ThingsMigrate, a middleware providing platform-independent migration of JavaScript processes across IoT devices. Prior to execution, ThingsMigrate instruments the source code of a given program to expose its internal state. During run-time, the transformed program produces on demand a JSON snapshot of its current state, from which new code is generated to resume execution. Thus, ThingsMigrate enables process migration entirely in the application space without any modifications to the underlying virtual machine (VM), providing VM-independence. We present three versions of ThingsMigrate, each building on the previous to optimize for run-time latency and memory consumption. We report on the experience of building each successive version and discuss the insights gained and the learning outcomes. We evaluated ThingsMigrate against standard benchmarks, over two IoT platforms and a cloud-like environment. We show that it can migrate even highly CPU-intensive applications, with average run-time latency overhead of 33% and memory overhead of 78%. ThingsMigrate supports multiple subsequent migrations without introducing additional overhead over each subsequent migration.\n"
    },
    {
      "type": "paragraph",
      "id": "91c701f559d4c999",
      "text": "Gascon-Samson J, Jung K, Goyal S, Rezaiean-Asel A, Pattabiraman K. ThingsMigrate: platform-independent migration of stateful javaScript IoT applications. In: Millstein T, ed. Leibniz International Proceedings in Informatics (LIPIcs) 32nd European Conference on Object-Oriented Programming (ECOOP 2018). Vol 109. Dagstuhl, Germany: Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik; 2018:18:1-18:33."
    },
    {
      "type": "pagefold",
      "id": "31364f667d992bf6",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "8af1d6951b4899aa",
      "text": "TAYLOR, Dorian, [no date]. The Symbol Management Problem — [[Dorian Taylor]]. Online. [Accessed 23 April 2022]. Available from: https://doriantaylor.com/the-symbol-management-problem Or: Why I (still) use Semantic Web technology.Last Modified: 2019-11-28T02:12:32+00:00\n"
    },
    {
      "type": "reference",
      "id": "45fac8dfc0f8c75e",
      "site": "andrew.dojo.fed.wiki",
      "slug": "semantic-web",
      "title": "Semantic Web",
      "text": "The idea with the semantic web is that links have meaning and that meaning can be interpreted by a machine to discover interesting context."
    },
    {
      "type": "reference",
      "id": "eb69b29cf3b3bdb8",
      "site": "andrew.shll.wiki",
      "slug": "ibis-vocabulary",
      "title": "IBIS Vocabulary",
      "text": "Issue-Based Information Systems"
    },
    {
      "type": "reference",
      "id": "e0b6550067497822",
      "site": "ward.dojo.fed.wiki",
      "slug": "fluent-macros",
      "title": "Fluent Macros",
      "text": "We've created javascript classes that wrap the nodes and rels we use to represent a graph. This is further wrapped with Nodes and Rels classes that represent subsets of the graph and offer fluent query functions to traverse the graph based on types, properties or just the availability of relations. [https://github.com/WardCunningham/graph/blob/main/src/graph.js github] [https://en.wikipedia.org/wiki/Fluent_interface wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "ebdad04e29c245bd",
      "text": "nids ⇒ [[Fluent Macros]] ⇒ [https://github.com/WardCunningham/graph/blob/ea4a707bdd02b10a29c767e18f3fe2c03e461d30/src/graph.js#L56-L61 github]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-04-23",
        "story": []
      },
      "date": 1650699996443
    },
    {
      "item": {
        "type": "factory",
        "id": "f3d4d97ec4b3fccf"
      },
      "id": "f3d4d97ec4b3fccf",
      "type": "add",
      "date": 1650700000714
    },
    {
      "type": "edit",
      "id": "f3d4d97ec4b3fccf",
      "item": {
        "type": "paragraph",
        "id": "f3d4d97ec4b3fccf",
        "text": "[[Cordova]]"
      },
      "date": 1650700012884
    },
    {
      "type": "edit",
      "id": "f3d4d97ec4b3fccf",
      "item": {
        "type": "paragraph",
        "id": "f3d4d97ec4b3fccf",
        "text": "[[Cordova]], Get Started Fast. "
      },
      "date": 1650700020189
    },
    {
      "type": "edit",
      "id": "f3d4d97ec4b3fccf",
      "item": {
        "type": "paragraph",
        "id": "f3d4d97ec4b3fccf",
        "text": "[[Cordova]], Get Started Fast. [https://cordova.apache.org/#getstarted page]"
      },
      "date": 1650700029895
    },
    {
      "item": {
        "type": "factory",
        "id": "2388afffb788ccf4"
      },
      "id": "2388afffb788ccf4",
      "type": "add",
      "after": "f3d4d97ec4b3fccf",
      "date": 1650700089376
    },
    {
      "type": "edit",
      "id": "2388afffb788ccf4",
      "item": {
        "type": "paragraph",
        "id": "2388afffb788ccf4",
        "text": "## Installing Cordova\nCordova command-line runs on Node.js and is available on NPM. Follow platform specific guides to install additional platform dependencies. Open a command prompt or Terminal, and type npm install -g cordova."
      },
      "date": 1650700095246
    },
    {
      "type": "fork",
      "date": 1650700130217
    },
    {
      "item": {
        "type": "factory",
        "id": "faf1422d3dd33bc2"
      },
      "id": "faf1422d3dd33bc2",
      "type": "add",
      "after": "2388afffb788ccf4",
      "date": 1650700168791
    },
    {
      "type": "edit",
      "id": "2388afffb788ccf4",
      "item": {
        "type": "paragraph",
        "id": "2388afffb788ccf4",
        "text": "## Installing Cordova\nCordova command-line runs on Node.js and is available on NPM. Follow platform specific guides to install additional platform dependencies. Open a command prompt or Terminal, and type:"
      },
      "date": 1650700169933
    },
    {
      "type": "edit",
      "id": "faf1422d3dd33bc2",
      "item": {
        "type": "code",
        "id": "faf1422d3dd33bc2",
        "text": "npm install -g cordova"
      },
      "date": 1650700170905
    },
    {
      "item": {
        "type": "factory",
        "id": "e5769bc6b75c891f"
      },
      "id": "e5769bc6b75c891f",
      "type": "add",
      "after": "8ef9f192d8226714",
      "date": 1650700197759
    },
    {
      "item": {
        "type": "factory",
        "id": "5c0f6721e8bdfe12"
      },
      "id": "5c0f6721e8bdfe12",
      "type": "add",
      "after": "faf1422d3dd33bc2",
      "date": 1650700201077
    },
    {
      "type": "edit",
      "id": "5c0f6721e8bdfe12",
      "item": {
        "type": "pagefold",
        "id": "5c0f6721e8bdfe12",
        "text": "~"
      },
      "date": 1650700204509
    },
    {
      "item": {
        "type": "factory",
        "id": "40b92fc22d4e10ec"
      },
      "id": "40b92fc22d4e10ec",
      "type": "add",
      "after": "5c0f6721e8bdfe12",
      "date": 1650700206309
    },
    {
      "type": "edit",
      "id": "40b92fc22d4e10ec",
      "item": {
        "type": "paragraph",
        "id": "40b92fc22d4e10ec",
        "text": "[[Gerhard Stapelfeldt]]: Revolte der Natur und konformistischer Protest – Über die Klimaschutzbewegung „Fridays for Future“"
      },
      "date": 1650700216879
    },
    {
      "type": "edit",
      "id": "40b92fc22d4e10ec",
      "item": {
        "type": "paragraph",
        "id": "40b92fc22d4e10ec",
        "text": "[[Gerhard Stapelfeldt]]: Revolte der Natur und konformistischer Protest – Über die Klimaschutzbewegung „Fridays for Future“ [https://kukoon.de/de/events/2022-02-18-gerhard-stapelfeldt-revolte-der-natur-und-konformistischer-protest-ueber-die-klimaschutzbewegung-fridays-for-future page]"
      },
      "date": 1650700231775
    },
    {
      "item": {
        "type": "factory",
        "id": "0de164fbc8674b6c"
      },
      "id": "0de164fbc8674b6c",
      "type": "add",
      "after": "40b92fc22d4e10ec",
      "date": 1650700279448
    },
    {
      "type": "edit",
      "id": "0de164fbc8674b6c",
      "item": {
        "type": "paragraph",
        "id": "0de164fbc8674b6c",
        "text": "The realization that the increasingly noticeable \"climate crisis\" is anthropogenic is currently only disputed by right-wing populists. Nevertheless, not the \"anthropogenic\", i.e. social and economic causes are well researched, but only the phenomena and the scientifically determinable connections. Similarly, the spokespersons of the climate protection movement Fridays for Future only demand that the climate researchers should finally be listened to. Because the movement's resistance is illiterate in the fields of social theory and political economy and is not directed against the social and economic causes of the crisis, it does not meet with any significant social and political resistance. The rebellion of climate change activists is a conformist protest: a neoliberal critique of globalized neoliberalism. In the lecture a meta-critique of this social and economic illiteracy will be attempted: The social speechlessness will not be denounced abstractly, but will be elucidated from the existing neoliberal relations in order to overcome this unconsciousness and to radicalize the critique of the movement social-theoretically and politically-practically."
      },
      "date": 1650700281062
    },
    {
      "type": "remove",
      "id": "e5769bc6b75c891f",
      "date": 1650700313206
    },
    {
      "type": "edit",
      "id": "2388afffb788ccf4",
      "item": {
        "type": "markdown",
        "id": "2388afffb788ccf4",
        "text": "## Installing Cordova\nCordova command-line runs on Node.js and is available on NPM. Follow platform specific guides to install additional platform dependencies. Open a command prompt or Terminal, and type:"
      },
      "date": 1650700315509
    },
    {
      "item": {
        "type": "factory",
        "id": "956e8a347875460d"
      },
      "id": "956e8a347875460d",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700328565
    },
    {
      "id": "956e8a347875460d",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "5c0f6721e8bdfe12",
        "956e8a347875460d",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700332721
    },
    {
      "id": "956e8a347875460d",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "956e8a347875460d",
        "faf1422d3dd33bc2",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700337726
    },
    {
      "id": "faf1422d3dd33bc2",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700339550
    },
    {
      "type": "edit",
      "id": "956e8a347875460d",
      "item": {
        "type": "paragraph",
        "id": "956e8a347875460d",
        "text": "Create a project\nCreate a blank Cordova project using the command-line tool. Navigate to the directory where you wish to create your project and type cordova create <path>.\n\nFor a complete set of options, type cordova help create."
      },
      "date": 1650700340969
    },
    {
      "type": "edit",
      "id": "956e8a347875460d",
      "item": {
        "type": "paragraph",
        "id": "956e8a347875460d",
        "text": "## Create a project\nCreate a blank Cordova project using the command-line tool. Navigate to the directory where you wish to create your project and type cordova create <path>.\n\nFor a complete set of options, type cordova help create."
      },
      "date": 1650700349940
    },
    {
      "type": "edit",
      "id": "956e8a347875460d",
      "item": {
        "type": "markdown",
        "id": "956e8a347875460d",
        "text": "## Create a project\nCreate a blank Cordova project using the command-line tool. Navigate to the directory where you wish to create your project and type cordova create <path>.\n\nFor a complete set of options, type cordova help create."
      },
      "date": 1650700354466
    },
    {
      "type": "edit",
      "id": "956e8a347875460d",
      "item": {
        "type": "markdown",
        "id": "956e8a347875460d",
        "text": "## Create a project\nCreate a blank Cordova project using the command-line tool. Navigate to the directory where you wish to create your project and type cordova create <path>.\n\nFor a complete set of options, type:"
      },
      "date": 1650700374727
    },
    {
      "item": {
        "type": "factory",
        "id": "551a7f0dc1822b79"
      },
      "id": "551a7f0dc1822b79",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700376827
    },
    {
      "type": "edit",
      "id": "551a7f0dc1822b79",
      "item": {
        "type": "code",
        "id": "551a7f0dc1822b79",
        "text": "cordova help create"
      },
      "date": 1650700378771
    },
    {
      "id": "551a7f0dc1822b79",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700381771
    },
    {
      "item": {
        "type": "factory",
        "id": "72b876787d7d41ec"
      },
      "id": "72b876787d7d41ec",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700413999
    },
    {
      "id": "72b876787d7d41ec",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700419009
    },
    {
      "type": "edit",
      "id": "72b876787d7d41ec",
      "item": {
        "type": "paragraph",
        "id": "72b876787d7d41ec",
        "text": "– [[Mobile Apps Development]]"
      },
      "date": 1650700426197
    },
    {
      "type": "edit",
      "id": "72b876787d7d41ec",
      "item": {
        "type": "paragraph",
        "id": "72b876787d7d41ec",
        "text": "⇒ [[Mobile Apps Development]]"
      },
      "date": 1650700514152
    },
    {
      "item": {
        "type": "factory",
        "id": "dbff9b7ed86edc0d"
      },
      "id": "dbff9b7ed86edc0d",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700522012
    },
    {
      "type": "edit",
      "id": "dbff9b7ed86edc0d",
      "item": {
        "type": "code",
        "id": "dbff9b7ed86edc0d",
        "text": "cordova create Counter"
      },
      "date": 1650700526961
    },
    {
      "id": "dbff9b7ed86edc0d",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700530238
    },
    {
      "item": {
        "type": "factory",
        "id": "d52e9884cae1b3b1"
      },
      "id": "d52e9884cae1b3b1",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700560288
    },
    {
      "id": "d52e9884cae1b3b1",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700565149
    },
    {
      "type": "edit",
      "id": "d52e9884cae1b3b1",
      "item": {
        "type": "paragraph",
        "id": "d52e9884cae1b3b1",
        "text": "⇒"
      },
      "date": 1650700588496
    },
    {
      "type": "edit",
      "id": "d52e9884cae1b3b1",
      "item": {
        "type": "paragraph",
        "id": "d52e9884cae1b3b1",
        "text": "⇒ ~/workspace/Counter"
      },
      "date": 1650700598595
    },
    {
      "type": "edit",
      "id": "d52e9884cae1b3b1",
      "item": {
        "type": "paragraph",
        "id": "d52e9884cae1b3b1",
        "text": "⇒ `~/workspace/Counter`"
      },
      "date": 1650700607524
    },
    {
      "type": "edit",
      "id": "d52e9884cae1b3b1",
      "item": {
        "type": "markdown",
        "id": "d52e9884cae1b3b1",
        "text": "⇒ `~/workspace/Counter`"
      },
      "date": 1650700609155
    },
    {
      "item": {
        "type": "factory",
        "id": "67071edc1639ef06"
      },
      "id": "67071edc1639ef06",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700641896
    },
    {
      "id": "67071edc1639ef06",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "67071edc1639ef06",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700644313
    },
    {
      "type": "edit",
      "id": "67071edc1639ef06",
      "item": {
        "type": "paragraph",
        "id": "67071edc1639ef06",
        "text": "Define your target platforms, by running the following command line in your project folder:\ncordova platform add ios android"
      },
      "date": 1650700647492
    },
    {
      "item": {
        "type": "factory",
        "id": "2875224d48e23851"
      },
      "id": "2875224d48e23851",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700667446
    },
    {
      "type": "edit",
      "id": "2875224d48e23851",
      "item": {
        "type": "code",
        "id": "2875224d48e23851",
        "text": "cordova platform add ios android"
      },
      "date": 1650700671316
    },
    {
      "id": "2875224d48e23851",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "67071edc1639ef06",
        "2875224d48e23851",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700673701
    },
    {
      "type": "edit",
      "id": "67071edc1639ef06",
      "item": {
        "type": "paragraph",
        "id": "67071edc1639ef06",
        "text": "Define your target platforms, by running the following command line in your project folder:\n"
      },
      "date": 1650700677885
    },
    {
      "item": {
        "type": "factory",
        "id": "76f22fa3d5f91a30"
      },
      "id": "76f22fa3d5f91a30",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700699126
    },
    {
      "type": "edit",
      "id": "76f22fa3d5f91a30",
      "item": {
        "type": "markdown",
        "id": "76f22fa3d5f91a30",
        "text": "Using cordova-fetch for cordova-ios@^6.2.0\nAdding ios project...\nCreating Cordova project for the iOS platform:\n\tPath: platforms/ios\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\niOS project created with cordova-ios@6.2.0\nUsing cordova-fetch for cordova-android@^10.1.1\nAdding android project...\nCreating Cordova project for the Android platform:\n\tPath: platforms/android\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\n\tActivity: MainActivity\n\tAndroid target: android-30\nSubproject Path: CordovaLib\nSubproject Path: app\nAndroid project created with cordova-android@10.1.2\n"
      },
      "date": 1650700701844
    },
    {
      "id": "76f22fa3d5f91a30",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "67071edc1639ef06",
        "2875224d48e23851",
        "76f22fa3d5f91a30",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700704999
    },
    {
      "type": "edit",
      "id": "76f22fa3d5f91a30",
      "item": {
        "type": "markdown",
        "id": "76f22fa3d5f91a30",
        "text": "⇒ Using cordova-fetch for cordova-ios@^6.2.0\nAdding ios project...\nCreating Cordova project for the iOS platform:\n\tPath: platforms/ios\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\niOS project created with cordova-ios@6.2.0\nUsing cordova-fetch for cordova-android@^10.1.1\nAdding android project...\nCreating Cordova project for the Android platform:\n\tPath: platforms/android\n\tPackage: io.cordova.hellocordova\n\tName: HelloCordova\n\tActivity: MainActivity\n\tAndroid target: android-30\nSubproject Path: CordovaLib\nSubproject Path: app\nAndroid project created with cordova-android@10.1.2\n"
      },
      "date": 1650700713803
    },
    {
      "item": {
        "type": "factory",
        "id": "9065d7558c3f6fa9"
      },
      "id": "9065d7558c3f6fa9",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650700738515
    },
    {
      "id": "9065d7558c3f6fa9",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "67071edc1639ef06",
        "2875224d48e23851",
        "76f22fa3d5f91a30",
        "9065d7558c3f6fa9",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c"
      ],
      "date": 1650700742431
    },
    {
      "type": "edit",
      "id": "9065d7558c3f6fa9",
      "item": {
        "type": "paragraph",
        "id": "9065d7558c3f6fa9",
        "text": "Add any Codova plugins, you might need. There exist many plugins that deal with all aspects of mobile apps, such as using a camera or accelerometers. Plugins rely on platform specific code, with a Javascript API. In this example, we don't need any plugin."
      },
      "date": 1650700743677
    },
    {
      "type": "edit",
      "id": "9065d7558c3f6fa9",
      "item": {
        "type": "paragraph",
        "id": "9065d7558c3f6fa9",
        "text": "Add any Codova plugins, you might need. There exist [https://cordova.apache.org/plugins/ many plugins] that deal with all aspects of mobile apps, such as using a camera or accelerometers. Plugins rely on platform specific code, with a Javascript API. In this example, we don't need any plugin."
      },
      "date": 1650700758578
    },
    {
      "item": {
        "type": "factory",
        "id": "7b79a897168431d1"
      },
      "id": "7b79a897168431d1",
      "type": "add",
      "after": "0de164fbc8674b6c",
      "date": 1650701096346
    },
    {
      "type": "edit",
      "id": "7b79a897168431d1",
      "item": {
        "type": "pagefold",
        "id": "7b79a897168431d1",
        "text": "~"
      },
      "date": 1650701098950
    },
    {
      "item": {
        "type": "factory",
        "id": "288d961b575e8e77"
      },
      "id": "288d961b575e8e77",
      "type": "add",
      "after": "7b79a897168431d1",
      "date": 1650701100500
    },
    {
      "type": "edit",
      "id": "288d961b575e8e77",
      "item": {
        "type": "paragraph",
        "id": "288d961b575e8e77",
        "text": "[[iPharo and ZeroMQ]]"
      },
      "date": 1650701105147
    },
    {
      "type": "add",
      "id": "cea4eba434a1b2ef",
      "item": {
        "type": "paragraph",
        "id": "cea4eba434a1b2ef",
        "text": "– [[Develop Your PharoJS App]]"
      },
      "after": "9065d7558c3f6fa9",
      "date": 1650701399722
    },
    {
      "type": "edit",
      "id": "cea4eba434a1b2ef",
      "item": {
        "type": "paragraph",
        "id": "cea4eba434a1b2ef",
        "text": "⇒ [[Develop Your PharoJS App]]"
      },
      "date": 1650701414324
    },
    {
      "item": {
        "type": "factory",
        "id": "23918d51b9b1c046"
      },
      "id": "23918d51b9b1c046",
      "type": "add",
      "after": "288d961b575e8e77",
      "date": 1650704284014
    },
    {
      "item": {
        "type": "factory",
        "id": "0ff29eaf6395cab3"
      },
      "id": "0ff29eaf6395cab3",
      "type": "add",
      "after": "23918d51b9b1c046",
      "date": 1650704290404
    },
    {
      "type": "edit",
      "id": "23918d51b9b1c046",
      "item": {
        "type": "pagefold",
        "id": "23918d51b9b1c046",
        "text": "~\n"
      },
      "date": 1650704291661
    },
    {
      "type": "edit",
      "id": "0ff29eaf6395cab3",
      "item": {
        "type": "paragraph",
        "id": "0ff29eaf6395cab3",
        "text": "Please install the Android build tools version 30.0.3."
      },
      "date": 1650704292463
    },
    {
      "item": {
        "type": "factory",
        "id": "68be059469f88c60"
      },
      "id": "68be059469f88c60",
      "type": "add",
      "after": "0ff29eaf6395cab3",
      "date": 1650704514244
    },
    {
      "type": "edit",
      "id": "68be059469f88c60",
      "item": {
        "type": "paragraph",
        "id": "68be059469f88c60",
        "text": "[https://stackoverflow.com/questions/70145085/no-installed-build-tools-found-install-the-android-build-tools-version-30-0 stackoverflow]"
      },
      "date": 1650704528968
    },
    {
      "type": "add",
      "id": "d79ea8040088fbcb",
      "item": {
        "type": "paragraph",
        "id": "d79ea8040088fbcb",
        "text": "Android Virtual Device Configuration"
      },
      "after": "68be059469f88c60",
      "date": 1650705206532
    },
    {
      "type": "edit",
      "id": "d79ea8040088fbcb",
      "item": {
        "type": "paragraph",
        "id": "d79ea8040088fbcb",
        "text": "Android Studion > Android Virtual Device Configuration"
      },
      "date": 1650705224900
    },
    {
      "type": "edit",
      "id": "d79ea8040088fbcb",
      "item": {
        "type": "paragraph",
        "id": "d79ea8040088fbcb",
        "text": "Android Studion > Android Virtual Device Manager > Android Virtual Device Configuration"
      },
      "date": 1650705250602
    },
    {
      "item": {
        "type": "factory",
        "id": "0e033aec8de4c203"
      },
      "id": "0e033aec8de4c203",
      "type": "add",
      "after": "d79ea8040088fbcb",
      "date": 1650705454328
    },
    {
      "type": "edit",
      "id": "0e033aec8de4c203",
      "item": {
        "type": "paragraph",
        "id": "0e033aec8de4c203",
        "text": "Creating an AVD profile via ADB"
      },
      "date": 1650705457861
    },
    {
      "type": "edit",
      "id": "0e033aec8de4c203",
      "item": {
        "type": "paragraph",
        "id": "0e033aec8de4c203",
        "text": "Creating an AVD profile via ADB. [https://stackoverflow.com/questions/17951131/creating-an-avd-profile-via-adb stackoverflow]"
      },
      "date": 1650705473715
    },
    {
      "type": "remove",
      "id": "68be059469f88c60",
      "date": 1650705483961
    },
    {
      "type": "edit",
      "id": "0ff29eaf6395cab3",
      "item": {
        "type": "paragraph",
        "id": "0ff29eaf6395cab3",
        "text": "Install the Android build tools version 30.0.3. [https://stackoverflow.com/questions/70145085/no-installed-build-tools-found-install-the-android-build-tools-version-30-0 stackoverflow]"
      },
      "date": 1650705489516
    },
    {
      "item": {
        "type": "factory",
        "id": "30f83e2d04d439e3"
      },
      "id": "30f83e2d04d439e3",
      "type": "add",
      "after": "0e033aec8de4c203",
      "date": 1650705499489
    },
    {
      "type": "edit",
      "id": "30f83e2d04d439e3",
      "item": {
        "type": "markdown",
        "id": "30f83e2d04d439e3",
        "text": "> adb-shell"
      },
      "date": 1650705509779
    },
    {
      "item": {
        "type": "factory",
        "id": "7fb74dd4fcc2d8ee"
      },
      "id": "7fb74dd4fcc2d8ee",
      "type": "add",
      "after": "30f83e2d04d439e3",
      "date": 1650705648991
    },
    {
      "id": "7fb74dd4fcc2d8ee",
      "type": "move",
      "order": [
        "f3d4d97ec4b3fccf",
        "2388afffb788ccf4",
        "faf1422d3dd33bc2",
        "956e8a347875460d",
        "551a7f0dc1822b79",
        "72b876787d7d41ec",
        "dbff9b7ed86edc0d",
        "d52e9884cae1b3b1",
        "67071edc1639ef06",
        "2875224d48e23851",
        "76f22fa3d5f91a30",
        "9065d7558c3f6fa9",
        "cea4eba434a1b2ef",
        "5c0f6721e8bdfe12",
        "40b92fc22d4e10ec",
        "0de164fbc8674b6c",
        "7b79a897168431d1",
        "288d961b575e8e77",
        "7fb74dd4fcc2d8ee",
        "23918d51b9b1c046",
        "0ff29eaf6395cab3",
        "d79ea8040088fbcb",
        "0e033aec8de4c203",
        "30f83e2d04d439e3"
      ],
      "date": 1650705651123
    },
    {
      "type": "edit",
      "id": "7fb74dd4fcc2d8ee",
      "item": {
        "type": "markdown",
        "id": "7fb74dd4fcc2d8ee",
        "text": "> First of all install Jupyter notebooks, I suggest you to install Anaconda package. Once you have Jupyter Notebooks installed, load iPharo in a fresh Pharo image."
      },
      "date": 1650705655101
    },
    {
      "item": {
        "type": "factory",
        "id": "ae87e024bffac9b8"
      },
      "id": "ae87e024bffac9b8",
      "type": "add",
      "after": "30f83e2d04d439e3",
      "date": 1650705795711
    },
    {
      "type": "edit",
      "id": "ae87e024bffac9b8",
      "item": {
        "type": "pagefold",
        "id": "ae87e024bffac9b8",
        "text": "gt"
      },
      "date": 1650705803570
    },
    {
      "item": {
        "type": "factory",
        "id": "24f684551a0c730e"
      },
      "id": "24f684551a0c730e",
      "type": "add",
      "after": "ae87e024bffac9b8",
      "date": 1650705815253
    },
    {
      "type": "edit",
      "id": "24f684551a0c730e",
      "item": {
        "type": "paragraph",
        "id": "24f684551a0c730e",
        "text": "[[John Grant]] — 07.04.2022\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\nhttps://github.com/Microsoft/BosqueLanguage\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?\nThread\n"
      },
      "date": 1650705828928
    },
    {
      "type": "edit",
      "id": "24f684551a0c730e",
      "item": {
        "type": "paragraph",
        "id": "24f684551a0c730e",
        "text": "[[John Grant]] — 2022-04-07 via [https://discord.com/channels/729445214812504107/834369757452697641/961522576373477446 discord]\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\nhttps://github.com/Microsoft/BosqueLanguage\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?\nThread\n"
      },
      "date": 1650705856740
    },
    {
      "type": "edit",
      "id": "24f684551a0c730e",
      "item": {
        "type": "paragraph",
        "id": "24f684551a0c730e",
        "text": "[[John Grant]] — 2022-04-07 via [https://discord.com/channels/729445214812504107/834369757452697641/961522576373477446 discord]\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\nhttps://github.com/Microsoft/BosqueLanguage\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?"
      },
      "date": 1650706819422
    },
    {
      "type": "add",
      "id": "d38d868d50339968",
      "item": {
        "type": "paragraph",
        "id": "d38d868d50339968",
        "text": "Thread\n"
      },
      "after": "24f684551a0c730e",
      "date": 1650706820094
    },
    {
      "item": {
        "type": "factory",
        "id": "396887bf8f471953"
      },
      "id": "396887bf8f471953",
      "type": "add",
      "after": "d38d868d50339968",
      "date": 1650706835863
    },
    {
      "type": "edit",
      "id": "396887bf8f471953",
      "item": {
        "type": "paragraph",
        "id": "396887bf8f471953",
        "text": "tudor girba — 07.04.2022\nPrecisely! The more writing becomes a commodity, the more reading gets increasingly critical"
      },
      "date": 1650706885415
    },
    {
      "type": "add",
      "id": "ad48e303c62dfd63",
      "item": {
        "type": "paragraph",
        "id": "ad48e303c62dfd63",
        "text": "John Grant — 07.04.2022\nI like that turn of phrase\n\nThere will be similarities between readable code and explainable AI. So, these are tools necessary to enable compliance with regulations\n\nHowever, these tools will require a different set of skills. Regularized intermediate language generation represents a convergence of symbolic AI and statistical AI. How will people develop these skills? \n\nSo, perhaps GT will play an important role in training future regularized programming engineers?\ntudor girba — 07.04.2022\nYes. Before we can reason about AI systems, we first have to be able to reason about regular systems. This is foundational. What we have learnt over the past decade+ is that there is a high degree of variability in how semantics are captured in systems, So, the more specific the question gets, and interesting questions are always specific, the more adapted the reading tool is needed. I believe AI generated systems will not change this nature much. However, what will change is the opportunity we can use to create the reading tool. If we understand the model that led to the creation of something, we can leverage that same model to create introspection tools. I also believe that we will have the environment suggest reading tools, much like how today we get completion suggestions when we type code.\n\nRegularized programmers can be an interesting driving force. But I believe the goal is to empower regular humans to inquire the inside of systems. That is the only way in which a society based on software systems can be sustainable for humans."
      },
      "after": "396887bf8f471953",
      "date": 1650706900534
    },
    {
      "type": "edit",
      "id": "ad48e303c62dfd63",
      "item": {
        "type": "paragraph",
        "id": "ad48e303c62dfd63",
        "text": "John Grant — 07.04.2022\nI like that turn of phrase\n\nThere will be similarities between readable code and explainable AI. So, these are tools necessary to enable compliance with regulations\n\nHowever, these tools will require a different set of skills. Regularized intermediate language generation represents a convergence of symbolic AI and statistical AI. How will people develop these skills? \n\nSo, perhaps GT will play an important role in training future regularized programming engineers?"
      },
      "date": 1650706924768
    },
    {
      "type": "add",
      "id": "9bad8bfad3d172c4",
      "item": {
        "type": "paragraph",
        "id": "9bad8bfad3d172c4",
        "text": "tudor girba — 07.04.2022\nYes. Before we can reason about AI systems, we first have to be able to reason about regular systems. This is foundational. What we have learnt over the past decade+ is that there is a high degree of variability in how semantics are captured in systems, So, the more specific the question gets, and interesting questions are always specific, the more adapted the reading tool is needed. I believe AI generated systems will not change this nature much. However, what will change is the opportunity we can use to create the reading tool. If we understand the model that led to the creation of something, we can leverage that same model to create introspection tools. I also believe that we will have the environment suggest reading tools, much like how today we get completion suggestions when we type code.\n\nRegularized programmers can be an interesting driving force. But I believe the goal is to empower regular humans to inquire the inside of systems. That is the only way in which a society based on software systems can be sustainable for humans."
      },
      "after": "ad48e303c62dfd63",
      "date": 1650706984837
    },
    {
      "type": "edit",
      "id": "24f684551a0c730e",
      "item": {
        "type": "paragraph",
        "id": "24f684551a0c730e",
        "text": "[[John Grant]] — 2022-04-07 via [https://discord.com/channels/729445214812504107/834369757452697641/961522576373477446 discord]\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\n[https://github.com/Microsoft/BosqueLanguage github]\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?"
      },
      "date": 1650707017496
    },
    {
      "type": "edit",
      "id": "24f684551a0c730e",
      "item": {
        "type": "paragraph",
        "id": "24f684551a0c730e",
        "text": "[[John Grant]] — 2022-04-07 via [https://discord.com/channels/729445214812504107/834369757452697641/961522576373477446 discord]\nVS Code + GitHub (+ Copilot) gives Microsoft a formidable sensing network. It will provide the telemetry and insights needed to develop Bosque or Bosque-like programming languages. Regularized intermediate or assembly languages amenable to AI reasoning.\n\nThese languages will provide the foundation for new ways of programming and maintaining code: just in time, conversational, adversarial, ...\n\n[[Bosque Programming Language]]. [https://github.com/Microsoft/BosqueLanguage github]\n\nHuman-in-the-loop will necessitate code exploration and visualisation tools.\n\nWhat will be the main distinctions between tools for analysing regularized intermediate code maintained by AI and higher level language code implemented by humans?"
      },
      "date": 1650707046454
    },
    {
      "item": {
        "type": "factory",
        "id": "9eb12f1b29622c74"
      },
      "id": "9eb12f1b29622c74",
      "type": "add",
      "after": "9bad8bfad3d172c4",
      "date": 1650707229181
    },
    {
      "type": "edit",
      "id": "9eb12f1b29622c74",
      "item": {
        "type": "paragraph",
        "id": "9eb12f1b29622c74",
        "text": "John Grant — 07.04.2022\nI agree to an extent. The democratisation of coding will be enabled by Bosque-like programming languages, but further down the stack engineers and scientists will play an important role. 'Regularized programmers' like data scientists will provide the human bridge between higher and lower levels of abstraction within specialised tech stacks. How the industry will provide sufficient technical training and appropriate tooling to support these increasingly complex roles is unclear \n"
      },
      "date": 1650707236341
    },
    {
      "type": "edit",
      "id": "9eb12f1b29622c74",
      "item": {
        "type": "paragraph",
        "id": "9eb12f1b29622c74",
        "text": "John Grant — 07.04.2022\nI agree to an extent. The democratisation of coding will be enabled by Bosque-like programming languages, but further down the stack engineers and scientists will play an important role. 'Regularized programmers' like data scientists will provide the human bridge between higher and lower levels of abstraction within specialised tech stacks. How the industry will provide sufficient technical training and appropriate tooling to support these increasingly complex roles is unclear. \n"
      },
      "date": 1650707268464
    },
    {
      "type": "edit",
      "id": "9eb12f1b29622c74",
      "item": {
        "type": "paragraph",
        "id": "9eb12f1b29622c74",
        "text": "John Grant — 07.04.2022\nI agree to an extent. The democratisation of coding will be enabled by Bosque-like programming languages, but further down the stack engineers and scientists will play an important role. 'Regularized programmers' like data scientists will provide the human bridge between higher and lower levels of abstraction within specialised tech stacks. How the industry will provide sufficient technical training and appropriate tooling to support these increasingly complex roles is unclear. "
      },
      "date": 1650707278958
    },
    {
      "type": "add",
      "id": "98c5fd3dddfc5aa7",
      "item": {
        "type": "paragraph",
        "id": "98c5fd3dddfc5aa7",
        "text": "AndreaSomePostfix — 09.04.2022\nMmm have you put some thought about how to select reading tools for suggestion? It seems that the main obstacle is to express your context and goal to a machine. \nFor example, say I have reading tools that can interpret a sentence according to different ethnic groups and my problem is to judge if this sentence I just wrote doesn't offend my readers: my mental block is how to express what an \"offense\" is to actually select the interesting ethnic reading tools.\n(The ironic bit is that if I know the reading tools exist, I will attempt to bias my goal towards how they work: a bit like when I adjust my search query for the search engine fitter results) \n"
      },
      "after": "9eb12f1b29622c74",
      "date": 1650707282963
    },
    {
      "type": "edit",
      "id": "98c5fd3dddfc5aa7",
      "item": {
        "type": "paragraph",
        "id": "98c5fd3dddfc5aa7",
        "text": "AndreaSomePostfix — 09.04.2022\nMmm have you put some thought about how to select reading tools for suggestion? It seems that the main obstacle is to express your context and goal to a machine. \nFor example, say I have reading tools that can interpret a sentence according to different ethnic groups and my problem is to judge if this sentence I just wrote doesn't offend my readers: my mental block is how to express what an \"offense\" is to actually select the interesting ethnic reading tools.\n(The ironic bit is that if I know the reading tools exist, I will attempt to bias my goal towards how they work: a bit like when I adjust my search query for the search engine fitter results) "
      },
      "date": 1650707332071
    },
    {
      "type": "add",
      "id": "567a54e33502661c",
      "item": {
        "type": "paragraph",
        "id": "567a54e33502661c",
        "text": "tudor girba — 09.04.2022\nFirst, we should accept that reading is first and foremost an individual skill of the reader. The choice of tools is then primarily the responsibility of the reader. Tools can help though. For example, if a reader does certain actions in repetition, a tool can offer a summary based on that pattern."
      },
      "after": "98c5fd3dddfc5aa7",
      "date": 1650707335982
    },
    {
      "type": "edit",
      "id": "9bad8bfad3d172c4",
      "item": {
        "type": "paragraph",
        "id": "9bad8bfad3d172c4",
        "text": "tudor girba — 07.04.2022\nYes. Before we can reason about AI systems, we first have to be able to reason about regular systems. This is foundational. What we have learnt over the past decade+ is that there is a high degree of variability in how semantics are captured in systems, So, the more specific the question gets, and interesting questions are always specific, the more adapted the reading tool is needed. I believe AI generated systems will not change this nature much. However, what will change is the opportunity we can use to create the reading tool. If we understand the model that led to the creation of something, we can leverage that same model to create introspection tools. I also believe that we will have the environment suggest reading tools, much like how today we get completion suggestions when we type code.\n\nRegularized programmers can be an interesting driving force. **But I believe the goal is to empower regular humans to inquire the inside of systems. That is the only way in which a society based on software systems can be sustainable for humans.**"
      },
      "date": 1650707434157
    },
    {
      "type": "edit",
      "id": "9bad8bfad3d172c4",
      "item": {
        "type": "markdown",
        "id": "9bad8bfad3d172c4",
        "text": "tudor girba — 07.04.2022\nYes. Before we can reason about AI systems, we first have to be able to reason about regular systems. This is foundational. What we have learnt over the past decade+ is that there is a high degree of variability in how semantics are captured in systems, So, the more specific the question gets, and interesting questions are always specific, the more adapted the reading tool is needed. I believe AI generated systems will not change this nature much. However, what will change is the opportunity we can use to create the reading tool. If we understand the model that led to the creation of something, we can leverage that same model to create introspection tools. I also believe that we will have the environment suggest reading tools, much like how today we get completion suggestions when we type code.\n\nRegularized programmers can be an interesting driving force. **But I believe the goal is to empower regular humans to inquire the inside of systems. That is the only way in which a society based on software systems can be sustainable for humans.**"
      },
      "date": 1650707438212
    },
    {
      "item": {
        "type": "factory",
        "id": "c2f813852e6cb39e"
      },
      "id": "c2f813852e6cb39e",
      "type": "add",
      "after": "567a54e33502661c",
      "date": 1650708011525
    },
    {
      "type": "edit",
      "id": "c2f813852e6cb39e",
      "item": {
        "type": "pagefold",
        "id": "c2f813852e6cb39e",
        "text": "Federated Wiki"
      },
      "date": 1650708019018
    },
    {
      "item": {
        "type": "factory",
        "id": "3eec3eeef20d7eca"
      },
      "id": "3eec3eeef20d7eca",
      "type": "add",
      "after": "c2f813852e6cb39e",
      "date": 1650708020848
    },
    {
      "type": "edit",
      "id": "3eec3eeef20d7eca",
      "item": {
        "type": "paragraph",
        "id": "3eec3eeef20d7eca",
        "text": "[[Ward]] via [matrix]\nThe merge logic in Composite Graph now tries harder to merge properties on nodes with the same type and name. Similarly relation properties are merged when a relation connects nodes already resolved. When properties conflict one property value is chosen and the alternative is mentioned in the report."
      },
      "date": 1650708035665
    },
    {
      "type": "edit",
      "id": "3eec3eeef20d7eca",
      "item": {
        "type": "paragraph",
        "id": "3eec3eeef20d7eca",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1650682728110698sRtoT:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]\nThe merge logic in [[Composite Graph]] now tries harder to merge properties on nodes with the same type and name. Similarly relation properties are merged when a relation connects nodes already resolved. When properties conflict one property value is chosen and the alternative is mentioned in the report."
      },
      "date": 1650708054776
    },
    {
      "item": {
        "type": "factory",
        "id": "95066459c4921d55"
      },
      "id": "95066459c4921d55",
      "type": "add",
      "after": "3eec3eeef20d7eca",
      "date": 1650718489606
    },
    {
      "type": "edit",
      "id": "95066459c4921d55",
      "item": {
        "type": "pagefold",
        "id": "95066459c4921d55",
        "text": "~"
      },
      "date": 1650718492560
    },
    {
      "item": {
        "type": "factory",
        "id": "1d2365bf0aafb373"
      },
      "id": "1d2365bf0aafb373",
      "type": "add",
      "after": "95066459c4921d55",
      "date": 1650718494530
    },
    {
      "type": "edit",
      "id": "1d2365bf0aafb373",
      "item": {
        "type": "paragraph",
        "id": "1d2365bf0aafb373",
        "text": "\nJUNG, Kumseok, GASCON-SAMSON, Julien, GOYAL, Shivanshu, REZAIEAN-ASEL, Armin and PATTABIRAMAN, Karthik, 2021. ThingsMigrate: Platform-independent migration of stateful JavaScript Internet of Things applications. Software: Practice and Experience. Online. 2021. Vol. 51, no. 1, p. 117–155. [Accessed 23 April 2022]. DOI 10.1002/spe.2936. "
      },
      "date": 1650718513213
    },
    {
      "type": "add",
      "id": "5cf286eb49532c61",
      "item": {
        "type": "paragraph",
        "id": "5cf286eb49532c61",
        "text": "> The Internet of Things (IoT) has gained wide popularity both in academic and industrial contexts. Unlike traditional embedded devices with specialized firmwares, modern IoT devices accommodate general-purpose operating systems, allowing developers to run more sophisticated applications written in high-level languages like JavaScript. Because IoT devices are subject to resource constraints like available battery power, we need to dynamically migrate a running process between different devices to prevent losing state. However, it is challenging to apply migration techniques using memory snapshots across the heterogeneous pool of IoT devices. We present ThingsMigrate, a middleware providing platform-independent migration of JavaScript processes across IoT devices. Prior to execution, ThingsMigrate instruments the source code of a given program to expose its internal state. During run-time, the transformed program produces on demand a JSON snapshot of its current state, from which new code is generated to resume execution. Thus, ThingsMigrate enables process migration entirely in the application space without any modifications to the underlying virtual machine (VM), providing VM-independence. We present three versions of ThingsMigrate, each building on the previous to optimize for run-time latency and memory consumption. We report on the experience of building each successive version and discuss the insights gained and the learning outcomes. We evaluated ThingsMigrate against standard benchmarks, over two IoT platforms and a cloud-like environment. We show that it can migrate even highly CPU-intensive applications, with average run-time latency overhead of 33% and memory overhead of 78%. ThingsMigrate supports multiple subsequent migrations without introducing additional overhead over each subsequent migration.\n"
      },
      "after": "1d2365bf0aafb373",
      "date": 1650718514197
    },
    {
      "type": "edit",
      "id": "5cf286eb49532c61",
      "item": {
        "type": "markdown",
        "id": "5cf286eb49532c61",
        "text": "> The Internet of Things (IoT) has gained wide popularity both in academic and industrial contexts. Unlike traditional embedded devices with specialized firmwares, modern IoT devices accommodate general-purpose operating systems, allowing developers to run more sophisticated applications written in high-level languages like JavaScript. Because IoT devices are subject to resource constraints like available battery power, we need to dynamically migrate a running process between different devices to prevent losing state. However, it is challenging to apply migration techniques using memory snapshots across the heterogeneous pool of IoT devices. We present ThingsMigrate, a middleware providing platform-independent migration of JavaScript processes across IoT devices. Prior to execution, ThingsMigrate instruments the source code of a given program to expose its internal state. During run-time, the transformed program produces on demand a JSON snapshot of its current state, from which new code is generated to resume execution. Thus, ThingsMigrate enables process migration entirely in the application space without any modifications to the underlying virtual machine (VM), providing VM-independence. We present three versions of ThingsMigrate, each building on the previous to optimize for run-time latency and memory consumption. We report on the experience of building each successive version and discuss the insights gained and the learning outcomes. We evaluated ThingsMigrate against standard benchmarks, over two IoT platforms and a cloud-like environment. We show that it can migrate even highly CPU-intensive applications, with average run-time latency overhead of 33% and memory overhead of 78%. ThingsMigrate supports multiple subsequent migrations without introducing additional overhead over each subsequent migration.\n"
      },
      "date": 1650718515428
    },
    {
      "type": "edit",
      "id": "1d2365bf0aafb373",
      "item": {
        "type": "paragraph",
        "id": "1d2365bf0aafb373",
        "text": "JUNG, Kumseok, GASCON-SAMSON, Julien, GOYAL, Shivanshu, REZAIEAN-ASEL, Armin and PATTABIRAMAN, Karthik, 2021. ThingsMigrate: Platform-independent migration of stateful JavaScript Internet of Things applications. Software: Practice and Experience. Online. 2021. Vol. 51, no. 1, p. 117–155. [Accessed 23 April 2022]. DOI 10.1002/spe.2936. "
      },
      "date": 1650718782420
    },
    {
      "type": "fork",
      "date": 1650718807674
    },
    {
      "item": {
        "type": "factory",
        "id": "91c701f559d4c999"
      },
      "id": "91c701f559d4c999",
      "type": "add",
      "after": "5cf286eb49532c61",
      "date": 1650719079968
    },
    {
      "type": "edit",
      "id": "91c701f559d4c999",
      "item": {
        "type": "paragraph",
        "id": "91c701f559d4c999",
        "text": "Gascon-Samson J, Jung K, Goyal S, Rezaiean-Asel A, Pattabiraman K. ThingsMigrate: platform-independent migration of stateful javaScript IoT applications. In: Millstein T, ed. Leibniz International Proceedings in Informatics (LIPIcs) 32nd European Conference on Object-Oriented Programming (ECOOP 2018). Vol 109. Dagstuhl, Germany: Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik; 2018:18:1-18:33."
      },
      "date": 1650719081454
    },
    {
      "item": {
        "type": "factory",
        "id": "31364f667d992bf6"
      },
      "id": "31364f667d992bf6",
      "type": "add",
      "after": "91c701f559d4c999",
      "date": 1650724796965
    },
    {
      "type": "edit",
      "id": "31364f667d992bf6",
      "item": {
        "type": "pagefold",
        "id": "31364f667d992bf6",
        "text": "~"
      },
      "date": 1650724800621
    },
    {
      "item": {
        "type": "factory",
        "id": "8af1d6951b4899aa"
      },
      "id": "8af1d6951b4899aa",
      "type": "add",
      "after": "31364f667d992bf6",
      "date": 1650724803194
    },
    {
      "type": "edit",
      "id": "8af1d6951b4899aa",
      "item": {
        "type": "paragraph",
        "id": "8af1d6951b4899aa",
        "text": "\nTAYLOR, Dorian, [no date]. The Symbol Management Problem — Dorian Taylor. Online. [Accessed 23 April 2022]. Available from: https://doriantaylor.com/the-symbol-management-problemOr: Why I (still) use Semantic Web technology.Last Modified: 2019-11-28T02:12:32+00:00\n"
      },
      "date": 1650724805209
    },
    {
      "type": "edit",
      "id": "8af1d6951b4899aa",
      "item": {
        "type": "paragraph",
        "id": "8af1d6951b4899aa",
        "text": "TAYLOR, Dorian, [no date]. The Symbol Management Problem — Dorian Taylor. Online. [Accessed 23 April 2022]. Available from: https://doriantaylor.com/the-symbol-management-problem Or: Why I (still) use Semantic Web technology.Last Modified: 2019-11-28T02:12:32+00:00\n"
      },
      "date": 1650724822817
    },
    {
      "type": "edit",
      "id": "8af1d6951b4899aa",
      "item": {
        "type": "markdown",
        "id": "8af1d6951b4899aa",
        "text": "TAYLOR, Dorian, [no date]. The Symbol Management Problem — Dorian Taylor. Online. [Accessed 23 April 2022]. Available from: https://doriantaylor.com/the-symbol-management-problem Or: Why I (still) use Semantic Web technology.Last Modified: 2019-11-28T02:12:32+00:00\n"
      },
      "date": 1650724823964
    },
    {
      "type": "edit",
      "id": "8af1d6951b4899aa",
      "item": {
        "type": "markdown",
        "id": "8af1d6951b4899aa",
        "text": "TAYLOR, Dorian, [no date]. The Symbol Management Problem — [[Dorian Taylor]]. Online. [Accessed 23 April 2022]. Available from: https://doriantaylor.com/the-symbol-management-problem Or: Why I (still) use Semantic Web technology.Last Modified: 2019-11-28T02:12:32+00:00\n"
      },
      "date": 1650724903354
    },
    {
      "item": {
        "type": "factory",
        "id": "45fac8dfc0f8c75e"
      },
      "id": "45fac8dfc0f8c75e",
      "type": "add",
      "after": "8af1d6951b4899aa",
      "date": 1650725068855
    },
    {
      "type": "edit",
      "id": "45fac8dfc0f8c75e",
      "item": {
        "type": "reference",
        "id": "45fac8dfc0f8c75e",
        "site": "andrew.dojo.fed.wiki",
        "slug": "semantic-web",
        "title": "Semantic Web",
        "text": "The idea with the semantic web is that links have meaning and that meaning can be interpreted by a machine to discover interesting context."
      },
      "date": 1650725075795
    },
    {
      "item": {
        "type": "factory",
        "id": "eb69b29cf3b3bdb8"
      },
      "id": "eb69b29cf3b3bdb8",
      "type": "add",
      "after": "45fac8dfc0f8c75e",
      "date": 1650725134717
    },
    {
      "type": "edit",
      "id": "eb69b29cf3b3bdb8",
      "item": {
        "type": "reference",
        "id": "eb69b29cf3b3bdb8",
        "site": "andrew.shll.wiki",
        "slug": "ibis-vocabulary",
        "title": "IBIS Vocabulary",
        "text": "Issue-Based Information Systems"
      },
      "date": 1650725138877
    },
    {
      "item": {
        "type": "factory",
        "id": "e0b6550067497822"
      },
      "id": "e0b6550067497822",
      "type": "add",
      "after": "eb69b29cf3b3bdb8",
      "date": 1650725396418
    },
    {
      "type": "edit",
      "id": "e0b6550067497822",
      "item": {
        "type": "reference",
        "id": "e0b6550067497822",
        "site": "ward.dojo.fed.wiki",
        "slug": "fluent-macros",
        "title": "Fluent Macros",
        "text": "We've created javascript classes that wrap the nodes and rels we use to represent a graph. This is further wrapped with Nodes and Rels classes that represent subsets of the graph and offer fluent query functions to traverse the graph based on types, properties or just the availability of relations. [https://github.com/WardCunningham/graph/blob/main/src/graph.js github] [https://en.wikipedia.org/wiki/Fluent_interface wikipedia]"
      },
      "date": 1650725405094
    },
    {
      "item": {
        "type": "factory",
        "id": "ebdad04e29c245bd"
      },
      "id": "ebdad04e29c245bd",
      "type": "add",
      "after": "e0b6550067497822",
      "date": 1650726577170
    },
    {
      "type": "edit",
      "id": "ebdad04e29c245bd",
      "item": {
        "type": "paragraph",
        "id": "ebdad04e29c245bd",
        "text": "nids "
      },
      "date": 1650726583132
    },
    {
      "type": "edit",
      "id": "ebdad04e29c245bd",
      "item": {
        "type": "paragraph",
        "id": "ebdad04e29c245bd",
        "text": "nids [[Fluent Macros]]"
      },
      "date": 1650726605550
    },
    {
      "type": "edit",
      "id": "ebdad04e29c245bd",
      "item": {
        "type": "paragraph",
        "id": "ebdad04e29c245bd",
        "text": "nids ⇒ [[Fluent Macros]]"
      },
      "date": 1650726615200
    },
    {
      "type": "edit",
      "id": "ebdad04e29c245bd",
      "item": {
        "type": "paragraph",
        "id": "ebdad04e29c245bd",
        "text": "nids ⇒ [[Fluent Macros]] ⇒ [https://github.com/WardCunningham/graph/blob/main/src/graph.js github]"
      },
      "date": 1650726636086
    },
    {
      "type": "edit",
      "id": "ebdad04e29c245bd",
      "item": {
        "type": "paragraph",
        "id": "ebdad04e29c245bd",
        "text": "nids ⇒ [[Fluent Macros]] ⇒ [https://github.com/WardCunningham/graph/blob/ea4a707bdd02b10a29c767e18f3fe2c03e461d30/src/graph.js#L56-L61 github]"
      },
      "date": 1650726826443
    }
  ]
}