{
  "title": "Function fromAtom",
  "story": [
    {
      "type": "paragraph",
      "id": "41e9049e07afff86",
      "text": "Yields [https://docs.thi.ng/umbrella/rstream/classes/Stream.html Stream] of value changes in given Atom-like state container. [https://docs.thi.ng/umbrella/rstream/functions/fromAtom.html docs]"
    },
    {
      "type": "paragraph",
      "id": "72adb22e8e18981c",
      "text": "Attaches a watch to the atom and checks for value changes with given changed predicate (!== by default). If the predicate returns truthy result, the new value is emitted on the stream. If emitFirst is true (default), also emits atom's current value when first subscriber attaches to stream.\n\nAlso see [https://docs.thi.ng/umbrella/rstream/functions/fromView.html fromView], [https://docs.thi.ng/umbrella/rstream/functions/fromViewUnsafe.html fromViewUnsafe]"
    },
    {
      "type": "code",
      "id": "167c416b36eead88",
      "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from 'https://esm.run/@thi.ng/rstream';"
    },
    {
      "type": "code",
      "id": "c64868571e934930",
      "text": "const db = defAtom({ a: 23, b: 88 });"
    },
    {
      "type": "paragraph",
      "id": "47618592ca782583",
      "text": "A [[Cursor]] provides read/write access to a [[Path Location]]  within a nested (Atom-like) parent state. [https://docs.thi.ng/umbrella/atom/classes/Cursor.html docs]"
    },
    {
      "type": "code",
      "id": "4f932adfb695f2e5",
      "text": "const cursor = defCursor(db, \"a\");"
    },
    {
      "type": "code",
      "id": "41a668c7ae10d87d",
      "text": "// Subscribe to changes in the cursor's value \n// and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
    },
    {
      "type": "frame",
      "id": "142fe5bcefa780fa",
      "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "7408c6f508170fb4",
      "text": "NB. The requested module 'https://esm.run/@thi.ng/rstream' doesn't provide an export named: 'fromCursor'. See example code [https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code github]"
    },
    {
      "type": "paragraph",
      "id": "37d6291ddbbf15e2",
      "text": "‚áê [[Function syncRAF]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Function fromAtom",
        "story": []
      },
      "date": 1713802540076
    },
    {
      "item": {
        "type": "factory",
        "id": "41e9049e07afff86"
      },
      "id": "41e9049e07afff86",
      "type": "add",
      "date": 1713802541299
    },
    {
      "type": "edit",
      "id": "41e9049e07afff86",
      "item": {
        "type": "paragraph",
        "id": "41e9049e07afff86",
        "text": "Yields Stream of value changes in given Atom-like state container."
      },
      "date": 1713802556017
    },
    {
      "type": "edit",
      "id": "41e9049e07afff86",
      "item": {
        "type": "paragraph",
        "id": "41e9049e07afff86",
        "text": "Yields Stream of value changes in given Atom-like state container. [https://docs.thi.ng/umbrella/rstream/functions/fromAtom.html docs]"
      },
      "date": 1713802562142
    },
    {
      "item": {
        "type": "factory",
        "id": "167c416b36eead88"
      },
      "id": "167c416b36eead88",
      "type": "add",
      "after": "41e9049e07afff86",
      "date": 1713802570142
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from \"@thi.ng/atom\";\nimport { fromCursor } from \"@thi.ng/rstream\";\n\ndb = defAtom({ a: 23, b: 88 });\ncursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713802576946
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromCursor } from 'https://esm.run/@thi.ng/rstream';\n\ndb = defAtom({ a: 23, b: 88 });\ncursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713802594834
    },
    {
      "id": "142fe5bcefa780fa",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "after": "41e9049e07afff86",
      "attribution": {
        "page": "Function syncRAF"
      },
      "date": 1713802620670
    },
    {
      "id": "142fe5bcefa780fa",
      "type": "move",
      "order": [
        "41e9049e07afff86",
        "167c416b36eead88",
        "142fe5bcefa780fa"
      ],
      "date": 1713802626127
    },
    {
      "item": {
        "type": "paragraph",
        "id": "cb684a0b18ebf068",
        "text": "https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code"
      },
      "id": "cb684a0b18ebf068",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1713802890256
    },
    {
      "item": {
        "type": "paragraph",
        "id": "7408c6f508170fb4",
        "text": "The requested module 'https://esm.run/@thi.ng/rstream' doesn't provide an export named: 'fromCursor'\"\n}"
      },
      "id": "7408c6f508170fb4",
      "type": "add",
      "after": "cb684a0b18ebf068",
      "date": 1713802897096
    },
    {
      "type": "edit",
      "id": "cb684a0b18ebf068",
      "item": {
        "type": "paragraph",
        "id": "cb684a0b18ebf068",
        "text": "https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code"
      },
      "date": 1713802894114
    },
    {
      "type": "edit",
      "id": "7408c6f508170fb4",
      "item": {
        "type": "paragraph",
        "id": "7408c6f508170fb4",
        "text": "The requested module 'https://esm.run/@thi.ng/rstream' doesn't provide an export named: 'fromCursor'\"\n}"
      },
      "date": 1713802901403
    },
    {
      "id": "7408c6f508170fb4",
      "type": "move",
      "order": [
        "41e9049e07afff86",
        "167c416b36eead88",
        "142fe5bcefa780fa",
        "7408c6f508170fb4",
        "cb684a0b18ebf068"
      ],
      "date": 1713802903721,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1713803156294
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\n//import { fromCursor } from 'https://esm.run/@thi.ng/rstream';\n\ndb = defAtom({ a: 23, b: 88 });\ncursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713803200930
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\n\ndb = defAtom({ a: 23, b: 88 });\ncursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713803285250
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\n\nconst db = defAtom({ a: 23, b: 88 });\ncursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713803319718
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713803336586
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\n//rs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713803375588
    },
    {
      "type": "edit",
      "id": "cb684a0b18ebf068",
      "item": {
        "type": "paragraph",
        "id": "cb684a0b18ebf068",
        "text": "[https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code github]"
      },
      "date": 1713804739408
    },
    {
      "type": "edit",
      "id": "cb684a0b18ebf068",
      "item": {
        "type": "paragraph",
        "id": "cb684a0b18ebf068",
        "text": "example [https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code github]"
      },
      "date": 1713804773298
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from \"@thi.ng/rstream\";\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713804812568
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from 'https://esm.run/@thi.ng/rstream';\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\nrs.fromAtom(cursor).subscribe(rs.trace(\"cursor val:\"))\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713804849562
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from 'https://esm.run/@thi.ng/rstream';\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\n// Subscribe to changes in the cursor's value and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713804947191
    },
    {
      "type": "add",
      "id": "72adb22e8e18981c",
      "item": {
        "type": "paragraph",
        "id": "72adb22e8e18981c",
        "text": "Attaches a watch to the atom and checks for value changes with given changed predicate (!== by default). If the predicate returns truthy result, the new value is emitted on the stream. If emitFirst is true (default), also emits atom's current value when first subscriber attaches to stream.\n\nAlso see fromView, fromViewUnsafe"
      },
      "after": "41e9049e07afff86",
      "date": 1713806810345
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713807789122
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1713807800320
    },
    {
      "type": "edit",
      "id": "7408c6f508170fb4",
      "item": {
        "type": "paragraph",
        "id": "7408c6f508170fb4",
        "text": "NB. The requested module 'https://esm.run/@thi.ng/rstream' doesn't provide an export named: 'fromCursor'\"\n}"
      },
      "date": 1713807811706
    },
    {
      "type": "edit",
      "id": "cb684a0b18ebf068",
      "item": {
        "type": "paragraph",
        "id": "cb684a0b18ebf068",
        "text": "See example code [https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code github]"
      },
      "date": 1713807819441
    },
    {
      "type": "remove",
      "id": "cb684a0b18ebf068",
      "date": 1713807823761
    },
    {
      "type": "edit",
      "id": "7408c6f508170fb4",
      "item": {
        "type": "paragraph",
        "id": "7408c6f508170fb4",
        "text": "NB. The requested module 'https://esm.run/@thi.ng/rstream' doesn't provide an export named: 'fromCursor'. See example code [https://github.com/search?q=repo%3Athi-ng%2Fumbrella+fromCursor&type=code github]"
      },
      "date": 1713807841559
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from 'https://esm.run/@thi.ng/rstream';\n\nconst db = defAtom({ a: 23, b: 88 });\nconst cursor = defCursor(db, \"a\")\n\n// Subscribe to changes in the cursor's value \n// and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713814990755
    },
    {
      "item": {
        "type": "factory",
        "id": "37d6291ddbbf15e2"
      },
      "id": "37d6291ddbbf15e2",
      "type": "add",
      "after": "7408c6f508170fb4",
      "date": 1713815123471
    },
    {
      "type": "edit",
      "id": "37d6291ddbbf15e2",
      "item": {
        "type": "paragraph",
        "id": "37d6291ddbbf15e2",
        "text": "[[Function syncRAF]]"
      },
      "date": 1713815155817
    },
    {
      "type": "edit",
      "id": "37d6291ddbbf15e2",
      "item": {
        "type": "paragraph",
        "id": "37d6291ddbbf15e2",
        "text": "‚áê [[Function syncRAF]]"
      },
      "date": 1713815411620
    },
    {
      "type": "add",
      "id": "47618592ca782583",
      "item": {
        "type": "paragraph",
        "id": "47618592ca782583",
        "text": "A cursor provides read/write access to a path location within a nested (Atom-like) parent state."
      },
      "after": "72adb22e8e18981c",
      "date": 1713815892265
    },
    {
      "type": "edit",
      "id": "47618592ca782583",
      "item": {
        "type": "paragraph",
        "id": "47618592ca782583",
        "text": "A cursor provides read/write access to a path location within a nested (Atom-like) parent state. [https://docs.thi.ng/umbrella/atom/classes/Cursor.html docs]"
      },
      "date": 1713815910810
    },
    {
      "type": "edit",
      "id": "167c416b36eead88",
      "item": {
        "type": "code",
        "id": "167c416b36eead88",
        "text": "import { defAtom, defCursor } from 'https://esm.run/@thi.ng/atom';\nimport { fromAtom } from 'https://esm.run/@thi.ng/rstream';"
      },
      "date": 1713815944790
    },
    {
      "id": "41a668c7ae10d87d",
      "type": "add",
      "item": {
        "type": "code",
        "id": "41a668c7ae10d87d",
        "text": "\nconst cursor = defCursor(db, \"a\")\n\n// Subscribe to changes in the cursor's value \n// and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "after": "167c416b36eead88",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713815948005
    },
    {
      "id": "c64868571e934930",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c64868571e934930",
        "text": "const db = defAtom({ a: 23, b: 88 });"
      },
      "after": "167c416b36eead88",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713815986536
    },
    {
      "type": "edit",
      "id": "41a668c7ae10d87d",
      "item": {
        "type": "code",
        "id": "41a668c7ae10d87d",
        "text": "const cursor = defCursor(db, \"a\");\n\n// Subscribe to changes in the cursor's value \n// and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713816021474
    },
    {
      "type": "edit",
      "id": "41a668c7ae10d87d",
      "item": {
        "type": "code",
        "id": "41a668c7ae10d87d",
        "text": "// Subscribe to changes in the cursor's value \n// and trace them\nfromAtom(cursor).subscribe({\n    next: (val) => console.log(\"cursor val:\", val)\n});\n// cursor val: 23\n\ncursor.reset(42);\n// cursor val: 42\n\ndb.reset({a: 66})\n// cursor val: 66"
      },
      "date": 1713816042402
    },
    {
      "id": "4f932adfb695f2e5",
      "type": "add",
      "item": {
        "type": "code",
        "id": "4f932adfb695f2e5",
        "text": "const cursor = defCursor(db, \"a\");"
      },
      "after": "c64868571e934930",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713816048730
    },
    {
      "id": "47618592ca782583",
      "type": "move",
      "order": [
        "41e9049e07afff86",
        "72adb22e8e18981c",
        "167c416b36eead88",
        "c64868571e934930",
        "47618592ca782583",
        "4f932adfb695f2e5",
        "41a668c7ae10d87d",
        "142fe5bcefa780fa",
        "7408c6f508170fb4",
        "37d6291ddbbf15e2"
      ],
      "date": 1713816054965
    },
    {
      "type": "edit",
      "id": "72adb22e8e18981c",
      "item": {
        "type": "paragraph",
        "id": "72adb22e8e18981c",
        "text": "Attaches a watch to the atom and checks for value changes with given changed predicate (!== by default). If the predicate returns truthy result, the new value is emitted on the stream. If emitFirst is true (default), also emits atom's current value when first subscriber attaches to stream.\n\nAlso see [https://docs.thi.ng/umbrella/rstream/functions/fromView.html fromView], fromViewUnsafe"
      },
      "date": 1713816548811
    },
    {
      "type": "edit",
      "id": "72adb22e8e18981c",
      "item": {
        "type": "paragraph",
        "id": "72adb22e8e18981c",
        "text": "Attaches a watch to the atom and checks for value changes with given changed predicate (!== by default). If the predicate returns truthy result, the new value is emitted on the stream. If emitFirst is true (default), also emits atom's current value when first subscriber attaches to stream.\n\nAlso see [https://docs.thi.ng/umbrella/rstream/functions/fromView.html fromView], [https://docs.thi.ng/umbrella/rstream/functions/fromViewUnsafe.html fromViewUnsafe]"
      },
      "date": 1713816643128
    },
    {
      "type": "edit",
      "id": "41e9049e07afff86",
      "item": {
        "type": "paragraph",
        "id": "41e9049e07afff86",
        "text": "Yields [https://docs.thi.ng/umbrella/rstream/classes/Stream.html Stream] of value changes in given Atom-like state container. [https://docs.thi.ng/umbrella/rstream/functions/fromAtom.html docs]"
      },
      "date": 1713822413576
    },
    {
      "type": "edit",
      "id": "47618592ca782583",
      "item": {
        "type": "paragraph",
        "id": "47618592ca782583",
        "text": "A [[Cursor]] provides read/write access to a path location within a nested (Atom-like) parent state. [https://docs.thi.ng/umbrella/atom/classes/Cursor.html docs]"
      },
      "date": 1713822910027
    },
    {
      "type": "edit",
      "id": "47618592ca782583",
      "item": {
        "type": "paragraph",
        "id": "47618592ca782583",
        "text": "A [[Cursor]] provides read/write access to a [[Path Location]]  within a nested (Atom-like) parent state. [https://docs.thi.ng/umbrella/atom/classes/Cursor.html docs]"
      },
      "date": 1713823348689
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713823840111
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "/localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "date": 1713823873909
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "date": 1713823891331
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713891203298
    }
  ]
}