{
  "title": "Dr. SES",
  "story": [
    {
      "type": "paragraph",
      "id": "af5507871b6d9409",
      "text": "Bringing Object-orientation to Security Programming (Mark S. Miller, Google) . "
    },
    {
      "type": "paragraph",
      "id": "5024196bf40e7fb3",
      "text": "Object-oriented security programming in javascript by showing how [[money]] is a factorial of secure coding. A brilliant video on Distributed Resilient Secure ECMAScript."
    },
    {
      "type": "video",
      "id": "e2b3b8c5132f56d4",
      "text": "YOUTUBE oBqeDYETXME\nPublished on Nov 3, 2011\n"
    },
    {
      "type": "pagefold",
      "id": "21d840376735af2a",
      "text": ".\n"
    },
    {
      "type": "paragraph",
      "id": "d08e5229d845d5ef",
      "text": "This is one of the best videos on fundamental computer security ever."
    },
    {
      "type": "markdown",
      "id": "f7ed377ee1614c2e",
      "text": "# Overview \n\n- Objects, References, [[Messages]]\n- Object-capabilities (OCaps)\n- Access Abstractions and Compositions\n- Patterns of Safe Cooperation\n- Dimensions & Taxonomy of Electronic Rights\n- Smart Contacts As Games\n- Composing Networks of Games \n  "
    },
    {
      "type": "markdown",
      "id": "53db555cce116555",
      "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer -->  count the ways\n\n- Two objects Bob points to Carol\n\n# By introduction \nThird object Alice already has a pointer (sending messages, sharing) transfers pointer (Alice sends to Bob).\n\n# Bob already exists\n\n "
    },
    {
      "type": "markdown",
      "id": "156ec5631c35ce9d",
      "text": "#Nothing Exists\n"
    },
    {
      "type": "markdown",
      "id": "02b5f913c93e17b2",
      "text": "# This is known as a memory safe system\n\n- Add two more restrictions for a memory safe system\n- Natural sandbox\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Dr. SES",
        "story": []
      },
      "date": 1498935807309
    },
    {
      "item": {
        "type": "factory",
        "id": "2a2e72e96da62a0f"
      },
      "id": "2a2e72e96da62a0f",
      "type": "add",
      "date": 1498935812844
    },
    {
      "type": "remove",
      "id": "2a2e72e96da62a0f",
      "date": 1498935828565
    },
    {
      "item": {
        "type": "factory",
        "id": "af5507871b6d9409"
      },
      "id": "af5507871b6d9409",
      "type": "add",
      "date": 1498935882815
    },
    {
      "type": "edit",
      "id": "af5507871b6d9409",
      "item": {
        "type": "paragraph",
        "id": "af5507871b6d9409",
        "text": "Object-oriented security programming in javascript by showing how money is a factorial of secure coding. A brilliant video on Distributed Resilient Secure ECMAScript."
      },
      "date": 1498935928524
    },
    {
      "item": {
        "type": "factory",
        "id": "e2b3b8c5132f56d4"
      },
      "id": "e2b3b8c5132f56d4",
      "type": "add",
      "after": "af5507871b6d9409",
      "date": 1498935966673
    },
    {
      "item": {
        "type": "factory",
        "id": "21d840376735af2a"
      },
      "id": "21d840376735af2a",
      "type": "add",
      "after": "e2b3b8c5132f56d4",
      "date": 1498935971567
    },
    {
      "type": "edit",
      "id": "e2b3b8c5132f56d4",
      "item": {
        "type": "video",
        "id": "e2b3b8c5132f56d4",
        "text": "YOUTUBE oBqeDYETXME\n(double-click to edit caption)\n"
      },
      "date": 1498935997546
    },
    {
      "type": "edit",
      "id": "e2b3b8c5132f56d4",
      "item": {
        "type": "video",
        "id": "e2b3b8c5132f56d4",
        "text": "YOUTUBE oBqeDYETXME\nPublished on Nov 3, 2011\n"
      },
      "date": 1498936026492
    },
    {
      "type": "edit",
      "id": "21d840376735af2a",
      "item": {
        "type": "pagefold",
        "id": "21d840376735af2a",
        "text": ".\n"
      },
      "date": 1498936054481
    },
    {
      "item": {
        "type": "factory",
        "id": "d08e5229d845d5ef"
      },
      "id": "d08e5229d845d5ef",
      "type": "add",
      "after": "21d840376735af2a",
      "date": 1498936061331
    },
    {
      "type": "edit",
      "id": "d08e5229d845d5ef",
      "item": {
        "type": "paragraph",
        "id": "d08e5229d845d5ef",
        "text": "This is one of the best videos on fundamental computer security ever."
      },
      "date": 1498936111211
    },
    {
      "item": {
        "type": "factory",
        "id": "f7ed377ee1614c2e"
      },
      "id": "f7ed377ee1614c2e",
      "type": "add",
      "after": "d08e5229d845d5ef",
      "date": 1512688307113
    },
    {
      "type": "edit",
      "id": "f7ed377ee1614c2e",
      "item": {
        "type": "markdown",
        "id": "f7ed377ee1614c2e",
        "text": "Objects, References, Messages\nObject-capabilities (OCaps)\nAccess Abstractions and Compositions\nPatterns of Safe Cooperation\nDimensions & Taxonomy of Electronic Rights\nSmart Contacts As Games\nComposing Networks of Games \n  "
      },
      "date": 1512688487414
    },
    {
      "type": "edit",
      "id": "f7ed377ee1614c2e",
      "item": {
        "type": "markdown",
        "id": "f7ed377ee1614c2e",
        "text": "- Objects, References, Messages\n- Object-capabilities (OCaps)\n- Access Abstractions and Compositions\n- Patterns of Safe Cooperation\n- Dimensions & Taxonomy of Electronic Rights\n- Smart Contacts As Games\n- Composing Networks of Games \n  "
      },
      "date": 1512688520756
    },
    {
      "type": "edit",
      "id": "f7ed377ee1614c2e",
      "item": {
        "type": "markdown",
        "id": "f7ed377ee1614c2e",
        "text": "# Overview \n\n- Objects, References, Messages\n- Object-capabilities (OCaps)\n- Access Abstractions and Compositions\n- Patterns of Safe Cooperation\n- Dimensions & Taxonomy of Electronic Rights\n- Smart Contacts As Games\n- Composing Networks of Games \n  "
      },
      "date": 1512688552335
    },
    {
      "item": {
        "type": "factory",
        "id": "53db555cce116555"
      },
      "id": "53db555cce116555",
      "type": "add",
      "after": "f7ed377ee1614c2e",
      "date": 1512688558510
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "Bringing Object-orientation to Security Programming "
      },
      "date": 1512688650123
    },
    {
      "type": "edit",
      "id": "af5507871b6d9409",
      "item": {
        "type": "paragraph",
        "id": "af5507871b6d9409",
        "text": "Bringing Object-orientation to Security Programming (Mark S. Miller, Google) . "
      },
      "date": 1512688679311
    },
    {
      "type": "add",
      "id": "5024196bf40e7fb3",
      "item": {
        "type": "paragraph",
        "id": "5024196bf40e7fb3",
        "text": "Object-oriented security programming in javascript by showing how money is a factorial of secure coding. A brilliant video on Distributed Resilient Secure ECMAScript."
      },
      "after": "af5507871b6d9409",
      "date": 1512688682204
    },
    {
      "item": {
        "type": "factory",
        "id": "156ec5631c35ce9d"
      },
      "id": "156ec5631c35ce9d",
      "type": "add",
      "after": "53db555cce116555",
      "date": 1512688734066
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "How Do I Designate Thee "
      },
      "date": 1512688759197
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer\n- Means of introduction (sending messages, sharing) transferring pointers (Carol sends to Bob) C++\n- \n "
      },
      "date": 1512688933980
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer --> \nTwo objects Bob point Carol count ways.\n- By introduction Alice already has a pointer (sending messages, sharing) transferring pointers (Alice sends to Bob)\n-  \n- \n "
      },
      "date": 1512689107917
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer -->  count the ways\n- Two objects Bob point Carol\n- By introduction Alice already has a pointer (sending messages, sharing) transfers pointer (Alice sends to Bob).\n- \n-  \n- \n "
      },
      "date": 1512689198157
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer -->  count the ways\n- Two objects Bob point Carol\n\n# By introduction \nAlice already has a pointer (sending messages, sharing) transfers pointer (Alice sends to Bob).\n- \n-  \n- \n "
      },
      "date": 1512689268226
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer -->  count the ways\n- Two objects Bob point Carol\n\n# By introduction \nAlice already has a pointer (sending messages, sharing) transfers pointer (Alice sends to Bob).\n\n# Bob already exists\n\n "
      },
      "date": 1512689303251
    },
    {
      "type": "edit",
      "id": "53db555cce116555",
      "item": {
        "type": "markdown",
        "id": "53db555cce116555",
        "text": "# How Do I Designate Thee\n\n- Composition and Contracts and Networks of Contracts \n- The pointer -->  count the ways\n\n- Two objects Bob points to Carol\n\n# By introduction \nThird object Alice already has a pointer (sending messages, sharing) transfers pointer (Alice sends to Bob).\n\n# Bob already exists\n\n "
      },
      "date": 1512689406935
    },
    {
      "type": "edit",
      "id": "156ec5631c35ce9d",
      "item": {
        "type": "markdown",
        "id": "156ec5631c35ce9d",
        "text": "#Nothing Exists\n\n- "
      },
      "date": 1512689439091
    },
    {
      "item": {
        "type": "factory",
        "id": "02b5f913c93e17b2"
      },
      "id": "02b5f913c93e17b2",
      "type": "add",
      "after": "156ec5631c35ce9d",
      "date": 1512689554431
    },
    {
      "type": "edit",
      "id": "02b5f913c93e17b2",
      "item": {
        "type": "markdown",
        "id": "02b5f913c93e17b2",
        "text": "# This is known as a memory safe system\n\n- Add two more restrictions for a memory safe system\n- Natural sandbox\n- "
      },
      "date": 1512689663055
    },
    {
      "type": "edit",
      "id": "156ec5631c35ce9d",
      "item": {
        "type": "markdown",
        "id": "156ec5631c35ce9d",
        "text": "#Nothing Exists\n"
      },
      "date": 1514716425610
    },
    {
      "type": "edit",
      "id": "02b5f913c93e17b2",
      "item": {
        "type": "markdown",
        "id": "02b5f913c93e17b2",
        "text": "# This is known as a memory safe system\n\n- Add two more restrictions for a memory safe system\n- Natural sandbox\n"
      },
      "date": 1514716430702
    },
    {
      "type": "fork",
      "site": "clive.tries.fed.wiki",
      "date": 1627278039780
    },
    {
      "type": "edit",
      "id": "f7ed377ee1614c2e",
      "item": {
        "type": "markdown",
        "id": "f7ed377ee1614c2e",
        "text": "# Overview \n\n- Objects, References, [[Messages]]\n- Object-capabilities (OCaps)\n- Access Abstractions and Compositions\n- Patterns of Safe Cooperation\n- Dimensions & Taxonomy of Electronic Rights\n- Smart Contacts As Games\n- Composing Networks of Games \n  "
      },
      "date": 1638220105925
    },
    {
      "type": "edit",
      "id": "5024196bf40e7fb3",
      "item": {
        "type": "paragraph",
        "id": "5024196bf40e7fb3",
        "text": "Object-oriented security programming in javascript by showing how [[money]] is a factorial of secure coding. A brilliant video on Distributed Resilient Secure ECMAScript."
      },
      "date": 1638245781755
    }
  ]
}