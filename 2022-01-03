{
  "title": "2022-01-03",
  "story": [
    {
      "type": "pagefold",
      "id": "d41082997094bfeb",
      "text": "Glamorous Toolkit"
    },
    {
      "type": "paragraph",
      "id": "5dc582c766d79952",
      "text": "Last year we shipped a first version of #Lepiter and it felt great to see it flying out the door:\n[https://twitter.com/feenkcom/status/1405241195887050758 tweet]\n\n[[Lepiter]] is the latest significant step in our journey to making systems explainable. Here is a behind the scene peak of how we got here.\n"
    },
    {
      "type": "paragraph",
      "id": "839d71316760b1dd",
      "text": "Our guiding north star @feenkcom is making the inside of systems explainable. We spent a great deal of energy rethinking how we can figure systems out, and this led to #MoldableDevelopment and #GToolkit.\n \nhttps://twitter.com/girba/status/1352734434613727232?s=20…"
    },
    {
      "type": "paragraph",
      "id": "fec5e7c3c2700b83",
      "text": "#GToolkit proposes a new development experience. We see the environment as a language made out of visual and interactive operators that can be combined in many ways while working with the environment."
    },
    {
      "type": "paragraph",
      "id": "c4f7ba547fbd097e",
      "text": "Early on, we embraced the idea that narratives are central to software development:\nhttps://twitter.com/girba/status/1357446644577542145?s=20…\n\nDocumenter and Playground were two components of #GToolkit that facilitated the creation and consumption of such narratives."
    },
    {
      "type": "markdown",
      "id": "fbe4e5e2f31e05b9",
      "text": "At @feenkcom, we consider narratives with and about our systems as the single most important glue. It drives everything we do and it compresses communication, too.\n\n#remote, #nomeetings, #noestimates, #nobacklog. #storytelling How we work at feenk [https://medium.com/feenk/remote-nomeetings-noestimation-nobacklog-storytelling-d0d1b3b7a2de post]"
    },
    {
      "type": "paragraph",
      "id": "345d056ba4db439f",
      "text": "The Playground was made of snippets and was where we would start to prototype or explore:\n\nhttps://twitter.com/feenkcom/status/1032745159186886656?s=20…"
    },
    {
      "type": "paragraph",
      "id": "a7bc37c474699b44",
      "text": "Combined with custom inspector views changes it could be used for playing with interfaces ...\n\nhttps://twitter.com/feenkcom/status/1168908843578998784?s=20…"
    },
    {
      "type": "paragraph",
      "id": "29506bc777403be1",
      "text": "... for doing analyses of external systems ...\n\nhttps://twitter.com/feenkcom/status/1242934204431773697?s=20…\n"
    },
    {
      "type": "paragraph",
      "id": "a29ba1c27bfcd8d2",
      "text": "... or for querying the code of #GToolkit itself.\n\nhttps://twitter.com/feenkcom/status/1085649744712556545?s=20…\n"
    },
    {
      "type": "paragraph",
      "id": "066aab7aba062487",
      "text": "At the same time, Documenter was another component that complemented the Playground with live textual narratives and that transformed the #GToolkit image into a wiki made out of class comments and markup files:\n\nhttps://twitter.com/feenkcom/status/1047235226160775170?s=20…"
    },
    {
      "type": "paragraph",
      "id": "aa4406777f95900f",
      "text": "\n\nfeenk\n@feenkcom\n · 2. Okt. 2018\nThe Smalltalk image has always been similar to a live wiki. Now, #gtoolkit makes it feel like one, too. For example, in the attached picture we see the #gtoolkit Tour document from which we navigate to other parts of the system following documentation links."
    },
    {
      "type": "paragraph",
      "id": "5682f26a904262c3",
      "text": "Documenter was particularly interesting in combination with examples (tests that return objects). When embedding custom inspector views of examples in documents, we essentially use the testing effort to produce live and testable documentation.\n\nhttps://twitter.com/Chis_Andrei/status/1237678278711836673?s=20…"
    },
    {
      "type": "paragraph",
      "id": "92020465bfbaeac7",
      "text": "Code comments as live wikis in IDEs [https://medium.com/feenk/code-comments-as-live-wikis-in-ides-1c7b593749f5 post]"
    },
    {
      "type": "paragraph",
      "id": "41ae32bafea928b7",
      "text": "#Lepiter unifies what Playground and Documenter had to offer and adds more abilities and it enriches the environment's language in significant and unexpected ways.\n\nhttps://twitter.com/feenkcom/status/1405241195887050758?s=20…"
    },
    {
      "type": "paragraph",
      "id": "b9504858b247f6de",
      "text": "If until now #GToolkit might have been considered as an environment for #Pharo, we can now show how the same principles and design apply well beyond Pharo and even beyond programming."
    },
    {
      "type": "paragraph",
      "id": "fdd5ea8a97d882ec",
      "text": "Consider this example: we write a custom visualization that highlights a query over the current knowledge base, and when clicking on the result we get to continue editing. \n\nhttps://twitter.com/feenkcom/status/1405241793751441427?s=20…"
    },
    {
      "type": "paragraph",
      "id": "8d5d2fd0acb6f203",
      "text": "But, wait, there is more. Clicking on a node in the visualization spawns an editor on the page. Even though the visualization is hand crafted, it is an integral part of the environment and acts as a guide.\n\nThis is a direct consequence of #MoldableDevelopment.\n\n14/"
    },
    {
      "type": "paragraph",
      "id": "051eedc451b9c79b",
      "text": "Interestingly, the size of Lepiter's implementation is comparable to that of Playground and Documenter, but it's so much more powerful. That's what we mean by a language. Lepiter is not a feature. It's a new operator that is combinable with the rest of the environment."
    },
    {
      "type": "html",
      "id": "fcdda7e0136b2131",
      "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FIKRCsvXIAUXXDD?format=jpg&name=4096x4096\"></center>"
    },
    {
      "type": "paragraph",
      "id": "2dbd9976099688b2",
      "text": "With the addition of Lepiter we get an environment in which we can treat programming, data science and note taking in the same way. The possibilties that are opened from this unification are simply exciting.\n\nhttps://twitter.com/girba/status/1465822051378384906?s=20…\n"
    },
    {
      "type": "paragraph",
      "id": "b9db9431020abc60",
      "text": "After a year of working with Lepiter we can now safely say that it has transformed how we program, how we learn, how we document, how we communicate both on the technical level and on the business level.\n\n16/"
    },
    {
      "type": "paragraph",
      "id": "a5d76199b3ce0014",
      "text": "Newcomers to #GToolkit often tell us that it's unclear what the environment is. Some see a notebook. Some see a programming environment. Some see code analyses. Some see a graphical engine. And now, some people see a note taking tool.\n\nSo, which one is it? Neither and all.\n\n17/"
    },
    {
      "type": "pagefold",
      "id": "6be32e07a567dd9b",
      "text": "GNU Smalltalk"
    },
    {
      "type": "reference",
      "id": "91b0ec500ea9bfa7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "shampoo",
      "title": "Shampoo",
      "text": "A set of tools for remote Smalltalk development with Emacs [https://revival.sh/shampoo/ site]"
    },
    {
      "type": "pagefold",
      "id": "e7380ebf688d5792",
      "text": "~"
    },
    {
      "type": "video",
      "id": "1e3886baea13b3fa",
      "text": "YOUTUBE N-_l3LAvENc\n[[Stephen Kell]], Smalltalk, Big Ideas and How to Escape the Island"
    },
    {
      "type": "paragraph",
      "id": "b7885938828a0a4a",
      "text": "[[Sea of Objects]]"
    },
    {
      "type": "markdown",
      "id": "1f8103f06c6f2762",
      "text": "Unix, the world's first computer virus https://youtu.be/N-_l3LAvENc?t=481\n"
    },
    {
      "type": "markdown",
      "id": "36c36ae48cac2897",
      "text": "[[Self]] 4.0, July 1995"
    },
    {
      "type": "markdown",
      "id": "d5e9fe07263570ac",
      "text": "How can we 'infect' Unix-like operation systems with https://youtu.be/N-_l3LAvENc?t=635"
    },
    {
      "type": "markdown",
      "id": "250158a6c6b09b20",
      "text": "* fine-grained *state* ('[[sea of objects]]')"
    },
    {
      "type": "paragraph",
      "id": "5e5ffb141bea7ae4",
      "text": "T. A. Cargill, Pi: a case study in object-oriented programming. OOPSLA '86"
    },
    {
      "type": "markdown",
      "id": "2b9786a71f28b22e",
      "text": "Who says there's no reflection in Unix? https://youtu.be/N-_l3LAvENc?t=918"
    },
    {
      "type": "code",
      "id": "bdcc1a2ba98cfd8b",
      "text": "$ cat /proc/self/maps"
    },
    {
      "type": "paragraph",
      "id": "0e50aaa75442381c",
      "text": "What is my address space?"
    },
    {
      "type": "markdown",
      "id": "f561f5e3d08d9882",
      "text": "Evolving Unix: memory mappings as top-level allocation https://youtu.be/N-_l3LAvENc?t=987"
    },
    {
      "type": "markdown",
      "id": "fa982293fc3089d4",
      "text": "Reifing data types at run time https://youtu.be/N-_l3LAvENc?t=1278"
    },
    {
      "type": "paragraph",
      "id": "4e2bdbf49fce1562",
      "text": "liballocs is a run-time library and toolchain extension which extends Unix-like operating systems (currently GNU/Linux) with a rich run-time reflective model. [https://github.com/stephenrkell/liballocs github]"
    },
    {
      "type": "paragraph",
      "id": "5479f5b951900ffb",
      "text": "[VMIL 19] Guillaume Bertholon and Stephen Kell. Towards seamless interfacing between dynamic languages and native code. In Proceedings of the Virtual Machines and Intermediate Languages workshop at SPLASH 2019.\nlocally deposited version abstract author's notes"
    },
    {
      "type": "markdown",
      "id": "f65bfc45a61a3f67",
      "text": "> **Abstract**. Existing approaches to interfacing high- and low-level code push considerable burdens onto the programmer, such as wrapper maintenance, explicit code generation, interface re-declaration, and/or signalling to garbage collectors. We note that run-time information on data layout and allocations in native code is available, and may be extended with knowledge of object lifetimes to assist in automating garbage collection. We describe work in progress towards an exten- sion of the CPython virtual machine along these lines. We report initial experience building a first working prototype, and some early performance experiments."
    },
    {
      "type": "markdown",
      "id": "f364d31083b7aba8",
      "text": "https://youtu.be/N-_l3LAvENc?t=2959\n"
    },
    {
      "type": "reference",
      "id": "269f3f211265ffe8",
      "site": "wiki.ralfbarkow.ch",
      "slug": "design-principles-behind-smalltalk",
      "title": "Design Principles Behind Smalltalk",
      "text": "[http://users.ipa.net/~dwighth/smalltalk/byte_aug81/design_principles_behind_smalltalk.html users.ipa.net]"
    },
    {
      "type": "paragraph",
      "id": "cef5bef5edd13253",
      "text": "[[Eric Gade]], tribal culture"
    },
    {
      "type": "paragraph",
      "id": "5680c863ec54fe29",
      "text": "[[Boris Shingarov]]"
    },
    {
      "type": "markdown",
      "id": "fdc95d0b622d366d",
      "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]] … https://youtu.be/N-_l3LAvENc?t=3830 [https://www.manning.com/books/reactive-design-patterns page]"
    },
    {
      "type": "markdown",
      "id": "5ab0267e87f8ade6",
      "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, [[Plan 9]], [[Lisp Machine]] (cf. Spotter in Glamorous Toolkit), OMG, CORBA"
    },
    {
      "type": "reference",
      "id": "a26dad4f6d0c9071",
      "site": "wiki.ralfbarkow.ch",
      "slug": "siliconsqueak",
      "title": "SiliconSqueak",
      "text": "https://www.meetup.com/de-DE/california-smalltalkers/events/mvzhdsycckbsb"
    },
    {
      "type": "reference",
      "id": "9466cef78854c4be",
      "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
      "punt": {
        "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:95.0) Gecko/20100101 Firefox/95.0"
      },
      "site": "wiki.ralfbarkow.ch",
      "slug": "unix-plan-9-and-the-lurking-smalltalk",
      "title": "Unix, Plan 9 and the Lurking Smalltalk",
      "text": "S. Kell, “Unix, Plan 9 and the Lurking Smalltalk,” in Reflections on Programming Systems: Historical and Philosophical Aspects, L. De Mol and G. Primiero, Eds. Cham: Springer International Publishing, 2018, pp. 189–213. doi: 10.1007/978-3-319-97226-8_6."
    },
    {
      "type": "paragraph",
      "id": "a10e5068dacb48e8",
      "text": "[[Boomerang]] [https://en.wikipedia.org/wiki/Boomerang_(programming_language) wikipedia]"
    },
    {
      "type": "markdown",
      "id": "2ece2591c602667b",
      "text": "[[Boris Shingarov]] https://youtu.be/N-_l3LAvENc?t=4934"
    },
    {
      "type": "pagefold",
      "id": "5541d32f6efb58e3",
      "text": "Leo"
    },
    {
      "type": "reference",
      "id": "51503d56e120b5d7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "leo",
      "title": "Leo",
      "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/729445215341117522/927571939713757224 discord]"
    },
    {
      "type": "pagefold",
      "id": "56b78ade92de0c03",
      "text": "gt"
    },
    {
      "type": "paragraph",
      "id": "9db8c90d6ab6a8f1",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16412311871055836EzadH:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]"
    },
    {
      "type": "markdown",
      "id": "aa15bdfbf17e43b3",
      "text": "> Was I expecting something to happen? Or is this where I start debugging?"
    },
    {
      "type": "html",
      "id": "27a6508ea985c6a1",
      "text": "<center><img width=\"100%\" src=\"https://dreyeck.freedombox.rocks/_matrix/media/r0/download/matrix.org/kdOAXghbVrgaRZGBNJtVYuSJ\"></center>"
    },
    {
      "type": "paragraph",
      "id": "a049c2e113e6861b",
      "text": "[[Ward]] wrote [[Biota]] in Digitalk Smalltalk in 1990. [[Ian Osgood]] translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop. [https://discord.com/channels/729445214812504107/735947900651175998/927625416376733726 discord]\n"
    },
    {
      "type": "reference",
      "id": "f739f14f7e574dec",
      "site": "code.fed.wiki.org",
      "slug": "biota-flagellum",
      "title": "Biota Flagellum",
      "text": "The Flagellum was our best [[Biota]] program ever. Here we have slimmed down Ian Osgood's javascript implementation to show this one program running."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-01-03",
        "story": []
      },
      "date": 1641211194864
    },
    {
      "item": {
        "type": "factory",
        "id": "5dc582c766d79952"
      },
      "id": "5dc582c766d79952",
      "type": "add",
      "date": 1641211207604
    },
    {
      "type": "edit",
      "id": "5dc582c766d79952",
      "item": {
        "type": "paragraph",
        "id": "5dc582c766d79952",
        "text": "Last year we shipped a first version of #Lepiter and it felt great to see it flying out the door:\nhttps://twitter.com/feenkcom/status/1405241195887050758…\n\nLepiter is the latest significant step in our journey to making systems explainable. Here is a behind the scene peak of how we got here.\n"
      },
      "date": 1641211208864
    },
    {
      "item": {
        "type": "factory",
        "id": "839d71316760b1dd"
      },
      "id": "839d71316760b1dd",
      "type": "add",
      "after": "5dc582c766d79952",
      "date": 1641211258193
    },
    {
      "type": "edit",
      "id": "839d71316760b1dd",
      "item": {
        "type": "paragraph",
        "id": "839d71316760b1dd",
        "text": "\n\nTudor Girba\n@girba\n·\n5 Std.\nAntwort an \n@girba\nOur guiding north star \n@feenkcom\n is making the inside of systems explainable. We spent a great deal of energy rethinking how we can figure systems out, and this led to #MoldableDevelopment and #GToolkit.\n \nhttps://twitter.com/girba/status/1352734434613727232?s=20…"
      },
      "date": 1641211262980
    },
    {
      "item": {
        "type": "factory",
        "id": "fec5e7c3c2700b83"
      },
      "id": "fec5e7c3c2700b83",
      "type": "add",
      "after": "839d71316760b1dd",
      "date": 1641211275935
    },
    {
      "type": "edit",
      "id": "fec5e7c3c2700b83",
      "item": {
        "type": "paragraph",
        "id": "fec5e7c3c2700b83",
        "text": "#GToolkit proposes a new development experience. We see the environment as a language made out of visual and interactive operators that can be combined in many ways while working with the environment."
      },
      "date": 1641211277157
    },
    {
      "item": {
        "type": "factory",
        "id": "c4f7ba547fbd097e"
      },
      "id": "c4f7ba547fbd097e",
      "type": "add",
      "after": "fec5e7c3c2700b83",
      "date": 1641211288468
    },
    {
      "type": "edit",
      "id": "c4f7ba547fbd097e",
      "item": {
        "type": "paragraph",
        "id": "c4f7ba547fbd097e",
        "text": "Early on, we embraced the idea that narratives are central to software development:\nhttps://twitter.com/girba/status/1357446644577542145?s=20…\n\nDocumenter and Playground were two components of #GToolkit that facilitated the creation and consumption of such narratives."
      },
      "date": 1641211290756
    },
    {
      "item": {
        "type": "factory",
        "id": "fbe4e5e2f31e05b9"
      },
      "id": "fbe4e5e2f31e05b9",
      "type": "add",
      "after": "c4f7ba547fbd097e",
      "date": 1641211319038
    },
    {
      "type": "edit",
      "id": "fbe4e5e2f31e05b9",
      "item": {
        "type": "paragraph",
        "id": "fbe4e5e2f31e05b9",
        "text": "At @feenkcom, we consider narratives with and about our systems as the single most important glue. It drives everything we do and it compresses communication, too.\n\nhttps://medium.com/feenk/remote-nomeetings-noestimation-nobacklog-storytelling-d0d1b3b7a2de?source=friends_link&sk=a870e19e6c43ee8996d72d774d0a8574"
      },
      "date": 1641211331635
    },
    {
      "item": {
        "type": "factory",
        "id": "345d056ba4db439f"
      },
      "id": "345d056ba4db439f",
      "type": "add",
      "after": "fbe4e5e2f31e05b9",
      "date": 1641211337293
    },
    {
      "type": "edit",
      "id": "345d056ba4db439f",
      "item": {
        "type": "paragraph",
        "id": "345d056ba4db439f",
        "text": "The Playground was made of snippets and was where we would start to prototype or explore:\n\nhttps://twitter.com/feenkcom/status/1032745159186886656?s=20…"
      },
      "date": 1641211347446
    },
    {
      "item": {
        "type": "factory",
        "id": "a7bc37c474699b44"
      },
      "id": "a7bc37c474699b44",
      "type": "add",
      "after": "345d056ba4db439f",
      "date": 1641211359989
    },
    {
      "type": "edit",
      "id": "a7bc37c474699b44",
      "item": {
        "type": "paragraph",
        "id": "a7bc37c474699b44",
        "text": "Combined with custom inspector views changes it could be used for playing with interfaces ...\n\nhttps://twitter.com/feenkcom/status/1168908843578998784?s=20…"
      },
      "date": 1641211378738
    },
    {
      "item": {
        "type": "factory",
        "id": "29506bc777403be1"
      },
      "id": "29506bc777403be1",
      "type": "add",
      "after": "a7bc37c474699b44",
      "date": 1641211391466
    },
    {
      "type": "edit",
      "id": "29506bc777403be1",
      "item": {
        "type": "paragraph",
        "id": "29506bc777403be1",
        "text": "... for doing analyses of external systems ...\n\nhttps://twitter.com/feenkcom/status/1242934204431773697?s=20…\n"
      },
      "date": 1641211399440
    },
    {
      "item": {
        "type": "factory",
        "id": "a29ba1c27bfcd8d2"
      },
      "id": "a29ba1c27bfcd8d2",
      "type": "add",
      "after": "29506bc777403be1",
      "date": 1641211405088
    },
    {
      "type": "edit",
      "id": "a29ba1c27bfcd8d2",
      "item": {
        "type": "paragraph",
        "id": "a29ba1c27bfcd8d2",
        "text": "... or for querying the code of #GToolkit itself.\n\nhttps://twitter.com/feenkcom/status/1085649744712556545?s=20…\n"
      },
      "date": 1641211412100
    },
    {
      "item": {
        "type": "factory",
        "id": "066aab7aba062487"
      },
      "id": "066aab7aba062487",
      "type": "add",
      "after": "a29ba1c27bfcd8d2",
      "date": 1641211417981
    },
    {
      "type": "edit",
      "id": "066aab7aba062487",
      "item": {
        "type": "paragraph",
        "id": "066aab7aba062487",
        "text": "At the same time, Documenter was another component that complemented the Playground with live textual narratives and that transformed the #GToolkit image into a wiki made out of class comments and markup files:\n\nhttps://twitter.com/feenkcom/status/1047235226160775170?s=20…"
      },
      "date": 1641211433115
    },
    {
      "item": {
        "type": "factory",
        "id": "aa4406777f95900f"
      },
      "id": "aa4406777f95900f",
      "type": "add",
      "after": "066aab7aba062487",
      "date": 1641211441559
    },
    {
      "type": "edit",
      "id": "aa4406777f95900f",
      "item": {
        "type": "paragraph",
        "id": "aa4406777f95900f",
        "text": "\n\nfeenk\n@feenkcom\n · 2. Okt. 2018\nThe Smalltalk image has always been similar to a live wiki. Now, #gtoolkit makes it feel like one, too. For example, in the attached picture we see the #gtoolkit Tour document from which we navigate to other parts of the system following documentation links."
      },
      "date": 1641211448517
    },
    {
      "item": {
        "type": "factory",
        "id": "5682f26a904262c3"
      },
      "id": "5682f26a904262c3",
      "type": "add",
      "after": "aa4406777f95900f",
      "date": 1641211454251
    },
    {
      "type": "edit",
      "id": "5682f26a904262c3",
      "item": {
        "type": "paragraph",
        "id": "5682f26a904262c3",
        "text": "Documenter was particularly interesting in combination with examples (tests that return objects). When embedding custom inspector views of examples in documents, we essentially use the testing effort to produce live and testable documentation.\n\nhttps://twitter.com/Chis_Andrei/status/1237678278711836673?s=20…"
      },
      "date": 1641211473456
    },
    {
      "item": {
        "type": "factory",
        "id": "92020465bfbaeac7"
      },
      "id": "92020465bfbaeac7",
      "type": "add",
      "after": "5682f26a904262c3",
      "date": 1641211483713
    },
    {
      "type": "edit",
      "id": "92020465bfbaeac7",
      "item": {
        "type": "paragraph",
        "id": "92020465bfbaeac7",
        "text": "Code comments as live wikis in IDEs "
      },
      "date": 1641211487480
    },
    {
      "type": "edit",
      "id": "92020465bfbaeac7",
      "item": {
        "type": "paragraph",
        "id": "92020465bfbaeac7",
        "text": "Code comments as live wikis in IDEs [https://medium.com/feenk/code-comments-as-live-wikis-in-ides-1c7b593749f5 post]"
      },
      "date": 1641211496141
    },
    {
      "item": {
        "type": "factory",
        "id": "41ae32bafea928b7"
      },
      "id": "41ae32bafea928b7",
      "type": "add",
      "after": "92020465bfbaeac7",
      "date": 1641211585520
    },
    {
      "type": "edit",
      "id": "41ae32bafea928b7",
      "item": {
        "type": "paragraph",
        "id": "41ae32bafea928b7",
        "text": "#Lepiter unifies what Playground and Documenter had to offer and adds more abilities and it enriches the environment's language in significant and unexpected ways.\n\nhttps://twitter.com/feenkcom/status/1405241195887050758?s=20…"
      },
      "date": 1641211590614
    },
    {
      "item": {
        "type": "factory",
        "id": "b9504858b247f6de"
      },
      "id": "b9504858b247f6de",
      "type": "add",
      "after": "41ae32bafea928b7",
      "date": 1641211599238
    },
    {
      "type": "edit",
      "id": "b9504858b247f6de",
      "item": {
        "type": "paragraph",
        "id": "b9504858b247f6de",
        "text": "If until now #GToolkit might have been considered as an environment for #Pharo, we can now show how the same principles and design apply well beyond Pharo and even beyond programming."
      },
      "date": 1641211605088
    },
    {
      "item": {
        "type": "factory",
        "id": "fdd5ea8a97d882ec"
      },
      "id": "fdd5ea8a97d882ec",
      "type": "add",
      "after": "b9504858b247f6de",
      "date": 1641211610910
    },
    {
      "type": "edit",
      "id": "fdd5ea8a97d882ec",
      "item": {
        "type": "paragraph",
        "id": "fdd5ea8a97d882ec",
        "text": "Consider this example: we write a custom visualization that highlights a query over the current knowledge base, and when clicking on the result we get to continue editing. \n\nhttps://twitter.com/feenkcom/status/1405241793751441427?s=20…"
      },
      "date": 1641211618354
    },
    {
      "item": {
        "type": "factory",
        "id": "8d5d2fd0acb6f203"
      },
      "id": "8d5d2fd0acb6f203",
      "type": "add",
      "after": "fdd5ea8a97d882ec",
      "date": 1641211628020
    },
    {
      "type": "edit",
      "id": "8d5d2fd0acb6f203",
      "item": {
        "type": "paragraph",
        "id": "8d5d2fd0acb6f203",
        "text": "But, wait, there is more. Clicking on a node in the visualization spawns an editor on the page. Even though the visualization is hand crafted, it is an integral part of the environment and acts as a guide.\n\nThis is a direct consequence of #MoldableDevelopment.\n\n14/"
      },
      "date": 1641211640232
    },
    {
      "item": {
        "type": "factory",
        "id": "051eedc451b9c79b"
      },
      "id": "051eedc451b9c79b",
      "type": "add",
      "after": "8d5d2fd0acb6f203",
      "date": 1641211657042
    },
    {
      "item": {
        "type": "factory",
        "id": "fcdda7e0136b2131"
      },
      "id": "fcdda7e0136b2131",
      "type": "add",
      "after": "051eedc451b9c79b",
      "date": 1641211667415
    },
    {
      "type": "edit",
      "id": "051eedc451b9c79b",
      "item": {
        "type": "paragraph",
        "id": "051eedc451b9c79b",
        "text": "Interestingly, the size of Lepiter's implementation is comparable to that of Playground and Documenter, but it's so much more powerful. That's what we mean by a language. Lepiter is not a feature. It's a new operator that is combinable with the rest of the environment."
      },
      "date": 1641211669034
    },
    {
      "type": "edit",
      "id": "fcdda7e0136b2131",
      "item": {
        "type": "html",
        "id": "fcdda7e0136b2131",
        "text": "<center><img width=\"100%\" src=\"https://twitter.com/girba/status/1477903114267242497/photo/1\"></center>"
      },
      "date": 1641211691222
    },
    {
      "type": "edit",
      "id": "fcdda7e0136b2131",
      "item": {
        "type": "html",
        "id": "fcdda7e0136b2131",
        "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FIKRCsvXIAUXXDD?format=jpg&name=4096x4096\"></center>"
      },
      "date": 1641211717693
    },
    {
      "item": {
        "type": "factory",
        "id": "2dbd9976099688b2"
      },
      "id": "2dbd9976099688b2",
      "type": "add",
      "after": "fcdda7e0136b2131",
      "date": 1641211760660
    },
    {
      "type": "edit",
      "id": "2dbd9976099688b2",
      "item": {
        "type": "paragraph",
        "id": "2dbd9976099688b2",
        "text": "With the addition of Lepiter we get an environment in which we can treat programming, data science and note taking in the same way. The possibilties that are opened from this unification are simply exciting.\n\nhttps://twitter.com/girba/status/1465822051378384906?s=20…\n"
      },
      "date": 1641211762450
    },
    {
      "item": {
        "type": "factory",
        "id": "b9db9431020abc60"
      },
      "id": "b9db9431020abc60",
      "type": "add",
      "after": "2dbd9976099688b2",
      "date": 1641211787026
    },
    {
      "type": "edit",
      "id": "b9db9431020abc60",
      "item": {
        "type": "paragraph",
        "id": "b9db9431020abc60",
        "text": "After a year of working with Lepiter we can now safely say that it has transformed how we program, how we learn, how we document, how we communicate both on the technical level and on the business level.\n\n16/"
      },
      "date": 1641211802011
    },
    {
      "item": {
        "type": "factory",
        "id": "a5d76199b3ce0014"
      },
      "id": "a5d76199b3ce0014",
      "type": "add",
      "after": "b9db9431020abc60",
      "date": 1641211808517
    },
    {
      "type": "edit",
      "id": "a5d76199b3ce0014",
      "item": {
        "type": "paragraph",
        "id": "a5d76199b3ce0014",
        "text": "Newcomers to #GToolkit often tell us that it's unclear what the environment is. Some see a notebook. Some see a programming environment. Some see code analyses. Some see a graphical engine. And now, some people see a note taking tool.\n\nSo, which one is it? Neither and all.\n\n17/"
      },
      "date": 1641211811555
    },
    {
      "type": "edit",
      "id": "5dc582c766d79952",
      "item": {
        "type": "paragraph",
        "id": "5dc582c766d79952",
        "text": "Last year we shipped a first version of #Lepiter and it felt great to see it flying out the door:\n[https://twitter.com/feenkcom/status/1405241195887050758 tweet]\n\nLepiter is the latest significant step in our journey to making systems explainable. Here is a behind the scene peak of how we got here.\n"
      },
      "date": 1641216631361
    },
    {
      "type": "edit",
      "id": "5dc582c766d79952",
      "item": {
        "type": "paragraph",
        "id": "5dc582c766d79952",
        "text": "Last year we shipped a first version of #Lepiter and it felt great to see it flying out the door:\n[https://twitter.com/feenkcom/status/1405241195887050758 tweet]\n\n[[Lepiter]] is the latest significant step in our journey to making systems explainable. Here is a behind the scene peak of how we got here.\n"
      },
      "date": 1641216703303
    },
    {
      "item": {
        "type": "factory",
        "id": "d41082997094bfeb"
      },
      "id": "d41082997094bfeb",
      "type": "add",
      "after": "a5d76199b3ce0014",
      "date": 1641216911335
    },
    {
      "type": "edit",
      "id": "d41082997094bfeb",
      "item": {
        "type": "pagefold",
        "id": "d41082997094bfeb",
        "text": "Glamorous Toolkit"
      },
      "date": 1641216914943
    },
    {
      "id": "d41082997094bfeb",
      "type": "move",
      "order": [
        "d41082997094bfeb",
        "5dc582c766d79952",
        "839d71316760b1dd",
        "fec5e7c3c2700b83",
        "c4f7ba547fbd097e",
        "fbe4e5e2f31e05b9",
        "345d056ba4db439f",
        "a7bc37c474699b44",
        "29506bc777403be1",
        "a29ba1c27bfcd8d2",
        "066aab7aba062487",
        "aa4406777f95900f",
        "5682f26a904262c3",
        "92020465bfbaeac7",
        "41ae32bafea928b7",
        "b9504858b247f6de",
        "fdd5ea8a97d882ec",
        "8d5d2fd0acb6f203",
        "051eedc451b9c79b",
        "fcdda7e0136b2131",
        "2dbd9976099688b2",
        "b9db9431020abc60",
        "a5d76199b3ce0014"
      ],
      "date": 1641216921724
    },
    {
      "item": {
        "type": "factory",
        "id": "6be32e07a567dd9b"
      },
      "id": "6be32e07a567dd9b",
      "type": "add",
      "after": "a5d76199b3ce0014",
      "date": 1641216960519
    },
    {
      "type": "edit",
      "id": "6be32e07a567dd9b",
      "item": {
        "type": "pagefold",
        "id": "6be32e07a567dd9b",
        "text": "GNU Smalltalk"
      },
      "date": 1641216962633
    },
    {
      "item": {
        "type": "factory",
        "id": "1f5baa5d8f2cf86b"
      },
      "id": "1f5baa5d8f2cf86b",
      "type": "add",
      "after": "6be32e07a567dd9b",
      "date": 1641216968531
    },
    {
      "type": "edit",
      "id": "1f5baa5d8f2cf86b",
      "item": {
        "type": "paragraph",
        "id": "1f5baa5d8f2cf86b",
        "text": "https://github.com/dmatveev/shampoo"
      },
      "date": 1641216970840
    },
    {
      "type": "edit",
      "id": "1f5baa5d8f2cf86b",
      "item": {
        "type": "paragraph",
        "id": "1f5baa5d8f2cf86b",
        "text": "A Shampoo implementation for GNU Smalltalk [https://github.com/dmatveev/shampoo github]"
      },
      "date": 1641216993038
    },
    {
      "type": "edit",
      "id": "1f5baa5d8f2cf86b",
      "item": {
        "type": "paragraph",
        "id": "1f5baa5d8f2cf86b",
        "text": "A [[Shampoo]] implementation for GNU Smalltalk [https://github.com/dmatveev/shampoo github]"
      },
      "date": 1641217137851
    },
    {
      "id": "1f5baa5d8f2cf86b",
      "type": "remove",
      "date": 1641217169768
    },
    {
      "item": {
        "type": "factory",
        "id": "91b0ec500ea9bfa7"
      },
      "id": "91b0ec500ea9bfa7",
      "type": "add",
      "after": "6be32e07a567dd9b",
      "date": 1641217171140
    },
    {
      "type": "edit",
      "id": "91b0ec500ea9bfa7",
      "item": {
        "type": "reference",
        "id": "91b0ec500ea9bfa7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "shampoo",
        "title": "Shampoo",
        "text": "A set of tools for remote Smalltalk development with Emacs [https://revival.sh/shampoo/ site]"
      },
      "date": 1641217172562
    },
    {
      "type": "edit",
      "id": "839d71316760b1dd",
      "item": {
        "type": "paragraph",
        "id": "839d71316760b1dd",
        "text": "\nTudor Girba\n@girba\n·\n5 Std.\nAntwort an \n@girba\nOur guiding north star @feenkcom is making the inside of systems explainable. We spent a great deal of energy rethinking how we can figure systems out, and this led to #MoldableDevelopment and #GToolkit.\n \nhttps://twitter.com/girba/status/1352734434613727232?s=20…"
      },
      "date": 1641217496047
    },
    {
      "type": "edit",
      "id": "839d71316760b1dd",
      "item": {
        "type": "paragraph",
        "id": "839d71316760b1dd",
        "text": "\nOur guiding north star @feenkcom is making the inside of systems explainable. We spent a great deal of energy rethinking how we can figure systems out, and this led to #MoldableDevelopment and #GToolkit.\n \nhttps://twitter.com/girba/status/1352734434613727232?s=20…"
      },
      "date": 1641217501468
    },
    {
      "type": "edit",
      "id": "839d71316760b1dd",
      "item": {
        "type": "paragraph",
        "id": "839d71316760b1dd",
        "text": "Our guiding north star @feenkcom is making the inside of systems explainable. We spent a great deal of energy rethinking how we can figure systems out, and this led to #MoldableDevelopment and #GToolkit.\n \nhttps://twitter.com/girba/status/1352734434613727232?s=20…"
      },
      "date": 1641217508030
    },
    {
      "type": "edit",
      "id": "fbe4e5e2f31e05b9",
      "item": {
        "type": "markdown",
        "id": "fbe4e5e2f31e05b9",
        "text": "At @feenkcom, we consider narratives with and about our systems as the single most important glue. It drives everything we do and it compresses communication, too.\n\nhttps://medium.com/feenk/remote-nomeetings-noestimation-nobacklog-storytelling-d0d1b3b7a2de?source=friends_link&sk=a870e19e6c43ee8996d72d774d0a8574"
      },
      "date": 1641217575690
    },
    {
      "type": "edit",
      "id": "fbe4e5e2f31e05b9",
      "item": {
        "type": "markdown",
        "id": "fbe4e5e2f31e05b9",
        "text": "At @feenkcom, we consider narratives with and about our systems as the single most important glue. It drives everything we do and it compresses communication, too.\n\n#remote, #nomeetings, #noestimates, #nobacklog. #storytelling\nHow we work at feenk [https://medium.com/feenk/remote-nomeetings-noestimation-nobacklog-storytelling-d0d1b3b7a2de post]"
      },
      "date": 1641217614905
    },
    {
      "type": "edit",
      "id": "fbe4e5e2f31e05b9",
      "item": {
        "type": "markdown",
        "id": "fbe4e5e2f31e05b9",
        "text": "At @feenkcom, we consider narratives with and about our systems as the single most important glue. It drives everything we do and it compresses communication, too.\n\n#remote, #nomeetings, #noestimates, #nobacklog. #storytelling How we work at feenk [https://medium.com/feenk/remote-nomeetings-noestimation-nobacklog-storytelling-d0d1b3b7a2de post]"
      },
      "date": 1641217637783
    },
    {
      "item": {
        "type": "factory",
        "id": "e7380ebf688d5792"
      },
      "id": "e7380ebf688d5792",
      "type": "add",
      "after": "91b0ec500ea9bfa7",
      "date": 1641218204614
    },
    {
      "type": "edit",
      "id": "e7380ebf688d5792",
      "item": {
        "type": "pagefold",
        "id": "e7380ebf688d5792",
        "text": "~"
      },
      "date": 1641218214724
    },
    {
      "item": {
        "type": "factory",
        "id": "b7885938828a0a4a"
      },
      "id": "b7885938828a0a4a",
      "type": "add",
      "after": "e7380ebf688d5792",
      "date": 1641218216477
    },
    {
      "type": "edit",
      "id": "b7885938828a0a4a",
      "item": {
        "type": "paragraph",
        "id": "b7885938828a0a4a",
        "text": "Sea of Objects"
      },
      "date": 1641218225868
    },
    {
      "type": "edit",
      "id": "b7885938828a0a4a",
      "item": {
        "type": "paragraph",
        "id": "b7885938828a0a4a",
        "text": "[[Sea of Objects]]"
      },
      "date": 1641218256833
    },
    {
      "item": {
        "type": "factory",
        "id": "1e3886baea13b3fa"
      },
      "id": "1e3886baea13b3fa",
      "type": "add",
      "after": "b7885938828a0a4a",
      "date": 1641218320273
    },
    {
      "type": "edit",
      "id": "1e3886baea13b3fa",
      "item": {
        "type": "video",
        "id": "1e3886baea13b3fa",
        "text": "YOUTUBE N-_l3LAvENc"
      },
      "date": 1641218329493
    },
    {
      "type": "edit",
      "id": "1e3886baea13b3fa",
      "item": {
        "type": "video",
        "id": "1e3886baea13b3fa",
        "text": "YOUTUBE N-_l3LAvENc\nSmalltalk, Big Ideas and How to Escape the Island"
      },
      "date": 1641218473887
    },
    {
      "item": {
        "type": "factory",
        "id": "1f8103f06c6f2762"
      },
      "id": "1f8103f06c6f2762",
      "type": "add",
      "after": "1e3886baea13b3fa",
      "date": 1641218758568
    },
    {
      "type": "edit",
      "id": "1f8103f06c6f2762",
      "item": {
        "type": "paragraph",
        "id": "1f8103f06c6f2762",
        "text": "Unix, the world's first computer virus"
      },
      "date": 1641218781231
    },
    {
      "type": "edit",
      "id": "1f8103f06c6f2762",
      "item": {
        "type": "paragraph",
        "id": "1f8103f06c6f2762",
        "text": "Unix, the world's first computer virus https://youtu.be/N-_l3LAvENc?t=481"
      },
      "date": 1641218793607
    },
    {
      "type": "edit",
      "id": "1f8103f06c6f2762",
      "item": {
        "type": "markdown",
        "id": "1f8103f06c6f2762",
        "text": "Unix, the world's first computer virus https://youtu.be/N-_l3LAvENc?t=481"
      },
      "date": 1641218796647
    },
    {
      "type": "edit",
      "id": "1e3886baea13b3fa",
      "item": {
        "type": "video",
        "id": "1e3886baea13b3fa",
        "text": "YOUTUBE N-_l3LAvENc\n[[Stephen Kell]], Smalltalk, Big Ideas and How to Escape the Island"
      },
      "date": 1641218834942
    },
    {
      "type": "edit",
      "id": "1f8103f06c6f2762",
      "item": {
        "type": "markdown",
        "id": "1f8103f06c6f2762",
        "text": "Unix, the world's first computer virus https://youtu.be/N-_l3LAvENc?t=481\n"
      },
      "date": 1641218877122
    },
    {
      "type": "add",
      "id": "36c36ae48cac2897",
      "item": {
        "type": "markdown",
        "id": "36c36ae48cac2897",
        "text": "[[Self]] 4.0, July 1995"
      },
      "after": "1f8103f06c6f2762",
      "date": 1641218890083
    },
    {
      "item": {
        "type": "factory",
        "id": "d5e9fe07263570ac"
      },
      "id": "d5e9fe07263570ac",
      "type": "add",
      "after": "36c36ae48cac2897",
      "date": 1641218957030
    },
    {
      "type": "edit",
      "id": "d5e9fe07263570ac",
      "item": {
        "type": "paragraph",
        "id": "d5e9fe07263570ac",
        "text": "How can we 'infect' Unix-like operation systems with https://youtu.be/N-_l3LAvENc?t=635"
      },
      "date": 1641218984161
    },
    {
      "type": "edit",
      "id": "d5e9fe07263570ac",
      "item": {
        "type": "markdown",
        "id": "d5e9fe07263570ac",
        "text": "How can we 'infect' Unix-like operation systems with https://youtu.be/N-_l3LAvENc?t=635"
      },
      "date": 1641218986325
    },
    {
      "id": "b7885938828a0a4a",
      "type": "move",
      "order": [
        "d41082997094bfeb",
        "5dc582c766d79952",
        "839d71316760b1dd",
        "fec5e7c3c2700b83",
        "c4f7ba547fbd097e",
        "fbe4e5e2f31e05b9",
        "345d056ba4db439f",
        "a7bc37c474699b44",
        "29506bc777403be1",
        "a29ba1c27bfcd8d2",
        "066aab7aba062487",
        "aa4406777f95900f",
        "5682f26a904262c3",
        "92020465bfbaeac7",
        "41ae32bafea928b7",
        "b9504858b247f6de",
        "fdd5ea8a97d882ec",
        "8d5d2fd0acb6f203",
        "051eedc451b9c79b",
        "fcdda7e0136b2131",
        "2dbd9976099688b2",
        "b9db9431020abc60",
        "a5d76199b3ce0014",
        "6be32e07a567dd9b",
        "91b0ec500ea9bfa7",
        "e7380ebf688d5792",
        "1e3886baea13b3fa",
        "b7885938828a0a4a",
        "1f8103f06c6f2762",
        "36c36ae48cac2897",
        "d5e9fe07263570ac"
      ],
      "date": 1641218995232
    },
    {
      "item": {
        "type": "factory",
        "id": "250158a6c6b09b20"
      },
      "id": "250158a6c6b09b20",
      "type": "add",
      "after": "d5e9fe07263570ac",
      "date": 1641219002798
    },
    {
      "type": "edit",
      "id": "250158a6c6b09b20",
      "item": {
        "type": "markdown",
        "id": "250158a6c6b09b20",
        "text": "* fine-grained *state* ('sea of objects')"
      },
      "date": 1641219006656
    },
    {
      "type": "edit",
      "id": "250158a6c6b09b20",
      "item": {
        "type": "markdown",
        "id": "250158a6c6b09b20",
        "text": "* fine-grained *state* ('[[sea of objects]]')"
      },
      "date": 1641219016977
    },
    {
      "item": {
        "type": "factory",
        "id": "5e5ffb141bea7ae4"
      },
      "id": "5e5ffb141bea7ae4",
      "type": "add",
      "after": "250158a6c6b09b20",
      "date": 1641219129235
    },
    {
      "type": "edit",
      "id": "5e5ffb141bea7ae4",
      "item": {
        "type": "paragraph",
        "id": "5e5ffb141bea7ae4",
        "text": "T. A. Cargill, Pi: a case study in object-oriented programming. OOPSLA '86"
      },
      "date": 1641219157138
    },
    {
      "item": {
        "type": "factory",
        "id": "2b9786a71f28b22e"
      },
      "id": "2b9786a71f28b22e",
      "type": "add",
      "after": "5e5ffb141bea7ae4",
      "date": 1641219417535
    },
    {
      "type": "edit",
      "id": "2b9786a71f28b22e",
      "item": {
        "type": "paragraph",
        "id": "2b9786a71f28b22e",
        "text": "Who says there's no reflection in Unix? "
      },
      "date": 1641219435596
    },
    {
      "type": "edit",
      "id": "2b9786a71f28b22e",
      "item": {
        "type": "paragraph",
        "id": "2b9786a71f28b22e",
        "text": "Who says there's no reflection in Unix? https://youtu.be/N-_l3LAvENc?t=918"
      },
      "date": 1641219442226
    },
    {
      "type": "edit",
      "id": "2b9786a71f28b22e",
      "item": {
        "type": "markdown",
        "id": "2b9786a71f28b22e",
        "text": "Who says there's no reflection in Unix? https://youtu.be/N-_l3LAvENc?t=918"
      },
      "date": 1641219448346
    },
    {
      "item": {
        "type": "factory",
        "id": "bdcc1a2ba98cfd8b"
      },
      "id": "bdcc1a2ba98cfd8b",
      "type": "add",
      "after": "2b9786a71f28b22e",
      "date": 1641219452469
    },
    {
      "type": "edit",
      "id": "bdcc1a2ba98cfd8b",
      "item": {
        "type": "code",
        "id": "bdcc1a2ba98cfd8b",
        "text": "$ cat /proc/self/maps"
      },
      "date": 1641219465598
    },
    {
      "item": {
        "type": "factory",
        "id": "0e50aaa75442381c"
      },
      "id": "0e50aaa75442381c",
      "type": "add",
      "after": "bdcc1a2ba98cfd8b",
      "date": 1641219553030
    },
    {
      "type": "edit",
      "id": "0e50aaa75442381c",
      "item": {
        "type": "paragraph",
        "id": "0e50aaa75442381c",
        "text": "What is my address space?"
      },
      "date": 1641219563521
    },
    {
      "type": "add",
      "id": "f561f5e3d08d9882",
      "item": {
        "type": "paragraph",
        "id": "f561f5e3d08d9882",
        "text": "Evolving Unix: memory mappings as top-level allocation https://youtu.be/N-_l3LAvENc?t=987"
      },
      "after": "0e50aaa75442381c",
      "date": 1641219619603
    },
    {
      "type": "edit",
      "id": "f561f5e3d08d9882",
      "item": {
        "type": "markdown",
        "id": "f561f5e3d08d9882",
        "text": "Evolving Unix: memory mappings as top-level allocation https://youtu.be/N-_l3LAvENc?t=987"
      },
      "date": 1641219621689
    },
    {
      "item": {
        "type": "factory",
        "id": "fa982293fc3089d4"
      },
      "id": "fa982293fc3089d4",
      "type": "add",
      "after": "f561f5e3d08d9882",
      "date": 1641219919747
    },
    {
      "type": "edit",
      "id": "fa982293fc3089d4",
      "item": {
        "type": "paragraph",
        "id": "fa982293fc3089d4",
        "text": "Reifing data types at run time https://youtu.be/N-_l3LAvENc?t=1278"
      },
      "date": 1641219934840
    },
    {
      "type": "edit",
      "id": "fa982293fc3089d4",
      "item": {
        "type": "markdown",
        "id": "fa982293fc3089d4",
        "text": "Reifing data types at run time https://youtu.be/N-_l3LAvENc?t=1278"
      },
      "date": 1641219939106
    },
    {
      "item": {
        "type": "factory",
        "id": "4e2bdbf49fce1562"
      },
      "id": "4e2bdbf49fce1562",
      "type": "add",
      "after": "fa982293fc3089d4",
      "date": 1641220136184
    },
    {
      "type": "edit",
      "id": "4e2bdbf49fce1562",
      "item": {
        "type": "paragraph",
        "id": "4e2bdbf49fce1562",
        "text": "liballocs is a run-time library and toolchain extension which extends Unix-like operating systems (currently GNU/Linux) with a rich run-time reflective model."
      },
      "date": 1641220138782
    },
    {
      "type": "edit",
      "id": "4e2bdbf49fce1562",
      "item": {
        "type": "paragraph",
        "id": "4e2bdbf49fce1562",
        "text": "liballocs is a run-time library and toolchain extension which extends Unix-like operating systems (currently GNU/Linux) with a rich run-time reflective model. [https://github.com/stephenrkell/liballocs github]"
      },
      "date": 1641220150723
    },
    {
      "item": {
        "type": "factory",
        "id": "5479f5b951900ffb"
      },
      "id": "5479f5b951900ffb",
      "type": "add",
      "after": "4e2bdbf49fce1562",
      "date": 1641220509542
    },
    {
      "type": "edit",
      "id": "5479f5b951900ffb",
      "item": {
        "type": "paragraph",
        "id": "5479f5b951900ffb",
        "text": "[VMIL 19] Guillaume Bertholon and Stephen Kell. Towards seamless interfacing between dynamic languages and native code. In Proceedings of the Virtual Machines and Intermediate Languages workshop at SPLASH 2019.\nlocally deposited version abstract author's notes"
      },
      "date": 1641220514191
    },
    {
      "type": "add",
      "id": "f65bfc45a61a3f67",
      "item": {
        "type": "paragraph",
        "id": "f65bfc45a61a3f67",
        "text": "> **Abstract**. Existing approaches to interfacing high- and low-level code push considerable burdens onto the programmer, such as wrapper maintenance, explicit code generation, interface re-declaration, and/or signalling to garbage collectors. We note that run-time information on data layout and alloca- tions in native code is available, and may be extended with knowledge of object lifetimes to assist in automating garbage collection. We describe work in progress towards an exten- sion of the CPython virtual machine along these lines. We report initial experience building a first working prototype, and some early performance experiments."
      },
      "after": "5479f5b951900ffb",
      "date": 1641220612784
    },
    {
      "type": "edit",
      "id": "f65bfc45a61a3f67",
      "item": {
        "type": "markdown",
        "id": "f65bfc45a61a3f67",
        "text": "> **Abstract**. Existing approaches to interfacing high- and low-level code push considerable burdens onto the programmer, such as wrapper maintenance, explicit code generation, interface re-declaration, and/or signalling to garbage collectors. We note that run-time information on data layout and alloca- tions in native code is available, and may be extended with knowledge of object lifetimes to assist in automating garbage collection. We describe work in progress towards an exten- sion of the CPython virtual machine along these lines. We report initial experience building a first working prototype, and some early performance experiments."
      },
      "date": 1641220613665
    },
    {
      "type": "edit",
      "id": "f65bfc45a61a3f67",
      "item": {
        "type": "markdown",
        "id": "f65bfc45a61a3f67",
        "text": "> **Abstract**. Existing approaches to interfacing high- and low-level code push considerable burdens onto the programmer, such as wrapper maintenance, explicit code generation, interface re-declaration, and/or signalling to garbage collectors. We note that run-time information on data layout and allocations in native code is available, and may be extended with knowledge of object lifetimes to assist in automating garbage collection. We describe work in progress towards an exten- sion of the CPython virtual machine along these lines. We report initial experience building a first working prototype, and some early performance experiments."
      },
      "date": 1641220630725
    },
    {
      "item": {
        "type": "factory",
        "id": "f364d31083b7aba8"
      },
      "id": "f364d31083b7aba8",
      "type": "add",
      "after": "f65bfc45a61a3f67",
      "date": 1641220865438
    },
    {
      "type": "edit",
      "id": "f364d31083b7aba8",
      "item": {
        "type": "paragraph",
        "id": "f364d31083b7aba8",
        "text": "https://youtu.be/N-_l3LAvENc?t=2959"
      },
      "date": 1641220868114
    },
    {
      "type": "edit",
      "id": "f364d31083b7aba8",
      "item": {
        "type": "markdown",
        "id": "f364d31083b7aba8",
        "text": "https://youtu.be/N-_l3LAvENc?t=2959"
      },
      "date": 1641220869077
    },
    {
      "type": "edit",
      "id": "f364d31083b7aba8",
      "item": {
        "type": "markdown",
        "id": "f364d31083b7aba8",
        "text": "https://youtu.be/N-_l3LAvENc?t=2959\n"
      },
      "date": 1641220895563
    },
    {
      "item": {
        "type": "factory",
        "id": "269f3f211265ffe8"
      },
      "id": "269f3f211265ffe8",
      "type": "add",
      "after": "f364d31083b7aba8",
      "date": 1641220920214
    },
    {
      "type": "edit",
      "id": "269f3f211265ffe8",
      "item": {
        "type": "reference",
        "id": "269f3f211265ffe8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "design-principles-behind-smalltalk",
        "title": "Design Principles Behind Smalltalk",
        "text": "[http://users.ipa.net/~dwighth/smalltalk/byte_aug81/design_principles_behind_smalltalk.html users.ipa.net]"
      },
      "date": 1641220926279
    },
    {
      "item": {
        "type": "factory",
        "id": "cef5bef5edd13253"
      },
      "id": "cef5bef5edd13253",
      "type": "add",
      "after": "269f3f211265ffe8",
      "date": 1641221049077
    },
    {
      "type": "edit",
      "id": "cef5bef5edd13253",
      "item": {
        "type": "paragraph",
        "id": "cef5bef5edd13253",
        "text": "[[Eric Gade]], tribal culture"
      },
      "date": 1641221061460
    },
    {
      "item": {
        "type": "factory",
        "id": "5680c863ec54fe29"
      },
      "id": "5680c863ec54fe29",
      "type": "add",
      "after": "cef5bef5edd13253",
      "date": 1641221145772
    },
    {
      "type": "edit",
      "id": "5680c863ec54fe29",
      "item": {
        "type": "paragraph",
        "id": "5680c863ec54fe29",
        "text": "[[Boris Shingarov]]"
      },
      "date": 1641221157949
    },
    {
      "item": {
        "type": "factory",
        "id": "fdc95d0b622d366d"
      },
      "id": "fdc95d0b622d366d",
      "type": "add",
      "after": "5680c863ec54fe29",
      "date": 1641221574860
    },
    {
      "type": "edit",
      "id": "fdc95d0b622d366d",
      "item": {
        "type": "paragraph",
        "id": "fdc95d0b622d366d",
        "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]]"
      },
      "date": 1641221597135
    },
    {
      "type": "edit",
      "id": "fdc95d0b622d366d",
      "item": {
        "type": "paragraph",
        "id": "fdc95d0b622d366d",
        "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]] https://youtu.be/N-_l3LAvENc?t=3830"
      },
      "date": 1641221603887
    },
    {
      "type": "edit",
      "id": "fdc95d0b622d366d",
      "item": {
        "type": "markdown",
        "id": "fdc95d0b622d366d",
        "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]] https://youtu.be/N-_l3LAvENc?t=3830"
      },
      "date": 1641221605378
    },
    {
      "type": "edit",
      "id": "fdc95d0b622d366d",
      "item": {
        "type": "markdown",
        "id": "fdc95d0b622d366d",
        "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]] … https://youtu.be/N-_l3LAvENc?t=3830"
      },
      "date": 1641221617821
    },
    {
      "type": "edit",
      "id": "fdc95d0b622d366d",
      "item": {
        "type": "markdown",
        "id": "fdc95d0b622d366d",
        "text": "[[Reactive Design Patterns]] by [[Roland Kuhn]] … https://youtu.be/N-_l3LAvENc?t=3830 [https://www.manning.com/books/reactive-design-patterns page]"
      },
      "date": 1641221682611
    },
    {
      "item": {
        "type": "factory",
        "id": "5ab0267e87f8ade6"
      },
      "id": "5ab0267e87f8ade6",
      "type": "add",
      "after": "fdc95d0b622d366d",
      "date": 1641221798426
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "paragraph",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork"
      },
      "date": 1641221826436
    },
    {
      "item": {
        "type": "factory",
        "id": "a26dad4f6d0c9071"
      },
      "id": "a26dad4f6d0c9071",
      "type": "add",
      "after": "5ab0267e87f8ade6",
      "date": 1641221931974
    },
    {
      "type": "edit",
      "id": "a26dad4f6d0c9071",
      "item": {
        "type": "reference",
        "id": "a26dad4f6d0c9071",
        "site": "wiki.ralfbarkow.ch",
        "slug": "siliconsqueak",
        "title": "SiliconSqueak",
        "text": "https://www.meetup.com/de-DE/california-smalltalkers/events/mvzhdsycckbsb"
      },
      "date": 1641221933722
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "paragraph",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016"
      },
      "date": 1641221949002
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016"
      },
      "date": 1641221950040
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, Plan 9"
      },
      "date": 1641221990864
    },
    {
      "item": {
        "type": "factory",
        "id": "9466cef78854c4be"
      },
      "id": "9466cef78854c4be",
      "type": "add",
      "after": "a26dad4f6d0c9071",
      "date": 1641222010553
    },
    {
      "type": "edit",
      "id": "9466cef78854c4be",
      "item": {
        "type": "factory",
        "id": "9466cef78854c4be",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:95.0) Gecko/20100101 Firefox/95.0"
        }
      },
      "date": 1641222015564
    },
    {
      "type": "edit",
      "id": "9466cef78854c4be",
      "item": {
        "type": "reference",
        "id": "9466cef78854c4be",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:95.0) Gecko/20100101 Firefox/95.0"
        },
        "site": "wiki.ralfbarkow.ch",
        "slug": "unix-plan-9-and-the-lurking-smalltalk",
        "title": "Unix, Plan 9 and the Lurking Smalltalk",
        "text": "S. Kell, “Unix, Plan 9 and the Lurking Smalltalk,” in Reflections on Programming Systems: Historical and Philosophical Aspects, L. De Mol and G. Primiero, Eds. Cham: Springer International Publishing, 2018, pp. 189–213. doi: 10.1007/978-3-319-97226-8_6."
      },
      "date": 1641222019381
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, [[Plan 9]], [[Lisp Machine]]"
      },
      "date": 1641222038997
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, [[Plan 9]], [[Lisp Machine]] (cf. Spotter in "
      },
      "date": 1641222063664
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, [[Plan 9]], [[Lisp Machine]] (cf. Spotter in Glamorous Toolkit)"
      },
      "date": 1641222079976
    },
    {
      "type": "edit",
      "id": "5ab0267e87f8ade6",
      "item": {
        "type": "markdown",
        "id": "5ab0267e87f8ade6",
        "text": "Jecel Assumprcao Jr, ressource fork https://youtu.be/N-_l3LAvENc?t=4016, [[Plan 9]], [[Lisp Machine]] (cf. Spotter in Glamorous Toolkit), OMG, CORBA"
      },
      "date": 1641222213852
    },
    {
      "item": {
        "type": "factory",
        "id": "a10e5068dacb48e8"
      },
      "id": "a10e5068dacb48e8",
      "type": "add",
      "after": "9466cef78854c4be",
      "date": 1641222509561
    },
    {
      "type": "edit",
      "id": "a10e5068dacb48e8",
      "item": {
        "type": "paragraph",
        "id": "a10e5068dacb48e8",
        "text": "Boomerang"
      },
      "date": 1641222514253
    },
    {
      "type": "edit",
      "id": "a10e5068dacb48e8",
      "item": {
        "type": "paragraph",
        "id": "a10e5068dacb48e8",
        "text": "Boomerang [https://en.wikipedia.org/wiki/Boomerang_(programming_language) wikipedia]"
      },
      "date": 1641222527285
    },
    {
      "type": "edit",
      "id": "a10e5068dacb48e8",
      "item": {
        "type": "paragraph",
        "id": "a10e5068dacb48e8",
        "text": "[[Boomerang]] [https://en.wikipedia.org/wiki/Boomerang_(programming_language) wikipedia]"
      },
      "date": 1641222547408
    },
    {
      "item": {
        "type": "factory",
        "id": "2ece2591c602667b"
      },
      "id": "2ece2591c602667b",
      "type": "add",
      "after": "a10e5068dacb48e8",
      "date": 1641222742156
    },
    {
      "type": "edit",
      "id": "2ece2591c602667b",
      "item": {
        "type": "paragraph",
        "id": "2ece2591c602667b",
        "text": "https://youtu.be/N-_l3LAvENc?t=4934"
      },
      "date": 1641222745189
    },
    {
      "type": "edit",
      "id": "2ece2591c602667b",
      "item": {
        "type": "markdown",
        "id": "2ece2591c602667b",
        "text": "https://youtu.be/N-_l3LAvENc?t=4934"
      },
      "date": 1641222746121
    },
    {
      "type": "edit",
      "id": "2ece2591c602667b",
      "item": {
        "type": "markdown",
        "id": "2ece2591c602667b",
        "text": "[[Boris Shingarov]] https://youtu.be/N-_l3LAvENc?t=4934"
      },
      "date": 1641222756696
    },
    {
      "item": {
        "type": "factory",
        "id": "5541d32f6efb58e3"
      },
      "id": "5541d32f6efb58e3",
      "type": "add",
      "after": "2ece2591c602667b",
      "date": 1641231076907
    },
    {
      "type": "edit",
      "id": "5541d32f6efb58e3",
      "item": {
        "type": "pagefold",
        "id": "5541d32f6efb58e3",
        "text": "Leo"
      },
      "date": 1641231081228
    },
    {
      "item": {
        "type": "factory",
        "id": "073986504e42de3f"
      },
      "id": "073986504e42de3f",
      "type": "add",
      "after": "5541d32f6efb58e3",
      "date": 1641231083387
    },
    {
      "type": "edit",
      "id": "073986504e42de3f",
      "item": {
        "type": "paragraph",
        "id": "073986504e42de3f",
        "text": "[[Leo]]"
      },
      "date": 1641231090997
    },
    {
      "type": "add",
      "id": "49e0cf5fb6efdfc7",
      "item": {
        "type": "paragraph",
        "id": "49e0cf5fb6efdfc7",
        "text": "Konrad Hinsen — heute um 15:39 Uhr\nAnother system with snippet-level transclusion is Leo (https://leoeditor.com/), which uses it to good effect for code snippets (code reuse by transclusion). But that also raises new challenges: if a Pharo snippet can live in multiple pages, what does thisPage refer to?"
      },
      "after": "073986504e42de3f",
      "date": 1641231097824
    },
    {
      "type": "edit",
      "id": "49e0cf5fb6efdfc7",
      "item": {
        "type": "paragraph",
        "id": "49e0cf5fb6efdfc7",
        "text": "[[Konrad Hinsen]] via [discord]\nAnother system with snippet-level transclusion is Leo (https://leoeditor.com/), which uses it to good effect for code snippets (code reuse by transclusion). But that also raises new challenges: if a Pharo snippet can live in multiple pages, what does thisPage refer to?"
      },
      "date": 1641231126044
    },
    {
      "type": "edit",
      "id": "49e0cf5fb6efdfc7",
      "item": {
        "type": "paragraph",
        "id": "49e0cf5fb6efdfc7",
        "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/729445215341117522/927571939713757224 discord]\nAnother system with snippet-level transclusion is Leo (https://leoeditor.com/), which uses it to good effect for code snippets (code reuse by transclusion). But that also raises new challenges: if a Pharo snippet can live in multiple pages, what does thisPage refer to?"
      },
      "date": 1641231139084
    },
    {
      "id": "49e0cf5fb6efdfc7",
      "type": "remove",
      "date": 1641231141157
    },
    {
      "item": {
        "type": "factory",
        "id": "51503d56e120b5d7"
      },
      "id": "51503d56e120b5d7",
      "type": "add",
      "after": "073986504e42de3f",
      "date": 1641231143294
    },
    {
      "type": "edit",
      "id": "51503d56e120b5d7",
      "item": {
        "type": "reference",
        "id": "51503d56e120b5d7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "leo",
        "title": "Leo",
        "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/729445215341117522/927571939713757224 discord]"
      },
      "date": 1641231144775
    },
    {
      "type": "remove",
      "id": "073986504e42de3f",
      "date": 1641231148109
    },
    {
      "item": {
        "type": "factory",
        "id": "f7f79cc78e3b1622"
      },
      "id": "f7f79cc78e3b1622",
      "type": "add",
      "after": "51503d56e120b5d7",
      "date": 1641232653667
    },
    {
      "type": "edit",
      "id": "f7f79cc78e3b1622",
      "item": {
        "type": "paragraph",
        "id": "f7f79cc78e3b1622",
        "text": "gt"
      },
      "date": 1641232657196
    },
    {
      "item": {
        "type": "factory",
        "id": "56b78ade92de0c03"
      },
      "id": "56b78ade92de0c03",
      "type": "add",
      "after": "f7f79cc78e3b1622",
      "date": 1641232665587
    },
    {
      "type": "remove",
      "id": "f7f79cc78e3b1622",
      "date": 1641232667864
    },
    {
      "type": "edit",
      "id": "56b78ade92de0c03",
      "item": {
        "type": "pagefold",
        "id": "56b78ade92de0c03",
        "text": "gt"
      },
      "date": 1641232669276
    },
    {
      "item": {
        "type": "factory",
        "id": "9db8c90d6ab6a8f1"
      },
      "id": "9db8c90d6ab6a8f1",
      "type": "add",
      "after": "56b78ade92de0c03",
      "date": 1641232671300
    },
    {
      "type": "edit",
      "id": "9db8c90d6ab6a8f1",
      "item": {
        "type": "paragraph",
        "id": "9db8c90d6ab6a8f1",
        "text": "[[Ward]] via [matrix]"
      },
      "date": 1641232685814
    },
    {
      "type": "add",
      "id": "aa15bdfbf17e43b3",
      "item": {
        "type": "paragraph",
        "id": "aa15bdfbf17e43b3",
        "text": "> Was I expecting something to happen? Or is this where I start debugging?"
      },
      "after": "9db8c90d6ab6a8f1",
      "date": 1641232694042
    },
    {
      "type": "edit",
      "id": "aa15bdfbf17e43b3",
      "item": {
        "type": "markdown",
        "id": "aa15bdfbf17e43b3",
        "text": "> Was I expecting something to happen? Or is this where I start debugging?"
      },
      "date": 1641232694990
    },
    {
      "type": "edit",
      "id": "9db8c90d6ab6a8f1",
      "item": {
        "type": "paragraph",
        "id": "9db8c90d6ab6a8f1",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16412311871055836EzadH:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]"
      },
      "date": 1641232708922
    },
    {
      "item": {
        "type": "factory",
        "id": "27a6508ea985c6a1"
      },
      "id": "27a6508ea985c6a1",
      "type": "add",
      "after": "aa15bdfbf17e43b3",
      "date": 1641232716897
    },
    {
      "type": "edit",
      "id": "27a6508ea985c6a1",
      "item": {
        "type": "html",
        "id": "27a6508ea985c6a1",
        "text": "<center><img width=\"100%\" src=\"https://dreyeck.freedombox.rocks/_matrix/media/r0/download/matrix.org/kdOAXghbVrgaRZGBNJtVYuSJ\"></center>"
      },
      "date": 1641232735534
    },
    {
      "item": {
        "type": "factory",
        "id": "a049c2e113e6861b"
      },
      "id": "a049c2e113e6861b",
      "type": "add",
      "after": "27a6508ea985c6a1",
      "date": 1641234514964
    },
    {
      "type": "edit",
      "id": "a049c2e113e6861b",
      "item": {
        "type": "paragraph",
        "id": "a049c2e113e6861b",
        "text": "[[Ward]] wrote Biota in Digitalk Smalltalk in 1990. Ian Osgood translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop.\nhttp://code.fed.wiki.org/biota-flagellum.html"
      },
      "date": 1641234528197
    },
    {
      "type": "edit",
      "id": "a049c2e113e6861b",
      "item": {
        "type": "paragraph",
        "id": "a049c2e113e6861b",
        "text": "[[Ward]] wrote [[Biota]] in Digitalk Smalltalk in 1990. Ian Osgood translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop.\nhttp://code.fed.wiki.org/biota-flagellum.html"
      },
      "date": 1641234537597
    },
    {
      "type": "edit",
      "id": "a049c2e113e6861b",
      "item": {
        "type": "paragraph",
        "id": "a049c2e113e6861b",
        "text": "[[Ward]] wrote [[Biota]] in Digitalk Smalltalk in 1990. [[Ian Osgood]] translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop.\nhttp://code.fed.wiki.org/biota-flagellum.html"
      },
      "date": 1641234548299
    },
    {
      "item": {
        "type": "factory",
        "id": "f739f14f7e574dec"
      },
      "id": "f739f14f7e574dec",
      "type": "add",
      "after": "a049c2e113e6861b",
      "date": 1641234579288
    },
    {
      "type": "edit",
      "id": "f739f14f7e574dec",
      "item": {
        "type": "reference",
        "id": "f739f14f7e574dec",
        "site": "code.fed.wiki.org",
        "slug": "biota-flagellum",
        "title": "Biota Flagellum",
        "text": "The Flagellum was our best [[Biota]] program ever. Here we have slimmed down Ian Osgood's javascript implementation to show this one program running."
      },
      "date": 1641234581955
    },
    {
      "type": "edit",
      "id": "a049c2e113e6861b",
      "item": {
        "type": "paragraph",
        "id": "a049c2e113e6861b",
        "text": "[[Ward]] wrote [[Biota]] in Digitalk Smalltalk in 1990. [[Ian Osgood]] translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop.\n"
      },
      "date": 1641234585077
    },
    {
      "type": "edit",
      "id": "a049c2e113e6861b",
      "item": {
        "type": "paragraph",
        "id": "a049c2e113e6861b",
        "text": "[[Ward]] wrote [[Biota]] in Digitalk Smalltalk in 1990. [[Ian Osgood]] translated it to Javascript in 2005. I squeezed Ian's version into a narrow federated wiki page last week. Now trying to get it going in GT to close the loop. [https://discord.com/channels/729445214812504107/735947900651175998/927625416376733726 discord]\n"
      },
      "date": 1641234644648
    }
  ]
}