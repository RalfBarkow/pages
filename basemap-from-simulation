{
  "title": "Basemap from Simulation",
  "story": [
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "We extract a basemap from recent work and render it copying source from an earlier version. [http://simnet.ward.asia.wiki.org/assets/pages/table-top-augmented-reality/graph.html script] [https://github.com/joshuabenuck/tilt5-experiments/blob/master/js/diagram.js github]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nlet bricks = []\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    bricks.push(dot)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) {be(.5);be(.7)}\n}\n"
    },
    {
      "type": "code",
      "id": "190e91bdfb4904ca",
      "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) => {\n  mouse.x = event.clientX/window.innerWidth*2-1\n  mouse.y = -(event.clientY/window.innerHeight)*2+1 \n})"
    },
    {
      "type": "code",
      "id": "6deccf84afb5ed4c",
      "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.opacity = 1}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.opacity = 0.5 }}\n}"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?basemap-from-simulation\nHEIGHT 400"
    },
    {
      "type": "paragraph",
      "id": "edb448dbd1636cb3",
      "text": "Examples of transparent materials. [https://threejsfundamentals.org/threejs/lessons/threejs-transparency.html fundamentals]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Basemap from Simulation",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "Explain what this does."
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "// Code that does it.\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1613514147899
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613514382326
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n})\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613514548979
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n  let material = THREE.MeshBasicMaterial({\n    map: texture,\n    side: THREE.DoubleSide,\n    transparent: true,\n    opacity: 0.5 },\n    )\n})\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613514733470
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n  let material = THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n})\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613514814338
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.width / 200, texture.height / 200)\n})\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613514941319
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.width / 200, texture.height / 200)\n\n})\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\n\n\n"
      },
      "date": 1613515009991
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg',(texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.width / 200, texture.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515036742
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?basemap-from-simulation\nHEIGHT 400"
      },
      "date": 1613515074671
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.width / 200, texture.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515398117
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 200, \n      texture.image.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515538096
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 0.5 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 200, \n      texture.image.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515575754
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide,\n    transparent: true, opacity: 1 })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 200, \n      texture.image.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515623341
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 200, \n      texture.image.height / 200)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515739033
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width, \n      texture.image.height)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515804641
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515836014
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  // console.log(texture)\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515857409
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613515927477
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background(texture)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516160480
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background = texture\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516193551
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background = new THREE.Color( 0xeeeeee )\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516272776
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background = new THREE.Color( 0xF8F8F8 )\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516344371
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background = new THREE.Color( 0xDDDDDD )\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516365229
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.background = new THREE.Color( 'white' )\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516564959
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let box = new THREE.Mesh(geometry, material)\n  scene.add(box)\n})\n\n\n"
      },
      "date": 1613516680712
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "we extract a basemap from "
      },
      "date": 1613516943290
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "We extract a basemap from recent work and render it copying source from an earlier version. [[http://simnet.ward.asia.wiki.org/assets/pages/table-top-augmented-reality/graph.html script]"
      },
      "date": 1613517163509
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "We extract a basemap from recent work and render it copying source from an earlier version. [http://simnet.ward.asia.wiki.org/assets/pages/table-top-augmented-reality/graph.html script]"
      },
      "date": 1613517179988
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "We extract a basemap from recent work and render it copying source from an earlier version. [http://simnet.ward.asia.wiki.org/assets/pages/table-top-augmented-reality/graph.html script] [https://github.com/joshuabenuck/tilt5-experiments/blob/master/js/diagram.js github]"
      },
      "date": 1613517230762
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let graph = new THREE.Mesh(geometry, material)\n  scene.add(graph)\n})\n\n\n"
      },
      "date": 1613517311456
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\n\n"
      },
      "date": 1613517334742
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})"
      },
      "date": 1613517355455
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let nodes = {\"backend\":[130,-18],\"db\":[234,-72],\"source\":[27,-18],\"user\":[27,-99],\"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nscene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})"
      },
      "date": 1614271222389
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nscene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})"
      },
      "date": 1614271264460
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n"
      },
      "date": 1614272492561
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.03)\n  let mat = new THREE.MeshNormalMaterial()\n}\n\n"
      },
      "date": 1614272854381
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.03)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(...nodes['db'], -.1)\n  dot.position.copy(p.scale(.01)\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273086838
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.03)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(...nodes['db'], -.1)\n  dot.position.copy(p.scale(.01))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273101686
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.03)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(...nodes['db'], -.1)\n  dot.position.copy(p.multiplyScalar(.01))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273252456
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.3)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, -.1)\n  dot.position.copy(p.multiplyScalar(.01))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273292258
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.3)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, -.5)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273428702
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.3)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273460666
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273493251
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 10, \n      texture.image.height / 10)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273637305
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273655529
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,2)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273734609
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .3)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273753874
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(0, 0, .2)\n  dot.position.copy(p.multiplyScalar(1))\n  scene.add(dot)\n}\n\n"
      },
      "date": 1614273800075
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let pro = xy => [xy[0]/100, 0]\n  let p = new THREE.Vector3(...pro(nodes['db'], .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614274131732
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let pro = xy => [xy[0]/100, 0]\n  let p = new THREE.Vector3(...pro(nodes['db']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614274163667
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, 0]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614274669222
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614274698706
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n  console.log({scene})\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614274759585
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n  console.log(texture.image.width,texture.image.height)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275090297
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n  console.log(texture.image.width,texture.image.height)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275134111
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [xy[0]/100, xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275194106
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['user']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275359389
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    xy[1]/100]\n  let p = new THREE.Vector3(...at(nodes['db']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275379174
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['db']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275449365
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (dim[1]-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['db']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275508497
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['db']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275613723
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [359, 203]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['backend']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275639049
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['backend']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275734405
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n{\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes['source']), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614275764631
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\nfor (let n of nodes) {\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614276171157
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\nfor (let n in nodes) {\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614276187783
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .2)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614276217675
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .15)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614276307924
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.IcosahedronGeometry(.1,1)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614276344091
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.3,.2,.0.5)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614884789961
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.3,.2,.5)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614884858333
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.3,.2,.05)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614884942713
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.05)\n  let mat = new THREE.MeshNormalMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614884992461
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.05)\n  let mat = new THREE.MeshStandardMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885080444
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.05)\n  let mat = new THREE.MeshStandardMaterial()\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885139440
    },
    {
      "item": {
        "type": "factory",
        "id": "edb448dbd1636cb3"
      },
      "id": "edb448dbd1636cb3",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1614885313990
    },
    {
      "type": "edit",
      "id": "edb448dbd1636cb3",
      "item": {
        "type": "paragraph",
        "id": "edb448dbd1636cb3",
        "text": "Examples of transparent materials. [https://threejsfundamentals.org/threejs/lessons/threejs-transparency.html fundamentals]"
      },
      "date": 1614885346701
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.05)\n  let mat = new THREE.MeshPhongMaterial({\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885685647
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.05)\n  let mat = new THREE.MeshPhongMaterial({\n      color:'pink',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885750432
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshPhongMaterial({\n      color:'pink',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885777283
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'pink',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885823377
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\n//scene.add(new THREE.AmbientLight(0xffffff, 0.6))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'pink',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885841640
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, 1))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'pink',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885867801
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'blue',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885900948
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'cyan',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885928102
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'gold',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885972968
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let dot = new THREE.Mesh(geo, mat)\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614885997820
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n\n  let dot = new THREE.Mesh(geo, mat)\n  let p = new THREE.Vector3(...at(nodes[n]), .3)\n  dot.position.copy(p)\n  scene.add(dot)\n}\n"
      },
      "date": 1614886201806
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n  }\n  be(.3)\n  be(.6)\n  scene.add(dot)\n}\n"
      },
      "date": 1614886391396
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  be(.6)\n}\n"
      },
      "date": 1614886426205
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(Math.random()>.5) be(.5)\n}\n"
      },
      "date": 1614886473111
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(Math.random() < .2) be(.5)\n}\n"
      },
      "date": 1614886503659
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(Math.random() < .1) be(.5)\n}\n"
      },
      "date": 1614886525025
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(Math.random() < .15) be(.5)\n}\n"
      },
      "date": 1614886550630
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n}\n"
      },
      "date": 1614886718067
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) { be(.5); be(.7) }\n}\n"
      },
      "date": 1614886782682
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) {be(.5);be(.7)}\n}\n"
      },
      "date": 1614886797484
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'cyan',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) {be(.5);be(.7)}\n}\n"
      },
      "date": 1614888886495
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) {be(.5);be(.7)}\n}\n"
      },
      "date": 1614906933916
    },
    {
      "item": {
        "type": "factory",
        "id": "190e91bdfb4904ca"
      },
      "id": "190e91bdfb4904ca",
      "type": "add",
      "after": "edb448dbd1636cb3",
      "date": 1615436024256
    },
    {
      "type": "edit",
      "id": "190e91bdfb4904ca",
      "item": {
        "type": "code",
        "id": "190e91bdfb4904ca",
        "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) =>\n{\n    mouse.x = event.clientX / sizes.width * 2 - 1\n    mouse.y = - (event.clientY / sizes.height) * 2 + 1\n\n    console.log(mouse)\n})"
      },
      "date": 1615436062442
    },
    {
      "id": "190e91bdfb4904ca",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "190e91bdfb4904ca",
        "6cf52409eec3988c",
        "edb448dbd1636cb3"
      ],
      "date": 1615436065030
    },
    {
      "type": "edit",
      "id": "190e91bdfb4904ca",
      "item": {
        "type": "code",
        "id": "190e91bdfb4904ca",
        "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) =>\n{\n    mouse.x = event.clientX / window.innerWidth * 2 - 1\n    mouse.y = - (event.clientY / window.innerHeightt) * 2 + 1\n\n    console.log(mouse)\n})"
      },
      "date": 1615436303573
    },
    {
      "type": "edit",
      "id": "190e91bdfb4904ca",
      "item": {
        "type": "code",
        "id": "190e91bdfb4904ca",
        "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) => {\n  mouse.x = event.clientX/window.innerWidth*2-1\n  mouse.y = -(event.clientY/window.innerHeight)*2+ \n  console.log(mouse)})"
      },
      "date": 1615436458001
    },
    {
      "type": "edit",
      "id": "190e91bdfb4904ca",
      "item": {
        "type": "code",
        "id": "190e91bdfb4904ca",
        "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) => {\n  mouse.x = event.clientX/window.innerWidth*2-1\n  mouse.y = -(event.clientY/window.innerHeight)*2+1 \n  console.log(mouse)})"
      },
      "date": 1615436507206
    },
    {
      "item": {
        "type": "factory",
        "id": "6deccf84afb5ed4c"
      },
      "id": "6deccf84afb5ed4c",
      "type": "add",
      "after": "edb448dbd1636cb3",
      "date": 1615436608672
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()"
      },
      "date": 1615436617765
    },
    {
      "id": "6deccf84afb5ed4c",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "190e91bdfb4904ca",
        "6deccf84afb5ed4c",
        "6cf52409eec3988c",
        "edb448dbd1636cb3"
      ],
      "date": 1615436622339
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n\n    const objectsToTest = [object1, object2, object3]\n    const intersects = raycaster.intersectObjects(objectsToTest)\n\n    for(const intersect of intersects)\n    {\n        intersect.object.material.color.set('#0000ff')\n    }\n\n    for(const object of objectsToTest)\n    {\n        if(!intersects.find(intersect => intersect.object === object))\n        {\n            object.material.color.set('#ff0000')\n        }\n    }\n\n    // ...\n}"
      },
      "date": 1615436886661
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "scene.background = new THREE.Color('white')\nscene.add(new THREE.AmbientLight(0xffffff, .7))\n\nlet loader = new THREE.TextureLoader()\nloader.load('./basemap.svg', texture => {\n  let material = new THREE.MeshBasicMaterial({\n    map: texture, side: THREE.DoubleSide })\n  let geometry = new THREE.PlaneGeometry(\n      texture.image.width / 100, \n      texture.image.height / 100)\n  let basemap = new THREE.Mesh(geometry, material)\n  scene.add(basemap)\n})\n\nlet nodes = {\n  \"backend\":[130,-18],\"db\":[234,-72],\n  \"source\":[27,-18],\"user\":[27,-99],\n  \"webserver1\":[130,-126],\"webserver2\":[130,-72]}\nlet dim = [269, 152]\n\nlet bricks = []\nfor (let n in nodes) {\n  let geo = new THREE.CubeGeometry(.5,.3,.1)\n  let mat = new THREE.MeshStandardMaterial({\n      color:'bisque',\n      opacity: 0.5,\n      transparent: true,\n    })\n  let at = xy => [\n    (xy[0]-dim[0]/2)/100,\n    (-xy[1]-dim[1]/2)/100]\n  let be = h => {\n    let dot = new THREE.Mesh(geo, mat)\n    let p = new THREE.Vector3(...at(nodes[n]), h)\n    dot.position.copy(p)\n    bricks.push(dot)\n    scene.add(dot)\n  }\n  be(.3)\n  if(['backend','db'].includes(n)) be(.5)\n  if(['user','source'].includes(n)) {be(.5);be(.7)}\n}\n"
      },
      "date": 1615437108600
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        object.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437362214
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => { return\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        object.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437407628
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  console.log(hits); return\n  for(const hit of hits) {\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        object.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437451887
    },
    {
      "type": "edit",
      "id": "190e91bdfb4904ca",
      "item": {
        "type": "code",
        "id": "190e91bdfb4904ca",
        "text": "const mouse = new THREE.Vector2()\nwindow.addEventListener('mousemove', (event) => {\n  mouse.x = event.clientX/window.innerWidth*2-1\n  mouse.y = -(event.clientY/window.innerHeight)*2+1 \n})"
      },
      "date": 1615437488098
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    console.log(hit); return\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        object.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437559139
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    console.log(hit); return\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437632498
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.color.set('#0000ff')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.color.set('#ff0000') }}\n}"
      },
      "date": 1615437671283
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.color.set('bisque')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.color.set('gold') }}\n}"
      },
      "date": 1615437785496
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.color.set('gold')}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.color.set('bisque') }}\n}"
      },
      "date": 1615437903010
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.opacity:1}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.opacity:0.5) }}\n}"
      },
      "date": 1615438045436
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.opacity = 1}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.opacity = 0.5) }}\n}"
      },
      "date": 1615438085833
    },
    {
      "type": "edit",
      "id": "6deccf84afb5ed4c",
      "item": {
        "type": "code",
        "id": "6deccf84afb5ed4c",
        "text": "const ray = new THREE.Raycaster()\ntick = () => {\n  ray.setFromCamera(mouse, camera)\n  const hits = ray.intersectObjects(bricks)\n  for(const hit of hits) {\n    hit.object.material.opacity = 1}\n    for(const brick of bricks) {\n      if(!hits.find(hit => hit.object === brick)) {\n        brick.material.opacity = 0.5 }}\n}"
      },
      "date": 1615438119829
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233583237
    }
  ]
}