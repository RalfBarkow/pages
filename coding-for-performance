{
  "title": "Coding for Performance",
  "story": [
    {
      "type": "paragraph",
      "id": "298cb75458143643",
      "text": "There is a shift in mindset required when making software right is not enough. Sure, make it right before fast, but know what it is like to make fast software because it is another set of skills. These five laws guide writing software that has to perform at scale. [http://tagide.com/blog/advice/laws-of-peformant-software/ post]"
    },
    {
      "type": "paragraph",
      "id": "7da951908f32e284",
      "text": "Be cautious of high level features of high level languages. Learn when you benefit from coding to the primitives that are probably well optimized in every language."
    },
    {
      "type": "paragraph",
      "id": "1edc8344fc7d7dae",
      "text": "A language that can make your logic beautiful can probably make your optimizations beautiful too. Admit that performance is part of what you do."
    },
    {
      "type": "paragraph",
      "id": "f588fbe5f83cf655",
      "text": "Don't let your program slow down when it has too much work to do. Place a limit on everything and behave well when that limit is exceeded."
    },
    {
      "type": "paragraph",
      "id": "ed4e18ed1f48a4ff",
      "text": "Model and measure the critical algorithms and data structures. Know when they exceed linear behavior and stay clear of those regions."
    },
    {
      "type": "paragraph",
      "id": "36aa3bb7fa2bac4d",
      "text": "Don't hide problems by scaling out into today's excess capacity. Capacity will be in short supply tomorrow as will be the mental cycles to address problems left unattended"
    },
    {
      "type": "paragraph",
      "id": "87aa7d5758edc5f6",
      "text": "See also [[Reliable Software]] for NASA/JPL ten rules for safety critical code. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Coding for Performance",
        "story": []
      },
      "date": 1474373732689
    },
    {
      "item": {
        "type": "factory",
        "id": "298cb75458143643"
      },
      "id": "298cb75458143643",
      "type": "add",
      "date": 1474373869981
    },
    {
      "type": "edit",
      "id": "298cb75458143643",
      "item": {
        "type": "paragraph",
        "id": "298cb75458143643",
        "text": "There is a shift in mindset required when making software right is not enough. Sure, make it right before fast, but know what it is like to make fast software because it is another set of skills. "
      },
      "date": 1474374105096
    },
    {
      "type": "add",
      "id": "89f536e869a005ab",
      "item": {
        "type": "paragraph",
        "id": "89f536e869a005ab",
        "text": "Five laws that guide coding software that has to perform at scale. [http://tagide.com/blog/advice/laws-of-peformant-software/ post]"
      },
      "after": "298cb75458143643",
      "date": 1474374203694
    },
    {
      "type": "edit",
      "id": "89f536e869a005ab",
      "item": {
        "type": "paragraph",
        "id": "89f536e869a005ab",
        "text": "Five laws that guide writing software that has to perform at scale. [http://tagide.com/blog/advice/laws-of-peformant-software/ post]"
      },
      "date": 1474374217419
    },
    {
      "type": "move",
      "order": [
        "89f536e869a005ab",
        "298cb75458143643"
      ],
      "id": "89f536e869a005ab",
      "date": 1474374220798
    },
    {
      "type": "move",
      "order": [
        "298cb75458143643",
        "89f536e869a005ab"
      ],
      "id": "298cb75458143643",
      "date": 1474374264556
    },
    {
      "type": "remove",
      "id": "89f536e869a005ab",
      "date": 1474374273976
    },
    {
      "type": "edit",
      "id": "298cb75458143643",
      "item": {
        "type": "paragraph",
        "id": "298cb75458143643",
        "text": "There is a shift in mindset required when making software right is not enough. Sure, make it right before fast, but know what it is like to make fast software because it is another set of skills. These five laws guide writing software that has to perform at scale. [http://tagide.com/blog/advice/laws-of-peformant-software/ post]"
      },
      "date": 1474374314549
    },
    {
      "type": "add",
      "id": "7da951908f32e284",
      "item": {
        "type": "paragraph",
        "id": "7da951908f32e284",
        "text": "Be cautious of high level features of high level languages. Learn when you benefit from coding to the primitives that are probably well optimized in every language."
      },
      "after": "298cb75458143643",
      "date": 1474374619823
    },
    {
      "type": "add",
      "id": "1edc8344fc7d7dae",
      "item": {
        "type": "paragraph",
        "id": "1edc8344fc7d7dae",
        "text": "A language that can make your logic beautiful can probably make your optimizations beautiful too. Admit that performance is part of what you do."
      },
      "after": "7da951908f32e284",
      "date": 1474374812308
    },
    {
      "type": "add",
      "id": "f588fbe5f83cf655",
      "item": {
        "type": "paragraph",
        "id": "f588fbe5f83cf655",
        "text": "Don't let your program slow down when it has too much work to do. Place a limit on everything and behave well when that limit is exceeded."
      },
      "after": "1edc8344fc7d7dae",
      "date": 1474375007088
    },
    {
      "type": "add",
      "id": "ed4e18ed1f48a4ff",
      "item": {
        "type": "paragraph",
        "id": "ed4e18ed1f48a4ff",
        "text": "Model and measure the critical algorithms and data structures. Know when they exceed linear behavior and stay clear of those regions."
      },
      "after": "f588fbe5f83cf655",
      "date": 1474375221382
    },
    {
      "type": "add",
      "id": "36aa3bb7fa2bac4d",
      "item": {
        "type": "paragraph",
        "id": "36aa3bb7fa2bac4d",
        "text": "Don't hide problems by scaling out into today's excess capacity. Capacity will be in short supply tomorrow and mental cycles to address basic problems will be in short supply too."
      },
      "after": "ed4e18ed1f48a4ff",
      "date": 1474375501371
    },
    {
      "type": "edit",
      "id": "36aa3bb7fa2bac4d",
      "item": {
        "type": "paragraph",
        "id": "36aa3bb7fa2bac4d",
        "text": "Don't hide problems by scaling out into today's excess capacity. Capacity will be in short supply tomorrow as will be the mental cycles to address problems left unattended"
      },
      "date": 1474375563098
    },
    {
      "type": "add",
      "id": "87aa7d5758edc5f6",
      "item": {
        "type": "paragraph",
        "id": "87aa7d5758edc5f6",
        "text": "See also [[Reliable Software]] for NASA/JPL ten rules for safety critical code. "
      },
      "after": "36aa3bb7fa2bac4d",
      "date": 1474375777029
    },
    {
      "type": "fork",
      "site": "ward.bay.wiki.org",
      "date": 1708092495278
    }
  ]
}