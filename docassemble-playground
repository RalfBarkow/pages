{
  "title": "DocAssemble Playground",
  "story": [
    {
      "type": "paragraph",
      "id": "ebeff1ae60ca98ac",
      "text": "[[Docassemble]] – A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. [https://docassemble.org/ site]"
    },
    {
      "type": "markdown",
      "id": "41d81a3b9d4a1b9a",
      "text": "# Notes on Teaching Moldable Development"
    },
    {
      "type": "paragraph",
      "id": "8e8777dfed56f2a2",
      "text": "Alberto aka botwhytho via [https://discord.com/channels/729445214812504107/1179913149441396856/1179913152712937582 discord] Had a session last week, some notes below:"
    },
    {
      "type": "markdown",
      "id": "847aa4d8ed764313",
      "text": "* Went through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\n* Covered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\n* Talked about potential topics for a 'group project' and this is when things started getting interesting"
    },
    {
      "type": "paragraph",
      "id": "5d3004619b14d668",
      "text": "Had a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc."
    },
    {
      "type": "paragraph",
      "id": "d153ab656cd1349f",
      "text": "A big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML"
    },
    {
      "type": "video",
      "id": "2a7c5656eb9da483",
      "text": "START 3774\nSTOP 3975\nYOUTUBE 90WbS30lo1Q\nDocAssemble Playground"
    },
    {
      "type": "paragraph",
      "id": "79cbb2936029de8e",
      "text": "Alberto aka botwhytho — 30.11.2023 23:41 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179915025117364305 discord]\nIn the first session me and the other participants got a bit more context on the project, YAML file formats, etc. That was enough for a first custom view: summarize a wall of YAML into different logical sections\nFrom those sections, today we worked on getting data into the 'correct' format to do a dependency graph of yaml file 'includes' (which are a thing in that project and could be relative paths or on another project/server).\nThis leaves us in a great place to build a Mondrian view in the next pairing session as well as a custom search per repo to only search yaml files in a specific way\nAs opposed to previous sessions,on Tuesday and today i was NOT driving, only facilitating, while the driver knew enough about Gt where they weren't extremely slow, enough so that we could make progress in ~90 minute sessions. Finally, the other user was the domain expert on DocAssemble."
    },
    {
      "type": "paragraph",
      "id": "617be69730bae55c",
      "text": "Think everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation."
    },
    {
      "type": "paragraph",
      "id": "71b37afbb5056056",
      "text": "botwhytho — 30.11.2023 23:48\nWith ~2-4 additional pairing sessions I do think we will have rather useful tools for the user that really cares about this project as they're volunteering with an organization that heavily uses this \nDone with my rant for now but will update next week. Should have enough learnings to turn this into a proper blog post in the next couple of weeks."
    },
    {
      "type": "pagefold",
      "id": "cc5bff3137fb4b2f",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "181621e4b9e5f110",
      "site": "jeff.dojo.fed.wiki",
      "slug": "transcriber-notes-2023-12-03",
      "title": "Transcriber Notes 2023-12-03",
      "text": "A review of some of Jeff's work at the Recurse Center, including a couple of image compositing programs, plus a demonstration of the Moldable Development approach to explore the Docassemble UI scripting framework for helping people file legal papers online by collecting necessary information in a structured way (e.g. for requesting a protective restraining order)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "DocAssemble Playground",
        "story": []
      },
      "date": 1702810998005
    },
    {
      "id": "5661134e5772b1cb",
      "type": "add",
      "item": {
        "type": "video",
        "id": "5661134e5772b1cb",
        "text": "START 3925\nYOUTUBE 90WbS30lo1Q\nDocAssemble Playground"
      },
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702811005439
    },
    {
      "id": "41d81a3b9d4a1b9a",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "41d81a3b9d4a1b9a",
        "text": "# Notes on Teaching Moldable Development"
      },
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702811025104
    },
    {
      "id": "8e8777dfed56f2a2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8e8777dfed56f2a2",
        "text": "botwhytho — 30.11.2023 23:33 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179913152712937582 discord]\nStarting a thread in this channel which seems more appropriate than in ⁠off-topic . Original messages are in responses, starting around here\nHad a session last week, some notes below:\nWent through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\nCovered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\nTalked about potential topics for a 'group project' and this is when things started getting interesting\nHad a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc.\nDocassemble\nDocassemble\nA free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown.\nBild\nA big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML."
      },
      "after": "41d81a3b9d4a1b9a",
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702811028310
    },
    {
      "id": "5d3004619b14d668",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5d3004619b14d668",
        "text": "Alberto aka botwhytho — 30.11.2023 23:41 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179915025117364305 discord]\nIn the first session me and the other participants got a bit more context on the project, YAML file formats, etc. That was enough for a first custom view: summarize a wall of YAML into different logical sections\nFrom those sections, today we worked on getting data into the 'correct' format to do a dependency graph of yaml file 'includes' (which are a thing in that project and could be relative paths or on another project/server).\nThis leaves us in a great place to build a Mondrian view in the next pairing session as well as a custom search per repo to only search yaml files in a specific way\nAs opposed to previous sessions,on Tuesday and today i was NOT driving, only facilitating, while the driver knew enough about Gt where they weren't extremely slow, enough so that we could make progress in ~90 minute sessions. Finally, the other user was the domain expert on DocAssemble\nThink everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation\nbotwhytho — 30.11.2023 23:48\nWith ~2-4 additional pairing sessions I do think we will have rather useful tools for the user that really cares about this project as they're volunteering with an organization that heavily uses this \nDone with my rant for now but will update next week. Should have enough learnings to turn this into a proper blog post in the next couple of weeks."
      },
      "after": "5661134e5772b1cb",
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702811044629
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702811193519
    },
    {
      "type": "edit",
      "id": "8e8777dfed56f2a2",
      "item": {
        "type": "paragraph",
        "id": "8e8777dfed56f2a2",
        "text": "botwhytho via [https://discord.com/channels/729445214812504107/1179913149441396856/1179913152712937582 discord] Had a session last week, some notes below:\nWent through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\nCovered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\nTalked about potential topics for a 'group project' and this is when things started getting interesting\nHad a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc.\nDocassemble\nDocassemble\nA free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown.\nBild\nA big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML."
      },
      "date": 1702811392353
    },
    {
      "type": "edit",
      "id": "8e8777dfed56f2a2",
      "item": {
        "type": "paragraph",
        "id": "8e8777dfed56f2a2",
        "text": "botwhytho via [https://discord.com/channels/729445214812504107/1179913149441396856/1179913152712937582 discord] Had a session last week, some notes below:"
      },
      "date": 1702811408253
    },
    {
      "type": "add",
      "id": "847aa4d8ed764313",
      "item": {
        "type": "paragraph",
        "id": "847aa4d8ed764313",
        "text": "* Went through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\n* Covered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\n* Talked about potential topics for a 'group project' and this is when things started getting interesting\nHad a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc.\nDocassemble\nDocassemble\nA free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown.\nBild\nA big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML."
      },
      "after": "8e8777dfed56f2a2",
      "date": 1702811419907
    },
    {
      "type": "edit",
      "id": "847aa4d8ed764313",
      "item": {
        "type": "paragraph",
        "id": "847aa4d8ed764313",
        "text": "* Went through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\n* Covered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\n* Talked about potential topics for a 'group project' and this is when things started getting interesting"
      },
      "date": 1702811435543
    },
    {
      "type": "edit",
      "id": "847aa4d8ed764313",
      "item": {
        "type": "markdown",
        "id": "847aa4d8ed764313",
        "text": "* Went through React/Javascript importers and explained the difference between having a language parser in SmaCC and having an importer that turns some of these entities into higher level FAMIX objects at the project level.\n* Covered how to extend importers of a language with more custom extensions and used the React Importer as an example, as well as how to create custom objects, even for code that doesn't have parsing extensions (like JSX).\n* Talked about potential topics for a 'group project' and this is when things started getting interesting"
      },
      "date": 1702811437617
    },
    {
      "type": "edit",
      "id": "a8484448782e3504",
      "item": {
        "type": "paragraph",
        "id": "a8484448782e3504",
        "text": "Had a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc."
      },
      "date": 1702811491456
    },
    {
      "type": "add",
      "id": "ebeff1ae60ca98ac",
      "item": {
        "type": "paragraph",
        "id": "ebeff1ae60ca98ac",
        "text": "[[Docassemble]] – A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown.\nBild\nA big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML."
      },
      "after": "a8484448782e3504",
      "date": 1702811498099
    },
    {
      "type": "edit",
      "id": "ebeff1ae60ca98ac",
      "item": {
        "type": "paragraph",
        "id": "ebeff1ae60ca98ac",
        "text": "[[Docassemble]] – A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. A big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML."
      },
      "date": 1702813125215
    },
    {
      "type": "edit",
      "id": "5d3004619b14d668",
      "item": {
        "type": "paragraph",
        "id": "5d3004619b14d668",
        "text": "Had a session this Tuesday and an additional pairing session today. We decided to work on something VERY relevant to one of the participants, working with the (https://docassemble.org/) project which has a hodge podge of yaml files, embedded python scripts in yaml, etc."
      },
      "date": 1702813189719
    },
    {
      "type": "add",
      "id": "79cbb2936029de8e",
      "item": {
        "type": "paragraph",
        "id": "79cbb2936029de8e",
        "text": "Alberto aka botwhytho — 30.11.2023 23:41 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179915025117364305 discord]\nIn the first session me and the other participants got a bit more context on the project, YAML file formats, etc. That was enough for a first custom view: summarize a wall of YAML into different logical sections\nFrom those sections, today we worked on getting data into the 'correct' format to do a dependency graph of yaml file 'includes' (which are a thing in that project and could be relative paths or on another project/server).\nThis leaves us in a great place to build a Mondrian view in the next pairing session as well as a custom search per repo to only search yaml files in a specific way\nAs opposed to previous sessions,on Tuesday and today i was NOT driving, only facilitating, while the driver knew enough about Gt where they weren't extremely slow, enough so that we could make progress in ~90 minute sessions. Finally, the other user was the domain expert on DocAssemble\nThink everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation\nbotwhytho — 30.11.2023 23:48\nWith ~2-4 additional pairing sessions I do think we will have rather useful tools for the user that really cares about this project as they're volunteering with an organization that heavily uses this \nDone with my rant for now but will update next week. Should have enough learnings to turn this into a proper blog post in the next couple of weeks."
      },
      "after": "5d3004619b14d668",
      "date": 1702813190199
    },
    {
      "type": "add",
      "id": "d153ab656cd1349f",
      "item": {
        "type": "paragraph",
        "id": "d153ab656cd1349f",
        "text": "A big mess of a project that apparently is used in the legal field extensively and has many non-technical users that get introduced to things like YAML"
      },
      "after": "5d3004619b14d668",
      "date": 1702813214445
    },
    {
      "type": "edit",
      "id": "ebeff1ae60ca98ac",
      "item": {
        "type": "paragraph",
        "id": "ebeff1ae60ca98ac",
        "text": "[[Docassemble]] – A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. "
      },
      "date": 1702813221579
    },
    {
      "type": "edit",
      "id": "ebeff1ae60ca98ac",
      "item": {
        "type": "paragraph",
        "id": "ebeff1ae60ca98ac",
        "text": "[[Docassemble]] – A free, open-source expert system for guided interviews and document assembly, based on Python, YAML, and Markdown. [https://docassemble.org/ site]"
      },
      "date": 1702813248656
    },
    {
      "type": "fork",
      "date": 1702813315384
    },
    {
      "id": "ebeff1ae60ca98ac",
      "type": "move",
      "order": [
        "ebeff1ae60ca98ac",
        "41d81a3b9d4a1b9a",
        "8e8777dfed56f2a2",
        "847aa4d8ed764313",
        "5661134e5772b1cb",
        "5d3004619b14d668",
        "d153ab656cd1349f",
        "79cbb2936029de8e",
        "a8484448782e3504"
      ],
      "date": 1702813321394,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "type": "fork",
      "date": 1702813344416
    },
    {
      "type": "edit",
      "id": "8e8777dfed56f2a2",
      "item": {
        "type": "paragraph",
        "id": "8e8777dfed56f2a2",
        "text": "Alberto aka botwhytho via [https://discord.com/channels/729445214812504107/1179913149441396856/1179913152712937582 discord] Had a session last week, some notes below:"
      },
      "date": 1702813457820
    },
    {
      "type": "edit",
      "id": "79cbb2936029de8e",
      "item": {
        "type": "paragraph",
        "id": "79cbb2936029de8e",
        "text": "Alberto aka botwhytho — 30.11.2023 23:41 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179915025117364305 discord]\nIn the first session me and the other participants got a bit more context on the project, YAML file formats, etc. That was enough for a first custom view: summarize a wall of YAML into different logical sections\nFrom those sections, today we worked on getting data into the 'correct' format to do a dependency graph of yaml file 'includes' (which are a thing in that project and could be relative paths or on another project/server).\nThis leaves us in a great place to build a Mondrian view in the next pairing session as well as a custom search per repo to only search yaml files in a specific way\nAs opposed to previous sessions,on Tuesday and today i was NOT driving, only facilitating, while the driver knew enough about Gt where they weren't extremely slow, enough so that we could make progress in ~90 minute sessions. Finally, the other user was the domain expert on DocAssemble"
      },
      "date": 1702813569122
    },
    {
      "type": "add",
      "id": "617be69730bae55c",
      "item": {
        "type": "paragraph",
        "id": "617be69730bae55c",
        "text": "Think everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation"
      },
      "after": "79cbb2936029de8e",
      "date": 1702813570576
    },
    {
      "type": "edit",
      "id": "617be69730bae55c",
      "item": {
        "type": "paragraph",
        "id": "617be69730bae55c",
        "text": "Think everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation"
      },
      "date": 1702813603796
    },
    {
      "type": "add",
      "id": "71b37afbb5056056",
      "item": {
        "type": "paragraph",
        "id": "71b37afbb5056056",
        "text": "botwhytho — 30.11.2023 23:48\nWith ~2-4 additional pairing sessions I do think we will have rather useful tools for the user that really cares about this project as they're volunteering with an organization that heavily uses this \nDone with my rant for now but will update next week. Should have enough learnings to turn this into a proper blog post in the next couple of weeks."
      },
      "after": "617be69730bae55c",
      "date": 1702813604756
    },
    {
      "type": "remove",
      "id": "a8484448782e3504",
      "date": 1702813654223
    },
    {
      "type": "fork",
      "date": 1702813721481
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702813837734
    },
    {
      "id": "2a7c5656eb9da483",
      "type": "add",
      "item": {
        "type": "video",
        "id": "2a7c5656eb9da483",
        "text": "START 3774\nSTOP 3925\nYOUTUBE 90WbS30lo1Q\nDocAssemble Playground"
      },
      "after": "5661134e5772b1cb",
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702813989582
    },
    {
      "type": "remove",
      "id": "5661134e5772b1cb",
      "date": 1702813994039
    },
    {
      "type": "edit",
      "id": "2a7c5656eb9da483",
      "item": {
        "type": "video",
        "id": "2a7c5656eb9da483",
        "text": "START 3774\nSTOP 3975\nYOUTUBE 90WbS30lo1Q\nDocAssemble Playground"
      },
      "date": 1702814248264
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702814287413
    },
    {
      "id": "5d3004619b14d668",
      "type": "move",
      "order": [
        "ebeff1ae60ca98ac",
        "41d81a3b9d4a1b9a",
        "8e8777dfed56f2a2",
        "847aa4d8ed764313",
        "5d3004619b14d668",
        "2a7c5656eb9da483",
        "d153ab656cd1349f",
        "79cbb2936029de8e",
        "617be69730bae55c",
        "71b37afbb5056056"
      ],
      "date": 1702814296931
    },
    {
      "id": "d153ab656cd1349f",
      "type": "move",
      "order": [
        "ebeff1ae60ca98ac",
        "41d81a3b9d4a1b9a",
        "8e8777dfed56f2a2",
        "847aa4d8ed764313",
        "5d3004619b14d668",
        "d153ab656cd1349f",
        "2a7c5656eb9da483",
        "79cbb2936029de8e",
        "617be69730bae55c",
        "71b37afbb5056056"
      ],
      "date": 1702814304543
    },
    {
      "type": "fork",
      "date": 1702814327873
    },
    {
      "type": "edit",
      "id": "79cbb2936029de8e",
      "item": {
        "type": "paragraph",
        "id": "79cbb2936029de8e",
        "text": "Alberto aka botwhytho — 30.11.2023 23:41 via [https://discord.com/channels/729445214812504107/1179913149441396856/1179915025117364305 discord]\nIn the first session me and the other participants got a bit more context on the project, YAML file formats, etc. That was enough for a first custom view: summarize a wall of YAML into different logical sections\nFrom those sections, today we worked on getting data into the 'correct' format to do a dependency graph of yaml file 'includes' (which are a thing in that project and could be relative paths or on another project/server).\nThis leaves us in a great place to build a Mondrian view in the next pairing session as well as a custom search per repo to only search yaml files in a specific way\nAs opposed to previous sessions,on Tuesday and today i was NOT driving, only facilitating, while the driver knew enough about Gt where they weren't extremely slow, enough so that we could make progress in ~90 minute sessions. Finally, the other user was the domain expert on DocAssemble."
      },
      "date": 1702814866032
    },
    {
      "type": "edit",
      "id": "617be69730bae55c",
      "item": {
        "type": "paragraph",
        "id": "617be69730bae55c",
        "text": "Think everyone learned different things from the sessions. One thing that stands out about facilitating pairing in Gt is that there are many more UI affordances than in the typical IDE, so that one needs to be very precise with their descriptions on where to go on the screen.\nAlso learned today that zoom annotations are VERY useful for this\nI got someone to internalize and appreciate the value in Playground driven development and how to copy paste code out of deep miller columns back to the original playground while at the same time adding text documentation."
      },
      "date": 1702814868933
    },
    {
      "type": "fork",
      "date": 1702814924125
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702814962825
    },
    {
      "item": {
        "type": "factory",
        "id": "0087e570cc049685"
      },
      "id": "0087e570cc049685",
      "type": "add",
      "after": "71b37afbb5056056",
      "date": 1702815031251
    },
    {
      "type": "remove",
      "id": "0087e570cc049685",
      "date": 1702815057765
    },
    {
      "item": {
        "type": "factory",
        "id": "cc5bff3137fb4b2f"
      },
      "id": "cc5bff3137fb4b2f",
      "type": "add",
      "after": "71b37afbb5056056",
      "date": 1702815061121
    },
    {
      "type": "edit",
      "id": "cc5bff3137fb4b2f",
      "item": {
        "type": "pagefold",
        "id": "cc5bff3137fb4b2f",
        "text": "~"
      },
      "date": 1702815064214
    },
    {
      "item": {
        "type": "factory",
        "id": "181621e4b9e5f110"
      },
      "id": "181621e4b9e5f110",
      "type": "add",
      "after": "cc5bff3137fb4b2f",
      "date": 1702815066309
    },
    {
      "type": "edit",
      "id": "181621e4b9e5f110",
      "item": {
        "type": "reference",
        "id": "181621e4b9e5f110",
        "site": "jeff.dojo.fed.wiki",
        "slug": "transcriber-notes-2023-12-03",
        "title": "Transcriber Notes 2023-12-03",
        "text": "See [[Typescript 2023-12-03]], [[Typescript Index 2023-12-03]], [[Typescript Transcripts]]."
      },
      "date": 1702815068809
    },
    {
      "type": "edit",
      "id": "181621e4b9e5f110",
      "item": {
        "type": "reference",
        "id": "181621e4b9e5f110",
        "site": "jeff.dojo.fed.wiki",
        "slug": "transcriber-notes-2023-12-03",
        "title": "Transcriber Notes 2023-12-03",
        "text": "A review of some of Jeff's work at the Recurse Center, including a couple of image compositing programs, plus a demonstration of the Moldable Development approach to explore the Docassemble UI scripting framework for helping people file legal papers online by collecting necessary information in a structured way (e.g. for requesting a protective restraining order)."
      },
      "date": 1702815097530
    }
  ]
}