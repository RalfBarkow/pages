{
  "title": "2023-06-06",
  "story": [
    {
      "type": "paragraph",
      "id": "fc8f5d36ff495777",
      "text": "⇒ [[Type Future]] ⇒ [[Type Create]] ⇒ [[Person, decodePerson, encodePerson]] ⇒ [[WikiSpec]]"
    },
    {
      "type": "roster",
      "id": "0d90b5d456017b22",
      "text": "de.dreyeck.ch\nelm.dreyeck.ch"
    },
    {
      "type": "paragraph",
      "id": "73e776248e5e62e1",
      "text": "⇒ [[Selbstorganisation]] ⇒ [[Struktur]]"
    },
    {
      "type": "reference",
      "id": "8106bf6cd2544e65",
      "site": "de.dreyeck.ch",
      "slug": "struktur",
      "title": "Struktur",
      "text": "Welche Strukturen haben eine Chance, gewählt zu werden und sich evolutionär zu bewähren?"
    },
    {
      "type": "paragraph",
      "id": "de39e29e216047ef",
      "text": "Which [[Structure]]s have a chance to be chosen and to prove themselves evolutionarily? (LUHMANN, Niklas, 1991. [[Soziale Systeme]], p. 404)"
    },
    {
      "type": "paragraph",
      "id": "54270c7f36e89e65",
      "text": "⇒ [[Hierarchie]]"
    },
    {
      "type": "reference",
      "id": "0065c91c8e8ee443",
      "site": "wiki.ralfbarkow.ch",
      "slug": "hierarchy",
      "title": "Hierarchy",
      "text": "See [[Exercise: hierarchies]]."
    },
    {
      "type": "paragraph",
      "id": "e5f2fdb5839a17c1",
      "text": "Obwohl dieses Konzept [⇒ [[Hierarchie]]] immer wieder auch für soziale Systeme vertreten wird, ist es für diesen Systembildungstyp ungeeignet. Es trifft, realistisch gesehen, einfach nicht zu, daß soziale Systeme sich durchweg in der Form von Hierarchien bilden [56], das Prinzip würde sie offenbar zu stark straffen, zu stark zentralisieren, zu stark vereinfachen. Man braucht nicht zu bestreiten, daß Hierarchie eine besonders komplexitätsgünstige Form der Systembildung ist und daß sie zugleich die Einheit des komplexen Systems unverkennbar ausdrückt. Man braucht nicht zu bestreiten, daß diese Form auch im Bereich sozialer Systeme gewählt werden kann und gewählt worden ist. Es gibt jedoch offensichtlich auch andere Möglichkeiten, vielleicht weniger leistungsstarke, aber damit auch leichter erreichbare Formen. Wir sehen sie in einer Bewährungsauslese an Hand von Funktionen.  (LUHMANN, Niklas, 1991. [[Soziale Systeme]], p. 405)"
    },
    {
      "type": "paragraph",
      "id": "208fde16c08365ac",
      "text": "p. 405N56 Siehe den Widerspruch von [[Christopher Alexander]], [[A City is not a Tree]], Architectural Forum 122 (1965), Aprilheft S. 58-62, Maiheft S. 58-61. Für biologische Systeme auch [[Gerhard Roth]], Biological Systems Theory and the Problem of Reductionism, in: Gerhard Roth/Helmut Schwegler (Hrsg.), Self-organizing Systems: An Interdisciplinary Approach, Frankfurt 1981, S. 106-120."
    },
    {
      "type": "paragraph",
      "id": "ce63234ef3554958",
      "text": "ROTH, Gerhard and SCHWEGLER, Helmut, 1981. Self-organizing systems: an interdisciplinary approach. Campus Verlag. \n"
    },
    {
      "type": "paragraph",
      "id": "47bcdcfe82fc1fc0",
      "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]: idea of [[exchange]], concept of [[Openness]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-06-06",
        "story": []
      },
      "date": 1686023416662
    },
    {
      "item": {
        "type": "factory",
        "id": "57d29cda6b5a42a1"
      },
      "id": "57d29cda6b5a42a1",
      "type": "add",
      "date": 1686023417977
    },
    {
      "type": "edit",
      "id": "57d29cda6b5a42a1",
      "item": {
        "type": "code",
        "id": "57d29cda6b5a42a1",
        "text": "module MainSpec exposing (suite)\n\nimport Expect\nimport Json.Decode as Decode\nimport Json.Encode as Encode\nimport Main exposing (Person, decodePerson, encodePerson)\nimport Test exposing (Test, test)\n\n\nrawData : String\nrawData =\n    \"\"\"\n    {\n      \"name\": \"John Doe\",\n      \"age\": 25,\n      \"hobbies\": [\"reading\", \"running\", \"cooking\"]\n    }\n    \"\"\"\n\n\nsuite : Test\nsuite =\n    Test.describe \"Main\"\n        [ test \"decodePerson\" <|\n            \\() ->\n                let\n                    jsonData =\n                        rawData\n\n                    expectedPerson =\n                        Person \"John Doe\" 25 [ \"reading\", \"running\", \"cooking\" ]\n\n                    decoded =\n                        Decode.decodeString decodePerson jsonData\n                in\n                Expect.equal decoded (Ok expectedPerson)\n        , test \"encodePerson\" <|\n            \\() ->\n                let\n                    person =\n                        Person \"John Doe\" 30 [ \"reading\", \"playing guitar\" ]\n\n                    expectedJson =\n                        \"\"\"{\"name\":\"John Doe\",\"age\":30,\"hobbies\":[\"reading\",\"playing guitar\"]}\"\"\"\n\n                    encoded =\n                        Encode.encode 0 (encodePerson person)\n                in\n                Expect.equal encoded expectedJson\n        ]\n"
      },
      "date": 1686023423586
    },
    {
      "item": {
        "type": "factory",
        "id": "fc8f5d36ff495777"
      },
      "id": "fc8f5d36ff495777",
      "type": "add",
      "after": "57d29cda6b5a42a1",
      "date": 1686023455145
    },
    {
      "type": "edit",
      "id": "fc8f5d36ff495777",
      "item": {
        "type": "paragraph",
        "id": "fc8f5d36ff495777",
        "text": "Person, decodePerson, encodePerson"
      },
      "date": 1686023457773
    },
    {
      "id": "fc8f5d36ff495777",
      "type": "move",
      "order": [
        "fc8f5d36ff495777",
        "57d29cda6b5a42a1"
      ],
      "date": 1686023463124
    },
    {
      "type": "edit",
      "id": "fc8f5d36ff495777",
      "item": {
        "type": "paragraph",
        "id": "fc8f5d36ff495777",
        "text": "[[Person, decodePerson, encodePerson]]"
      },
      "date": 1686023470860
    },
    {
      "id": "57d29cda6b5a42a1",
      "type": "remove",
      "removedTo": {
        "page": "Person, decodePerson, encodePerson"
      },
      "date": 1686023478026
    },
    {
      "type": "edit",
      "id": "fc8f5d36ff495777",
      "item": {
        "type": "paragraph",
        "id": "fc8f5d36ff495777",
        "text": "⇒ [[Type Future]] ⇒ [[Type Create]] ⇒ [[Person, decodePerson, encodePerson]]"
      },
      "date": 1686024614557
    },
    {
      "item": {
        "type": "factory",
        "id": "2c585a2a16405b75"
      },
      "id": "2c585a2a16405b75",
      "type": "add",
      "after": "fc8f5d36ff495777",
      "date": 1686038231838
    },
    {
      "type": "edit",
      "id": "2c585a2a16405b75",
      "item": {
        "type": "paragraph",
        "id": "2c585a2a16405b75",
        "text": "tests/WikiSpec.elm"
      },
      "date": 1686038239737
    },
    {
      "type": "edit",
      "id": "2c585a2a16405b75",
      "item": {
        "type": "paragraph",
        "id": "2c585a2a16405b75",
        "text": "tests/WikiSpec.elm [https://github.com/RalfBarkow/vite-elm-dojo/commit/b200161f7d2b6093c6a3de27029d6bd6f5657b69 commit]"
      },
      "date": 1686038268375
    },
    {
      "type": "edit",
      "id": "fc8f5d36ff495777",
      "item": {
        "type": "paragraph",
        "id": "fc8f5d36ff495777",
        "text": "⇒ [[Type Future]] ⇒ [[Type Create]] ⇒ [[Person, decodePerson, encodePerson]] ⇒ [[WikiSpec]]"
      },
      "date": 1686038308825
    },
    {
      "id": "2c585a2a16405b75",
      "type": "remove",
      "removedTo": {
        "page": "WikiSpec"
      },
      "date": 1686038328463
    },
    {
      "item": {
        "type": "factory",
        "id": "0d90b5d456017b22"
      },
      "id": "0d90b5d456017b22",
      "type": "add",
      "after": "fc8f5d36ff495777",
      "date": 1686047825709
    },
    {
      "type": "edit",
      "id": "0d90b5d456017b22",
      "item": {
        "type": "roster",
        "id": "0d90b5d456017b22",
        "text": "elm.dreyeck.ch"
      },
      "date": 1686047833083
    },
    {
      "item": {
        "type": "factory",
        "id": "73e776248e5e62e1"
      },
      "id": "73e776248e5e62e1",
      "type": "add",
      "after": "0d90b5d456017b22",
      "date": 1686052205929
    },
    {
      "type": "edit",
      "id": "73e776248e5e62e1",
      "item": {
        "type": "paragraph",
        "id": "73e776248e5e62e1",
        "text": "⇒ [[Selbstorganisation]]"
      },
      "date": 1686052230253
    },
    {
      "item": {
        "type": "factory",
        "id": "8106bf6cd2544e65"
      },
      "id": "8106bf6cd2544e65",
      "type": "add",
      "after": "73e776248e5e62e1",
      "date": 1686052761889
    },
    {
      "type": "edit",
      "id": "0d90b5d456017b22",
      "item": {
        "type": "roster",
        "id": "0d90b5d456017b22",
        "text": "de.dreyeck.ch\nelm.dreyeck.ch"
      },
      "date": 1686052823144
    },
    {
      "type": "edit",
      "id": "73e776248e5e62e1",
      "item": {
        "type": "paragraph",
        "id": "73e776248e5e62e1",
        "text": "⇒ [[Selbstorganisation]] ⇒ [[Struktur]]"
      },
      "date": 1686052833285
    },
    {
      "type": "edit",
      "id": "8106bf6cd2544e65",
      "item": {
        "type": "reference",
        "id": "8106bf6cd2544e65",
        "site": "de.dreyeck.ch",
        "slug": "struktur",
        "title": "Struktur",
        "text": "Welche Strukturen haben eine Chance, gewählt zu werden und sich evolutionär zu bewähren?"
      },
      "date": 1686053298672
    },
    {
      "item": {
        "type": "factory",
        "id": "de39e29e216047ef"
      },
      "id": "de39e29e216047ef",
      "type": "add",
      "after": "8106bf6cd2544e65",
      "date": 1686053322725
    },
    {
      "type": "edit",
      "id": "de39e29e216047ef",
      "item": {
        "type": "paragraph",
        "id": "de39e29e216047ef",
        "text": "Which [[structure]]s have a chance to be chosen and to prove themselves evolutionarily?"
      },
      "date": 1686053332231
    },
    {
      "type": "edit",
      "id": "de39e29e216047ef",
      "item": {
        "type": "paragraph",
        "id": "de39e29e216047ef",
        "text": "Which [[Structure]]s have a chance to be chosen and to prove themselves evolutionarily?"
      },
      "date": 1686053340495
    },
    {
      "type": "edit",
      "id": "de39e29e216047ef",
      "item": {
        "type": "paragraph",
        "id": "de39e29e216047ef",
        "text": "Which [[Structure]]s have a chance to be chosen and to prove themselves evolutionarily? (LUHMANN, Niklas, 1991. [[Soziale Systeme]], p. 404)"
      },
      "date": 1686053373354
    },
    {
      "item": {
        "type": "factory",
        "id": "54270c7f36e89e65"
      },
      "id": "54270c7f36e89e65",
      "type": "add",
      "after": "de39e29e216047ef",
      "date": 1686053418316
    },
    {
      "type": "edit",
      "id": "54270c7f36e89e65",
      "item": {
        "type": "paragraph",
        "id": "54270c7f36e89e65",
        "text": "Hierarchie"
      },
      "date": 1686053424774
    },
    {
      "type": "edit",
      "id": "54270c7f36e89e65",
      "item": {
        "type": "paragraph",
        "id": "54270c7f36e89e65",
        "text": "⇒ [[Hierarchie]]"
      },
      "date": 1686053434437
    },
    {
      "item": {
        "type": "factory",
        "id": "0065c91c8e8ee443"
      },
      "id": "0065c91c8e8ee443",
      "type": "add",
      "after": "54270c7f36e89e65",
      "date": 1686053462090
    },
    {
      "type": "edit",
      "id": "0065c91c8e8ee443",
      "item": {
        "type": "reference",
        "id": "0065c91c8e8ee443",
        "site": "wiki.ralfbarkow.ch",
        "slug": "hierarchy",
        "title": "Hierarchy",
        "text": "See [[Exercise: hierarchies]]."
      },
      "date": 1686053464405
    },
    {
      "item": {
        "type": "factory",
        "id": "e5f2fdb5839a17c1"
      },
      "id": "e5f2fdb5839a17c1",
      "type": "add",
      "after": "0065c91c8e8ee443",
      "date": 1686053493207
    },
    {
      "type": "edit",
      "id": "e5f2fdb5839a17c1",
      "item": {
        "type": "paragraph",
        "id": "e5f2fdb5839a17c1",
        "text": "Obwohl dieses Konzept [immer wieder auch für soziale Systeme vertreten wird55, ist es für diesen Systembildungstyp ungeeignet. Es trifft, realistisch gesehen, einfach nicht zu, daß soziale Systeme sich durchweg in der Form von Hierarchien bilden5', das Prinzip würde sie offenbar zu stark straffen, zu stark zentralisieren, zu stark vereinfachen. Man braucht nicht zu bestreiten, daß Hierarchie eine besonders komplexitätsgünstige Form der Systembildung ist und daß sie zugleich die Einheit des komplexen Systems unverkennbar ausdrückt. Man braucht nicht zu bestreiten, daß diese Form auch im Bereich sozialer Systeme gewählt werden kann und gewählt worden ist. Es gibt jedoch offensichtlich auch andere Möglichkeiten, vielleicht weniger leistungsstarke, aber damit auch leichter erreichbare Formen. Wir sehen sie in einer Bewährungsauslese an Hand von Funktionen."
      },
      "date": 1686053504098
    },
    {
      "type": "edit",
      "id": "e5f2fdb5839a17c1",
      "item": {
        "type": "paragraph",
        "id": "e5f2fdb5839a17c1",
        "text": "Obwohl dieses Konzept [⇒ [[Hierarchie]]] immer wieder auch für soziale Systeme vertreten wird, ist es für diesen Systembildungstyp ungeeignet. Es trifft, realistisch gesehen, einfach nicht zu, daß soziale Systeme sich durchweg in der Form von Hierarchien bilden [56], das Prinzip würde sie offenbar zu stark straffen, zu stark zentralisieren, zu stark vereinfachen. Man braucht nicht zu bestreiten, daß Hierarchie eine besonders komplexitätsgünstige Form der Systembildung ist und daß sie zugleich die Einheit des komplexen Systems unverkennbar ausdrückt. Man braucht nicht zu bestreiten, daß diese Form auch im Bereich sozialer Systeme gewählt werden kann und gewählt worden ist. Es gibt jedoch offensichtlich auch andere Möglichkeiten, vielleicht weniger leistungsstarke, aber damit auch leichter erreichbare Formen. Wir sehen sie in einer Bewährungsauslese an Hand von Funktionen."
      },
      "date": 1686053596631
    },
    {
      "type": "edit",
      "id": "e5f2fdb5839a17c1",
      "item": {
        "type": "paragraph",
        "id": "e5f2fdb5839a17c1",
        "text": "Obwohl dieses Konzept [⇒ [[Hierarchie]]] immer wieder auch für soziale Systeme vertreten wird, ist es für diesen Systembildungstyp ungeeignet. Es trifft, realistisch gesehen, einfach nicht zu, daß soziale Systeme sich durchweg in der Form von Hierarchien bilden [56], das Prinzip würde sie offenbar zu stark straffen, zu stark zentralisieren, zu stark vereinfachen. Man braucht nicht zu bestreiten, daß Hierarchie eine besonders komplexitätsgünstige Form der Systembildung ist und daß sie zugleich die Einheit des komplexen Systems unverkennbar ausdrückt. Man braucht nicht zu bestreiten, daß diese Form auch im Bereich sozialer Systeme gewählt werden kann und gewählt worden ist. Es gibt jedoch offensichtlich auch andere Möglichkeiten, vielleicht weniger leistungsstarke, aber damit auch leichter erreichbare Formen. Wir sehen sie in einer Bewährungsauslese an Hand von Funktionen.  (LUHMANN, Niklas, 1991. [[Soziale Systeme]], p. 405)"
      },
      "date": 1686053609097
    },
    {
      "item": {
        "type": "factory",
        "id": "208fde16c08365ac"
      },
      "id": "208fde16c08365ac",
      "type": "add",
      "after": "e5f2fdb5839a17c1",
      "date": 1686053619894
    },
    {
      "type": "edit",
      "id": "208fde16c08365ac",
      "item": {
        "type": "paragraph",
        "id": "208fde16c08365ac",
        "text": "p. 405N56 Siehe den Widerspruch von Christopher Alexander, [[A City is not a Tree]], Architectural Forum 122 (1965), Aprilheft S. 58-62, Maiheft S. 58-61. Für biologische Systeme auch Gerhard Roth, Biological Systems Theory and the Problem of Reductionism, in: Gerhard Roth/Helmut Schwegler (Hrsg.), Self-organizing Systems: An Interdisciplinary Approach, Frankfurt 1981, S. 106-120."
      },
      "date": 1686053658345
    },
    {
      "type": "edit",
      "id": "208fde16c08365ac",
      "item": {
        "type": "paragraph",
        "id": "208fde16c08365ac",
        "text": "p. 405N56 Siehe den Widerspruch von [[Christopher Alexander]], [[A City is not a Tree]], Architectural Forum 122 (1965), Aprilheft S. 58-62, Maiheft S. 58-61. Für biologische Systeme auch [[Gerhard Roth]], Biological Systems Theory and the Problem of Reductionism, in: Gerhard Roth/Helmut Schwegler (Hrsg.), Self-organizing Systems: An Interdisciplinary Approach, Frankfurt 1981, S. 106-120."
      },
      "date": 1686053714390
    },
    {
      "item": {
        "type": "factory",
        "id": "ce63234ef3554958"
      },
      "id": "ce63234ef3554958",
      "type": "add",
      "after": "208fde16c08365ac",
      "date": 1686066636535
    },
    {
      "type": "edit",
      "id": "ce63234ef3554958",
      "item": {
        "type": "paragraph",
        "id": "ce63234ef3554958",
        "text": "\nROTH, Gerhard and SCHWEGLER, Helmut, 1981. Self-organizing systems: an interdisciplinary approach. Campus Verlag. \n"
      },
      "date": 1686066645055
    },
    {
      "type": "edit",
      "id": "ce63234ef3554958",
      "item": {
        "type": "paragraph",
        "id": "ce63234ef3554958",
        "text": "ROTH, Gerhard and SCHWEGLER, Helmut, 1981. Self-organizing systems: an interdisciplinary approach. Campus Verlag. \n"
      },
      "date": 1686066661150
    },
    {
      "item": {
        "type": "factory",
        "id": "b67ed990302d40c9"
      },
      "id": "b67ed990302d40c9",
      "type": "add",
      "after": "ce63234ef3554958",
      "date": 1686067253202
    },
    {
      "type": "edit",
      "id": "b67ed990302d40c9",
      "item": {
        "type": "pagefold",
        "id": "b67ed990302d40c9",
        "text": "[[Quantum Open Systems]]"
      },
      "date": 1686067265267
    },
    {
      "type": "remove",
      "id": "b67ed990302d40c9",
      "date": 1686067268814
    },
    {
      "item": {
        "type": "factory",
        "id": "d3da6a4e9b2cf8b1"
      },
      "id": "d3da6a4e9b2cf8b1",
      "type": "add",
      "after": "ce63234ef3554958",
      "date": 1686067270004
    },
    {
      "type": "remove",
      "id": "d3da6a4e9b2cf8b1",
      "date": 1686067273063
    },
    {
      "item": {
        "type": "factory",
        "id": "47bcdcfe82fc1fc0"
      },
      "id": "47bcdcfe82fc1fc0",
      "type": "add",
      "after": "ce63234ef3554958",
      "date": 1686067276694
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Quantum Open Systems]]"
      },
      "date": 1686067285282
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open Systems]] ⇒ [[Quantum Open Systems]]"
      },
      "date": 1686067715034
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]"
      },
      "date": 1686067873648
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]"
      },
      "date": 1686067898101
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]: idea of exchange"
      },
      "date": 1686067990008
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]: idea of exchange, concept of [[openness]]"
      },
      "date": 1686068055490
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]: idea of [[exchange]], concept of [[openness]]"
      },
      "date": 1686068103593
    },
    {
      "type": "edit",
      "id": "47bcdcfe82fc1fc0",
      "item": {
        "type": "paragraph",
        "id": "47bcdcfe82fc1fc0",
        "text": "⇒ [[Open System]] ⇒ [[Open Systems Theory]] ⇒ [[Quantum Open Systems]]: idea of [[exchange]], concept of [[Openness]]"
      },
      "date": 1686068930412
    }
  ]
}