{
  "title": "DNS Over HTTPS",
  "story": [
    {
      "type": "paragraph",
      "id": "aa908efc8654d7a1",
      "text": "Cloudflare's DNS over HTTPS endpoint also supports JSON format for querying DNS data. For lack of an agreed upon JSON schema for DNS over HTTPS in the IETF, Cloudflare has chosen to follow the same schema as Google's DNS over HTTPS resolver. [https://developers.cloudflare.com/1.1.1.1/dns-over-https/json-format post]"
    },
    {
      "type": "code",
      "id": "84a466bdf9142920",
      "text": "  async function dns(domain) {\n    let name = domain.split(/:/)[0]\n    let site = `https://cloudflare-dns.com`\n    let url = `${site}/dns-query?name=${name}&type=A`\n    let headers = {accept: 'application/dns-json'}\n    let record = await fetch(url,{headers})\n      .then(res => res.json())\n    if (record.Answer) {\n      let addrs = record.Answer\n        .filter(addr => addr.type == 1)\n        .map(addr => addr.data)\n      console.log({domain, addrs})\n      return addrs\n    } else {\n      console.log({record})\n      return []\n    }\n  }\n"
    },
    {
      "type": "paragraph",
      "id": "cf677067fcc7ae5d",
      "text": "The 1.7 release adds a new Deno.resolveDns API. It can be used to query DNS records from a DNS resolver. At the moment only DNS over UDP/TCP is supported (no DNS over HTTPS nor DNS over TLS). One can specify a custom nameserver (for example Cloudflare's 1.1.1.1 or Google's 8.8.8.8) to use, but by default we will use the system resolver (e.g. /etc/resolv.conf on Linux). [https://deno.com/blog/v1.7#new-unstable-deno.resolvedns-api post] [https://discord.com/channels/684898665143206084/689420767620104201/877276234315358278 discord]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "DNS Over HTTPS",
        "story": []
      },
      "date": 1629235909893
    },
    {
      "item": {
        "type": "factory",
        "id": "aa908efc8654d7a1"
      },
      "id": "aa908efc8654d7a1",
      "type": "add",
      "date": 1629235911485
    },
    {
      "type": "edit",
      "id": "aa908efc8654d7a1",
      "item": {
        "type": "paragraph",
        "id": "aa908efc8654d7a1",
        "text": "Cloudflare's DNS over HTTPS endpoint also supports JSON format for querying DNS data. For lack of an agreed upon JSON schema for DNS over HTTPS in the IETF, Cloudflare has chosen to follow the same schema as Google's DNS over HTTPS resolver.\n\n"
      },
      "date": 1629235917093
    },
    {
      "type": "edit",
      "id": "aa908efc8654d7a1",
      "item": {
        "type": "paragraph",
        "id": "aa908efc8654d7a1",
        "text": "Cloudflare's DNS over HTTPS endpoint also supports JSON format for querying DNS data. For lack of an agreed upon JSON schema for DNS over HTTPS in the IETF, Cloudflare has chosen to follow the same schema as Google's DNS over HTTPS resolver. [https://developers.cloudflare.com/1.1.1.1/dns-over-https/json-format post]"
      },
      "date": 1629235950372
    },
    {
      "item": {
        "type": "factory",
        "id": "84a466bdf9142920"
      },
      "id": "84a466bdf9142920",
      "type": "add",
      "after": "aa908efc8654d7a1",
      "date": 1629236179203
    },
    {
      "type": "edit",
      "id": "84a466bdf9142920",
      "item": {
        "type": "code",
        "id": "84a466bdf9142920",
        "text": "  async function dns(domain) {\n    let name = domain.split(/:/)[0]\n    let site = `https://cloudflare-dns.com`\n    let url = `${site}/dns-query?name=${name}&type=A`\n    let headers = {accept: 'application/dns-json'}\n    let record = await fetch(url,{headers})\n      .then(res => res.json())\n    if (record.Answer) {\n      let addrs = record.Answer\n        .filter(addr => addr.type == 1)\n        .map(addr => addr.data)\n      console.log({domain, addrs})\n      return addrs\n    } else {\n      console.log({record})\n      return []\n    }\n  }\n"
      },
      "date": 1629236184533
    },
    {
      "item": {
        "type": "factory",
        "id": "cf677067fcc7ae5d"
      },
      "id": "cf677067fcc7ae5d",
      "type": "add",
      "after": "84a466bdf9142920",
      "date": 1629257458600
    },
    {
      "type": "edit",
      "id": "cf677067fcc7ae5d",
      "item": {
        "type": "paragraph",
        "id": "cf677067fcc7ae5d",
        "text": "New unstable Deno.resolveDns API. \nThis release adds a new Deno.resolveDns API. It can be used to query DNS records from a DNS resolver. At the moment only DNS over UDP/TCP is supported (no DNS over HTTPS nor DNS over TLS). One can specify a custom nameserver (for example Cloudflare's 1.1.1.1 or Google's 8.8.8.8) to use, but by default we will use the system resolver (e.g. /etc/resolv.conf on Linux)."
      },
      "date": 1629257611088
    },
    {
      "type": "edit",
      "id": "cf677067fcc7ae5d",
      "item": {
        "type": "paragraph",
        "id": "cf677067fcc7ae5d",
        "text": "New unstable Deno.resolveDns API. \nThe 1.7 release adds a new Deno.resolveDns API. It can be used to query DNS records from a DNS resolver. At the moment only DNS over UDP/TCP is supported (no DNS over HTTPS nor DNS over TLS). One can specify a custom nameserver (for example Cloudflare's 1.1.1.1 or Google's 8.8.8.8) to use, but by default we will use the system resolver (e.g. /etc/resolv.conf on Linux). [https://deno.com/blog/v1.7#new-unstable-deno.resolvedns-api post]"
      },
      "date": 1629257663108
    },
    {
      "type": "edit",
      "id": "cf677067fcc7ae5d",
      "item": {
        "type": "paragraph",
        "id": "cf677067fcc7ae5d",
        "text": "The 1.7 release adds a new Deno.resolveDns API. It can be used to query DNS records from a DNS resolver. At the moment only DNS over UDP/TCP is supported (no DNS over HTTPS nor DNS over TLS). One can specify a custom nameserver (for example Cloudflare's 1.1.1.1 or Google's 8.8.8.8) to use, but by default we will use the system resolver (e.g. /etc/resolv.conf on Linux). [https://deno.com/blog/v1.7#new-unstable-deno.resolvedns-api post]"
      },
      "date": 1629257693019
    },
    {
      "type": "edit",
      "id": "cf677067fcc7ae5d",
      "item": {
        "type": "paragraph",
        "id": "cf677067fcc7ae5d",
        "text": "The 1.7 release adds a new Deno.resolveDns API. It can be used to query DNS records from a DNS resolver. At the moment only DNS over UDP/TCP is supported (no DNS over HTTPS nor DNS over TLS). One can specify a custom nameserver (for example Cloudflare's 1.1.1.1 or Google's 8.8.8.8) to use, but by default we will use the system resolver (e.g. /etc/resolv.conf on Linux). [https://deno.com/blog/v1.7#new-unstable-deno.resolvedns-api post] [https://discord.com/channels/684898665143206084/689420767620104201/877276234315358278 discord]"
      },
      "date": 1629257776657
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1629263735819
    }
  ]
}