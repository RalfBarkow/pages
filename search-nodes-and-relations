{
  "title": "Search Nodes and Relations",
  "story": [
    {
      "type": "paragraph",
      "id": "3d98010b0b99fa8d",
      "text": "We establish conventions for naming types and properties of nodes and relations with an eye towards maintainability."
    },
    {
      "type": "paragraph",
      "id": "b531401f41c48a97",
      "text": "Our nodes are scripts and the files that they read and write. We add api nodes as a way of grouping endpoints."
    },
    {
      "type": "paragraph",
      "id": "399e1e3dee0c1a9f",
      "text": "● Scripts are typed by the language used and named by the script file name sans standard suffix."
    },
    {
      "type": "paragraph",
      "id": "1117800342aeeb6f",
      "text": "● Files are typed by the directory where they reside and named after the basename with suffix."
    },
    {
      "type": "paragraph",
      "id": "6e4f84c3030cb606",
      "text": "● An API is type API and given a descriptive name which may or may not be represented in a route."
    },
    {
      "type": "paragraph",
      "id": "6096d84973ab91bc",
      "text": "Our nodes are related as control and data passes with the root attached to the node invoking the interaction whether read or write. We might tamper with layout such that data flows in one direction."
    },
    {
      "type": "paragraph",
      "id": "89c01c4ef8efe6f9",
      "text": "● Scripts write files by establishing the name and location possibly binding this to standard output of another Script."
    },
    {
      "type": "paragraph",
      "id": "d321494dd4e29e67",
      "text": "● Scripts append to files that may be created with the first append. The root of the append follows write conventions. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Search Nodes and Relations",
        "story": []
      },
      "date": 1696720976917
    },
    {
      "item": {
        "type": "factory",
        "id": "3d98010b0b99fa8d"
      },
      "id": "3d98010b0b99fa8d",
      "type": "add",
      "date": 1696721112979
    },
    {
      "type": "edit",
      "id": "3d98010b0b99fa8d",
      "item": {
        "type": "paragraph",
        "id": "3d98010b0b99fa8d",
        "text": "We establish conventions for naming types and properties of nodes and relations with an eye towards maintainability."
      },
      "date": 1696721261238
    },
    {
      "item": {
        "type": "factory",
        "id": "b531401f41c48a97"
      },
      "id": "b531401f41c48a97",
      "type": "add",
      "after": "3d98010b0b99fa8d",
      "date": 1696721271170
    },
    {
      "type": "edit",
      "id": "b531401f41c48a97",
      "item": {
        "type": "paragraph",
        "id": "b531401f41c48a97",
        "text": "Our nodes are scripts and the files that they read and write. We add api nodes as a way of grouping endpoints."
      },
      "date": 1696721385155
    },
    {
      "item": {
        "type": "factory",
        "id": "399e1e3dee0c1a9f"
      },
      "id": "399e1e3dee0c1a9f",
      "type": "add",
      "after": "b531401f41c48a97",
      "date": 1696721387904
    },
    {
      "type": "edit",
      "id": "399e1e3dee0c1a9f",
      "item": {
        "type": "paragraph",
        "id": "399e1e3dee0c1a9f",
        "text": "● Scripts are typed by the language used and named by the script file name sans standard suffix."
      },
      "date": 1696721475662
    },
    {
      "type": "add",
      "id": "1117800342aeeb6f",
      "item": {
        "type": "paragraph",
        "id": "1117800342aeeb6f",
        "text": "● Files are typed by the directory where they reside and named after the basename with suffix."
      },
      "after": "399e1e3dee0c1a9f",
      "date": 1696721553434
    },
    {
      "type": "add",
      "id": "6e4f84c3030cb606",
      "item": {
        "type": "paragraph",
        "id": "6e4f84c3030cb606",
        "text": "● An API is type API and given a descriptive name which may or may not be represented in a route."
      },
      "after": "1117800342aeeb6f",
      "date": 1696721668032
    },
    {
      "type": "add",
      "id": "6096d84973ab91bc",
      "item": {
        "type": "paragraph",
        "id": "6096d84973ab91bc",
        "text": "Our nodes are related as control and data passes with the root attached to the node invoking the interaction whether read or write."
      },
      "after": "6e4f84c3030cb606",
      "date": 1696721906698
    },
    {
      "type": "edit",
      "id": "6096d84973ab91bc",
      "item": {
        "type": "paragraph",
        "id": "6096d84973ab91bc",
        "text": "Our nodes are related as control and data passes with the root attached to the node invoking the interaction whether read or write. We might tamper with layout such that data flows in one direction."
      },
      "date": 1696721965709
    },
    {
      "type": "add",
      "id": "89c01c4ef8efe6f9",
      "item": {
        "type": "paragraph",
        "id": "89c01c4ef8efe6f9",
        "text": "● Scripts write files by establishing the name and location possibly binding this to standard output of another Script."
      },
      "after": "6096d84973ab91bc",
      "date": 1696722144185
    },
    {
      "type": "add",
      "id": "d321494dd4e29e67",
      "item": {
        "type": "paragraph",
        "id": "d321494dd4e29e67",
        "text": "● Scripts append to files that may be created with the first append. The root of the append follows write conventions. "
      },
      "after": "89c01c4ef8efe6f9",
      "date": 1696722373527
    },
    {
      "type": "fork",
      "site": "search.dojo.fed.wiki",
      "date": 1707734105144
    }
  ]
}