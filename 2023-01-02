{
  "title": "2023-01-02",
  "story": [
    {
      "type": "paragraph",
      "id": "92d81ff4fbe46157",
      "text": "⇒ [[Addressing]] ⇒ [[Escaping Addressing]]"
    },
    {
      "type": "reference",
      "id": "b1c9a40560da0cb8",
      "site": "ward.asia.wiki.org",
      "slug": "escaping-addressing",
      "title": "Escaping Addressing",
      "text": "Address busses works well and are at the heart of both processor and memory design on a variety of scales. Address busses make computers a logical machine for when they are properly clocked we can reason knowing all elements have been considered. But this pattern is rare or nonexistent in nature. Let's understand why."
    },
    {
      "type": "paragraph",
      "id": "9cfd3bcd43a93651",
      "text": "Configuring ACME for DNS validation [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns nixos.org/manual]"
    },
    {
      "type": "markdown",
      "id": "84d063948c5b54cb",
      "text": "* [[generate]] a [[Wildcard Certificate]] for *.dreyeck.ch\n* we will have to configure DNS based validation."
    },
    {
      "type": "reference",
      "id": "4213e40875bf9e40",
      "site": "admin.asia.wiki.org",
      "slug": "dns-wildcard",
      "title": "DNS Wildcard",
      "text": "The internet's domain name system (dns) allows for * to represent all possible subdomains of a given domain name. We use wildcard dns records to direct all subdomains of fed.wiki.org to a single server, a wiki farm."
    },
    {
      "type": "paragraph",
      "id": "4441f87b10e1b4ad",
      "text": "The mechanism that allow readers to [[Submit Changes]] depends on the ability to create subdomains dynamically."
    },
    {
      "type": "markdown",
      "id": "0222f1b1094ce91f",
      "text": "* Professional Support"
    },
    {
      "type": "paragraph",
      "id": "c8a14a0971010a06",
      "text": "BIND 9 Support Subscription [https://www.isc.org/docs/BIND-Support-Subscription.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "1c298af22c56c9ff",
      "text": "* Lego > DNS Providers > RFC2136 [https://go-acme.github.io/lego/dns/rfc2136/ page]"
    },
    {
      "type": "markdown",
      "id": "2b1a6d44161218a5",
      "text": "* [root@dreyeck:/etc/nixos]# journalctl -r"
    },
    {
      "type": "code",
      "id": "51a1fd4c27ca771f",
      "text": "Jan 02 13:37:33 dreyeck named[141827]: /var/db/bind/dreyeck.ch.jnl: create: permission denied"
    },
    {
      "type": "code",
      "id": "35355b25a2d23efe",
      "text": "touch dreyeck.ch.jnl\nchown named dreyeck.ch.jnl"
    },
    {
      "type": "markdown",
      "id": "ad652ad8c0a23089",
      "text": "* acme-selfsigned-ca.service fails #147348 [https://github.com/NixOS/nixpkgs/issues/147348# github]"
    },
    {
      "type": "markdown",
      "id": "93c2a3d8ba397e71",
      "text": "* Nix-dns: A Nix DSL for DNS zone files [https://discourse.nixos.org/t/nix-dns-a-nix-dsl-for-dns-zone-files/2466 page]"
    },
    {
      "type": "markdown",
      "id": "ce583162a681aa69",
      "text": "* Nginx reverse proxy with DNS-01 challenge? [https://www.reddit.com/r/NixOS/comments/r7y5vy/nginx_reverse_proxy_with_dns01_challenge/ reddit]"
    },
    {
      "type": "markdown",
      "id": "ddd658b6b7ee73b2",
      "text": "# Configure ACME"
    },
    {
      "type": "paragraph",
      "id": "bab49d4318979cea",
      "text": "The content of the record is provided by the ACME-endpoint (usually [https://acme-v02.api.letsencrypt.org/ https://acme-v02.api.letsencrypt.org/]). The nixos ACME module uses the lego acme-client internally. This client will collect the nonce from the acme-endpoint and configure it on your primary nameserver via rfc 2136 dns update. Then your primary nameserver may or may not [[notify]] secondary nameservers which will then request the TXT record via zone transfers. Then the resolver letsencrypt (or zerossl/whatever you use) uses will query one of the authoritative nameservers for that record and they will provide it to them. The resolver will forward the record to the system that is validating the record."
    },
    {
      "type": "paragraph",
      "id": "1276b301767d8e80",
      "text": "[https://www.reddit.com/r/NixOS/comments/ti4eaj/configure_acme/ reddit], [https://www.reddit.com/r/NixOS/comments/ti4eaj/configure_acme/i1pc9ii/ reddit]"
    },
    {
      "type": "paragraph",
      "id": "a1bd2a939d1c533b",
      "text": "Dynamic Updates in the Domain Name System (DNS UPDATE) [https://www.rfc-editor.org/rfc/rfc2136 rfc2136]\n"
    },
    {
      "type": "markdown",
      "id": "86f68b9767eb791c",
      "text": "> The [[Domain Name System]] was originally designed to support queries of a statically configured database.  While the data was expected to change, the frequency of those changes was expected to be fairly low, and all updates were made as external edits to a zone's Master File.\n>\n> Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone.  Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR.\n>\n> UPDATE is atomic, i.e., all prerequisites must be satisfied or else no update operations will take place.  There are no data dependent error conditions defined after the prerequisites have been met."
    },
    {
      "type": "paragraph",
      "id": "d32171a2bf9e9d89",
      "text": "Using DNS validation with web server virtual hosts [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns-with-vhosts nixos.org/manual]"
    },
    {
      "type": "code",
      "id": "04b89d18a1cb6e42",
      "text": "systemctl start acme-dreyeck.ch.service & journalctl -fu acme-dreyeck.ch.service"
    },
    {
      "type": "paragraph",
      "id": "45f5abcdc72bc5f9",
      "text": "A Brief History of the DNS and BIND [https://bind9.readthedocs.io/en/v9_18_4/history.html#a-brief-history-of-the-dns-and-bind page]"
    },
    {
      "type": "paragraph",
      "id": "f1ef2d71c07c9d91",
      "text": "Although the Domain Name System “officially” began in 1984 with the publication of RFC 920, the core of the new system was described in 1983 in RFC 882 and RFC 883. From 1984 to 1987, the ARPAnet (the precursor to today’s Internet) became a testbed of experimentation for developing the new naming/addressing scheme in a rapidly expanding, operational network environment. New RFCs were written and published in 1987 that modified the original documents to incorporate improvements based on the working model. RFC 1034, “Domain Names-Concepts and Facilities,” and RFC 1035, “Domain Names-Implementation and Specification,” were published and became the standards upon which all DNS implementations are built.\n\nThe first working domain name server, called “Jeeves,” was written in 1983-84 by Paul Mockapetris for operation on DEC Tops-20 machines located at the University of Southern California’s Information Sciences Institute (USC-ISI) and SRI International’s Network Information Center (SRI-NIC). A DNS server for Unix machines, the Berkeley Internet Name Domain (BIND) package, was written soon after by a group of graduate students at the University of California at Berkeley under a grant from the US Defense Advanced Research Projects Administration (DARPA).\n\nVersions of BIND through 4.8.3 were maintained by the Computer Systems Research Group (CSRG) at UC Berkeley. Douglas Terry, Mark Painter, David Riggle, and Songnian Zhou made up the initial BIND project team. After that, additional work on the software package was done by Ralph Campbell. Kevin Dunlap, a Digital Equipment Corporation employee on loan to the CSRG, worked on BIND for 2 years, from 1985 to 1987. Many other people also contributed to BIND development during that time: Doug Kingston, Craig Partridge, Smoot Carl-Mitchell, Mike Muuss, Jim Bloom, and Mike Schwartz. BIND maintenance was subsequently handled by Mike Karels and Øivind Kure.\n\nBIND versions 4.9 and 4.9.1 were released by Digital Equipment Corporation (which became Compaq Computer Corporation and eventually merged with Hewlett-Packard). Paul Vixie, then a DEC employee, became BIND’s primary caretaker. He was assisted by Phil Almquist, Robert Elz, Alan Barrett, Paul Albitz, Bryan Beecher, Andrew Partan, Andy Cherenson, Tom Limoncelli, Berthold Paffrath, Fuat Baran, Anant Kumar, Art Harkin, Win Treese, Don Lewis, Christophe Wolfhugel, and others.\n\nIn 1994, BIND version 4.9.2 was sponsored by Vixie Enterprises. Paul Vixie became BIND’s principal architect/programmer.\n\nBIND versions from 4.9.3 onward have been developed and maintained by Internet Systems Consortium and its predecessor, the Internet Software Consortium, with support provided by ISC’s sponsors.\n\nAs co-architects/programmers, Bob Halley and Paul Vixie released the first production-ready version of BIND version 8 in May 1997.\n\nBIND version 9 was released in September 2000 and is a major rewrite of nearly all aspects of the underlying BIND architecture.\n\nBIND versions 4 and 8 are officially deprecated. No additional development is done on BIND version 4 or BIND version 8.\n\nBIND development work is made possible today by the sponsorship of corporations who purchase professional support services from ISC (https://www.isc.org/contact/) and/or donate to our mission, and by the tireless efforts of numerous individuals."
    },
    {
      "type": "pagefold",
      "id": "35815294181ccb63",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "17ea1e08c8734c32",
      "site": "forage.ward.fed.wiki.org",
      "slug": "ward--kent-reunion",
      "title": "Ward & Kent Reunion",
      "text": "Ed Roman reminds me ... It's been almost a year since you spoke at hack.summit."
    },
    {
      "type": "markdown",
      "id": "7991a55e23ffe2c7",
      "text": "https://2014.hacksummit.org/#!"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-01-02",
        "story": []
      },
      "date": 1672662092255
    },
    {
      "item": {
        "type": "factory",
        "id": "92d81ff4fbe46157"
      },
      "id": "92d81ff4fbe46157",
      "type": "add",
      "date": 1672662093906
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "Configuring ACME for DNS validation"
      },
      "date": 1672662096517
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "Configuring ACME for DNS validation [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns page]"
      },
      "date": 1672662114668
    },
    {
      "item": {
        "type": "factory",
        "id": "84d063948c5b54cb"
      },
      "id": "84d063948c5b54cb",
      "type": "add",
      "after": "92d81ff4fbe46157",
      "date": 1672662131818
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* generate a wildcard certificate"
      },
      "date": 1672662135507
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* [[generate]] a wildcard certificate"
      },
      "date": 1672662142810
    },
    {
      "type": "fork",
      "date": 1672662166514
    },
    {
      "item": {
        "type": "factory",
        "id": "4213e40875bf9e40"
      },
      "id": "4213e40875bf9e40",
      "type": "add",
      "after": "84d063948c5b54cb",
      "date": 1672662204425
    },
    {
      "type": "edit",
      "id": "4213e40875bf9e40",
      "item": {
        "type": "reference",
        "id": "4213e40875bf9e40",
        "site": "admin.asia.wiki.org",
        "slug": "dns-wildcard",
        "title": "DNS Wildcard",
        "text": "The internet's domain name system (dns) allows for * to represent all possible subdomains of a given domain name. We use wildcard dns records to direct all subdomains of fed.wiki.org to a single server, a wiki farm."
      },
      "date": 1672662207332
    },
    {
      "type": "fork",
      "date": 1672662239613
    },
    {
      "id": "4441f87b10e1b4ad",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4441f87b10e1b4ad",
        "text": "The mechanism that allow readers to [[Submit Changes]] depends on the ability to create subdomains dynamically."
      },
      "after": "4213e40875bf9e40",
      "date": 1672662303143
    },
    {
      "item": {
        "type": "factory",
        "id": "0222f1b1094ce91f"
      },
      "id": "0222f1b1094ce91f",
      "type": "add",
      "after": "4441f87b10e1b4ad",
      "date": 1672662680388
    },
    {
      "type": "edit",
      "id": "0222f1b1094ce91f",
      "item": {
        "type": "markdown",
        "id": "0222f1b1094ce91f",
        "text": "* Professional Support"
      },
      "date": 1672662685486
    },
    {
      "item": {
        "type": "factory",
        "id": "c8a14a0971010a06"
      },
      "id": "c8a14a0971010a06",
      "type": "add",
      "after": "0222f1b1094ce91f",
      "date": 1672662721323
    },
    {
      "type": "edit",
      "id": "c8a14a0971010a06",
      "item": {
        "type": "paragraph",
        "id": "c8a14a0971010a06",
        "text": "[https://www.isc.org/docs/BIND-Support-Subscription.pdf pdf]"
      },
      "date": 1672662736850
    },
    {
      "type": "edit",
      "id": "c8a14a0971010a06",
      "item": {
        "type": "paragraph",
        "id": "c8a14a0971010a06",
        "text": "BIND 9 Support Subscription [https://www.isc.org/docs/BIND-Support-Subscription.pdf pdf]"
      },
      "date": 1672662795051
    },
    {
      "item": {
        "type": "factory",
        "id": "1c298af22c56c9ff"
      },
      "id": "1c298af22c56c9ff",
      "type": "add",
      "after": "c8a14a0971010a06",
      "date": 1672662851770
    },
    {
      "type": "edit",
      "id": "1c298af22c56c9ff",
      "item": {
        "type": "paragraph",
        "id": "1c298af22c56c9ff",
        "text": "Lego > DNS Providers > RFC2136 "
      },
      "date": 1672662866139
    },
    {
      "type": "edit",
      "id": "1c298af22c56c9ff",
      "item": {
        "type": "paragraph",
        "id": "1c298af22c56c9ff",
        "text": "Lego > DNS Providers > RFC2136 [https://go-acme.github.io/lego/dns/rfc2136/ page]"
      },
      "date": 1672662878938
    },
    {
      "item": {
        "type": "factory",
        "id": "51a1fd4c27ca771f"
      },
      "id": "51a1fd4c27ca771f",
      "type": "add",
      "after": "1c298af22c56c9ff",
      "date": 1672663129650
    },
    {
      "type": "edit",
      "id": "51a1fd4c27ca771f",
      "item": {
        "type": "code",
        "id": "51a1fd4c27ca771f",
        "text": "Jan 02 13:37:33 dreyeck named[141827]: /var/db/bind/dreyeck.ch.jnl: create: permission denied"
      },
      "date": 1672663132167
    },
    {
      "type": "add",
      "id": "2b1a6d44161218a5",
      "item": {
        "type": "paragraph",
        "id": "2b1a6d44161218a5",
        "text": "[root@dreyeck:/etc/nixos]# journalctl -r"
      },
      "after": "1c298af22c56c9ff",
      "date": 1672663158438
    },
    {
      "item": {
        "type": "factory",
        "id": "ad652ad8c0a23089"
      },
      "id": "ad652ad8c0a23089",
      "type": "add",
      "after": "51a1fd4c27ca771f",
      "date": 1672663255504
    },
    {
      "type": "edit",
      "id": "ad652ad8c0a23089",
      "item": {
        "type": "paragraph",
        "id": "ad652ad8c0a23089",
        "text": " acme-selfsigned-ca.service fails #147348 "
      },
      "date": 1672663258565
    },
    {
      "type": "edit",
      "id": "ad652ad8c0a23089",
      "item": {
        "type": "paragraph",
        "id": "ad652ad8c0a23089",
        "text": " acme-selfsigned-ca.service fails #147348 [https://github.com/NixOS/nixpkgs/issues/147348# github]"
      },
      "date": 1672663267745
    },
    {
      "type": "edit",
      "id": "ad652ad8c0a23089",
      "item": {
        "type": "paragraph",
        "id": "ad652ad8c0a23089",
        "text": "acme-selfsigned-ca.service fails #147348 [https://github.com/NixOS/nixpkgs/issues/147348# github]"
      },
      "date": 1672663272850
    },
    {
      "type": "edit",
      "id": "ad652ad8c0a23089",
      "item": {
        "type": "paragraph",
        "id": "ad652ad8c0a23089",
        "text": "* acme-selfsigned-ca.service fails #147348 [https://github.com/NixOS/nixpkgs/issues/147348# github]"
      },
      "date": 1672663314965
    },
    {
      "type": "edit",
      "id": "ad652ad8c0a23089",
      "item": {
        "type": "markdown",
        "id": "ad652ad8c0a23089",
        "text": "* acme-selfsigned-ca.service fails #147348 [https://github.com/NixOS/nixpkgs/issues/147348# github]"
      },
      "date": 1672663317344
    },
    {
      "item": {
        "type": "factory",
        "id": "31e5a26fe8ea6c97"
      },
      "id": "31e5a26fe8ea6c97",
      "type": "add",
      "after": "ad652ad8c0a23089",
      "date": 1672663330143
    },
    {
      "type": "edit",
      "id": "31e5a26fe8ea6c97",
      "item": {
        "type": "paragraph",
        "id": "31e5a26fe8ea6c97",
        "text": "https://duckduckgo.com/?t=ffab&q=%22%2Fvar%2Fdb%2Fbind%2F%22+.jnl%3A+create%3A+permission+denied&atb=v342-1&ia=web"
      },
      "date": 1672663331907
    },
    {
      "type": "edit",
      "id": "31e5a26fe8ea6c97",
      "item": {
        "type": "markdown",
        "id": "31e5a26fe8ea6c97",
        "text": "https://duckduckgo.com/?t=ffab&q=%22%2Fvar%2Fdb%2Fbind%2F%22+.jnl%3A+create%3A+permission+denied&atb=v342-1&ia=web"
      },
      "date": 1672663334737
    },
    {
      "id": "31e5a26fe8ea6c97",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089"
      ],
      "date": 1672663337673
    },
    {
      "item": {
        "type": "factory",
        "id": "35815294181ccb63"
      },
      "id": "35815294181ccb63",
      "type": "add",
      "after": "ad652ad8c0a23089",
      "date": 1672676109399
    },
    {
      "type": "edit",
      "id": "35815294181ccb63",
      "item": {
        "type": "pagefold",
        "id": "35815294181ccb63",
        "text": "~"
      },
      "date": 1672676114011
    },
    {
      "item": {
        "type": "factory",
        "id": "17ea1e08c8734c32"
      },
      "id": "17ea1e08c8734c32",
      "type": "add",
      "after": "35815294181ccb63",
      "date": 1672676117490
    },
    {
      "type": "edit",
      "id": "17ea1e08c8734c32",
      "item": {
        "type": "reference",
        "id": "17ea1e08c8734c32",
        "site": "forage.ward.fed.wiki.org",
        "slug": "ward--kent-reunion",
        "title": "Ward & Kent Reunion",
        "text": "Ed Roman reminds me ... It's been almost a year since you spoke at hack.summit."
      },
      "date": 1672676140117
    },
    {
      "item": {
        "type": "factory",
        "id": "7109d9b035cf899f"
      },
      "id": "7109d9b035cf899f",
      "type": "add",
      "after": "17ea1e08c8734c32",
      "date": 1672676274110
    },
    {
      "type": "edit",
      "id": "7109d9b035cf899f",
      "item": {
        "type": "video",
        "id": "7109d9b035cf899f",
        "text": "YOUTUBE ShOMGASbcJ0"
      },
      "date": 1672676279682
    },
    {
      "type": "remove",
      "id": "7109d9b035cf899f",
      "date": 1672676377378
    },
    {
      "item": {
        "type": "factory",
        "id": "7991a55e23ffe2c7"
      },
      "id": "7991a55e23ffe2c7",
      "type": "add",
      "after": "17ea1e08c8734c32",
      "date": 1672676462088
    },
    {
      "type": "edit",
      "id": "7991a55e23ffe2c7",
      "item": {
        "type": "paragraph",
        "id": "7991a55e23ffe2c7",
        "text": "https://2014.hacksummit.org/#!"
      },
      "date": 1672676463690
    },
    {
      "type": "edit",
      "id": "7991a55e23ffe2c7",
      "item": {
        "type": "markdown",
        "id": "7991a55e23ffe2c7",
        "text": "https://2014.hacksummit.org/#!"
      },
      "date": 1672676464836
    },
    {
      "item": {
        "type": "factory",
        "id": "93c2a3d8ba397e71"
      },
      "id": "93c2a3d8ba397e71",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672695005402
    },
    {
      "id": "93c2a3d8ba397e71",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672695008104
    },
    {
      "type": "edit",
      "id": "93c2a3d8ba397e71",
      "item": {
        "type": "paragraph",
        "id": "93c2a3d8ba397e71",
        "text": "Nix-dns: A Nix DSL for DNS zone files"
      },
      "date": 1672695011560
    },
    {
      "type": "edit",
      "id": "93c2a3d8ba397e71",
      "item": {
        "type": "paragraph",
        "id": "93c2a3d8ba397e71",
        "text": "Nix-dns: A Nix DSL for DNS zone files [https://discourse.nixos.org/t/nix-dns-a-nix-dsl-for-dns-zone-files/2466 page]"
      },
      "date": 1672695022358
    },
    {
      "type": "add",
      "id": "ce583162a681aa69",
      "item": {
        "type": "paragraph",
        "id": "ce583162a681aa69",
        "text": "Nginx reverse proxy with DNS-01 challenge?"
      },
      "after": "93c2a3d8ba397e71",
      "date": 1672702848055
    },
    {
      "type": "edit",
      "id": "ce583162a681aa69",
      "item": {
        "type": "paragraph",
        "id": "ce583162a681aa69",
        "text": "Nginx reverse proxy with DNS-01 challenge? [https://www.reddit.com/r/NixOS/comments/r7y5vy/nginx_reverse_proxy_with_dns01_challenge/ reddit]"
      },
      "date": 1672702859430
    },
    {
      "item": {
        "type": "factory",
        "id": "bab49d4318979cea"
      },
      "id": "bab49d4318979cea",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672704899666
    },
    {
      "id": "bab49d4318979cea",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "bab49d4318979cea",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672704901769
    },
    {
      "type": "edit",
      "id": "bab49d4318979cea",
      "item": {
        "type": "paragraph",
        "id": "bab49d4318979cea",
        "text": "The content of the record is provided by the ACME-endpoint (usually https://acme-v02.api.letsencrypt.org/). The nixos ACME module uses the lego acme-client internally. This client will collect the nonce from the acme-endpoint and configure it on your primary nameserver via rfc 2136 dns update. Then your primary nameserver may or may not notify secondary nameservers which will then request the TXT record via zone transfers. Then the resolver letsencrypt (or zerossl/whatever you use) uses will query one of the authoritative nameservers for that record and they will provide it to them. The resolver will forward the record to the system that is validating the record."
      },
      "date": 1672704904547
    },
    {
      "item": {
        "type": "factory",
        "id": "1276b301767d8e80"
      },
      "id": "1276b301767d8e80",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672704926746
    },
    {
      "id": "1276b301767d8e80",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "bab49d4318979cea",
        "35815294181ccb63",
        "1276b301767d8e80",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672704928736
    },
    {
      "id": "1276b301767d8e80",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672704930478
    },
    {
      "type": "edit",
      "id": "1276b301767d8e80",
      "item": {
        "type": "paragraph",
        "id": "1276b301767d8e80",
        "text": "[https://www.reddit.com/r/NixOS/comments/ti4eaj/configure_acme/ reddit]"
      },
      "date": 1672704940875
    },
    {
      "type": "edit",
      "id": "1276b301767d8e80",
      "item": {
        "type": "paragraph",
        "id": "1276b301767d8e80",
        "text": "[https://www.reddit.com/r/NixOS/comments/ti4eaj/configure_acme/ reddit], [https://www.reddit.com/r/NixOS/comments/ti4eaj/configure_acme/i1pc9ii/ reddit]"
      },
      "date": 1672704996225
    },
    {
      "item": {
        "type": "factory",
        "id": "ddd658b6b7ee73b2"
      },
      "id": "ddd658b6b7ee73b2",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672705066984
    },
    {
      "id": "ddd658b6b7ee73b2",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672705071124
    },
    {
      "type": "edit",
      "id": "ddd658b6b7ee73b2",
      "item": {
        "type": "markdown",
        "id": "ddd658b6b7ee73b2",
        "text": "# Configure ACME"
      },
      "date": 1672705075210
    },
    {
      "item": {
        "type": "factory",
        "id": "a1bd2a939d1c533b"
      },
      "id": "a1bd2a939d1c533b",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672705204491
    },
    {
      "id": "a1bd2a939d1c533b",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672705206163
    },
    {
      "type": "edit",
      "id": "a1bd2a939d1c533b",
      "item": {
        "type": "paragraph",
        "id": "a1bd2a939d1c533b",
        "text": "Dynamic Updates in the Domain Name System (DNS UPDATE)\n"
      },
      "date": 1672705211804
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "Configuring ACME for DNS validation [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns nixos.org/manual]"
      },
      "date": 1672705232338
    },
    {
      "type": "add",
      "id": "d32171a2bf9e9d89",
      "item": {
        "type": "paragraph",
        "id": "d32171a2bf9e9d89",
        "text": "Using DNS validation with web server virtual hosts"
      },
      "after": "a1bd2a939d1c533b",
      "date": 1672705311239
    },
    {
      "type": "edit",
      "id": "d32171a2bf9e9d89",
      "item": {
        "type": "paragraph",
        "id": "d32171a2bf9e9d89",
        "text": "Using DNS validation with web server virtual hosts https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns-with-vhosts nixos.org/manual]"
      },
      "date": 1672705325492
    },
    {
      "type": "edit",
      "id": "d32171a2bf9e9d89",
      "item": {
        "type": "paragraph",
        "id": "d32171a2bf9e9d89",
        "text": "Using DNS validation with web server virtual hosts [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns-with-vhosts nixos.org/manual]"
      },
      "date": 1672705355807
    },
    {
      "item": {
        "type": "factory",
        "id": "04b89d18a1cb6e42"
      },
      "id": "04b89d18a1cb6e42",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672705555474
    },
    {
      "id": "04b89d18a1cb6e42",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672705557746
    },
    {
      "type": "edit",
      "id": "04b89d18a1cb6e42",
      "item": {
        "type": "code",
        "id": "04b89d18a1cb6e42",
        "text": "systemctl start acme-dreyeck.ch.service & journalctl -fu acme-dreyeck.ch.service"
      },
      "date": 1672705559795
    },
    {
      "type": "edit",
      "id": "a1bd2a939d1c533b",
      "item": {
        "type": "paragraph",
        "id": "a1bd2a939d1c533b",
        "text": "Dynamic Updates in the Domain Name System (DNS UPDATE) [\n"
      },
      "date": 1672705586028
    },
    {
      "type": "edit",
      "id": "a1bd2a939d1c533b",
      "item": {
        "type": "paragraph",
        "id": "a1bd2a939d1c533b",
        "text": "Dynamic Updates in the Domain Name System (DNS UPDATE) [https://www.rfc-editor.org/rfc/rfc2136 rfc2136]\n"
      },
      "date": 1672705603976
    },
    {
      "item": {
        "type": "factory",
        "id": "86f68b9767eb791c"
      },
      "id": "86f68b9767eb791c",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672705753486
    },
    {
      "id": "86f68b9767eb791c",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "86f68b9767eb791c",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672705757524
    },
    {
      "type": "edit",
      "id": "86f68b9767eb791c",
      "item": {
        "type": "markdown",
        "id": "86f68b9767eb791c",
        "text": "> The Domain Name System was originally designed to support queries of\n   a statically configured database.  While the data was expected to\n   change, the frequency of those changes was expected to be fairly low,\n   and all updates were made as external edits to a zone's Master File.\n\n   Using this specification of the UPDATE opcode, it is possible to add\n   or delete RRs or RRsets from a specified zone.  Prerequisites are\n   specified separately from update operations, and can specify a\n   dependency upon either the previous existence or nonexistence of an\n   RRset, or the existence of a single RR.\n\n   UPDATE is atomic, i.e., all prerequisites must be satisfied or else\n   no update operations will take place.  There are no data dependent\n   error conditions defined after the prerequisites have been met."
      },
      "date": 1672705761550
    },
    {
      "type": "edit",
      "id": "86f68b9767eb791c",
      "item": {
        "type": "markdown",
        "id": "86f68b9767eb791c",
        "text": "> The Domain Name System was originally designed to support queries of a statically configured database.  While the data was expected to change, the frequency of those changes was expected to be fairly low, and all updates were made as external edits to a zone's Master File.\n> Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone.  Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR.\n> UPDATE is atomic, i.e., all prerequisites must be satisfied or else no update operations will take place.  There are no data dependent error conditions defined after the prerequisites have been met."
      },
      "date": 1672705801383
    },
    {
      "type": "edit",
      "id": "86f68b9767eb791c",
      "item": {
        "type": "markdown",
        "id": "86f68b9767eb791c",
        "text": "> The Domain Name System was originally designed to support queries of a statically configured database.  While the data was expected to change, the frequency of those changes was expected to be fairly low, and all updates were made as external edits to a zone's Master File.\n>\n> Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone.  Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR.\n>\n> UPDATE is atomic, i.e., all prerequisites must be satisfied or else no update operations will take place.  There are no data dependent error conditions defined after the prerequisites have been met."
      },
      "date": 1672705855378
    },
    {
      "type": "edit",
      "id": "86f68b9767eb791c",
      "item": {
        "type": "markdown",
        "id": "86f68b9767eb791c",
        "text": "> The [[Domain Name System]] was originally designed to support queries of a statically configured database.  While the data was expected to change, the frequency of those changes was expected to be fairly low, and all updates were made as external edits to a zone's Master File.\n>\n> Using this specification of the UPDATE opcode, it is possible to add or delete RRs or RRsets from a specified zone.  Prerequisites are specified separately from update operations, and can specify a dependency upon either the previous existence or nonexistence of an RRset, or the existence of a single RR.\n>\n> UPDATE is atomic, i.e., all prerequisites must be satisfied or else no update operations will take place.  There are no data dependent error conditions defined after the prerequisites have been met."
      },
      "date": 1672705863918
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* [[generate]] a [[Wildcard Certificate]]"
      },
      "date": 1672706157912
    },
    {
      "item": {
        "type": "factory",
        "id": "35355b25a2d23efe"
      },
      "id": "35355b25a2d23efe",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672706268292
    },
    {
      "id": "35355b25a2d23efe",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "35355b25a2d23efe",
        "31e5a26fe8ea6c97",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "86f68b9767eb791c",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672706273782
    },
    {
      "type": "edit",
      "id": "35355b25a2d23efe",
      "item": {
        "type": "code",
        "id": "35355b25a2d23efe",
        "text": "chown named dreyeck.ch.jnl"
      },
      "date": 1672706276061
    },
    {
      "type": "remove",
      "id": "31e5a26fe8ea6c97",
      "date": 1672706281777
    },
    {
      "type": "edit",
      "id": "35355b25a2d23efe",
      "item": {
        "type": "code",
        "id": "35355b25a2d23efe",
        "text": "touch dreyeck.ch.jnl\nchown named dreyeck.ch.jnl"
      },
      "date": 1672706312387
    },
    {
      "type": "edit",
      "id": "bab49d4318979cea",
      "item": {
        "type": "paragraph",
        "id": "bab49d4318979cea",
        "text": "The content of the record is provided by the ACME-endpoint (usually [https://acme-v02.api.letsencrypt.org/]). The nixos ACME module uses the lego acme-client internally. This client will collect the nonce from the acme-endpoint and configure it on your primary nameserver via rfc 2136 dns update. Then your primary nameserver may or may not notify secondary nameservers which will then request the TXT record via zone transfers. Then the resolver letsencrypt (or zerossl/whatever you use) uses will query one of the authoritative nameservers for that record and they will provide it to them. The resolver will forward the record to the system that is validating the record."
      },
      "date": 1672706573507
    },
    {
      "type": "edit",
      "id": "bab49d4318979cea",
      "item": {
        "type": "paragraph",
        "id": "bab49d4318979cea",
        "text": "The content of the record is provided by the ACME-endpoint (usually [https://acme-v02.api.letsencrypt.org/ https://acme-v02.api.letsencrypt.org/]). The nixos ACME module uses the lego acme-client internally. This client will collect the nonce from the acme-endpoint and configure it on your primary nameserver via rfc 2136 dns update. Then your primary nameserver may or may not notify secondary nameservers which will then request the TXT record via zone transfers. Then the resolver letsencrypt (or zerossl/whatever you use) uses will query one of the authoritative nameservers for that record and they will provide it to them. The resolver will forward the record to the system that is validating the record."
      },
      "date": 1672706589078
    },
    {
      "type": "edit",
      "id": "bab49d4318979cea",
      "item": {
        "type": "paragraph",
        "id": "bab49d4318979cea",
        "text": "The content of the record is provided by the ACME-endpoint (usually [https://acme-v02.api.letsencrypt.org/ https://acme-v02.api.letsencrypt.org/]). The nixos ACME module uses the lego acme-client internally. This client will collect the nonce from the acme-endpoint and configure it on your primary nameserver via rfc 2136 dns update. Then your primary nameserver may or may not [[notify]] secondary nameservers which will then request the TXT record via zone transfers. Then the resolver letsencrypt (or zerossl/whatever you use) uses will query one of the authoritative nameservers for that record and they will provide it to them. The resolver will forward the record to the system that is validating the record."
      },
      "date": 1672706708959
    },
    {
      "type": "edit",
      "id": "93c2a3d8ba397e71",
      "item": {
        "type": "paragraph",
        "id": "93c2a3d8ba397e71",
        "text": "* Nix-dns: A Nix DSL for DNS zone files [https://discourse.nixos.org/t/nix-dns-a-nix-dsl-for-dns-zone-files/2466 page]"
      },
      "date": 1672708011285
    },
    {
      "type": "edit",
      "id": "93c2a3d8ba397e71",
      "item": {
        "type": "markdown",
        "id": "93c2a3d8ba397e71",
        "text": "* Nix-dns: A Nix DSL for DNS zone files [https://discourse.nixos.org/t/nix-dns-a-nix-dsl-for-dns-zone-files/2466 page]"
      },
      "date": 1672708012441
    },
    {
      "type": "edit",
      "id": "ce583162a681aa69",
      "item": {
        "type": "paragraph",
        "id": "ce583162a681aa69",
        "text": "* Nginx reverse proxy with DNS-01 challenge? [https://www.reddit.com/r/NixOS/comments/r7y5vy/nginx_reverse_proxy_with_dns01_challenge/ reddit]"
      },
      "date": 1672708016650
    },
    {
      "type": "edit",
      "id": "ce583162a681aa69",
      "item": {
        "type": "markdown",
        "id": "ce583162a681aa69",
        "text": "* Nginx reverse proxy with DNS-01 challenge? [https://www.reddit.com/r/NixOS/comments/r7y5vy/nginx_reverse_proxy_with_dns01_challenge/ reddit]"
      },
      "date": 1672708018730
    },
    {
      "type": "edit",
      "id": "1c298af22c56c9ff",
      "item": {
        "type": "paragraph",
        "id": "1c298af22c56c9ff",
        "text": "* Lego > DNS Providers > RFC2136 [https://go-acme.github.io/lego/dns/rfc2136/ page]"
      },
      "date": 1672714585101
    },
    {
      "type": "edit",
      "id": "1c298af22c56c9ff",
      "item": {
        "type": "markdown",
        "id": "1c298af22c56c9ff",
        "text": "* Lego > DNS Providers > RFC2136 [https://go-acme.github.io/lego/dns/rfc2136/ page]"
      },
      "date": 1672714586598
    },
    {
      "type": "edit",
      "id": "2b1a6d44161218a5",
      "item": {
        "type": "paragraph",
        "id": "2b1a6d44161218a5",
        "text": "* [root@dreyeck:/etc/nixos]# journalctl -r"
      },
      "date": 1672714591727
    },
    {
      "type": "edit",
      "id": "2b1a6d44161218a5",
      "item": {
        "type": "markdown",
        "id": "2b1a6d44161218a5",
        "text": "* [root@dreyeck:/etc/nixos]# journalctl -r"
      },
      "date": 1672714593359
    },
    {
      "item": {
        "type": "factory",
        "id": "45f5abcdc72bc5f9"
      },
      "id": "45f5abcdc72bc5f9",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672714959215
    },
    {
      "id": "45f5abcdc72bc5f9",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "35355b25a2d23efe",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "86f68b9767eb791c",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "45f5abcdc72bc5f9",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672714961040
    },
    {
      "type": "edit",
      "id": "45f5abcdc72bc5f9",
      "item": {
        "type": "paragraph",
        "id": "45f5abcdc72bc5f9",
        "text": "A Brief History of the DNS and BIND "
      },
      "date": 1672714967487
    },
    {
      "type": "edit",
      "id": "45f5abcdc72bc5f9",
      "item": {
        "type": "paragraph",
        "id": "45f5abcdc72bc5f9",
        "text": "A Brief History of the DNS and BIND [https://bind9.readthedocs.io/en/v9_18_4/history.html#a-brief-history-of-the-dns-and-bind page]"
      },
      "date": 1672714982088
    },
    {
      "item": {
        "type": "factory",
        "id": "f1ef2d71c07c9d91"
      },
      "id": "f1ef2d71c07c9d91",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672715466274
    },
    {
      "id": "f1ef2d71c07c9d91",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "35355b25a2d23efe",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "86f68b9767eb791c",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "45f5abcdc72bc5f9",
        "f1ef2d71c07c9d91",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672715468871
    },
    {
      "type": "edit",
      "id": "f1ef2d71c07c9d91",
      "item": {
        "type": "paragraph",
        "id": "f1ef2d71c07c9d91",
        "text": "Although the Domain Name System “officially” began in 1984 with the publication of RFC 920, the core of the new system was described in 1983 in RFC 882 and RFC 883. From 1984 to 1987, the ARPAnet (the precursor to today’s Internet) became a testbed of experimentation for developing the new naming/addressing scheme in a rapidly expanding, operational network environment. New RFCs were written and published in 1987 that modified the original documents to incorporate improvements based on the working model. RFC 1034, “Domain Names-Concepts and Facilities,” and RFC 1035, “Domain Names-Implementation and Specification,” were published and became the standards upon which all DNS implementations are built.\n\nThe first working domain name server, called “Jeeves,” was written in 1983-84 by Paul Mockapetris for operation on DEC Tops-20 machines located at the University of Southern California’s Information Sciences Institute (USC-ISI) and SRI International’s Network Information Center (SRI-NIC). A DNS server for Unix machines, the Berkeley Internet Name Domain (BIND) package, was written soon after by a group of graduate students at the University of California at Berkeley under a grant from the US Defense Advanced Research Projects Administration (DARPA).\n\nVersions of BIND through 4.8.3 were maintained by the Computer Systems Research Group (CSRG) at UC Berkeley. Douglas Terry, Mark Painter, David Riggle, and Songnian Zhou made up the initial BIND project team. After that, additional work on the software package was done by Ralph Campbell. Kevin Dunlap, a Digital Equipment Corporation employee on loan to the CSRG, worked on BIND for 2 years, from 1985 to 1987. Many other people also contributed to BIND development during that time: Doug Kingston, Craig Partridge, Smoot Carl-Mitchell, Mike Muuss, Jim Bloom, and Mike Schwartz. BIND maintenance was subsequently handled by Mike Karels and Øivind Kure.\n\nBIND versions 4.9 and 4.9.1 were released by Digital Equipment Corporation (which became Compaq Computer Corporation and eventually merged with Hewlett-Packard). Paul Vixie, then a DEC employee, became BIND’s primary caretaker. He was assisted by Phil Almquist, Robert Elz, Alan Barrett, Paul Albitz, Bryan Beecher, Andrew Partan, Andy Cherenson, Tom Limoncelli, Berthold Paffrath, Fuat Baran, Anant Kumar, Art Harkin, Win Treese, Don Lewis, Christophe Wolfhugel, and others.\n\nIn 1994, BIND version 4.9.2 was sponsored by Vixie Enterprises. Paul Vixie became BIND’s principal architect/programmer.\n\nBIND versions from 4.9.3 onward have been developed and maintained by Internet Systems Consortium and its predecessor, the Internet Software Consortium, with support provided by ISC’s sponsors.\n\nAs co-architects/programmers, Bob Halley and Paul Vixie released the first production-ready version of BIND version 8 in May 1997.\n\nBIND version 9 was released in September 2000 and is a major rewrite of nearly all aspects of the underlying BIND architecture.\n\nBIND versions 4 and 8 are officially deprecated. No additional development is done on BIND version 4 or BIND version 8.\n\nBIND development work is made possible today by the sponsorship of corporations who purchase professional support services from ISC (https://www.isc.org/contact/) and/or donate to our mission, and by the tireless efforts of numerous individuals."
      },
      "date": 1672715470986
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "⇒ [[Addressing]]"
      },
      "date": 1672744939800
    },
    {
      "type": "add",
      "id": "9cfd3bcd43a93651",
      "item": {
        "type": "paragraph",
        "id": "9cfd3bcd43a93651",
        "text": "Configuring ACME for DNS validation [https://nixos.org/manual/nixos/stable/index.html#module-security-acme-config-dns nixos.org/manual]"
      },
      "after": "92d81ff4fbe46157",
      "date": 1672744940538
    },
    {
      "item": {
        "type": "factory",
        "id": "b1c9a40560da0cb8"
      },
      "id": "b1c9a40560da0cb8",
      "type": "add",
      "after": "7991a55e23ffe2c7",
      "date": 1672745316242
    },
    {
      "id": "b1c9a40560da0cb8",
      "type": "move",
      "order": [
        "92d81ff4fbe46157",
        "b1c9a40560da0cb8",
        "9cfd3bcd43a93651",
        "84d063948c5b54cb",
        "4213e40875bf9e40",
        "4441f87b10e1b4ad",
        "0222f1b1094ce91f",
        "c8a14a0971010a06",
        "1c298af22c56c9ff",
        "2b1a6d44161218a5",
        "51a1fd4c27ca771f",
        "35355b25a2d23efe",
        "ad652ad8c0a23089",
        "93c2a3d8ba397e71",
        "ce583162a681aa69",
        "ddd658b6b7ee73b2",
        "bab49d4318979cea",
        "1276b301767d8e80",
        "a1bd2a939d1c533b",
        "86f68b9767eb791c",
        "d32171a2bf9e9d89",
        "04b89d18a1cb6e42",
        "45f5abcdc72bc5f9",
        "f1ef2d71c07c9d91",
        "35815294181ccb63",
        "17ea1e08c8734c32",
        "7991a55e23ffe2c7"
      ],
      "date": 1672745328200
    },
    {
      "type": "edit",
      "id": "b1c9a40560da0cb8",
      "item": {
        "type": "reference",
        "id": "b1c9a40560da0cb8",
        "site": "ward.asia.wiki.org",
        "slug": "escaping-addressing",
        "title": "Escaping Addressing",
        "text": "Address busses works well and are at the heart of both processor and memory design on a variety of scales. Address busses make computers a logical machine for when they are properly clocked we can reason knowing all elements have been considered. But this pattern is rare or nonexistent in nature. Let's understand why."
      },
      "date": 1672745336372
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "⇒ [[Addressing]] "
      },
      "date": 1672767260941
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "⇒ [[Addressing]] ⇒ [[AEscaping Addressing]]"
      },
      "date": 1672782522796
    },
    {
      "type": "edit",
      "id": "92d81ff4fbe46157",
      "item": {
        "type": "paragraph",
        "id": "92d81ff4fbe46157",
        "text": "⇒ [[Addressing]] ⇒ [[Escaping Addressing]]"
      },
      "date": 1672782530140
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* [[generate]] a [[Wildcard Certificate]] for *.dreyeck.ch"
      },
      "date": 1672836060464
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* [[generate]] a [[Wildcard Certificate]] for *.dreyeck.ch\n* we will have to configure DNS\n  based validation."
      },
      "date": 1672837700501
    },
    {
      "type": "edit",
      "id": "84d063948c5b54cb",
      "item": {
        "type": "markdown",
        "id": "84d063948c5b54cb",
        "text": "* [[generate]] a [[Wildcard Certificate]] for *.dreyeck.ch\n* we will have to configure DNS based validation."
      },
      "date": 1672837705484
    }
  ]
}