{
  "title": "JSONSchema",
  "story": [
    {
      "type": "paragraph",
      "id": "31fce5c13e4ac4d4",
      "text": "A yet incomplete (but working in its scope) implementation of JSON Schema is provided by Zweidenker on [https://github.com/zweidenker/JSONSchema github]."
    },
    {
      "type": "paragraph",
      "id": "68a31cfa1d499a37",
      "text": "This is an implementation of [[JSON Schema]] for the pharo language. It is used to define the structure and values of a JSON string and to validate it. The schema itself can be externalized for being consumed by a third party.\n\nDISCLAIMER: This is not a full implementation of the json schema spec. Basic types and constraints should work. If you need support for something not implemented you are invited to provide a pull request for it. If you cannot develop it you still can open a ticket in this repository\n\nIt can be loaded by downloading it in pharo via"
    },
    {
      "type": "code",
      "id": "d69c3122cdd8f5a1",
      "text": "  Metacello new\n    repository: 'github://zweidenker/JSONSchema';\n    baseline: #JSONSchema;\n    load"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "JSONSchema",
        "story": []
      },
      "date": 1640018960372
    },
    {
      "item": {
        "type": "factory",
        "id": "31fce5c13e4ac4d4"
      },
      "id": "31fce5c13e4ac4d4",
      "type": "add",
      "date": 1640018962218
    },
    {
      "type": "edit",
      "id": "31fce5c13e4ac4d4",
      "item": {
        "type": "paragraph",
        "id": "31fce5c13e4ac4d4",
        "text": "A yet incomplete (but working in its scope) implementation of JSON Schema is provided by Zweidenker on github."
      },
      "date": 1640018966176
    },
    {
      "type": "edit",
      "id": "31fce5c13e4ac4d4",
      "item": {
        "type": "paragraph",
        "id": "31fce5c13e4ac4d4",
        "text": "A yet incomplete (but working in its scope) implementation of JSON Schema is provided by Zweidenker on [https://github.com/zweidenker/JSONSchema github]."
      },
      "date": 1640018982754
    },
    {
      "item": {
        "type": "factory",
        "id": "68a31cfa1d499a37"
      },
      "id": "68a31cfa1d499a37",
      "type": "add",
      "after": "31fce5c13e4ac4d4",
      "date": 1640019023708
    },
    {
      "type": "edit",
      "id": "68a31cfa1d499a37",
      "item": {
        "type": "paragraph",
        "id": "68a31cfa1d499a37",
        "text": "This is an implementation of JSON Schema for the pharo language. It is used to define the structure and values of a JSON string and to validate it. The schema itself can be externalized for being consumed by a third party.\n\nDISCLAIMER: This is not a full implementation of the json schema spec. Basic types and constraints should work. If you need support for something not implemented you are invited to provide a pull request for it. If you cannot develop it you still can open a ticket in this repository\n\nIt can be loaded by downloading it in pharo via"
      },
      "date": 1640019026031
    },
    {
      "item": {
        "type": "factory",
        "id": "d69c3122cdd8f5a1"
      },
      "id": "d69c3122cdd8f5a1",
      "type": "add",
      "after": "68a31cfa1d499a37",
      "date": 1640019036874
    },
    {
      "type": "edit",
      "id": "d69c3122cdd8f5a1",
      "item": {
        "type": "code",
        "id": "d69c3122cdd8f5a1",
        "text": "  Metacello new\n    repository: 'github://zweidenker/JSONSchema';\n    baseline: #JSONSchema;\n    load"
      },
      "date": 1640019040145
    },
    {
      "type": "edit",
      "id": "68a31cfa1d499a37",
      "item": {
        "type": "paragraph",
        "id": "68a31cfa1d499a37",
        "text": "This is an implementation of [[JSON Schema]] for the pharo language. It is used to define the structure and values of a JSON string and to validate it. The schema itself can be externalized for being consumed by a third party.\n\nDISCLAIMER: This is not a full implementation of the json schema spec. Basic types and constraints should work. If you need support for something not implemented you are invited to provide a pull request for it. If you cannot develop it you still can open a ticket in this repository\n\nIt can be loaded by downloading it in pharo via"
      },
      "date": 1640019076704
    }
  ]
}