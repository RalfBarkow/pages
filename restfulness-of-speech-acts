{
  "title": "RESTfulness of Speech Acts",
  "story": [
    {
      "type": "paragraph",
      "id": "0f4fafe47ccccd6b",
      "text": "⇒ [[REST API]] ⇒ [[Speech Acts]] ⇒ The RESTfulness of Speech Acts. [https://web.archive.org/web/20170424134126/https://www.manageability.org/blog/stuff/the-restfulness-of-speech-acts/view wayback]"
    },
    {
      "type": "paragraph",
      "id": "dcbd7621337823cb",
      "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me ([[Carlos E. Perez]]) as subset of Speech Acts. ⇒ [[Speech Acts]], REST and Method Classification [https://web.archive.org/web/20160514031839/http://www.manageability.org/blog/archive/20021025%23speech_acts_and_rest/view archive]"
    },
    {
      "type": "paragraph",
      "id": "f6a9960d7d44e006",
      "text": "However, I never had the time to really think of precisely what that subset was. "
    },
    {
      "type": "paragraph",
      "id": "7f5e2ddfdda77ad3",
      "text": "Fortunately, [[Bob Haugen]] in one of the comments pointed me to this gem of an paper. [https://people.dsv.su.se/~prasad/Publications/WorkInProgress20021129BP2.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "ffb170197d157e74",
      "text": "The authors propose any “pragmatic action” as a triple. A triple that involves an [[Intention]], an [[Action]] and an [[Object]]. "
    },
    {
      "type": "paragraph",
      "id": "1390b1c391c7928f",
      "text": "The intentions are propose, accept, reject, declare, query, reply, assert (i.e. Illocutionary). The actions are create, change, cancel, none (i.e. Perlocutionary). The objects are Agreement, EconomicContract,\nEconomicComitment, and EconomicEvent. The paper is slanted toward supporting business based messaging, however we can take the liberty of generalizing it a bit.\n\nThe interesting thing to notice is how the action parts seem to neatly match the verbs found in REST. That is PUT=create, POST=change, DELETE=cancel and GET=none.\n\nWith these triples you can build up several business transaction patterns: "
    },
    {
      "type": "paragraph",
      "id": "5903639c949244cd",
      "text": "        Commercial Transaction Pattern – Requesting activity carries the pragmatic action (Propose, Create, aContract),\n        Responding activity carries the pragmatic action (Accept, Create, aContract),\n        OR Responding activity carries the pragmatic action (Reject, Create, aContract).\n        "
    },
    {
      "type": "paragraph",
      "id": "1a0bb87b06b11a06",
      "text": "Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        "
    },
    {
      "type": "paragraph",
      "id": "15a73fb495c6c782",
      "text": "Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        "
    },
    {
      "type": "paragraph",
      "id": "4cf15eaebda34fb3",
      "text": "Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        "
    },
    {
      "type": "paragraph",
      "id": "592b61ee747f3407",
      "text": "Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        "
    },
    {
      "type": "paragraph",
      "id": "36bf84ef5059889b",
      "text": "Notification Pattern – (Declare, Create, aComittment/aContract)\n\n"
    },
    {
      "type": "paragraph",
      "id": "a83d43b33c1c5331",
      "text": "So, if we adopt REST’s existing structure where the action part is contained in the envelope. It like inverting the Speech Act hierarchy (i.e. Perlocutionary -> Illocutionary -> Propositional -> Utterances ). Then everything really matches elegantly. The REST verbs are Perlocutionary utterances (i.e. intention to affect behavior). The REST resources are the Illocutionary (the intention to interact) and Propositional utterances (references to other things). "
    },
    {
      "type": "paragraph",
      "id": "0e7d3b3df6fa8b0a",
      "text": "The REST Architectural style in essence encompases in a very clean way the Theory of Speech Acts. Hard to get any more elegant than that!"
    },
    {
      "type": "pagefold",
      "id": "d59c9de62bf91cd4",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "e5f638ef56473107",
      "text": "\nBERGHOLTZ, Maria, JAYAWEERA, Prasad and JOHANNESSON, Paul, [no date]. Bringing Speech Acts into UMM. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "RESTfulness of Speech Acts",
        "story": []
      },
      "date": 1674474362631
    },
    {
      "id": "0f4fafe47ccccd6b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0f4fafe47ccccd6b",
        "text": "⇒ [[REST API]] ⇒ [[Speech Acts]] ⇒ The [[RESTfulness of Speech Acts]]. [https://web.archive.org/web/20170424134126/https://www.manageability.org/blog/stuff/the-restfulness-of-speech-acts/view wayback]"
      },
      "date": 1674474367141
    },
    {
      "type": "edit",
      "id": "0f4fafe47ccccd6b",
      "item": {
        "type": "paragraph",
        "id": "0f4fafe47ccccd6b",
        "text": "⇒ [[REST API]] ⇒ [[Speech Acts]] ⇒ The RESTfulness of Speech Acts. [https://web.archive.org/web/20170424134126/https://www.manageability.org/blog/stuff/the-restfulness-of-speech-acts/view wayback]"
      },
      "date": 1674474374403
    },
    {
      "item": {
        "type": "factory",
        "id": "dcbd7621337823cb"
      },
      "id": "dcbd7621337823cb",
      "type": "add",
      "after": "0f4fafe47ccccd6b",
      "date": 1674474394280
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me as subset of Speech Acts. However, I never had the time to really think of precisely what that subset was. "
      },
      "date": 1674474395841
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me as subset of Speech Acts."
      },
      "date": 1674474483935
    },
    {
      "type": "add",
      "id": "f6a9960d7d44e006",
      "item": {
        "type": "paragraph",
        "id": "f6a9960d7d44e006",
        "text": "However, I never had the time to really think of precisely what that subset was. "
      },
      "after": "dcbd7621337823cb",
      "date": 1674474488127
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me as subset of Speech Acts. ⇒ Speech Acts, REST and Method Classification "
      },
      "date": 1674474499625
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me as subset of Speech Acts. ⇒ Speech Acts, REST and Method Classification [https://web.archive.org/web/20160514031839/http://www.manageability.org/blog/archive/20021025%23speech_acts_and_rest/view archive]"
      },
      "date": 1674474535380
    },
    {
      "item": {
        "type": "factory",
        "id": "7f5e2ddfdda77ad3"
      },
      "id": "7f5e2ddfdda77ad3",
      "type": "add",
      "after": "f6a9960d7d44e006",
      "date": 1674474551009
    },
    {
      "type": "edit",
      "id": "7f5e2ddfdda77ad3",
      "item": {
        "type": "paragraph",
        "id": "7f5e2ddfdda77ad3",
        "text": "Fortunately, Bob Haugen in one of the comments pointed me to this gem of an paper. The authors propose any “pragmatic action” as a triple. A triple that involves an intention, an action and a object. "
      },
      "date": 1674474552963
    },
    {
      "type": "edit",
      "id": "7f5e2ddfdda77ad3",
      "item": {
        "type": "paragraph",
        "id": "7f5e2ddfdda77ad3",
        "text": "Fortunately, [[Bob Haugen]] in one of the comments pointed me to this gem of an paper. The authors propose any “pragmatic action” as a triple. A triple that involves an intention, an action and a object. "
      },
      "date": 1674474560957
    },
    {
      "type": "edit",
      "id": "7f5e2ddfdda77ad3",
      "item": {
        "type": "paragraph",
        "id": "7f5e2ddfdda77ad3",
        "text": "Fortunately, [[Bob Haugen]] in one of the comments pointed me to this gem of an paper. [https://people.dsv.su.se/~prasad/Publications/WorkInProgress20021129BP2.pdf pdf]"
      },
      "date": 1674474601083
    },
    {
      "type": "add",
      "id": "ffb170197d157e74",
      "item": {
        "type": "paragraph",
        "id": "ffb170197d157e74",
        "text": "The authors propose any “pragmatic action” as a triple. A triple that involves an intention, an action and a object. "
      },
      "after": "7f5e2ddfdda77ad3",
      "date": 1674474601595
    },
    {
      "item": {
        "type": "factory",
        "id": "1390b1c391c7928f"
      },
      "id": "1390b1c391c7928f",
      "type": "add",
      "after": "ffb170197d157e74",
      "date": 1674474708556
    },
    {
      "type": "edit",
      "id": "1390b1c391c7928f",
      "item": {
        "type": "paragraph",
        "id": "1390b1c391c7928f",
        "text": "he intentions are propose, accept, reject, declare, query, reply, assert (i.e. Illocutionary). The actions are create, change, cancel, none (i.e. Perlocutionary). The objects are Agreement, EconomicContract,\nEconomicComitment, and EconomicEvent. The paper is slanted toward supporting business based messaging, however we can take the liberty of generalizing it a bit.\n\nThe interesting thing to notice is how the action parts seem to neatly match the verbs found in REST. That is PUT=create, POST=change, DELETE=cancel and GET=none.\n\nWith these triples you can build up several business transaction patterns: […]"
      },
      "date": 1674474712885
    },
    {
      "type": "edit",
      "id": "1390b1c391c7928f",
      "item": {
        "type": "paragraph",
        "id": "1390b1c391c7928f",
        "text": "The intentions are propose, accept, reject, declare, query, reply, assert (i.e. Illocutionary). The actions are create, change, cancel, none (i.e. Perlocutionary). The objects are Agreement, EconomicContract,\nEconomicComitment, and EconomicEvent. The paper is slanted toward supporting business based messaging, however we can take the liberty of generalizing it a bit.\n\nThe interesting thing to notice is how the action parts seem to neatly match the verbs found in REST. That is PUT=create, POST=change, DELETE=cancel and GET=none.\n\nWith these triples you can build up several business transaction patterns: […]"
      },
      "date": 1674474718709
    },
    {
      "type": "edit",
      "id": "ffb170197d157e74",
      "item": {
        "type": "paragraph",
        "id": "ffb170197d157e74",
        "text": "The authors propose any “pragmatic action” as a triple. A triple that involves an [[Intention]], an [[Action]] and an [[Object]]. "
      },
      "date": 1674475059060
    },
    {
      "type": "edit",
      "id": "1390b1c391c7928f",
      "item": {
        "type": "paragraph",
        "id": "1390b1c391c7928f",
        "text": "The intentions are propose, accept, reject, declare, query, reply, assert (i.e. Illocutionary). The actions are create, change, cancel, none (i.e. Perlocutionary). The objects are Agreement, EconomicContract,\nEconomicComitment, and EconomicEvent. The paper is slanted toward supporting business based messaging, however we can take the liberty of generalizing it a bit.\n\nThe interesting thing to notice is how the action parts seem to neatly match the verbs found in REST. That is PUT=create, POST=change, DELETE=cancel and GET=none.\n\nWith these triples you can build up several business transaction patterns: "
      },
      "date": 1674475120895
    },
    {
      "type": "add",
      "id": "5903639c949244cd",
      "item": {
        "type": "paragraph",
        "id": "5903639c949244cd",
        "text": "\n\n        Commercial Transaction Pattern – Requesting activity carries the pragmatic action (Propose, Create, aContract),\n        Responding activity carries the pragmatic action (Accept, Create, aContract),\n        OR Responding activity carries the pragmatic action (Reject, Create, aContract).\n        Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        Notification Pattern – (Declare, Create, aComittment/aContract)\n\n"
      },
      "after": "1390b1c391c7928f",
      "date": 1674475121917
    },
    {
      "type": "add",
      "id": "a83d43b33c1c5331",
      "item": {
        "type": "paragraph",
        "id": "a83d43b33c1c5331",
        "text": "[…]"
      },
      "after": "5903639c949244cd",
      "date": 1674475122869
    },
    {
      "type": "edit",
      "id": "5903639c949244cd",
      "item": {
        "type": "paragraph",
        "id": "5903639c949244cd",
        "text": "\n        Commercial Transaction Pattern – Requesting activity carries the pragmatic action (Propose, Create, aContract),\n        Responding activity carries the pragmatic action (Accept, Create, aContract),\n        OR Responding activity carries the pragmatic action (Reject, Create, aContract).\n        Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        Notification Pattern – (Declare, Create, aComittment/aContract)\n\n"
      },
      "date": 1674475130910
    },
    {
      "type": "edit",
      "id": "5903639c949244cd",
      "item": {
        "type": "paragraph",
        "id": "5903639c949244cd",
        "text": "        Commercial Transaction Pattern – Requesting activity carries the pragmatic action (Propose, Create, aContract),\n        Responding activity carries the pragmatic action (Accept, Create, aContract),\n        OR Responding activity carries the pragmatic action (Reject, Create, aContract).\n        "
      },
      "date": 1674475146050
    },
    {
      "type": "add",
      "id": "1a0bb87b06b11a06",
      "item": {
        "type": "paragraph",
        "id": "1a0bb87b06b11a06",
        "text": "Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        "
      },
      "after": "5903639c949244cd",
      "date": 1674475152817
    },
    {
      "type": "add",
      "id": "36bf84ef5059889b",
      "item": {
        "type": "paragraph",
        "id": "36bf84ef5059889b",
        "text": "Notification Pattern – (Declare, Create, aComittment/aContract)\n\n"
      },
      "after": "1a0bb87b06b11a06",
      "date": 1674475154989
    },
    {
      "type": "edit",
      "id": "1a0bb87b06b11a06",
      "item": {
        "type": "paragraph",
        "id": "1a0bb87b06b11a06",
        "text": "Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        "
      },
      "date": 1674475164798
    },
    {
      "type": "add",
      "id": "4cf15eaebda34fb3",
      "item": {
        "type": "paragraph",
        "id": "4cf15eaebda34fb3",
        "text": "Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        "
      },
      "after": "1a0bb87b06b11a06",
      "date": 1674475167434
    },
    {
      "type": "edit",
      "id": "1a0bb87b06b11a06",
      "item": {
        "type": "paragraph",
        "id": "1a0bb87b06b11a06",
        "text": "Query/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject)\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        "
      },
      "date": 1674475171073
    },
    {
      "type": "add",
      "id": "15a73fb495c6c782",
      "item": {
        "type": "paragraph",
        "id": "15a73fb495c6c782",
        "text": "Request/Response Pattern – Requesting activity carries the pragmatic action (Query, None, anyObject),\n        Responding activity carries the pragmatic action (Reply, None, anyObject).\n        "
      },
      "after": "1a0bb87b06b11a06",
      "date": 1674475193829
    },
    {
      "type": "edit",
      "id": "4cf15eaebda34fb3",
      "item": {
        "type": "paragraph",
        "id": "4cf15eaebda34fb3",
        "text": "Request/Confirm Pattern – Requesting activity carries the pragmatic action (Query, None, aComittment/aContract),\n        Responding activity carries the pragmatic action (Reply, None, aComittment/aContract).\n        "
      },
      "date": 1674475202087
    },
    {
      "type": "add",
      "id": "592b61ee747f3407",
      "item": {
        "type": "paragraph",
        "id": "592b61ee747f3407",
        "text": "Information Distribution Pattern – Requesting activity carries the pragmatic action (Assert, None, anyObject),\n        Responding activity carries no pragmatic action.\n        "
      },
      "after": "4cf15eaebda34fb3",
      "date": 1674475202639
    },
    {
      "type": "edit",
      "id": "a83d43b33c1c5331",
      "item": {
        "type": "paragraph",
        "id": "a83d43b33c1c5331",
        "text": "So, if we adopt REST’s existing structure where the action part is contained in the envelope. It like inverting the Speech Act hierarchy (i.e. Perlocutionary -> Illocutionary -> Propositional -> Utterances ). Then everything really matches elegantly. The REST verbs are Perlocutionary utterances (i.e. intention to affect behavior). The REST resources are the Illocutionary (the intention to interact) and Propositional utterances (references to other things). "
      },
      "date": 1674475216810
    },
    {
      "type": "add",
      "id": "0e7d3b3df6fa8b0a",
      "item": {
        "type": "paragraph",
        "id": "0e7d3b3df6fa8b0a",
        "text": "[…]"
      },
      "after": "a83d43b33c1c5331",
      "date": 1674475217533
    },
    {
      "type": "edit",
      "id": "0e7d3b3df6fa8b0a",
      "item": {
        "type": "paragraph",
        "id": "0e7d3b3df6fa8b0a",
        "text": "The REST Architectural style in essence encompases in a very clean way the Theory of Speech Acts. Hard to get any more elegant than that!"
      },
      "date": 1674475244887
    },
    {
      "item": {
        "type": "factory",
        "id": "d59c9de62bf91cd4"
      },
      "id": "d59c9de62bf91cd4",
      "type": "add",
      "after": "0e7d3b3df6fa8b0a",
      "date": 1692759929844
    },
    {
      "type": "edit",
      "id": "d59c9de62bf91cd4",
      "item": {
        "type": "pagefold",
        "id": "d59c9de62bf91cd4",
        "text": "~"
      },
      "date": 1692759933394
    },
    {
      "item": {
        "type": "factory",
        "id": "e5f638ef56473107"
      },
      "id": "e5f638ef56473107",
      "type": "add",
      "after": "d59c9de62bf91cd4",
      "date": 1692759934948
    },
    {
      "type": "edit",
      "id": "e5f638ef56473107",
      "item": {
        "type": "paragraph",
        "id": "e5f638ef56473107",
        "text": "\nBERGHOLTZ, Maria, JAYAWEERA, Prasad and JOHANNESSON, Paul, [no date]. Bringing Speech Acts into UMM. \n"
      },
      "date": 1692759937726
    },
    {
      "type": "fork",
      "date": 1700739977213
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me ([[Carlos E. Perez]] as subset of Speech Acts. ⇒ Speech Acts, REST and Method Classification [https://web.archive.org/web/20160514031839/http://www.manageability.org/blog/archive/20021025%23speech_acts_and_rest/view archive]"
      },
      "date": 1700739984446
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me ([[Carlos E. Perez]]) as subset of Speech Acts. ⇒ Speech Acts, REST and Method Classification [https://web.archive.org/web/20160514031839/http://www.manageability.org/blog/archive/20021025%23speech_acts_and_rest/view archive]"
      },
      "date": 1700739997095
    },
    {
      "type": "edit",
      "id": "dcbd7621337823cb",
      "item": {
        "type": "paragraph",
        "id": "dcbd7621337823cb",
        "text": "The four verbs of REST (i.e. GET, POST, PUT, DELETE ) have always seemed to me ([[Carlos E. Perez]]) as subset of Speech Acts. ⇒ [[Speech Acts]], REST and Method Classification [https://web.archive.org/web/20160514031839/http://www.manageability.org/blog/archive/20021025%23speech_acts_and_rest/view archive]"
      },
      "date": 1700740013957
    }
  ]
}