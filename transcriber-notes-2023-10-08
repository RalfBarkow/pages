{
  "title": "Transcriber Notes 2023-10-08",
  "story": [
    {
      "type": "paragraph",
      "id": "551afe7c2e042cf7",
      "text": "See [[Typescript 2023-10-08]], [[Typescript Index 2023-10-08]], also [[Typescript Transcripts]]."
    },
    {
      "type": "paragraph",
      "id": "0ace01935d1a5f43",
      "text": "Highlights from today:"
    },
    {
      "type": "paragraph",
      "id": "c45efb754fc46ba1",
      "text": "Ward unpacks some details of Federation Search and the choices which motivated the original set of scripts, and then how those scripts were adapted, annotated, and documented in the process of speeding up the federation search index updates so that federation search is timely and useful. In the process of speeding up the site content scraping and handling slow-start Glitch hosted wikis, new capabilities were added and things were learned about the federation, which have been written up in pages about search."
    },
    {
      "type": "paragraph",
      "id": "7ebe508e9dd34c64",
      "text": "Bonus: how to create textual histograms from a json file of site records, using jq, sort, uniq, and perl, using the example of how many sites in Federation Search (the histogram weight dimension) are how many months old (the binning dimension)."
    },
    {
      "type": "paragraph",
      "id": "734c6e4718cfa303",
      "text": "Brian motivates a discussion of how to migrate assets when using the wiki's client-side access to the pages and related assets in wiki, related to his work with Marc."
    },
    {
      "type": "paragraph",
      "id": "4c46b96d93d67b63",
      "text": "[[Eric Dobbs]] demonstrates workflow for local plugin development, including how local copies are situated and referred to using 'npm', either hosted in Assets folders or in a literal local filesystem; template scripts for setting up a wiki with a variant plugin shown."
    },
    {
      "type": "paragraph",
      "id": "6073c53776ff670b",
      "text": "A particular plugin enhancement demonstrated by Eric is a protocol by which a frame can request the pages in the current wiki client's lineup. The pages contain a standard set of attributes, which can be conveniently worked with using Javascript's destructuring assignment from an object's named fields into corresponding local references, defaulting to empty values for optional fields. In this case, every \"message\" object must contain a named \"action\" which the message handler uses to dispatch to different blocks of handling code. Eric observes that the code for querying and assembling the current page lineup into a block of data was straightforward. Demonstrating the lineup request was a little more complicated, but was complete within an hour, including Eric's explanation of how the code worked and reflections of changes in how queries are referred to."
    },
    {
      "type": "paragraph",
      "id": "9ab84718cd1e73fd",
      "text": "Now that there's a working prototype of the lineup query available to scripts using the Frame plugin, we can experiment with it and see if additional information would be useful for scripts which want to interact with the lineup, for example what the halo color is, and whether the page is remote or local, generated or rendered from server data, or from browser-local storage."
    },
    {
      "type": "paragraph",
      "id": "571d52bce935cea7",
      "text": "A discussion of how to run commands in a sandboxed way came out of reflecting on Eric's workflow. Are there ways of hosting FedWiki's server environment within the Javascript runtime of a browser, such that plugins can be swapped in and out and tested? Other versions of sandboxed or component environments were mentioned, including successors to Docker, notably Podman and Podman Toolbox."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Transcriber Notes 2023-10-08",
        "story": []
      },
      "date": 1696794362415
    },
    {
      "item": {
        "type": "paragraph",
        "id": "551afe7c2e042cf7",
        "text": "See [[Typescript 2023-10-08]], [[Typescript Index 2023-10-08]], also [[Typescript Transcripts]]."
      },
      "id": "551afe7c2e042cf7",
      "type": "add",
      "date": 1696794371980
    },
    {
      "type": "edit",
      "id": "551afe7c2e042cf7",
      "item": {
        "type": "paragraph",
        "id": "551afe7c2e042cf7",
        "text": "See [[Typescript 2023-10-08]], [[Typescript Index 2023-10-08]], also [[Typescript Transcripts]]."
      },
      "date": 1696794412952
    },
    {
      "type": "add",
      "id": "0ace01935d1a5f43",
      "item": {
        "type": "paragraph",
        "id": "0ace01935d1a5f43",
        "text": "Highlights from today:"
      },
      "after": "551afe7c2e042cf7",
      "date": 1696794436388
    },
    {
      "type": "add",
      "id": "4c46b96d93d67b63",
      "item": {
        "type": "paragraph",
        "id": "4c46b96d93d67b63",
        "text": "Eric Dobbs demonstrates workflow for local plugin development, including how local copies are situated and referred to using 'npm', either hosted in Assets folders or in a literal local filesystem; template scripts for setting up a wiki with a variant plugin shown."
      },
      "after": "0ace01935d1a5f43",
      "date": 1696794500298
    },
    {
      "type": "add",
      "id": "c45efb754fc46ba1",
      "item": {
        "type": "paragraph",
        "id": "c45efb754fc46ba1",
        "text": "Ward unpacks some details of Federation Search and the choices which motivated the original set of scripts, and then how those scripts were adapted, annotated, and documented in the process of speeding up the federation search index updates so that federation search is timely and useful. In the process of speeding up the site content scraping and handling slow-start Glitch hosted wikis, new capabilities were added and things were learned about the federation, which have been written up in pages about search."
      },
      "after": "4c46b96d93d67b63",
      "date": 1696794660163
    },
    {
      "id": "c45efb754fc46ba1",
      "type": "move",
      "order": [
        "551afe7c2e042cf7",
        "0ace01935d1a5f43",
        "c45efb754fc46ba1",
        "4c46b96d93d67b63",
        "734c6e4718cfa303"
      ],
      "date": 1696794666653,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "734c6e4718cfa303",
      "item": {
        "type": "paragraph",
        "id": "734c6e4718cfa303",
        "text": "Brian motivates a discussion of how to migrate assets when using the wiki's client-side access to the pages and related assets in wiki, related to his work with Marc."
      },
      "after": "c45efb754fc46ba1",
      "date": 1696794733418
    },
    {
      "type": "fork",
      "date": 1696794748396
    },
    {
      "type": "add",
      "id": "6073c53776ff670b",
      "item": {
        "type": "paragraph",
        "id": "6073c53776ff670b",
        "text": "A particular plugin enhancement demonstrated by Eric is a protocol by which a frame can request the pages in the current wiki client's lineup. The pages contain a standard set of attributes, which can be conveniently worked with using Javascript's destructuring assignment from an object's named fields into corresponding local references, defaulting to empty values for optional fields. In this case, every \"message\" object must contain a named \"action\" which the message handler uses to dispatch to different blocks of handling code. Eric observes that the code for querying and assembling the current page lineup into a block of data was straightforward. Demonstrating the lineup request was a little more complicated, but was complete within an hour, including Eric's explanation of how the code worked and reflections of changes in how queries are referred to."
      },
      "after": "4c46b96d93d67b63",
      "date": 1696795102879
    },
    {
      "type": "add",
      "id": "9ab84718cd1e73fd",
      "item": {
        "type": "paragraph",
        "id": "9ab84718cd1e73fd",
        "text": "Now that there's a working prototype of the lineup query available to scripts using the Frame plugin, we can experiment with it and see if additional information would be useful for scripts which want to interact with the lineup, for example what the halo color is, and whether the page is remote or local, generated or rendered from server data, or from browser-local storage."
      },
      "after": "6073c53776ff670b",
      "date": 1696795238328
    },
    {
      "type": "add",
      "id": "571d52bce935cea7",
      "item": {
        "type": "paragraph",
        "id": "571d52bce935cea7",
        "text": "A discussion of how to run commands in a sandboxed way came out of reflecting on Eric's workflow. Are there ways of hosting FedWiki's server environment within the Javascript runtime of a browser, such that plugins can be swapped in and out and tested? Other versions of sandboxed or component environments were mentioned, including successors to Docker, notably Podman and Podman Toolbox."
      },
      "after": "9ab84718cd1e73fd",
      "date": 1696795333289
    },
    {
      "type": "add",
      "id": "7ebe508e9dd34c64",
      "item": {
        "type": "paragraph",
        "id": "7ebe508e9dd34c64",
        "text": "Bonus: how to create textual histograms from a json file of site records, using jq, sort, uniq, and perl, using the example of how many sites in Federation Search (the histogram weight dimension) are how many months old (the binning dimension)."
      },
      "after": "c45efb754fc46ba1",
      "date": 1696795606727
    },
    {
      "type": "fork",
      "site": "jeff.dojo.fed.wiki",
      "date": 1696831509960
    },
    {
      "type": "edit",
      "id": "4c46b96d93d67b63",
      "item": {
        "type": "paragraph",
        "id": "4c46b96d93d67b63",
        "text": "[[Eric Dobbs]] demonstrates workflow for local plugin development, including how local copies are situated and referred to using 'npm', either hosted in Assets folders or in a literal local filesystem; template scripts for setting up a wiki with a variant plugin shown."
      },
      "date": 1696831761377
    }
  ]
}