{
  "title": "Conceptual Integrity",
  "story": [
    {
      "type": "html",
      "text": "In 1975, [[Fred Brooks]] said: <i>I will contend that [[Conceptual Integrity]] is </i>the<i> most important consideration in system design. It is better to have a system omit certain anomalous features and improvements, but to reflect one set of design ideas, than to have one that contains many good but independent and uncoordinated ideas.</i>",
      "id": "f6addb8590e8275e320e9ad17633fee7"
    },
    {
      "type": "html",
      "text": "\nIn 1995, Brooks still hasn't changed his mind: <i>I am more convinced than ever. [[Conceptual Integrity]] is central to product quality. Having a system architect is the <b>most important single step toward conceptual integrity</b>...after teaching a software engineering laboratory more than 20 times, I came to <b>insist</b> that student teams </i>as small as<i> four people choose a manager, and a <b>separate</b> architect.</i>",
      "id": "929514a685ec150f5e0373f86422efc1"
    },
    {
      "type": "html",
      "text": "<b>See also:</b> [[Architect As Keeper Of The Flame]], [[Chief Architect]]",
      "id": "3ec5e22fb7c0f1d8ab6e783a6abcb076"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "<b>Discussion:</b>",
      "id": "a90a13333eab0a3d2d181dafdd52e538"
    },
    {
      "type": "html",
      "text": "\nAccording to [[Fred Brooks]], \"<i>Conceptual integrity in turn dictates that the design must proceed from <b>one mind</b>, or from <b>a very small number</b> of agreeing <b>resonant</b> minds</i>\". To me, a <i>very small number</i> would only mean the entire team only when that team is a <i>very small number</i>. In my opinion, [[Conceptual Integrity]] is a required ingredient for achieving the principle (I think espoused by [[Alan Kay]]?) that \"<i>a system must have a powerful metaphor that is uniformly applied throughout a system</i>\". While not enough on its own, the [[System Metaphor]] used by XP is a step towards achieving [[Conceptual Integrity]] in that system.",
      "id": "a37f091a85c78035a65e13428046ed8d"
    },
    {
      "type": "html",
      "text": "\n[[Conceptual Integrity]] does <b>not</b> mean one shouldn't <b>include</b> <i>many minds</i> (or even the entire team for that matter) in the Analysis & Design process. This is a <i>very</i> important detail that shouldn't be discounted by those who wish to do away with the role of architect. Team input in Analysis and Design is absolutely <b>essential</b> for (1) establishing [[Team Gel]], (2) ensuring the soundness and quality of the analysis, and (3) refactoring the design into something more polished. In fact, the earlier the architect or design-team can include the entire team (or domain-team leads for very large teams), the higher quality the design will be. The [[Design Team]] <b>must</b> be open to and accept criticism, <b>the  architect(s) must be egoless</b> (see [[Egoless Programming]]). ",
      "id": "3fea89705a92a5818951cfffc8f1b22a"
    },
    {
      "type": "html",
      "text": "\nHowever, if there is <i>no final word</i>, no one-mind fighting off the democratic compromises that can reduce a vision to its lowest common denominator, then it will be difficult to achieve [[Conceptual Integrity]] and the system may run the risk of becoming an [[Amorphous Blob Of Human Insensitivity]] (due to <i>[[Too Many Cooks In The Kitchen]]</i>). It is important to realize that you can be <i>inclusive</i> (or team-oriented) without being <i>everyone-designs</i> or <i>anti-architect</i>. Said another way, <i>it is possible to have an architect and have team collaboration on a design at the same time</i>. ",
      "id": "b6f58ab2ce63ce901e30e7fec30636c5"
    },
    {
      "type": "html",
      "text": "\nIt is also important to note that on a small team, the design-team may in fact be <i>the whole product team</i>. Another approach would have the architect role and the coach or technical/team lead role (i.e. the <i>final say</i> or <i>tie-breaker</i>) be filled by a single individual in order to ensure [[Conceptual Integrity]]. As is mentioned in much of the [[Rational Unified Process]] literature, there is no requirement for a <i>1 to 1</i> or even a <i>1 to N</i> cardinality between roles and people. A single person could hold <i>many roles</i> just as a single role could be held by <i>many people</i>.",
      "id": "10d850b551ca7e738e5926354efcc49f"
    },
    {
      "type": "html",
      "text": "\nCan we identify specific, well-known examples of [[Conceptual Integrity]]?\nI'm starting a list here... please feel free to make additions ",
      "id": "cb4f641bbea2174ed19ce496e5991a96"
    },
    {
      "type": "html",
      "text": " Unix (based on the notion of a \"file\" (e.g. directories, devices, filesystems, named pipes and sockets are all sort-of files)",
      "id": "4529af3a1867ce4a15923bb2a6022b2b"
    },
    {
      "type": "html",
      "text": " Smalltalk (\"everything is an object\", and the small set of other accompanying principles)",
      "id": "bb2f3da34ef3a215411fcd00b0ff8b8f"
    },
    {
      "type": "html",
      "text": " SQL (\"all data is in tables\", with keys and constraints)",
      "id": "f76432da8ac7beaf12a46b81a9b13794"
    },
    {
      "type": "html",
      "text": " Lisp (\"everything is a list\")",
      "id": "4463bdfae472cf4023ec4a8cf358204a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "Do you see [[Conceptual Integrity]] as a synonym for [[Uniform Metaphor]]? I'm not sure I don't, I'm just curious. I <b>think</b> that I view [[Conceptual Integrity]] as a means of achieving (or at least maintaining) a [[Uniform Metaphor]]. I'm not sure, though. --[[Robert Di Falco]]",
      "id": "21e204caae51404f7ee0da56826559e1"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "[[Conceptual Integrity]] and [[Uniform Metaphor]] are very closely related... We can consider them, and much of the topic of [[Architectural Quality]], as the minimization of design complexity.",
      "id": "70cd2993ccf45efae28f6df601294559"
    },
    {
      "type": "html",
      "text": " Less complexity = fewer possible combinations of features/ structures",
      "id": "f0003a7674fdb335a8868edb529affb6"
    },
    {
      "type": "html",
      "text": " Fewer possible combinations = more of them work, less to go wrong",
      "id": "37a7225c147923b6434ad75752bed565"
    },
    {
      "type": "html",
      "text": " Thus, less complexity = more reliable",
      "id": "05f0ed72257761640228200ab0ba93e3"
    },
    {
      "type": "html",
      "text": "\n[[Uniform Metaphor]] however is a *single level* of structure, reaching a local minima of complexity by running everything through the same metaphor. Eg, shared memory thru the file system. [[Conceptual Integrity]] might use multiple levels or layers to form a minimal-complexity functional structure. Eg, presenting shared memory/  inter-process comms with a distinct API.",
      "id": "98eaa92a67f031bf75afa2ece736ac9f"
    },
    {
      "type": "html",
      "text": " [[Thomas Whitmore]]",
      "id": "fdf4b85b56f2446b0857c0dbd339078b"
    },
    {
      "type": "html",
      "text": " [http://www.sce-tech.com www.sce-tech.com]",
      "id": "f55f4de55d137a5a29656a3db4b93c67"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "In one of the keynotes I heard from [[Fred Brooks]], he listed the existence of a <i>fan club</i> as a way to distinguish [[Conceptual Integrity]] from [[Design By Committee]]. Examples he mentioned included the Mac, but I don't remember the others. Another example design mentioned included the Global Positioning System, where the [[Chief Architect]] was dividing <i>spare nanoseconds</i> to those software components that turned out to need just a little more time than initially thought. The [[Chief Architect]] had the complete system in his head, and exactly knew what he was doing. -- [[Arie Van Deursen]]",
      "id": "46be9a703d4643852fd8eaf8bbffaba7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "The [[Relational Model]] is a far better example of [[Conceptual Integrity]] than SQL. SQL is a mess with regards to orthogonality, parsimony, consistency and even logical correctness. -- Jon Heggland",
      "id": "fb8a3c911d32237f4e224442cd1049f0"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cb72f82da2cc41c28b6153329637019b"
    },
    {
      "type": "html",
      "text": "[[Category Planning]]",
      "id": "2f94ae10b23ce3a58a87a6d474c88b51"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ConceptualIntegrity c2.com]",
      "id": "8741ee3aa77a2ed8b0dd352c9d5c60b6"
    }
  ],
  "journal": [
    {
      "date": 1334096628000,
      "id": "701275b5367768a99f5048397c09209b",
      "type": "create",
      "item": {
        "title": "Conceptual Integrity",
        "story": [
          {
            "type": "html",
            "text": "In 1975, [[Fred Brooks]] said: <i>I will contend that [[Conceptual Integrity]] is </i>the<i> most important consideration in system design. It is better to have a system omit certain anomalous features and improvements, but to reflect one set of design ideas, than to have one that contains many good but independent and uncoordinated ideas.</i>",
            "id": "f6addb8590e8275e320e9ad17633fee7"
          },
          {
            "type": "html",
            "text": "\nIn 1995, Brooks still hasn't changed his mind: <i>I am more convinced than ever. [[Conceptual Integrity]] is central to product quality. Having a system architect is the <b>most important single step toward conceptual integrity</b>...after teaching a software engineering laboratory more than 20 times, I came to <b>insist</b> that student teams </i>as small as<i> four people choose a manager, and a <b>separate</b> architect.</i>",
            "id": "929514a685ec150f5e0373f86422efc1"
          },
          {
            "type": "html",
            "text": "<b>See also:</b> [[Architect As Keeper Of The Flame]], [[Chief Architect]]",
            "id": "3ec5e22fb7c0f1d8ab6e783a6abcb076"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "<b>Discussion:</b>",
            "id": "a90a13333eab0a3d2d181dafdd52e538"
          },
          {
            "type": "html",
            "text": "\nAccording to [[Fred Brooks]], \"<i>Conceptual integrity in turn dictates that the design must proceed from <b>one mind</b>, or from <b>a very small number</b> of agreeing <b>resonant</b> minds</i>\". To me, a <i>very small number</i> would only mean the entire team only when that team is a <i>very small number</i>. In my opinion, [[Conceptual Integrity]] is a required ingredient for achieving the principle (I think espoused by [[Alan Kay]]?) that \"<i>a system must have a powerful metaphor that is uniformly applied throughout a system</i>\". While not enough on its own, the [[System Metaphor]] used by XP is a step towards achieving [[Conceptual Integrity]] in that system.",
            "id": "a37f091a85c78035a65e13428046ed8d"
          },
          {
            "type": "html",
            "text": "\n[[Conceptual Integrity]] does <b>not</b> mean one shouldn't <b>include</b> <i>many minds</i> (or even the entire team for that matter) in the Analysis & Design process. This is a <i>very</i> important detail that shouldn't be discounted by those who wish to do away with the role of architect. Team input in Analysis and Design is absolutely <b>essential</b> for (1) establishing [[Team Gel]], (2) ensuring the soundness and quality of the analysis, and (3) refactoring the design into something more polished. In fact, the earlier the architect or design-team can include the entire team (or domain-team leads for very large teams), the higher quality the design will be. The [[Design Team]] <b>must</b> be open to and accept criticism, <b>the  architect(s) must be egoless</b> (see [[Egoless Programming]]). ",
            "id": "3fea89705a92a5818951cfffc8f1b22a"
          },
          {
            "type": "html",
            "text": "\nHowever, if there is <i>no final word</i>, no one-mind fighting off the democratic compromises that can reduce a vision to its lowest common denominator, then it will be difficult to achieve [[Conceptual Integrity]] and the system may run the risk of becoming an [[Amorphous Blob Of Human Insensitivity]] (due to <i>[[Too Many Cooks In The Kitchen]]</i>). It is important to realize that you can be <i>inclusive</i> (or team-oriented) without being <i>everyone-designs</i> or <i>anti-architect</i>. Said another way, <i>it is possible to have an architect and have team collaboration on a design at the same time</i>. ",
            "id": "b6f58ab2ce63ce901e30e7fec30636c5"
          },
          {
            "type": "html",
            "text": "\nIt is also important to note that on a small team, the design-team may in fact be <i>the whole product team</i>. Another approach would have the architect role and the coach or technical/team lead role (i.e. the <i>final say</i> or <i>tie-breaker</i>) be filled by a single individual in order to ensure [[Conceptual Integrity]]. As is mentioned in much of the [[Rational Unified Process]] literature, there is no requirement for a <i>1 to 1</i> or even a <i>1 to N</i> cardinality between roles and people. A single person could hold <i>many roles</i> just as a single role could be held by <i>many people</i>.",
            "id": "10d850b551ca7e738e5926354efcc49f"
          },
          {
            "type": "html",
            "text": "\nCan we identify specific, well-known examples of [[Conceptual Integrity]]?\nI'm starting a list here... please feel free to make additions ",
            "id": "cb4f641bbea2174ed19ce496e5991a96"
          },
          {
            "type": "html",
            "text": " Unix (based on the notion of a \"file\" (e.g. directories, devices, filesystems, named pipes and sockets are all sort-of files)",
            "id": "4529af3a1867ce4a15923bb2a6022b2b"
          },
          {
            "type": "html",
            "text": " Smalltalk (\"everything is an object\", and the small set of other accompanying principles)",
            "id": "bb2f3da34ef3a215411fcd00b0ff8b8f"
          },
          {
            "type": "html",
            "text": " SQL (\"all data is in tables\", with keys and constraints)",
            "id": "f76432da8ac7beaf12a46b81a9b13794"
          },
          {
            "type": "html",
            "text": " Lisp (\"everything is a list\")",
            "id": "4463bdfae472cf4023ec4a8cf358204a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "Do you see [[Conceptual Integrity]] as a synonym for [[Uniform Metaphor]]? I'm not sure I don't, I'm just curious. I <b>think</b> that I view [[Conceptual Integrity]] as a means of achieving (or at least maintaining) a [[Uniform Metaphor]]. I'm not sure, though. --[[Robert Di Falco]]",
            "id": "21e204caae51404f7ee0da56826559e1"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "[[Conceptual Integrity]] and [[Uniform Metaphor]] are very closely related... We can consider them, and much of the topic of [[Architectural Quality]], as the minimization of design complexity.",
            "id": "70cd2993ccf45efae28f6df601294559"
          },
          {
            "type": "html",
            "text": " Less complexity = fewer possible combinations of features/ structures",
            "id": "f0003a7674fdb335a8868edb529affb6"
          },
          {
            "type": "html",
            "text": " Fewer possible combinations = more of them work, less to go wrong",
            "id": "37a7225c147923b6434ad75752bed565"
          },
          {
            "type": "html",
            "text": " Thus, less complexity = more reliable",
            "id": "05f0ed72257761640228200ab0ba93e3"
          },
          {
            "type": "html",
            "text": "\n[[Uniform Metaphor]] however is a *single level* of structure, reaching a local minima of complexity by running everything through the same metaphor. Eg, shared memory thru the file system. [[Conceptual Integrity]] might use multiple levels or layers to form a minimal-complexity functional structure. Eg, presenting shared memory/  inter-process comms with a distinct API.",
            "id": "98eaa92a67f031bf75afa2ece736ac9f"
          },
          {
            "type": "html",
            "text": " [[Thomas Whitmore]]",
            "id": "fdf4b85b56f2446b0857c0dbd339078b"
          },
          {
            "type": "html",
            "text": " [http://www.sce-tech.com www.sce-tech.com]",
            "id": "f55f4de55d137a5a29656a3db4b93c67"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "In one of the keynotes I heard from [[Fred Brooks]], he listed the existence of a <i>fan club</i> as a way to distinguish [[Conceptual Integrity]] from [[Design By Committee]]. Examples he mentioned included the Mac, but I don't remember the others. Another example design mentioned included the Global Positioning System, where the [[Chief Architect]] was dividing <i>spare nanoseconds</i> to those software components that turned out to need just a little more time than initially thought. The [[Chief Architect]] had the complete system in his head, and exactly knew what he was doing. -- [[Arie Van Deursen]]",
            "id": "46be9a703d4643852fd8eaf8bbffaba7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "The [[Relational Model]] is a far better example of [[Conceptual Integrity]] than SQL. SQL is a mess with regards to orthogonality, parsimony, consistency and even logical correctness. -- Jon Heggland",
            "id": "fb8a3c911d32237f4e224442cd1049f0"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cb72f82da2cc41c28b6153329637019b"
          },
          {
            "type": "html",
            "text": "[[Category Planning]]",
            "id": "2f94ae10b23ce3a58a87a6d474c88b51"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ConceptualIntegrity c2.com]",
            "id": "8741ee3aa77a2ed8b0dd352c9d5c60b6"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1660315331543
    }
  ]
}