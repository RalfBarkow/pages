{
  "title": "Database Build",
  "story": [
    {
      "type": "paragraph",
      "id": "0c0352c38415f1e3",
      "text": "We read many sources by many means in order to build the database browsed with [[El Dorado UI]]. We typically extract with shell scripts from APIs, Files, or occasionally scraping web pages. Transform and load follows advice from the Neo4j community."
    },
    {
      "type": "paragraph",
      "id": "985bee4040eceed1",
      "text": "We can provide sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance data. Your sources will surely differ."
    },
    {
      "type": "paragraph",
      "id": "8122009ee77a7480",
      "text": "See [[Tips for Modeling]] complex metadata."
    },
    {
      "type": "paragraph",
      "id": "8965e3071c654384",
      "text": "We merge sources with a single ruby script that mostly constructs foreign keys where associations are not obvious and then writes csv files to be loaded into Neo4j."
    },
    {
      "type": "paragraph",
      "id": "9ce543ec1b1cd163",
      "text": "We deploy Neo4j in Docker starting from a Neo4j image. We load from csv files, mark the database as read-only, then deploy as many instances as appropriate."
    },
    {
      "type": "paragraph",
      "id": "aa8bd551b2a7af94",
      "text": "[[Michael Hunger]] & [[Mark Needham]] offer good advice for importing data. [https://neo4j.com/blog/bulk-data-import-neo4j-3-0/ post]"
    },
    {
      "type": "paragraph",
      "id": "e7c564b69ae30ac9",
      "text": "Menome describes [[Breaking Down Silos]] in enterprise data with Neo4j. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Database Build",
        "story": []
      },
      "date": 1506707332955
    },
    {
      "item": {
        "type": "factory",
        "id": "0c0352c38415f1e3"
      },
      "id": "0c0352c38415f1e3",
      "type": "add",
      "date": 1506707334439
    },
    {
      "type": "edit",
      "id": "0c0352c38415f1e3",
      "item": {
        "type": "paragraph",
        "id": "0c0352c38415f1e3",
        "text": "We read many sources by many means in order to build the database "
      },
      "date": 1506707414352
    },
    {
      "type": "edit",
      "id": "0c0352c38415f1e3",
      "item": {
        "type": "paragraph",
        "id": "0c0352c38415f1e3",
        "text": "We read many sources by many means in order to build the database browsed with [[El Dorado UI]]. We typically extract with shell scripts from APIs, Files, or occasionally scraping web pages. Transform and load follows advice from the Neo4j community."
      },
      "date": 1506707730029
    },
    {
      "type": "add",
      "id": "985bee4040eceed1",
      "item": {
        "type": "paragraph",
        "id": "985bee4040eceed1",
        "text": "See [[Data in Context]] for sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance "
      },
      "after": "0c0352c38415f1e3",
      "date": 1506708014822
    },
    {
      "type": "edit",
      "id": "985bee4040eceed1",
      "item": {
        "type": "paragraph",
        "id": "985bee4040eceed1",
        "text": "See [[Data in Context]] for sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance data."
      },
      "date": 1506708035368
    },
    {
      "type": "edit",
      "id": "985bee4040eceed1",
      "item": {
        "type": "paragraph",
        "id": "985bee4040eceed1",
        "text": "See [[Data in Context]] for sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance data. Your sources will surely differ."
      },
      "date": 1506708056351
    },
    {
      "type": "add",
      "id": "8965e3071c654384",
      "item": {
        "type": "paragraph",
        "id": "8965e3071c654384",
        "text": "We merge sources with a single ruby script that mostly constructs foreign keys where associations are not obvious and then writes csv files to be bulk loaded into Neo4j."
      },
      "after": "985bee4040eceed1",
      "date": 1506708250917
    },
    {
      "type": "add",
      "id": "aa8bd551b2a7af94",
      "item": {
        "type": "paragraph",
        "id": "aa8bd551b2a7af94",
        "text": "Michael Hunger & Mark Needham offer good advice for importing data."
      },
      "after": "8965e3071c654384",
      "date": 1506708315933
    },
    {
      "type": "edit",
      "id": "8965e3071c654384",
      "item": {
        "type": "paragraph",
        "id": "8965e3071c654384",
        "text": "We merge sources with a single ruby script that mostly constructs foreign keys where associations are not obvious and then writes csv files to be loaded into Neo4j."
      },
      "date": 1506708320350
    },
    {
      "type": "edit",
      "id": "aa8bd551b2a7af94",
      "item": {
        "type": "paragraph",
        "id": "aa8bd551b2a7af94",
        "text": "Michael Hunger & Mark Needham offer good advice for importing data. [https://neo4j.com/blog/bulk-data-import-neo4j-3-0/ post]"
      },
      "date": 1506708341925
    },
    {
      "type": "add",
      "id": "9ce543ec1b1cd163",
      "item": {
        "type": "paragraph",
        "id": "9ce543ec1b1cd163",
        "text": "We deploy Neo4j in Docker starting from a Neo4j image. We load from csv files, mark the database as read-only, then deploy as many instances as appropriate."
      },
      "after": "aa8bd551b2a7af94",
      "date": 1506708587939
    },
    {
      "type": "add",
      "id": "8122009ee77a7480",
      "item": {
        "type": "paragraph",
        "id": "8122009ee77a7480",
        "text": "See [[Tips for Modeling]] with nodes and relations."
      },
      "after": "8965e3071c654384",
      "date": 1507774223370
    },
    {
      "type": "move",
      "order": [
        "0c0352c38415f1e3",
        "985bee4040eceed1",
        "8122009ee77a7480",
        "8965e3071c654384",
        "aa8bd551b2a7af94",
        "9ce543ec1b1cd163"
      ],
      "id": "8122009ee77a7480",
      "date": 1507774240279
    },
    {
      "type": "edit",
      "id": "8122009ee77a7480",
      "item": {
        "type": "paragraph",
        "id": "8122009ee77a7480",
        "text": "See [[Tips for Modeling]] development with nodes and relations."
      },
      "date": 1507774271167
    },
    {
      "type": "edit",
      "id": "8122009ee77a7480",
      "item": {
        "type": "paragraph",
        "id": "8122009ee77a7480",
        "text": "See [[Tips for Modeling]] development with attributes, nodes and relations."
      },
      "date": 1507774288407
    },
    {
      "type": "edit",
      "id": "8122009ee77a7480",
      "item": {
        "type": "paragraph",
        "id": "8122009ee77a7480",
        "text": "See [[Tips for Modeling]] complex metadata."
      },
      "date": 1507774368458
    },
    {
      "type": "move",
      "order": [
        "0c0352c38415f1e3",
        "985bee4040eceed1",
        "8122009ee77a7480",
        "8965e3071c654384",
        "9ce543ec1b1cd163",
        "aa8bd551b2a7af94"
      ],
      "id": "9ce543ec1b1cd163",
      "date": 1536203174168
    },
    {
      "item": {
        "type": "factory",
        "id": "e7c564b69ae30ac9"
      },
      "id": "e7c564b69ae30ac9",
      "type": "add",
      "after": "aa8bd551b2a7af94",
      "date": 1536203188875
    },
    {
      "type": "edit",
      "id": "e7c564b69ae30ac9",
      "item": {
        "type": "paragraph",
        "id": "e7c564b69ae30ac9",
        "text": "Menome"
      },
      "date": 1536203197756
    },
    {
      "type": "edit",
      "id": "e7c564b69ae30ac9",
      "item": {
        "type": "paragraph",
        "id": "e7c564b69ae30ac9",
        "text": "Menome describes breaking down enterprise data silos with Neo4j. "
      },
      "date": 1536203226622
    },
    {
      "type": "edit",
      "id": "e7c564b69ae30ac9",
      "item": {
        "type": "paragraph",
        "id": "e7c564b69ae30ac9",
        "text": "Menome describes [[Breaking Down Silos]] in enterprise data with Neo4j. "
      },
      "date": 1536203299659
    },
    {
      "type": "edit",
      "id": "985bee4040eceed1",
      "item": {
        "type": "paragraph",
        "id": "985bee4040eceed1",
        "text": "See can provide sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance data. Your sources will surely differ."
      },
      "date": 1649794268017
    },
    {
      "type": "fork",
      "site": "ddd.ward.wiki.org",
      "date": 1651768530540
    },
    {
      "type": "edit",
      "id": "985bee4040eceed1",
      "item": {
        "type": "paragraph",
        "id": "985bee4040eceed1",
        "text": "We can provide sample data for four hypothetical sources: org chart, source repos, architectural diagrams, and performance data. Your sources will surely differ."
      },
      "date": 1651768541762
    },
    {
      "type": "edit",
      "id": "aa8bd551b2a7af94",
      "item": {
        "type": "paragraph",
        "id": "aa8bd551b2a7af94",
        "text": "[[Michael Hunger]] & [[Mark Needham]] offer good advice for importing data. [https://neo4j.com/blog/bulk-data-import-neo4j-3-0/ post]"
      },
      "date": 1651768684657
    }
  ]
}