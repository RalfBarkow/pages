{
  "title": "Sample Mock Graph Queries",
  "story": [
    {
      "type": "paragraph",
      "id": "bf9892fc8d68ec33",
      "text": "Our [[Mock Graph Data]] is made to look like operational data from a micro service web application. Here we imagine cypher queries we might run against it."
    },
    {
      "type": "paragraph",
      "id": "50bd6843bfebaa1c",
      "text": "Find the manager with the most direct reports."
    },
    {
      "type": "code",
      "id": "8c17711cc22a197c",
      "text": "match (p:Person)-[:Manager]->(b:Person)\nreturn b.name as boss, collect(p).size as reports\norder by reports descending"
    },
    {
      "type": "paragraph",
      "id": "589b7232d3e2e496",
      "text": "Find the projects with the largest teams."
    },
    {
      "type": "code",
      "id": "9c988a2247bce120",
      "text": "match (m:Person)-->(p:Project)\nmatch (p) -->(:Service)<--(e:Person)\nreturn\n  m.name as Manager,\n  p.name as Project,\n  collect(distinct e) as Engineers\norder by Engineers.size"
    },
    {
      "type": "paragraph",
      "id": "2ce26a475148038e",
      "text": "Find the production service configuration and load distribution suitable for graphing, nodes and edges."
    },
    {
      "type": "code",
      "id": "40d7ecdf1cd5f501",
      "text": "match (s:Service {env:'production'})-->(t:Traffic)\noptional match (s) -[:Downstream]-> (d:Service)\nreturn s.name, t.load, d.name"
    },
    {
      "type": "paragraph",
      "id": "514c38d0c909479f",
      "text": "We expand query results by expanding each line of dot format text for all available results."
    },
    {
      "type": "code",
      "id": "8cf8d050e9ccc389",
      "text": "digraph {\n  {s.name} [label=\"{s.load}\\n{s.name}\"]\n  {s.name} -> {d.name}\n}"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Sample Mock Graph Queries",
        "story": []
      },
      "date": 1644804231976
    },
    {
      "item": {
        "type": "factory",
        "id": "bf9892fc8d68ec33"
      },
      "id": "bf9892fc8d68ec33",
      "type": "add",
      "date": 1644804238342
    },
    {
      "type": "edit",
      "id": "bf9892fc8d68ec33",
      "item": {
        "type": "paragraph",
        "id": "bf9892fc8d68ec33",
        "text": "Our [[Mock Graph Data]] is made to look like operation information one might usefully query."
      },
      "date": 1644804347047
    },
    {
      "item": {
        "type": "factory",
        "id": "8c17711cc22a197c"
      },
      "id": "8c17711cc22a197c",
      "type": "add",
      "after": "bf9892fc8d68ec33",
      "date": 1644804370516
    },
    {
      "type": "edit",
      "id": "bf9892fc8d68ec33",
      "item": {
        "type": "paragraph",
        "id": "bf9892fc8d68ec33",
        "text": "Our [[Mock Graph Data]] is made to look like operational data from a micro service web application."
      },
      "date": 1644804507662
    },
    {
      "type": "edit",
      "id": "8c17711cc22a197c",
      "item": {
        "type": "code",
        "id": "8c17711cc22a197c",
        "text": "match (p:Person)-[:Manager]->(b:Person)\nreturn b.name as boss, collect(p).size as reports\norder by reports descending"
      },
      "date": 1644804793905
    },
    {
      "type": "edit",
      "id": "8c17711cc22a197c",
      "item": {
        "type": "code",
        "id": "8c17711cc22a197c",
        "text": "match (p:Person)-[:Manager]->(b:Person)\nreturn b.name as boss, collect(distinct p).size as reports\norder by reports descending"
      },
      "date": 1644804807608
    },
    {
      "type": "edit",
      "id": "8c17711cc22a197c",
      "item": {
        "type": "code",
        "id": "8c17711cc22a197c",
        "text": "match (p:Person)-[:Manager]->(b:Person)\nreturn b.name as boss, collect(p).size as reports\norder by reports descending"
      },
      "date": 1644804816097
    },
    {
      "type": "add",
      "id": "50bd6843bfebaa1c",
      "item": {
        "type": "paragraph",
        "id": "50bd6843bfebaa1c",
        "text": "Find the manager with the most direct reports."
      },
      "after": "bf9892fc8d68ec33",
      "date": 1644804844058
    },
    {
      "item": {
        "type": "factory",
        "id": "589b7232d3e2e496"
      },
      "id": "589b7232d3e2e496",
      "type": "add",
      "after": "8c17711cc22a197c",
      "date": 1644804995077
    },
    {
      "type": "edit",
      "id": "589b7232d3e2e496",
      "item": {
        "type": "paragraph",
        "id": "589b7232d3e2e496",
        "text": "Find the projects with the largest teams."
      },
      "date": 1644805121764
    },
    {
      "type": "add",
      "id": "9c988a2247bce120",
      "item": {
        "type": "factory",
        "id": "9c988a2247bce120",
        "text": "s"
      },
      "after": "589b7232d3e2e496",
      "date": 1644805131623
    },
    {
      "type": "edit",
      "id": "9c988a2247bce120",
      "item": {
        "type": "code",
        "id": "9c988a2247bce120",
        "text": "match (p:Project)->(:Program)-[:Member]->(m:Person)"
      },
      "date": 1644805336312
    },
    {
      "type": "edit",
      "id": "9c988a2247bce120",
      "item": {
        "type": "code",
        "id": "9c988a2247bce120",
        "text": "match (m:Persion)-->(p:Project)-->(:Service)<--(e:Person)\n"
      },
      "date": 1644805489569
    },
    {
      "type": "edit",
      "id": "9c988a2247bce120",
      "item": {
        "type": "code",
        "id": "9c988a2247bce120",
        "text": "match (m:Person)-->(p:Project)\nmatch (p) -->(:Service)<--(e:Person)\nReturn p.name"
      },
      "date": 1644805584111
    },
    {
      "type": "edit",
      "id": "9c988a2247bce120",
      "item": {
        "type": "code",
        "id": "9c988a2247bce120",
        "text": "match (m:Person)-->(p:Project)\nmatch (p) -->(:Service)<--(e:Person)\nreturn\n  m.name as Manager,\n  p.name as Project,\n  collect(distinct e) as Engineers\norder by Engineers.size"
      },
      "date": 1644805711734
    },
    {
      "item": {
        "type": "factory",
        "id": "2ce26a475148038e"
      },
      "id": "2ce26a475148038e",
      "type": "add",
      "after": "9c988a2247bce120",
      "date": 1644805846862
    },
    {
      "type": "edit",
      "id": "2ce26a475148038e",
      "item": {
        "type": "paragraph",
        "id": "2ce26a475148038e",
        "text": "Find the network flows to be rendered "
      },
      "date": 1644805910789
    },
    {
      "type": "edit",
      "id": "2ce26a475148038e",
      "item": {
        "type": "paragraph",
        "id": "2ce26a475148038e",
        "text": "Find the production service configuration and load distribution suitable for graphing."
      },
      "date": 1644806366019
    },
    {
      "item": {
        "type": "factory",
        "id": "40d7ecdf1cd5f501"
      },
      "id": "40d7ecdf1cd5f501",
      "type": "add",
      "after": "2ce26a475148038e",
      "date": 1644806376627
    },
    {
      "type": "edit",
      "id": "40d7ecdf1cd5f501",
      "item": {
        "type": "code",
        "id": "40d7ecdf1cd5f501",
        "text": "match (s:Service) where s.environment == 'production'\noptional match (s) -[:Downstream]-> (d:Service)\nreturn s.name, s.load, d.name"
      },
      "date": 1644806793869
    },
    {
      "type": "edit",
      "id": "40d7ecdf1cd5f501",
      "item": {
        "type": "code",
        "id": "40d7ecdf1cd5f501",
        "text": "match (s:Service {env:'production'})\noptional match (s) -[:Downstream]-> (d:Service)\nreturn s.name, s.load, d.name"
      },
      "date": 1644806892099
    },
    {
      "type": "edit",
      "id": "2ce26a475148038e",
      "item": {
        "type": "paragraph",
        "id": "2ce26a475148038e",
        "text": "Find the production service configuration and load distribution suitable for graphing, nodes and edges."
      },
      "date": 1644806910714
    },
    {
      "type": "edit",
      "id": "bf9892fc8d68ec33",
      "item": {
        "type": "paragraph",
        "id": "bf9892fc8d68ec33",
        "text": "Our [[Mock Graph Data]] is made to look like operational data from a micro service web application. Here we imagine the sorts of cypher queries we might run against it."
      },
      "date": 1644807580374
    },
    {
      "type": "edit",
      "id": "bf9892fc8d68ec33",
      "item": {
        "type": "paragraph",
        "id": "bf9892fc8d68ec33",
        "text": "Our [[Mock Graph Data]] is made to look like operational data from a micro service web application. Here we imagine cypher queries we might run against it."
      },
      "date": 1644807597963
    },
    {
      "item": {
        "type": "factory",
        "id": "8cf8d050e9ccc389"
      },
      "id": "8cf8d050e9ccc389",
      "type": "add",
      "after": "40d7ecdf1cd5f501",
      "date": 1644807638424
    },
    {
      "type": "edit",
      "id": "8cf8d050e9ccc389",
      "item": {
        "type": "markdown",
        "id": "8cf8d050e9ccc389",
        "text": "digraph {\n  s.name [label"
      },
      "date": 1644808645123
    },
    {
      "type": "edit",
      "id": "8cf8d050e9ccc389",
      "item": {
        "type": "markdown",
        "id": "8cf8d050e9ccc389",
        "text": "digraph {\n  s.name [label=\"s.load\\ns.name\"]\n  s.name -> d.name\n}"
      },
      "date": 1644810917575
    },
    {
      "type": "edit",
      "id": "8cf8d050e9ccc389",
      "item": {
        "type": "code",
        "id": "8cf8d050e9ccc389",
        "text": "digraph {\n  {s.name} [label=\"{s.load}\\n{s.name}\"]\n  {s.name} -> {d.name}\n}"
      },
      "date": 1644811091095
    },
    {
      "type": "edit",
      "id": "40d7ecdf1cd5f501",
      "item": {
        "type": "code",
        "id": "40d7ecdf1cd5f501",
        "text": "match (s:Service {env:'production'})-->(t:Traffic)\noptional match (s) -[:Downstream]-> (d:Service)\nreturn s.name, t.load, d.name"
      },
      "date": 1644811115367
    },
    {
      "type": "add",
      "id": "514c38d0c909479f",
      "item": {
        "type": "paragraph",
        "id": "514c38d0c909479f",
        "text": "We expand query results by expanding each line of dot format text for all available results."
      },
      "after": "2ce26a475148038e",
      "date": 1644811186915
    },
    {
      "id": "514c38d0c909479f",
      "type": "move",
      "order": [
        "bf9892fc8d68ec33",
        "50bd6843bfebaa1c",
        "8c17711cc22a197c",
        "589b7232d3e2e496",
        "9c988a2247bce120",
        "2ce26a475148038e",
        "40d7ecdf1cd5f501",
        "514c38d0c909479f",
        "8cf8d050e9ccc389"
      ],
      "date": 1644811191523
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1644844636082
    }
  ]
}