{
  "title": "2021-12-01",
  "story": [
    {
      "type": "reference",
      "id": "f67bc1f4c60f73ab",
      "site": "code.fed.wiki",
      "slug": "continuing-workflow-evolution",
      "title": "Continuing Workflow Evolution",
      "text": "We summarize how we have come to our current understanding of scripts in the sharing context of federated wiki."
    },
    {
      "type": "reference",
      "id": "8831997aed9dc788",
      "site": "code.fed.wiki",
      "slug": "frame-integration-promises",
      "title": "Frame Integration Promises",
      "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
    },
    {
      "type": "paragraph",
      "id": "e7e09b17631a1ee0",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638321886219499dvvuK:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]"
    },
    {
      "type": "markdown",
      "id": "65ca3bae8e8db433",
      "text": "> Let me suggest an interesting [[calculation]] that might start with one of the [[frame integration]]s.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. \n>\n> From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. \n>\n> I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\n> \n> I would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
    },
    {
      "type": "paragraph",
      "id": "82f8a126e0208917",
      "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638322387219685dedXp:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]"
    },
    {
      "type": "markdown",
      "id": "6b98e80670477a48",
      "text": "> The Frame plugins might be more interesting if they are configured with markup to run an html script hosted on another wiki. This is a kind of sharing that we would like to make routine. If we knew which sites are sharing scripts and which sites are using them we might have relations that would make a nice Graphviz diagram. If such a page were created it could be passed back to the Frame plugin with the \"link\" message that would then appear in the lineup. "
    },
    {
      "type": "paragraph",
      "id": "6536b892d8f96d22",
      "text": "Again, I [[Ward]] am trying to imagine a computation that would start simple but grow to be an interesting challenge in [[Elm]]. \n"
    },
    {
      "type": "reference",
      "id": "d2b0b1188995dafe",
      "site": "code.fed.wiki",
      "slug": "life-in-the-connectome",
      "title": "Life in the Connectome",
      "text": "We consider several ways that our use of federated wiki has improved in the last year and project that into a tentative framework for guiding development."
    },
    {
      "type": "paragraph",
      "id": "57f4e30dc93a4db3",
      "text": "A complete rewrite of wiki as a single page application (c2.com) [https://news.ycombinator.com/item?id=8983158 hacker news]"
    },
    {
      "type": "pagefold",
      "id": "6e4c761d9d91ab31",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "3e77162b72cb604a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "gnu-emacs--n--n-o",
      "title": "GNU Emacs / N Λ N O",
      "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles [[Nicolas P. Rougier]]  described in the article *On the design of text Editors* that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]"
    },
    {
      "type": "paragraph",
      "id": "2b680442c4c7778b",
      "text": "\nSee also [[Bespoke-themes]]"
    },
    {
      "type": "pagefold",
      "id": "13ab6acd6e1192e2",
      "text": "Smalltalk"
    },
    {
      "type": "paragraph",
      "id": "3afe22b6eda4909c",
      "text": "Using Squeak from a Shell [https://stackoverflow.com/questions/3067563/using-squeak-from-a-shell stackoverflow]"
    },
    {
      "type": "pagefold",
      "id": "905a2573093347fe",
      "text": "GlamorousToolkit"
    },
    {
      "type": "video",
      "id": "2eadda8c8600224b",
      "text": "YOUTUBE JuLZBocJ5jQ\nGlamorous Toolkit / Pharo / Smalltalk Session 1 (Eric Normand, Tudor Girba, Gene Kim)"
    },
    {
      "type": "pagefold",
      "id": "71514c7b7e1fef17",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "1c4672f7f72501d7",
      "text": "[[Energy Attribute Certificates]]"
    },
    {
      "type": "pagefold",
      "id": "b90381b9cb696409",
      "text": "ES6 Module"
    },
    {
      "type": "reference",
      "id": "a62758d952508cd4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "es6-module",
      "title": "ES6 Module",
      "text": "An ES6 module is a file containing JS code. [https://hacks.mozilla.org/2015/08/es6-in-depth-modules/ page]"
    },
    {
      "type": "paragraph",
      "id": "559596f0ccba6921",
      "text": "How do you call WebAssembly in your projects? [https://discourse.elm-lang.org/t/how-do-you-call-webassembly-in-your-projects/4194/5 discourse]"
    },
    {
      "type": "markdown",
      "id": "291e95b58893ee34",
      "text": "> My use case was doing a simple interface for an RGB-D visual odometry algorithm. Basically an algorithm that you feed with images and it tries to reconstruct a 3D model and the camera trajectory."
    },
    {
      "type": "paragraph",
      "id": "4fca9b0532fdb032",
      "text": "rollup-plugin-elm [https://github.com/ulisses-alves/rollup-plugin-elm#rollup-plugin-elm github]"
    },
    {
      "type": "markdown",
      "id": "d1955f6ab3cf6440",
      "text": "> Import .elm (Elm 0.19) files as ES6 modules."
    },
    {
      "type": "paragraph",
      "id": "c666f35a4cb86744",
      "text": "Project Proposal: Compiler for libraries [https://discourse.elm-lang.org/t/project-proposal-compiler-for-libraries/1049 discourse]"
    },
    {
      "type": "pagefold",
      "id": "28d67975d66b26fa",
      "text": "~"
    },
    {
      "type": "video",
      "id": "0cf31ee0dd33ae40",
      "text": "VIMEO 228366361"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2021-12-01",
        "story": []
      },
      "date": 1638337929161
    },
    {
      "item": {
        "type": "factory",
        "id": "e7e09b17631a1ee0"
      },
      "id": "e7e09b17631a1ee0",
      "type": "add",
      "date": 1638337934015
    },
    {
      "type": "edit",
      "id": "e7e09b17631a1ee0",
      "item": {
        "type": "paragraph",
        "id": "e7e09b17631a1ee0",
        "text": "[[Ward]] via [matrix]"
      },
      "date": 1638337947149
    },
    {
      "item": {
        "type": "factory",
        "id": "65ca3bae8e8db433"
      },
      "id": "65ca3bae8e8db433",
      "type": "add",
      "after": "e7e09b17631a1ee0",
      "date": 1638337969998
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "paragraph",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations. Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\nI would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638337978067
    },
    {
      "type": "edit",
      "id": "e7e09b17631a1ee0",
      "item": {
        "type": "paragraph",
        "id": "e7e09b17631a1ee0",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638321886219499dvvuK:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]"
      },
      "date": 1638337987738
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations. Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\nI would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638337991187
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\nI would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638338026977
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. \n>\n> From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\nI would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638338058848
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. \n>\n> From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. \n>\n> I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\nI would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638338115042
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting calculation that might start with one of the frame integrations.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. \n>\n> From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. \n>\n> I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\n> \n> I would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638338157748
    },
    {
      "item": {
        "type": "factory",
        "id": "82f8a126e0208917"
      },
      "id": "82f8a126e0208917",
      "type": "add",
      "after": "65ca3bae8e8db433",
      "date": 1638338269528
    },
    {
      "type": "edit",
      "id": "82f8a126e0208917",
      "item": {
        "type": "paragraph",
        "id": "82f8a126e0208917",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638322387219685dedXp:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]"
      },
      "date": 1638338277127
    },
    {
      "type": "add",
      "id": "6b98e80670477a48",
      "item": {
        "type": "paragraph",
        "id": "6b98e80670477a48",
        "text": "> The Frame plugins might be more interesting if they are configured with markup to run an html script hosted on another wiki. This is a kind of sharing that we would like to make routine. If we knew which sites are sharing scripts and which sites are using them we might have relations that would make a nice Graphviz diagram. If such a page were created it could be passed back to the Frame plugin with the \"link\" message that would then appear in the lineup. "
      },
      "after": "82f8a126e0208917",
      "date": 1638338312050
    },
    {
      "type": "edit",
      "id": "6b98e80670477a48",
      "item": {
        "type": "markdown",
        "id": "6b98e80670477a48",
        "text": "> The Frame plugins might be more interesting if they are configured with markup to run an html script hosted on another wiki. This is a kind of sharing that we would like to make routine. If we knew which sites are sharing scripts and which sites are using them we might have relations that would make a nice Graphviz diagram. If such a page were created it could be passed back to the Frame plugin with the \"link\" message that would then appear in the lineup. "
      },
      "date": 1638338313000
    },
    {
      "item": {
        "type": "factory",
        "id": "6536b892d8f96d22"
      },
      "id": "6536b892d8f96d22",
      "type": "add",
      "after": "6b98e80670477a48",
      "date": 1638338387211
    },
    {
      "type": "edit",
      "id": "6536b892d8f96d22",
      "item": {
        "type": "paragraph",
        "id": "6536b892d8f96d22",
        "text": "Again, I [[Ward]] am trying to imagine a computation that would start simple but grow to be an interesting challenge in Elm. \n"
      },
      "date": 1638338399037
    },
    {
      "type": "edit",
      "id": "6536b892d8f96d22",
      "item": {
        "type": "paragraph",
        "id": "6536b892d8f96d22",
        "text": "Again, I [[Ward]] am trying to imagine a computation that would start simple but grow to be an interesting challenge in [[Elm]]. \n"
      },
      "date": 1638338424536
    },
    {
      "item": {
        "type": "factory",
        "id": "3e77162b72cb604a"
      },
      "id": "3e77162b72cb604a",
      "type": "add",
      "after": "6536b892d8f96d22",
      "date": 1638338805425
    },
    {
      "type": "edit",
      "id": "3e77162b72cb604a",
      "item": {
        "type": "reference",
        "id": "3e77162b72cb604a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gnu-emacs--n--n-o",
        "title": "GNU Emacs / N Λ N O",
        "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles I described in the article \"On the design of text Editors\" that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]"
      },
      "date": 1638338808235
    },
    {
      "item": {
        "type": "factory",
        "id": "6e4c761d9d91ab31"
      },
      "id": "6e4c761d9d91ab31",
      "type": "add",
      "after": "3e77162b72cb604a",
      "date": 1638338814453
    },
    {
      "type": "edit",
      "id": "6e4c761d9d91ab31",
      "item": {
        "type": "pagefold",
        "id": "6e4c761d9d91ab31",
        "text": "~"
      },
      "date": 1638338820189
    },
    {
      "id": "6e4c761d9d91ab31",
      "type": "move",
      "order": [
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a"
      ],
      "date": 1638338822951
    },
    {
      "type": "edit",
      "id": "3e77162b72cb604a",
      "item": {
        "type": "reference",
        "id": "3e77162b72cb604a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gnu-emacs--n--n-o",
        "title": "GNU Emacs / N Λ N O",
        "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles [[Nicolas P. Rougier]]  described in the article \"On the design of text Editors\" that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]"
      },
      "date": 1638338884551
    },
    {
      "type": "edit",
      "id": "3e77162b72cb604a",
      "item": {
        "type": "reference",
        "id": "3e77162b72cb604a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gnu-emacs--n--n-o",
        "title": "GNU Emacs / N Λ N O",
        "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles [[Nicolas P. Rougier]]  described in the article *On the design of text Editors* that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]"
      },
      "date": 1638338958807
    },
    {
      "type": "fork",
      "date": 1638338977940
    },
    {
      "item": {
        "type": "factory",
        "id": "2eadda8c8600224b"
      },
      "id": "2eadda8c8600224b",
      "type": "add",
      "after": "3e77162b72cb604a",
      "date": 1638339530150
    },
    {
      "type": "edit",
      "id": "2eadda8c8600224b",
      "item": {
        "type": "video",
        "id": "2eadda8c8600224b",
        "text": "YOUTUBE JuLZBocJ5jQ"
      },
      "date": 1638339546554
    },
    {
      "item": {
        "type": "factory",
        "id": "905a2573093347fe"
      },
      "id": "905a2573093347fe",
      "type": "add",
      "after": "2eadda8c8600224b",
      "date": 1638339565114
    },
    {
      "type": "edit",
      "id": "905a2573093347fe",
      "item": {
        "type": "pagefold",
        "id": "905a2573093347fe",
        "text": "GlamorousToolkit"
      },
      "date": 1638339567696
    },
    {
      "id": "905a2573093347fe",
      "type": "move",
      "order": [
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "905a2573093347fe",
        "2eadda8c8600224b"
      ],
      "date": 1638339574146
    },
    {
      "type": "edit",
      "id": "2eadda8c8600224b",
      "item": {
        "type": "video",
        "id": "2eadda8c8600224b",
        "text": "YOUTUBE JuLZBocJ5jQ\nGlamorous Toolkit / Pharo / Smalltalk Session 1 (Eric Normand, Tudor Girba, Gene Kim)"
      },
      "date": 1638339586708
    },
    {
      "type": "edit",
      "id": "3e77162b72cb604a",
      "item": {
        "type": "reference",
        "id": "3e77162b72cb604a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gnu-emacs--n--n-o",
        "title": "GNU Emacs / N Λ N O",
        "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles [[Nicolas P. Rougier]]  described in the article *On the design of text Editors* that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]\n\n[[Bespoke-themes]]"
      },
      "date": 1638341443261
    },
    {
      "item": {
        "type": "factory",
        "id": "2b680442c4c7778b"
      },
      "id": "2b680442c4c7778b",
      "type": "add",
      "after": "2eadda8c8600224b",
      "date": 1638341458034
    },
    {
      "type": "edit",
      "id": "3e77162b72cb604a",
      "item": {
        "type": "reference",
        "id": "3e77162b72cb604a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gnu-emacs--n--n-o",
        "title": "GNU Emacs / N Λ N O",
        "text": "GNU Emacs / N Λ N O is a set of configuration files for GNU Emacs such as to provide a nice and consistent look and feel as shown below. It is based on design principles [[Nicolas P. Rougier]]  described in the article *On the design of text Editors* that is available on arXiv. The light theme is based on Material colors and the dark theme is based on Nord colors. [https://github.com/rougier/nano-emacs#gnu-emacs--n-λ-n-o github]"
      },
      "date": 1638341459445
    },
    {
      "type": "edit",
      "id": "2b680442c4c7778b",
      "item": {
        "type": "paragraph",
        "id": "2b680442c4c7778b",
        "text": "\n\n[[Bespoke-themes]]"
      },
      "date": 1638341461582
    },
    {
      "id": "2b680442c4c7778b",
      "type": "move",
      "order": [
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b"
      ],
      "date": 1638341464611
    },
    {
      "type": "edit",
      "id": "65ca3bae8e8db433",
      "item": {
        "type": "markdown",
        "id": "65ca3bae8e8db433",
        "text": "> Let me suggest an interesting [[calculation]] that might start with one of the [[frame integration]]s.\n>\n> Let's say you wanted to know what folks in your neighborhood were doing. You could start with the \"neighbors\" integration which will give you the site domain name for all your neighbors. \n>\n> From this you could fetch sitemaps for each site and get the last modification date for each page maybe filtering for pages changed in the last month. \n>\n> I'm trying to think of a computation that might look nice in Elm. This would be a nice experiment and could be checked against Recent Changes. But now, with this under your control we can look further.\n> \n> I would be interested in recent pages that are using the Frame plugin to run scripts from Assets pages. If you know the pages recently changed, you could fetch each of these and look for items of type=frame. That would be a good next step."
      },
      "date": 1638351517735
    },
    {
      "item": {
        "type": "factory",
        "id": "d2b0b1188995dafe"
      },
      "id": "d2b0b1188995dafe",
      "type": "add",
      "after": "2eadda8c8600224b",
      "date": 1638352844126
    },
    {
      "type": "edit",
      "id": "d2b0b1188995dafe",
      "item": {
        "type": "reference",
        "id": "d2b0b1188995dafe",
        "site": "code.fed.wiki",
        "slug": "life-in-the-connectome",
        "title": "Life in the Connectome",
        "text": "We consider several ways that our use of federated wiki has improved in the last year and project that into a tentative framework for guiding development."
      },
      "date": 1638352847610
    },
    {
      "id": "d2b0b1188995dafe",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b"
      ],
      "date": 1638352856056
    },
    {
      "item": {
        "type": "factory",
        "id": "f67bc1f4c60f73ab"
      },
      "id": "f67bc1f4c60f73ab",
      "type": "add",
      "after": "2eadda8c8600224b",
      "date": 1638353691407
    },
    {
      "type": "edit",
      "id": "f67bc1f4c60f73ab",
      "item": {
        "type": "reference",
        "id": "f67bc1f4c60f73ab",
        "site": "code.fed.wiki",
        "slug": "continuing-workflow-evolution",
        "title": "Continuing Workflow Evolution",
        "text": "We summarize how we have come to our current understanding of scripts in the sharing context of federated wiki."
      },
      "date": 1638353703158
    },
    {
      "id": "f67bc1f4c60f73ab",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b"
      ],
      "date": 1638353714098
    },
    {
      "item": {
        "type": "factory",
        "id": "1c4672f7f72501d7"
      },
      "id": "1c4672f7f72501d7",
      "type": "add",
      "after": "2eadda8c8600224b",
      "date": 1638354448941
    },
    {
      "type": "edit",
      "id": "1c4672f7f72501d7",
      "item": {
        "type": "paragraph",
        "id": "1c4672f7f72501d7",
        "text": "[[Energy Attribute Certificates]]"
      },
      "date": 1638354457741
    },
    {
      "item": {
        "type": "factory",
        "id": "71514c7b7e1fef17"
      },
      "id": "71514c7b7e1fef17",
      "type": "add",
      "after": "1c4672f7f72501d7",
      "date": 1638354532534
    },
    {
      "type": "edit",
      "id": "71514c7b7e1fef17",
      "item": {
        "type": "pagefold",
        "id": "71514c7b7e1fef17",
        "text": "."
      },
      "date": 1638354536471
    },
    {
      "id": "71514c7b7e1fef17",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7"
      ],
      "date": 1638354539212
    },
    {
      "id": "f67bc1f4c60f73ab",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7"
      ],
      "date": 1638354581999
    },
    {
      "item": {
        "type": "factory",
        "id": "559596f0ccba6921"
      },
      "id": "559596f0ccba6921",
      "type": "add",
      "after": "1c4672f7f72501d7",
      "date": 1638356302508
    },
    {
      "type": "edit",
      "id": "559596f0ccba6921",
      "item": {
        "type": "paragraph",
        "id": "559596f0ccba6921",
        "text": "How do you call WebAssembly in your projects? "
      },
      "date": 1638356308922
    },
    {
      "item": {
        "type": "factory",
        "id": "291e95b58893ee34"
      },
      "id": "291e95b58893ee34",
      "type": "add",
      "after": "559596f0ccba6921",
      "date": 1638356321206
    },
    {
      "type": "edit",
      "id": "559596f0ccba6921",
      "item": {
        "type": "paragraph",
        "id": "559596f0ccba6921",
        "text": "How do you call WebAssembly in your projects? [https://discourse.elm-lang.org/t/how-do-you-call-webassembly-in-your-projects/4194/6 discourse]"
      },
      "date": 1638356334646
    },
    {
      "type": "edit",
      "id": "559596f0ccba6921",
      "item": {
        "type": "paragraph",
        "id": "559596f0ccba6921",
        "text": "How do you call WebAssembly in your projects? [https://discourse.elm-lang.org/t/how-do-you-call-webassembly-in-your-projects/4194/5 discourse]"
      },
      "date": 1638356388139
    },
    {
      "type": "edit",
      "id": "291e95b58893ee34",
      "item": {
        "type": "markdown",
        "id": "291e95b58893ee34",
        "text": "> My use case was doing a simple interface for an RGB-D visual odometry algorithm. Basically an algorithm that you feed with images and it tries to reconstruct a 3D model and the camera trajectory."
      },
      "date": 1638356421442
    },
    {
      "item": {
        "type": "factory",
        "id": "c666f35a4cb86744"
      },
      "id": "c666f35a4cb86744",
      "type": "add",
      "after": "291e95b58893ee34",
      "date": 1638356491714
    },
    {
      "type": "edit",
      "id": "c666f35a4cb86744",
      "item": {
        "type": "paragraph",
        "id": "c666f35a4cb86744",
        "text": "\nProject Proposal: Compiler for libraries "
      },
      "date": 1638356494103
    },
    {
      "type": "edit",
      "id": "c666f35a4cb86744",
      "item": {
        "type": "paragraph",
        "id": "c666f35a4cb86744",
        "text": "Project Proposal: Compiler for libraries [https://discourse.elm-lang.org/t/project-proposal-compiler-for-libraries/1049 discourse]"
      },
      "date": 1638356519882
    },
    {
      "item": {
        "type": "factory",
        "id": "4fca9b0532fdb032"
      },
      "id": "4fca9b0532fdb032",
      "type": "add",
      "after": "c666f35a4cb86744",
      "date": 1638356617864
    },
    {
      "type": "edit",
      "id": "4fca9b0532fdb032",
      "item": {
        "type": "paragraph",
        "id": "4fca9b0532fdb032",
        "text": "rollup-plugin-elm"
      },
      "date": 1638356622158
    },
    {
      "type": "edit",
      "id": "4fca9b0532fdb032",
      "item": {
        "type": "paragraph",
        "id": "4fca9b0532fdb032",
        "text": "rollup-plugin-elm [https://github.com/ulisses-alves/rollup-plugin-elm#rollup-plugin-elm github]"
      },
      "date": 1638356639626
    },
    {
      "type": "add",
      "id": "d1955f6ab3cf6440",
      "item": {
        "type": "paragraph",
        "id": "d1955f6ab3cf6440",
        "text": "> Import .elm (Elm 0.19) files as ES6 modules."
      },
      "after": "4fca9b0532fdb032",
      "date": 1638356651255
    },
    {
      "type": "edit",
      "id": "d1955f6ab3cf6440",
      "item": {
        "type": "markdown",
        "id": "d1955f6ab3cf6440",
        "text": "> Import .elm (Elm 0.19) files as ES6 modules."
      },
      "date": 1638356652752
    },
    {
      "item": {
        "type": "factory",
        "id": "a62758d952508cd4"
      },
      "id": "a62758d952508cd4",
      "type": "add",
      "after": "d1955f6ab3cf6440",
      "date": 1638356986426
    },
    {
      "type": "edit",
      "id": "a62758d952508cd4",
      "item": {
        "type": "reference",
        "id": "a62758d952508cd4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "es6-module",
        "title": "ES6 Module",
        "text": "An ES6 module is a file containing JS code. [https://hacks.mozilla.org/2015/08/es6-in-depth-modules/ page]"
      },
      "date": 1638356988958
    },
    {
      "id": "a62758d952508cd4",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "c666f35a4cb86744",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440"
      ],
      "date": 1638356991608
    },
    {
      "item": {
        "type": "factory",
        "id": "b90381b9cb696409"
      },
      "id": "b90381b9cb696409",
      "type": "add",
      "after": "d1955f6ab3cf6440",
      "date": 1638357000778
    },
    {
      "type": "edit",
      "id": "b90381b9cb696409",
      "item": {
        "type": "pagefold",
        "id": "b90381b9cb696409",
        "text": "ES6 Module"
      },
      "date": 1638357003638
    },
    {
      "id": "b90381b9cb696409",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "c666f35a4cb86744",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440"
      ],
      "date": 1638357017415
    },
    {
      "id": "c666f35a4cb86744",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744"
      ],
      "date": 1638357057001
    },
    {
      "item": {
        "type": "factory",
        "id": "3afe22b6eda4909c"
      },
      "id": "3afe22b6eda4909c",
      "type": "add",
      "after": "c666f35a4cb86744",
      "date": 1638361387901
    },
    {
      "type": "edit",
      "id": "3afe22b6eda4909c",
      "item": {
        "type": "paragraph",
        "id": "3afe22b6eda4909c",
        "text": "Using Squeak from a Shell"
      },
      "date": 1638361392661
    },
    {
      "type": "edit",
      "id": "3afe22b6eda4909c",
      "item": {
        "type": "paragraph",
        "id": "3afe22b6eda4909c",
        "text": "Using Squeak from a Shell [https://stackoverflow.com/questions/3067563/using-squeak-from-a-shell stackoverflow]"
      },
      "date": 1638361422544
    },
    {
      "item": {
        "type": "factory",
        "id": "13ab6acd6e1192e2"
      },
      "id": "13ab6acd6e1192e2",
      "type": "add",
      "after": "3afe22b6eda4909c",
      "date": 1638361425026
    },
    {
      "type": "edit",
      "id": "13ab6acd6e1192e2",
      "item": {
        "type": "pagefold",
        "id": "13ab6acd6e1192e2",
        "text": "Smalltalk"
      },
      "date": 1638361429870
    },
    {
      "id": "13ab6acd6e1192e2",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c"
      ],
      "date": 1638361432677
    },
    {
      "id": "13ab6acd6e1192e2",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "905a2573093347fe",
        "13ab6acd6e1192e2",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744",
        "3afe22b6eda4909c"
      ],
      "date": 1638361454252
    },
    {
      "id": "13ab6acd6e1192e2",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744",
        "3afe22b6eda4909c"
      ],
      "date": 1638361456752
    },
    {
      "id": "3afe22b6eda4909c",
      "type": "move",
      "order": [
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "f67bc1f4c60f73ab",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744"
      ],
      "date": 1638361465012
    },
    {
      "id": "f67bc1f4c60f73ab",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744"
      ],
      "date": 1638362453390
    },
    {
      "item": {
        "type": "factory",
        "id": "8831997aed9dc788"
      },
      "id": "8831997aed9dc788",
      "type": "add",
      "after": "c666f35a4cb86744",
      "date": 1638362464032
    },
    {
      "type": "edit",
      "id": "8831997aed9dc788",
      "item": {
        "type": "reference",
        "id": "8831997aed9dc788",
        "site": "code.fed.wiki",
        "slug": "frame-integration-promises",
        "title": "Frame Integration Promises",
        "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
      },
      "date": 1638362472639
    },
    {
      "id": "8831997aed9dc788",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "8831997aed9dc788",
        "d2b0b1188995dafe",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744"
      ],
      "date": 1638362484527
    },
    {
      "id": "d2b0b1188995dafe",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "8831997aed9dc788",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "d2b0b1188995dafe",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744"
      ],
      "date": 1638362491089
    },
    {
      "type": "edit",
      "id": "2b680442c4c7778b",
      "item": {
        "type": "paragraph",
        "id": "2b680442c4c7778b",
        "text": "\nSee also [[Bespoke-themes]]"
      },
      "date": 1638362979894
    },
    {
      "item": {
        "type": "factory",
        "id": "0cf31ee0dd33ae40"
      },
      "id": "0cf31ee0dd33ae40",
      "type": "add",
      "after": "c666f35a4cb86744",
      "date": 1638364460393
    },
    {
      "type": "edit",
      "id": "0cf31ee0dd33ae40",
      "item": {
        "type": "video",
        "id": "0cf31ee0dd33ae40",
        "text": "VIMEO 228366361"
      },
      "date": 1638364467289
    },
    {
      "item": {
        "type": "factory",
        "id": "28d67975d66b26fa"
      },
      "id": "28d67975d66b26fa",
      "type": "add",
      "after": "0cf31ee0dd33ae40",
      "date": 1638364476716
    },
    {
      "type": "edit",
      "id": "28d67975d66b26fa",
      "item": {
        "type": "pagefold",
        "id": "28d67975d66b26fa",
        "text": "~"
      },
      "date": 1638364481636
    },
    {
      "id": "28d67975d66b26fa",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "8831997aed9dc788",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "d2b0b1188995dafe",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744",
        "28d67975d66b26fa",
        "0cf31ee0dd33ae40"
      ],
      "date": 1638364488324
    },
    {
      "item": {
        "type": "factory",
        "id": "57f4e30dc93a4db3"
      },
      "id": "57f4e30dc93a4db3",
      "type": "add",
      "after": "0cf31ee0dd33ae40",
      "date": 1638366125816
    },
    {
      "type": "edit",
      "id": "57f4e30dc93a4db3",
      "item": {
        "type": "paragraph",
        "id": "57f4e30dc93a4db3",
        "text": "A complete rewrite of wiki as a single page application (c2.com)"
      },
      "date": 1638366133143
    },
    {
      "type": "edit",
      "id": "57f4e30dc93a4db3",
      "item": {
        "type": "paragraph",
        "id": "57f4e30dc93a4db3",
        "text": "A complete rewrite of wiki as a single page application (c2.com) [https://news.ycombinator.com/item?id=8983158 hacker news]"
      },
      "date": 1638366157360
    },
    {
      "id": "57f4e30dc93a4db3",
      "type": "move",
      "order": [
        "f67bc1f4c60f73ab",
        "8831997aed9dc788",
        "e7e09b17631a1ee0",
        "65ca3bae8e8db433",
        "82f8a126e0208917",
        "6b98e80670477a48",
        "6536b892d8f96d22",
        "d2b0b1188995dafe",
        "57f4e30dc93a4db3",
        "6e4c761d9d91ab31",
        "3e77162b72cb604a",
        "2b680442c4c7778b",
        "13ab6acd6e1192e2",
        "3afe22b6eda4909c",
        "905a2573093347fe",
        "2eadda8c8600224b",
        "71514c7b7e1fef17",
        "1c4672f7f72501d7",
        "b90381b9cb696409",
        "a62758d952508cd4",
        "559596f0ccba6921",
        "291e95b58893ee34",
        "4fca9b0532fdb032",
        "d1955f6ab3cf6440",
        "c666f35a4cb86744",
        "28d67975d66b26fa",
        "0cf31ee0dd33ae40"
      ],
      "date": 1638366257244
    }
  ]
}