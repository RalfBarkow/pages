{
  "title": "2023-02-11",
  "story": [
    {
      "type": "markdown",
      "id": "45dad1ba6e385050",
      "text": "⇒ [[PC Emulating Visualizer]] ⇒ [[Blinkenlights]] ⇒ [[αcτµαlly pδrταblε εxεcµταblε]]"
    },
    {
      "type": "paragraph",
      "id": "f0faacae41bc4640",
      "text": "Blinkenlights reduces the complexity of observing the program flow using the [[dynamic]] vs. static distinction. A program that is executed or runs with almost the speed of light can be traced with the help of the single step function (keyword: wait mode) in order to then be observed or monitored as a static pattern (image) during execution or runtime. Changes of the pattern become observable as relevant difference."
    },
    {
      "type": "html",
      "id": "71e87891c94896f6",
      "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n width=\"100%\"\n>"
    },
    {
      "type": "reference",
      "id": "03b0ef866e1e1966",
      "site": "wiki.ralfbarkow.ch",
      "slug": "infinitely-slow-step",
      "title": "Infinitely Slow Step",
      "text": "⇒ [[Continuum]] between [[Synthesis]] and [[Analysis]]"
    },
    {
      "type": "reference",
      "id": "0411d7d017e2f9bc",
      "site": "ward.asia.wiki.org",
      "slug": "edison-wiki",
      "title": "Edison Wiki",
      "text": "There is lots of talk of Intel's Edison among locals here in Portland. Blain, an Intel IoT team member, jumped into an install of federated wiki on the pre-installed node.js."
    },
    {
      "type": "paragraph",
      "id": "e4133ea2fe79aae1",
      "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org matrix]:          \"If we made a \\\"works anywhere\\\" implementation of wiki-server where would we safely save pages? I saw [[SQLite]] which would be an obvious store, if it were persistent in any real way. Or, we could establish some private backup protocol that would hookup as soon as you had an internet connection.\""
    },
    {
      "type": "paragraph",
      "id": "b589a8b3b9a56eeb",
      "text": "⇒ [[Borg]] ⇒ Syncthing Vs rsync Vs unison? [https://forum.syncthing.net/t/syncthing-vs-rsync-vs-unison/6298/4 post]"
    },
    {
      "type": "markdown",
      "id": "d38a30e3a3582d80",
      "text": "⇒ [[FreedomBox]] ⇒ [[Filtering Logs]]\n"
    },
    {
      "type": "paragraph",
      "id": "70f36cabe1e3e0bb",
      "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167608385152962sSOgp%3Amatrix.org matrix]: \"We've built some infrastructure for collecting information through a mechanism we call Surveys. A site owner can launch a survey for their own site in a process that starts with selecting a probe. For example, the Amateur Call Sign probe inspects pages looking for the distinctive ham call letters which include an embedded digit. My call is K9OX. The four sites that I have surveyed show my call occurring frequently. What surprised me is that my son's call, KD7MPA, shows up in places where I would not expect it. For example, for some reason I have forgotten I recorded digital traffic overnight three years ago. That transcript was probed and the survey included in a new search. There was my son, among 600 other calls, where he was identified by a Russian station, RV0CG, wanting to talk. Amateur radio call signs query well so try google for any of these. Or try my own Collaborative Survey Search: http://ward.dojo.fed.wiki/[[collaborative-survey-search]].html\",\n"
    },
    {
      "type": "assets",
      "id": "3fe2d336745ab9cb",
      "text": "pages/2023-02-11"
    },
    {
      "type": "image",
      "id": "cbebcbc81775b17f",
      "text": "About Quaternion",
      "size": "wide",
      "width": 430,
      "height": 445,
      "url": "/assets/plugins/image/098b3a3302d00821dd4a99e484c52ddb.jpg"
    },
    {
      "type": "paragraph",
      "id": "4aba960a2996e7ea",
      "text": "Running Hunchentoot on SBCL v2.2.6 with SQLite v3.37.0"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-02-11",
        "story": []
      },
      "date": 1676104314429
    },
    {
      "item": {
        "type": "factory",
        "id": "70f36cabe1e3e0bb"
      },
      "id": "70f36cabe1e3e0bb",
      "type": "add",
      "date": 1676104315862
    },
    {
      "type": "edit",
      "id": "70f36cabe1e3e0bb",
      "item": {
        "type": "paragraph",
        "id": "70f36cabe1e3e0bb",
        "text": "https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167608385152962sSOgp%3Amatrix.org matrix"
      },
      "date": 1676104322913
    },
    {
      "item": {
        "type": "factory",
        "id": "2bbfc0e9fb3899be"
      },
      "id": "2bbfc0e9fb3899be",
      "type": "add",
      "after": "70f36cabe1e3e0bb",
      "date": 1676104340265
    },
    {
      "type": "edit",
      "id": "2bbfc0e9fb3899be",
      "item": {
        "type": "paragraph",
        "id": "2bbfc0e9fb3899be",
        "text": "        \"body\": \"We've built some infrastructure for collecting information through a mechanism we call Surveys. A site owner can launch a survey for their own site in a process that starts with selecting a probe. For example, the Amateur Call Sign probe inspects pages looking for the distinctive ham call letters which include an embedded digit. My call is K9OX. The four sites that I have surveyed show my call occurring frequently. What surprised me is that my son's call, KD7MPA, shows up in places where I would not expect it. For example, for some reason I have forgotten I recorded digital traffic overnight three years ago. That transcript was probed and the survey included in a new search. There was my son, among 600 other calls, where he was identified by a Russian station, RV0CG, wanting to talk. Amateur radio call signs query well so try google for any of these. Or try my own Collaborative Survey Search: http://ward.dojo.fed.wiki/collaborative-survey-search.html\",\n"
      },
      "date": 1676104342031
    },
    {
      "type": "remove",
      "id": "2bbfc0e9fb3899be",
      "date": 1676104361263
    },
    {
      "type": "edit",
      "id": "70f36cabe1e3e0bb",
      "item": {
        "type": "paragraph",
        "id": "70f36cabe1e3e0bb",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167608385152962sSOgp%3Amatrix.org matrix]: \"We've built some infrastructure for collecting information through a mechanism we call Surveys. A site owner can launch a survey for their own site in a process that starts with selecting a probe. For example, the Amateur Call Sign probe inspects pages looking for the distinctive ham call letters which include an embedded digit. My call is K9OX. The four sites that I have surveyed show my call occurring frequently. What surprised me is that my son's call, KD7MPA, shows up in places where I would not expect it. For example, for some reason I have forgotten I recorded digital traffic overnight three years ago. That transcript was probed and the survey included in a new search. There was my son, among 600 other calls, where he was identified by a Russian station, RV0CG, wanting to talk. Amateur radio call signs query well so try google for any of these. Or try my own Collaborative Survey Search: http://ward.dojo.fed.wiki/collaborative-survey-search.html\",\n"
      },
      "date": 1676104370898
    },
    {
      "item": {
        "type": "factory",
        "id": "d38a30e3a3582d80"
      },
      "id": "d38a30e3a3582d80",
      "type": "add",
      "after": "70f36cabe1e3e0bb",
      "date": 1676110823448
    },
    {
      "type": "edit",
      "id": "d38a30e3a3582d80",
      "item": {
        "type": "paragraph",
        "id": "d38a30e3a3582d80",
        "text": "[[Filtering Logs]]"
      },
      "date": 1676110827481
    },
    {
      "type": "edit",
      "id": "70f36cabe1e3e0bb",
      "item": {
        "type": "paragraph",
        "id": "70f36cabe1e3e0bb",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167608385152962sSOgp%3Amatrix.org matrix]: \"We've built some infrastructure for collecting information through a mechanism we call Surveys. A site owner can launch a survey for their own site in a process that starts with selecting a probe. For example, the Amateur Call Sign probe inspects pages looking for the distinctive ham call letters which include an embedded digit. My call is K9OX. The four sites that I have surveyed show my call occurring frequently. What surprised me is that my son's call, KD7MPA, shows up in places where I would not expect it. For example, for some reason I have forgotten I recorded digital traffic overnight three years ago. That transcript was probed and the survey included in a new search. There was my son, among 600 other calls, where he was identified by a Russian station, RV0CG, wanting to talk. Amateur radio call signs query well so try google for any of these. Or try my own Collaborative Survey Search: http://ward.dojo.fed.wiki/[[collaborative-survey-search]].html\",\n"
      },
      "date": 1676110922368
    },
    {
      "item": {
        "type": "factory",
        "id": "ecf7ee6172d6a2c9"
      },
      "id": "ecf7ee6172d6a2c9",
      "type": "add",
      "after": "d38a30e3a3582d80",
      "date": 1676110936496
    },
    {
      "type": "edit",
      "id": "ecf7ee6172d6a2c9",
      "item": {
        "type": "pagefold",
        "id": "ecf7ee6172d6a2c9",
        "text": "~"
      },
      "date": 1676110938878
    },
    {
      "id": "ecf7ee6172d6a2c9",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80"
      ],
      "date": 1676110941003
    },
    {
      "item": {
        "type": "factory",
        "id": "107c3d76b019583d"
      },
      "id": "107c3d76b019583d",
      "type": "add",
      "after": "d38a30e3a3582d80",
      "date": 1676110942515
    },
    {
      "type": "edit",
      "id": "107c3d76b019583d",
      "item": {
        "type": "paragraph",
        "id": "107c3d76b019583d",
        "text": "[[FreedomBox]]"
      },
      "date": 1676110948569
    },
    {
      "type": "remove",
      "id": "107c3d76b019583d",
      "date": 1676110950583
    },
    {
      "type": "edit",
      "id": "d38a30e3a3582d80",
      "item": {
        "type": "paragraph",
        "id": "d38a30e3a3582d80",
        "text": "⇒ [[FreedomBox]] ⇒ [[Filtering Logs]]"
      },
      "date": 1676110966962
    },
    {
      "type": "edit",
      "id": "d38a30e3a3582d80",
      "item": {
        "type": "markdown",
        "id": "d38a30e3a3582d80",
        "text": "⇒ [[FreedomBox]] ⇒ [[Filtering Logs]]"
      },
      "date": 1676110977291
    },
    {
      "type": "edit",
      "id": "d38a30e3a3582d80",
      "item": {
        "type": "markdown",
        "id": "d38a30e3a3582d80",
        "text": "⇒ [[FreedomBox]] ⇒ [[Filtering Logs]]\n"
      },
      "date": 1676111282609
    },
    {
      "type": "add",
      "id": "45dad1ba6e385050",
      "item": {
        "type": "markdown",
        "id": "45dad1ba6e385050",
        "text": "[[Blinkenlights]]"
      },
      "after": "d38a30e3a3582d80",
      "date": 1676111285327
    },
    {
      "item": {
        "type": "factory",
        "id": "3fe2d336745ab9cb"
      },
      "id": "3fe2d336745ab9cb",
      "type": "add",
      "after": "45dad1ba6e385050",
      "date": 1676115640746
    },
    {
      "type": "edit",
      "id": "3fe2d336745ab9cb",
      "item": {
        "type": "assets",
        "id": "3fe2d336745ab9cb",
        "text": "pages/2023-02-11"
      },
      "date": 1676115650479
    },
    {
      "item": {
        "type": "factory",
        "id": "71e87891c94896f6"
      },
      "id": "71e87891c94896f6",
      "type": "add",
      "after": "3fe2d336745ab9cb",
      "date": 1676115662241
    },
    {
      "type": "edit",
      "id": "71e87891c94896f6",
      "item": {
        "type": "html",
        "id": "71e87891c94896f6",
        "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n  width=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n>"
      },
      "date": 1676115679013
    },
    {
      "type": "edit",
      "id": "71e87891c94896f6",
      "item": {
        "type": "html",
        "id": "71e87891c94896f6",
        "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n  width=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n width=\"100%\"\n>"
      },
      "date": 1676115692341
    },
    {
      "type": "edit",
      "id": "71e87891c94896f6",
      "item": {
        "type": "html",
        "id": "71e87891c94896f6",
        "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/blinkenlights-altair-8800.jpg\"\n width=\"100%\"\n>"
      },
      "date": 1676115739410
    },
    {
      "id": "71e87891c94896f6",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "71e87891c94896f6",
        "3fe2d336745ab9cb"
      ],
      "date": 1676115940572
    },
    {
      "type": "edit",
      "id": "45dad1ba6e385050",
      "item": {
        "type": "markdown",
        "id": "45dad1ba6e385050",
        "text": "⇒ [[Blinkenlights]]"
      },
      "date": 1676115950803
    },
    {
      "item": {
        "type": "factory",
        "id": "f9637a61ff967b85"
      },
      "id": "f9637a61ff967b85",
      "type": "add",
      "after": "3fe2d336745ab9cb",
      "date": 1676115953981
    },
    {
      "type": "remove",
      "id": "f9637a61ff967b85",
      "date": 1676115958668
    },
    {
      "item": {
        "type": "factory",
        "id": "e86e1eab473239c4"
      },
      "id": "e86e1eab473239c4",
      "type": "add",
      "after": "3fe2d336745ab9cb",
      "date": 1676115962155
    },
    {
      "type": "edit",
      "id": "e86e1eab473239c4",
      "item": {
        "type": "markdown",
        "id": "e86e1eab473239c4",
        "text": "SYNOPSIS\n\n  /var/folders/y1/yhhpj5wd7cb5325t8__1ct2r0000gn/T//blinkenlights.com [-?HhrRstv] [ROM] [ARGS...]\n\nDESCRIPTION\n\n  Emulates x86 Linux Programs w/ Dense Machine State Visualization\n  Please keep still and only watchen astaunished das blinkenlights\n\nFLAGS\n\n  -h        help\n  -z        zoom\n  -v        verbosity\n  -r        real mode\n  -s        statistics\n  -H        disable highlight\n  -t        tui debugger mode\n  -R        reactive tui mode\n  -b ADDR   push a breakpoint\n  -L PATH   log file location\n\nARGUMENTS\n\n  ROM files can be ELF or a flat αcτµαlly pδrταblε εxεcµταblε.\n  It should use x86_64 in accordance with the System Five ABI.\n  The SYSCALL ABI is defined as it is written in Linux Kernel.\n\nFEATURES\n\n  8086, 8087, i386, x86_64, SSE3, SSSE3, POPCNT, MDA, CGA, TTY"
      },
      "date": 1676115964271
    },
    {
      "item": {
        "type": "factory",
        "id": "f0faacae41bc4640"
      },
      "id": "f0faacae41bc4640",
      "type": "add",
      "after": "e86e1eab473239c4",
      "date": 1676117605546
    },
    {
      "type": "edit",
      "id": "f0faacae41bc4640",
      "item": {
        "type": "paragraph",
        "id": "f0faacae41bc4640",
        "text": "blinkenlights reduces the complexity of observing the program flow using the dynamic vs. static distinction. A program that is executed or runs with almost the speed of light can be traced with the help of the single step function (keyword: wait mode) in order to then be observed or monitored as a static pattern (image) during execution or runtime. Changes of the pattern become observable as relevant difference."
      },
      "date": 1676117607129
    },
    {
      "id": "f0faacae41bc4640",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "71e87891c94896f6",
        "f0faacae41bc4640",
        "3fe2d336745ab9cb",
        "e86e1eab473239c4"
      ],
      "date": 1676117610916
    },
    {
      "type": "edit",
      "id": "f0faacae41bc4640",
      "item": {
        "type": "paragraph",
        "id": "f0faacae41bc4640",
        "text": "Blinkenlights reduces the complexity of observing the program flow using the dynamic vs. static distinction. A program that is executed or runs with almost the speed of light can be traced with the help of the single step function (keyword: wait mode) in order to then be observed or monitored as a static pattern (image) during execution or runtime. Changes of the pattern become observable as relevant difference."
      },
      "date": 1676117614862
    },
    {
      "item": {
        "type": "factory",
        "id": "6a907fb0a96156b6"
      },
      "id": "6a907fb0a96156b6",
      "type": "add",
      "after": "e86e1eab473239c4",
      "date": 1676118552131
    },
    {
      "type": "edit",
      "id": "6a907fb0a96156b6",
      "item": {
        "type": "html",
        "id": "6a907fb0a96156b6",
        "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-02-11/Bildschirmfoto%202023-02-11%20um%2013.27.55.jpg\"\n  width=\"100%\"\n>"
      },
      "date": 1676118571564
    },
    {
      "id": "6a907fb0a96156b6",
      "type": "remove",
      "removedTo": {
        "page": "αcτµαlly pδrταblε εxεcµταblε"
      },
      "date": 1676119371119
    },
    {
      "item": {
        "type": "factory",
        "id": "bb1e4ec3089ba4f6"
      },
      "id": "bb1e4ec3089ba4f6",
      "type": "add",
      "after": "e86e1eab473239c4",
      "date": 1676120269425
    },
    {
      "type": "edit",
      "id": "bb1e4ec3089ba4f6",
      "item": {
        "type": "paragraph",
        "id": "bb1e4ec3089ba4f6",
        "text": "[[PC Emulating Visualizer]]"
      },
      "date": 1676120274230
    },
    {
      "type": "edit",
      "id": "45dad1ba6e385050",
      "item": {
        "type": "markdown",
        "id": "45dad1ba6e385050",
        "text": "⇒ [[Blinkenlights]] ⇒ [[αcτµαlly pδrταblε εxεcµταblε]]"
      },
      "date": 1676120301947
    },
    {
      "id": "bb1e4ec3089ba4f6",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "bb1e4ec3089ba4f6",
        "71e87891c94896f6",
        "f0faacae41bc4640",
        "3fe2d336745ab9cb",
        "e86e1eab473239c4"
      ],
      "date": 1676120310448
    },
    {
      "type": "remove",
      "id": "e86e1eab473239c4",
      "date": 1676120312306
    },
    {
      "type": "remove",
      "id": "bb1e4ec3089ba4f6",
      "date": 1676120314904
    },
    {
      "type": "edit",
      "id": "45dad1ba6e385050",
      "item": {
        "type": "markdown",
        "id": "45dad1ba6e385050",
        "text": "⇒ [[PC Emulating Visualizer]] ⇒ [[Blinkenlights]] ⇒ [[αcτµαlly pδrταblε εxεcµταblε]]"
      },
      "date": 1676120323030
    },
    {
      "id": "f0faacae41bc4640",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "3fe2d336745ab9cb"
      ],
      "date": 1676127776346
    },
    {
      "id": "cbebcbc81775b17f",
      "type": "add",
      "item": {
        "type": "image",
        "id": "cbebcbc81775b17f",
        "text": "About Quaternion",
        "size": "wide",
        "width": 430,
        "height": 445,
        "url": "/assets/plugins/image/098b3a3302d00821dd4a99e484c52ddb.jpg"
      },
      "after": "3fe2d336745ab9cb",
      "attribution": {
        "page": "Quaternion"
      },
      "date": 1676130860818
    },
    {
      "item": {
        "type": "factory",
        "id": "d938cce1ae3e469b"
      },
      "id": "d938cce1ae3e469b",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676130934556
    },
    {
      "type": "edit",
      "id": "d938cce1ae3e469b",
      "item": {
        "type": "image",
        "id": "d938cce1ae3e469b",
        "text": "Same room as two different user accounts",
        "size": "wide",
        "width": 430,
        "height": 148,
        "url": "/assets/plugins/image/cc156b60e2baddb9566fa0f85a284b33.jpg"
      },
      "date": 1676130990089
    },
    {
      "id": "d938cce1ae3e469b",
      "type": "remove",
      "removedTo": {
        "page": "Quaternion"
      },
      "date": 1676131000362
    },
    {
      "type": "edit",
      "id": "f0faacae41bc4640",
      "item": {
        "type": "paragraph",
        "id": "f0faacae41bc4640",
        "text": "Blinkenlights reduces the complexity of observing the program flow using the [[dynamic]] vs. static distinction. A program that is executed or runs with almost the speed of light can be traced with the help of the single step function (keyword: wait mode) in order to then be observed or monitored as a static pattern (image) during execution or runtime. Changes of the pattern become observable as relevant difference."
      },
      "date": 1676131069661
    },
    {
      "item": {
        "type": "factory",
        "id": "03b0ef866e1e1966"
      },
      "id": "03b0ef866e1e1966",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676131137600
    },
    {
      "type": "edit",
      "id": "03b0ef866e1e1966",
      "item": {
        "type": "reference",
        "id": "03b0ef866e1e1966",
        "site": "wiki.ralfbarkow.ch",
        "slug": "infinitely-slow-step",
        "title": "Infinitely Slow Step",
        "text": "between [[Synthesis]] and [[Analysis]]"
      },
      "date": 1676131141164
    },
    {
      "id": "03b0ef866e1e1966",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "03b0ef866e1e1966",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f"
      ],
      "date": 1676131144090
    },
    {
      "item": {
        "type": "factory",
        "id": "3dde920f2a0333fa"
      },
      "id": "3dde920f2a0333fa",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676131156896
    },
    {
      "type": "edit",
      "id": "3dde920f2a0333fa",
      "item": {
        "type": "reference",
        "id": "3dde920f2a0333fa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "instantaneously-fast-space",
        "title": "Instantaneously Fast Space",
        "text": "⇒ [[Infinitely Slow Step]]"
      },
      "date": 1676131165471
    },
    {
      "id": "3dde920f2a0333fa",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "3dde920f2a0333fa",
        "03b0ef866e1e1966",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f"
      ],
      "date": 1676131169108
    },
    {
      "type": "edit",
      "id": "03b0ef866e1e1966",
      "item": {
        "type": "reference",
        "id": "03b0ef866e1e1966",
        "site": "wiki.ralfbarkow.ch",
        "slug": "infinitely-slow-step",
        "title": "Infinitely Slow Step",
        "text": "⇒ [[Continuum]] between [[Synthesis]] and [[Analysis]]"
      },
      "date": 1676131209673
    },
    {
      "id": "3dde920f2a0333fa",
      "type": "remove",
      "removedTo": {
        "page": "dynamic"
      },
      "date": 1676132797321
    },
    {
      "item": {
        "type": "factory",
        "id": "0411d7d017e2f9bc"
      },
      "id": "0411d7d017e2f9bc",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676136519568
    },
    {
      "type": "edit",
      "id": "0411d7d017e2f9bc",
      "item": {
        "type": "reference",
        "id": "0411d7d017e2f9bc",
        "site": "ward.asia.wiki.org",
        "slug": "edison-wiki",
        "title": "Edison Wiki",
        "text": "There is lots of talk of Intel's Edison among locals here in Portland. Blain, an Intel IoT team member, jumped into an install of federated wiki on the pre-installed node.js."
      },
      "date": 1676136524307
    },
    {
      "id": "0411d7d017e2f9bc",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "03b0ef866e1e1966",
        "0411d7d017e2f9bc",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f"
      ],
      "date": 1676136528716
    },
    {
      "item": {
        "type": "factory",
        "id": "e4133ea2fe79aae1"
      },
      "id": "e4133ea2fe79aae1",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676136551191
    },
    {
      "type": "edit",
      "id": "e4133ea2fe79aae1",
      "item": {
        "type": "paragraph",
        "id": "e4133ea2fe79aae1",
        "text": "https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org"
      },
      "date": 1676136554123
    },
    {
      "id": "e4133ea2fe79aae1",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "d38a30e3a3582d80",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "03b0ef866e1e1966",
        "0411d7d017e2f9bc",
        "e4133ea2fe79aae1",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f"
      ],
      "date": 1676136560259
    },
    {
      "type": "edit",
      "id": "e4133ea2fe79aae1",
      "item": {
        "type": "paragraph",
        "id": "e4133ea2fe79aae1",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org matrix]:"
      },
      "date": 1676136571852
    },
    {
      "type": "edit",
      "id": "e4133ea2fe79aae1",
      "item": {
        "type": "paragraph",
        "id": "e4133ea2fe79aae1",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org matrix]:          \"If we made a \\\"works anywhere\\\" implementation of wiki-server where would we safely save pages? I saw SQLite which would be an obvious store, if it were persistent in any real way. Or, we could establish some private backup protocol that would hookup as soon as you had an internet connection.\",\n"
      },
      "date": 1676136596317
    },
    {
      "item": {
        "type": "factory",
        "id": "4aba960a2996e7ea"
      },
      "id": "4aba960a2996e7ea",
      "type": "add",
      "after": "cbebcbc81775b17f",
      "date": 1676136781633
    },
    {
      "type": "edit",
      "id": "4aba960a2996e7ea",
      "item": {
        "type": "paragraph",
        "id": "4aba960a2996e7ea",
        "text": "Running Hunchentoot on SBCL v2.2.6 with SQLite v3.37.0"
      },
      "date": 1676136783454
    },
    {
      "type": "edit",
      "id": "e4133ea2fe79aae1",
      "item": {
        "type": "paragraph",
        "id": "e4133ea2fe79aae1",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org matrix]:          \"If we made a \\\"works anywhere\\\" implementation of wiki-server where would we safely save pages? I saw [[SQLite]] which would be an obvious store, if it were persistent in any real way. Or, we could establish some private backup protocol that would hookup as soon as you had an internet connection.\",\n"
      },
      "date": 1676136816986
    },
    {
      "type": "edit",
      "id": "e4133ea2fe79aae1",
      "item": {
        "type": "paragraph",
        "id": "e4133ea2fe79aae1",
        "text": "[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24167613473168917VxNIl%3Amatrix.org matrix]:          \"If we made a \\\"works anywhere\\\" implementation of wiki-server where would we safely save pages? I saw [[SQLite]] which would be an obvious store, if it were persistent in any real way. Or, we could establish some private backup protocol that would hookup as soon as you had an internet connection.\""
      },
      "date": 1676137598180
    },
    {
      "type": "add",
      "id": "b589a8b3b9a56eeb",
      "item": {
        "type": "paragraph",
        "id": "b589a8b3b9a56eeb",
        "text": "⇒ [[Borg]]"
      },
      "after": "e4133ea2fe79aae1",
      "date": 1676137609347
    },
    {
      "type": "edit",
      "id": "b589a8b3b9a56eeb",
      "item": {
        "type": "paragraph",
        "id": "b589a8b3b9a56eeb",
        "text": "⇒ [[Borg]] ⇒ Syncthing Vs rsync Vs unison?"
      },
      "date": 1676182141814
    },
    {
      "type": "edit",
      "id": "b589a8b3b9a56eeb",
      "item": {
        "type": "paragraph",
        "id": "b589a8b3b9a56eeb",
        "text": "⇒ [[Borg]] ⇒ Syncthing Vs rsync Vs unison? [https://forum.syncthing.net/t/syncthing-vs-rsync-vs-unison/6298/4 post]"
      },
      "date": 1676182157109
    },
    {
      "id": "d38a30e3a3582d80",
      "type": "move",
      "order": [
        "70f36cabe1e3e0bb",
        "ecf7ee6172d6a2c9",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "03b0ef866e1e1966",
        "0411d7d017e2f9bc",
        "e4133ea2fe79aae1",
        "b589a8b3b9a56eeb",
        "d38a30e3a3582d80",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f",
        "4aba960a2996e7ea"
      ],
      "date": 1676183030799
    },
    {
      "id": "70f36cabe1e3e0bb",
      "type": "move",
      "order": [
        "ecf7ee6172d6a2c9",
        "45dad1ba6e385050",
        "f0faacae41bc4640",
        "71e87891c94896f6",
        "03b0ef866e1e1966",
        "0411d7d017e2f9bc",
        "e4133ea2fe79aae1",
        "b589a8b3b9a56eeb",
        "d38a30e3a3582d80",
        "70f36cabe1e3e0bb",
        "3fe2d336745ab9cb",
        "cbebcbc81775b17f",
        "4aba960a2996e7ea"
      ],
      "date": 1676183061567
    },
    {
      "type": "remove",
      "id": "ecf7ee6172d6a2c9",
      "date": 1676183066518
    }
  ]
}