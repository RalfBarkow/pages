{
  "title": "2023-07-26",
  "story": [
    {
      "type": "paragraph",
      "id": "ca9dfc05edab6f85",
      "text": "⇒ [[elm-pages-starter-express]] [https://github.com/blaix/elm-pages-starter-express github], [https://github.com/dillonkearns/elm-pages/discussions/378#discussioncomment-5930563 page]"
    },
    {
      "type": "code",
      "id": "8d974ee40ba53cdc",
      "text": "$ npm start\n\n> start\n> node dist-server/server.mjs\n\nnode:events:491\n      throw er; // Unhandled 'error' event\n      ^\n\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1740:16)\n    at listenInCluster (node:net:1788:12)\n    at Server.listen (node:net:1876:7)\n    at Function.listen (/home/rgb/.wiki/blog.dreyeck.ch/elm-pages-starter-express/node_modules/express/lib/application.js:635:24)\n    at file:///home/rgb/.wiki/blog.dreyeck.ch/elm-pages-starter-express/dist-server/server.mjs:9:5\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\nEmitted 'error' event on Server instance at:\n    at emitErrorNT (node:net:1767:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  code: 'EADDRINUSE',\n  errno: -98,\n  syscall: 'listen',\n  address: '::',\n  port: 3000\n}\n\nNode.js v18.14.1"
    },
    {
      "type": "paragraph",
      "id": "4afd37bf20658b6d",
      "text": "⇒ blog.dreyeck.ch [https://blog.dreyeck.ch page]"
    },
    {
      "type": "code",
      "id": "33a8260d0dbfc727",
      "text": "assets/home -> ../elm-pages-starter-express/dist/"
    },
    {
      "type": "paragraph",
      "id": "abfedc93a1f1c915",
      "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]] ⇒ [[ Elm-Pages Adapter]]: The adapter [of [[elm-pages-starter-express]]] just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. [https://github.com/dillonkearns/elm-pages/discussions/378#discussioncomment-5930563 page]"
    },
    {
      "type": "code",
      "id": "c9ddbe67e90f9d5c",
      "text": "// An elm-pages-v3 adapter for express.js\n// See <https://elm-pages-v3.netlify.app/docs/adapters/>\n\nimport * as fs from \"fs\";\n\nexport default async function run({\n  renderFunctionFilePath,\n  // routePatterns,\n  // apiRoutePatterns,\n}) {\n  console.log(\"Running elm pages express adapter\");\n  ensureDirSync(\"dist-server\");\n  fs.copyFileSync(renderFunctionFilePath, \"./dist-server/elm-pages.mjs\");\n  fs.copyFileSync(\"./adapters/express/server.mjs\", \"./dist-server/server.mjs\");\n  fs.copyFileSync(\n    \"./adapters/express/middleware.mjs\",\n    \"./dist-server/middleware.mjs\"\n  );\n}\n\nfunction ensureDirSync(dirpath) {\n  try {\n    fs.mkdirSync(dirpath, { recursive: true });\n  } catch (err) {\n    if (err.code !== \"EEXIST\") throw err;\n  }\n}\n"
    },
    {
      "type": "paragraph",
      "id": "595aa8b281c6f5a4",
      "text": "See [[Adapters]] [https://elm-pages-v3.netlify.app/docs/adapters docs]"
    },
    {
      "type": "pagefold",
      "id": "fa18060d1f95593a",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "5cfc966d11292e7d",
      "site": "photos.pixiereport.com",
      "slug": "image-plugin-mechanisms",
      "title": "Image Plugin Mechanisms",
      "text": "Also see the local twin [[How Image Plugin Finds Images]] which describes the historical evolution of the image plugin, replacing an image embedded as part of the image item in the story (and journal) to an image stored as an external asset file, and referred to from the image item on the page."
    },
    {
      "type": "reference",
      "id": "bf84737b6088c053",
      "site": "goals.pod.rodwell.me",
      "slug": "how-image-plugin-finds-images",
      "title": "How Image Plugin Finds Images",
      "text": "There is something slightly mysterious about how the image plugin finds images. Here I will take a look at how this works."
    },
    {
      "type": "reference",
      "id": "3b02625b4fc0ab6e",
      "site": "marc.tries.fed.wiki",
      "slug": "sharing",
      "title": "Sharing",
      "text": "The FedWiki is first and foremost an individual [[writing]] platform."
    },
    {
      "type": "reference",
      "id": "f9c91eedb47767ab",
      "site": "thompson.forage.ustawi.wiki",
      "slug": "temporal-thickness",
      "title": "Temporal Thickness",
      "text": "Here, Karl Friston introduces the idea of 'temporal thickness' as it relates to consciousness:"
    },
    {
      "type": "reference",
      "id": "ab9db2f5c9705466",
      "site": "hello.fed.wiki",
      "slug": "making-of-hello-fed-wiki",
      "title": "Making of Hello Fed Wiki",
      "text": "Every federated wiki site can offer a custom home page. We will use this mechanism to create a whole new experience for browsing the existing federation."
    },
    {
      "type": "reference",
      "id": "9eb5f6cbff9df737",
      "site": "hello.fed.wiki",
      "slug": "welcome-your-community",
      "title": "Welcome Your Community",
      "text": "We're happy to have you join our community and watch us work. If you have work to do then you should host your community and let us know how that is going."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-07-26",
        "story": []
      },
      "date": 1690365785092
    },
    {
      "item": {
        "type": "factory",
        "id": "ca9dfc05edab6f85"
      },
      "id": "ca9dfc05edab6f85",
      "type": "add",
      "date": 1690365786300
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]]"
      },
      "date": 1690365795016
    },
    {
      "item": {
        "type": "factory",
        "id": "8d974ee40ba53cdc"
      },
      "id": "8d974ee40ba53cdc",
      "type": "add",
      "after": "ca9dfc05edab6f85",
      "date": 1690365873968
    },
    {
      "type": "edit",
      "id": "8d974ee40ba53cdc",
      "item": {
        "type": "code",
        "id": "8d974ee40ba53cdc",
        "text": "$ npm start\n\n> start\n> node dist-server/server.mjs\n\nnode:events:491\n      throw er; // Unhandled 'error' event\n      ^\n\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1740:16)\n    at listenInCluster (node:net:1788:12)\n    at Server.listen (node:net:1876:7)\n    at Function.listen (/home/rgb/.wiki/blog.dreyeck.ch/elm-pages-starter-express/node_modules/express/lib/application.js:635:24)\n    at file:///home/rgb/.wiki/blog.dreyeck.ch/elm-pages-starter-express/dist-server/server.mjs:9:5\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\nEmitted 'error' event on Server instance at:\n    at emitErrorNT (node:net:1767:8)\n    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {\n  code: 'EADDRINUSE',\n  errno: -98,\n  syscall: 'listen',\n  address: '::',\n  port: 3000\n}\n\nNode.js v18.14.1"
      },
      "date": 1690365876112
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [https:/blog.dreyeck/ch page]"
      },
      "date": 1690366345681
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [https:/blog.dreyeck.ch page]"
      },
      "date": 1690366361097
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [https://blog.dreyeck.ch page]"
      },
      "date": 1690366373321
    },
    {
      "item": {
        "type": "factory",
        "id": "33a8260d0dbfc727"
      },
      "id": "33a8260d0dbfc727",
      "type": "add",
      "after": "8d974ee40ba53cdc",
      "date": 1690366503789
    },
    {
      "type": "edit",
      "id": "33a8260d0dbfc727",
      "item": {
        "type": "code",
        "id": "33a8260d0dbfc727",
        "text": "home -> ../elm-pages-starter-express/dist/"
      },
      "date": 1690366505456
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]]"
      },
      "date": 1690366517085
    },
    {
      "type": "add",
      "id": "4afd37bf20658b6d",
      "item": {
        "type": "paragraph",
        "id": "4afd37bf20658b6d",
        "text": "⇒ [https://blog.dreyeck.ch page]"
      },
      "after": "ca9dfc05edab6f85",
      "date": 1690366517932
    },
    {
      "id": "4afd37bf20658b6d",
      "type": "move",
      "order": [
        "ca9dfc05edab6f85",
        "8d974ee40ba53cdc",
        "4afd37bf20658b6d",
        "33a8260d0dbfc727"
      ],
      "date": 1690366520881
    },
    {
      "type": "edit",
      "id": "4afd37bf20658b6d",
      "item": {
        "type": "paragraph",
        "id": "4afd37bf20658b6d",
        "text": "⇒ blog.dreyeck.ch [https://blog.dreyeck.ch page]"
      },
      "date": 1690366537585
    },
    {
      "type": "edit",
      "id": "33a8260d0dbfc727",
      "item": {
        "type": "code",
        "id": "33a8260d0dbfc727",
        "text": "assets/home -> ../elm-pages-starter-express/dist/"
      },
      "date": 1690366564484
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]]:"
      },
      "date": 1690366579683
    },
    {
      "type": "edit",
      "id": "4afd37bf20658b6d",
      "item": {
        "type": "paragraph",
        "id": "4afd37bf20658b6d",
        "text": "⇒ blog.dreyeck.ch [https://blog.dreyeck.ch page]:"
      },
      "date": 1690366582601
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]]"
      },
      "date": 1690366587282
    },
    {
      "type": "edit",
      "id": "4afd37bf20658b6d",
      "item": {
        "type": "paragraph",
        "id": "4afd37bf20658b6d",
        "text": "⇒ blog.dreyeck.ch [https://blog.dreyeck.ch page]"
      },
      "date": 1690366590600
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]] [https://github.com/blaix/elm-pages-starter-express github]"
      },
      "date": 1690366619695
    },
    {
      "type": "edit",
      "id": "ca9dfc05edab6f85",
      "item": {
        "type": "paragraph",
        "id": "ca9dfc05edab6f85",
        "text": "⇒ [[elm-pages-starter-express]] [https://github.com/blaix/elm-pages-starter-express github], [https://github.com/dillonkearns/elm-pages/discussions/378#discussioncomment-5930563 page]"
      },
      "date": 1690366671122
    },
    {
      "item": {
        "type": "factory",
        "id": "abfedc93a1f1c915"
      },
      "id": "abfedc93a1f1c915",
      "type": "add",
      "after": "33a8260d0dbfc727",
      "date": 1690366720761
    },
    {
      "item": {
        "type": "factory",
        "id": "f544c935159a728f"
      },
      "id": "f544c935159a728f",
      "type": "add",
      "after": "abfedc93a1f1c915",
      "date": 1690366723711
    },
    {
      "type": "edit",
      "id": "f544c935159a728f",
      "item": {
        "type": "audio",
        "id": "f544c935159a728f",
        "text": "// An elm-pages-v3 adapter for express.js\n// See <https://elm-pages-v3.netlify.app/docs/adapters/>\n\nimport * as fs from \"fs\";\n\nexport default async function run({\n  renderFunctionFilePath,\n  // routePatterns,\n  // apiRoutePatterns,\n}) {\n  console.log(\"Running elm pages express adapter\");\n  ensureDirSync(\"dist-server\");\n  fs.copyFileSync(renderFunctionFilePath, \"./dist-server/elm-pages.mjs\");\n  fs.copyFileSync(\"./adapters/express/server.mjs\", \"./dist-server/server.mjs\");\n  fs.copyFileSync(\n    \"./adapters/express/middleware.mjs\",\n    \"./dist-server/middleware.mjs\"\n  );\n}\n\nfunction ensureDirSync(dirpath) {\n  try {\n    fs.mkdirSync(dirpath, { recursive: true });\n  } catch (err) {\n    if (err.code !== \"EEXIST\") throw err;\n  }\n}\n"
      },
      "date": 1690366725743
    },
    {
      "item": {
        "type": "factory",
        "id": "c9ddbe67e90f9d5c"
      },
      "id": "c9ddbe67e90f9d5c",
      "type": "add",
      "after": "f544c935159a728f",
      "date": 1690366735085
    },
    {
      "type": "edit",
      "id": "c9ddbe67e90f9d5c",
      "item": {
        "type": "code",
        "id": "c9ddbe67e90f9d5c",
        "text": "// An elm-pages-v3 adapter for express.js\n// See <https://elm-pages-v3.netlify.app/docs/adapters/>\n\nimport * as fs from \"fs\";\n\nexport default async function run({\n  renderFunctionFilePath,\n  // routePatterns,\n  // apiRoutePatterns,\n}) {\n  console.log(\"Running elm pages express adapter\");\n  ensureDirSync(\"dist-server\");\n  fs.copyFileSync(renderFunctionFilePath, \"./dist-server/elm-pages.mjs\");\n  fs.copyFileSync(\"./adapters/express/server.mjs\", \"./dist-server/server.mjs\");\n  fs.copyFileSync(\n    \"./adapters/express/middleware.mjs\",\n    \"./dist-server/middleware.mjs\"\n  );\n}\n\nfunction ensureDirSync(dirpath) {\n  try {\n    fs.mkdirSync(dirpath, { recursive: true });\n  } catch (err) {\n    if (err.code !== \"EEXIST\") throw err;\n  }\n}\n"
      },
      "date": 1690366737373
    },
    {
      "type": "remove",
      "id": "f544c935159a728f",
      "date": 1690366740070
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "The adapter just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690366758652
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ The adapter just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690366777470
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]]: The adapter just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690366812137
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]] ⇒ [[ Elm-Pages Adapter]]: The adapter just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690367108745
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]] ⇒ [[ Elm-Pages Adapter]]: The adapter of [[[[elm-pages-starter-express]]]]just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690367138358
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]] ⇒ [[ Elm-Pages Adapter]]: The adapter [of [[elm-pages-starter-express]]] just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. The fly deployment only required a couple tweaks to their default dockerfile. Details are in the README."
      },
      "date": 1690367156775
    },
    {
      "type": "edit",
      "id": "abfedc93a1f1c915",
      "item": {
        "type": "paragraph",
        "id": "abfedc93a1f1c915",
        "text": "⇒ [[elm-pages-starter-express]] ⇒ [[Adapters]] ⇒ [[ Elm-Pages Adapter]]: The adapter [of [[elm-pages-starter-express]]] just copies the elm pages renderer and a basic express server into dist-server and node runs the server from there. [https://github.com/dillonkearns/elm-pages/discussions/378#discussioncomment-5930563 page]"
      },
      "date": 1690367182608
    },
    {
      "item": {
        "type": "factory",
        "id": "595aa8b281c6f5a4"
      },
      "id": "595aa8b281c6f5a4",
      "type": "add",
      "after": "c9ddbe67e90f9d5c",
      "date": 1690367254941
    },
    {
      "type": "edit",
      "id": "595aa8b281c6f5a4",
      "item": {
        "type": "paragraph",
        "id": "595aa8b281c6f5a4",
        "text": "See [https://elm-pages-v3.netlify.app/docs/adapters docs]"
      },
      "date": 1690367264358
    },
    {
      "type": "edit",
      "id": "595aa8b281c6f5a4",
      "item": {
        "type": "paragraph",
        "id": "595aa8b281c6f5a4",
        "text": "See [[Adapters]] [https://elm-pages-v3.netlify.app/docs/adapters docs]"
      },
      "date": 1690367280265
    },
    {
      "item": {
        "type": "factory",
        "id": "fa18060d1f95593a"
      },
      "id": "fa18060d1f95593a",
      "type": "add",
      "after": "595aa8b281c6f5a4",
      "date": 1690414821654
    },
    {
      "type": "edit",
      "id": "fa18060d1f95593a",
      "item": {
        "type": "pagefold",
        "id": "fa18060d1f95593a",
        "text": "~"
      },
      "date": 1690414828070
    },
    {
      "item": {
        "type": "factory",
        "id": "5cfc966d11292e7d"
      },
      "id": "5cfc966d11292e7d",
      "type": "add",
      "after": "fa18060d1f95593a",
      "date": 1690414829821
    },
    {
      "type": "edit",
      "id": "5cfc966d11292e7d",
      "item": {
        "type": "reference",
        "id": "5cfc966d11292e7d",
        "site": "photos.pixiereport.com",
        "slug": "image-plugin-mechanisms",
        "title": "Image Plugin Mechanisms",
        "text": "Also see the local twin [[How Image Plugin Finds Images]] which describes the historical evolution of the image plugin, replacing an image embedded as part of the image item in the story (and journal) to an image stored as an external asset file, and referred to from the image item on the page."
      },
      "date": 1690414854151
    },
    {
      "item": {
        "type": "factory",
        "id": "bf84737b6088c053"
      },
      "id": "bf84737b6088c053",
      "type": "add",
      "after": "5cfc966d11292e7d",
      "date": 1690414876591
    },
    {
      "type": "edit",
      "id": "bf84737b6088c053",
      "item": {
        "type": "reference",
        "id": "bf84737b6088c053",
        "site": "goals.pod.rodwell.me",
        "slug": "how-image-plugin-finds-images",
        "title": "How Image Plugin Finds Images",
        "text": "There is something slightly mysterious about how the image plugin finds images. Here I will take a look at how this works."
      },
      "date": 1690414888967
    },
    {
      "item": {
        "type": "factory",
        "id": "3b02625b4fc0ab6e"
      },
      "id": "3b02625b4fc0ab6e",
      "type": "add",
      "after": "bf84737b6088c053",
      "date": 1690415056777
    },
    {
      "type": "edit",
      "id": "3b02625b4fc0ab6e",
      "item": {
        "type": "reference",
        "id": "3b02625b4fc0ab6e",
        "site": "marc.tries.fed.wiki",
        "slug": "sharing",
        "title": "Sharing",
        "text": "The FedWiki is first and foremost an individual [[writing]] platform."
      },
      "date": 1690415060106
    },
    {
      "item": {
        "type": "factory",
        "id": "f9c91eedb47767ab"
      },
      "id": "f9c91eedb47767ab",
      "type": "add",
      "after": "3b02625b4fc0ab6e",
      "date": 1690415153832
    },
    {
      "type": "edit",
      "id": "f9c91eedb47767ab",
      "item": {
        "type": "reference",
        "id": "f9c91eedb47767ab",
        "site": "thompson.forage.ustawi.wiki",
        "slug": "temporal-thickness",
        "title": "Temporal Thickness",
        "text": "Here, Karl Friston introduces the idea of 'temporal thickness' as it relates to consciousness:"
      },
      "date": 1690415157897
    },
    {
      "item": {
        "type": "factory",
        "id": "ab9db2f5c9705466"
      },
      "id": "ab9db2f5c9705466",
      "type": "add",
      "after": "f9c91eedb47767ab",
      "date": 1690415227007
    },
    {
      "type": "edit",
      "id": "ab9db2f5c9705466",
      "item": {
        "type": "reference",
        "id": "ab9db2f5c9705466",
        "site": "hello.fed.wiki",
        "slug": "making-of-hello-fed-wiki",
        "title": "Making of Hello Fed Wiki",
        "text": "Every federated wiki site can offer a custom home page. We will use this mechanism to create a whole new experience for browsing the existing federation."
      },
      "date": 1690415231520
    },
    {
      "item": {
        "type": "factory",
        "id": "9eb5f6cbff9df737"
      },
      "id": "9eb5f6cbff9df737",
      "type": "add",
      "after": "ab9db2f5c9705466",
      "date": 1690415375204
    },
    {
      "type": "edit",
      "id": "9eb5f6cbff9df737",
      "item": {
        "type": "reference",
        "id": "9eb5f6cbff9df737",
        "site": "hello.fed.wiki",
        "slug": "welcome-your-community",
        "title": "Welcome Your Community",
        "text": "We're happy to have you join our community and watch us work. If you have work to do then you should host your community and let us know how that is going."
      },
      "date": 1690415378468
    }
  ]
}