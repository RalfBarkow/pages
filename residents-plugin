{
  "title": "Residents Plugin",
  "story": [
    {
      "type": "paragraph",
      "id": "8c84fbd72b16f836",
      "text": "We consider what we might expect of a plugin implementation of Recent Farm Activity. Mostly it would know what sites reside in a farm."
    },
    {
      "type": "paragraph",
      "id": "dcd56be42e6c9114",
      "text": "Server-side the plugin would collect information from sites hosted in a farm. Most likely this would come from scanning cached sitemaps, recomputing them if need be."
    },
    {
      "type": "paragraph",
      "id": "c86a08e92ee106a4",
      "text": "Client-side the plugin would request this information and display it in some reasonable form, most likely by imitating a Roster. Markup might subset results various ways."
    },
    {
      "type": "paragraph",
      "id": "ae7d8f35f66df201",
      "text": "See [[Open Membership in a Club]] for another imitation."
    },
    {
      "type": "paragraph",
      "id": "b41d2813065e5e9d",
      "text": "See [[Farm Roster]] for a roster from shell commands."
    },
    {
      "type": "paragraph",
      "id": "78f51ade78d474dd",
      "text": "See [[About RosterMatic Plugin]] for an admin only service."
    },
    {
      "type": "paragraph",
      "id": "26706a4a138f3ca0",
      "text": "A well-known and frequently-implemented public api could simplify scraping the federation. One call could index hundreds of sites. Sites would be recognized as members by comparing resolved ip addresses or by trusting the lists returned by the first call."
    },
    {
      "type": "paragraph",
      "id": "71e67a11084fa81a",
      "text": "We could extend the plugin's aggregation to include sites mentioned in the pages a farm hosts. This could provide optional visibility \"over the horizon\" we have considered desirable at scale before."
    },
    {
      "type": "paragraph",
      "id": "b652cf92d37ff539",
      "text": "See [[Distributed Search]] for scrape and query considered."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Residents Plugin",
        "story": []
      },
      "date": 1504376247640
    },
    {
      "item": {
        "type": "factory",
        "id": "8c84fbd72b16f836"
      },
      "id": "8c84fbd72b16f836",
      "type": "add",
      "date": 1504376258237
    },
    {
      "type": "edit",
      "id": "8c84fbd72b16f836",
      "item": {
        "type": "paragraph",
        "id": "8c84fbd72b16f836",
        "text": "We consider what we might expect of a plugin implementation of Recent Farm Activity."
      },
      "date": 1504376310162
    },
    {
      "type": "add",
      "id": "dcd56be42e6c9114",
      "item": {
        "type": "paragraph",
        "id": "dcd56be42e6c9114",
        "text": "Server-side the plugin would collect information from sites hosted in a farm. Most likely this would come from scanning cached sitemaps, recomputing them if need be."
      },
      "after": "8c84fbd72b16f836",
      "date": 1504376831668
    },
    {
      "type": "add",
      "id": "c86a08e92ee106a4",
      "item": {
        "type": "paragraph",
        "id": "c86a08e92ee106a4",
        "text": "Client-side the plugin would request this information and display it in some reasonable form, most likely by imitating a Roster."
      },
      "after": "dcd56be42e6c9114",
      "date": 1504376937287
    },
    {
      "type": "add",
      "id": "ae7d8f35f66df201",
      "item": {
        "type": "paragraph",
        "id": "ae7d8f35f66df201",
        "text": "See [[Open Membership in a Club]] for another roster imitator."
      },
      "after": "c86a08e92ee106a4",
      "date": 1504377001125
    },
    {
      "type": "edit",
      "id": "ae7d8f35f66df201",
      "item": {
        "type": "paragraph",
        "id": "ae7d8f35f66df201",
        "text": "See [[Open Membership in a Club]] for another imitation."
      },
      "date": 1504377011575
    },
    {
      "type": "edit",
      "id": "c86a08e92ee106a4",
      "item": {
        "type": "paragraph",
        "id": "c86a08e92ee106a4",
        "text": "Client-side the plugin would request this information and display it in some reasonable form, most likely by imitating a Roster. Markup might subset results various ways."
      },
      "date": 1504377044997
    },
    {
      "type": "edit",
      "id": "8c84fbd72b16f836",
      "item": {
        "type": "paragraph",
        "id": "8c84fbd72b16f836",
        "text": "We consider what we might expect of a plugin implementation of Recent Farm Activity. Mostly it would know what sites reside in a farm."
      },
      "date": 1504378234458
    },
    {
      "type": "add",
      "id": "b41d2813065e5e9d",
      "item": {
        "type": "paragraph",
        "id": "b41d2813065e5e9d",
        "text": "See [[Farm Roster]] for creating a roster with shell comands."
      },
      "after": "ae7d8f35f66df201",
      "date": 1504378508057
    },
    {
      "type": "edit",
      "id": "b41d2813065e5e9d",
      "item": {
        "type": "paragraph",
        "id": "b41d2813065e5e9d",
        "text": "See [[Farm Roster]] for creating a roster with shell commands."
      },
      "date": 1504378612518
    },
    {
      "type": "edit",
      "id": "b41d2813065e5e9d",
      "item": {
        "type": "paragraph",
        "id": "b41d2813065e5e9d",
        "text": "See [[Farm Roster]] for a roster from shell commands."
      },
      "date": 1504378656205
    },
    {
      "type": "add",
      "id": "78f51ade78d474dd",
      "item": {
        "type": "paragraph",
        "id": "78f51ade78d474dd",
        "text": "See [[About RosterMatic Plugin]] for an admin only service."
      },
      "after": "b41d2813065e5e9d",
      "date": 1504378683252
    },
    {
      "item": {
        "type": "factory",
        "id": "26706a4a138f3ca0"
      },
      "id": "26706a4a138f3ca0",
      "type": "add",
      "after": "78f51ade78d474dd",
      "date": 1504378799185
    },
    {
      "type": "edit",
      "id": "26706a4a138f3ca0",
      "item": {
        "type": "paragraph",
        "id": "26706a4a138f3ca0",
        "text": "A well-known and frequently-implemented public api could simplify scraping the federation. One call could index hundreds of sites. Sites would be recognized as members by comparing resolved ip addresses or by trusting the lists returned by the first call."
      },
      "date": 1504378986381
    },
    {
      "type": "add",
      "id": "71e67a11084fa81a",
      "item": {
        "type": "paragraph",
        "id": "71e67a11084fa81a",
        "text": "We could extend the Residents aggregation to include sites mentioned in the pages a farm hosts. This could provide optional visibility \"over the horizon\" we have considered desirable at scale before."
      },
      "after": "26706a4a138f3ca0",
      "date": 1504379375298
    },
    {
      "type": "add",
      "id": "b652cf92d37ff539",
      "item": {
        "type": "paragraph",
        "id": "b652cf92d37ff539",
        "text": "See [[Distributed Search]] for scrape and query considerations."
      },
      "after": "71e67a11084fa81a",
      "date": 1504379401985
    },
    {
      "type": "edit",
      "id": "b652cf92d37ff539",
      "item": {
        "type": "paragraph",
        "id": "b652cf92d37ff539",
        "text": "See [[Distributed Search]] for scrape and query considered."
      },
      "date": 1504379414625
    },
    {
      "type": "edit",
      "id": "71e67a11084fa81a",
      "item": {
        "type": "paragraph",
        "id": "71e67a11084fa81a",
        "text": "We could extend the plugin's aggregation to include sites mentioned in the pages a farm hosts. This could provide optional visibility \"over the horizon\" we have considered desirable at scale before."
      },
      "date": 1504379511478
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1661349542295
    }
  ]
}