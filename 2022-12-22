{
  "title": "2022-12-22",
  "story": [
    {
      "type": "reference",
      "id": "d02d978680a5fe18",
      "site": "dreyeck.ch",
      "slug": "start-playing-wiki",
      "title": "Start Playing Wiki",
      "text": "[[Ward Cunningham]] created this strange and beautiful poem to introduce people to wiki, and federated writing.It may not be the clearest exposition, but there is method in madness. Feeling lost, and becoming comfortable with being lost is a fundamental part of the epistemology of wiki."
    },
    {
      "type": "paragraph",
      "id": "d291707e6b455f80",
      "text": "⇒ [[Socio-Cultural Evolution]]"
    },
    {
      "type": "reference",
      "id": "4a4376a90fa7a687",
      "site": "wiki.ralfbarkow.ch",
      "slug": "socio-cultural-evolution",
      "title": "Socio-Cultural Evolution",
      "text": "The theory of sociocultural evolution is not based on an [[Analogy]] (however cautious, vague, remote) of organism and society. Quite the contrary: Just the advanced theory of evolution excludes such a parallel today probably definitely."
    },
    {
      "type": "graphviz",
      "id": "a7a57119302b793d",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "pagefold",
      "id": "8b70dfbbf866358f",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "76fcf385ce3aaf21",
      "site": "studio.viki.wiki",
      "slug": "compuerv",
      "title": "Compu$erv",
      "text": "https://socryn-pinfeb.ve3.info/gnurbit"
    },
    {
      "type": "reference",
      "id": "d2d3fa23aefd4df7",
      "site": "256.viki.wiki",
      "slug": "extremehumility",
      "title": "ExtremeHumility",
      "text": "We distinguish financial technology, cryptography and the art of computer programming from the surrounding [[Marketechture]]. We answer the question of monetization on [[Urbit]] not by asking \"how I do I use this to make money\", but \"what kinds of relationships do we valorize through it?\""
    },
    {
      "type": "paragraph",
      "id": "92c987bb0e547ff3",
      "text": "⇒ [[Extreme Humility]]"
    },
    {
      "type": "reference",
      "id": "db3a03545b7061de",
      "site": "256.viki.wiki",
      "slug": "urbit-valuation-papers",
      "title": "Urbit Valuation Papers",
      "text": ""
    },
    {
      "type": "reference",
      "id": "aa49c2d04be59fe5",
      "site": "256.viki.wiki",
      "slug": "urbit",
      "title": "Urbit",
      "text": ""
    },
    {
      "type": "reference",
      "id": "1f87939c7749bf60",
      "site": "lee.viki.wiki",
      "slug": "collaborative-reality",
      "title": "Collaborative Reality",
      "text": "We propose a method for organizing competitive realities through wildcard dns, cartography and charter. The challenge for us is to shed the marketechture in order to focus on how we share-- perhaps even in order to create that which supposedly lies behind the banks of stores, paywalls and personal business models of the [[Fediverse]]."
    },
    {
      "type": "paragraph",
      "id": "5db90362c0abb1b7",
      "text": "⇒ [[Collaborative Reality]] ⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]] ⇒ [[Glamorous Scene Driller]] ⇒ [[Scene.vrse File]] ⇒ [[SceneGit]]"
    },
    {
      "type": "paragraph",
      "id": "86db433d86ecd9a8",
      "text": "See \"collaborative reality observatory\" [http://ward.asia.wiki.org/assets/pages/collaborative-reality/cro-architecture.pdf pdf]"
    },
    {
      "type": "video",
      "id": "fb898557008147d2",
      "text": "YOUTUBE M-vZI3srmjw\nClaim a Site using Federated Wiki and Wikity"
    },
    {
      "type": "paragraph",
      "id": "64b8f289e69968e3",
      "text": "The Big One: A course about disasters and what to do about them. [https://web.archive.org/web/20150831172156/http://big.wikity.net/ archive]\n  "
    },
    {
      "type": "markdown",
      "id": "c2bee1322b568432",
      "text": "# Teaching Presence "
    },
    {
      "type": "video",
      "id": "92ac1a47ded36f4d",
      "text": "YOUTUBE g_E6I-rrAZE\nTeaching Presence I"
    },
    {
      "type": "video",
      "id": "bda942b6f1a94cc8",
      "text": "YOUTUBE sGYqR2DL6J4\nTeaching Presence II"
    },
    {
      "type": "markdown",
      "id": "c909fd7888a380cb",
      "text": "# Coding a Federated Wiki Reader"
    },
    {
      "type": "video",
      "id": "ad8babdc7aba6edb",
      "text": "YOUTUBE fZh656yZKhU\nCoding a Federated Wiki Reader, Part I"
    },
    {
      "type": "paragraph",
      "id": "1815f5936c4fe46d",
      "text": "Calling All Hackers [https://hapgood.us/2015/07/05/calling-all-hackers/ post]"
    },
    {
      "type": "paragraph",
      "id": "cc60a18f9178bf58",
      "text": "[https://commonplace.doubleloop.net/wikity wikity], [[Federated Education]]"
    },
    {
      "type": "assets",
      "id": "8b5e5a9eb2ab4ce2",
      "text": "home"
    },
    {
      "type": "code",
      "id": "067c742e64a27030",
      "text": "<html>\n<head>\n\n  <meta charset=\"utf-8\">\n  <title>Federated Wiki</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/items.css\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/page.css\"/>\n\n  <!-- this next bit should be moved to an external js, but we're making it brain dead simple here. I used to call it config.js -->\n\n  <script>\n     var page = 'haiku-by-a-robot';\n     var site = 'journal.hapgood.net';\n     rootsite = 'wikitytest.hapgood.net';\n  </script>\n\n  <!-- Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs -->\n\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n  <script src=\"http://wikity.net/defiant-latest.min.js\"></script>\n  <script src=\"http://mike.wikity.net/marked.js\"></script>\n<script src=\"http://sugarjs.com/release/current/sugar.min.js\"></script>\n\n  […]\n  "
    },
    {
      "type": "paragraph",
      "id": "c55769c8a7082565",
      "text": "Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs"
    },
    {
      "type": "paragraph",
      "id": "b842cffec005254a",
      "text": "jquery/1.11.2"
    },
    {
      "type": "paragraph",
      "id": "5ea24376aafba167",
      "text": "DefiantJS [https://github.com/hbi99/defiant.js github]"
    },
    {
      "type": "paragraph",
      "id": "bbd3c79c6f1a9532",
      "text": "marked - a markdown parser\nCopyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n[https://github.com/chjj/marked github]"
    },
    {
      "type": "paragraph",
      "id": "7b35c9cbb8e411bb",
      "text": "Sugar [https://sugarjs.com/ site]"
    },
    {
      "type": "code",
      "id": "9bfbe77700d11e09",
      "text": "  […]\n\n  <!-- likewise with this js, you should move it somewhere -->\n\n  <script>\n  function redlinks(sitemap, sitemapsite) {\n    console.log(sitemapsite);\n    var found = 0;\n    $('a.redlink').each(function(index, l) {\n      found = JSON.search(sitemap, '//*[title=\"' + $(this).html() + '\"]');\n      console.log($(this).html());\n      if (found.length > 0) {\n        $(this)[0].title = found[0].synopsis;\n        $(this)[0].href = $(this)[0].href.replace($(this).html(), found[0].slug);\n        $(this).removeClass('redlink');\n        if (sitemapsite != site) {\n          $(this)[0].href = $(this)[0].href.replace(\"site)\", \"'\" + sitemapsite + \"')\");\n          $(this)[0].title = 'FROM ' + sitemapsite + ': ' + found[0].synopsis;\n        }\n\n      }\n    });\n  }\n\n  function makeItems(nodename, target) {\n    var str;\n    items = JSON.search(pages[page][toslug(site)], '/d:data' + nodename);\n\n    // title is special case\n    if (nodename == \"/title\") {\n      $(target).html(items[0]);\n      $(target).append(' <a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-share/' + site + '/'+ page + '\">share</a>');\n      $(target).append('<span class=\"smalleditlink\"> / </span><a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-edit/' + site + '/'+ page + '\">edit</a>');\n      return;\n    }\n\n    for (idx in items) {\n      switch (items[idx].type) {\n\n        case \"paragraph\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: formatlinks(items[idx].text)\n          }));\n          break;\n\n        case \"markdown\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text))\n          }));\n          break;\n\n        case \"code\":\n          str = '<div id=\"{id}\" style=\"font-family:monospace\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text.lines().join('<br>').replace('  ','&nbsp;&nbsp;')\n          }));\n          break;\n\n        case \"image\":\n          str = '<figure id=\"{id}\" class=\"id_{id} type_{type}\">' +\n            '<img src=\"{url}\" class=\"type_{type} id_{id}\" />' +\n            '<figcaption>{text}</figcaption>' +\n            '</figure>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text)),\n            url: items[idx].url\n          }));\n          break;\n          \n        case \"audio\":\n           str = '<audio id=\"{id}\" class=\"id_{id} type_{type}\" src=\"{text}\" preload=\"none\" controls=\"\" '+ \n           'style=\"width: 100%;\"><a href=\"{text}\">download audio</a>' +\n           '</audio>';\n           \n            $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text\n          }));\n          break;\n           \n\n        case \"video\":\n          str = '<table id=\"{id}\" class=\"id_{id} type_{type}\"><tr><td>' +\n            '<iframe width=\"560\" height=\"315\" src=\"https://web.archive.org/web/20151226155308/https://www.youtube.com/embed/{vidId}\" frameborder=\"0\" allowfullscreen></iframe></td></tr>'\n          '<tr><td>{text}</td></tr>' +\n          '</table>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text.split('\\n')[1])),\n            url: items[idx].url,\n            vidId: items[idx].text.split('\\n')[0].split(' ')[1]\n          }));\n          break;\n\n      }\n    }\n  }\n\n  function formatlinks(t) {\n    pre_link = \"<a class= \\\"wikilink redlink\\\" href=\\\"javascript:wikilink('\";\n    post_link = \"',site);\\\">\";\n    t = t.replace(/\\[\\[([^\\]]+)\\]\\]/gi, pre_link + \"$1\" + post_link + \"$1\" + '</a>');\n    t = t.replace(/\\[((http|https|ftp):.*?) (.*?)\\]/gi, '<a href=\"$1\">$3</a> <img src=\"http://' + site + '/images/external-link-ltr-icon.png\">');\n    return t;\n  }\n\n  function toslug(s) {\n    slug = s.toLowerCase();\n    slug = slug.replace(/[\\. ]/g, '-');\n    slug = slug.replace(/[^a-zA-Z0-9 \\.\\-]+/g, \"\");\n    return slug;\n  }\n\n  function wikilink(l, s) {\n    window.location.href = window.location.pathname + '?p=' + toslug(l) + '&s=' + s;\n  }\n\n  function addpage(jpage, jsite, data) {\n    if (typeof pages[jpage] === 'undefined') {\n      pages[jpage] = [];\n    }\n    if (typeof pages[jpage][jsite] === 'undefined') {\n      pages[jpage][jsite] = [];\n    }\n    pages[jpage][jsite] = data;\n  }\n\n  function getsitemap() {\n    // gets only this sites sitemap; getforksites() and getrostersites() handle others\n    $.getJSON('http://' + site + '/system/sitemap.json', function(data) {\n      data = Defiant.getSnapshot(data)\n      addpage('sitemap', toslug(site), data);\n      sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week');\n      redlinks(data, site);\n    });\n  }\n\n  function getforksitemaps() {\n    var found = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n    for (s in found) {\n      $.getJSON('http://' + found[s] + '/system/sitemap.json', function(data) {\n        data = Defiant.getSnapshot(data)\n        redlinks(data, found[s]);\n        addpage('sitemap', toslug(found[s]), data);\n      });\n    }\n\n  }\n\n  function doattribution() {\n    var site_arr = [],\n      forks = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n      var s;\n    $(\"#via\").text(site);\n    if (site != rootsite) {\n      $(\"#via\").css(\"color\", \"red\");\n    }\n    if (forks.length) {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks[0] + '\\')\">' + forks[0] + '</a>');\n    } else {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + site + '\\')\">' + site + '</a>');\n    }\n    forks.push(site);\n    $('#editedby').html('');\n    for (s in forks.unique()){\n      $(\"#editedby\").append('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks.unique()[s] + '\\')\">' + forks.unique()[s] + '</a><br/>');\n    }\n  }\n\n  function sitepages(target, filter, filterdesc) {\n    var sitepages = JSON.search(pages['sitemap'][toslug(site)], '/d:data/*[' + filter + ']');\n    console.log('/d:data/*[' + filter + ']');\n    var str = '';\n    sitepages = sitepages.sortBy(function(n) {\n      return n.date;\n    }, desc = true);\n    for (p in sitepages) {\n      str = str + formatlinks('[[' + sitepages[p].title + ']]')+'<br/>';\n    }\n    $(target).html(str);\n    $('#selectedfilter').html('Filter: ' + filterdesc);\n    var dy = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a day ago').getTime(),'Updated in past day')\";\n    var wk = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week')\";\n    var yr = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a year ago').getTime(),'Updated in past year')\";\n\n    str = 'Last <a href=\"{dy}\">day</a>, <a href=\"{wk}\">week</a>, <a href=\"{yr}\">year</a>';\n    $('#selectedfilteropt').html(str.assign({\n      dy: dy,\n      wk: wk,\n      yr: yr\n    }));\n  }\n  </script>\n</head>"
    },
    {
      "type": "video",
      "id": "923eecb1d6ea0d70",
      "text": "YOUTUBE aL5YI6KLnfM"
    },
    {
      "type": "video",
      "id": "f75fe5b1523cf9b0",
      "text": "YOUTUBE 3hoCU4H40Zc"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-12-22",
        "story": []
      },
      "date": 1671690629986
    },
    {
      "item": {
        "type": "factory",
        "id": "d02d978680a5fe18"
      },
      "id": "d02d978680a5fe18",
      "type": "add",
      "date": 1671690631971
    },
    {
      "type": "edit",
      "id": "d02d978680a5fe18",
      "item": {
        "type": "reference",
        "id": "d02d978680a5fe18",
        "site": "dreyeck.ch",
        "slug": "start-playing-wiki",
        "title": "Start Playing Wiki",
        "text": "[[Ward Cunningham]] created this strange and beautiful poem to introduce people to wiki, and federated writing.It may not be the clearest exposition, but there is method in madness. Feeling lost, and becoming comfortable with being lost is a fundamental part of the epistemology of wiki."
      },
      "date": 1671690637436
    },
    {
      "item": {
        "type": "factory",
        "id": "4a4376a90fa7a687"
      },
      "id": "4a4376a90fa7a687",
      "type": "add",
      "after": "d02d978680a5fe18",
      "date": 1671706739842
    },
    {
      "type": "edit",
      "id": "4a4376a90fa7a687",
      "item": {
        "type": "reference",
        "id": "4a4376a90fa7a687",
        "site": "wiki.ralfbarkow.ch",
        "slug": "socio-cultural-evolution",
        "title": "Socio-Cultural Evolution",
        "text": "The theory of sociocultural evolution is not based on an analogy (however cautious, vague, remote) of organism and society. Quite the contrary: Just the advanced theory of evolution excludes such a parallel today probably definitely."
      },
      "date": 1671706749887
    },
    {
      "item": {
        "type": "factory",
        "id": "a7a57119302b793d"
      },
      "id": "a7a57119302b793d",
      "type": "add",
      "after": "4a4376a90fa7a687",
      "date": 1671706752092
    },
    {
      "type": "edit",
      "id": "a7a57119302b793d",
      "item": {
        "type": "graphviz",
        "id": "a7a57119302b793d",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1671706762571
    },
    {
      "item": {
        "type": "factory",
        "id": "d291707e6b455f80"
      },
      "id": "d291707e6b455f80",
      "type": "add",
      "after": "a7a57119302b793d",
      "date": 1671706873559
    },
    {
      "type": "edit",
      "id": "d291707e6b455f80",
      "item": {
        "type": "paragraph",
        "id": "d291707e6b455f80",
        "text": "⇒ [[ Socio-Cultural Evolution]]"
      },
      "date": 1671706885606
    },
    {
      "id": "d291707e6b455f80",
      "type": "move",
      "order": [
        "d02d978680a5fe18",
        "d291707e6b455f80",
        "4a4376a90fa7a687",
        "a7a57119302b793d"
      ],
      "date": 1671706888017
    },
    {
      "type": "edit",
      "id": "d291707e6b455f80",
      "item": {
        "type": "paragraph",
        "id": "d291707e6b455f80",
        "text": "⇒ [[Socio-Cultural Evolution]]"
      },
      "date": 1671706901277
    },
    {
      "type": "edit",
      "id": "4a4376a90fa7a687",
      "item": {
        "type": "reference",
        "id": "4a4376a90fa7a687",
        "site": "wiki.ralfbarkow.ch",
        "slug": "socio-cultural-evolution",
        "title": "Socio-Cultural Evolution",
        "text": "The theory of sociocultural evolution is not based on an [[Analogy]] (however cautious, vague, remote) of organism and society. Quite the contrary: Just the advanced theory of evolution excludes such a parallel today probably definitely."
      },
      "date": 1671706918254
    },
    {
      "item": {
        "type": "factory",
        "id": "8b70dfbbf866358f"
      },
      "id": "8b70dfbbf866358f",
      "type": "add",
      "after": "a7a57119302b793d",
      "date": 1671709029701
    },
    {
      "type": "edit",
      "id": "8b70dfbbf866358f",
      "item": {
        "type": "pagefold",
        "id": "8b70dfbbf866358f",
        "text": "~"
      },
      "date": 1671709033093
    },
    {
      "item": {
        "type": "factory",
        "id": "76fcf385ce3aaf21"
      },
      "id": "76fcf385ce3aaf21",
      "type": "add",
      "after": "8b70dfbbf866358f",
      "date": 1671709034750
    },
    {
      "type": "edit",
      "id": "76fcf385ce3aaf21",
      "item": {
        "type": "reference",
        "id": "76fcf385ce3aaf21",
        "site": "studio.viki.wiki",
        "slug": "compuerv",
        "title": "Compu$erv",
        "text": "https://socryn-pinfeb.ve3.info/gnurbit"
      },
      "date": 1671709038495
    },
    {
      "item": {
        "type": "factory",
        "id": "d2d3fa23aefd4df7"
      },
      "id": "d2d3fa23aefd4df7",
      "type": "add",
      "after": "76fcf385ce3aaf21",
      "date": 1671709059154
    },
    {
      "type": "edit",
      "id": "d2d3fa23aefd4df7",
      "item": {
        "type": "reference",
        "id": "d2d3fa23aefd4df7",
        "site": "256.viki.wiki",
        "slug": "extremehumility",
        "title": "ExtremeHumility",
        "text": "We distinguish financial technology, cryptography and the art of computer programming from the surrounding [[marketechture]]. We answer the question of monetization on [[Urbit]] not by asking \"how I do I use this to make money\", but \"what kinds of relationships do we valorize through it?\""
      },
      "date": 1671709063097
    },
    {
      "item": {
        "type": "factory",
        "id": "db3a03545b7061de"
      },
      "id": "db3a03545b7061de",
      "type": "add",
      "after": "d2d3fa23aefd4df7",
      "date": 1671709092845
    },
    {
      "type": "edit",
      "id": "db3a03545b7061de",
      "item": {
        "type": "reference",
        "id": "db3a03545b7061de",
        "site": "256.viki.wiki",
        "slug": "urbit-valuation-papers",
        "title": "Urbit Valuation Papers",
        "text": ""
      },
      "date": 1671709107159
    },
    {
      "type": "add",
      "id": "92c987bb0e547ff3",
      "item": {
        "type": "paragraph",
        "id": "92c987bb0e547ff3",
        "text": "[[Extreme Humility]]"
      },
      "after": "d291707e6b455f80",
      "date": 1671716236284
    },
    {
      "type": "edit",
      "id": "92c987bb0e547ff3",
      "item": {
        "type": "paragraph",
        "id": "92c987bb0e547ff3",
        "text": "⇒ [[Extreme Humility]]"
      },
      "date": 1671716243647
    },
    {
      "id": "92c987bb0e547ff3",
      "type": "move",
      "order": [
        "d02d978680a5fe18",
        "d291707e6b455f80",
        "4a4376a90fa7a687",
        "a7a57119302b793d",
        "8b70dfbbf866358f",
        "76fcf385ce3aaf21",
        "d2d3fa23aefd4df7",
        "92c987bb0e547ff3",
        "db3a03545b7061de"
      ],
      "date": 1671716247558
    },
    {
      "item": {
        "type": "factory",
        "id": "aa49c2d04be59fe5"
      },
      "id": "aa49c2d04be59fe5",
      "type": "add",
      "after": "db3a03545b7061de",
      "date": 1671716273670
    },
    {
      "type": "edit",
      "id": "aa49c2d04be59fe5",
      "item": {
        "type": "reference",
        "id": "aa49c2d04be59fe5",
        "site": "256.viki.wiki",
        "slug": "urbit",
        "title": "Urbit",
        "text": ""
      },
      "date": 1671716278584
    },
    {
      "type": "edit",
      "id": "d2d3fa23aefd4df7",
      "item": {
        "type": "reference",
        "id": "d2d3fa23aefd4df7",
        "site": "256.viki.wiki",
        "slug": "extremehumility",
        "title": "ExtremeHumility",
        "text": "We distinguish financial technology, cryptography and the art of computer programming from the surrounding [[Marketechture]]. We answer the question of monetization on [[Urbit]] not by asking \"how I do I use this to make money\", but \"what kinds of relationships do we valorize through it?\""
      },
      "date": 1671716449049
    },
    {
      "item": {
        "type": "factory",
        "id": "1f87939c7749bf60"
      },
      "id": "1f87939c7749bf60",
      "type": "add",
      "after": "aa49c2d04be59fe5",
      "date": 1671716858486
    },
    {
      "type": "edit",
      "id": "1f87939c7749bf60",
      "item": {
        "type": "reference",
        "id": "1f87939c7749bf60",
        "site": "lee.viki.wiki",
        "slug": "collaborative-reality",
        "title": "Collaborative Reality",
        "text": "We propose a method for organizing competitive realities through wildcard dns, cartography and charter. The challenge for us is to shed the marketechture in order to focus on how we share-- perhaps even in order to create that which supposedly lies behind the banks of stores, paywalls and personal business models of the [[Fediverse]]."
      },
      "date": 1671716861719
    },
    {
      "item": {
        "type": "factory",
        "id": "5db90362c0abb1b7"
      },
      "id": "5db90362c0abb1b7",
      "type": "add",
      "after": "1f87939c7749bf60",
      "date": 1671716867590
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "[[Scene]]"
      },
      "date": 1671716872218
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[ [[Scene]]"
      },
      "date": 1671716886134
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] "
      },
      "date": 1671716925580
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]]"
      },
      "date": 1671716954187
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] Display-Scene Tree"
      },
      "date": 1671717009494
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [Display-Scene Tree]]"
      },
      "date": 1671717020919
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]]"
      },
      "date": 1671717030943
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]]  ⇒ [[Glamorous Scene Driller]]"
      },
      "date": 1671717083905
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]] ⇒ [[Glamorous Scene Driller]]"
      },
      "date": 1671717088580
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]] ⇒ [[Glamorous Scene Driller]] ⇒ [[Scene.vrse File]]"
      },
      "date": 1671717149735
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]] ⇒ [[Glamorous Scene Driller]] ⇒ [[Scene.vrse File]] ⇒ [[SceneGit]]"
      },
      "date": 1671717223176
    },
    {
      "type": "edit",
      "id": "5db90362c0abb1b7",
      "item": {
        "type": "paragraph",
        "id": "5db90362c0abb1b7",
        "text": "⇒ [[Collaborative Reality]] ⇒ [[Scene]] ⇒ [[Scene Graph]] ⇒ [[3D Scene Graph]] ⇒ [[Display-Scene Tree]] ⇒ [[Glamorous Scene Driller]] ⇒ [[Scene.vrse File]] ⇒ [[SceneGit]]"
      },
      "date": 1671717640041
    },
    {
      "item": {
        "type": "factory",
        "id": "86db433d86ecd9a8"
      },
      "id": "86db433d86ecd9a8",
      "type": "add",
      "after": "5db90362c0abb1b7",
      "date": 1671717839344
    },
    {
      "type": "edit",
      "id": "86db433d86ecd9a8",
      "item": {
        "type": "paragraph",
        "id": "86db433d86ecd9a8",
        "text": "See \"collaborative reality observatory\""
      },
      "date": 1671717855986
    },
    {
      "type": "edit",
      "id": "86db433d86ecd9a8",
      "item": {
        "type": "paragraph",
        "id": "86db433d86ecd9a8",
        "text": "See \"collaborative reality observatory\" [http://ward.asia.wiki.org/assets/pages/collaborative-reality/cro-architecture.pdf pdf]"
      },
      "date": 1671717868735
    },
    {
      "item": {
        "type": "factory",
        "id": "fb898557008147d2"
      },
      "id": "fb898557008147d2",
      "type": "add",
      "after": "86db433d86ecd9a8",
      "date": 1671727006316
    },
    {
      "type": "edit",
      "id": "fb898557008147d2",
      "item": {
        "type": "video",
        "id": "fb898557008147d2",
        "text": "YOTUBE M-vZI3srmjw"
      },
      "date": 1671727017661
    },
    {
      "type": "edit",
      "id": "fb898557008147d2",
      "item": {
        "type": "video",
        "id": "fb898557008147d2",
        "text": "YOUTUBE M-vZI3srmjw"
      },
      "date": 1671727023648
    },
    {
      "type": "edit",
      "id": "fb898557008147d2",
      "item": {
        "type": "video",
        "id": "fb898557008147d2",
        "text": "YOUTUBE M-vZI3srmjw\nClaim a Site using Federated Wiki and Wikity"
      },
      "date": 1671727053896
    },
    {
      "item": {
        "type": "factory",
        "id": "64b8f289e69968e3"
      },
      "id": "64b8f289e69968e3",
      "type": "add",
      "after": "fb898557008147d2",
      "date": 1671727072508
    },
    {
      "type": "edit",
      "id": "64b8f289e69968e3",
      "item": {
        "type": "paragraph",
        "id": "64b8f289e69968e3",
        "text": "The Big One: A course about disasters and what to do about them.\n  "
      },
      "date": 1671727077309
    },
    {
      "type": "edit",
      "id": "64b8f289e69968e3",
      "item": {
        "type": "paragraph",
        "id": "64b8f289e69968e3",
        "text": "The Big One: A course about disasters and what to do about them. [https://web.archive.org/web/20150831172156/http://big.wikity.net/ archive]\n  "
      },
      "date": 1671727092160
    },
    {
      "item": {
        "type": "factory",
        "id": "c2bee1322b568432"
      },
      "id": "c2bee1322b568432",
      "type": "add",
      "after": "64b8f289e69968e3",
      "date": 1671727219825
    },
    {
      "type": "edit",
      "id": "c2bee1322b568432",
      "item": {
        "type": "paragraph",
        "id": "c2bee1322b568432",
        "text": "# Teaching Presence "
      },
      "date": 1671727225356
    },
    {
      "type": "edit",
      "id": "c2bee1322b568432",
      "item": {
        "type": "markdown",
        "id": "c2bee1322b568432",
        "text": "# Teaching Presence "
      },
      "date": 1671727226824
    },
    {
      "item": {
        "type": "factory",
        "id": "92ac1a47ded36f4d"
      },
      "id": "92ac1a47ded36f4d",
      "type": "add",
      "after": "c2bee1322b568432",
      "date": 1671727265317
    },
    {
      "type": "edit",
      "id": "92ac1a47ded36f4d",
      "item": {
        "type": "video",
        "id": "92ac1a47ded36f4d",
        "text": "YOUTUBE Teaching Presence "
      },
      "date": 1671727274314
    },
    {
      "type": "edit",
      "id": "92ac1a47ded36f4d",
      "item": {
        "type": "video",
        "id": "92ac1a47ded36f4d",
        "text": "YOUTUBE g_E6I-rrAZE"
      },
      "date": 1671727294202
    },
    {
      "type": "edit",
      "id": "92ac1a47ded36f4d",
      "item": {
        "type": "video",
        "id": "92ac1a47ded36f4d",
        "text": "YOUTUBE g_E6I-rrAZE\nTeaching Presence I"
      },
      "date": 1671727309864
    },
    {
      "item": {
        "type": "factory",
        "id": "bda942b6f1a94cc8"
      },
      "id": "bda942b6f1a94cc8",
      "type": "add",
      "after": "92ac1a47ded36f4d",
      "date": 1671727348662
    },
    {
      "type": "edit",
      "id": "bda942b6f1a94cc8",
      "item": {
        "type": "video",
        "id": "bda942b6f1a94cc8",
        "text": "YOUTUBE sGYqR2DL6J4"
      },
      "date": 1671727375134
    },
    {
      "type": "edit",
      "id": "bda942b6f1a94cc8",
      "item": {
        "type": "video",
        "id": "bda942b6f1a94cc8",
        "text": "YOUTUBE sGYqR2DL6J4\nTeaching Presence II"
      },
      "date": 1671727392624
    },
    {
      "item": {
        "type": "factory",
        "id": "c909fd7888a380cb"
      },
      "id": "c909fd7888a380cb",
      "type": "add",
      "after": "bda942b6f1a94cc8",
      "date": 1671727558813
    },
    {
      "type": "edit",
      "id": "c909fd7888a380cb",
      "item": {
        "type": "paragraph",
        "id": "c909fd7888a380cb",
        "text": "# Coding a Federated Wiki Reader"
      },
      "date": 1671727562575
    },
    {
      "type": "edit",
      "id": "c909fd7888a380cb",
      "item": {
        "type": "markdown",
        "id": "c909fd7888a380cb",
        "text": "# Coding a Federated Wiki Reader"
      },
      "date": 1671727563869
    },
    {
      "item": {
        "type": "factory",
        "id": "ad8babdc7aba6edb"
      },
      "id": "ad8babdc7aba6edb",
      "type": "add",
      "after": "c909fd7888a380cb",
      "date": 1671727574148
    },
    {
      "type": "edit",
      "id": "ad8babdc7aba6edb",
      "item": {
        "type": "video",
        "id": "ad8babdc7aba6edb",
        "text": "YOUTUBE fZh656yZKhU"
      },
      "date": 1671727585830
    },
    {
      "type": "edit",
      "id": "ad8babdc7aba6edb",
      "item": {
        "type": "video",
        "id": "ad8babdc7aba6edb",
        "text": "YOUTUBE fZh656yZKhU\nCoding a Federated Wiki Reader, Part I"
      },
      "date": 1671727610855
    },
    {
      "item": {
        "type": "factory",
        "id": "1815f5936c4fe46d"
      },
      "id": "1815f5936c4fe46d",
      "type": "add",
      "after": "ad8babdc7aba6edb",
      "date": 1671727779180
    },
    {
      "type": "edit",
      "id": "1815f5936c4fe46d",
      "item": {
        "type": "paragraph",
        "id": "1815f5936c4fe46d",
        "text": "Calling All Hackers"
      },
      "date": 1671727782529
    },
    {
      "type": "edit",
      "id": "1815f5936c4fe46d",
      "item": {
        "type": "paragraph",
        "id": "1815f5936c4fe46d",
        "text": "Calling All Hackers [https://hapgood.us/2015/07/05/calling-all-hackers/ post]"
      },
      "date": 1671727795013
    },
    {
      "item": {
        "type": "factory",
        "id": "8b5e5a9eb2ab4ce2"
      },
      "id": "8b5e5a9eb2ab4ce2",
      "type": "add",
      "after": "1815f5936c4fe46d",
      "date": 1671729152830
    },
    {
      "type": "edit",
      "id": "8b5e5a9eb2ab4ce2",
      "item": {
        "type": "assets",
        "id": "8b5e5a9eb2ab4ce2",
        "text": "home"
      },
      "date": 1671729156534
    },
    {
      "item": {
        "type": "factory",
        "id": "067c742e64a27030"
      },
      "id": "067c742e64a27030",
      "type": "add",
      "after": "8b5e5a9eb2ab4ce2",
      "date": 1671729669098
    },
    {
      "type": "edit",
      "id": "067c742e64a27030",
      "item": {
        "type": "code",
        "id": "067c742e64a27030",
        "text": "<html>\n<head>\n\n  <meta charset=\"utf-8\">\n  <title>Federated Wiki</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/items.css\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/page.css\"/>\n\n  <!-- this next bit should be moved to an external js, but we're making it brain dead simple here. I used to call it config.js -->\n\n  <script>\n     var page = 'haiku-by-a-robot';\n     var site = 'journal.hapgood.net';\n     rootsite = 'wikitytest.hapgood.net';\n  </script>\n\n  <!-- Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs -->\n\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n  <script src=\"http://wikity.net/defiant-latest.min.js\"></script>\n  <script src=\"http://mike.wikity.net/marked.js\"></script>\n  <script src=\"http://sugarjs.com/release/current/sugar.min.js\"></script>\n\n  <!-- likewise with this js, you should move it somewhere -->\n\n  <script>\n  function redlinks(sitemap, sitemapsite) {\n    console.log(sitemapsite);\n    var found = 0;\n    $('a.redlink').each(function(index, l) {\n      found = JSON.search(sitemap, '//*[title=\"' + $(this).html() + '\"]');\n      console.log($(this).html());\n      if (found.length > 0) {\n        $(this)[0].title = found[0].synopsis;\n        $(this)[0].href = $(this)[0].href.replace($(this).html(), found[0].slug);\n        $(this).removeClass('redlink');\n        if (sitemapsite != site) {\n          $(this)[0].href = $(this)[0].href.replace(\"site)\", \"'\" + sitemapsite + \"')\");\n          $(this)[0].title = 'FROM ' + sitemapsite + ': ' + found[0].synopsis;\n        }\n\n      }\n    });\n  }\n\n  function makeItems(nodename, target) {\n    var str;\n    items = JSON.search(pages[page][toslug(site)], '/d:data' + nodename);\n\n    // title is special case\n    if (nodename == \"/title\") {\n      $(target).html(items[0]);\n      $(target).append(' <a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-share/' + site + '/'+ page + '\">share</a>');\n      $(target).append('<span class=\"smalleditlink\"> / </span><a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-edit/' + site + '/'+ page + '\">edit</a>');\n      return;\n    }\n\n    for (idx in items) {\n      switch (items[idx].type) {\n\n        case \"paragraph\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: formatlinks(items[idx].text)\n          }));\n          break;\n\n        case \"markdown\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text))\n          }));\n          break;\n\n        case \"code\":\n          str = '<div id=\"{id}\" style=\"font-family:monospace\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text.lines().join('<br>').replace('  ','&nbsp;&nbsp;')\n          }));\n          break;\n\n        case \"image\":\n          str = '<figure id=\"{id}\" class=\"id_{id} type_{type}\">' +\n            '<img src=\"{url}\" class=\"type_{type} id_{id}\" />' +\n            '<figcaption>{text}</figcaption>' +\n            '</figure>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text)),\n            url: items[idx].url\n          }));\n          break;\n          \n        case \"audio\":\n           str = '<audio id=\"{id}\" class=\"id_{id} type_{type}\" src=\"{text}\" preload=\"none\" controls=\"\" '+ \n           'style=\"width: 100%;\"><a href=\"{text}\">download audio</a>' +\n           '</audio>';\n           \n            $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text\n          }));\n          break;\n           \n\n        case \"video\":\n          str = '<table id=\"{id}\" class=\"id_{id} type_{type}\"><tr><td>' +\n            '<iframe width=\"560\" height=\"315\" src=\"https://web.archive.org/web/20151226155308/https://www.youtube.com/embed/{vidId}\" frameborder=\"0\" allowfullscreen></iframe></td></tr>'\n          '<tr><td>{text}</td></tr>' +\n          '</table>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text.split('\\n')[1])),\n            url: items[idx].url,\n            vidId: items[idx].text.split('\\n')[0].split(' ')[1]\n          }));\n          break;\n\n      }\n    }\n  }\n\n  function formatlinks(t) {\n    pre_link = \"<a class= \\\"wikilink redlink\\\" href=\\\"javascript:wikilink('\";\n    post_link = \"',site);\\\">\";\n    t = t.replace(/\\[\\[([^\\]]+)\\]\\]/gi, pre_link + \"$1\" + post_link + \"$1\" + '</a>');\n    t = t.replace(/\\[((http|https|ftp):.*?) (.*?)\\]/gi, '<a href=\"$1\">$3</a> <img src=\"http://' + site + '/images/external-link-ltr-icon.png\">');\n    return t;\n  }\n\n  function toslug(s) {\n    slug = s.toLowerCase();\n    slug = slug.replace(/[\\. ]/g, '-');\n    slug = slug.replace(/[^a-zA-Z0-9 \\.\\-]+/g, \"\");\n    return slug;\n  }\n\n  function wikilink(l, s) {\n    window.location.href = window.location.pathname + '?p=' + toslug(l) + '&s=' + s;\n  }\n\n  function addpage(jpage, jsite, data) {\n    if (typeof pages[jpage] === 'undefined') {\n      pages[jpage] = [];\n    }\n    if (typeof pages[jpage][jsite] === 'undefined') {\n      pages[jpage][jsite] = [];\n    }\n    pages[jpage][jsite] = data;\n  }\n\n  function getsitemap() {\n    // gets only this sites sitemap; getforksites() and getrostersites() handle others\n    $.getJSON('http://' + site + '/system/sitemap.json', function(data) {\n      data = Defiant.getSnapshot(data)\n      addpage('sitemap', toslug(site), data);\n      sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week');\n      redlinks(data, site);\n    });\n  }\n\n  function getforksitemaps() {\n    var found = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n    for (s in found) {\n      $.getJSON('http://' + found[s] + '/system/sitemap.json', function(data) {\n        data = Defiant.getSnapshot(data)\n        redlinks(data, found[s]);\n        addpage('sitemap', toslug(found[s]), data);\n      });\n    }\n\n  }\n\n  function doattribution() {\n    var site_arr = [],\n      forks = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n      var s;\n    $(\"#via\").text(site);\n    if (site != rootsite) {\n      $(\"#via\").css(\"color\", \"red\");\n    }\n    if (forks.length) {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks[0] + '\\')\">' + forks[0] + '</a>');\n    } else {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + site + '\\')\">' + site + '</a>');\n    }\n    forks.push(site);\n    $('#editedby').html('');\n    for (s in forks.unique()){\n      $(\"#editedby\").append('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks.unique()[s] + '\\')\">' + forks.unique()[s] + '</a><br/>');\n    }\n  }\n\n  function sitepages(target, filter, filterdesc) {\n    var sitepages = JSON.search(pages['sitemap'][toslug(site)], '/d:data/*[' + filter + ']');\n    console.log('/d:data/*[' + filter + ']');\n    var str = '';\n    sitepages = sitepages.sortBy(function(n) {\n      return n.date;\n    }, desc = true);\n    for (p in sitepages) {\n      str = str + formatlinks('[[' + sitepages[p].title + ']]')+'<br/>';\n    }\n    $(target).html(str);\n    $('#selectedfilter').html('Filter: ' + filterdesc);\n    var dy = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a day ago').getTime(),'Updated in past day')\";\n    var wk = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week')\";\n    var yr = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a year ago').getTime(),'Updated in past year')\";\n\n    str = 'Last <a href=\"{dy}\">day</a>, <a href=\"{wk}\">week</a>, <a href=\"{yr}\">year</a>';\n    $('#selectedfilteropt').html(str.assign({\n      dy: dy,\n      wk: wk,\n      yr: yr\n    }));\n  }\n  </script>\n</head>"
      },
      "date": 1671729671316
    },
    {
      "type": "add",
      "id": "cc60a18f9178bf58",
      "item": {
        "type": "paragraph",
        "id": "cc60a18f9178bf58",
        "text": "https://commonplace.doubleloop.net/wikity"
      },
      "after": "1815f5936c4fe46d",
      "date": 1671730041768
    },
    {
      "type": "edit",
      "id": "cc60a18f9178bf58",
      "item": {
        "type": "paragraph",
        "id": "cc60a18f9178bf58",
        "text": "[https://commonplace.doubleloop.net/wikity wikity]"
      },
      "date": 1671730054759
    },
    {
      "type": "edit",
      "id": "cc60a18f9178bf58",
      "item": {
        "type": "paragraph",
        "id": "cc60a18f9178bf58",
        "text": "[https://commonplace.doubleloop.net/wikity wikity], [[Federated Education[["
      },
      "date": 1671730248761
    },
    {
      "type": "edit",
      "id": "cc60a18f9178bf58",
      "item": {
        "type": "paragraph",
        "id": "cc60a18f9178bf58",
        "text": "[https://commonplace.doubleloop.net/wikity wikity], [[Federated Education]]"
      },
      "date": 1671730253996
    },
    {
      "type": "add",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": " marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/chjj/marked"
      },
      "after": "cc60a18f9178bf58",
      "date": 1671733213638
    },
    {
      "id": "c55769c8a7082565",
      "type": "move",
      "order": [
        "d02d978680a5fe18",
        "d291707e6b455f80",
        "4a4376a90fa7a687",
        "a7a57119302b793d",
        "8b70dfbbf866358f",
        "76fcf385ce3aaf21",
        "d2d3fa23aefd4df7",
        "92c987bb0e547ff3",
        "db3a03545b7061de",
        "aa49c2d04be59fe5",
        "1f87939c7749bf60",
        "5db90362c0abb1b7",
        "86db433d86ecd9a8",
        "fb898557008147d2",
        "64b8f289e69968e3",
        "c2bee1322b568432",
        "92ac1a47ded36f4d",
        "bda942b6f1a94cc8",
        "c909fd7888a380cb",
        "ad8babdc7aba6edb",
        "1815f5936c4fe46d",
        "cc60a18f9178bf58",
        "8b5e5a9eb2ab4ce2",
        "c55769c8a7082565",
        "067c742e64a27030"
      ],
      "date": 1671733216673
    },
    {
      "item": {
        "type": "factory",
        "id": "9bfbe77700d11e09"
      },
      "id": "9bfbe77700d11e09",
      "type": "add",
      "after": "067c742e64a27030",
      "date": 1671733248991
    },
    {
      "type": "edit",
      "id": "067c742e64a27030",
      "item": {
        "type": "code",
        "id": "067c742e64a27030",
        "text": "<html>\n<head>\n\n  <meta charset=\"utf-8\">\n  <title>Federated Wiki</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/items.css\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/page.css\"/>\n\n  <!-- this next bit should be moved to an external js, but we're making it brain dead simple here. I used to call it config.js -->\n\n  <script>\n     var page = 'haiku-by-a-robot';\n     var site = 'journal.hapgood.net';\n     rootsite = 'wikitytest.hapgood.net';\n  </script>\n\n  <!-- Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs -->\n\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n  <script src=\"http://wikity.net/defiant-latest.min.js\"></script>\n  <script src=\"http://mike.wikity.net/marked.js\"></script>\n  "
      },
      "date": 1671733250817
    },
    {
      "type": "edit",
      "id": "9bfbe77700d11e09",
      "item": {
        "type": "code",
        "id": "9bfbe77700d11e09",
        "text": "[…]\n<script src=\"http://sugarjs.com/release/current/sugar.min.js\"></script>\n\n  <!-- likewise with this js, you should move it somewhere -->\n\n  <script>\n  function redlinks(sitemap, sitemapsite) {\n    console.log(sitemapsite);\n    var found = 0;\n    $('a.redlink').each(function(index, l) {\n      found = JSON.search(sitemap, '//*[title=\"' + $(this).html() + '\"]');\n      console.log($(this).html());\n      if (found.length > 0) {\n        $(this)[0].title = found[0].synopsis;\n        $(this)[0].href = $(this)[0].href.replace($(this).html(), found[0].slug);\n        $(this).removeClass('redlink');\n        if (sitemapsite != site) {\n          $(this)[0].href = $(this)[0].href.replace(\"site)\", \"'\" + sitemapsite + \"')\");\n          $(this)[0].title = 'FROM ' + sitemapsite + ': ' + found[0].synopsis;\n        }\n\n      }\n    });\n  }\n\n  function makeItems(nodename, target) {\n    var str;\n    items = JSON.search(pages[page][toslug(site)], '/d:data' + nodename);\n\n    // title is special case\n    if (nodename == \"/title\") {\n      $(target).html(items[0]);\n      $(target).append(' <a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-share/' + site + '/'+ page + '\">share</a>');\n      $(target).append('<span class=\"smalleditlink\"> / </span><a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-edit/' + site + '/'+ page + '\">edit</a>');\n      return;\n    }\n\n    for (idx in items) {\n      switch (items[idx].type) {\n\n        case \"paragraph\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: formatlinks(items[idx].text)\n          }));\n          break;\n\n        case \"markdown\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text))\n          }));\n          break;\n\n        case \"code\":\n          str = '<div id=\"{id}\" style=\"font-family:monospace\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text.lines().join('<br>').replace('  ','&nbsp;&nbsp;')\n          }));\n          break;\n\n        case \"image\":\n          str = '<figure id=\"{id}\" class=\"id_{id} type_{type}\">' +\n            '<img src=\"{url}\" class=\"type_{type} id_{id}\" />' +\n            '<figcaption>{text}</figcaption>' +\n            '</figure>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text)),\n            url: items[idx].url\n          }));\n          break;\n          \n        case \"audio\":\n           str = '<audio id=\"{id}\" class=\"id_{id} type_{type}\" src=\"{text}\" preload=\"none\" controls=\"\" '+ \n           'style=\"width: 100%;\"><a href=\"{text}\">download audio</a>' +\n           '</audio>';\n           \n            $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text\n          }));\n          break;\n           \n\n        case \"video\":\n          str = '<table id=\"{id}\" class=\"id_{id} type_{type}\"><tr><td>' +\n            '<iframe width=\"560\" height=\"315\" src=\"https://web.archive.org/web/20151226155308/https://www.youtube.com/embed/{vidId}\" frameborder=\"0\" allowfullscreen></iframe></td></tr>'\n          '<tr><td>{text}</td></tr>' +\n          '</table>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text.split('\\n')[1])),\n            url: items[idx].url,\n            vidId: items[idx].text.split('\\n')[0].split(' ')[1]\n          }));\n          break;\n\n      }\n    }\n  }\n\n  function formatlinks(t) {\n    pre_link = \"<a class= \\\"wikilink redlink\\\" href=\\\"javascript:wikilink('\";\n    post_link = \"',site);\\\">\";\n    t = t.replace(/\\[\\[([^\\]]+)\\]\\]/gi, pre_link + \"$1\" + post_link + \"$1\" + '</a>');\n    t = t.replace(/\\[((http|https|ftp):.*?) (.*?)\\]/gi, '<a href=\"$1\">$3</a> <img src=\"http://' + site + '/images/external-link-ltr-icon.png\">');\n    return t;\n  }\n\n  function toslug(s) {\n    slug = s.toLowerCase();\n    slug = slug.replace(/[\\. ]/g, '-');\n    slug = slug.replace(/[^a-zA-Z0-9 \\.\\-]+/g, \"\");\n    return slug;\n  }\n\n  function wikilink(l, s) {\n    window.location.href = window.location.pathname + '?p=' + toslug(l) + '&s=' + s;\n  }\n\n  function addpage(jpage, jsite, data) {\n    if (typeof pages[jpage] === 'undefined') {\n      pages[jpage] = [];\n    }\n    if (typeof pages[jpage][jsite] === 'undefined') {\n      pages[jpage][jsite] = [];\n    }\n    pages[jpage][jsite] = data;\n  }\n\n  function getsitemap() {\n    // gets only this sites sitemap; getforksites() and getrostersites() handle others\n    $.getJSON('http://' + site + '/system/sitemap.json', function(data) {\n      data = Defiant.getSnapshot(data)\n      addpage('sitemap', toslug(site), data);\n      sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week');\n      redlinks(data, site);\n    });\n  }\n\n  function getforksitemaps() {\n    var found = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n    for (s in found) {\n      $.getJSON('http://' + found[s] + '/system/sitemap.json', function(data) {\n        data = Defiant.getSnapshot(data)\n        redlinks(data, found[s]);\n        addpage('sitemap', toslug(found[s]), data);\n      });\n    }\n\n  }\n\n  function doattribution() {\n    var site_arr = [],\n      forks = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n      var s;\n    $(\"#via\").text(site);\n    if (site != rootsite) {\n      $(\"#via\").css(\"color\", \"red\");\n    }\n    if (forks.length) {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks[0] + '\\')\">' + forks[0] + '</a>');\n    } else {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + site + '\\')\">' + site + '</a>');\n    }\n    forks.push(site);\n    $('#editedby').html('');\n    for (s in forks.unique()){\n      $(\"#editedby\").append('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks.unique()[s] + '\\')\">' + forks.unique()[s] + '</a><br/>');\n    }\n  }\n\n  function sitepages(target, filter, filterdesc) {\n    var sitepages = JSON.search(pages['sitemap'][toslug(site)], '/d:data/*[' + filter + ']');\n    console.log('/d:data/*[' + filter + ']');\n    var str = '';\n    sitepages = sitepages.sortBy(function(n) {\n      return n.date;\n    }, desc = true);\n    for (p in sitepages) {\n      str = str + formatlinks('[[' + sitepages[p].title + ']]')+'<br/>';\n    }\n    $(target).html(str);\n    $('#selectedfilter').html('Filter: ' + filterdesc);\n    var dy = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a day ago').getTime(),'Updated in past day')\";\n    var wk = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week')\";\n    var yr = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a year ago').getTime(),'Updated in past year')\";\n\n    str = 'Last <a href=\"{dy}\">day</a>, <a href=\"{wk}\">week</a>, <a href=\"{yr}\">year</a>';\n    $('#selectedfilteropt').html(str.assign({\n      dy: dy,\n      wk: wk,\n      yr: yr\n    }));\n  }\n  </script>\n</head>"
      },
      "date": 1671733259377
    },
    {
      "type": "edit",
      "id": "067c742e64a27030",
      "item": {
        "type": "code",
        "id": "067c742e64a27030",
        "text": "<html>\n<head>\n\n  <meta charset=\"utf-8\">\n  <title>Federated Wiki</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/items.css\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/page.css\"/>\n\n  <!-- this next bit should be moved to an external js, but we're making it brain dead simple here. I used to call it config.js -->\n\n  <script>\n     var page = 'haiku-by-a-robot';\n     var site = 'journal.hapgood.net';\n     rootsite = 'wikitytest.hapgood.net';\n  </script>\n\n  <!-- Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs -->\n\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n  <script src=\"http://wikity.net/defiant-latest.min.js\"></script>\n  <script src=\"http://mike.wikity.net/marked.js\"></script> […]\n  "
      },
      "date": 1671733264079
    },
    {
      "id": "c55769c8a7082565",
      "type": "move",
      "order": [
        "d02d978680a5fe18",
        "d291707e6b455f80",
        "4a4376a90fa7a687",
        "a7a57119302b793d",
        "8b70dfbbf866358f",
        "76fcf385ce3aaf21",
        "d2d3fa23aefd4df7",
        "92c987bb0e547ff3",
        "db3a03545b7061de",
        "aa49c2d04be59fe5",
        "1f87939c7749bf60",
        "5db90362c0abb1b7",
        "86db433d86ecd9a8",
        "fb898557008147d2",
        "64b8f289e69968e3",
        "c2bee1322b568432",
        "92ac1a47ded36f4d",
        "bda942b6f1a94cc8",
        "c909fd7888a380cb",
        "ad8babdc7aba6edb",
        "1815f5936c4fe46d",
        "cc60a18f9178bf58",
        "8b5e5a9eb2ab4ce2",
        "067c742e64a27030",
        "c55769c8a7082565",
        "9bfbe77700d11e09"
      ],
      "date": 1671733267394
    },
    {
      "type": "edit",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": "marked - a markdown parser\nCopyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n[https://github.com/chjj/marked github]"
      },
      "date": 1671733290660
    },
    {
      "type": "edit",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": "DefiantJS "
      },
      "date": 1671733542691
    },
    {
      "type": "add",
      "id": "bbd3c79c6f1a9532",
      "item": {
        "type": "paragraph",
        "id": "bbd3c79c6f1a9532",
        "text": "marked - a markdown parser\nCopyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n[https://github.com/chjj/marked github]"
      },
      "after": "c55769c8a7082565",
      "date": 1671733543893
    },
    {
      "type": "edit",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": "DefiantJS [https://github.com/hbi99/defiant.js github]"
      },
      "date": 1671733574110
    },
    {
      "type": "edit",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": "jquery/1.11.2"
      },
      "date": 1671733619505
    },
    {
      "type": "add",
      "id": "5ea24376aafba167",
      "item": {
        "type": "paragraph",
        "id": "5ea24376aafba167",
        "text": "DefiantJS [https://github.com/hbi99/defiant.js github]"
      },
      "after": "c55769c8a7082565",
      "date": 1671733620106
    },
    {
      "type": "edit",
      "id": "c55769c8a7082565",
      "item": {
        "type": "paragraph",
        "id": "c55769c8a7082565",
        "text": "Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs"
      },
      "date": 1671733636307
    },
    {
      "type": "add",
      "id": "b842cffec005254a",
      "item": {
        "type": "paragraph",
        "id": "b842cffec005254a",
        "text": "jquery/1.11.2"
      },
      "after": "c55769c8a7082565",
      "date": 1671733636901
    },
    {
      "type": "edit",
      "id": "9bfbe77700d11e09",
      "item": {
        "type": "code",
        "id": "9bfbe77700d11e09",
        "text": "[…]\n\n  <!-- likewise with this js, you should move it somewhere -->\n\n  <script>\n  function redlinks(sitemap, sitemapsite) {\n    console.log(sitemapsite);\n    var found = 0;\n    $('a.redlink').each(function(index, l) {\n      found = JSON.search(sitemap, '//*[title=\"' + $(this).html() + '\"]');\n      console.log($(this).html());\n      if (found.length > 0) {\n        $(this)[0].title = found[0].synopsis;\n        $(this)[0].href = $(this)[0].href.replace($(this).html(), found[0].slug);\n        $(this).removeClass('redlink');\n        if (sitemapsite != site) {\n          $(this)[0].href = $(this)[0].href.replace(\"site)\", \"'\" + sitemapsite + \"')\");\n          $(this)[0].title = 'FROM ' + sitemapsite + ': ' + found[0].synopsis;\n        }\n\n      }\n    });\n  }\n\n  function makeItems(nodename, target) {\n    var str;\n    items = JSON.search(pages[page][toslug(site)], '/d:data' + nodename);\n\n    // title is special case\n    if (nodename == \"/title\") {\n      $(target).html(items[0]);\n      $(target).append(' <a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-share/' + site + '/'+ page + '\">share</a>');\n      $(target).append('<span class=\"smalleditlink\"> / </span><a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-edit/' + site + '/'+ page + '\">edit</a>');\n      return;\n    }\n\n    for (idx in items) {\n      switch (items[idx].type) {\n\n        case \"paragraph\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: formatlinks(items[idx].text)\n          }));\n          break;\n\n        case \"markdown\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text))\n          }));\n          break;\n\n        case \"code\":\n          str = '<div id=\"{id}\" style=\"font-family:monospace\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text.lines().join('<br>').replace('  ','&nbsp;&nbsp;')\n          }));\n          break;\n\n        case \"image\":\n          str = '<figure id=\"{id}\" class=\"id_{id} type_{type}\">' +\n            '<img src=\"{url}\" class=\"type_{type} id_{id}\" />' +\n            '<figcaption>{text}</figcaption>' +\n            '</figure>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text)),\n            url: items[idx].url\n          }));\n          break;\n          \n        case \"audio\":\n           str = '<audio id=\"{id}\" class=\"id_{id} type_{type}\" src=\"{text}\" preload=\"none\" controls=\"\" '+ \n           'style=\"width: 100%;\"><a href=\"{text}\">download audio</a>' +\n           '</audio>';\n           \n            $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text\n          }));\n          break;\n           \n\n        case \"video\":\n          str = '<table id=\"{id}\" class=\"id_{id} type_{type}\"><tr><td>' +\n            '<iframe width=\"560\" height=\"315\" src=\"https://web.archive.org/web/20151226155308/https://www.youtube.com/embed/{vidId}\" frameborder=\"0\" allowfullscreen></iframe></td></tr>'\n          '<tr><td>{text}</td></tr>' +\n          '</table>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text.split('\\n')[1])),\n            url: items[idx].url,\n            vidId: items[idx].text.split('\\n')[0].split(' ')[1]\n          }));\n          break;\n\n      }\n    }\n  }\n\n  function formatlinks(t) {\n    pre_link = \"<a class= \\\"wikilink redlink\\\" href=\\\"javascript:wikilink('\";\n    post_link = \"',site);\\\">\";\n    t = t.replace(/\\[\\[([^\\]]+)\\]\\]/gi, pre_link + \"$1\" + post_link + \"$1\" + '</a>');\n    t = t.replace(/\\[((http|https|ftp):.*?) (.*?)\\]/gi, '<a href=\"$1\">$3</a> <img src=\"http://' + site + '/images/external-link-ltr-icon.png\">');\n    return t;\n  }\n\n  function toslug(s) {\n    slug = s.toLowerCase();\n    slug = slug.replace(/[\\. ]/g, '-');\n    slug = slug.replace(/[^a-zA-Z0-9 \\.\\-]+/g, \"\");\n    return slug;\n  }\n\n  function wikilink(l, s) {\n    window.location.href = window.location.pathname + '?p=' + toslug(l) + '&s=' + s;\n  }\n\n  function addpage(jpage, jsite, data) {\n    if (typeof pages[jpage] === 'undefined') {\n      pages[jpage] = [];\n    }\n    if (typeof pages[jpage][jsite] === 'undefined') {\n      pages[jpage][jsite] = [];\n    }\n    pages[jpage][jsite] = data;\n  }\n\n  function getsitemap() {\n    // gets only this sites sitemap; getforksites() and getrostersites() handle others\n    $.getJSON('http://' + site + '/system/sitemap.json', function(data) {\n      data = Defiant.getSnapshot(data)\n      addpage('sitemap', toslug(site), data);\n      sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week');\n      redlinks(data, site);\n    });\n  }\n\n  function getforksitemaps() {\n    var found = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n    for (s in found) {\n      $.getJSON('http://' + found[s] + '/system/sitemap.json', function(data) {\n        data = Defiant.getSnapshot(data)\n        redlinks(data, found[s]);\n        addpage('sitemap', toslug(found[s]), data);\n      });\n    }\n\n  }\n\n  function doattribution() {\n    var site_arr = [],\n      forks = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n      var s;\n    $(\"#via\").text(site);\n    if (site != rootsite) {\n      $(\"#via\").css(\"color\", \"red\");\n    }\n    if (forks.length) {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks[0] + '\\')\">' + forks[0] + '</a>');\n    } else {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + site + '\\')\">' + site + '</a>');\n    }\n    forks.push(site);\n    $('#editedby').html('');\n    for (s in forks.unique()){\n      $(\"#editedby\").append('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks.unique()[s] + '\\')\">' + forks.unique()[s] + '</a><br/>');\n    }\n  }\n\n  function sitepages(target, filter, filterdesc) {\n    var sitepages = JSON.search(pages['sitemap'][toslug(site)], '/d:data/*[' + filter + ']');\n    console.log('/d:data/*[' + filter + ']');\n    var str = '';\n    sitepages = sitepages.sortBy(function(n) {\n      return n.date;\n    }, desc = true);\n    for (p in sitepages) {\n      str = str + formatlinks('[[' + sitepages[p].title + ']]')+'<br/>';\n    }\n    $(target).html(str);\n    $('#selectedfilter').html('Filter: ' + filterdesc);\n    var dy = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a day ago').getTime(),'Updated in past day')\";\n    var wk = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week')\";\n    var yr = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a year ago').getTime(),'Updated in past year')\";\n\n    str = 'Last <a href=\"{dy}\">day</a>, <a href=\"{wk}\">week</a>, <a href=\"{yr}\">year</a>';\n    $('#selectedfilteropt').html(str.assign({\n      dy: dy,\n      wk: wk,\n      yr: yr\n    }));\n  }\n  </script>\n</head>"
      },
      "date": 1671733666598
    },
    {
      "type": "edit",
      "id": "067c742e64a27030",
      "item": {
        "type": "code",
        "id": "067c742e64a27030",
        "text": "<html>\n<head>\n\n  <meta charset=\"utf-8\">\n  <title>Federated Wiki</title>\n\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/items.css\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://nicole.wikity.net/elements/page.css\"/>\n\n  <!-- this next bit should be moved to an external js, but we're making it brain dead simple here. I used to call it config.js -->\n\n  <script>\n     var page = 'haiku-by-a-robot';\n     var site = 'journal.hapgood.net';\n     rootsite = 'wikitytest.hapgood.net';\n  </script>\n\n  <!-- Libraries: jQuery, Defiant for XPath, marked for markdown, sugar for basic string/array/url/date funcs -->\n\n  <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n  <script src=\"http://wikity.net/defiant-latest.min.js\"></script>\n  <script src=\"http://mike.wikity.net/marked.js\"></script>\n<script src=\"http://sugarjs.com/release/current/sugar.min.js\"></script>\n\n  […]\n  "
      },
      "date": 1671733688100
    },
    {
      "type": "edit",
      "id": "9bfbe77700d11e09",
      "item": {
        "type": "code",
        "id": "9bfbe77700d11e09",
        "text": "  […]\n\n  <!-- likewise with this js, you should move it somewhere -->\n\n  <script>\n  function redlinks(sitemap, sitemapsite) {\n    console.log(sitemapsite);\n    var found = 0;\n    $('a.redlink').each(function(index, l) {\n      found = JSON.search(sitemap, '//*[title=\"' + $(this).html() + '\"]');\n      console.log($(this).html());\n      if (found.length > 0) {\n        $(this)[0].title = found[0].synopsis;\n        $(this)[0].href = $(this)[0].href.replace($(this).html(), found[0].slug);\n        $(this).removeClass('redlink');\n        if (sitemapsite != site) {\n          $(this)[0].href = $(this)[0].href.replace(\"site)\", \"'\" + sitemapsite + \"')\");\n          $(this)[0].title = 'FROM ' + sitemapsite + ': ' + found[0].synopsis;\n        }\n\n      }\n    });\n  }\n\n  function makeItems(nodename, target) {\n    var str;\n    items = JSON.search(pages[page][toslug(site)], '/d:data' + nodename);\n\n    // title is special case\n    if (nodename == \"/title\") {\n      $(target).html(items[0]);\n      $(target).append(' <a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-share/' + site + '/'+ page + '\">share</a>');\n      $(target).append('<span class=\"smalleditlink\"> / </span><a target=\"fedwiki\" class=\"smalleditlink\" href=\"http://' + rootsite + '/wikity.hapgood.net/how-to-edit/' + site + '/'+ page + '\">edit</a>');\n      return;\n    }\n\n    for (idx in items) {\n      switch (items[idx].type) {\n\n        case \"paragraph\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: formatlinks(items[idx].text)\n          }));\n          break;\n\n        case \"markdown\":\n          str = '<div id=\"{id}\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text))\n          }));\n          break;\n\n        case \"code\":\n          str = '<div id=\"{id}\" style=\"font-family:monospace\" class=\"id_{id} type_{type}\">{text}</div>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text.lines().join('<br>').replace('  ','&nbsp;&nbsp;')\n          }));\n          break;\n\n        case \"image\":\n          str = '<figure id=\"{id}\" class=\"id_{id} type_{type}\">' +\n            '<img src=\"{url}\" class=\"type_{type} id_{id}\" />' +\n            '<figcaption>{text}</figcaption>' +\n            '</figure>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text)),\n            url: items[idx].url\n          }));\n          break;\n          \n        case \"audio\":\n           str = '<audio id=\"{id}\" class=\"id_{id} type_{type}\" src=\"{text}\" preload=\"none\" controls=\"\" '+ \n           'style=\"width: 100%;\"><a href=\"{text}\">download audio</a>' +\n           '</audio>';\n           \n            $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: items[idx].text\n          }));\n          break;\n           \n\n        case \"video\":\n          str = '<table id=\"{id}\" class=\"id_{id} type_{type}\"><tr><td>' +\n            '<iframe width=\"560\" height=\"315\" src=\"https://web.archive.org/web/20151226155308/https://www.youtube.com/embed/{vidId}\" frameborder=\"0\" allowfullscreen></iframe></td></tr>'\n          '<tr><td>{text}</td></tr>' +\n          '</table>';\n\n          $(target).append(str.assign({\n            id: items[idx].id,\n            type: items[idx].type,\n            text: marked(formatlinks(items[idx].text.split('\\n')[1])),\n            url: items[idx].url,\n            vidId: items[idx].text.split('\\n')[0].split(' ')[1]\n          }));\n          break;\n\n      }\n    }\n  }\n\n  function formatlinks(t) {\n    pre_link = \"<a class= \\\"wikilink redlink\\\" href=\\\"javascript:wikilink('\";\n    post_link = \"',site);\\\">\";\n    t = t.replace(/\\[\\[([^\\]]+)\\]\\]/gi, pre_link + \"$1\" + post_link + \"$1\" + '</a>');\n    t = t.replace(/\\[((http|https|ftp):.*?) (.*?)\\]/gi, '<a href=\"$1\">$3</a> <img src=\"http://' + site + '/images/external-link-ltr-icon.png\">');\n    return t;\n  }\n\n  function toslug(s) {\n    slug = s.toLowerCase();\n    slug = slug.replace(/[\\. ]/g, '-');\n    slug = slug.replace(/[^a-zA-Z0-9 \\.\\-]+/g, \"\");\n    return slug;\n  }\n\n  function wikilink(l, s) {\n    window.location.href = window.location.pathname + '?p=' + toslug(l) + '&s=' + s;\n  }\n\n  function addpage(jpage, jsite, data) {\n    if (typeof pages[jpage] === 'undefined') {\n      pages[jpage] = [];\n    }\n    if (typeof pages[jpage][jsite] === 'undefined') {\n      pages[jpage][jsite] = [];\n    }\n    pages[jpage][jsite] = data;\n  }\n\n  function getsitemap() {\n    // gets only this sites sitemap; getforksites() and getrostersites() handle others\n    $.getJSON('http://' + site + '/system/sitemap.json', function(data) {\n      data = Defiant.getSnapshot(data)\n      addpage('sitemap', toslug(site), data);\n      sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week');\n      redlinks(data, site);\n    });\n  }\n\n  function getforksitemaps() {\n    var found = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n    for (s in found) {\n      $.getJSON('http://' + found[s] + '/system/sitemap.json', function(data) {\n        data = Defiant.getSnapshot(data)\n        redlinks(data, found[s]);\n        addpage('sitemap', toslug(found[s]), data);\n      });\n    }\n\n  }\n\n  function doattribution() {\n    var site_arr = [],\n      forks = JSON.search(pages[page][toslug(site)], '//web.archive.org/web/20151226155308/http://site');\n      var s;\n    $(\"#via\").text(site);\n    if (site != rootsite) {\n      $(\"#via\").css(\"color\", \"red\");\n    }\n    if (forks.length) {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks[0] + '\\')\">' + forks[0] + '</a>');\n    } else {\n      $(\"#op\").html('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + site + '\\')\">' + site + '</a>');\n    }\n    forks.push(site);\n    $('#editedby').html('');\n    for (s in forks.unique()){\n      $(\"#editedby\").append('<a href=\"javascript:wikilink(\\''+ page + '\\',\\'' + forks.unique()[s] + '\\')\">' + forks.unique()[s] + '</a><br/>');\n    }\n  }\n\n  function sitepages(target, filter, filterdesc) {\n    var sitepages = JSON.search(pages['sitemap'][toslug(site)], '/d:data/*[' + filter + ']');\n    console.log('/d:data/*[' + filter + ']');\n    var str = '';\n    sitepages = sitepages.sortBy(function(n) {\n      return n.date;\n    }, desc = true);\n    for (p in sitepages) {\n      str = str + formatlinks('[[' + sitepages[p].title + ']]')+'<br/>';\n    }\n    $(target).html(str);\n    $('#selectedfilter').html('Filter: ' + filterdesc);\n    var dy = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a day ago').getTime(),'Updated in past day')\";\n    var wk = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a week ago').getTime(),'Updated in past week')\";\n    var yr = \"javascript:sitepages('#selectedpages', 'date > ' + Date.create('a year ago').getTime(),'Updated in past year')\";\n\n    str = 'Last <a href=\"{dy}\">day</a>, <a href=\"{wk}\">week</a>, <a href=\"{yr}\">year</a>';\n    $('#selectedfilteropt').html(str.assign({\n      dy: dy,\n      wk: wk,\n      yr: yr\n    }));\n  }\n  </script>\n</head>"
      },
      "date": 1671733693477
    },
    {
      "type": "add",
      "id": "7b35c9cbb8e411bb",
      "item": {
        "type": "paragraph",
        "id": "7b35c9cbb8e411bb",
        "text": "Sugar"
      },
      "after": "bbd3c79c6f1a9532",
      "date": 1671733742212
    },
    {
      "type": "edit",
      "id": "7b35c9cbb8e411bb",
      "item": {
        "type": "paragraph",
        "id": "7b35c9cbb8e411bb",
        "text": "Sugar [https://sugarjs.com/ site]"
      },
      "date": 1671733752057
    },
    {
      "item": {
        "type": "factory",
        "id": "923eecb1d6ea0d70"
      },
      "id": "923eecb1d6ea0d70",
      "type": "add",
      "after": "9bfbe77700d11e09",
      "date": 1671733931943
    },
    {
      "type": "edit",
      "id": "923eecb1d6ea0d70",
      "item": {
        "type": "video",
        "id": "923eecb1d6ea0d70",
        "text": "YOUTUBE aL5YI6KLnfM"
      },
      "date": 1671733940927
    },
    {
      "item": {
        "type": "factory",
        "id": "f75fe5b1523cf9b0"
      },
      "id": "f75fe5b1523cf9b0",
      "type": "add",
      "after": "923eecb1d6ea0d70",
      "date": 1671733990144
    },
    {
      "type": "edit",
      "id": "f75fe5b1523cf9b0",
      "item": {
        "type": "video",
        "id": "f75fe5b1523cf9b0",
        "text": "YOUTUBE 3hoCU4H40Zc"
      },
      "date": 1671734000318
    }
  ]
}