{
  "title": "2021-12-30",
  "story": [
    {
      "type": "paragraph",
      "id": "70ed4ed22fa71ae0",
      "text": "Using [[PyTesseract]] to read the Matrix movie script PDF"
    },
    {
      "type": "pagefold",
      "id": "e97f66f2be65188b",
      "text": "Federated Wiki"
    },
    {
      "type": "paragraph",
      "id": "049f3d73b271fbe8",
      "text": "Jeff Miller via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640818706893417CUNfn:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nRalf Barkow: I am happily amused to see that the analogy of collaboratively edited spaces in Matrix immediately recalls [[Google Wave]]: \"In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?)\". I've seen Wave-like things getting reinvented other places, and it's good to see that it hasn't been forgotten as prior art / a reference point."
    },
    {
      "type": "pagefold",
      "id": "4aef8b0130154e75",
      "text": "gt"
    },
    {
      "type": "reference",
      "id": "ededd1c6dbf75cdd",
      "site": "wiki.ralfbarkow.ch",
      "slug": "typed-link",
      "title": "Typed Link",
      "text": "[[SeanDeNigris]] via [https://discord.com/channels/729445214812504107/729445215341117522/925882453577576468 discord]"
    },
    {
      "type": "pagefold",
      "id": "11946c91d7949b6d",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "4e60f00a5aaa1a5b",
      "text": "# Matrix Widget API v2 (RFC)\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget [[iframe]] may never fire a DOM ..."
    },
    {
      "type": "markdown",
      "id": "0b3d7b8adef9bd4f",
      "text": "An Introduction To Widgets\nWhat is a widget?\nWidgets are HTML and Javascript content / applications that can be embedded within, and communicate with Matrix clients.\nWidgets are able to request permissions to perform actions on a user's behalf (e.g. posting messages into the user's timeline or receiving specific types of events).\nWidgets can make use of the HTML5 [[Window.postMessage]] API for defined communication between Matrix clients and embedded \"agents\" (widgets).\nIn essence a widget is simply an embedded [[iframe]] in a Matrix client. So it can be as simple as an arbitrary URL with associated metadata.\n"
    },
    {
      "type": "pagefold",
      "id": "d986c68a1da479df",
      "text": "The Assets Plugin "
    },
    {
      "type": "paragraph",
      "id": "2a115683f88b1205",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640880252920519VzUfH:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix] An asset is a file stored and offered to the internet as a supplement to json encoded wiki pages we exist to share. The Assets plugin offers read-write access to a site's assets and offers a read-only view into similar assets held on sites that have forked a page presenting Assets through the plugin. There is an analogy here with links on forked pages that will go back to the originating site when necessary. "
    },
    {
      "type": "markdown",
      "id": "6da845e17c65d46d",
      "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\n* Do any of you other pages have any info on assets I might want?\n* At which point multiple Assets plugins respond, why yes, I know some assets.\n* OK, one at a time, what assets do you see and how can I get them?\n* Then each Assets plugin describes in data what they have drawn on the screen.\n"
    },
    {
      "type": "markdown",
      "id": "61f4acc3a7dd4e16",
      "text": "It is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
    },
    {
      "type": "paragraph",
      "id": "335b451a4b1c3dcc",
      "text": "I have now written a half dozen Frame based html scripts that seek Assets plugin's data. Each time I have to imagine what any Assets plugin I might encounter might be thinking. For example, is it itself on a remote page and taking that remote perspective? So the frame.js code that Eric diagnosed was my attempt to \"flatten\" this variability. You may have noticed that the fix was inside a triply-nested loop.  "
    },
    {
      "type": "paragraph",
      "id": "0f15f1f1c46fcda7",
      "text": "Eric fairly asks, should we refine this difficult code that interprets the data or revise the Assets plugin to offer more easily interpreted data?\nHe gave me the code for the latter so of course I took that path. But this does leave me with the more philosophical question, where should the case analysis of tricky sharing scenarios be concentrated? I'm thinking that we have it divided up pretty well but only because it seems to be working right now."
    },
    {
      "type": "markdown",
      "id": "ebac83c0a83bf366",
      "text": "Now, have a look yourself. Click 'sources' to see what the Assets plugins return. Click 'assets' to see how frame.js has flattened this in its particular context. http://marc.tries.fed.wiki/view/svg-enrichment/code.fed.wiki/frame-integration-promises"
    },
    {
      "type": "reference",
      "id": "43d5093a10a40ccc",
      "site": "marc.tries.fed.wiki",
      "slug": "svg-enrichment",
      "title": "SVG Enrichment",
      "text": "We try writing a click-enrichment script for sequence diagrams. [https://sequencediagram.org/ site]"
    },
    {
      "type": "reference",
      "id": "d30fe8d2a385c053",
      "site": "code.fed.wiki",
      "slug": "frame-integration-promises",
      "title": "Frame Integration Promises",
      "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
    },
    {
      "type": "pagefold",
      "id": "33ef0e1b75413d2f",
      "text": "Tree Structure"
    },
    {
      "type": "paragraph",
      "id": "3e8c3e8d1290d349",
      "text": "[[Tree Structure]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2021-12-30",
        "story": []
      },
      "date": 1640848795403
    },
    {
      "item": {
        "type": "factory",
        "id": "70ed4ed22fa71ae0"
      },
      "id": "70ed4ed22fa71ae0",
      "type": "add",
      "date": 1640848797052
    },
    {
      "type": "edit",
      "id": "70ed4ed22fa71ae0",
      "item": {
        "type": "paragraph",
        "id": "70ed4ed22fa71ae0",
        "text": "Using [[PyTesseract]] to read the Matrix movie script PDF"
      },
      "date": 1640848805145
    },
    {
      "item": {
        "type": "factory",
        "id": "e97f66f2be65188b"
      },
      "id": "e97f66f2be65188b",
      "type": "add",
      "after": "70ed4ed22fa71ae0",
      "date": 1640849144944
    },
    {
      "type": "edit",
      "id": "e97f66f2be65188b",
      "item": {
        "type": "pagefold",
        "id": "e97f66f2be65188b",
        "text": "Federated Wiki"
      },
      "date": 1640849151355
    },
    {
      "item": {
        "type": "factory",
        "id": "049f3d73b271fbe8"
      },
      "id": "049f3d73b271fbe8",
      "type": "add",
      "after": "e97f66f2be65188b",
      "date": 1640849152674
    },
    {
      "type": "edit",
      "id": "049f3d73b271fbe8",
      "item": {
        "type": "paragraph",
        "id": "049f3d73b271fbe8",
        "text": "Jeff Miller\nRalf Barkow: I am happily amused to see that the analogy of collaboratively edited spaces in Matrix immediately recalls Google Wave: \"In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?)\". I've seen Wave-like things getting reinvented other places, and it's good to see that it hasn't been forgotten as prior art / a reference point."
      },
      "date": 1640849155929
    },
    {
      "type": "edit",
      "id": "049f3d73b271fbe8",
      "item": {
        "type": "paragraph",
        "id": "049f3d73b271fbe8",
        "text": "Jeff Miller via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640818706893417CUNfn:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nRalf Barkow: I am happily amused to see that the analogy of collaboratively edited spaces in Matrix immediately recalls Google Wave: \"In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?)\". I've seen Wave-like things getting reinvented other places, and it's good to see that it hasn't been forgotten as prior art / a reference point."
      },
      "date": 1640849176726
    },
    {
      "type": "edit",
      "id": "049f3d73b271fbe8",
      "item": {
        "type": "paragraph",
        "id": "049f3d73b271fbe8",
        "text": "Jeff Miller via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640818706893417CUNfn:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nRalf Barkow: I am happily amused to see that the analogy of collaboratively edited spaces in Matrix immediately recalls [[Google Wave]]: \"In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?)\". I've seen Wave-like things getting reinvented other places, and it's good to see that it hasn't been forgotten as prior art / a reference point."
      },
      "date": 1640849234005
    },
    {
      "item": {
        "type": "factory",
        "id": "1981bd9d73dcfe6b"
      },
      "id": "1981bd9d73dcfe6b",
      "type": "add",
      "after": "049f3d73b271fbe8",
      "date": 1640855844355
    },
    {
      "type": "remove",
      "id": "1981bd9d73dcfe6b",
      "date": 1640855846104
    },
    {
      "item": {
        "type": "factory",
        "id": "4aef8b0130154e75"
      },
      "id": "4aef8b0130154e75",
      "type": "add",
      "after": "049f3d73b271fbe8",
      "date": 1640855847727
    },
    {
      "type": "edit",
      "id": "4aef8b0130154e75",
      "item": {
        "type": "pagefold",
        "id": "4aef8b0130154e75",
        "text": "gt"
      },
      "date": 1640855850641
    },
    {
      "item": {
        "type": "factory",
        "id": "64a28b9455d241e5"
      },
      "id": "64a28b9455d241e5",
      "type": "add",
      "after": "4aef8b0130154e75",
      "date": 1640855852778
    },
    {
      "type": "edit",
      "id": "64a28b9455d241e5",
      "item": {
        "type": "paragraph",
        "id": "64a28b9455d241e5",
        "text": "[[SeanDeNigris]] via [discord]\nSo if this was fleshed out, a typed link could be contained by let's say a snippet and could not only hold arbitrary data, but eventually affect the UI, like perhaps present extra toolbar widgets?\ntudor girba — heute um 08:46 Uhr\nYes, that would be the idea."
      },
      "date": 1640855873377
    },
    {
      "type": "edit",
      "id": "64a28b9455d241e5",
      "item": {
        "type": "paragraph",
        "id": "64a28b9455d241e5",
        "text": "[[SeanDeNigris]] via [https://discord.com/channels/729445214812504107/729445215341117522/925882453577576468 discord]\nSo if this was fleshed out, a typed link could be contained by let's say a snippet and could not only hold arbitrary data, but eventually affect the UI, like perhaps present extra toolbar widgets?\ntudor girba — heute um 08:46 Uhr\nYes, that would be the idea."
      },
      "date": 1640855885331
    },
    {
      "type": "edit",
      "id": "64a28b9455d241e5",
      "item": {
        "type": "paragraph",
        "id": "64a28b9455d241e5",
        "text": "[[SeanDeNigris]] via [https://discord.com/channels/729445214812504107/729445215341117522/925882453577576468 discord]\nSo if this was fleshed out, a typed link could be contained by let's say a snippet and could not only hold arbitrary data, but eventually affect the UI, like perhaps present extra toolbar widgets?"
      },
      "date": 1640855894852
    },
    {
      "type": "add",
      "id": "37cb8d53be91f3be",
      "item": {
        "type": "paragraph",
        "id": "37cb8d53be91f3be",
        "text": "tudor girba — heute um 08:46 Uhr\nYes, that would be the idea."
      },
      "after": "64a28b9455d241e5",
      "date": 1640855895622
    },
    {
      "type": "edit",
      "id": "64a28b9455d241e5",
      "item": {
        "type": "paragraph",
        "id": "64a28b9455d241e5",
        "text": "[[Typed Link]]"
      },
      "date": 1640855969658
    },
    {
      "type": "add",
      "id": "511433826276fc11",
      "item": {
        "type": "paragraph",
        "id": "511433826276fc11",
        "text": "[[SeanDeNigris]] via [https://discord.com/channels/729445214812504107/729445215341117522/925882453577576468 discord]\nSo if this was fleshed out, a typed link could be contained by let's say a snippet and could not only hold arbitrary data, but eventually affect the UI, like perhaps present extra toolbar widgets?"
      },
      "after": "64a28b9455d241e5",
      "date": 1640855971790
    },
    {
      "id": "511433826276fc11",
      "type": "remove",
      "date": 1640855977373
    },
    {
      "id": "37cb8d53be91f3be",
      "type": "remove",
      "date": 1640855979760
    },
    {
      "item": {
        "type": "factory",
        "id": "ededd1c6dbf75cdd"
      },
      "id": "ededd1c6dbf75cdd",
      "type": "add",
      "after": "64a28b9455d241e5",
      "date": 1640855981133
    },
    {
      "type": "edit",
      "id": "ededd1c6dbf75cdd",
      "item": {
        "type": "reference",
        "id": "ededd1c6dbf75cdd",
        "site": "wiki.ralfbarkow.ch",
        "slug": "typed-link",
        "title": "Typed Link",
        "text": "[[SeanDeNigris]] via [https://discord.com/channels/729445214812504107/729445215341117522/925882453577576468 discord]"
      },
      "date": 1640855983184
    },
    {
      "type": "remove",
      "id": "64a28b9455d241e5",
      "date": 1640855985657
    },
    {
      "item": {
        "type": "factory",
        "id": "11946c91d7949b6d"
      },
      "id": "11946c91d7949b6d",
      "type": "add",
      "after": "ededd1c6dbf75cdd",
      "date": 1640883047967
    },
    {
      "type": "edit",
      "id": "11946c91d7949b6d",
      "item": {
        "type": "pagefold",
        "id": "11946c91d7949b6d",
        "text": "~"
      },
      "date": 1640883052638
    },
    {
      "item": {
        "type": "factory",
        "id": "4e60f00a5aaa1a5b"
      },
      "id": "4e60f00a5aaa1a5b",
      "type": "add",
      "after": "11946c91d7949b6d",
      "date": 1640883054473
    },
    {
      "type": "edit",
      "id": "4e60f00a5aaa1a5b",
      "item": {
        "type": "paragraph",
        "id": "4e60f00a5aaa1a5b",
        "text": "Matrix Widget API v2 (RFC) - Google Docs\nhttps://docs.google.com › edit\n· Diese Seite übersetzen\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget iframe may never fire a DOM ..."
      },
      "date": 1640883057254
    },
    {
      "type": "edit",
      "id": "4e60f00a5aaa1a5b",
      "item": {
        "type": "paragraph",
        "id": "4e60f00a5aaa1a5b",
        "text": "Matrix Widget API v2 (RFC) - Google Docs\nhttps://docs.google.com › edit\n· Diese Seite übersetzen\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget [[iframe]] may never fire a DOM ..."
      },
      "date": 1640883067502
    },
    {
      "type": "edit",
      "id": "4e60f00a5aaa1a5b",
      "item": {
        "type": "paragraph",
        "id": "4e60f00a5aaa1a5b",
        "text": "Matrix Widget API v2 (RFC) - Google Docs\nhttps://docs.google.com › edit\n\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget [[iframe]] may never fire a DOM ..."
      },
      "date": 1640883093297
    },
    {
      "item": {
        "type": "factory",
        "id": "0b3d7b8adef9bd4f"
      },
      "id": "0b3d7b8adef9bd4f",
      "type": "add",
      "after": "4e60f00a5aaa1a5b",
      "date": 1640883164898
    },
    {
      "type": "edit",
      "id": "0b3d7b8adef9bd4f",
      "item": {
        "type": "paragraph",
        "id": "0b3d7b8adef9bd4f",
        "text": "An Introduction To Widgets\nWhat is a widget?\nWidgets are HTML and Javascript content / applications that can be embedded within, and communicate with Matrix clients.\nWidgets are able to request permissions to perform actions on a user's behalf (e.g. posting messages into the user's timeline or receiving specific types of events).\nWidgets can make use of the HTML5 Window.postMessage API for defined communication between Matrix clients and embedded \"agents\" (widgets).\nIn essence a widget is simply an embedded iframe in a Matrix client. So it can be as simple as an arbitrary URL with associated metadata.\n"
      },
      "date": 1640883167554
    },
    {
      "type": "edit",
      "id": "0b3d7b8adef9bd4f",
      "item": {
        "type": "markdown",
        "id": "0b3d7b8adef9bd4f",
        "text": "An Introduction To Widgets\nWhat is a widget?\nWidgets are HTML and Javascript content / applications that can be embedded within, and communicate with Matrix clients.\nWidgets are able to request permissions to perform actions on a user's behalf (e.g. posting messages into the user's timeline or receiving specific types of events).\nWidgets can make use of the HTML5 Window.postMessage API for defined communication between Matrix clients and embedded \"agents\" (widgets).\nIn essence a widget is simply an embedded iframe in a Matrix client. So it can be as simple as an arbitrary URL with associated metadata.\n"
      },
      "date": 1640883169092
    },
    {
      "type": "edit",
      "id": "0b3d7b8adef9bd4f",
      "item": {
        "type": "markdown",
        "id": "0b3d7b8adef9bd4f",
        "text": "An Introduction To Widgets\nWhat is a widget?\nWidgets are HTML and Javascript content / applications that can be embedded within, and communicate with Matrix clients.\nWidgets are able to request permissions to perform actions on a user's behalf (e.g. posting messages into the user's timeline or receiving specific types of events).\nWidgets can make use of the HTML5 [[Window.postMessage]] API for defined communication between Matrix clients and embedded \"agents\" (widgets).\nIn essence a widget is simply an embedded iframe in a Matrix client. So it can be as simple as an arbitrary URL with associated metadata.\n"
      },
      "date": 1640883218894
    },
    {
      "item": {
        "type": "factory",
        "id": "d986c68a1da479df"
      },
      "id": "d986c68a1da479df",
      "type": "add",
      "after": "0b3d7b8adef9bd4f",
      "date": 1640883409113
    },
    {
      "type": "edit",
      "id": "d986c68a1da479df",
      "item": {
        "type": "pagefold",
        "id": "d986c68a1da479df",
        "text": "Assets"
      },
      "date": 1640883595930
    },
    {
      "item": {
        "type": "factory",
        "id": "2a115683f88b1205"
      },
      "id": "2a115683f88b1205",
      "type": "add",
      "after": "d986c68a1da479df",
      "date": 1640883598520
    },
    {
      "type": "edit",
      "id": "2a115683f88b1205",
      "item": {
        "type": "paragraph",
        "id": "2a115683f88b1205",
        "text": "An asset is a file stored and offered to the internet as a supplement to json encoded wiki pages we exist to share. The Assets plugin offers read-write access to a site's assets and offers a read-only view into similar assets held on sites that have forked a page presenting Assets through the plugin. There is an analogy here with links on forked pages that will go back to the originating site when necessary. "
      },
      "date": 1640883600155
    },
    {
      "type": "edit",
      "id": "d986c68a1da479df",
      "item": {
        "type": "pagefold",
        "id": "d986c68a1da479df",
        "text": "The Assets Plugin "
      },
      "date": 1640883614655
    },
    {
      "type": "edit",
      "id": "2a115683f88b1205",
      "item": {
        "type": "paragraph",
        "id": "2a115683f88b1205",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640880252920519VzUfH:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]An asset is a file stored and offered to the internet as a supplement to json encoded wiki pages we exist to share. The Assets plugin offers read-write access to a site's assets and offers a read-only view into similar assets held on sites that have forked a page presenting Assets through the plugin. There is an analogy here with links on forked pages that will go back to the originating site when necessary. "
      },
      "date": 1640883710060
    },
    {
      "type": "edit",
      "id": "2a115683f88b1205",
      "item": {
        "type": "paragraph",
        "id": "2a115683f88b1205",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1640880252920519VzUfH:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix] An asset is a file stored and offered to the internet as a supplement to json encoded wiki pages we exist to share. The Assets plugin offers read-write access to a site's assets and offers a read-only view into similar assets held on sites that have forked a page presenting Assets through the plugin. There is an analogy here with links on forked pages that will go back to the originating site when necessary. "
      },
      "date": 1640883714867
    },
    {
      "item": {
        "type": "factory",
        "id": "6da845e17c65d46d"
      },
      "id": "6da845e17c65d46d",
      "type": "add",
      "after": "2a115683f88b1205",
      "date": 1640883724985
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "paragraph",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\nDo any of you other pages have any info on assets I might want?\nAt which point multiple Assets plugins respond, why yes, I know some assets.\nOK, one at a time, what assets do you see and how can I get them?\nThen each Assets plugin describes in data what they have drawn on the screen.\nIt is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "date": 1640883726972
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "markdown",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\nDo any of you other pages have any info on assets I might want?\nAt which point multiple Assets plugins respond, why yes, I know some assets.\nOK, one at a time, what assets do you see and how can I get them?\nThen each Assets plugin describes in data what they have drawn on the screen.\nIt is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "date": 1640883727848
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "markdown",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\n* Do any of you other pages have any info on assets I might want?\nAt which point multiple Assets plugins respond, why yes, I know some assets.\nOK, one at a time, what assets do you see and how can I get them?\nThen each Assets plugin describes in data what they have drawn on the screen.\nIt is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "date": 1640883740677
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "markdown",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\n* Do any of you other pages have any info on assets I might want?\n* At which point multiple Assets plugins respond, why yes, I know some assets.\nOK, one at a time, what assets do you see and how can I get them?\nThen each Assets plugin describes in data what they have drawn on the screen.\nIt is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "date": 1640883754667
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "markdown",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\n* Do any of you other pages have any info on assets I might want?\n* At which point multiple Assets plugins respond, why yes, I know some assets.\n* OK, one at a time, what assets do you see and how can I get them?\n* Then each Assets plugin describes in data what they have drawn on the screen.\nIt is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "date": 1640883765583
    },
    {
      "type": "edit",
      "id": "6da845e17c65d46d",
      "item": {
        "type": "markdown",
        "id": "6da845e17c65d46d",
        "text": "The Assets plugin has got this situation figured out and presents it reasonably well including offering buttons to copy remote assets and discard local ones. The confusion arrises when another page tries to make sense of what a nearby Assets plugin sees. The conversation goes something like this:\n\n* Do any of you other pages have any info on assets I might want?\n* At which point multiple Assets plugins respond, why yes, I know some assets.\n* OK, one at a time, what assets do you see and how can I get them?\n* Then each Assets plugin describes in data what they have drawn on the screen.\n"
      },
      "date": 1640883778418
    },
    {
      "type": "add",
      "id": "61f4acc3a7dd4e16",
      "item": {
        "type": "markdown",
        "id": "61f4acc3a7dd4e16",
        "text": "It is this \"describe in data\" that makes assets hard to interpret. I'm pretty sure we pair-programmed the data format to be complete but to not make any assumptions as to what the data consumer was intending to do."
      },
      "after": "6da845e17c65d46d",
      "date": 1640883778999
    },
    {
      "item": {
        "type": "factory",
        "id": "335b451a4b1c3dcc"
      },
      "id": "335b451a4b1c3dcc",
      "type": "add",
      "after": "61f4acc3a7dd4e16",
      "date": 1640883803293
    },
    {
      "type": "edit",
      "id": "335b451a4b1c3dcc",
      "item": {
        "type": "paragraph",
        "id": "335b451a4b1c3dcc",
        "text": "I have now written a half dozen Frame based html scripts that seek Assets plugin's data. Each time I have to imagine what any Assets plugin I might encounter might be thinking. For example, is it itself on a remote page and taking that remote perspective? So the frame.js code that Eric diagnosed was my attempt to \"flatten\" this variability. You may have noticed that the fix was inside a triply-nested loop.  "
      },
      "date": 1640883804910
    },
    {
      "item": {
        "type": "factory",
        "id": "0f15f1f1c46fcda7"
      },
      "id": "0f15f1f1c46fcda7",
      "type": "add",
      "after": "335b451a4b1c3dcc",
      "date": 1640883831053
    },
    {
      "type": "edit",
      "id": "0f15f1f1c46fcda7",
      "item": {
        "type": "paragraph",
        "id": "0f15f1f1c46fcda7",
        "text": "Eric fairly asks, should we refine this difficult code that interprets the data or revise the Assets plugin to offer more easily interpreted data?\nHe gave me the code for the latter so of course I took that path. But this does leave me with the more philosophical question, where should the case analysis of tricky sharing scenarios be concentrated? I'm thinking that we have it divided up pretty well but only because it seems to be working right now."
      },
      "date": 1640883833395
    },
    {
      "item": {
        "type": "factory",
        "id": "ebac83c0a83bf366"
      },
      "id": "ebac83c0a83bf366",
      "type": "add",
      "after": "0f15f1f1c46fcda7",
      "date": 1640883840951
    },
    {
      "type": "edit",
      "id": "ebac83c0a83bf366",
      "item": {
        "type": "paragraph",
        "id": "ebac83c0a83bf366",
        "text": "Now, have a look yourself. Click 'sources' to see what the Assets plugins return. Click 'assets' to see how frame.js has flattened this in its particular context. http://marc.tries.fed.wiki/view/svg-enrichment/code.fed.wiki/frame-integration-promises"
      },
      "date": 1640883842039
    },
    {
      "type": "edit",
      "id": "ebac83c0a83bf366",
      "item": {
        "type": "markdown",
        "id": "ebac83c0a83bf366",
        "text": "Now, have a look yourself. Click 'sources' to see what the Assets plugins return. Click 'assets' to see how frame.js has flattened this in its particular context. http://marc.tries.fed.wiki/view/svg-enrichment/code.fed.wiki/frame-integration-promises"
      },
      "date": 1640883843757
    },
    {
      "item": {
        "type": "factory",
        "id": "43d5093a10a40ccc"
      },
      "id": "43d5093a10a40ccc",
      "type": "add",
      "after": "ebac83c0a83bf366",
      "date": 1640883875015
    },
    {
      "type": "edit",
      "id": "43d5093a10a40ccc",
      "item": {
        "type": "reference",
        "id": "43d5093a10a40ccc",
        "site": "marc.tries.fed.wiki",
        "slug": "svg-enrichment",
        "title": "SVG Enrichment",
        "text": "We try writing a click-enrichment script for sequence diagrams. [https://sequencediagram.org/ site]"
      },
      "date": 1640883882279
    },
    {
      "item": {
        "type": "factory",
        "id": "d30fe8d2a385c053"
      },
      "id": "d30fe8d2a385c053",
      "type": "add",
      "after": "43d5093a10a40ccc",
      "date": 1640883911333
    },
    {
      "type": "edit",
      "id": "d30fe8d2a385c053",
      "item": {
        "type": "reference",
        "id": "d30fe8d2a385c053",
        "site": "code.fed.wiki",
        "slug": "frame-integration-promises",
        "title": "Frame Integration Promises",
        "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
      },
      "date": 1640883915360
    },
    {
      "type": "edit",
      "id": "4e60f00a5aaa1a5b",
      "item": {
        "type": "paragraph",
        "id": "4e60f00a5aaa1a5b",
        "text": "# Matrix Widget API v2 (RFC)\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget [[iframe]] may never fire a DOM ..."
      },
      "date": 1640883949020
    },
    {
      "type": "edit",
      "id": "4e60f00a5aaa1a5b",
      "item": {
        "type": "markdown",
        "id": "4e60f00a5aaa1a5b",
        "text": "# Matrix Widget API v2 (RFC)\nRoom-based widgets are linked to a specific Matrix room and are stored in the ... This is useful in situations where the widget [[iframe]] may never fire a DOM ..."
      },
      "date": 1640883950078
    },
    {
      "type": "edit",
      "id": "0b3d7b8adef9bd4f",
      "item": {
        "type": "markdown",
        "id": "0b3d7b8adef9bd4f",
        "text": "An Introduction To Widgets\nWhat is a widget?\nWidgets are HTML and Javascript content / applications that can be embedded within, and communicate with Matrix clients.\nWidgets are able to request permissions to perform actions on a user's behalf (e.g. posting messages into the user's timeline or receiving specific types of events).\nWidgets can make use of the HTML5 [[Window.postMessage]] API for defined communication between Matrix clients and embedded \"agents\" (widgets).\nIn essence a widget is simply an embedded [[iframe]] in a Matrix client. So it can be as simple as an arbitrary URL with associated metadata.\n"
      },
      "date": 1640883985024
    },
    {
      "item": {
        "type": "factory",
        "id": "33ef0e1b75413d2f"
      },
      "id": "33ef0e1b75413d2f",
      "type": "add",
      "after": "d30fe8d2a385c053",
      "date": 1640896118139
    },
    {
      "type": "edit",
      "id": "33ef0e1b75413d2f",
      "item": {
        "type": "pagefold",
        "id": "33ef0e1b75413d2f",
        "text": "Tree Structure"
      },
      "date": 1640896120746
    },
    {
      "item": {
        "type": "factory",
        "id": "3e8c3e8d1290d349"
      },
      "id": "3e8c3e8d1290d349",
      "type": "add",
      "after": "33ef0e1b75413d2f",
      "date": 1640896122433
    },
    {
      "type": "edit",
      "id": "3e8c3e8d1290d349",
      "item": {
        "type": "paragraph",
        "id": "3e8c3e8d1290d349",
        "text": "[[Tree Structure]]"
      },
      "date": 1640896127738
    }
  ]
}