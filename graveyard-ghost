{
  "title": "Graveyard Ghost",
  "story": [
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "Adapting the graveyard and ghosts from Bruno's Haunted House. [https://threejs-journey.xyz/lessons/16 lesson]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.l.castShadow = true\n  g.r = rn(3)+3\n  g.v = rn(2)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = g.v * Date.now() / 1000\n    g.l.position.set(Math.sin(a*6),1,Math.cos(a*3))\n  }\n}\ncontrols.autoRotate = true\n"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Graveyard Ghost",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "Explain what this does."
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "// Code that does it.\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\ntick = () => box.rotation.y += 0.01\n\n\n"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1614035509870
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.1)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.1,.1,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(3, 3), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614035856012
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.1)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.5,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614035953855
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.1)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614035988730
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('blue', 0.1)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036017231
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036045907
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\n//renderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036071552
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "renderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nlet grave = new THREE.Mesh(slab,mat)\ngrave.castShadow = true\nscene.add(grave)\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036097619
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<15; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(10), 0, rn(10))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036516256
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<15; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(6), 0, rn(6))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036563931
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<15; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(6), 0, rn(6))\n  grave.rotation.set(0, 0, rn(2))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036647710
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<15; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(6), 0, rn(6))\n  grave.rotation.set(0, 0, rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036679787
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<15; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(6), 0, rn(6))\n  grave.rotation.set(0, rn(.5), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036721317
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(.5), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036765496
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036845816
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614036868108
    },
    {
      "type": "fork",
      "date": 1614036956533
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "Adapting the graveyard and ghosts from Bruno's Haunted House. [https://threejs-journey.xyz/lessons/16 lesson]"
      },
      "date": 1614037068539
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet goule\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614037873151
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet ghosts = [{color:\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614037956571
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n\n}\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614038129629
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\nscene.add(ghost1)\n\n}\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\ncontrols.autoRotate = true\n"
      },
      "date": 1614038414929
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(g.r*sin(g.v*a), 0, g.r*cos(g.v*a))\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039048275
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position\n      .set(g.r*sin(g.v*a), 0, g.r*cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039099752
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\nlet xtick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position\n      .set(g.r*sin(g.v*a), 0, g.r*cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039133444
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(\n      g.r*Math.sin(g.v*a), 0, g.r*Math.cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039317930
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.l.position.set(rn(4), 0, rn(4))\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\nlet xtick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(\n      g.r*Math.sin(g.v*a), 0, g.r*Math.cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039494067
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 2, 3)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\nlet xtick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(\n      g.r*Math.sin(g.v*a), 0, g.r*Math.cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614039888511
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  scene.add(g.l)\n}\nlet xtick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(\n      g.r*Math.sin(g.v*a), 0, g.r*Math.cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040044040
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  g.v = rn(.5)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = Date.now / 1000\n    g.l.position.set(\n      g.r*Math.sin(g.v*a), 0, g.r*Math.cos(g.v*a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040209628
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  g.v = rn(.5)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    console.log(g)\n    let a = g.v * Date.now / 1000\n    g.l.position\n      .set(Math.sin(a), 1, Math.cos(a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040484085
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  g.v = rn(.5)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    console.log(g)\n    let a = g.v * Date.now / 1000\n    console.log(a)\n    g.l.position.set(Math.sin(a), 1, Math.cos(a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040597790
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(2)+2\n  g.v = rn(.5)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    console.log(g)\n    let a = g.v * Date.now() / 1000\n    console.log(a)\n    g.l.position.set(Math.sin(a), 1, Math.cos(a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040640668
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(3)+3\n  g.v = rn(2)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    console.log(g)\n    let a = g.v * Date.now() / 1000\n    console.log(a)\n    g.l.position.set(Math.sin(a), 1, Math.cos(a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040703435
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(3)+3\n  g.v = rn(5)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = g.v * Date.now() / 1000\n    g.l.position.set(Math.sin(a), 1, Math.cos(a))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040796483
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.r = rn(3)+3\n  g.v = rn(2)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = g.v * Date.now() / 1000\n    g.l.position.set(Math.sin(a*2),1,Math.cos(a*3))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614040865716
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.l.castShadow = true\n  g.r = rn(3)+3\n  g.v = rn(2)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = g.v * Date.now() / 1000\n    g.l.position.set(Math.sin(a*2),1,Math.cos(a*3))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614041067926
    },
    {
      "type": "fork",
      "date": 1614041134619
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const rn = (v) => v * (Math.random()-.5)\n\nrenderer.shadowMap.enabled = true\nrenderer.shadowMap.type = THREE.PCFSoftShadowMap\n\nscene.background = new THREE.Color('gray')\nscene.add(new THREE.AmbientLight(0xffffff, 0.2))\nlet light = new THREE.DirectionalLight('white', 0.3)\nlight.position.set(2, 2, -1)\nlight.castShadow = true\nscene.add(light)\n\nlet mat = new THREE.MeshStandardMaterial()\nlet slab = new THREE.CubeGeometry(.3,.6,.1)\nfor (let i=0; i<30; i++) {\n  let grave = new THREE.Mesh(slab,mat)\n  grave.castShadow = true\n  grave.position.set(rn(5), 0, rn(5))\n  grave.rotation.set(0, rn(1), rn(.5))\n  scene.add(grave)\n}\n\nlet table = new THREE.Mesh(\n  new THREE.PlaneGeometry(6, 6), mat)\ntable.rotation.x = - Math.PI/2\ntable.position.y = - 0.2\ntable.receiveShadow = true\nscene.add(table)\n\nlet ghosts = \n  [{c:'#ffff00'},{c:'#ff00ff'},{c:'#00ffff'}]\nfor (let g of ghosts) {\n  g.l = new THREE.PointLight(g.c, 1, 2)\n  g.l.position.set(rn(4), 1, rn(4))\n  g.l.castShadow = true\n  g.r = rn(3)+3\n  g.v = rn(2)\n  scene.add(g.l)\n}\ntick = () => {\n  for (let g of ghosts) {\n    let a = g.v * Date.now() / 1000\n    g.l.position.set(Math.sin(a*6),1,Math.cos(a*3))\n  }\n}\ncontrols.autoRotate = true\n"
      },
      "date": 1614200141976
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233540935
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
      },
      "date": 1676870436529
    }
  ]
}