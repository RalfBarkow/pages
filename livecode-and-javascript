{
  "title": "Livecode and Javascript",
  "story": [
    {
      "type": "markdown",
      "id": "7d56bff3a5ac5f94",
      "text": "Here we explore how to get two way communication between [[Livecode]] and javascript in the browser widget.\n"
    },
    {
      "type": "markdown",
      "id": "c370e4011c15fc59",
      "text": "# Do as javascrippt\n"
    },
    {
      "type": "markdown",
      "id": "56e2e547ebca5a5e",
      "text": "> In HTML5 applications, \"JavaScript\" is the only supported alternateLanguage. The result is set to the value returned by executing the script, as long as the value is a scalar (a string, number, boolean or undefined). Returning JavaScript arrays or objects is not supported.\n\n"
    },
    {
      "type": "code",
      "id": "3784c248d43ef878",
      "text": "do \"document.location\" as \"JavaScript\"\n"
    },
    {
      "type": "markdown",
      "id": "45d89abb83d654a6",
      "text": "# Do in browser\n"
    },
    {
      "type": "code",
      "id": "b9ae8daefb9bed69",
      "text": "do \"document.getElementById('myButton').hidden = 'hidden'\" in widget \"myBrowser\"\n"
    },
    {
      "type": "markdown",
      "id": "4df376c3b2a357b7",
      "text": "> Use the do in widget command to execute statements in a widget. LiveCode sends a \"OnDo\" message with script as parameter to the widget, which can then handle that messages to run the code appropriately."
    },
    {
      "type": "markdown",
      "id": "8adab4ea7e6e6b81",
      "text": "# Two way communication\nTo call a javascript in a browser use:\n\n\n"
    },
    {
      "type": "code",
      "id": "f211516cd97e5b8a",
      "text": "do \"myfunction (myparam1,myparam2);\" in browser\n\n# result from javascript will be in result\n\n"
    },
    {
      "type": "markdown",
      "id": "440a9e33c580f926",
      "text": "if the result = true then beep\nHere's an example javascript. Note you can return value\n"
    },
    {
      "type": "code",
      "id": "3292c618c610616e",
      "text": "< script type=\"text/javascript\">\n   function helloWorld(hello1){\n       alert(hello1);\n       return true;\n    }\n</script>"
    },
    {
      "type": "markdown",
      "id": "8d47159c3d1fb01d",
      "text": "# See also\n\n- [[Livecode Dictionary Javascript]]\n- [[Custom url scheme]]\n- [[Custom browser protocol]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Livecode and Javascript",
        "story": []
      },
      "date": 1627470651200
    },
    {
      "item": {
        "type": "factory",
        "id": "7d56bff3a5ac5f94"
      },
      "id": "7d56bff3a5ac5f94",
      "type": "add",
      "date": 1627470652356
    },
    {
      "type": "edit",
      "id": "7d56bff3a5ac5f94",
      "item": {
        "type": "markdown",
        "id": "7d56bff3a5ac5f94",
        "text": "Here we explore how to get two way communication between Livecode and javascript in the browser widget.\n"
      },
      "date": 1627470682052
    },
    {
      "type": "add",
      "id": "c370e4011c15fc59",
      "item": {
        "type": "markdown",
        "id": "c370e4011c15fc59",
        "text": "# Do as javascrippt\n"
      },
      "after": "7d56bff3a5ac5f94",
      "date": 1627470699461
    },
    {
      "type": "add",
      "id": "56e2e547ebca5a5e",
      "item": {
        "type": "markdown",
        "id": "56e2e547ebca5a5e",
        "text": "> In HTML5 applications, \"JavaScript\" is the only supported alternateLanguage. The result is set to the value returned by executing the script, as long as the value is a scalar (a string, number, boolean or undefined). Returning JavaScript arrays or objects is not supported.\n\n"
      },
      "after": "c370e4011c15fc59",
      "date": 1627470700025
    },
    {
      "item": {
        "type": "factory",
        "id": "3784c248d43ef878"
      },
      "id": "3784c248d43ef878",
      "type": "add",
      "after": "56e2e547ebca5a5e",
      "date": 1627470731807
    },
    {
      "type": "edit",
      "id": "3784c248d43ef878",
      "item": {
        "type": "code",
        "id": "3784c248d43ef878",
        "text": "do \"document.location\" as \"JavaScript\"\n"
      },
      "date": 1627470733871
    },
    {
      "item": {
        "type": "factory",
        "id": "45d89abb83d654a6"
      },
      "id": "45d89abb83d654a6",
      "type": "add",
      "after": "3784c248d43ef878",
      "date": 1627470743065
    },
    {
      "type": "edit",
      "id": "45d89abb83d654a6",
      "item": {
        "type": "markdown",
        "id": "45d89abb83d654a6",
        "text": "# Do in browseer\n"
      },
      "date": 1627470750097
    },
    {
      "item": {
        "type": "factory",
        "id": "b9ae8daefb9bed69"
      },
      "id": "b9ae8daefb9bed69",
      "type": "add",
      "after": "45d89abb83d654a6",
      "date": 1627470794471
    },
    {
      "type": "edit",
      "id": "b9ae8daefb9bed69",
      "item": {
        "type": "code",
        "id": "b9ae8daefb9bed69",
        "text": "do \"document.getElementById('myButton').hidden = 'hidden'\" in widget \"myBrowser\"\n"
      },
      "date": 1627470797731
    },
    {
      "item": {
        "type": "factory",
        "id": "4df376c3b2a357b7"
      },
      "id": "4df376c3b2a357b7",
      "type": "add",
      "after": "b9ae8daefb9bed69",
      "date": 1627470812483
    },
    {
      "type": "edit",
      "id": "4df376c3b2a357b7",
      "item": {
        "type": "markdown",
        "id": "4df376c3b2a357b7",
        "text": "> Use the do in widget command to execute statements in a widget. LiveCode sends a \"OnDo\" message with script as parameter to the widget, which can then handle that messages to run the code appropriately."
      },
      "date": 1627470817185
    },
    {
      "type": "edit",
      "id": "45d89abb83d654a6",
      "item": {
        "type": "markdown",
        "id": "45d89abb83d654a6",
        "text": "# Do in browser\n"
      },
      "date": 1627470842117
    },
    {
      "item": {
        "type": "factory",
        "id": "8adab4ea7e6e6b81"
      },
      "id": "8adab4ea7e6e6b81",
      "type": "add",
      "after": "4df376c3b2a357b7",
      "date": 1627470843563
    },
    {
      "type": "edit",
      "id": "8adab4ea7e6e6b81",
      "item": {
        "type": "markdown",
        "id": "8adab4ea7e6e6b81",
        "text": "# Two way commmunication"
      },
      "date": 1627470866229
    },
    {
      "item": {
        "type": "factory",
        "id": "8d47159c3d1fb01d"
      },
      "id": "8d47159c3d1fb01d",
      "type": "add",
      "after": "8adab4ea7e6e6b81",
      "date": 1627470928102
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "# How the dictionary works\n"
      },
      "date": 1627470936507
    },
    {
      "type": "add",
      "id": "e30d9929b24d4a3c",
      "item": {
        "type": "markdown",
        "id": "e30d9929b24d4a3c",
        "text": "The logical \"!=\" ( = LCS is not), \"&&\" ( = LCS is not) and \"||\" ( = LCS or).\n\nFor example getData() returns an array.\n\"each\" is an array element and\nindex( = LCS key) and value ( = LCS element) are parameter names.\nThe function is applied to each array element.\n\nIndexing is zero based.\n\nThe last two functions create a html string:\n+ means string concatenation (LCS \"&\"),\nleft += right means append left to right (put left after right),\nsingle quotes are for use within quoted strings and can also surround a string.\nHere lists are used. Then \"each\" is a list element which has a numeric index and a value.\nSimply think of items of a string that you split by comma into an numeric array."
      },
      "after": "8d47159c3d1fb01d",
      "date": 1627470938205
    },
    {
      "type": "add",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- livecode-ide/Documentation/html_viewer/js/dictionary_functions.js"
      },
      "after": "8d47159c3d1fb01d",
      "date": 1627470965051
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- [livecode-ide/Documentation/html_viewer/js/dictionary_functions.js github]"
      },
      "date": 1627470986243
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- [https://github.com/livecode/livecode/livecode-ide/Documentation/html_viewer/js/dictionary_functions.js github]"
      },
      "date": 1627471036884
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- dictionary_functions.js - [https://github.com/livecode/livecode-ide/Documentation/html_viewer/js/dictionary_functions.js github]"
      },
      "date": 1627471122581
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- dictionary_functions.js - https://github.com/livecode/livecode-ide/blob/develop/Documentation/html_viewer/js/dictionary_functions.js github]"
      },
      "date": 1627471223941
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- dictionary_functions.js - [https://github.com/livecode/livecode-ide/blob/develop/Documentation/html_viewer/js/dictionary_functions.js github]"
      },
      "date": 1627471230902
    },
    {
      "type": "edit",
      "id": "a0029879d992d00f",
      "item": {
        "type": "markdown",
        "id": "a0029879d992d00f",
        "text": "- dictionary_functions.js - [https://github.com/livecode/livecode-ide/blob/develop/Documentation/html_viewer/js/dictionary_functions.js github]\n"
      },
      "date": 1627471551061
    },
    {
      "type": "add",
      "id": "620a9e01ac38d302",
      "item": {
        "type": "markdown",
        "id": "620a9e01ac38d302",
        "text": " - dataget() - [https://github.com/livecode/livecode-ide/blob/develop/Documentation/html_viewer/js/dictionary_functions.js#L31 github]"
      },
      "after": "a0029879d992d00f",
      "date": 1627471570167
    },
    {
      "type": "edit",
      "id": "620a9e01ac38d302",
      "item": {
        "type": "markdown",
        "id": "620a9e01ac38d302",
        "text": " - function dataGet() - [https://github.com/livecode/livecode-ide/blob/develop/Documentation/html_viewer/js/dictionary_functions.js#L31 github]"
      },
      "date": 1627471592632
    },
    {
      "type": "add",
      "id": "ace3662862612d03",
      "item": {
        "type": "markdown",
        "id": "ace3662862612d03",
        "text": "What you are seeing is an anonymous function. \n"
      },
      "after": "a0029879d992d00f",
      "date": 1627471819491
    },
    {
      "type": "add",
      "id": "58d5711395808d8b",
      "item": {
        "type": "markdown",
        "id": "58d5711395808d8b",
        "text": "dataGet() will return an array or array-like object, \n"
      },
      "after": "ace3662862612d03",
      "date": 1627471822770
    },
    {
      "type": "add",
      "id": "ddaf8885a20c921c",
      "item": {
        "type": "markdown",
        "id": "ddaf8885a20c921c",
        "text": "$.each will iterate over every element of the array, \n"
      },
      "after": "58d5711395808d8b",
      "date": 1627471827117
    },
    {
      "type": "add",
      "id": "379c5d5a4246a52b",
      "item": {
        "type": "markdown",
        "id": "379c5d5a4246a52b",
        "text": "function(index, value) creates the function that will be called on each element of the list. \n"
      },
      "after": "ddaf8885a20c921c",
      "date": 1627471832284
    },
    {
      "type": "add",
      "id": "8007256b85fb7704",
      "item": {
        "type": "markdown",
        "id": "8007256b85fb7704",
        "text": "The parameters to the function are the index and value for each element of the list. \n"
      },
      "after": "379c5d5a4246a52b",
      "date": 1627471835292
    },
    {
      "type": "add",
      "id": "24cbde8c1f44c178",
      "item": {
        "type": "markdown",
        "id": "24cbde8c1f44c178",
        "text": "The code between the { and } is the body of that function. Returning false will break out of the loop. Returning any other value will continue to the next iteration of the loop.\n"
      },
      "after": "8007256b85fb7704",
      "date": 1627471838132
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "- [[Livecode Dictionary Javascript]]\n"
      },
      "date": 1627471879361
    },
    {
      "id": "a0029879d992d00f",
      "type": "remove",
      "date": 1627471886093
    },
    {
      "id": "ace3662862612d03",
      "type": "remove",
      "date": 1627471889382
    },
    {
      "id": "58d5711395808d8b",
      "type": "remove",
      "date": 1627471989070
    },
    {
      "id": "ddaf8885a20c921c",
      "type": "remove",
      "date": 1627472006744
    },
    {
      "id": "379c5d5a4246a52b",
      "type": "remove",
      "date": 1627472010588
    },
    {
      "id": "8007256b85fb7704",
      "type": "remove",
      "date": 1627472080143
    },
    {
      "id": "24cbde8c1f44c178",
      "type": "remove",
      "date": 1627472086766
    },
    {
      "id": "620a9e01ac38d302",
      "type": "remove",
      "date": 1627472101922
    },
    {
      "id": "e30d9929b24d4a3c",
      "type": "remove",
      "date": 1627472115931
    },
    {
      "type": "edit",
      "id": "8adab4ea7e6e6b81",
      "item": {
        "type": "markdown",
        "id": "8adab4ea7e6e6b81",
        "text": "# Two way communication\nTo call a javascript in a browser use:\n\n\n"
      },
      "date": 1627472274635
    },
    {
      "type": "add",
      "id": "f211516cd97e5b8a",
      "item": {
        "type": "markdown",
        "id": "f211516cd97e5b8a",
        "text": "do \"myfunction(myparam1,myparam2);\" in browser\n#result from javascript will be in result\n\n"
      },
      "after": "8adab4ea7e6e6b81",
      "date": 1627472286140
    },
    {
      "type": "add",
      "id": "440a9e33c580f926",
      "item": {
        "type": "markdown",
        "id": "440a9e33c580f926",
        "text": "if the result = true then beep\nHere's an example javascript. Note you can return value\n"
      },
      "after": "f211516cd97e5b8a",
      "date": 1627472288651
    },
    {
      "type": "add",
      "id": "3292c618c610616e",
      "item": {
        "type": "factory",
        "id": "3292c618c610616e",
        "text": "< html>\n< head>\n< script type=\"text/javascript\">\n   function helloWorld(hello1){\n       alert(hello1);\n       return true;\n    }\n</script>\n</head>\n< body>"
      },
      "after": "440a9e33c580f926",
      "date": 1627472305746
    },
    {
      "type": "edit",
      "id": "3292c618c610616e",
      "item": {
        "type": "code",
        "id": "3292c618c610616e",
        "text": "< script type=\"text/javascript\">\n   function helloWorld(hello1){\n       alert(hello1);\n       return true;\n    }\n</script>"
      },
      "date": 1627472326702
    },
    {
      "type": "edit",
      "id": "f211516cd97e5b8a",
      "item": {
        "type": "code",
        "id": "f211516cd97e5b8a",
        "text": "do \"myfunction (myparam1,myparam2);\" in browser\n\n# result from javascript will be in result\n\n"
      },
      "date": 1627472373617
    },
    {
      "id": "daa04a076063e12d",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "daa04a076063e12d",
        "text": "- How To - Step-By-Step Guides... - [https://lessons.livecode.com/m/4071 livecode.com]\n"
      },
      "after": "7d56bff3a5ac5f94",
      "date": 1627481025838
    },
    {
      "id": "daa04a076063e12d",
      "type": "remove",
      "date": 1627481043083
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "# See also\n\n- [[Livecode Dictionary Javascript]]"
      },
      "date": 1627481087132
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "# See also\n\n- [[Livecode Dictionary Javascript]]\n- [[Livecode Dictionary Javascript]]\n"
      },
      "date": 1627481091167
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "# See also\n\n- [[Livecode Dictionary Javascript]]\n- [[Custom url scheme]]"
      },
      "date": 1627481109371
    },
    {
      "type": "edit",
      "id": "8d47159c3d1fb01d",
      "item": {
        "type": "markdown",
        "id": "8d47159c3d1fb01d",
        "text": "# See also\n\n- [[Livecode Dictionary Javascript]]\n- [[Custom url scheme]]\n- [[Custom browser protocol]]"
      },
      "date": 1627481117113
    },
    {
      "type": "fork",
      "date": 1627498528566
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1627506725356
    },
    {
      "type": "edit",
      "id": "7d56bff3a5ac5f94",
      "item": {
        "type": "markdown",
        "id": "7d56bff3a5ac5f94",
        "text": "Here we explore how to get two way communication between [[Livecode]] and javascript in the browser widget.\n"
      },
      "date": 1627507174458
    }
  ]
}