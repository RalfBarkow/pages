{
  "title": "SVG interaction",
  "story": [
    {
      "type": "markdown",
      "id": "24140054cb3a6fe6",
      "text": "We try as far as possible to use standards based HTML5 api's to interact with elements. This helps us use the content **outside** of the wiki environment.\n"
    },
    {
      "type": "markdown",
      "id": "9e5d965213be1845",
      "text": "- Linking – SVG 1.1 - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
    },
    {
      "type": "markdown",
      "id": "ee3042001fae9c1f",
      "text": "Currently in the [[clickable svg]] demo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the [[svg]].\n\n"
    },
    {
      "type": "markdown",
      "id": "39b543f09bdf9ce2",
      "text": "Follow these links to explore [[svg]] interaction n wiki:\n\n- [[MountainStorm]] and [[Load external SVG]]\n- [[Clickable SVG]]\n- [[SVG Links]]\n- [[Interactive Sofi SVG]]\n- [[Observable SVG]]"
    },
    {
      "type": "markdown",
      "id": "d981b8c64fc9df63",
      "text": "However, we may wish to craft svg's that contain some nodes with links and others without. In the example below the orange ovals may link to pages, while the green ones do something else.\n"
    },
    {
      "type": "frame",
      "id": "c369265e7b182d10",
      "text": "http://livecode.world/assets/graph/livecode.html\nHEIGHT 300\nIn this example we attach \"url\" links to the svg in the export from [[graphviz]]. See in [http://livecode.world/assets/graph/livecode.html full screen]"
    },
    {
      "type": "markdown",
      "id": "e4703aff9fbd3fa0",
      "text": "The way this is done with graphviz and with svgs is to attach url's to nodes - the browser then enables interactions in a standard manor - using `<a xlink:href>` links. Let's look for way to leverage this, as this will allow us to customise the style of links using our existing tool-chains in more powerful ways.\n"
    },
    {
      "type": "markdown",
      "id": "14f0bf502a2a15a2",
      "text": "[[Graphviz]] exports nodes with links in the following manor:"
    },
    {
      "type": "code",
      "id": "bdc64bc7c9191fce",
      "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
    },
    {
      "type": "markdown",
      "id": "d228bdd0a9094af0",
      "text": "The next step is to enable differeent types of interaction depending on the node clicked (and the style of that node). \n"
    },
    {
      "type": "markdown",
      "id": "4c2bcb57ff819833",
      "text": "> [[Question:]] can we usefully use the url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"GreenYellow\"` to distinguish nodes and actions?\n"
    },
    {
      "type": "markdown",
      "id": "8451589760f631c5",
      "text": "# Use addEventListener\n"
    },
    {
      "type": "markdown",
      "id": "f5e9a93e0b5779fd",
      "text": "According to this [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow] post, it look like we should not use `onlckick` but instead add an event listener along the lines of:\n"
    },
    {
      "type": "markdown",
      "id": "57fd3185967e64ad",
      "text": "The better way to add interactivity to an svg seems to be to add and event listener rather than look for `onlick` events."
    },
    {
      "type": "code",
      "id": "e693f0259f6e96d7",
      "text": "var el = document.getElementById('fil0');\n\nel.addEventListener('click', function(){\n  this.style.fill=\"brown\";\n}, false);"
    },
    {
      "type": "markdown",
      "id": "a22331b292fd9542",
      "text": "You can see a working example of this heere on [http://jsbin.com/oVoPECIm/1/edit?html,css,js,output jsbin]\n"
    },
    {
      "type": "markdown",
      "id": "575c03ef1ca96b61",
      "text": "Further more to get better consistency we may need to use [[Pointer Events]] (and add a little css) as described in this article - [https://schalkneethling.medium.com/preventing-svg-from-becoming-the-event-target-3e9c039dfdd0 medium.com]\n"
    },
    {
      "type": "markdown",
      "id": "9c6da960c06bc880",
      "text": "In order to ensure the svg will never be the target of mouse event, the following css we can use pointer-events:\n"
    },
    {
      "type": "code",
      "id": "b2f5a2399774a9d5",
      "text": ".local-anchor .icon {\n    color: #3d7e9a;\n    width: 16px;\n    height: 16px;\n    pointer-events: none;\n}"
    },
    {
      "type": "markdown",
      "id": "cf5d89e67c4addaf",
      "text": "# Graph Assets"
    },
    {
      "type": "assets",
      "id": "c312f5fb5de4efa3",
      "text": "graph"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "SVG interaction",
        "story": []
      },
      "date": 1626339622501
    },
    {
      "id": "24140054cb3a6fe6",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "24140054cb3a6fe6",
        "text": "We try as far as possible to use standards based HTML5 api's to interact with elements. Using javascript to parse the SVG like this is very wiki specific, and so will not work as expected **outside** of the wiki environment.\n"
      },
      "date": 1626339633069
    },
    {
      "id": "d8ae0c29067d40ab",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d8ae0c29067d40ab",
        "text": "On of the motivations for wiki, is to create long lasting text, and to publish the work as static sites with flexibility. This ambition requires a minimal approach to how wiki is constructed, which by enlarge we adhere to, SVG interaction should follow this path.\n"
      },
      "after": "24140054cb3a6fe6",
      "date": 1626339635606
    },
    {
      "id": "ee3042001fae9c1f",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Secondly, wwe may wish to craft svg's that contain some nodes with links and others without. In the example below the orange ovals may link to pages, while the green ones do something else.\n"
      },
      "after": "d8ae0c29067d40ab",
      "date": 1626339638139
    },
    {
      "id": "c369265e7b182d10",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "c369265e7b182d10",
        "text": "http://livecode.world/assets/graph/livecode.html\nHEIGHT 300\nIn this example we attach \"url\" links to the svg in the export from [[graphviz]]. See in [http://livecode.world/assets/graph/livecode.html full screen]"
      },
      "after": "ee3042001fae9c1f",
      "date": 1626339641420
    },
    {
      "id": "e4703aff9fbd3fa0",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "e4703aff9fbd3fa0",
        "text": "The way this is done with graphviz and with svgs is to attach url's to nodes - the browser then enables interactions in a standard manor - using `<a xlink:href>` links. Let's look for way to leverage this, as this will allow us to customise the style of links using our existing tool-chains in more powerful ways.\n"
      },
      "after": "c369265e7b182d10",
      "date": 1626339645656
    },
    {
      "id": "0bcb11dc9f37ec5d",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0bcb11dc9f37ec5d",
        "text": "# Online research\n"
      },
      "after": "e4703aff9fbd3fa0",
      "date": 1626339648046
    },
    {
      "id": "d228bdd0a9094af0",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "The way to do this seems to be to add and event listener rather than look for `onlick` events."
      },
      "after": "0bcb11dc9f37ec5d",
      "date": 1626339651498
    },
    {
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "type": "add",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- javascript - \"onclick\"... - [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow.com]\n- Preventing SVG from becoming... - [https://schalkneethling.medium.com/preventing-svg-from-becoming-the-event-target-3e9c039dfdd0 medium.com]\n- JS Bin - Collaborative... - [http://jsbin.com/oVoPECIm/1/edit?html,css,js,output jsbin.com]\n- pointer-events - SVG:... - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction... - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n- Linking – SVG 1.1 (Second... - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "after": "d228bdd0a9094af0",
      "date": 1626339738922
    },
    {
      "item": {
        "type": "factory",
        "id": "8451589760f631c5"
      },
      "id": "8451589760f631c5",
      "type": "add",
      "after": "79fed871-902a-475c-989a-bf350295aa34",
      "date": 1626339999174
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Summary\nIt look like we need to add an event listener along the lines of:"
      },
      "date": 1626340032544
    },
    {
      "item": {
        "type": "factory",
        "id": "e693f0259f6e96d7"
      },
      "id": "e693f0259f6e96d7",
      "type": "add",
      "after": "8451589760f631c5",
      "date": 1626340054153
    },
    {
      "type": "edit",
      "id": "e693f0259f6e96d7",
      "item": {
        "type": "code",
        "id": "e693f0259f6e96d7",
        "text": "var el = document.getElementById('fil0');\n\nel.addEventListener('click', function(){\n  this.style.fill=\"brown\";\n}, false);"
      },
      "date": 1626340057589
    },
    {
      "type": "edit",
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- javascript - \"onclick\"... - [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow.com]\n- Preventing SVG from becoming... - [https://schalkneethling.medium.com/preventing-svg-from-becoming-the-event-target-3e9c039dfdd0 medium.com]\n- pointer-events - SVG:... - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction... - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n- Linking – SVG 1.1 (Second... - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "date": 1626340074962
    },
    {
      "item": {
        "type": "factory",
        "id": "a22331b292fd9542"
      },
      "id": "a22331b292fd9542",
      "type": "add",
      "after": "e693f0259f6e96d7",
      "date": 1626340078445
    },
    {
      "type": "edit",
      "id": "a22331b292fd9542",
      "item": {
        "type": "markdown",
        "id": "a22331b292fd9542",
        "text": "You can see a working example of this heere on [http://jsbin.com/oVoPECIm/1/edit?html,css,js,output jsbin]\n"
      },
      "date": 1626340112493
    },
    {
      "type": "edit",
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- Preventing SVG from becoming... - [https://schalkneethling.medium.com/preventing-svg-from-becoming-the-event-target-3e9c039dfdd0 medium.com]\n- pointer-events - SVG:... - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction... - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n- Linking – SVG 1.1 (Second... - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "date": 1626340125930
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Summary\nIt look like we need to add an event listener along the lines of - [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow]\n"
      },
      "date": 1626340146555
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Summary\nAccording to this [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow] post, it look like we need to add an event listener along the lines of:\n"
      },
      "date": 1626340178670
    },
    {
      "type": "edit",
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- pointer-events - SVG:... - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction... - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n- Linking – SVG 1.1 (Second... - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "date": 1626340204703
    },
    {
      "type": "add",
      "id": "575c03ef1ca96b61",
      "item": {
        "type": "markdown",
        "id": "575c03ef1ca96b61",
        "text": "Further more to get better consistency we may need to use [[Pointer Events]] (and add a little css) as described in this article - [https://schalkneethling.medium.com/preventing-svg-from-becoming-the-event-target-3e9c039dfdd0 medium.com]\n"
      },
      "after": "a22331b292fd9542",
      "date": 1626340270203
    },
    {
      "type": "edit",
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- pointer-events - SVG:... - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction... - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n"
      },
      "date": 1626340318083
    },
    {
      "type": "add",
      "id": "9e5d965213be1845",
      "item": {
        "type": "markdown",
        "id": "9e5d965213be1845",
        "text": "- Linking – SVG 1.1 (Second... - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "after": "79fed871-902a-475c-989a-bf350295aa34",
      "date": 1626340320214
    },
    {
      "type": "edit",
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "item": {
        "id": "79fed871-902a-475c-989a-bf350295aa34",
        "type": "markdown",
        "text": "- PointercEvents - [https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events mozilla.org]\n- Managing SVG Interaction - [https://www.smashingmagazine.com/2018/05/svg-interaction-pointer-events-property/ smashingmagazine.com]\n"
      },
      "date": 1626340346288
    },
    {
      "id": "79fed871-902a-475c-989a-bf350295aa34",
      "type": "remove",
      "date": 1626340349215
    },
    {
      "id": "d228bdd0a9094af0",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "d8ae0c29067d40ab",
        "ee3042001fae9c1f",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "0bcb11dc9f37ec5d",
        "9e5d965213be1845",
        "d228bdd0a9094af0",
        "8451589760f631c5",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61"
      ],
      "date": 1626340386763
    },
    {
      "type": "remove",
      "id": "0bcb11dc9f37ec5d",
      "date": 1626340397676
    },
    {
      "type": "edit",
      "id": "9e5d965213be1845",
      "item": {
        "type": "markdown",
        "id": "9e5d965213be1845",
        "text": "- Linking – SVG 1.1 - [https://www.w3.org/TR/SVG11/linking.html#Links w3.org]"
      },
      "date": 1626340413999
    },
    {
      "id": "9e5d965213be1845",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "d8ae0c29067d40ab",
        "9e5d965213be1845",
        "ee3042001fae9c1f",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "d228bdd0a9094af0",
        "8451589760f631c5",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61"
      ],
      "date": 1626340419602
    },
    {
      "id": "9e5d965213be1845",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "9e5d965213be1845",
        "d8ae0c29067d40ab",
        "ee3042001fae9c1f",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "d228bdd0a9094af0",
        "8451589760f631c5",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61"
      ],
      "date": 1626340423928
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Use addEventListenr\nAccording to this [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow] post, it look like we need to add an event listener along the lines of:\n"
      },
      "date": 1626340462170
    },
    {
      "item": {
        "type": "factory",
        "id": "b2f5a2399774a9d5"
      },
      "id": "b2f5a2399774a9d5",
      "type": "add",
      "after": "575c03ef1ca96b61",
      "date": 1626340490258
    },
    {
      "type": "edit",
      "id": "b2f5a2399774a9d5",
      "item": {
        "type": "code",
        "id": "b2f5a2399774a9d5",
        "text": ".local-anchor .icon {\n    color: #3d7e9a;\n    width: 16px;\n    height: 16px;\n    /* ensure svg will never be the target of mouse event */\n    pointer-events: none;\n}"
      },
      "date": 1626340492318
    },
    {
      "type": "edit",
      "id": "b2f5a2399774a9d5",
      "item": {
        "type": "code",
        "id": "b2f5a2399774a9d5",
        "text": ".local-anchor .icon {\n    color: #3d7e9a;\n    width: 16px;\n    height: 16px;\n    pointer-events: none;\n}"
      },
      "date": 1626340508333
    },
    {
      "type": "add",
      "id": "9c6da960c06bc880",
      "item": {
        "type": "markdown",
        "id": "9c6da960c06bc880",
        "text": "In order to ensure the svg will never be the target of mouse event, the following css we can use pointer-events:\n"
      },
      "after": "575c03ef1ca96b61",
      "date": 1626340580558
    },
    {
      "type": "edit",
      "id": "24140054cb3a6fe6",
      "item": {
        "type": "markdown",
        "id": "24140054cb3a6fe6",
        "text": "We try as far as possible to use standards based HTML5 api's to interact with elements. This helps us use the content **outside** of the wiki environment.\n"
      },
      "date": 1626342450218
    },
    {
      "type": "remove",
      "id": "d8ae0c29067d40ab",
      "date": 1626342460435
    },
    {
      "type": "edit",
      "id": "ee3042001fae9c1f",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Currently in the [[clickable svg]] demmo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the svg.\n"
      },
      "date": 1626342533301
    },
    {
      "type": "add",
      "id": "d981b8c64fc9df63",
      "item": {
        "type": "markdown",
        "id": "d981b8c64fc9df63",
        "text": "However, we may wish to craft svg's that contain some nodes with links and others without. In the example below the orange ovals may link to pages, while the green ones do something else.\n"
      },
      "after": "ee3042001fae9c1f",
      "date": 1626342533918
    },
    {
      "type": "edit",
      "id": "ee3042001fae9c1f",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Currently in the [[clickable svg]] demmo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the svg.\n"
      },
      "date": 1626342538570
    },
    {
      "type": "edit",
      "id": "ee3042001fae9c1f",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Currently in the [[clickable svg]] demmo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the svg.\n"
      },
      "date": 1626342582328
    },
    {
      "type": "edit",
      "id": "d981b8c64fc9df63",
      "item": {
        "type": "markdown",
        "id": "d981b8c64fc9df63",
        "text": "However, we may wish to craft svg's that contain some nodes with links and others without. In the example below the orange ovals may link to pages, while the green ones do something else.\n"
      },
      "date": 1626342594684
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Use addEventListenr\n"
      },
      "date": 1626342797758
    },
    {
      "item": {
        "type": "code",
        "id": "bdc64bc7c9191fce",
        "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
      },
      "id": "bdc64bc7c9191fce",
      "type": "add",
      "after": "b2f5a2399774a9d5",
      "date": 1626342815335
    },
    {
      "type": "edit",
      "id": "bdc64bc7c9191fce",
      "item": {
        "type": "code",
        "id": "bdc64bc7c9191fce",
        "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
      },
      "date": 1626342822335
    },
    {
      "type": "edit",
      "id": "bdc64bc7c9191fce",
      "item": {
        "type": "code",
        "id": "bdc64bc7c9191fce",
        "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
      },
      "date": 1626342863939
    },
    {
      "type": "edit",
      "id": "bdc64bc7c9191fce",
      "item": {
        "type": "code",
        "id": "bdc64bc7c9191fce",
        "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
      },
      "date": 1626342919929
    },
    {
      "type": "edit",
      "id": "bdc64bc7c9191fce",
      "item": {
        "type": "code",
        "id": "bdc64bc7c9191fce",
        "text": "<a xlink:href=\"xxx\" xlink:title=\"row_GetDataAbove\">\n<ellipse fill=\"GreenYellow\" stroke=\"#008b00\" cx=\"323\" cy=\"-34\" rx=\"77.4275\" ry=\"13.9375\">\n</ellipse>\n\n<text text-anchor=\"middle\" x=\"323\" y=\"-30.3\" font-family=\"Times,serif\" font-size=\"14.00\">row_GetDataAbove</text>"
      },
      "date": 1626342958494
    },
    {
      "id": "bdc64bc7c9191fce",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "9e5d965213be1845",
        "ee3042001fae9c1f",
        "d981b8c64fc9df63",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "bdc64bc7c9191fce",
        "d228bdd0a9094af0",
        "8451589760f631c5",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61",
        "9c6da960c06bc880",
        "b2f5a2399774a9d5"
      ],
      "date": 1626342976992
    },
    {
      "type": "add",
      "id": "14f0bf502a2a15a2",
      "item": {
        "type": "markdown",
        "id": "14f0bf502a2a15a2",
        "text": "[[Graphviz]] exports nodes with links in the following mannor:"
      },
      "after": "e4703aff9fbd3fa0",
      "date": 1626343006274
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343125877
    },
    {
      "type": "add",
      "id": "57fd3185967e64ad",
      "item": {
        "type": "markdown",
        "id": "57fd3185967e64ad",
        "text": "The better way to add interactivity to an svg seems to be to add and event listener rather than look for `onlick` events."
      },
      "after": "d228bdd0a9094af0",
      "date": 1626343126485
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343135692
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343161030
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343171739
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343175587
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use thee url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"greenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343200769
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Use addEventListenr\n"
      },
      "date": 1626343212876
    },
    {
      "id": "57fd3185967e64ad",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "9e5d965213be1845",
        "ee3042001fae9c1f",
        "d981b8c64fc9df63",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "14f0bf502a2a15a2",
        "bdc64bc7c9191fce",
        "d228bdd0a9094af0",
        "8451589760f631c5",
        "57fd3185967e64ad",
        "f5e9a93e0b5779fd",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61",
        "9c6da960c06bc880",
        "b2f5a2399774a9d5"
      ],
      "date": 1626343215921,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "f5e9a93e0b5779fd",
      "item": {
        "type": "markdown",
        "id": "f5e9a93e0b5779fd",
        "text": "According to this [https://stackoverflow.com/questions/21114382/onclick-events-in-svg-file stackoverflow] post, it look like we should not use `onlckick` but instead add an event listener along the lines of:\n"
      },
      "after": "8451589760f631c5",
      "date": 1626343217509
    },
    {
      "type": "fork",
      "date": 1626343219701
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "> The [[question]] is can we usefully use the url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"GreenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343249372
    },
    {
      "type": "edit",
      "id": "d228bdd0a9094af0",
      "item": {
        "type": "markdown",
        "id": "d228bdd0a9094af0",
        "text": "The next step is to enable differeent types of interaction depending on the node clicked (and the style of that node). \n"
      },
      "date": 1626343282155
    },
    {
      "type": "add",
      "id": "4c2bcb57ff819833",
      "item": {
        "type": "markdown",
        "id": "4c2bcb57ff819833",
        "text": "> The [[question]] is can we usefully use the url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"GreenYellow\"` to distinguish nodes and actions?\n"
      },
      "after": "d228bdd0a9094af0",
      "date": 1626343282483
    },
    {
      "type": "edit",
      "id": "4c2bcb57ff819833",
      "item": {
        "type": "markdown",
        "id": "4c2bcb57ff819833",
        "text": "> [[Question:]] is can we usefully use the url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"GreenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1626343403062
    },
    {
      "type": "edit",
      "id": "8451589760f631c5",
      "item": {
        "type": "markdown",
        "id": "8451589760f631c5",
        "text": "# Use addEventListener\n"
      },
      "date": 1626343533227
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1626899955325
    },
    {
      "item": {
        "type": "factory",
        "id": "c312f5fb5de4efa3"
      },
      "id": "c312f5fb5de4efa3",
      "type": "add",
      "after": "b2f5a2399774a9d5",
      "date": 1626962602554
    },
    {
      "type": "edit",
      "id": "c312f5fb5de4efa3",
      "item": {
        "type": "assets",
        "id": "c312f5fb5de4efa3",
        "text": "graph"
      },
      "date": 1626962606434
    },
    {
      "item": {
        "type": "factory",
        "id": "cf5d89e67c4addaf"
      },
      "id": "cf5d89e67c4addaf",
      "type": "add",
      "after": "c312f5fb5de4efa3",
      "date": 1626962615370
    },
    {
      "type": "edit",
      "id": "cf5d89e67c4addaf",
      "item": {
        "type": "markdown",
        "id": "cf5d89e67c4addaf",
        "text": "# Graph Assets"
      },
      "date": 1626962621470
    },
    {
      "id": "cf5d89e67c4addaf",
      "type": "move",
      "order": [
        "24140054cb3a6fe6",
        "9e5d965213be1845",
        "ee3042001fae9c1f",
        "d981b8c64fc9df63",
        "c369265e7b182d10",
        "e4703aff9fbd3fa0",
        "14f0bf502a2a15a2",
        "bdc64bc7c9191fce",
        "d228bdd0a9094af0",
        "4c2bcb57ff819833",
        "8451589760f631c5",
        "f5e9a93e0b5779fd",
        "57fd3185967e64ad",
        "e693f0259f6e96d7",
        "a22331b292fd9542",
        "575c03ef1ca96b61",
        "9c6da960c06bc880",
        "b2f5a2399774a9d5",
        "cf5d89e67c4addaf",
        "c312f5fb5de4efa3"
      ],
      "date": 1626962623355
    },
    {
      "type": "fork",
      "site": "rough.visualjam.org",
      "date": 1629814494724
    },
    {
      "id": "f43226f2a14a71db",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "f43226f2a14a71db",
        "site": "visualjam.org",
        "slug": "interactive-sofi-svg",
        "title": "Interactive Sofi SVG",
        "text": "Transported image. [http://cvc.sofivsm.tries.fed.wiki/assets/%233Drawio%20Sofi%20Model%20SVG%20Links%20Labels.svg source]"
      },
      "after": "ee3042001fae9c1f",
      "date": 1629814509185
    },
    {
      "id": "e3c9b3d15747dcfa",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "e3c9b3d15747dcfa",
        "site": "visualjam.org",
        "slug": "observable-svg",
        "title": "Observable SVG",
        "text": "How might we use ObservableHQ's libraries within wiki? The Runtime invites experimentation. Marc's efforts to create a diagram for sofi provides a suitable challenge. [https://github.com/observablehq/runtime README]"
      },
      "after": "f43226f2a14a71db",
      "date": 1629814512696
    },
    {
      "id": "490e8e109cdc52bc",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "490e8e109cdc52bc",
        "site": "future.fedwiki.org",
        "slug": "svg-links",
        "title": "SVG Links",
        "text": "We can also drag and drop svg files onto the image tag."
      },
      "after": "ee3042001fae9c1f",
      "date": 1629814606362
    },
    {
      "type": "edit",
      "id": "ee3042001fae9c1f",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Currently in the [[clickable svg]] demmo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the [[svg]].\n\n"
      },
      "date": 1629814878882
    },
    {
      "type": "add",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "- [[Clickable SVG]]"
      },
      "after": "ee3042001fae9c1f",
      "date": 1629814884758
    },
    {
      "type": "edit",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "- [[Clickable SVG]]\n- [[SVG Links]]"
      },
      "date": 1629814896590
    },
    {
      "type": "edit",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "- [[Clickable SVG]]\n- [[SVG Links]]\n- [[Interactive Sofi SVG]]"
      },
      "date": 1629814906413
    },
    {
      "type": "edit",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "- [[Clickable SVG]]\n- [[SVG Links]]\n- [[Interactive Sofi SVG]]\n- [[Observable SVG]]"
      },
      "date": 1629814916585
    },
    {
      "type": "remove",
      "id": "490e8e109cdc52bc",
      "date": 1629814919023
    },
    {
      "type": "remove",
      "id": "f43226f2a14a71db",
      "date": 1629814921681
    },
    {
      "type": "remove",
      "id": "e3c9b3d15747dcfa",
      "date": 1629814923662
    },
    {
      "type": "edit",
      "id": "ee3042001fae9c1f",
      "item": {
        "type": "markdown",
        "id": "ee3042001fae9c1f",
        "text": "Currently in the [[clickable svg]] demo we are using an `onclick` event to trap for interacting with the svg. This does not require any markup such as adding links to the [[svg]].\n\n"
      },
      "date": 1629814929423
    },
    {
      "type": "edit",
      "id": "14f0bf502a2a15a2",
      "item": {
        "type": "markdown",
        "id": "14f0bf502a2a15a2",
        "text": "[[Graphviz]] exports nodes with links in the following manor:"
      },
      "date": 1629814949531
    },
    {
      "type": "edit",
      "id": "4c2bcb57ff819833",
      "item": {
        "type": "markdown",
        "id": "4c2bcb57ff819833",
        "text": "> [[Question:]] can we usefully use the url attribute here, or perhaps should we rely on another (non-semantic) attribute like `fill=\"GreenYellow\"` to distinguish nodes and actions?\n"
      },
      "date": 1629814966305
    },
    {
      "type": "edit",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "Follow these links to explore [[svg]] interaction n wiki:\n\n- [[Clickable SVG]]\n- [[SVG Links]]\n- [[Interactive Sofi SVG]]\n- [[Observable SVG]]"
      },
      "date": 1629815010173
    },
    {
      "type": "fork",
      "site": "visualjam.org",
      "date": 1629910357648
    },
    {
      "type": "edit",
      "id": "39b543f09bdf9ce2",
      "item": {
        "type": "markdown",
        "id": "39b543f09bdf9ce2",
        "text": "Follow these links to explore [[svg]] interaction n wiki:\n\n- [[MountainStorm]] and [[Load external SVG]]\n- [[Clickable SVG]]\n- [[SVG Links]]\n- [[Interactive Sofi SVG]]\n- [[Observable SVG]]"
      },
      "date": 1629910637807
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1629987044900
    }
  ]
}