{
  "title": "Tags Map",
  "story": [
    {
      "type": "paragraph",
      "id": "a2cd3d92bef62a8d",
      "text": "Example of a Tags Map:"
    },
    {
      "type": "image",
      "id": "c455425d49f08086",
      "text": "[[BlocPac-Scrollable]]",
      "size": "wide",
      "width": 419,
      "height": 291,
      "url": "/assets/plugins/image/169970ba15762cfa52c4b06de19a6370.jpg"
    },
    {
      "type": "reference",
      "id": "bfd52753412a1171",
      "site": "traits.code.dreyeck.ch",
      "slug": "tblscrollable",
      "title": "TBlScrollable",
      "text": "a >> trait"
    },
    {
      "type": "paragraph",
      "id": "21274b2021c4ef0a",
      "text": "[[Trait]]: My instances are the [[Traits]] used to create traited classes.\nThe traits can be combined in different ways check [[TaAbstractComposition]] to see the different possible operations."
    },
    {
      "type": "paragraph",
      "id": "e939b2977ec13f26",
      "text": "I am a subclass of Class, and I implement the specific [[Behavior]] for traits.\nSo, the traits are polymorphic with classes."
    },
    {
      "type": "paragraph",
      "id": "3fcda3637661ad64",
      "text": "I support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check [[MetaclassForTraits]]."
    },
    {
      "type": "paragraph",
      "id": "bfb800dc807c0685",
      "text": "Also a nice diagram [https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png png] can be seen evaluating:"
    },
    {
      "type": "code",
      "id": "adbc6e1af4afbf4e",
      "text": "((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow)"
    },
    {
      "type": "pagefold",
      "id": "cbb32acef87ede8b",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ed1616bfd54d1e48",
      "text": "[[RPackage]]>>#gtTagAndClassHierarchyFor:"
    },
    {
      "type": "code",
      "id": "00244366914e4746",
      "text": "gtTagAndClassHierarchyFor: aView\n\t\"<gtView>\"\n\t<gtPackageView>\n\t^ aView mondrian\n\t\ttitle: 'Tags Map';\n\t\tpriority: 10.7;\n\t\ttooltip: 'Classes: black, Traits: orange';\n\t\tpainting: [ :aMondrian | self paintTagAndClassHierarchyWith: aMondrian ];\n\t\tactionUpdateButton"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Tags Map",
        "story": []
      },
      "date": 1702967768267
    },
    {
      "item": {
        "type": "factory",
        "id": "ed1616bfd54d1e48"
      },
      "id": "ed1616bfd54d1e48",
      "type": "add",
      "date": 1702967769936
    },
    {
      "type": "edit",
      "id": "ed1616bfd54d1e48",
      "item": {
        "type": "paragraph",
        "id": "ed1616bfd54d1e48",
        "text": "[[RPackage]]>>#gtTagAndClassHierarchyFor:"
      },
      "date": 1702967783901
    },
    {
      "item": {
        "type": "factory",
        "id": "00244366914e4746"
      },
      "id": "00244366914e4746",
      "type": "add",
      "after": "ed1616bfd54d1e48",
      "date": 1702967794439
    },
    {
      "type": "edit",
      "id": "00244366914e4746",
      "item": {
        "type": "code",
        "id": "00244366914e4746",
        "text": "gtTagAndClassHierarchyFor: aView\n\t\"<gtView>\"\n\t<gtPackageView>\n\t^ aView mondrian\n\t\ttitle: 'Tags Map';\n\t\tpriority: 10.7;\n\t\ttooltip: 'Classes: black, Traits: orange';\n\t\tpainting: [ :aMondrian | self paintTagAndClassHierarchyWith: aMondrian ];\n\t\tactionUpdateButton"
      },
      "date": 1702967796612
    },
    {
      "id": "c455425d49f08086",
      "type": "add",
      "item": {
        "type": "image",
        "id": "c455425d49f08086",
        "text": "[[BlocPac-Scrollable]]",
        "size": "wide",
        "width": 419,
        "height": 291,
        "url": "/assets/plugins/image/169970ba15762cfa52c4b06de19a6370.jpg"
      },
      "after": "00244366914e4746",
      "attribution": {
        "page": "2023-12-19"
      },
      "date": 1702967807312
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702971080082
    },
    {
      "item": {
        "type": "factory",
        "id": "bfd52753412a1171"
      },
      "id": "bfd52753412a1171",
      "type": "add",
      "after": "c455425d49f08086",
      "date": 1702971121301
    },
    {
      "type": "edit",
      "id": "bfd52753412a1171",
      "item": {
        "type": "reference",
        "id": "bfd52753412a1171",
        "site": "traits.code.dreyeck.ch",
        "slug": "tblscrollable",
        "title": "TBlScrollable",
        "text": "a >> trait"
      },
      "date": 1702971124249
    },
    {
      "item": {
        "type": "factory",
        "id": "21274b2021c4ef0a"
      },
      "id": "21274b2021c4ef0a",
      "type": "add",
      "after": "bfd52753412a1171",
      "date": 1702971175562
    },
    {
      "type": "edit",
      "id": "21274b2021c4ef0a",
      "item": {
        "type": "paragraph",
        "id": "21274b2021c4ef0a",
        "text": "[[Trait]]: My instances are the traits used to create traited classes.\nThe traits can be combined in different ways check TaAbstractComposition to see the different possible operations.\n\nI am a subclass of Class, and I implement the specific behavior for traits.\nSo, the traits are polymorphic with classes.\n\nI support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check MetaclassForTraits. \n\nAlso a nice diagram can be seen evaluating:\n\n((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow) \n\n"
      },
      "date": 1702971188601
    },
    {
      "type": "edit",
      "id": "21274b2021c4ef0a",
      "item": {
        "type": "paragraph",
        "id": "21274b2021c4ef0a",
        "text": "[[Trait]]: My instances are the [[Traits]] used to create traited classes.\nThe traits can be combined in different ways check TaAbstractComposition to see the different possible operations.\n\nI am a subclass of Class, and I implement the specific behavior for traits.\nSo, the traits are polymorphic with classes.\n\nI support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check MetaclassForTraits. \n\nAlso a nice diagram can be seen evaluating:\n\n((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow) \n\n"
      },
      "date": 1702971207410
    },
    {
      "type": "edit",
      "id": "21274b2021c4ef0a",
      "item": {
        "type": "paragraph",
        "id": "21274b2021c4ef0a",
        "text": "[[Trait]]: My instances are the [[Traits]] used to create traited classes.\nThe traits can be combined in different ways check [[TaAbstractComposition]] to see the different possible operations.\n\nI am a subclass of Class, and I implement the specific behavior for traits.\nSo, the traits are polymorphic with classes.\n\nI support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check MetaclassForTraits. \n\nAlso a nice diagram can be seen evaluating:\n\n((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow) \n\n"
      },
      "date": 1702971239439
    },
    {
      "type": "edit",
      "id": "21274b2021c4ef0a",
      "item": {
        "type": "paragraph",
        "id": "21274b2021c4ef0a",
        "text": "[[Trait]]: My instances are the [[Traits]] used to create traited classes.\nThe traits can be combined in different ways check [[TaAbstractComposition]] to see the different possible operations."
      },
      "date": 1702971249719
    },
    {
      "type": "add",
      "id": "e939b2977ec13f26",
      "item": {
        "type": "paragraph",
        "id": "e939b2977ec13f26",
        "text": "I am a subclass of Class, and I implement the specific [[Behavior]] for traits.\nSo, the traits are polymorphic with classes.\n\nI support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check MetaclassForTraits. \n\nAlso a nice diagram can be seen evaluating:\n\n((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow)"
      },
      "after": "21274b2021c4ef0a",
      "date": 1702971258158
    },
    {
      "type": "edit",
      "id": "e939b2977ec13f26",
      "item": {
        "type": "paragraph",
        "id": "e939b2977ec13f26",
        "text": "I am a subclass of Class, and I implement the specific [[Behavior]] for traits.\nSo, the traits are polymorphic with classes.\n\nI support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check MetaclassForTraits."
      },
      "date": 1702971280682
    },
    {
      "type": "add",
      "id": "bfb800dc807c0685",
      "item": {
        "type": "paragraph",
        "id": "bfb800dc807c0685",
        "text": "Also a nice diagram can be seen evaluating:\n\n((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow)"
      },
      "after": "e939b2977ec13f26",
      "date": 1702971282487
    },
    {
      "type": "edit",
      "id": "e939b2977ec13f26",
      "item": {
        "type": "paragraph",
        "id": "e939b2977ec13f26",
        "text": "I am a subclass of Class, and I implement the specific [[Behavior]] for traits.\nSo, the traits are polymorphic with classes."
      },
      "date": 1702971288096
    },
    {
      "type": "add",
      "id": "3fcda3637661ad64",
      "item": {
        "type": "paragraph",
        "id": "3fcda3637661ad64",
        "text": "I support stateful traits. \nAlso Traits uses other metaclass to implement the behavior, check [[MetaclassForTraits]]."
      },
      "after": "e939b2977ec13f26",
      "date": 1702971296517
    },
    {
      "item": {
        "type": "factory",
        "id": "403ca2cd2dfcc417"
      },
      "id": "403ca2cd2dfcc417",
      "type": "add",
      "after": "bfb800dc807c0685",
      "date": 1702971307673
    },
    {
      "type": "remove",
      "id": "403ca2cd2dfcc417",
      "date": 1702971312353
    },
    {
      "type": "edit",
      "id": "bfb800dc807c0685",
      "item": {
        "type": "paragraph",
        "id": "bfb800dc807c0685",
        "text": "Also a nice diagram can be seen evaluating:"
      },
      "date": 1702971318822
    },
    {
      "item": {
        "type": "factory",
        "id": "adbc6e1af4afbf4e"
      },
      "id": "adbc6e1af4afbf4e",
      "type": "add",
      "after": "bfb800dc807c0685",
      "date": 1702971320239
    },
    {
      "type": "edit",
      "id": "adbc6e1af4afbf4e",
      "item": {
        "type": "code",
        "id": "adbc6e1af4afbf4e",
        "text": "((ZnEasy getPng: 'https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png') \n\tasMorph resize: 800@800; openInWindow)"
      },
      "date": 1702971322301
    },
    {
      "type": "edit",
      "id": "bfb800dc807c0685",
      "item": {
        "type": "paragraph",
        "id": "bfb800dc807c0685",
        "text": "Also a nice diagram [https://raw.githubusercontent.com/wiki/pharo-project/pharo/figures/traits.png png] can be seen evaluating:"
      },
      "date": 1702971336933
    },
    {
      "type": "add",
      "id": "a2cd3d92bef62a8d",
      "item": {
        "type": "paragraph",
        "id": "a2cd3d92bef62a8d",
        "text": "Example"
      },
      "after": "ed1616bfd54d1e48",
      "date": 1702972337316
    },
    {
      "id": "a2cd3d92bef62a8d",
      "type": "move",
      "order": [
        "ed1616bfd54d1e48",
        "00244366914e4746",
        "a2cd3d92bef62a8d",
        "c455425d49f08086",
        "bfd52753412a1171",
        "21274b2021c4ef0a",
        "e939b2977ec13f26",
        "3fcda3637661ad64",
        "bfb800dc807c0685",
        "adbc6e1af4afbf4e"
      ],
      "date": 1702972340113
    },
    {
      "type": "edit",
      "id": "a2cd3d92bef62a8d",
      "item": {
        "type": "paragraph",
        "id": "a2cd3d92bef62a8d",
        "text": "Example of a Tags Map:"
      },
      "date": 1702972354719
    },
    {
      "type": "fork",
      "site": "traits.code.dreyeck.ch",
      "date": 1702972863503
    },
    {
      "item": {
        "type": "pagefold",
        "id": "cbb32acef87ede8b",
        "text": "~"
      },
      "id": "cbb32acef87ede8b",
      "type": "add",
      "after": "adbc6e1af4afbf4e",
      "date": 1702973025026
    },
    {
      "type": "edit",
      "id": "cbb32acef87ede8b",
      "item": {
        "type": "pagefold",
        "id": "cbb32acef87ede8b",
        "text": "~"
      },
      "date": 1702973028953
    },
    {
      "id": "ed1616bfd54d1e48",
      "type": "move",
      "order": [
        "00244366914e4746",
        "a2cd3d92bef62a8d",
        "c455425d49f08086",
        "bfd52753412a1171",
        "21274b2021c4ef0a",
        "e939b2977ec13f26",
        "3fcda3637661ad64",
        "bfb800dc807c0685",
        "adbc6e1af4afbf4e",
        "cbb32acef87ede8b",
        "ed1616bfd54d1e48"
      ],
      "date": 1702973037064
    },
    {
      "id": "00244366914e4746",
      "type": "move",
      "order": [
        "a2cd3d92bef62a8d",
        "c455425d49f08086",
        "bfd52753412a1171",
        "21274b2021c4ef0a",
        "e939b2977ec13f26",
        "3fcda3637661ad64",
        "bfb800dc807c0685",
        "adbc6e1af4afbf4e",
        "cbb32acef87ede8b",
        "ed1616bfd54d1e48",
        "00244366914e4746"
      ],
      "date": 1702973043929
    },
    {
      "type": "fork",
      "date": 1702973057340
    }
  ]
}