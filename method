{
  "title": "Method",
  "story": [
    {
      "type": "markdown",
      "id": "e533d3d636755134",
      "text": "> How to do it."
    },
    {
      "type": "reference",
      "id": "92a926c713bd90cb",
      "site": "wiki.ralfbarkow.ch",
      "slug": "object",
      "title": "Object",
      "text": "See \"First look at Objects, Classes, Methods and\nMessages\" [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "2dc1d2674c81dac1",
      "text": "The Smalltalk code is stored in what is called a method, which corresponds (approximately) to a named Lisp lambda-expression. As for classes, a textual representation may be obtained just by sending introspective messages. [:x | x+1] is equivalent to the (lambda (x) (+ x 1)) Lisp expression.\n"
    },
    {
      "type": "code",
      "id": "ab27e7338192106f",
      "text": "[:x | x+1] "
    },
    {
      "type": "markdown",
      "id": "9850a4784c999a0b",
      "text": " It is represented by an object – a `FullBlockClosure` – from which one can ask for its external textual representation. In order to get their external textual representation, methods and lexical closures, denoted under the vocable block, use their internal representation, which mainly comprises bytecodes, as well as a decompiler (which is reified, too). A special tool (CompiledCodeInspector) makes the access to this source representation very user friendly, using the mouse and a click on a field."
    },
    {
      "type": "pagefold",
      "id": "a0f25628cfee8420",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "1cfe16886022dccd",
      "site": "marc.tries.fed.wiki",
      "slug": "method",
      "title": "Method",
      "text": "Need to define method, [[tool]], [[affordance]], [[model]] and more.\n\nSee [[Methods]]."
    },
    {
      "type": "reference",
      "id": "179ac1dd75099994",
      "site": "wiki.ralfbarkow.ch",
      "slug": "how-questions",
      "title": "How-Questions",
      "text": "[…] the suggestion to pass from [[What-Questions]] to How-Questions (with Kant: as a question about the conditions of possibility), but the transcendental dissolution of the circle of cognition, which has to presuppose itself, hardly finds approval today; because it had to prove what had to be renounced, namely the essence cosmos and the cognizability of the thing in itself, as an achievement of consciousness."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Method",
        "story": []
      },
      "date": 1606926684142
    },
    {
      "item": {
        "type": "factory",
        "id": "2dc1d2674c81dac1"
      },
      "id": "2dc1d2674c81dac1",
      "type": "add",
      "date": 1606926691391
    },
    {
      "type": "edit",
      "id": "2dc1d2674c81dac1",
      "item": {
        "type": "markdown",
        "id": "2dc1d2674c81dac1",
        "text": "Whisp:\nNeed to define method, [[tool]], [[affordance]], [[model]] and more.\nSee [[Methods]]."
      },
      "date": 1606926787060
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1631270919845
    },
    {
      "item": {
        "type": "reference",
        "id": "1cfe16886022dccd",
        "site": "marc.tries.fed.wiki",
        "slug": "method",
        "title": "Method",
        "text": "Whisp:"
      },
      "id": "1cfe16886022dccd",
      "type": "add",
      "after": "2dc1d2674c81dac1",
      "date": 1659025970049
    },
    {
      "type": "edit",
      "id": "1cfe16886022dccd",
      "item": {
        "type": "reference",
        "id": "1cfe16886022dccd",
        "site": "marc.tries.fed.wiki",
        "slug": "method",
        "title": "Method",
        "text": "Whisp:"
      },
      "date": 1659025972665
    },
    {
      "type": "edit",
      "id": "2dc1d2674c81dac1",
      "item": {
        "type": "markdown",
        "id": "2dc1d2674c81dac1",
        "text": "The Smalltalk code is stored in what is called a method, which corresponds (approximately) to a named Lisp lambda-expression. As for classes, a textual representation may be obtained just by sending introspective messages. [:x | x+1] is equivalent to the (lambda (x) (+ x 1)) Lisp expression.\n"
      },
      "date": 1659025987087
    },
    {
      "type": "edit",
      "id": "2dc1d2674c81dac1",
      "item": {
        "type": "markdown",
        "id": "2dc1d2674c81dac1",
        "text": "The Smalltalk code is stored in what is called a method, which corresponds (approximately) to a named Lisp lambda-expression. As for classes, a textual representation may be obtained just by sending introspective messages. [:x | x+1] is equivalent to the (lambda (x) (+ x 1)) Lisp expression.\n"
      },
      "date": 1659026000029
    },
    {
      "id": "1cfe16886022dccd",
      "type": "move",
      "order": [
        "2dc1d2674c81dac1",
        "1cfe16886022dccd",
        "b3f584d930504832"
      ],
      "date": 1659026003066,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1659026005315
    },
    {
      "type": "add",
      "id": "b3f584d930504832",
      "item": {
        "type": "markdown",
        "id": "b3f584d930504832",
        "text": "\nNeed to define method, [[tool]], [[affordance]], [[model]] and more.\nSee [[Methods]]."
      },
      "after": "2dc1d2674c81dac1",
      "date": 1659026005747
    },
    {
      "item": {
        "type": "factory",
        "id": "ab27e7338192106f"
      },
      "id": "ab27e7338192106f",
      "type": "add",
      "after": "b3f584d930504832",
      "date": 1659026061754
    },
    {
      "type": "edit",
      "id": "ab27e7338192106f",
      "item": {
        "type": "code",
        "id": "ab27e7338192106f",
        "text": "[:x | x+1] "
      },
      "date": 1659026064102
    },
    {
      "id": "ab27e7338192106f",
      "type": "move",
      "order": [
        "2dc1d2674c81dac1",
        "ab27e7338192106f",
        "1cfe16886022dccd",
        "b3f584d930504832"
      ],
      "date": 1659026066472
    },
    {
      "item": {
        "type": "factory",
        "id": "9850a4784c999a0b"
      },
      "id": "9850a4784c999a0b",
      "type": "add",
      "after": "b3f584d930504832",
      "date": 1659026108414
    },
    {
      "id": "9850a4784c999a0b",
      "type": "move",
      "order": [
        "2dc1d2674c81dac1",
        "ab27e7338192106f",
        "9850a4784c999a0b",
        "1cfe16886022dccd",
        "b3f584d930504832"
      ],
      "date": 1659026109990
    },
    {
      "type": "edit",
      "id": "9850a4784c999a0b",
      "item": {
        "type": "paragraph",
        "id": "9850a4784c999a0b",
        "text": " It is represented by an object – a `FullBlockClosure` – from which one can ask for its external textual representation. In order to get their external textual representation, methods and lexical closures, denoted under the vocable block, use their internal representation, which mainly comprises bytecodes, as well as a decompiler (which is reified, too). A special tool (CompiledCodeInspector) makes the access to this source representation very user friendly, using the mouse and a click on a field."
      },
      "date": 1659026111977
    },
    {
      "type": "edit",
      "id": "9850a4784c999a0b",
      "item": {
        "type": "markdown",
        "id": "9850a4784c999a0b",
        "text": " It is represented by an object – a `FullBlockClosure` – from which one can ask for its external textual representation. In order to get their external textual representation, methods and lexical closures, denoted under the vocable block, use their internal representation, which mainly comprises bytecodes, as well as a decompiler (which is reified, too). A special tool (CompiledCodeInspector) makes the access to this source representation very user friendly, using the mouse and a click on a field."
      },
      "date": 1659026113322
    },
    {
      "type": "edit",
      "id": "b3f584d930504832",
      "item": {
        "type": "markdown",
        "id": "b3f584d930504832",
        "text": "Need to define method, [[tool]], [[affordance]], [[model]] and more.\n\nSee [[Methods]]."
      },
      "date": 1659026162971
    },
    {
      "id": "e533d3d636755134",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "e533d3d636755134",
        "text": "> An **Object** is a unique entity instance of a class. A [[Class]] specifies the shape and behavior of all its instances. An object receives messages and executes corresponding methods. A [[Message]] is: What to do. A [[Method]] is: How to do it. Different objects can understand the same message and execute different methods. But we will see that again in the future lectures! [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "attribution": {
        "page": "Object"
      },
      "date": 1704619540404
    },
    {
      "type": "edit",
      "id": "e533d3d636755134",
      "item": {
        "type": "markdown",
        "id": "e533d3d636755134",
        "text": "> How to do it."
      },
      "date": 1704619547948
    },
    {
      "type": "add",
      "id": "6399412384e60491",
      "item": {
        "type": "markdown",
        "id": "6399412384e60491",
        "text": "Different objects can understand the same message and execute different methods. But we will see that again in the future lectures! [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "after": "e533d3d636755134",
      "date": 1704619548816
    },
    {
      "id": "92a926c713bd90cb",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "92a926c713bd90cb",
        "site": "wiki.ralfbarkow.ch",
        "slug": "object",
        "title": "Object",
        "text": "See \"First look at Objects, Classes, Methods and\nMessages\" [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "after": "e533d3d636755134",
      "attribution": {
        "page": "Message"
      },
      "date": 1704619556930
    },
    {
      "type": "remove",
      "id": "6399412384e60491",
      "date": 1704619591401
    },
    {
      "type": "remove",
      "id": "b3f584d930504832",
      "date": 1704619672713
    },
    {
      "type": "edit",
      "id": "1cfe16886022dccd",
      "item": {
        "type": "reference",
        "id": "1cfe16886022dccd",
        "site": "marc.tries.fed.wiki",
        "slug": "method",
        "title": "Method",
        "text": "Need to define method, [[tool]], [[affordance]], [[model]] and more.\n\nSee [[Methods]]."
      },
      "date": 1704619674613
    },
    {
      "item": {
        "type": "factory",
        "id": "a0f25628cfee8420"
      },
      "id": "a0f25628cfee8420",
      "type": "add",
      "after": "1cfe16886022dccd",
      "date": 1704619721987
    },
    {
      "id": "a0f25628cfee8420",
      "type": "move",
      "order": [
        "e533d3d636755134",
        "92a926c713bd90cb",
        "2dc1d2674c81dac1",
        "ab27e7338192106f",
        "9850a4784c999a0b",
        "a0f25628cfee8420",
        "1cfe16886022dccd"
      ],
      "date": 1704619725250
    },
    {
      "type": "edit",
      "id": "a0f25628cfee8420",
      "item": {
        "type": "pagefold",
        "id": "a0f25628cfee8420",
        "text": "~"
      },
      "date": 1704619729238
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704625863387
    },
    {
      "item": {
        "type": "factory",
        "id": "179ac1dd75099994"
      },
      "id": "179ac1dd75099994",
      "type": "add",
      "after": "1cfe16886022dccd",
      "date": 1704625905530
    },
    {
      "type": "edit",
      "id": "179ac1dd75099994",
      "item": {
        "type": "reference",
        "id": "179ac1dd75099994",
        "site": "wiki.ralfbarkow.ch",
        "slug": "how-questions",
        "title": "How-Questions",
        "text": "[…] the suggestion to pass from [[What-Questions]] to How-Questions (with Kant: as a question about the conditions of possibility), but the transcendental dissolution of the circle of cognition, which has to presuppose itself, hardly finds approval today; because it had to prove what had to be renounced, namely the essence cosmos and the cognizability of the thing in itself, as an achievement of consciousness."
      },
      "date": 1704625909386
    }
  ]
}