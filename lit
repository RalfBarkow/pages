{
  "title": "Lit",
  "story": [
    {
      "type": "paragraph",
      "id": "14c5ad0d7fcae5dc",
      "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]] in the following German video. He also mentions Lit, a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
    },
    {
      "type": "video",
      "id": "b9bbd8ddc8027964",
      "text": "YOUTUBE cttpgBg6pDQ\nVanilla Web: Der Frontend-Trend f√ºr 2024?"
    },
    {
      "type": "paragraph",
      "id": "fb021e744ffa7c94",
      "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies."
    },
    {
      "type": "paragraph",
      "id": "5b4dbb173122266f",
      "text": "We import and run the bundles from within a code snippet like this:"
    },
    {
      "type": "code",
      "id": "3e1f6235b6ca0e8e",
      "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n"
    },
    {
      "type": "paragraph",
      "id": "313907154e6512d9",
      "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting/>\n</body>`;\n}\n"
    },
    {
      "type": "paragraph",
      "id": "f50d8bf303fcced5",
      "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
    },
    {
      "type": "code",
      "id": "86b33666cf5f5ba4",
      "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
      "alias": "5eb6b67568179aa3"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame (esm) with simple-greeting"
    },
    {
      "type": "frame",
      "id": "f3592f168ab4c6c7",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "markdown",
      "id": "2c8e8775b5a68371",
      "text": "# Assets"
    },
    {
      "type": "assets",
      "id": "89900c753ebd32f3",
      "text": "pages/lit"
    },
    {
      "type": "paragraph",
      "id": "b6852c7474725efa",
      "text": "index.html from the [https://lit.dev/playground/ playground]"
    },
    {
      "type": "frame",
      "id": "87b0811ac2b889e1",
      "text": "//wiki.ralfbarkow.ch/assets/pages/lit/index.html"
    },
    {
      "type": "video",
      "id": "bf0671e99be1c803",
      "text": "START 189\nYOUTUBE uzFakwHaSmw\nNov 2, 2022"
    },
    {
      "type": "paragraph",
      "id": "5c538bf0f3168949",
      "text": "See also [[Template Literals]] (Template strings) [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Lit",
        "story": []
      },
      "date": 1711104739310
    },
    {
      "item": {
        "type": "factory",
        "id": "3e1f6235b6ca0e8e"
      },
      "id": "3e1f6235b6ca0e8e",
      "type": "add",
      "date": 1711104740775
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "Web-Component"
      },
      "date": 1711104748516
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'lit';\n\n\nexport class SimpleGreeting extends LitElement {\n\n  static styles = css`p { color: blue }`;\n\n\n  static properties = {\n\n    name: {type: String},\n\n  };\n\n\n  constructor() {\n\n    super();\n\n    this.name = 'Somebody';\n\n  }\n\n\n  render() {\n\n    return html`<p>Hello, ${this.name}!</p>`;\n\n  }\n\n}\n\ncustomElements.define('simple-greeting', SimpleGreeting);"
      },
      "date": 1711104767060
    },
    {
      "id": "8155a586f5842b0f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8155a586f5842b0f",
        "text": "See also [[Static Import Snippet]]"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1711104811088
    },
    {
      "id": "87b0811ac2b889e1",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "87b0811ac2b889e1",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Static Import Snippet"
      },
      "date": 1711104826166
    },
    {
      "item": {
        "type": "factory",
        "id": "14c5ad0d7fcae5dc"
      },
      "id": "14c5ad0d7fcae5dc",
      "type": "add",
      "after": "8155a586f5842b0f",
      "date": 1711104904711
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is also available as pre-built, single-file bundles. These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies - any modern browser should be able to import and run the bundles from within a <script type=\"module\"> like this:"
      },
      "date": 1711104906331
    },
    {
      "id": "14c5ad0d7fcae5dc",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "3e1f6235b6ca0e8e",
        "87b0811ac2b889e1",
        "8155a586f5842b0f"
      ],
      "date": 1711104914287
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/ page]"
      },
      "date": 1711104935203
    },
    {
      "type": "add",
      "id": "c3c6d042bfb74537",
      "item": {
        "type": "paragraph",
        "id": "c3c6d042bfb74537",
        "text": "These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies - any modern browser should be able to import and run the bundles from within a <script type=\"module\"> like this:"
      },
      "after": "14c5ad0d7fcae5dc",
      "date": 1711104936000
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "//import {html, css, LitElement} from 'lit';\nimport {LitElement, html} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\n\nexport class SimpleGreeting extends LitElement {\n\n  static styles = css`p { color: blue }`;\n\n\n  static properties = {\n\n    name: {type: String},\n\n  };\n\n\n  constructor() {\n\n    super();\n\n    this.name = 'Somebody';\n\n  }\n\n\n  render() {\n\n    return html`<p>Hello, ${this.name}!</p>`;\n\n  }\n\n}\n\ncustomElements.define('simple-greeting', SimpleGreeting);"
      },
      "date": 1711104981055
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "//import {html, css, LitElement} from 'lit';\nimport {LitElement, html, css} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\n\nexport class SimpleGreeting extends LitElement {\n\n  static styles = css`p { color: blue }`;\n\n\n  static properties = {\n\n    name: {type: String},\n\n  };\n\n\n  constructor() {\n\n    super();\n\n    this.name = 'Somebody';\n\n  }\n\n\n  render() {\n\n    return html`<p>Hello, ${this.name}!</p>`;\n\n  }\n\n}\n\ncustomElements.define('simple-greeting', SimpleGreeting);"
      },
      "date": 1711105003027
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Paragraph Recommendation Viewer"
      },
      "date": 1711105265022
    },
    {
      "item": {
        "type": "factory",
        "id": "a89a5205c5e95f5b"
      },
      "id": "a89a5205c5e95f5b",
      "type": "add",
      "after": "8155a586f5842b0f",
      "date": 1711105294574
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Function to emit HTML content for the para container\nexport async function emit(el) {\n    el.innerHTML = `\n    <div id=\"para-container\"></div>\n    <style>#para-container {border: 1px solid black;}</style>`;\n}"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Paragraph Recommendation Viewer"
      },
      "date": 1711105307263
    },
    {
      "type": "edit",
      "id": "a89a5205c5e95f5b",
      "item": {
        "type": "paragraph",
        "id": "a89a5205c5e95f5b",
        "text": "<body>\n  <simple-greeting name=\"World\"></simple-greeting>\n</body>\n"
      },
      "date": 1711105309502
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Function to emit HTML content \nexport async function emit(el) {\n    el.innerHTML = `\n    <div id=\"para-container\"></div>\n    <style>#para-container {border: 1px solid black;}</style>`;\n}"
      },
      "date": 1711105346652
    },
    {
      "type": "edit",
      "id": "a89a5205c5e95f5b",
      "item": {
        "type": "paragraph",
        "id": "a89a5205c5e95f5b",
        "text": "<body>\n  \n</body>\n"
      },
      "date": 1711105355206
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Function to emit HTML content \nexport async function emit(el) {\n    el.innerHTML = `<simple-greeting name=\"World\"></simple-greeting>`;\n}"
      },
      "date": 1711105367823
    },
    {
      "type": "remove",
      "id": "a89a5205c5e95f5b",
      "date": 1711105369990
    },
    {
      "id": "f60c71defbe486e0",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f60c71defbe486e0",
        "text": "// Function to render the paragraph in the paragraph container\nasync function renderPara(paragraph) {\n    // Select the paragraph container element\n    const paraContainer = document.getElementById('para-container');\n    \n    // Highlight the paragraph if recommended\n    const color = paragraph.recommended ? 'darkorange' : 'black';\n\n    // Render the paragraph in the paragraph container\n    paraContainer.innerHTML += `<div><strong style=\"color:${color};\">${paragraph.id}</strong> <span style=\"color:gray;\">${paragraph.text}</span></div>`;\n}"
      },
      "after": "5eb6b67568179aa3",
      "attribution": {
        "page": "Paragraph Recommendation Viewer"
      },
      "date": 1711105504665
    },
    {
      "type": "edit",
      "id": "f60c71defbe486e0",
      "item": {
        "type": "code",
        "id": "f60c71defbe486e0",
        "text": "// Function to render the paragraph in the paragraph container\nasync function renderLit(name) {\n    // Select the paragraph container element\n    const paraContainer = document.getElementById('para-container');\n    \n    // Highlight the paragraph if recommended\n    const color = paragraph.recommended ? 'darkorange' : 'black';\n\n    // Render the paragraph in the paragraph container\n    paraContainer.innerHTML += `<div><strong style=\"color:${color};\">${paragraph.id}</strong> <span style=\"color:gray;\">${paragraph.text}</span></div>`;\n}"
      },
      "date": 1711105622220
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "//import {html, css, LitElement} from 'lit';\nimport {LitElement, html, css} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\n\nexport class SimpleGreeting extends LitElement {\n\n  static styles = css`p { color: blue }`;\n\n\n  static properties = {\n\n    name: {type: String},\n\n  };\n\n\n  constructor() {\n\n    super();\n\n    this.name = 'Somebody';\n\n  }\n\n\n  render() {\n\n    renderLit(this.name);\n    return html`<p>Hello, ${this.name}!</p>`;\n\n  }\n\n}\n\ncustomElements.define('simple-greeting', SimpleGreeting);"
      },
      "date": 1711105750853
    },
    {
      "type": "edit",
      "id": "f60c71defbe486e0",
      "item": {
        "type": "code",
        "id": "f60c71defbe486e0",
        "text": "// Function to render the paragraph in the paragraph container\nasync function renderLit(name) {\n;\n}"
      },
      "date": 1711105776070
    },
    {
      "type": "edit",
      "id": "f60c71defbe486e0",
      "item": {
        "type": "code",
        "id": "f60c71defbe486e0",
        "text": "// Function to render the paragraph in the paragraph container\nasync function renderLit(name) {\n  return html`<p>Hello, ${this.name}!</p>`;\n}"
      },
      "date": 1711105799440
    },
    {
      "item": {
        "type": "factory",
        "id": "89900c753ebd32f3"
      },
      "id": "89900c753ebd32f3",
      "type": "add",
      "after": "8155a586f5842b0f",
      "date": 1711105983274
    },
    {
      "type": "edit",
      "id": "89900c753ebd32f3",
      "item": {
        "type": "assets",
        "id": "89900c753ebd32f3",
        "text": "pages/lit"
      },
      "date": 1711105991461
    },
    {
      "type": "fork",
      "date": 1711106372145
    },
    {
      "type": "edit",
      "id": "87b0811ac2b889e1",
      "item": {
        "type": "frame",
        "id": "87b0811ac2b889e1",
        "text": "http://localhost:3000/assets/pages/lit/index.html\nHEIGHT 75"
      },
      "date": 1711106474185
    },
    {
      "type": "remove",
      "id": "5eb6b67568179aa3",
      "date": 1711106499456
    },
    {
      "type": "remove",
      "id": "f60c71defbe486e0",
      "date": 1711106501133
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n"
      },
      "date": 1711106543335
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/ page] [https://lit.dev/playground/ playground]"
      },
      "date": 1711106647034
    },
    {
      "item": {
        "type": "factory",
        "id": "fe4934b48f1ee316"
      },
      "id": "fe4934b48f1ee316",
      "type": "add",
      "after": "89900c753ebd32f3",
      "date": 1711106767230
    },
    {
      "type": "edit",
      "id": "fe4934b48f1ee316",
      "item": {
        "type": "frame",
        "id": "fe4934b48f1ee316",
        "text": "http://localhost:3000/assets/pages/lit/importjs.html"
      },
      "date": 1711106783923
    },
    {
      "id": "fe4934b48f1ee316",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "c3c6d042bfb74537",
        "3e1f6235b6ca0e8e",
        "00f76ff348892888",
        "fe4934b48f1ee316",
        "87b0811ac2b889e1",
        "8155a586f5842b0f",
        "89900c753ebd32f3"
      ],
      "date": 1711107639690
    },
    {
      "id": "87b0811ac2b889e1",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "c3c6d042bfb74537",
        "3e1f6235b6ca0e8e",
        "00f76ff348892888",
        "fe4934b48f1ee316",
        "8155a586f5842b0f",
        "89900c753ebd32f3",
        "87b0811ac2b889e1"
      ],
      "date": 1711107673184
    },
    {
      "type": "add",
      "id": "a739cb2c87179c5a",
      "item": {
        "type": "paragraph",
        "id": "a739cb2c87179c5a",
        "text": "index.html"
      },
      "after": "8155a586f5842b0f",
      "date": 1711107698835
    },
    {
      "id": "a739cb2c87179c5a",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "c3c6d042bfb74537",
        "3e1f6235b6ca0e8e",
        "00f76ff348892888",
        "fe4934b48f1ee316",
        "8155a586f5842b0f",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1"
      ],
      "date": 1711107703675
    },
    {
      "type": "edit",
      "id": "a739cb2c87179c5a",
      "item": {
        "type": "paragraph",
        "id": "a739cb2c87179c5a",
        "text": "# index.html"
      },
      "date": 1711107719273
    },
    {
      "type": "edit",
      "id": "a739cb2c87179c5a",
      "item": {
        "type": "markdown",
        "id": "a739cb2c87179c5a",
        "text": "# index.html"
      },
      "date": 1711107720741
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n\n\nexport default \"<h2>Ta-da!</h2>\"\n"
      },
      "date": 1711107810007
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n\n\nexport default \"<simple-greeting name=\"World\"></simple-greeting>\"\n"
      },
      "date": 1711107853197
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n\n\nexport default \"<h2><simple-greeting name=\"World\"></simple-greeting></h2>\"\n"
      },
      "date": 1711107938895
    },
    {
      "type": "edit",
      "id": "3e1f6235b6ca0e8e",
      "item": {
        "type": "code",
        "id": "3e1f6235b6ca0e8e",
        "text": "import {html, css, LitElement} from 'https://cdn.jsdelivr.net/gh/lit/dist@3/core/lit-core.min.js';\n\nexport class SimpleGreeting extends LitElement {\n  static styles = css`p { color: blue }`;\n\n  static properties = {\n    name: {type: String},\n  };\n\n  constructor() {\n    super();\n    this.name = 'Somebody';\n  }\n\n  render() {\n    return html`<p>Hello, ${this.name}!</p>`;\n  }\n}\ncustomElements.define('simple-greeting', SimpleGreeting);\n"
      },
      "date": 1711107967949
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from \n  'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option);\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Exploratory Parsing in Frames"
      },
      "date": 1711108123634
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1711108206302
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n    <div><simple-greeting name=\"World\"></simple-greeting></div>\n    `;\n}\n\n"
      },
      "date": 1711108242395
    },
    {
      "id": "313907154e6512d9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The last two async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our SVG element on the page containing a single path. The bind() function awaits the page content from context()‚Äîone of the things we imported at the top of the program‚Äîand filters the story for paragraphs to joint into the prose for our dance instructions. It instruments the <path> with a turtle and begins the animation loop."
      },
      "after": "3e1f6235b6ca0e8e",
      "attribution": {
        "page": "Tortoise Explains the Dance"
      },
      "date": 1711108949480
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The last two async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page containing a name."
      },
      "date": 1711109031926
    },
    {
      "type": "add",
      "id": "dcdd9a3e9f99a2e4",
      "item": {
        "type": "paragraph",
        "id": "dcdd9a3e9f99a2e4",
        "text": "The bind() function awaits the page content from context()‚Äîone of the things we imported at the top of the program‚Äîand filters the story for paragraphs to joint into the prose for our dance instructions. It instruments the <path> with a turtle and begins the animation loop."
      },
      "after": "313907154e6512d9",
      "date": 1711109072382
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "c3c6d042bfb74537",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "dcdd9a3e9f99a2e4",
        "00f76ff348892888",
        "fe4934b48f1ee316",
        "8155a586f5842b0f",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1"
      ],
      "date": 1711109074598
    },
    {
      "id": "f1f68a111e3deb24",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f1f68a111e3deb24",
        "text": "export async function emit(el) {\n  el.innerHTML = `<svg viewBox=\"-100 -100 200 200\"><path id=\"it\" d=\"\" fill=\"none\" stroke=\"black\"/></svg>`\n}\n\nexport async function bind(el) {\n const {page:{story}} = await context()\n const text = story\n   .filter(item => item.type == \"paragraph\")\n   .map(item => item.text.toLowerCase())\n   .join(\"\\n\")\n addTurtle(it)\n animate(it, text)\n document.body.insertAdjacentHTML(\n   'afterbegin',\n   `<p>${text}</p>`)\n}\n",
        "alias": "5eb6b67568179aa3"
      },
      "after": "dcdd9a3e9f99a2e4",
      "attribution": {
        "page": "Tortoise Explains the Dance"
      },
      "date": 1711109086334
    },
    {
      "type": "edit",
      "id": "f1f68a111e3deb24",
      "item": {
        "type": "code",
        "id": "f1f68a111e3deb24",
        "text": "export async function bind(el) {\n document.body.insertAdjacentHTML(\n   'afterbegin',\n   `<p>${text}</p>`)\n}\n",
        "alias": "5eb6b67568179aa3"
      },
      "date": 1711109123123
    },
    {
      "type": "edit",
      "id": "f1f68a111e3deb24",
      "item": {
        "type": "code",
        "id": "f1f68a111e3deb24",
        "text": "export async function bind(el) {\n document.body.insertAdjacentHTML(\n   'afterbegin',\n   `<p>${this.name}</p>`)\n}\n",
        "alias": "5eb6b67568179aa3"
      },
      "date": 1711109138661
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async function is how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page containing a name."
      },
      "date": 1711109269393
    },
    {
      "type": "remove",
      "id": "f1f68a111e3deb24",
      "date": 1711109273826
    },
    {
      "item": {
        "type": "factory",
        "id": "f3592f168ab4c6c7"
      },
      "id": "f3592f168ab4c6c7",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1711109839540
    },
    {
      "type": "edit",
      "id": "f3592f168ab4c6c7",
      "item": {
        "type": "frame",
        "id": "f3592f168ab4c6c7",
        "text": "http://localhost:3000/assets/pages/js-snippet-template/esm.html"
      },
      "date": 1711109843175
    },
    {
      "type": "fork",
      "date": 1711109894573
    },
    {
      "type": "remove",
      "id": "fe4934b48f1ee316",
      "date": 1711109898919
    },
    {
      "id": "f3592f168ab4c6c7",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "c3c6d042bfb74537",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "dcdd9a3e9f99a2e4",
        "00f76ff348892888",
        "8155a586f5842b0f",
        "f3592f168ab4c6c7",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1"
      ],
      "date": 1711109910148
    },
    {
      "type": "remove",
      "id": "8155a586f5842b0f",
      "date": 1711109915678
    },
    {
      "type": "remove",
      "id": "dcdd9a3e9f99a2e4",
      "date": 1711109948513
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting name=\"World\"></simple-greeting>\n</body>\n    `;\n}\n\n"
      },
      "date": 1711110021961
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting name=\"World\"></simple-greeting>\n</body>`;\n}\n"
      },
      "date": 1711110104866
    },
    {
      "type": "edit",
      "id": "c3c6d042bfb74537",
      "item": {
        "type": "paragraph",
        "id": "c3c6d042bfb74537",
        "text": "These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies ‚Äì any modern browser should be able to import and run the bundles from within a <script type=\"module\"> like this:"
      },
      "date": 1711110150928
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting></simple-greeting>\n</body>`;\n}\n"
      },
      "date": 1711110558627
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] [https://lit.dev/playground/ playground]"
      },
      "date": 1711110701444
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is a simple library for building fast, lightweight web components. [page]"
      },
      "date": 1711110750011
    },
    {
      "type": "add",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] [https://lit.dev/playground/ playground]"
      },
      "after": "14c5ad0d7fcae5dc",
      "date": 1711110750879
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is a simple library for building fast, lightweight web components. [https://lit.dev/docs/ page]"
      },
      "date": 1711110768260
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page]"
      },
      "date": 1711110802905
    },
    {
      "type": "edit",
      "id": "c3c6d042bfb74537",
      "item": {
        "type": "paragraph",
        "id": "c3c6d042bfb74537",
        "text": "These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies. We import and run the bundles from within a code snippet like this:"
      },
      "date": 1711111006946
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] "
      },
      "date": 1711111062473
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://lit.dev/playground/ playground]"
      },
      "date": 1711111064270
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page]"
      },
      "date": 1711111067930
    },
    {
      "type": "remove",
      "id": "c3c6d042bfb74537",
      "date": 1711111083998
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies. We import and run the bundles from within a code snippet like this:"
      },
      "date": 1711111085218
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async function is how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page."
      },
      "date": 1711111170651
    },
    {
      "item": {
        "type": "factory",
        "id": "38d827d7d6973967"
      },
      "id": "38d827d7d6973967",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1711112042342
    },
    {
      "type": "edit",
      "id": "38d827d7d6973967",
      "item": {
        "type": "paragraph",
        "id": "38d827d7d6973967",
        "text": "with simple-greeting"
      },
      "date": 1711112053669
    },
    {
      "id": "38d827d7d6973967",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "00f76ff348892888",
        "f3592f168ab4c6c7",
        "38d827d7d6973967",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1"
      ],
      "date": 1711112062746
    },
    {
      "id": "38d827d7d6973967",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "00f76ff348892888",
        "38d827d7d6973967",
        "f3592f168ab4c6c7",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1"
      ],
      "date": 1711112065172
    },
    {
      "type": "edit",
      "id": "00f76ff348892888",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# **Application Frame**"
      },
      "date": 1711112085775
    },
    {
      "type": "remove",
      "id": "38d827d7d6973967",
      "date": 1711112093225
    },
    {
      "type": "edit",
      "id": "00f76ff348892888",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# **Application Frame** with simple-greeting"
      },
      "date": 1711112095651
    },
    {
      "type": "edit",
      "id": "00f76ff348892888",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame with simple-greeting"
      },
      "date": 1711112108588
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "date": 1711112803656
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711113224673
    },
    {
      "item": {
        "type": "factory",
        "id": "f8516bcc4559a5a3"
      },
      "id": "f8516bcc4559a5a3",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1711113237748
    },
    {
      "type": "remove",
      "id": "f8516bcc4559a5a3",
      "date": 1711113300590
    },
    {
      "item": {
        "type": "factory",
        "id": "bf0671e99be1c803"
      },
      "id": "bf0671e99be1c803",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1711113378728
    },
    {
      "type": "edit",
      "id": "bf0671e99be1c803",
      "item": {
        "type": "video",
        "id": "bf0671e99be1c803",
        "text": "YOUTUBE uzFakwHaSmw"
      },
      "date": 1711113389641
    },
    {
      "type": "edit",
      "id": "bf0671e99be1c803",
      "item": {
        "type": "video",
        "id": "bf0671e99be1c803",
        "text": "YOUTUBE uzFakwHaSmw\nNov 2, 2022"
      },
      "date": 1711113460683
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1711113535206
    },
    {
      "type": "edit",
      "id": "bf0671e99be1c803",
      "item": {
        "type": "video",
        "id": "bf0671e99be1c803",
        "text": "START 188\nYOUTUBE uzFakwHaSmw\nNov 2, 2022"
      },
      "date": 1711113679842
    },
    {
      "type": "edit",
      "id": "bf0671e99be1c803",
      "item": {
        "type": "video",
        "id": "bf0671e99be1c803",
        "text": "START 189\nYOUTUBE uzFakwHaSmw\nNov 2, 2022"
      },
      "date": 1711113696188
    },
    {
      "item": {
        "type": "factory",
        "id": "5c538bf0f3168949"
      },
      "id": "5c538bf0f3168949",
      "type": "add",
      "after": "bf0671e99be1c803",
      "date": 1711113888506
    },
    {
      "type": "edit",
      "id": "5c538bf0f3168949",
      "item": {
        "type": "paragraph",
        "id": "5c538bf0f3168949",
        "text": "Template literals (Template strings)"
      },
      "date": 1711113890968
    },
    {
      "type": "edit",
      "id": "5c538bf0f3168949",
      "item": {
        "type": "paragraph",
        "id": "5c538bf0f3168949",
        "text": "Template literals (Template strings) [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
      },
      "date": 1711113902615
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711114775334
    },
    {
      "type": "edit",
      "id": "f3592f168ab4c6c7",
      "item": {
        "type": "frame",
        "id": "f3592f168ab4c6c7",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1711114897088
    },
    {
      "type": "edit",
      "id": "00f76ff348892888",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame (esm) with simple-greeting"
      },
      "date": 1711114905593
    },
    {
      "type": "edit",
      "id": "87b0811ac2b889e1",
      "item": {
        "type": "frame",
        "id": "87b0811ac2b889e1",
        "text": "//wiki.ralfbarkow.ch/assets/pages/lit/index.html\nHEIGHT 75"
      },
      "date": 1711114955744
    },
    {
      "item": {
        "type": "factory",
        "id": "2c8e8775b5a68371"
      },
      "id": "2c8e8775b5a68371",
      "type": "add",
      "after": "5c538bf0f3168949",
      "date": 1711115422463
    },
    {
      "id": "86b33666cf5f5ba4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "86b33666cf5f5ba4",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
        "alias": "5eb6b67568179aa3"
      },
      "after": "5eb6b67568179aa3",
      "attribution": {
        "page": "ESM Snippet Template"
      },
      "date": 1711117471054
    },
    {
      "type": "edit",
      "id": "86b33666cf5f5ba4",
      "item": {
        "type": "code",
        "id": "86b33666cf5f5ba4",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
        "alias": "5eb6b67568179aa3"
      },
      "date": 1711117478041
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page."
      },
      "date": 1711117571312
    },
    {
      "type": "add",
      "id": "f50d8bf303fcced5",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function"
      },
      "after": "313907154e6512d9",
      "date": 1711117583752
    },
    {
      "id": "f50d8bf303fcced5",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "f3592f168ab4c6c7",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1",
        "bf0671e99be1c803",
        "5c538bf0f3168949",
        "2c8e8775b5a68371"
      ],
      "date": 1711117586617
    },
    {
      "type": "edit",
      "id": "f50d8bf303fcced5",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and a bind() function, which in this case only  sends a resize message to the parent window, providing information about the height of the current document body. "
      },
      "date": 1711117700936
    },
    {
      "type": "edit",
      "id": "f50d8bf303fcced5",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and a bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "date": 1711117739025
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
      },
      "date": 1711117765556
    },
    {
      "type": "edit",
      "id": "5c538bf0f3168949",
      "item": {
        "type": "paragraph",
        "id": "5c538bf0f3168949",
        "text": "[[Template Literals]] (Template strings) [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
      },
      "date": 1711117823786
    },
    {
      "id": "2c8e8775b5a68371",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "f3592f168ab4c6c7",
        "2c8e8775b5a68371",
        "89900c753ebd32f3",
        "a739cb2c87179c5a",
        "87b0811ac2b889e1",
        "bf0671e99be1c803",
        "5c538bf0f3168949"
      ],
      "date": 1711117884258
    },
    {
      "type": "edit",
      "id": "2c8e8775b5a68371",
      "item": {
        "type": "markdown",
        "id": "2c8e8775b5a68371",
        "text": "# Assets"
      },
      "date": 1711117899197
    },
    {
      "type": "remove",
      "id": "a739cb2c87179c5a",
      "date": 1711117909326
    },
    {
      "item": {
        "type": "factory",
        "id": "b6852c7474725efa"
      },
      "id": "b6852c7474725efa",
      "type": "add",
      "after": "5c538bf0f3168949",
      "date": 1711117914334
    },
    {
      "type": "edit",
      "id": "b6852c7474725efa",
      "item": {
        "type": "paragraph",
        "id": "b6852c7474725efa",
        "text": "# index.html"
      },
      "date": 1711117917229
    },
    {
      "id": "b6852c7474725efa",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "f3592f168ab4c6c7",
        "2c8e8775b5a68371",
        "89900c753ebd32f3",
        "b6852c7474725efa",
        "87b0811ac2b889e1",
        "bf0671e99be1c803",
        "5c538bf0f3168949"
      ],
      "date": 1711117932495
    },
    {
      "type": "edit",
      "id": "b6852c7474725efa",
      "item": {
        "type": "paragraph",
        "id": "b6852c7474725efa",
        "text": "index.html"
      },
      "date": 1711117940737
    },
    {
      "type": "edit",
      "id": "b6852c7474725efa",
      "item": {
        "type": "paragraph",
        "id": "b6852c7474725efa",
        "text": "index.html from the [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "date": 1711117991450
    },
    {
      "type": "edit",
      "id": "b6852c7474725efa",
      "item": {
        "type": "paragraph",
        "id": "b6852c7474725efa",
        "text": "index.html from the [https://lit.dev/playground/ playground]"
      },
      "date": 1711118011742
    },
    {
      "type": "edit",
      "id": "87b0811ac2b889e1",
      "item": {
        "type": "frame",
        "id": "87b0811ac2b889e1",
        "text": "//wiki.ralfbarkow.ch/assets/pages/lit/index.html"
      },
      "date": 1711118032052
    },
    {
      "type": "edit",
      "id": "5c538bf0f3168949",
      "item": {
        "type": "paragraph",
        "id": "5c538bf0f3168949",
        "text": "See also [[Template Literals]] (Template strings) [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
      },
      "date": 1711118051094
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024. Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "date": 1711119453936
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024. [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog] Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "date": 1711119604783
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024. [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog] Golo Roden, who believes this is possible, also discusses Lit in his video in German."
      },
      "date": 1711119658868
    },
    {
      "type": "add",
      "id": "90b49b799dcdcb8e",
      "item": {
        "type": "paragraph",
        "id": "90b49b799dcdcb8e",
        "text": "Lit is a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "after": "14c5ad0d7fcae5dc",
      "date": 1711119663335
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024. [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog] [[Golo Roden]], who believes this is possible, also discusses Lit in his video in German."
      },
      "date": 1711119690737
    },
    {
      "id": "b9bbd8ddc8027964",
      "type": "add",
      "item": {
        "type": "video",
        "id": "b9bbd8ddc8027964",
        "text": "YOUTUBE cttpgBg6pDQ\nVanilla Web: Der Frontend-Trend f√ºr 2024?"
      },
      "after": "14c5ad0d7fcae5dc",
      "attribution": {
        "page": "2024-03-22"
      },
      "date": 1711119804167
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024. [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog] [[Golo Roden]], who believes this is possible, also talks about Lit - in German."
      },
      "date": 1711119908961
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "It is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies. We import and run the bundles from within a code snippet like this:"
      },
      "date": 1711119939740
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]], in German."
      },
      "date": 1711122901896
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]], in the following German video."
      },
      "date": 1711122915319
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]] in the following German video."
      },
      "date": 1711122929404
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]] in the following German video. He also mentions Lit."
      },
      "date": 1711122969889
    },
    {
      "id": "90b49b799dcdcb8e",
      "type": "move",
      "order": [
        "14c5ad0d7fcae5dc",
        "90b49b799dcdcb8e",
        "b9bbd8ddc8027964",
        "fb021e744ffa7c94",
        "3e1f6235b6ca0e8e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "f3592f168ab4c6c7",
        "2c8e8775b5a68371",
        "89900c753ebd32f3",
        "b6852c7474725efa",
        "87b0811ac2b889e1",
        "bf0671e99be1c803",
        "5c538bf0f3168949"
      ],
      "date": 1711122996603
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies. We import and run the bundles from within a code snippet like this:"
      },
      "date": 1711123008803
    },
    {
      "type": "remove",
      "id": "90b49b799dcdcb8e",
      "date": 1711123019680
    },
    {
      "type": "edit",
      "id": "14c5ad0d7fcae5dc",
      "item": {
        "type": "paragraph",
        "id": "14c5ad0d7fcae5dc",
        "text": "[[Vanilla Web]] could be the front-end trend of 2024 [https://www.heise.de/blog/Vanilla-Web-Der-Frontend-Trend-2024-9611002.html blog], says [[Golo Roden]] in the following German video. He also mentions Lit, a simple library for building fast, lightweight [[Web Components]]. [https://lit.dev/docs/ page] [https://github.com/lit/lit github] [https://lit.dev/playground/ playground]"
      },
      "date": 1711123022924
    },
    {
      "type": "edit",
      "id": "fb021e744ffa7c94",
      "item": {
        "type": "paragraph",
        "id": "fb021e744ffa7c94",
        "text": "Lit is also available as pre-built, single-file bundles. [https://lit.dev/docs/getting-started/#use-bundles page] These are provided for more flexibility around development workflows: for example, if you would prefer to download a single file rather than use npm and build tools. The bundles are standard JavaScript modules with no dependencies."
      },
      "date": 1711123128368
    },
    {
      "type": "add",
      "id": "5b4dbb173122266f",
      "item": {
        "type": "paragraph",
        "id": "5b4dbb173122266f",
        "text": "We import and run the bundles from within a code snippet like this:"
      },
      "after": "fb021e744ffa7c94",
      "date": 1711123129628
    },
    {
      "type": "edit",
      "id": "f50d8bf303fcced5",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "date": 1711123216586
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1711151540451
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting/>\n</body>`;\n}\n"
      },
      "date": 1711154111736
    }
  ]
}