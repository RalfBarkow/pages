{
  "title": "2022-06-02",
  "story": [
    {
      "type": "reference",
      "id": "7a05d4e209216814",
      "site": "wiki.ralfbarkow.ch",
      "slug": "form-element-modern-web",
      "title": "Form Element Modern Web",
      "text": "The ‘Form’ Element Created the Modern Web. Was It a Big Mistake? [https://www.wired.com/story/form-element-modern-web-mistake/ post]"
    },
    {
      "type": "markdown",
      "id": "269f62fa01a3fc0c",
      "text": "> To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog. -- [[Paul Ford]]\n"
    },
    {
      "type": "markdown",
      "id": "68209e6ccebd7b7b",
      "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display … -- [[Vanessa Freudenberg]], [https://youtu.be/Nu2Siz_rjTg?t=497 youtube]\n"
    },
    {
      "type": "markdown",
      "id": "60b545d2db47834c",
      "text": "⇒ [[Kontrollillusion]]\n"
    },
    {
      "type": "graphviz",
      "id": "09f971365e20546c",
      "text": "DOT FROM lambda-browsing",
      "dot": "strict digraph {rankdir=LR\n\n\n\n\n\n\nnode [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n\"2022-06-02\"\nnode [style=filled fillcolor=lightblue]\n\"2022-06-02\" -> \"Croquet\nMultiblaster\"\n\"2022-06-02\" -> \"JS\nSnippet\nTemplate\"\nnode [style=filled fillcolor=white]\n\"Croquet\nMultiblaster\"\n\"Croquet\nMultiblaster\" -> \"Multiblaster\"\nnode [style=filled fillcolor=white]\n\"JS\nSnippet\nTemplate\"\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"2022-06-02\" -> \"Multiblaster\"\n\"2022-06-02\" -> \"Russia’s\nMobilization\nSystem\"\n\"2022-06-02\" -> \"Croquet\nMultiblaster\"\n\"2022-06-02\" -> \"JS\nSnippet\nTemplate\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Multiblaster\"\n\"Multiblaster\" -> \"Croquet\nMultiblaster\"\n\"Multiblaster\" -> \"UNPKG\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Russia’s\nMobilization\nSystem\"\n\"Russia’s\nMobilization\nSystem\" -> \"Margarete\nKlein\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Croquet\nMultiblaster\"\n\"Croquet\nMultiblaster\" -> \"Croquet\"\n\"Croquet\nMultiblaster\" -> \"UNPKG\"\n\"Croquet\nMultiblaster\" -> \"Multiblaster\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"JS\nSnippet\nTemplate\"\n\"JS\nSnippet\nTemplate\" -> \"Static\nImport\nSnippet\"\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"2022-06-02\"}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.44.0 (20200518.1210)\n -->\n<!-- Pages: 1 -->\n<svg width=\"575pt\" height=\"322pt\"\n viewBox=\"0.00 0.00 575.48 322.30\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 318.3)\">\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-318.3 571.48,-318.3 571.48,4 -4,4\"/>\n<!-- 2022&#45;06&#45;02 -->\n<g id=\"node1\" class=\"node\">\n<title>2022&#45;06&#45;02</title>\n<ellipse fill=\"lightyellow\" stroke=\"black\" stroke-width=\"3\" cx=\"60.41\" cy=\"-191.3\" rx=\"60.33\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"60.41\" y=\"-187.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">2022&#45;06&#45;02</text>\n</g>\n<!-- Croquet\nMultiblaster -->\n<g id=\"node2\" class=\"node\">\n<title>Croquet\nMultiblaster</title>\n<ellipse fill=\"lightblue\" stroke=\"black\" stroke-width=\"3\" cx=\"220.39\" cy=\"-239.3\" rx=\"61.82\" ry=\"29.33\"/>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-243.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Croquet</text>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-226.7\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Multiblaster</text>\n</g>\n<!-- 2022&#45;06&#45;02&#45;&gt;Croquet\nMultiblaster -->\n<g id=\"edge1\" class=\"edge\">\n<title>2022&#45;06&#45;02&#45;&gt;Croquet\nMultiblaster</title>\n<path fill=\"none\" stroke=\"black\" d=\"M103.33,-204.03C120.07,-209.12 139.68,-215.08 157.96,-220.63\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"157.08,-224.02 167.67,-223.58 159.12,-217.32 157.08,-224.02\"/>\n</g>\n<!-- JS\nSnippet\nTemplate -->\n<g id=\"node3\" class=\"node\">\n<title>JS\nSnippet\nTemplate</title>\n<ellipse fill=\"lightblue\" stroke=\"black\" stroke-width=\"3\" cx=\"220.39\" cy=\"-147.3\" rx=\"52.63\" ry=\"41.09\"/>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-159.9\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">JS</text>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-143.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Snippet</text>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-126.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Template</text>\n</g>\n<!-- 2022&#45;06&#45;02&#45;&gt;JS\nSnippet\nTemplate -->\n<g id=\"edge2\" class=\"edge\">\n<title>2022&#45;06&#45;02&#45;&gt;JS\nSnippet\nTemplate</title>\n<path fill=\"none\" stroke=\"black\" d=\"M105.42,-179.04C122.6,-174.25 142.54,-168.7 160.9,-163.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"161.93,-166.93 170.62,-160.88 160.05,-160.19 161.93,-166.93\"/>\n</g>\n<!-- Multiblaster -->\n<g id=\"node4\" class=\"node\">\n<title>Multiblaster</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" cx=\"380.34\" cy=\"-296.3\" rx=\"60.28\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-292.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Multiblaster</text>\n</g>\n<!-- 2022&#45;06&#45;02&#45;&gt;Multiblaster -->\n<g id=\"edge4\" class=\"edge\">\n<title>2022&#45;06&#45;02&#45;&gt;Multiblaster</title>\n<path fill=\"none\" stroke=\"black\" d=\"M75,-209.14C91.74,-229.62 122.25,-262.29 156.82,-277.3 205.76,-298.53 266.38,-302.43 311.98,-301.49\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"312.16,-304.99 322.05,-301.2 311.96,-297.99 312.16,-304.99\"/>\n</g>\n<!-- Russia’s\nMobilization\nSystem -->\n<g id=\"node5\" class=\"node\">\n<title>Russia’s\nMobilization\nSystem</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" cx=\"220.39\" cy=\"-41.3\" rx=\"63.62\" ry=\"41.09\"/>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-53.9\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Russia’s</text>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-37.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Mobilization</text>\n<text text-anchor=\"middle\" x=\"220.39\" y=\"-20.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">System</text>\n</g>\n<!-- 2022&#45;06&#45;02&#45;&gt;Russia’s\nMobilization\nSystem -->\n<g id=\"edge5\" class=\"edge\">\n<title>2022&#45;06&#45;02&#45;&gt;Russia’s\nMobilization\nSystem</title>\n<path fill=\"none\" stroke=\"black\" d=\"M78.41,-174.06C97.31,-155.02 128.86,-123.56 156.82,-97.3 162.43,-92.03 168.38,-86.56 174.29,-81.19\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"176.66,-83.77 181.74,-74.47 171.97,-78.57 176.66,-83.77\"/>\n</g>\n<!-- Croquet\nMultiblaster&#45;&gt;Multiblaster -->\n<g id=\"edge3\" class=\"edge\">\n<title>Croquet\nMultiblaster&#45;&gt;Multiblaster</title>\n<path fill=\"none\" stroke=\"black\" d=\"M276.19,-252.61C297.53,-259.79 321.48,-268.62 340.93,-276.55\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"339.79,-279.86 350.36,-280.47 342.48,-273.4 339.79,-279.86\"/>\n</g>\n<!-- UNPKG -->\n<g id=\"node6\" class=\"node\">\n<title>UNPKG</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"522.11\" cy=\"-273.3\" rx=\"45.24\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"522.11\" y=\"-269.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">UNPKG</text>\n</g>\n<!-- Croquet\nMultiblaster&#45;&gt;UNPKG -->\n<g id=\"edge10\" class=\"edge\">\n<title>Croquet\nMultiblaster&#45;&gt;UNPKG</title>\n<path fill=\"none\" stroke=\"black\" d=\"M280.96,-246.05C335.54,-252.24 415.58,-261.32 468.02,-267.27\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"467.79,-270.77 478.12,-268.42 468.58,-263.81 467.79,-270.77\"/>\n</g>\n<!-- Croquet -->\n<g id=\"node8\" class=\"node\">\n<title>Croquet</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"380.34\" cy=\"-204.3\" rx=\"45.26\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-200.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Croquet</text>\n</g>\n<!-- Croquet\nMultiblaster&#45;&gt;Croquet -->\n<g id=\"edge9\" class=\"edge\">\n<title>Croquet\nMultiblaster&#45;&gt;Croquet</title>\n<path fill=\"none\" stroke=\"black\" d=\"M277.08,-226.96C294.29,-223.14 313.12,-218.97 329.88,-215.25\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"331.01,-218.59 340.02,-213.01 329.5,-211.76 331.01,-218.59\"/>\n</g>\n<!-- Static\nImport\nSnippet -->\n<g id=\"node9\" class=\"node\">\n<title>Static\nImport\nSnippet</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"380.34\" cy=\"-127.3\" rx=\"44.75\" ry=\"41.09\"/>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-139.9\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Static</text>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-123.1\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Import</text>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-106.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Snippet</text>\n</g>\n<!-- JS\nSnippet\nTemplate&#45;&gt;Static\nImport\nSnippet -->\n<g id=\"edge11\" class=\"edge\">\n<title>JS\nSnippet\nTemplate&#45;&gt;Static\nImport\nSnippet</title>\n<path fill=\"none\" stroke=\"black\" d=\"M272.67,-140.8C289.53,-138.67 308.32,-136.29 325.37,-134.13\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"326.25,-137.55 335.73,-132.82 325.37,-130.6 326.25,-137.55\"/>\n</g>\n<!-- Multiblaster&#45;&gt;Croquet\nMultiblaster -->\n<g id=\"edge6\" class=\"edge\">\n<title>Multiblaster&#45;&gt;Croquet\nMultiblaster</title>\n<path fill=\"none\" stroke=\"black\" d=\"M331.88,-285.42C313.33,-279.35 292.02,-271.7 273.08,-264.33\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"274.3,-261.05 263.72,-260.63 271.73,-267.56 274.3,-261.05\"/>\n</g>\n<!-- Multiblaster&#45;&gt;UNPKG -->\n<g id=\"edge7\" class=\"edge\">\n<title>Multiblaster&#45;&gt;UNPKG</title>\n<path fill=\"none\" stroke=\"black\" d=\"M433.78,-287.67C445.52,-285.73 457.97,-283.69 469.67,-281.76\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"470.43,-285.18 479.72,-280.1 469.29,-278.28 470.43,-285.18\"/>\n</g>\n<!-- Margarete\nKlein -->\n<g id=\"node7\" class=\"node\">\n<title>Margarete\nKlein</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"380.34\" cy=\"-38.3\" rx=\"56.33\" ry=\"29.33\"/>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-42.5\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Margarete</text>\n<text text-anchor=\"middle\" x=\"380.34\" y=\"-25.7\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Klein</text>\n</g>\n<!-- Russia’s\nMobilization\nSystem&#45;&gt;Margarete\nKlein -->\n<g id=\"edge8\" class=\"edge\">\n<title>Russia’s\nMobilization\nSystem&#45;&gt;Margarete\nKlein</title>\n<path fill=\"none\" stroke=\"black\" d=\"M284.27,-40.1C293.97,-39.92 304.02,-39.73 313.78,-39.54\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"313.89,-43.04 323.83,-39.35 313.76,-36.04 313.89,-43.04\"/>\n</g>\n</g>\n</svg>\n"
    },
    {
      "type": "reference",
      "id": "bec86d19dce94838",
      "site": "wiki.ralfbarkow.ch",
      "slug": "zettelkasten-project",
      "title": "Zettelkasten Project",
      "text": "Fix logic to keep the collapsed nodes in the Note Sequences #434 [https://github.com/Zettelkasten-Team/Zettelkasten/pull/434#event-6724303805 github]"
    },
    {
      "type": "paragraph",
      "id": "bca07b1e3b45a73f",
      "text": "Ward — [https://discord.com/channels/694586717247635488/966071402526543924/981713895662166086 discord]:\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites."
    },
    {
      "type": "paragraph",
      "id": "4dc0c2f2c7db3f6c",
      "text": "codefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\n"
    },
    {
      "type": "paragraph",
      "id": "da07f2402229cd63",
      "text": "[[Multiblaster]] btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
    },
    {
      "type": "pagefold",
      "id": "7e9cb8ebec9e6008",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "2821f6f56347b3c1",
      "text": "Michael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters. [https://twitter.com/KofmanMichael/status/1532343503270731776?s=20&t=rqrbboRbyxIrze2QJ6S8uw tweet], [https://warontherocks.com/2022/06/not-built-for-purpose-the-russian-militarys-ill-fated-force-design/ post]  ⇒ [[Russia’s Mobilization System]]"
    },
    {
      "type": "pagefold",
      "id": "f7fab3cb6b1471ba",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "31de8e3ccfde7fa2",
      "text": "⇒ [[Simulation Time]]"
    },
    {
      "type": "markdown",
      "id": "ef3e3eecd292b747",
      "text": "⇒ [[Croquet Multiblaster]] could use the *wiki ESM javascript snippet runner* ⇒ [[JS Snippet Template]]"
    },
    {
      "type": "reference",
      "id": "36dd678e98c86ac8",
      "site": "wiki.dbbs.co",
      "slug": "js-snippet-template",
      "title": "JS Snippet Template",
      "text": "Explain what this does."
    },
    {
      "type": "reference",
      "id": "9c8d2e3a8aa21b55",
      "site": "wiki.dbbs.co",
      "slug": "enrich-any-svg",
      "title": "Enrich Any SVG",
      "text": "Here we offer a tool which makes a best effort to enrich any SVG diagram with hyperlinks that conform to wiki's internal link conventions."
    },
    {
      "type": "pagefold",
      "id": "8fc31fcfb9173268",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "04bfb2692d07aa60",
      "text": "Below this pagefold we reveal the code which does the [[Multiblaster]]."
    },
    {
      "type": "paragraph",
      "id": "a4da252e0c397ed8",
      "text": "Uncaught TypeError: class heritage […] is not an object or null [https://stackoverflow.com/questions/64061906/uncaught-typeerror-class-heritage-this-myclass-is-not-an-object-or-null stackoverflow]"
    },
    {
      "type": "markdown",
      "id": "34d918cf23434eea",
      "text": "> `this` is only set when you're calling a method of the object, it's not available when you're initializing an object."
    },
    {
      "type": "frame",
      "id": "65d97c995c7adf15",
      "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/esm.html\nHEIGHT 55"
    },
    {
      "type": "paragraph",
      "id": "dfddd2d989966f0c",
      "text": "Import [[Frame Integration Promises]] and setup DOM helpers."
    },
    {
      "type": "code",
      "id": "5cbd82e529085e9a",
      "text": "import * as frame from \"https://wiki.ralfbarkow.ch/assets/v1/frame.js\"\nconst $ = (s, el=document) => el.querySelector(s)\nconst $$ = (s, el=document) => \n  Array.from(el.querySelectorAll(s))"
    },
    {
      "type": "paragraph",
      "id": "8ca86f0eb2f8116a",
      "text": "Import Croquet 1.0.5 (see [https://croquet.io/docs/croquet/ api.croquet.io])."
    },
    {
      "type": "code",
      "id": "6adf805f6ccc38d8",
      "text": "import * as Croquet from \"https://wiki.ralfbarkow.ch/assets/pages/croquet-multiblaster/croquet.js\""
    },
    {
      "type": "paragraph",
      "id": "e17dd4501c934e30",
      "text": "Model code is executed inside of synced VM"
    },
    {
      "type": "code",
      "id": "112c0d130e7edf0c",
      "text": "class Game extends Croquet.Model {\n    init() {\n        this.ships = new Map();\n        this.asteroids = new Set();\n        this.blasts = new Set();\n        this.subscribe(this.sessionId, \"view-join\", this.viewJoined);\n        this.subscribe(this.sessionId, \"view-exit\", this.viewExited);\n        Asteroid.create({});\n        this.mainLoop();\n    }\n\n    viewJoined(viewId) {\n        const ship = Ship.create({ viewId });\n        this.ships.set(viewId, ship);\n    }\n\n    viewExited(viewId) {\n        const ship = this.ships.get(viewId);\n        this.ships.delete(viewId);\n        ship.destroy();\n    }\n\n    checkCollisions() {\n        for (const asteroid of this.asteroids) {\n            if (asteroid.wasHit) continue;\n            const minx = asteroid.x - asteroid.size;\n            const maxx = asteroid.x + asteroid.size;\n            const miny = asteroid.y - asteroid.size;\n            const maxy = asteroid.y + asteroid.size;\n            for (const blast of this.blasts) {\n                if (blast.x > minx && blast.x < maxx && blast.y > miny && blast.y < maxy) {\n                    asteroid.hitBy(blast);\n                    break;\n                }\n            }\n            for (const ship of this.ships.values()) {\n                if (!ship.wasHit && ship.x + 10 > minx && ship.x - 10 < maxx && ship.y + 10 > miny && ship.y - 10 < maxy) {\n                    if (!ship.score && Math.abs(ship.x-500) + Math.abs(ship.y-500) < 40) continue; // no hit if just spawned\n                    ship.hitBy(asteroid);\n                    break;\n                }\n            }\n        }\n    }\n\n    mainLoop() {\n        for (const ship of this.ships.values()) ship.move();\n        for (const asteroid of this.asteroids) asteroid.move();\n        for (const blast of this.blasts) blast.move();\n        this.checkCollisions();\n        this.future(50).mainLoop(); // move & check every 50 ms\n    }\n}\nGame.register(\"Game\");"
    },
    {
      "type": "paragraph",
      "id": "daccb48780f07535",
      "text": "\"class heritage Croquet.Model is not an object or null\""
    },
    {
      "type": "code",
      "id": "9cadae1ef0664bbd",
      "text": "class Ship extends Croquet.Model {\n    init({ viewId }) {\n        this.viewId = viewId;\n        this.reset();\n        this.subscribe(viewId, \"left-thruster\", this.leftThruster);\n        this.subscribe(viewId, \"right-thruster\", this.rightThruster);\n        this.subscribe(viewId, \"forward-thruster\", this.forwardThruster);\n        this.subscribe(viewId, \"fire-blaster\", this.fireBlaster);\n    }\n\n    reset() {\n        this.x = 500;\n        this.y = 500;\n        this.a = -Math.PI / 2;\n        this.dx = 0;\n        this.dy = 0;\n        this.left = false;\n        this.right = false;\n        this.forward = false;\n        this.score = 0;\n        this.wasHit = 0;\n    }\n\n    leftThruster(active) {\n        if (this.wasHit) return;\n        this.left = active;\n    }\n\n    rightThruster(active) {\n        if (this.wasHit) return;\n        this.right = active;\n    }\n\n    forwardThruster(active) {\n        if (this.wasHit) return;\n        this.forward = active;\n    }\n\n    fireBlaster() {\n        if (this.wasHit) return;\n        const dx = Math.cos(this.a) * 20;\n        const dy = Math.sin(this.a) * 20;\n        const x = this.x + dx;\n        const y = this.y + dy;\n        Blast.create({ x, y, dx, dy, ship: this });\n    }\n\n    move() {\n        if (this.wasHit) {\n            // keep drifting as debris for 3 seconds\n            if (++this.wasHit > 60) this.reset();\n        } else {\n            // process thruster controls\n            if (this.forward) {\n                this.dx += Math.cos(this.a) * 0.5;\n                this.dy += Math.sin(this.a) * 0.5;\n                if (this.dx > 10) this.dx = 10;\n                if (this.dx < -10) this.dx = -10;\n                if (this.dy > 10) this.dy = 10;\n                if (this.dy < -10) this.dy = -10;\n            }\n            if (this.left) this.a -= 0.2;\n            if (this.right) this.a += 0.2;\n            if (this.a < 0) this.a += Math.PI * 2;\n            if (this.a > Math.PI * 2) this.a -= Math.PI * 2;\n        }\n        // drift through space\n        this.x += this.dx;\n        this.y += this.dy;\n        if (this.x < 0) this.x += 1000;\n        if (this.x > 1000) this.x -= 1000;\n        if (this.y < 0) this.y += 1000;\n        if (this.y > 1000) this.y -= 1000;\n    }\n\n    hitBy(asteroid) {\n        // turn both into debris\n        this.wasHit = 1;\n        asteroid.wasHit = 1;\n    }\n}\nShip.register(\"Ship\");"
    },
    {
      "type": "code",
      "id": "fbecce33791e6c63",
      "text": "class Asteroid extends Croquet.Model {\n    init({ size, x, y, a, dx, dy, da }) {\n        if (size) {\n            // init second asteroid after spliting\n            this.size = size;\n            this.x = x;\n            this.y = y;\n            this.a = a;\n            this.dx = dx;\n            this.dy = dy;\n            this.da = da;\n        } else {\n            // init new large asteroid\n            this.size = 40;\n            this.x = Math.random() * 400 - 200;\n            this.y = Math.random() * 400 - 200;\n            this.a = Math.random() * Math.PI * 2;\n            const speed = Math.random() * 4 + 1;\n            this.dx = Math.cos(this.a) * speed;\n            this.dy = Math.sin(this.a) * speed;\n            this.da = (0.02 + Math.random() * 0.03) * (Math.random() < 0.5 ? 1 : -1);\n            this.wasHit = 0;\n            this.move();\n        }\n        this.wellKnownModel(\"modelRoot\").asteroids.add(this);\n    }\n\n    move() {\n        if (this.wasHit) {\n            // keep drifting as debris, larger pieces drift longer\n            if (++this.wasHit > this.size) this.destroy();\n        }\n        this.x += this.dx;\n        this.y += this.dy;\n        if (this.x < 0) this.x += 1000;\n        if (this.x > 1000) this.x -= 1000;\n        if (this.y < 0) this.y += 1000;\n        if (this.y > 1000) this.y -= 1000;\n        if (!this.wasHit) {\n            this.a += this.da;\n            if (this.a < 0) this.a += Math.PI * 2;\n            if (this.a > Math.PI * 2) this.a -= Math.PI * 2;\n        }\n    }\n\n    hitBy(blast) {\n        if (!blast.ship.wasHit) blast.ship.score++;\n        if (this.size > 20) {\n            // split into two smaller faster asteroids\n            this.size *= 0.7;\n            this.da *= 1.5;\n            this.dx = -blast.dy * 10 / this.size;\n            this.dy = blast.dx * 10 / this.size;\n            Asteroid.create({ size: this.size, x: this.x, y: this.y, a: this.a, dx: -this.dx, dy: -this.dy, da: this.da });\n        } else {\n            // turn into debris\n            this.wasHit = 1;\n        }\n        blast.destroy();\n    }\n\n    destroy() {\n        const asteroids = this.wellKnownModel(\"modelRoot\").asteroids;\n        asteroids.delete(this);\n        super.destroy();\n        // keep at least 5 asteroids around\n        if (asteroids.size < 5) Asteroid.create({});\n    }\n}\nAsteroid.register(\"Asteroid\");"
    },
    {
      "type": "code",
      "id": "4e0ce1bf660b5d27",
      "text": "class Blast extends Croquet.Model {\n    init({x, y, dx, dy, ship}) {\n        this.ship = ship;\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n        this.t = 0;\n        this.wellKnownModel(\"modelRoot\").blasts.add(this);\n    }\n\n    move() {\n        // move for 1.5 second before disappearing\n        if (++this.t < 30) {\n            this.x += this.dx;\n            this.y += this.dy;\n            if (this.x < 0) this.x += 1000;\n            if (this.x > 1000) this.x -= 1000;\n            if (this.y < 0) this.y += 1000;\n            if (this.y > 1000) this.y -= 1000;\n        } else {\n            this.destroy();\n        }\n    }\n\n    destroy() {\n        this.wellKnownModel(\"modelRoot\").blasts.delete(this);\n        super.destroy();\n    }\n}\nBlast.register(\"Blast\");"
    },
    {
      "type": "paragraph",
      "id": "a3cb9a570becaf09",
      "text": " Code below is executed outside of synced VM"
    },
    {
      "type": "code",
      "id": "7e582141f0f3b176",
      "text": "class Display extends Croquet.View {\n    constructor(model) {\n        super(model);\n        this.model = model;\n\n        const joystick = document.getElementById(\"joystick\");\n        const knob = document.getElementById(\"knob\");\n\n        document.onkeydown = (e) => {\n            joystick.style.display = \"none\";\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", true); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", true); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", true); break;\n                case \" \":                              this.publish(this.viewId, \"fire-blaster\"); break;\n            }\n        };\n        document.onkeyup = (e) => {\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", false); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", false); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", false); break;\n            }\n        };\n\n        let x = 0, y = 0, id = 0, right = false, left = false, forward = false;\n        document.onpointerdown = (e) => {\n            if (!id) {\n                id = e.pointerId;\n                x = e.clientX;\n                y = e.clientY;\n                joystick.style.left = `${x - 60}px`;\n                joystick.style.top = `${y - 60}px`;\n                joystick.style.display = \"block\";\n            }\n        };\n        document.onpointermove = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                let dx = e.clientX - x;\n                let dy = e.clientY - y;\n                if (dx > 30) {\n                    dx = 30;\n                    if (!right) { this.publish(this.viewId, \"right-thruster\", true); right = true; }\n                } else if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (dx < -30) {\n                    dx = -30;\n                    if (!left) { this.publish(this.viewId, \"left-thruster\", true); left = true; }\n                } else if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false; }\n                if (dy < -30) {\n                    dy = -30;\n                    if (!forward) { this.publish(this.viewId, \"forward-thruster\", true); forward = true; }\n                } else if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                if (dy > 0) dy = 0;\n                knob.style.left = `${20 + dx}px`;\n                knob.style.top = `${20 + dy}px`;\n            }\n        }\n        document.onpointerup = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                id = 0;\n                if (!right && !left && !forward) {\n                    this.publish(this.viewId, \"fire-blaster\");\n                }\n                if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false;  }\n                if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                knob.style.left = `20px`;\n                knob.style.top = `20px`;\n            } else {\n                this.publish(this.viewId, \"fire-blaster\");\n            }\n        }\n        document.onpointercancel = document.onpointerup;\n        document.oncontextmenu = e => { e.preventDefault();  this.publish(this.viewId, \"fire-blaster\"); }\n        document.ontouchend = e => e.preventDefault(); // prevent double-tap zoom on iOS\n        codelink.ontouchend = () => codelink.click(); // but allow clicking link\n\n        this.smoothing = new WeakMap(); // position cache for interpolated rendering\n\n        this.context = canvas.getContext(\"2d\");\n    }\n\n    // update is called once per render frame\n    // read from shared model, interpolate, render\n    update() {\n        this.context.clearRect(0, 0, 1000, 1000);\n        this.context.font = '40px sans-serif';\n        this.context.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n        this.context.lineWidth = 3;\n        this.context.strokeStyle = \"white\";\n        for (const ship of this.model.ships.values()) {\n            const { x, y, a } = this.smoothPosAndAngle(ship);\n            this.context.save();\n            this.context.translate(x, y);\n            if (ship.score) this.context.fillText(ship.score, 30, 15);\n            this.context.rotate(a);\n            if (ship.wasHit) this.drawShipDebris(ship.wasHit);\n            else this.drawShip(ship.forward, ship.viewId === this.viewId);\n            this.context.restore();\n        }\n        for (const asteroid of this.model.asteroids) {\n            const { x, y, a } = this.smoothPosAndAngle(asteroid);\n            this.context.save();\n            this.context.translate(x, y);\n            this.context.rotate(a);\n            if (asteroid.wasHit) this.drawAsteroidDebris(asteroid.size, asteroid.wasHit * 2);\n            else this.drawAsteroid(asteroid.size);\n            this.context.restore();\n        }\n        for (const blast of this.model.blasts) {\n            const { x, y } = this.smoothPos(blast);\n            this.context.save();\n            this.context.translate(x, y);\n            this.drawBlast();\n            this.context.restore();\n        }\n    }\n\n    smoothPos(obj) {\n        if (!this.smoothing.has(obj)) {\n            this.smoothing.set(obj, { x: obj.x, y: obj.y, a: obj.a });\n        }\n        const smoothed = this.smoothing.get(obj);\n        const dx = obj.x - smoothed.x;\n        const dy = obj.y - smoothed.y;\n        if (Math.abs(dx) < 50) smoothed.x += dx * 0.3; else smoothed.x = obj.x;\n        if (Math.abs(dy) < 50) smoothed.y += dy * 0.3; else smoothed.y = obj.y;\n        return smoothed;\n    }\n\n    smoothPosAndAngle(obj) {\n        const smoothed = this.smoothPos(obj);\n        const da = obj.a - smoothed.a;\n        if (Math.abs(da) < 1) smoothed.a += da * 0.3; else smoothed.a = obj.a;\n        return smoothed;\n    }\n\n    drawShip(thrust, highlight) {\n        this.context.beginPath();\n        this.context.moveTo(+20,   0);\n        this.context.lineTo(-20, +10);\n        this.context.lineTo(-20, -10);\n        this.context.closePath();\n        this.context.stroke();\n        if (highlight) {\n            this.context.fill();\n        }\n        if (thrust) {\n            this.context.beginPath();\n            this.context.moveTo(-20, +5);\n            this.context.lineTo(-30,  0);\n            this.context.lineTo(-20, -5);\n            this.context.stroke();\n        }\n    }\n\n    drawShipDebris(t) {\n        this.context.beginPath();\n        this.context.moveTo(+20 + t,   0 + t);\n        this.context.lineTo(-20 + t, +10 + t);\n        this.context.moveTo(-20 - t * 1.4, +10);\n        this.context.lineTo(-20 - t * 1.4, -10);\n        this.context.moveTo(-20 + t, -10 - t);\n        this.context.lineTo(+20 + t,   0 - t);\n        this.context.stroke();\n    }\n\n    drawAsteroid(size) {\n        this.context.beginPath();\n        this.context.moveTo(+size,  0);\n        this.context.lineTo( 0, +size);\n        this.context.lineTo(-size,  0);\n        this.context.lineTo( 0, -size);\n        this.context.closePath();\n        this.context.stroke();\n    }\n\n    drawAsteroidDebris(size, t) {\n        this.context.beginPath();\n        this.context.moveTo(+size + t,  0 + t);\n        this.context.lineTo( 0 + t, +size + t);\n        this.context.moveTo(-size - t,  0 - t);\n        this.context.lineTo( 0 - t, -size - t);\n        this.context.moveTo(-size - t,  0 + t);\n        this.context.lineTo( 0 - t, +size + t);\n        this.context.moveTo(+size + t,  0 - t);\n        this.context.lineTo( 0 + t, -size - t);\n        this.context.stroke();\n    }\n\n    drawBlast() {\n        this.context.beginPath();\n        this.context.ellipse(0, 0, 2, 2, 0, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.stroke();\n    }\n}\n"
    },
    {
      "type": "code",
      "id": "a62aacec1b03e4b9",
      "text": "Croquet.App.makeWidgetDock(); // shows QR code"
    },
    {
      "type": "code",
      "id": "d145e3f7ef9766f6",
      "text": "Croquet.Session.join({\n    apiKey: '1_i65fcn11n7lhrb5n890hs3dhj11hfzfej57pvlrx', // get your own from croquet.io/keys\n    appId: 'io.croquet.multiblaster',\n    name: Croquet.App.autoSession(),\n    password: Croquet.App.autoPassword(),\n    model: Game,\n    view: Display,\n});"
    },
    {
      "type": "markdown",
      "id": "b44625b99105baeb",
      "text": "Error \"name\": \"InvalidCharacterError\",\n  \"message\": \"String contains an invalid character\"\n} **fixed**."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-06-02",
        "story": []
      },
      "date": 1654149336742
    },
    {
      "item": {
        "type": "factory",
        "id": "7a05d4e209216814"
      },
      "id": "7a05d4e209216814",
      "type": "add",
      "date": 1654149349529
    },
    {
      "type": "edit",
      "id": "7a05d4e209216814",
      "item": {
        "type": "reference",
        "id": "7a05d4e209216814",
        "site": "wiki.ralfbarkow.ch",
        "slug": "form-element-modern-web",
        "title": "Form Element Modern Web",
        "text": "The ‘Form’ Element Created the Modern Web. Was It a Big Mistake? [https://www.wired.com/story/form-element-modern-web-mistake/ post]"
      },
      "date": 1654149351303
    },
    {
      "item": {
        "type": "factory",
        "id": "09f971365e20546c"
      },
      "id": "09f971365e20546c",
      "type": "add",
      "after": "7a05d4e209216814",
      "date": 1654149359719
    },
    {
      "type": "edit",
      "id": "09f971365e20546c",
      "item": {
        "type": "graphviz",
        "id": "09f971365e20546c",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1654149363317
    },
    {
      "item": {
        "type": "factory",
        "id": "bec86d19dce94838"
      },
      "id": "bec86d19dce94838",
      "type": "add",
      "after": "09f971365e20546c",
      "date": 1654149977442
    },
    {
      "type": "edit",
      "id": "bec86d19dce94838",
      "item": {
        "type": "reference",
        "id": "bec86d19dce94838",
        "site": "wiki.ralfbarkow.ch",
        "slug": "zettelkasten-project",
        "title": "Zettelkasten Project",
        "text": "Fix logic to keep the collapsed nodes in the Note Sequences #434 [https://github.com/Zettelkasten-Team/Zettelkasten/pull/434#event-6724303805 github]"
      },
      "date": 1654149979538
    },
    {
      "item": {
        "type": "factory",
        "id": "fefd53d4294acfeb"
      },
      "id": "fefd53d4294acfeb",
      "type": "add",
      "after": "bec86d19dce94838",
      "date": 1654172382848
    },
    {
      "type": "edit",
      "id": "fefd53d4294acfeb",
      "item": {
        "type": "pagefold",
        "id": "fefd53d4294acfeb",
        "text": "Ward — heute um 02:20 Uhr\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites.\ncodefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\nmultiblaster btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "date": 1654172389649
    },
    {
      "type": "remove",
      "id": "fefd53d4294acfeb",
      "date": 1654172394363
    },
    {
      "item": {
        "type": "factory",
        "id": "bca07b1e3b45a73f"
      },
      "id": "bca07b1e3b45a73f",
      "type": "add",
      "after": "bec86d19dce94838",
      "date": 1654172395594
    },
    {
      "type": "edit",
      "id": "bca07b1e3b45a73f",
      "item": {
        "type": "paragraph",
        "id": "bca07b1e3b45a73f",
        "text": "Ward — heute um 02:20 Uhr\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites.\ncodefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\nmultiblaster btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "date": 1654172398033
    },
    {
      "type": "edit",
      "id": "bca07b1e3b45a73f",
      "item": {
        "type": "paragraph",
        "id": "bca07b1e3b45a73f",
        "text": "Ward — [https://discord.com/channels/694586717247635488/966071402526543924/981713895662166086 discord]:\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites.\ncodefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\nmultiblaster btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "date": 1654172420747
    },
    {
      "type": "edit",
      "id": "bca07b1e3b45a73f",
      "item": {
        "type": "paragraph",
        "id": "bca07b1e3b45a73f",
        "text": "Ward — [https://discord.com/channels/694586717247635488/966071402526543924/981713895662166086 discord]:\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites.\ncodefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\n[[multiblaster]] btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "date": 1654172456598
    },
    {
      "type": "edit",
      "id": "bca07b1e3b45a73f",
      "item": {
        "type": "paragraph",
        "id": "bca07b1e3b45a73f",
        "text": "Ward — [https://discord.com/channels/694586717247635488/966071402526543924/981713895662166086 discord]:\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites.\ncodefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\n[[Multiblaster]] btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "date": 1654172607922
    },
    {
      "item": {
        "type": "factory",
        "id": "7e9cb8ebec9e6008"
      },
      "id": "7e9cb8ebec9e6008",
      "type": "add",
      "after": "bca07b1e3b45a73f",
      "date": 1654174280905
    },
    {
      "type": "edit",
      "id": "7e9cb8ebec9e6008",
      "item": {
        "type": "pagefold",
        "id": "7e9cb8ebec9e6008",
        "text": "~"
      },
      "date": 1654174284604
    },
    {
      "item": {
        "type": "factory",
        "id": "2821f6f56347b3c1"
      },
      "id": "2821f6f56347b3c1",
      "type": "add",
      "after": "7e9cb8ebec9e6008",
      "date": 1654174286298
    },
    {
      "type": "edit",
      "id": "2821f6f56347b3c1",
      "item": {
        "type": "paragraph",
        "id": "2821f6f56347b3c1",
        "text": "\n\nMichael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters."
      },
      "date": 1654174288028
    },
    {
      "type": "edit",
      "id": "2821f6f56347b3c1",
      "item": {
        "type": "paragraph",
        "id": "2821f6f56347b3c1",
        "text": "\nMichael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters. [https://twitter.com/KofmanMichael/status/1532343503270731776?s=20&t=rqrbboRbyxIrze2QJ6S8uw tweet]"
      },
      "date": 1654174305706
    },
    {
      "type": "edit",
      "id": "2821f6f56347b3c1",
      "item": {
        "type": "paragraph",
        "id": "2821f6f56347b3c1",
        "text": "Michael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters. [https://twitter.com/KofmanMichael/status/1532343503270731776?s=20&t=rqrbboRbyxIrze2QJ6S8uw tweet], [https://warontherocks.com/2022/06/not-built-for-purpose-the-russian-militarys-ill-fated-force-design/ post]"
      },
      "date": 1654174319560
    },
    {
      "type": "edit",
      "id": "2821f6f56347b3c1",
      "item": {
        "type": "paragraph",
        "id": "2821f6f56347b3c1",
        "text": "Michael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters. [https://twitter.com/KofmanMichael/status/1532343503270731776?s=20&t=rqrbboRbyxIrze2QJ6S8uw tweet], [https://warontherocks.com/2022/06/not-built-for-purpose-the-russian-militarys-ill-fated-force-design/ post]  ⇒ [["
      },
      "date": 1654174410427
    },
    {
      "type": "edit",
      "id": "2821f6f56347b3c1",
      "item": {
        "type": "paragraph",
        "id": "2821f6f56347b3c1",
        "text": "Michael Kofman\n@KofmanMichael\nRob \n@RALee85\n and I collaborate to do a deep dive into Russian force design choices & their implications. This article extensively explores some of what we have learned about the Russian military in this war, and why it matters. [https://twitter.com/KofmanMichael/status/1532343503270731776?s=20&t=rqrbboRbyxIrze2QJ6S8uw tweet], [https://warontherocks.com/2022/06/not-built-for-purpose-the-russian-militarys-ill-fated-force-design/ post]  ⇒ [[Russia’s Mobilization System]]"
      },
      "date": 1654174421314
    },
    {
      "item": {
        "type": "factory",
        "id": "f7fab3cb6b1471ba"
      },
      "id": "f7fab3cb6b1471ba",
      "type": "add",
      "after": "2821f6f56347b3c1",
      "date": 1654176579327
    },
    {
      "type": "edit",
      "id": "f7fab3cb6b1471ba",
      "item": {
        "type": "pagefold",
        "id": "f7fab3cb6b1471ba",
        "text": "~"
      },
      "date": 1654176582826
    },
    {
      "item": {
        "type": "factory",
        "id": "ef3e3eecd292b747"
      },
      "id": "ef3e3eecd292b747",
      "type": "add",
      "after": "f7fab3cb6b1471ba",
      "date": 1654176603838
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "paragraph",
        "id": "ef3e3eecd292b747",
        "text": "[[Croquet Multiblaster]]"
      },
      "date": 1654176611520
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "paragraph",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]]"
      },
      "date": 1654178994698
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "paragraph",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]] could use "
      },
      "date": 1654179085105
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "paragraph",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]] could use the *wiki ESM javascript snippet runner*"
      },
      "date": 1654179130431
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "markdown",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]] could use the *wiki ESM javascript snippet runner*"
      },
      "date": 1654179132029
    },
    {
      "item": {
        "type": "factory",
        "id": "65d97c995c7adf15"
      },
      "id": "65d97c995c7adf15",
      "type": "add",
      "after": "ef3e3eecd292b747",
      "date": 1654179158464
    },
    {
      "type": "edit",
      "id": "65d97c995c7adf15",
      "item": {
        "type": "frame",
        "id": "65d97c995c7adf15",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/esm.html\nHEIGHT 55"
      },
      "date": 1654179170686
    },
    {
      "id": "5cbd82e529085e9a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5cbd82e529085e9a",
        "text": "import * as frame from \"https://wiki.dbbs.co/assets/v1/frame.js\"\nconst $ = (s, el=document) => el.querySelector(s)\nconst $$ = (s, el=document) => \n  Array.from(el.querySelectorAll(s))"
      },
      "after": "ef3e3eecd292b747",
      "date": 1654179180872
    },
    {
      "type": "edit",
      "id": "5cbd82e529085e9a",
      "item": {
        "type": "code",
        "id": "5cbd82e529085e9a",
        "text": "import * as frame from \"https://wiki.ralfbarkow.ch/assets/v1/frame.js\"\nconst $ = (s, el=document) => el.querySelector(s)\nconst $$ = (s, el=document) => \n  Array.from(el.querySelectorAll(s))"
      },
      "date": 1654179191438
    },
    {
      "item": {
        "type": "factory",
        "id": "6adf805f6ccc38d8"
      },
      "id": "6adf805f6ccc38d8",
      "type": "add",
      "after": "65d97c995c7adf15",
      "date": 1654179211057
    },
    {
      "type": "edit",
      "id": "6adf805f6ccc38d8",
      "item": {
        "type": "code",
        "id": "6adf805f6ccc38d8",
        "text": "import * as Croquet from \"@croquet/croquet\""
      },
      "date": 1654179213384
    },
    {
      "id": "65d97c995c7adf15",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179226558
    },
    {
      "item": {
        "type": "factory",
        "id": "36dd678e98c86ac8"
      },
      "id": "36dd678e98c86ac8",
      "type": "add",
      "after": "6adf805f6ccc38d8",
      "date": 1654179339160
    },
    {
      "id": "36dd678e98c86ac8",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179341433
    },
    {
      "type": "edit",
      "id": "36dd678e98c86ac8",
      "item": {
        "type": "reference",
        "id": "36dd678e98c86ac8",
        "site": "wiki.dbbs.co",
        "slug": "js-snippet-template",
        "title": "JS Snippet Template",
        "text": "Explain what this does."
      },
      "date": 1654179343590
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "markdown",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]] could use the *wiki ESM javascript snippet runner* ⇒ [[JS Snippet Template]]"
      },
      "date": 1654179372146
    },
    {
      "type": "edit",
      "id": "ef3e3eecd292b747",
      "item": {
        "type": "markdown",
        "id": "ef3e3eecd292b747",
        "text": "⇒ [[Croquet Multiblaster]] could use the *wiki ESM javascript snippet runner* ⇒ [[JS Snippet Template]]"
      },
      "date": 1654179379527,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "type": "fork",
      "date": 1654179387289
    },
    {
      "item": {
        "type": "factory",
        "id": "9c8d2e3a8aa21b55"
      },
      "id": "9c8d2e3a8aa21b55",
      "type": "add",
      "after": "6adf805f6ccc38d8",
      "date": 1654179435258
    },
    {
      "type": "edit",
      "id": "9c8d2e3a8aa21b55",
      "item": {
        "type": "reference",
        "id": "9c8d2e3a8aa21b55",
        "site": "wiki.dbbs.co",
        "slug": "enrich-any-svg",
        "title": "Enrich Any SVG",
        "text": "Here we offer a tool which makes a best effort to enrich any SVG diagram with hyperlinks that conform to wiki's internal link conventions."
      },
      "date": 1654179438210
    },
    {
      "id": "9c8d2e3a8aa21b55",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179440546
    },
    {
      "item": {
        "type": "factory",
        "id": "8fc31fcfb9173268"
      },
      "id": "8fc31fcfb9173268",
      "type": "add",
      "after": "6adf805f6ccc38d8",
      "date": 1654179469179
    },
    {
      "type": "edit",
      "id": "8fc31fcfb9173268",
      "item": {
        "type": "pagefold",
        "id": "8fc31fcfb9173268",
        "text": "~"
      },
      "date": 1654179475214
    },
    {
      "id": "04bfb2692d07aa60",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "04bfb2692d07aa60",
        "text": "Below this pagefold we reveal the code which does the enriching. We believe this transparency may help other tinkerers to experiment with enrichment for specialized SVG structures. See [[Enrich Arrows SVG]]."
      },
      "after": "8fc31fcfb9173268",
      "date": 1654179488337
    },
    {
      "id": "8fc31fcfb9173268",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8",
        "04bfb2692d07aa60"
      ],
      "date": 1654179491698
    },
    {
      "id": "04bfb2692d07aa60",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "04bfb2692d07aa60",
        "8fc31fcfb9173268",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179494140
    },
    {
      "id": "8fc31fcfb9173268",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "65d97c995c7adf15",
        "5cbd82e529085e9a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179496288
    },
    {
      "type": "edit",
      "id": "04bfb2692d07aa60",
      "item": {
        "type": "paragraph",
        "id": "04bfb2692d07aa60",
        "text": "Below this pagefold we reveal the code which does the [[Multiblaster]]."
      },
      "date": 1654179516694
    },
    {
      "id": "dfddd2d989966f0c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dfddd2d989966f0c",
        "text": "Import [[Frame Integration Promises]] and setup DOM helpers."
      },
      "after": "65d97c995c7adf15",
      "date": 1654179528071
    },
    {
      "type": "add",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5"
      },
      "after": "dfddd2d989966f0c",
      "date": 1654179563985
    },
    {
      "id": "8ca86f0eb2f8116a",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "65d97c995c7adf15",
        "dfddd2d989966f0c",
        "5cbd82e529085e9a",
        "8ca86f0eb2f8116a",
        "6adf805f6ccc38d8"
      ],
      "date": 1654179566039
    },
    {
      "type": "edit",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5 \" Error when resolving the module specifier"
      },
      "date": 1654179599991
    },
    {
      "type": "edit",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5 ⇒  Error when resolving the module specifier (in the Frame above)"
      },
      "date": 1654179613254
    },
    {
      "type": "edit",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5 "
      },
      "date": 1654179635605
    },
    {
      "type": "add",
      "id": "348b95fd4a207cf9",
      "item": {
        "type": "paragraph",
        "id": "348b95fd4a207cf9",
        "text": "⇒  Error when resolving the module specifier (in the Frame above)"
      },
      "after": "8ca86f0eb2f8116a",
      "date": 1654179638020
    },
    {
      "id": "348b95fd4a207cf9",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "65d97c995c7adf15",
        "dfddd2d989966f0c",
        "5cbd82e529085e9a",
        "8ca86f0eb2f8116a",
        "6adf805f6ccc38d8",
        "348b95fd4a207cf9"
      ],
      "date": 1654179640503
    },
    {
      "type": "edit",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5."
      },
      "date": 1654179670820
    },
    {
      "type": "edit",
      "id": "8ca86f0eb2f8116a",
      "item": {
        "type": "paragraph",
        "id": "8ca86f0eb2f8116a",
        "text": "Import Croquet 1.0.5 (see [https://croquet.io/docs/croquet/ api.croquet.io])."
      },
      "date": 1654179714356
    },
    {
      "item": {
        "type": "factory",
        "id": "31de8e3ccfde7fa2"
      },
      "id": "31de8e3ccfde7fa2",
      "type": "add",
      "after": "348b95fd4a207cf9",
      "date": 1654180956560
    },
    {
      "type": "edit",
      "id": "31de8e3ccfde7fa2",
      "item": {
        "type": "paragraph",
        "id": "31de8e3ccfde7fa2",
        "text": "⇒ [[Simulation Time]]"
      },
      "date": 1654180965469
    },
    {
      "type": "edit",
      "id": "348b95fd4a207cf9",
      "item": {
        "type": "paragraph",
        "id": "348b95fd4a207cf9",
        "text": "⇒  **Error** when resolving the module specifier (in the Frame above)"
      },
      "date": 1654181016679
    },
    {
      "type": "edit",
      "id": "348b95fd4a207cf9",
      "item": {
        "type": "markdown",
        "id": "348b95fd4a207cf9",
        "text": "⇒  **Error** when resolving the module specifier (in the Frame above)"
      },
      "date": 1654181018453
    },
    {
      "type": "edit",
      "id": "6adf805f6ccc38d8",
      "item": {
        "type": "code",
        "id": "6adf805f6ccc38d8",
        "text": "import * as Croquet from \"/pages/croquet-multiblaster/croquet.js\""
      },
      "date": 1654181402116
    },
    {
      "type": "edit",
      "id": "6adf805f6ccc38d8",
      "item": {
        "type": "code",
        "id": "6adf805f6ccc38d8",
        "text": "import * as Croquet from \"https://wiki.ralfbarkow.ch/assets/pages/croquet-multiblaster/croquet.js\""
      },
      "date": 1654181412378
    },
    {
      "id": "31de8e3ccfde7fa2",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "31de8e3ccfde7fa2",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "65d97c995c7adf15",
        "dfddd2d989966f0c",
        "5cbd82e529085e9a",
        "8ca86f0eb2f8116a",
        "6adf805f6ccc38d8",
        "348b95fd4a207cf9"
      ],
      "date": 1654181493258
    },
    {
      "type": "remove",
      "id": "348b95fd4a207cf9",
      "date": 1654181503378
    },
    {
      "item": {
        "type": "factory",
        "id": "e17dd4501c934e30"
      },
      "id": "e17dd4501c934e30",
      "type": "add",
      "after": "6adf805f6ccc38d8",
      "date": 1654181529268
    },
    {
      "type": "edit",
      "id": "e17dd4501c934e30",
      "item": {
        "type": "paragraph",
        "id": "e17dd4501c934e30",
        "text": "Model code is executed inside of synced VM"
      },
      "date": 1654181539513
    },
    {
      "item": {
        "type": "factory",
        "id": "112c0d130e7edf0c"
      },
      "id": "112c0d130e7edf0c",
      "type": "add",
      "after": "e17dd4501c934e30",
      "date": 1654181582505
    },
    {
      "type": "edit",
      "id": "112c0d130e7edf0c",
      "item": {
        "type": "code",
        "id": "112c0d130e7edf0c",
        "text": "class Game extends Croquet.Model {\n    init() {\n        this.ships = new Map();\n        this.asteroids = new Set();\n        this.blasts = new Set();\n        this.subscribe(this.sessionId, \"view-join\", this.viewJoined);\n        this.subscribe(this.sessionId, \"view-exit\", this.viewExited);\n        Asteroid.create({});\n        this.mainLoop();\n    }\n\n    viewJoined(viewId) {\n        const ship = Ship.create({ viewId });\n        this.ships.set(viewId, ship);\n    }\n\n    viewExited(viewId) {\n        const ship = this.ships.get(viewId);\n        this.ships.delete(viewId);\n        ship.destroy();\n    }\n\n    checkCollisions() {\n        for (const asteroid of this.asteroids) {\n            if (asteroid.wasHit) continue;\n            const minx = asteroid.x - asteroid.size;\n            const maxx = asteroid.x + asteroid.size;\n            const miny = asteroid.y - asteroid.size;\n            const maxy = asteroid.y + asteroid.size;\n            for (const blast of this.blasts) {\n                if (blast.x > minx && blast.x < maxx && blast.y > miny && blast.y < maxy) {\n                    asteroid.hitBy(blast);\n                    break;\n                }\n            }\n            for (const ship of this.ships.values()) {\n                if (!ship.wasHit && ship.x + 10 > minx && ship.x - 10 < maxx && ship.y + 10 > miny && ship.y - 10 < maxy) {\n                    if (!ship.score && Math.abs(ship.x-500) + Math.abs(ship.y-500) < 40) continue; // no hit if just spawned\n                    ship.hitBy(asteroid);\n                    break;\n                }\n            }\n        }\n    }\n\n    mainLoop() {\n        for (const ship of this.ships.values()) ship.move();\n        for (const asteroid of this.asteroids) asteroid.move();\n        for (const blast of this.blasts) blast.move();\n        this.checkCollisions();\n        this.future(50).mainLoop(); // move & check every 50 ms\n    }\n}\nGame.register(\"Game\");"
      },
      "date": 1654181585699
    },
    {
      "item": {
        "type": "factory",
        "id": "daccb48780f07535"
      },
      "id": "daccb48780f07535",
      "type": "add",
      "after": "112c0d130e7edf0c",
      "date": 1654181620995
    },
    {
      "type": "edit",
      "id": "daccb48780f07535",
      "item": {
        "type": "paragraph",
        "id": "daccb48780f07535",
        "text": "\"class heritage Croquet.Model is not an object or null\""
      },
      "date": 1654181625929
    },
    {
      "item": {
        "type": "factory",
        "id": "9cadae1ef0664bbd"
      },
      "id": "9cadae1ef0664bbd",
      "type": "add",
      "after": "daccb48780f07535",
      "date": 1654181627725
    },
    {
      "type": "edit",
      "id": "9cadae1ef0664bbd",
      "item": {
        "type": "code",
        "id": "9cadae1ef0664bbd",
        "text": "class Ship extends Croquet.Model {\n    init({ viewId }) {\n        this.viewId = viewId;\n        this.reset();\n        this.subscribe(viewId, \"left-thruster\", this.leftThruster);\n        this.subscribe(viewId, \"right-thruster\", this.rightThruster);\n        this.subscribe(viewId, \"forward-thruster\", this.forwardThruster);\n        this.subscribe(viewId, \"fire-blaster\", this.fireBlaster);\n    }\n\n    reset() {\n        this.x = 500;\n        this.y = 500;\n        this.a = -Math.PI / 2;\n        this.dx = 0;\n        this.dy = 0;\n        this.left = false;\n        this.right = false;\n        this.forward = false;\n        this.score = 0;\n        this.wasHit = 0;\n    }\n\n    leftThruster(active) {\n        if (this.wasHit) return;\n        this.left = active;\n    }\n\n    rightThruster(active) {\n        if (this.wasHit) return;\n        this.right = active;\n    }\n\n    forwardThruster(active) {\n        if (this.wasHit) return;\n        this.forward = active;\n    }\n\n    fireBlaster() {\n        if (this.wasHit) return;\n        const dx = Math.cos(this.a) * 20;\n        const dy = Math.sin(this.a) * 20;\n        const x = this.x + dx;\n        const y = this.y + dy;\n        Blast.create({ x, y, dx, dy, ship: this });\n    }\n\n    move() {\n        if (this.wasHit) {\n            // keep drifting as debris for 3 seconds\n            if (++this.wasHit > 60) this.reset();\n        } else {\n            // process thruster controls\n            if (this.forward) {\n                this.dx += Math.cos(this.a) * 0.5;\n                this.dy += Math.sin(this.a) * 0.5;\n                if (this.dx > 10) this.dx = 10;\n                if (this.dx < -10) this.dx = -10;\n                if (this.dy > 10) this.dy = 10;\n                if (this.dy < -10) this.dy = -10;\n            }\n            if (this.left) this.a -= 0.2;\n            if (this.right) this.a += 0.2;\n            if (this.a < 0) this.a += Math.PI * 2;\n            if (this.a > Math.PI * 2) this.a -= Math.PI * 2;\n        }\n        // drift through space\n        this.x += this.dx;\n        this.y += this.dy;\n        if (this.x < 0) this.x += 1000;\n        if (this.x > 1000) this.x -= 1000;\n        if (this.y < 0) this.y += 1000;\n        if (this.y > 1000) this.y -= 1000;\n    }\n\n    hitBy(asteroid) {\n        // turn both into debris\n        this.wasHit = 1;\n        asteroid.wasHit = 1;\n    }\n}\nShip.register(\"Ship\");"
      },
      "date": 1654181640975
    },
    {
      "item": {
        "type": "factory",
        "id": "84dc0d901d42b15f"
      },
      "id": "84dc0d901d42b15f",
      "type": "add",
      "after": "9cadae1ef0664bbd",
      "date": 1654181666506
    },
    {
      "type": "remove",
      "id": "84dc0d901d42b15f",
      "date": 1654181669380
    },
    {
      "item": {
        "type": "factory",
        "id": "fbecce33791e6c63"
      },
      "id": "fbecce33791e6c63",
      "type": "add",
      "after": "9cadae1ef0664bbd",
      "date": 1654181678174
    },
    {
      "type": "edit",
      "id": "fbecce33791e6c63",
      "item": {
        "type": "code",
        "id": "fbecce33791e6c63",
        "text": "class Asteroid extends Croquet.Model {\n    init({ size, x, y, a, dx, dy, da }) {\n        if (size) {\n            // init second asteroid after spliting\n            this.size = size;\n            this.x = x;\n            this.y = y;\n            this.a = a;\n            this.dx = dx;\n            this.dy = dy;\n            this.da = da;\n        } else {\n            // init new large asteroid\n            this.size = 40;\n            this.x = Math.random() * 400 - 200;\n            this.y = Math.random() * 400 - 200;\n            this.a = Math.random() * Math.PI * 2;\n            const speed = Math.random() * 4 + 1;\n            this.dx = Math.cos(this.a) * speed;\n            this.dy = Math.sin(this.a) * speed;\n            this.da = (0.02 + Math.random() * 0.03) * (Math.random() < 0.5 ? 1 : -1);\n            this.wasHit = 0;\n            this.move();\n        }\n        this.wellKnownModel(\"modelRoot\").asteroids.add(this);\n    }\n\n    move() {\n        if (this.wasHit) {\n            // keep drifting as debris, larger pieces drift longer\n            if (++this.wasHit > this.size) this.destroy();\n        }\n        this.x += this.dx;\n        this.y += this.dy;\n        if (this.x < 0) this.x += 1000;\n        if (this.x > 1000) this.x -= 1000;\n        if (this.y < 0) this.y += 1000;\n        if (this.y > 1000) this.y -= 1000;\n        if (!this.wasHit) {\n            this.a += this.da;\n            if (this.a < 0) this.a += Math.PI * 2;\n            if (this.a > Math.PI * 2) this.a -= Math.PI * 2;\n        }\n    }\n\n    hitBy(blast) {\n        if (!blast.ship.wasHit) blast.ship.score++;\n        if (this.size > 20) {\n            // split into two smaller faster asteroids\n            this.size *= 0.7;\n            this.da *= 1.5;\n            this.dx = -blast.dy * 10 / this.size;\n            this.dy = blast.dx * 10 / this.size;\n            Asteroid.create({ size: this.size, x: this.x, y: this.y, a: this.a, dx: -this.dx, dy: -this.dy, da: this.da });\n        } else {\n            // turn into debris\n            this.wasHit = 1;\n        }\n        blast.destroy();\n    }\n\n    destroy() {\n        const asteroids = this.wellKnownModel(\"modelRoot\").asteroids;\n        asteroids.delete(this);\n        super.destroy();\n        // keep at least 5 asteroids around\n        if (asteroids.size < 5) Asteroid.create({});\n    }\n}\nAsteroid.register(\"Asteroid\");"
      },
      "date": 1654181680883
    },
    {
      "item": {
        "type": "factory",
        "id": "4e0ce1bf660b5d27"
      },
      "id": "4e0ce1bf660b5d27",
      "type": "add",
      "after": "fbecce33791e6c63",
      "date": 1654181695832
    },
    {
      "type": "edit",
      "id": "4e0ce1bf660b5d27",
      "item": {
        "type": "code",
        "id": "4e0ce1bf660b5d27",
        "text": "class Blast extends Croquet.Model {\n    init({x, y, dx, dy, ship}) {\n        this.ship = ship;\n        this.x = x;\n        this.y = y;\n        this.dx = dx;\n        this.dy = dy;\n        this.t = 0;\n        this.wellKnownModel(\"modelRoot\").blasts.add(this);\n    }\n\n    move() {\n        // move for 1.5 second before disappearing\n        if (++this.t < 30) {\n            this.x += this.dx;\n            this.y += this.dy;\n            if (this.x < 0) this.x += 1000;\n            if (this.x > 1000) this.x -= 1000;\n            if (this.y < 0) this.y += 1000;\n            if (this.y > 1000) this.y -= 1000;\n        } else {\n            this.destroy();\n        }\n    }\n\n    destroy() {\n        this.wellKnownModel(\"modelRoot\").blasts.delete(this);\n        super.destroy();\n    }\n}\nBlast.register(\"Blast\");"
      },
      "date": 1654181708244
    },
    {
      "item": {
        "type": "factory",
        "id": "a3cb9a570becaf09"
      },
      "id": "a3cb9a570becaf09",
      "type": "add",
      "after": "4e0ce1bf660b5d27",
      "date": 1654181727451
    },
    {
      "type": "edit",
      "id": "a3cb9a570becaf09",
      "item": {
        "type": "paragraph",
        "id": "a3cb9a570becaf09",
        "text": " Code below is executed outside of synced VM"
      },
      "date": 1654181729478
    },
    {
      "item": {
        "type": "factory",
        "id": "7e582141f0f3b176"
      },
      "id": "7e582141f0f3b176",
      "type": "add",
      "after": "a3cb9a570becaf09",
      "date": 1654181733028
    },
    {
      "type": "edit",
      "id": "7e582141f0f3b176",
      "item": {
        "type": "code",
        "id": "7e582141f0f3b176",
        "text": "class Display extends Croquet.View {\n    constructor(model) {\n        super(model);\n        this.model = model;\n\n        const joystick = document.getElementById(\"joystick\");\n        const knob = document.getElementById(\"knob\");\n\n        document.onkeydown = (e) => {\n            joystick.style.display = \"none\";\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", true); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", true); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", true); break;\n                case \" \":                              this.publish(this.viewId, \"fire-blaster\"); break;\n            }\n        };\n        document.onkeyup = (e) => {\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", false); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", false); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", false); break;\n            }\n        };\n\n        let x = 0, y = 0, id = 0, right = false, left = false, forward = false;\n        document.onpointerdown = (e) => {\n            if (!id) {\n                id = e.pointerId;\n                x = e.clientX;\n                y = e.clientY;\n                joystick.style.left = `${x - 60}px`;\n                joystick.style.top = `${y - 60}px`;\n                joystick.style.display = \"block\";\n            }\n        };\n        document.onpointermove = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                let dx = e.clientX - x;\n                let dy = e.clientY - y;\n                if (dx > 30) {\n                    dx = 30;\n                    if (!right) { this.publish(this.viewId, \"right-thruster\", true); right = true; }\n                } else if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (dx < -30) {\n                    dx = -30;\n                    if (!left) { this.publish(this.viewId, \"left-thruster\", true); left = true; }\n                } else if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false; }\n                if (dy < -30) {\n                    dy = -30;\n                    if (!forward) { this.publish(this.viewId, \"forward-thruster\", true); forward = true; }\n                } else if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                if (dy > 0) dy = 0;\n                knob.style.left = `${20 + dx}px`;\n                knob.style.top = `${20 + dy}px`;\n            }\n        }\n        document.onpointerup = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                id = 0;\n                if (!right && !left && !forward) {\n                    this.publish(this.viewId, \"fire-blaster\");\n                }\n                if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false;  }\n                if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                knob.style.left = `20px`;\n                knob.style.top = `20px`;\n            } else {\n                this.publish(this.viewId, \"fire-blaster\");\n            }\n        }\n        document.onpointercancel = document.onpointerup;\n        document.oncontextmenu = e => { e.preventDefault();  this.publish(this.viewId, \"fire-blaster\"); }\n        document.ontouchend = e => e.preventDefault(); // prevent double-tap zoom on iOS\n        codelink.ontouchend = () => codelink.click(); // but allow clicking link ¯\\_(ツ)_/¯\n\n        this.smoothing = new WeakMap(); // position cache for interpolated rendering\n\n        this.context = canvas.getContext(\"2d\");\n    }\n\n    // update is called once per render frame\n    // read from shared model, interpolate, render\n    update() {\n        this.context.clearRect(0, 0, 1000, 1000);\n        this.context.font = '40px sans-serif';\n        this.context.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n        this.context.lineWidth = 3;\n        this.context.strokeStyle = \"white\";\n        for (const ship of this.model.ships.values()) {\n            const { x, y, a } = this.smoothPosAndAngle(ship);\n            this.context.save();\n            this.context.translate(x, y);\n            if (ship.score) this.context.fillText(ship.score, 30, 15);\n            this.context.rotate(a);\n            if (ship.wasHit) this.drawShipDebris(ship.wasHit);\n            else this.drawShip(ship.forward, ship.viewId === this.viewId);\n            this.context.restore();\n        }\n        for (const asteroid of this.model.asteroids) {\n            const { x, y, a } = this.smoothPosAndAngle(asteroid);\n            this.context.save();\n            this.context.translate(x, y);\n            this.context.rotate(a);\n            if (asteroid.wasHit) this.drawAsteroidDebris(asteroid.size, asteroid.wasHit * 2);\n            else this.drawAsteroid(asteroid.size);\n            this.context.restore();\n        }\n        for (const blast of this.model.blasts) {\n            const { x, y } = this.smoothPos(blast);\n            this.context.save();\n            this.context.translate(x, y);\n            this.drawBlast();\n            this.context.restore();\n        }\n    }\n\n    smoothPos(obj) {\n        if (!this.smoothing.has(obj)) {\n            this.smoothing.set(obj, { x: obj.x, y: obj.y, a: obj.a });\n        }\n        const smoothed = this.smoothing.get(obj);\n        const dx = obj.x - smoothed.x;\n        const dy = obj.y - smoothed.y;\n        if (Math.abs(dx) < 50) smoothed.x += dx * 0.3; else smoothed.x = obj.x;\n        if (Math.abs(dy) < 50) smoothed.y += dy * 0.3; else smoothed.y = obj.y;\n        return smoothed;\n    }\n\n    smoothPosAndAngle(obj) {\n        const smoothed = this.smoothPos(obj);\n        const da = obj.a - smoothed.a;\n        if (Math.abs(da) < 1) smoothed.a += da * 0.3; else smoothed.a = obj.a;\n        return smoothed;\n    }\n\n    drawShip(thrust, highlight) {\n        this.context.beginPath();\n        this.context.moveTo(+20,   0);\n        this.context.lineTo(-20, +10);\n        this.context.lineTo(-20, -10);\n        this.context.closePath();\n        this.context.stroke();\n        if (highlight) {\n            this.context.fill();\n        }\n        if (thrust) {\n            this.context.beginPath();\n            this.context.moveTo(-20, +5);\n            this.context.lineTo(-30,  0);\n            this.context.lineTo(-20, -5);\n            this.context.stroke();\n        }\n    }\n\n    drawShipDebris(t) {\n        this.context.beginPath();\n        this.context.moveTo(+20 + t,   0 + t);\n        this.context.lineTo(-20 + t, +10 + t);\n        this.context.moveTo(-20 - t * 1.4, +10);\n        this.context.lineTo(-20 - t * 1.4, -10);\n        this.context.moveTo(-20 + t, -10 - t);\n        this.context.lineTo(+20 + t,   0 - t);\n        this.context.stroke();\n    }\n\n    drawAsteroid(size) {\n        this.context.beginPath();\n        this.context.moveTo(+size,  0);\n        this.context.lineTo( 0, +size);\n        this.context.lineTo(-size,  0);\n        this.context.lineTo( 0, -size);\n        this.context.closePath();\n        this.context.stroke();\n    }\n\n    drawAsteroidDebris(size, t) {\n        this.context.beginPath();\n        this.context.moveTo(+size + t,  0 + t);\n        this.context.lineTo( 0 + t, +size + t);\n        this.context.moveTo(-size - t,  0 - t);\n        this.context.lineTo( 0 - t, -size - t);\n        this.context.moveTo(-size - t,  0 + t);\n        this.context.lineTo( 0 - t, +size + t);\n        this.context.moveTo(+size + t,  0 - t);\n        this.context.lineTo( 0 + t, -size - t);\n        this.context.stroke();\n    }\n\n    drawBlast() {\n        this.context.beginPath();\n        this.context.ellipse(0, 0, 2, 2, 0, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.stroke();\n    }\n}\n"
      },
      "date": 1654181772761
    },
    {
      "item": {
        "type": "factory",
        "id": "a62aacec1b03e4b9"
      },
      "id": "a62aacec1b03e4b9",
      "type": "add",
      "after": "7e582141f0f3b176",
      "date": 1654181782442
    },
    {
      "type": "edit",
      "id": "a62aacec1b03e4b9",
      "item": {
        "type": "code",
        "id": "a62aacec1b03e4b9",
        "text": "Croquet.App.makeWidgetDock(); // shows QR code"
      },
      "date": 1654181786263
    },
    {
      "item": {
        "type": "factory",
        "id": "d145e3f7ef9766f6"
      },
      "id": "d145e3f7ef9766f6",
      "type": "add",
      "after": "a62aacec1b03e4b9",
      "date": 1654181791261
    },
    {
      "type": "edit",
      "id": "d145e3f7ef9766f6",
      "item": {
        "type": "code",
        "id": "d145e3f7ef9766f6",
        "text": "Croquet.Session.join({\n    apiKey: '1_i65fcn11n7lhrb5n890hs3dhj11hfzfej57pvlrx', // get your own from croquet.io/keys\n    appId: 'io.croquet.multiblaster',\n    name: Croquet.App.autoSession(),\n    password: Croquet.App.autoPassword(),\n    model: Game,\n    view: Display,\n});"
      },
      "date": 1654181793307
    },
    {
      "item": {
        "type": "factory",
        "id": "b44625b99105baeb"
      },
      "id": "b44625b99105baeb",
      "type": "add",
      "after": "d145e3f7ef9766f6",
      "date": 1654182269244
    },
    {
      "type": "edit",
      "id": "b44625b99105baeb",
      "item": {
        "type": "paragraph",
        "id": "b44625b99105baeb",
        "text": "\"name\": \"InvalidCharacterError\",\n  \"message\": \"String contains an invalid character\"\n}"
      },
      "date": 1654182271573
    },
    {
      "type": "edit",
      "id": "bca07b1e3b45a73f",
      "item": {
        "type": "paragraph",
        "id": "bca07b1e3b45a73f",
        "text": "Ward — [https://discord.com/channels/694586717247635488/966071402526543924/981713895662166086 discord]:\nAside: most of our sites share with http. Some sites use https but they cannot even see sites sharing with http. We call these the large and small internets. I stay in the large internet because I interact with most sites."
      },
      "date": 1654183349850
    },
    {
      "type": "add",
      "id": "4dc0c2f2c7db3f6c",
      "item": {
        "type": "paragraph",
        "id": "4dc0c2f2c7db3f6c",
        "text": "codefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\n[[Multiblaster]] btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "after": "bca07b1e3b45a73f",
      "date": 1654183351940
    },
    {
      "type": "edit",
      "id": "4dc0c2f2c7db3f6c",
      "item": {
        "type": "paragraph",
        "id": "4dc0c2f2c7db3f6c",
        "text": "codefrau 🦩 — heute um 02:21 Uhr\nyeah we generally stay on the https side of things but make it possible for devs to use plain http\n"
      },
      "date": 1654183367484
    },
    {
      "type": "add",
      "id": "da07f2402229cd63",
      "item": {
        "type": "paragraph",
        "id": "da07f2402229cd63",
        "text": "[[Multiblaster]] btw is a nice self-contained single-page app. you can \"save as\" the html to your local disk, and double click to run it. and edit it too, of course."
      },
      "after": "4dc0c2f2c7db3f6c",
      "date": 1654183368640
    },
    {
      "id": "269f62fa01a3fc0c",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "269f62fa01a3fc0c",
        "text": "Here’s the thing: If it hadn’t been <form>, it would have been another element—maybe one with a more accurate name, like <money-vacuum> or <robot-food> or <privacy-destroyer>. The web was born to distribute information on computers, but the technology industry can never leave well enough alone. It needs to make everything into software. To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog.\n"
      },
      "after": "7a05d4e209216814",
      "date": 1654205398606
    },
    {
      "type": "edit",
      "id": "269f62fa01a3fc0c",
      "item": {
        "type": "markdown",
        "id": "269f62fa01a3fc0c",
        "text": "> To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog.\n"
      },
      "date": 1654205420218
    },
    {
      "type": "edit",
      "id": "269f62fa01a3fc0c",
      "item": {
        "type": "markdown",
        "id": "269f62fa01a3fc0c",
        "text": "> To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog. -- [[Paul Ford]]\n"
      },
      "date": 1654205591197
    },
    {
      "type": "edit",
      "id": "269f62fa01a3fc0c",
      "item": {
        "type": "markdown",
        "id": "269f62fa01a3fc0c",
        "text": "> To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog. -- [[Paul Ford]]\n\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display …"
      },
      "date": 1654205839790
    },
    {
      "type": "edit",
      "id": "269f62fa01a3fc0c",
      "item": {
        "type": "markdown",
        "id": "269f62fa01a3fc0c",
        "text": "> To the point that your internet browser is basically no longer a magical book of links but a virtual machine that can simulate a full-fledged computer. You can run browsers on the computers you run inside your browser on your computer [⇒[[The Browser OS]]]. If I wanted to build a Terminator, I’d probably prototype it using web technologies. And since the web still displays HTML just fine, I’d encourage that Terminator to blog. -- [[Paul Ford]]\n"
      },
      "date": 1654205867314
    },
    {
      "type": "add",
      "id": "68209e6ccebd7b7b",
      "item": {
        "type": "markdown",
        "id": "68209e6ccebd7b7b",
        "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display …"
      },
      "after": "269f62fa01a3fc0c",
      "date": 1654205875060
    },
    {
      "type": "edit",
      "id": "68209e6ccebd7b7b",
      "item": {
        "type": "markdown",
        "id": "68209e6ccebd7b7b",
        "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display … -- [[Vanessa Freudenberg]]"
      },
      "date": 1654205967758
    },
    {
      "type": "edit",
      "id": "68209e6ccebd7b7b",
      "item": {
        "type": "markdown",
        "id": "68209e6ccebd7b7b",
        "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display … -- [[Vanessa Freudenberg]] [https://youtu.be/Nu2Siz_rjTg?t=497 youtube]"
      },
      "date": 1654206023548
    },
    {
      "type": "edit",
      "id": "68209e6ccebd7b7b",
      "item": {
        "type": "markdown",
        "id": "68209e6ccebd7b7b",
        "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display … -- [[Vanessa Freudenberg]], [https://youtu.be/Nu2Siz_rjTg?t=497 youtube]"
      },
      "date": 1654206030906
    },
    {
      "type": "edit",
      "id": "68209e6ccebd7b7b",
      "item": {
        "type": "markdown",
        "id": "68209e6ccebd7b7b",
        "text": "\"Croquet Tutorial with Co-Founders\" by David Smith, Vanessa Freudenberg, Brian Upton\n> On your machine and on on my machine there's a little virtual computer that we control. It's a little black box and events go in and stuff goes out like rendering to the display … -- [[Vanessa Freudenberg]], [https://youtu.be/Nu2Siz_rjTg?t=497 youtube]\n"
      },
      "date": 1654206285343
    },
    {
      "type": "add",
      "id": "60b545d2db47834c",
      "item": {
        "type": "markdown",
        "id": "60b545d2db47834c",
        "text": "[[Kontrollillusion]] (Stangl, 2022).\n\nVerwendete Literatur\nStangl, W. (2022, 2. Juni). Kontrollillusion . Online Lexikon für Psychologie und Pädagogik.\nhttps://lexikon.stangl.eu/2221/kontrollillusion."
      },
      "after": "68209e6ccebd7b7b",
      "date": 1654206299721
    },
    {
      "type": "edit",
      "id": "60b545d2db47834c",
      "item": {
        "type": "markdown",
        "id": "60b545d2db47834c",
        "text": "⇒ [[Kontrollillusion]] (Stangl, 2022).\n\nVerwendete Literatur\nStangl, W. (2022, 2. Juni). Kontrollillusion . Online Lexikon für Psychologie und Pädagogik.\nhttps://lexikon.stangl.eu/2221/kontrollillusion."
      },
      "date": 1654206306436
    },
    {
      "type": "edit",
      "id": "60b545d2db47834c",
      "item": {
        "type": "markdown",
        "id": "60b545d2db47834c",
        "text": "⇒ [[Kontrollillusion]]\n"
      },
      "date": 1654206320225
    },
    {
      "type": "add",
      "id": "9400493651a2b9a1",
      "item": {
        "type": "markdown",
        "id": "9400493651a2b9a1",
        "text": "\nVerwendete Literatur\nStangl, W. (2022, 2. Juni). Kontrollillusion . Online Lexikon für Psychologie und Pädagogik.\nhttps://lexikon.stangl.eu/2221/kontrollillusion."
      },
      "after": "60b545d2db47834c",
      "date": 1654206322951
    },
    {
      "id": "9400493651a2b9a1",
      "type": "remove",
      "date": 1654206325424
    },
    {
      "type": "edit",
      "id": "7e582141f0f3b176",
      "item": {
        "type": "code",
        "id": "7e582141f0f3b176",
        "text": "class Display extends Croquet.View {\n    constructor(model) {\n        super(model);\n        this.model = model;\n\n        const joystick = document.getElementById(\"joystick\");\n        const knob = document.getElementById(\"knob\");\n\n        document.onkeydown = (e) => {\n            joystick.style.display = \"none\";\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", true); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", true); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", true); break;\n                case \" \":                              this.publish(this.viewId, \"fire-blaster\"); break;\n            }\n        };\n        document.onkeyup = (e) => {\n            if (e.repeat) return;\n            switch (e.key) {\n                case \"a\": case \"A\": case \"ArrowLeft\":  this.publish(this.viewId, \"left-thruster\", false); break;\n                case \"d\": case \"D\": case \"ArrowRight\": this.publish(this.viewId, \"right-thruster\", false); break;\n                case \"w\": case \"W\": case \"ArrowUp\":    this.publish(this.viewId, \"forward-thruster\", false); break;\n            }\n        };\n\n        let x = 0, y = 0, id = 0, right = false, left = false, forward = false;\n        document.onpointerdown = (e) => {\n            if (!id) {\n                id = e.pointerId;\n                x = e.clientX;\n                y = e.clientY;\n                joystick.style.left = `${x - 60}px`;\n                joystick.style.top = `${y - 60}px`;\n                joystick.style.display = \"block\";\n            }\n        };\n        document.onpointermove = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                let dx = e.clientX - x;\n                let dy = e.clientY - y;\n                if (dx > 30) {\n                    dx = 30;\n                    if (!right) { this.publish(this.viewId, \"right-thruster\", true); right = true; }\n                } else if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (dx < -30) {\n                    dx = -30;\n                    if (!left) { this.publish(this.viewId, \"left-thruster\", true); left = true; }\n                } else if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false; }\n                if (dy < -30) {\n                    dy = -30;\n                    if (!forward) { this.publish(this.viewId, \"forward-thruster\", true); forward = true; }\n                } else if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                if (dy > 0) dy = 0;\n                knob.style.left = `${20 + dx}px`;\n                knob.style.top = `${20 + dy}px`;\n            }\n        }\n        document.onpointerup = (e) => {\n            e.preventDefault();\n            if (id === e.pointerId) {\n                id = 0;\n                if (!right && !left && !forward) {\n                    this.publish(this.viewId, \"fire-blaster\");\n                }\n                if (right) { this.publish(this.viewId, \"right-thruster\", false); right = false; }\n                if (left) { this.publish(this.viewId, \"left-thruster\", false); left = false;  }\n                if (forward) { this.publish(this.viewId, \"forward-thruster\", false); forward = false; }\n                knob.style.left = `20px`;\n                knob.style.top = `20px`;\n            } else {\n                this.publish(this.viewId, \"fire-blaster\");\n            }\n        }\n        document.onpointercancel = document.onpointerup;\n        document.oncontextmenu = e => { e.preventDefault();  this.publish(this.viewId, \"fire-blaster\"); }\n        document.ontouchend = e => e.preventDefault(); // prevent double-tap zoom on iOS\n        codelink.ontouchend = () => codelink.click(); // but allow clicking link\n\n        this.smoothing = new WeakMap(); // position cache for interpolated rendering\n\n        this.context = canvas.getContext(\"2d\");\n    }\n\n    // update is called once per render frame\n    // read from shared model, interpolate, render\n    update() {\n        this.context.clearRect(0, 0, 1000, 1000);\n        this.context.font = '40px sans-serif';\n        this.context.fillStyle = \"rgba(255, 255, 255, 0.5)\";\n        this.context.lineWidth = 3;\n        this.context.strokeStyle = \"white\";\n        for (const ship of this.model.ships.values()) {\n            const { x, y, a } = this.smoothPosAndAngle(ship);\n            this.context.save();\n            this.context.translate(x, y);\n            if (ship.score) this.context.fillText(ship.score, 30, 15);\n            this.context.rotate(a);\n            if (ship.wasHit) this.drawShipDebris(ship.wasHit);\n            else this.drawShip(ship.forward, ship.viewId === this.viewId);\n            this.context.restore();\n        }\n        for (const asteroid of this.model.asteroids) {\n            const { x, y, a } = this.smoothPosAndAngle(asteroid);\n            this.context.save();\n            this.context.translate(x, y);\n            this.context.rotate(a);\n            if (asteroid.wasHit) this.drawAsteroidDebris(asteroid.size, asteroid.wasHit * 2);\n            else this.drawAsteroid(asteroid.size);\n            this.context.restore();\n        }\n        for (const blast of this.model.blasts) {\n            const { x, y } = this.smoothPos(blast);\n            this.context.save();\n            this.context.translate(x, y);\n            this.drawBlast();\n            this.context.restore();\n        }\n    }\n\n    smoothPos(obj) {\n        if (!this.smoothing.has(obj)) {\n            this.smoothing.set(obj, { x: obj.x, y: obj.y, a: obj.a });\n        }\n        const smoothed = this.smoothing.get(obj);\n        const dx = obj.x - smoothed.x;\n        const dy = obj.y - smoothed.y;\n        if (Math.abs(dx) < 50) smoothed.x += dx * 0.3; else smoothed.x = obj.x;\n        if (Math.abs(dy) < 50) smoothed.y += dy * 0.3; else smoothed.y = obj.y;\n        return smoothed;\n    }\n\n    smoothPosAndAngle(obj) {\n        const smoothed = this.smoothPos(obj);\n        const da = obj.a - smoothed.a;\n        if (Math.abs(da) < 1) smoothed.a += da * 0.3; else smoothed.a = obj.a;\n        return smoothed;\n    }\n\n    drawShip(thrust, highlight) {\n        this.context.beginPath();\n        this.context.moveTo(+20,   0);\n        this.context.lineTo(-20, +10);\n        this.context.lineTo(-20, -10);\n        this.context.closePath();\n        this.context.stroke();\n        if (highlight) {\n            this.context.fill();\n        }\n        if (thrust) {\n            this.context.beginPath();\n            this.context.moveTo(-20, +5);\n            this.context.lineTo(-30,  0);\n            this.context.lineTo(-20, -5);\n            this.context.stroke();\n        }\n    }\n\n    drawShipDebris(t) {\n        this.context.beginPath();\n        this.context.moveTo(+20 + t,   0 + t);\n        this.context.lineTo(-20 + t, +10 + t);\n        this.context.moveTo(-20 - t * 1.4, +10);\n        this.context.lineTo(-20 - t * 1.4, -10);\n        this.context.moveTo(-20 + t, -10 - t);\n        this.context.lineTo(+20 + t,   0 - t);\n        this.context.stroke();\n    }\n\n    drawAsteroid(size) {\n        this.context.beginPath();\n        this.context.moveTo(+size,  0);\n        this.context.lineTo( 0, +size);\n        this.context.lineTo(-size,  0);\n        this.context.lineTo( 0, -size);\n        this.context.closePath();\n        this.context.stroke();\n    }\n\n    drawAsteroidDebris(size, t) {\n        this.context.beginPath();\n        this.context.moveTo(+size + t,  0 + t);\n        this.context.lineTo( 0 + t, +size + t);\n        this.context.moveTo(-size - t,  0 - t);\n        this.context.lineTo( 0 - t, -size - t);\n        this.context.moveTo(-size - t,  0 + t);\n        this.context.lineTo( 0 - t, +size + t);\n        this.context.moveTo(+size + t,  0 - t);\n        this.context.lineTo( 0 + t, -size - t);\n        this.context.stroke();\n    }\n\n    drawBlast() {\n        this.context.beginPath();\n        this.context.ellipse(0, 0, 2, 2, 0, 0, 2 * Math.PI);\n        this.context.closePath();\n        this.context.stroke();\n    }\n}\n"
      },
      "date": 1654209211751
    },
    {
      "type": "add",
      "id": "a4da252e0c397ed8",
      "item": {
        "type": "paragraph",
        "id": "a4da252e0c397ed8",
        "text": "Uncaught TypeError: class heritage this.MyClass is not an object or null"
      },
      "after": "65d97c995c7adf15",
      "date": 1654209555067
    },
    {
      "type": "edit",
      "id": "a4da252e0c397ed8",
      "item": {
        "type": "paragraph",
        "id": "a4da252e0c397ed8",
        "text": "Uncaught TypeError: class heritage this.MyClass is not an object or null [https://stackoverflow.com/questions/64061906/uncaught-typeerror-class-heritage-this-myclass-is-not-an-object-or-null stackoverflow]"
      },
      "date": 1654209574024
    },
    {
      "type": "add",
      "id": "34d918cf23434eea",
      "item": {
        "type": "paragraph",
        "id": "34d918cf23434eea",
        "text": "> this is only set when you're calling a method of the object, it's not available when you're initializing an object."
      },
      "after": "a4da252e0c397ed8",
      "date": 1654209586099
    },
    {
      "type": "edit",
      "id": "34d918cf23434eea",
      "item": {
        "type": "markdown",
        "id": "34d918cf23434eea",
        "text": "> this is only set when you're calling a method of the object, it's not available when you're initializing an object."
      },
      "date": 1654209588735
    },
    {
      "type": "edit",
      "id": "34d918cf23434eea",
      "item": {
        "type": "markdown",
        "id": "34d918cf23434eea",
        "text": "> `this` is only set when you're calling a method of the object, it's not available when you're initializing an object."
      },
      "date": 1654209595706
    },
    {
      "id": "a4da252e0c397ed8",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "269f62fa01a3fc0c",
        "68209e6ccebd7b7b",
        "60b545d2db47834c",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "4dc0c2f2c7db3f6c",
        "da07f2402229cd63",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "31de8e3ccfde7fa2",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "a4da252e0c397ed8",
        "65d97c995c7adf15",
        "34d918cf23434eea",
        "dfddd2d989966f0c",
        "5cbd82e529085e9a",
        "8ca86f0eb2f8116a",
        "6adf805f6ccc38d8",
        "e17dd4501c934e30",
        "112c0d130e7edf0c",
        "daccb48780f07535",
        "9cadae1ef0664bbd",
        "fbecce33791e6c63",
        "4e0ce1bf660b5d27",
        "a3cb9a570becaf09",
        "7e582141f0f3b176",
        "a62aacec1b03e4b9",
        "d145e3f7ef9766f6",
        "b44625b99105baeb"
      ],
      "date": 1654209606364
    },
    {
      "id": "34d918cf23434eea",
      "type": "move",
      "order": [
        "7a05d4e209216814",
        "269f62fa01a3fc0c",
        "68209e6ccebd7b7b",
        "60b545d2db47834c",
        "09f971365e20546c",
        "bec86d19dce94838",
        "bca07b1e3b45a73f",
        "4dc0c2f2c7db3f6c",
        "da07f2402229cd63",
        "7e9cb8ebec9e6008",
        "2821f6f56347b3c1",
        "f7fab3cb6b1471ba",
        "31de8e3ccfde7fa2",
        "ef3e3eecd292b747",
        "36dd678e98c86ac8",
        "9c8d2e3a8aa21b55",
        "8fc31fcfb9173268",
        "04bfb2692d07aa60",
        "a4da252e0c397ed8",
        "34d918cf23434eea",
        "65d97c995c7adf15",
        "dfddd2d989966f0c",
        "5cbd82e529085e9a",
        "8ca86f0eb2f8116a",
        "6adf805f6ccc38d8",
        "e17dd4501c934e30",
        "112c0d130e7edf0c",
        "daccb48780f07535",
        "9cadae1ef0664bbd",
        "fbecce33791e6c63",
        "4e0ce1bf660b5d27",
        "a3cb9a570becaf09",
        "7e582141f0f3b176",
        "a62aacec1b03e4b9",
        "d145e3f7ef9766f6",
        "b44625b99105baeb"
      ],
      "date": 1654209608666
    },
    {
      "type": "edit",
      "id": "a4da252e0c397ed8",
      "item": {
        "type": "paragraph",
        "id": "a4da252e0c397ed8",
        "text": "Uncaught TypeError: class heritage […] is not an object or null [https://stackoverflow.com/questions/64061906/uncaught-typeerror-class-heritage-this-myclass-is-not-an-object-or-null stackoverflow]"
      },
      "date": 1654210132603
    },
    {
      "type": "edit",
      "id": "b44625b99105baeb",
      "item": {
        "type": "paragraph",
        "id": "b44625b99105baeb",
        "text": "Error \"name\": \"InvalidCharacterError\",\n  \"message\": \"String contains an invalid character\"\n} **fixed**."
      },
      "date": 1654210328612
    },
    {
      "type": "edit",
      "id": "b44625b99105baeb",
      "item": {
        "type": "markdown",
        "id": "b44625b99105baeb",
        "text": "Error \"name\": \"InvalidCharacterError\",\n  \"message\": \"String contains an invalid character\"\n} **fixed**."
      },
      "date": 1654210331519
    }
  ]
}