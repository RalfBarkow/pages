{
  "title": "Learning to Like Javascript",
  "story": [
    {
      "type": "paragraph",
      "id": "44092ba0c298ff1e",
      "text": "[[JavaScript]] is nearly as old as the browser itself. Ward once considered it a silly language, but his attitude has changed."
    },
    {
      "type": "markdown",
      "id": "8a22e9cc6e0bf4ec",
      "text": "# Values"
    },
    {
      "type": "paragraph",
      "id": "d0853ddb9e6214eb",
      "text": "The values held by variables are of basic types like strings and numbers which are different but can often be used interchangeably so long as you are smart enough to know when they can't."
    },
    {
      "type": "paragraph",
      "id": "51fb791165ac772a",
      "text": "Some values are objects like arrays and functions. These are so flexible that you can put functions into objects and pass them around like one thing. You can even put functions into functions which has proven to be useful in at least one case."
    },
    {
      "type": "paragraph",
      "id": "f58ddf79b15a771f",
      "text": "Additional types can be described within the language initially by manipulating prototypes and now civilized by class definitions."
    },
    {
      "type": "markdown",
      "id": "bf7aa62453d7e861",
      "text": "# Scope"
    },
    {
      "type": "paragraph",
      "id": "97b4d20f78565813",
      "text": "Variables holding values come and go at various times following rules that are hard to remember. Many tricks are possible but one should test anything that they haven't already see work as expected sometime today."
    },
    {
      "type": "paragraph",
      "id": "677ee10114b0f960",
      "text": "Born in the browser javascript has variables for the window and the document within it. Again, many cool things are possible if tested anew each day."
    },
    {
      "type": "paragraph",
      "id": "3ea2f6dd40546617",
      "text": "More versatile declarations using let and const along with stricter rules about undeclared variables has brought some order to coding practice. "
    },
    {
      "type": "markdown",
      "id": "7816e59863484066",
      "text": "# Flow"
    },
    {
      "type": "paragraph",
      "id": "e920933b99995b54",
      "text": "Statements are evaluated one after another without interruptions except in cases that are well identified. Loading a file or encountering a script tag get this going. Function definitions are made to appear as if they already happened but other things must be carefully ordered."
    },
    {
      "type": "paragraph",
      "id": "acb6b3d0044b7bfc",
      "text": "There is a knack to registering for and handling events. Of course there are multiple choices and much lore as to which is better."
    },
    {
      "type": "paragraph",
      "id": "ef402bcb6d3da5c9",
      "text": "The recent introduction of async functions and the await operation within them reasonably approximates linear flow within code that is managing non-linear activities."
    },
    {
      "type": "markdown",
      "id": "e76dfb3e54ce6ebc",
      "text": "# I/O"
    },
    {
      "type": "paragraph",
      "id": "a33520ed8926b9ac",
      "text": "A small script can interact directly with the document and window that surrounds it as well as speaking to the internet if it knows its way around."
    },
    {
      "type": "paragraph",
      "id": "a038e164531fa3c0",
      "text": "It is possible to compile most any language to run in the javascript environment which has opened the door for old games and other highly graphical content to find a home in the browser."
    },
    {
      "type": "paragraph",
      "id": "a45f75f0192e6df1",
      "text": "Huge libraries have emerged that aim to simplify some i/o aspect by 2x while they complicate other issues by 10x. These are best ignored except by enterprise."
    },
    {
      "type": "paragraph",
      "id": "34850f0d5a9bc048",
      "text": "The internet giant google has open sourced its excellent javascript engine. This has lead to a thriving of server-side applications most notably Deno which most accurately duplicates the browser environment sans window and document. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Learning to Like Javascript",
        "story": []
      },
      "date": 1615387220259
    },
    {
      "item": {
        "type": "factory",
        "id": "44092ba0c298ff1e"
      },
      "id": "44092ba0c298ff1e",
      "type": "add",
      "date": 1615387222017
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "Javascript is nearly as old as the browser itself. I once considered a silly language but my attitude has changed."
      },
      "date": 1615387367653
    },
    {
      "type": "add",
      "id": "8a22e9cc6e0bf4ec",
      "item": {
        "type": "paragraph",
        "id": "8a22e9cc6e0bf4ec",
        "text": "# Values"
      },
      "after": "44092ba0c298ff1e",
      "date": 1615387428306
    },
    {
      "type": "add",
      "id": "d0853ddb9e6214eb",
      "item": {
        "type": "paragraph",
        "id": "d0853ddb9e6214eb",
        "text": "The values held by variables are of basic types like strings and numbers which are different but can often be used interchangeably so long as you are smart enough to know when they can't."
      },
      "after": "8a22e9cc6e0bf4ec",
      "date": 1615387718256
    },
    {
      "type": "add",
      "id": "51fb791165ac772a",
      "item": {
        "type": "paragraph",
        "id": "51fb791165ac772a",
        "text": "Some values are objects like arrays and functions. These are so flexible that you can put functions into objects and pass them around like one thing. You can even put functions into functions which has proven to be useful in at least one case. "
      },
      "after": "d0853ddb9e6214eb",
      "date": 1615388047282
    },
    {
      "type": "edit",
      "id": "8a22e9cc6e0bf4ec",
      "item": {
        "type": "markdown",
        "id": "8a22e9cc6e0bf4ec",
        "text": "# Values"
      },
      "date": 1615388050746
    },
    {
      "type": "add",
      "id": "bf7aa62453d7e861",
      "item": {
        "type": "paragraph",
        "id": "bf7aa62453d7e861",
        "text": "# Scope"
      },
      "after": "51fb791165ac772a",
      "date": 1615388116101
    },
    {
      "type": "add",
      "id": "97b4d20f78565813",
      "item": {
        "type": "paragraph",
        "id": "97b4d20f78565813",
        "text": "Variables holding values come and go at various times following rules that are hard to remember. Many tricks are possible but one should test anything that they haven't already see work as expected sometime today."
      },
      "after": "bf7aa62453d7e861",
      "date": 1615388408867
    },
    {
      "type": "add",
      "id": "677ee10114b0f960",
      "item": {
        "type": "paragraph",
        "id": "677ee10114b0f960",
        "text": "Born in the browser javascript has variables for the window and the document within it. Again, many cool things are possible if tested anew each day."
      },
      "after": "97b4d20f78565813",
      "date": 1615388557777
    },
    {
      "type": "edit",
      "id": "bf7aa62453d7e861",
      "item": {
        "type": "markdown",
        "id": "bf7aa62453d7e861",
        "text": "# Scope"
      },
      "date": 1615388560709
    },
    {
      "type": "add",
      "id": "7816e59863484066",
      "item": {
        "type": "paragraph",
        "id": "7816e59863484066",
        "text": "# Async"
      },
      "after": "677ee10114b0f960",
      "date": 1615388756147
    },
    {
      "type": "edit",
      "id": "7816e59863484066",
      "item": {
        "type": "paragraph",
        "id": "7816e59863484066",
        "text": "# Flow"
      },
      "date": 1615388815786
    },
    {
      "type": "add",
      "id": "e920933b99995b54",
      "item": {
        "type": "paragraph",
        "id": "e920933b99995b54",
        "text": "Statements are evaluated one after another without interruptions except in cases that are well identified. Loading a file or encountering a script tag get this going. Function definitions are made to appear as if they already happened but other things must be carefully ordered."
      },
      "after": "7816e59863484066",
      "date": 1615389201121
    },
    {
      "type": "add",
      "id": "acb6b3d0044b7bfc",
      "item": {
        "type": "paragraph",
        "id": "acb6b3d0044b7bfc",
        "text": "There is a knack to registering for and handling events. Of course there are multiple choices and much lore as to which is better."
      },
      "after": "e920933b99995b54",
      "date": 1615389298960
    },
    {
      "type": "add",
      "id": "ef402bcb6d3da5c9",
      "item": {
        "type": "paragraph",
        "id": "ef402bcb6d3da5c9",
        "text": "The recent introduction of async functions and the await operation within them reasonably approximates linear flow within code that is managing non-linear activities."
      },
      "after": "acb6b3d0044b7bfc",
      "date": 1615389526989
    },
    {
      "type": "edit",
      "id": "7816e59863484066",
      "item": {
        "type": "markdown",
        "id": "7816e59863484066",
        "text": "# Flow"
      },
      "date": 1615389611356
    },
    {
      "type": "add",
      "id": "e76dfb3e54ce6ebc",
      "item": {
        "type": "paragraph",
        "id": "e76dfb3e54ce6ebc",
        "text": "# I/O"
      },
      "after": "ef402bcb6d3da5c9",
      "date": 1615389706737
    },
    {
      "type": "add",
      "id": "a33520ed8926b9ac",
      "item": {
        "type": "paragraph",
        "id": "a33520ed8926b9ac",
        "text": "A small script can interact directly with the document and window that surrounds it as well as speaking to the internet if it knows its way around."
      },
      "after": "e76dfb3e54ce6ebc",
      "date": 1615389989336
    },
    {
      "type": "edit",
      "id": "a33520ed8926b9ac",
      "item": {
        "type": "paragraph",
        "id": "a33520ed8926b9ac",
        "text": "A small script can interact directly with the document and window that surrounds it as well as speaking to the internet if it knows its way around. "
      },
      "date": 1615390041977
    },
    {
      "type": "edit",
      "id": "e76dfb3e54ce6ebc",
      "item": {
        "type": "markdown",
        "id": "e76dfb3e54ce6ebc",
        "text": "# I/O"
      },
      "date": 1615390300092
    },
    {
      "type": "add",
      "id": "a45f75f0192e6df1",
      "item": {
        "type": "paragraph",
        "id": "a45f75f0192e6df1",
        "text": "Huge libraries have emerged that aim to simplify some i/o aspect by 2x while they complicate other issues by 10x. These are best ignored except by enterprise."
      },
      "after": "a33520ed8926b9ac",
      "date": 1615390338985
    },
    {
      "type": "add",
      "id": "34850f0d5a9bc048",
      "item": {
        "type": "paragraph",
        "id": "34850f0d5a9bc048",
        "text": "The internet giant google has open sourced its excellent javascript engine which has lead to a thriving of server-side applications most notably Deno which most accurately duplicates the browser environment sans window and document. "
      },
      "after": "a45f75f0192e6df1",
      "date": 1615390553247
    },
    {
      "type": "edit",
      "id": "a33520ed8926b9ac",
      "item": {
        "type": "paragraph",
        "id": "a33520ed8926b9ac",
        "text": "A small script can interact directly with the document and window that surrounds it as well as speaking to the internet if it knows its way around."
      },
      "date": 1615390583537
    },
    {
      "type": "add",
      "id": "a038e164531fa3c0",
      "item": {
        "type": "paragraph",
        "id": "a038e164531fa3c0",
        "text": "It is possible to compile most any language to run in the javascript environment which has opened the door for old games and other highly graphical content to find a home in the browser."
      },
      "after": "a33520ed8926b9ac",
      "date": 1615390696986
    },
    {
      "type": "edit",
      "id": "51fb791165ac772a",
      "item": {
        "type": "paragraph",
        "id": "51fb791165ac772a",
        "text": "Some values are objects like arrays and functions. These are so flexible that you can put functions into objects and pass them around like one thing. You can even put functions into functions which has proven to be useful in at least one case."
      },
      "date": 1615390742968
    },
    {
      "type": "add",
      "id": "f58ddf79b15a771f",
      "item": {
        "type": "paragraph",
        "id": "f58ddf79b15a771f",
        "text": "Additional types can be described within the language initially by manipulating prototypes and now civilized by class definitions."
      },
      "after": "51fb791165ac772a",
      "date": 1615390889164
    },
    {
      "type": "add",
      "id": "3ea2f6dd40546617",
      "item": {
        "type": "paragraph",
        "id": "3ea2f6dd40546617",
        "text": "More versatile declarations using let and const along with stricter rules about undeclared variables has brought some order to coding practice. "
      },
      "after": "677ee10114b0f960",
      "date": 1615391133401
    },
    {
      "type": "edit",
      "id": "34850f0d5a9bc048",
      "item": {
        "type": "paragraph",
        "id": "34850f0d5a9bc048",
        "text": "The internet giant google has open sourced its excellent javascript engine. This has lead to a thriving of server-side applications most notably Deno which most accurately duplicates the browser environment sans window and document. "
      },
      "date": 1615391288041
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1644440973380
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "[[Javascript]] is nearly as old as the browser itself. I once considered a silly language but my attitude has changed."
      },
      "date": 1678773572580
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "[[JavaScript]] is nearly as old as the browser itself. I once considered a silly language but my attitude has changed."
      },
      "date": 1678773580687
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "[[JavaScript]] is nearly as old as the browser itself. Ward once considered a silly language but his attitude has changed."
      },
      "date": 1678773599467
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "[[JavaScript]] is nearly as old as the browser itself. Ward once considered it a silly language but his attitude has changed."
      },
      "date": 1678773635765
    },
    {
      "type": "edit",
      "id": "44092ba0c298ff1e",
      "item": {
        "type": "paragraph",
        "id": "44092ba0c298ff1e",
        "text": "[[JavaScript]] is nearly as old as the browser itself. Ward once considered it a silly language, but his attitude has changed."
      },
      "date": 1678773643283
    }
  ]
}