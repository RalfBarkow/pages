{
  "title": "Revision Control System",
  "story": [
    {
      "type": "html",
      "text": "...or RCS as it's better known.",
      "id": "92127232b80f3ba9aa5c726bbc040f78"
    },
    {
      "type": "html",
      "text": "\nWidely-used source code tool available for most operating systems. Less powerful than the [[Concurrent Versions System]] (CVS) and far behind [[Distributed Version Control]] for workgroups. However, for a personal repository, it's trivial to set up and use.",
      "id": "3062aa4e952afd2be77535bd39ecd81b"
    },
    {
      "type": "html",
      "text": "\nRCS makes it easy to get started with version control on your private files. But if you have already gone through the pains of learning CVS, don't bother with RCS.",
      "id": "d45fc2278267d33f380c9427e3a026a0"
    },
    {
      "type": "html",
      "text": "\nThe primary weakness of RCS is when you are working in a workgroup. When someone locks a file, no one else can make changes to the repository version until you check it back in, you release the lock, or someone steals the lock. For anything but a small group, file locking issues get in the way of getting things done. CVS sidesteps this issue nicely. ",
      "id": "8173064e6a0bebe2d2ab21dc67604a31"
    },
    {
      "type": "html",
      "text": "\nThe [[Awki Wiki]] uses RCS as a backend to provide version control, diffs and history.",
      "id": "a2f67ff1e81c2135a281cdf49bf3df21"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
    },
    {
      "type": "html",
      "text": "<b>RCS tips</b>",
      "id": "44e0c6b90581b0acc7fe92b3a9e6de2d"
    },
    {
      "type": "code",
      "text": " mkdir RCS",
      "id": "bd61beaed4e2ea0026428d3c90354af8"
    },
    {
      "type": "html",
      "text": "First, make an RCS directory in your working directory. This keeps all the RCS files tucked neatly away.",
      "id": "bad4105705023e2908799d53e6f52281"
    },
    {
      "type": "code",
      "text": " ci ''filename''  #ci stands for <c>heck <i>n.",
      "id": "e83a147e633e9db3e6c57979c2387d53"
    },
    {
      "type": "html",
      "text": "The first time you issue this command for a file, RCS does the following:",
      "id": "fec3e6d7c87f11b37cb8237e39e1cfed"
    },
    {
      "type": "html",
      "text": " Adds the file named <i>filename</i> to your RCS repository. ",
      "id": "c077ed311c936bb07ba159bf4dfa4a5b"
    },
    {
      "type": "html",
      "text": " Removes the original file from your working directory. ",
      "id": "8596252fb330e640895729dca733faf1"
    },
    {
      "type": "html",
      "text": " Prompts you for a file description for the RCS log.",
      "id": "67f168df1be1853467858c2b3c57909c"
    },
    {
      "type": "code",
      "text": " co ''filename''  #co stands for <c>heck <o>ut. ",
      "id": "911c98b4912c0500568ceb3b161ec29c"
    },
    {
      "type": "html",
      "text": "A copy of the repository file is placed in your working directory. Once you do this, you can view it, compile with it, even alter it. However, if you're planning on checking the file back in again, you may want to use the following command:",
      "id": "a1c80d6f0dcc90d4919d6d6141e89800"
    },
    {
      "type": "code",
      "text": " co -l ''filename'' #check out and lock.",
      "id": "d039ea1eded4949d9b21d8994378cba2"
    },
    {
      "type": "html",
      "text": "This has the additional effect of 'locking' the repository. No one but you can check the file back in until the lock is released.  ",
      "id": "38e834a842db12ef231c0a5e385ff464"
    },
    {
      "type": "html",
      "text": "\nLet's say you make changes to the file and want to check it back in. You can use one of these commands. ",
      "id": "ad544fc48931d50cda0854d7e4c0f357"
    },
    {
      "type": "code",
      "text": " ci ''filename''  # Check in the file. Working copy disappears. \n ci -l ''filename''  # Check in the file. Working copy retained. Lock is retained.\n ci -u ''filename''  # Check in the file. Working copy retained. Lock is released.",
      "id": "7e092c9c6fcd16fc6d3f5e99da23af3a"
    },
    {
      "type": "html",
      "text": "When you check the file back in, RCS asks for a \"change log entry\". This should be a description of the changes you made. See [[Good Change Log Entry]] for discussion on <i>that</i> ball of worms.",
      "id": "1a6d1cb45ceebee822e917bcba458e68"
    },
    {
      "type": "html",
      "text": "---- Additional tips:  See [[Rcs Keywords]]",
      "id": "55126a7f584a2787c02a2f3f1f846eb3"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
    },
    {
      "type": "html",
      "text": "Contributors: [[Anders Bengtsson]], [[Sean Oleary]], [[Chris Garrod]]",
      "id": "6fe7e01b22a7355e8bc7a090f773237a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
    },
    {
      "type": "html",
      "text": "[[Category Software Tool]] [[Category Configuration Management]]",
      "id": "ac39eafe0dcc8cd81442e2ffec94f0d8"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?RevisionControlSystem c2.com]",
      "id": "ffb58c104c7e2373a28d20d56ecab8a4"
    }
  ],
  "journal": [
    {
      "date": 1270987752000,
      "id": "858af3e7525ec03ab43c049bd7067a3e",
      "type": "create",
      "item": {
        "title": "Revision Control System",
        "story": [
          {
            "type": "html",
            "text": "...or RCS as it's better known.",
            "id": "92127232b80f3ba9aa5c726bbc040f78"
          },
          {
            "type": "html",
            "text": "\nWidely-used source code tool available for most operating systems. Less powerful than the [[Concurrent Versions System]] (CVS) and far behind [[Distributed Version Control]] for workgroups. However, for a personal repository, it's trivial to set up and use.",
            "id": "3062aa4e952afd2be77535bd39ecd81b"
          },
          {
            "type": "html",
            "text": "\nRCS makes it easy to get started with version control on your private files. But if you have already gone through the pains of learning CVS, don't bother with RCS.",
            "id": "d45fc2278267d33f380c9427e3a026a0"
          },
          {
            "type": "html",
            "text": "\nThe primary weakness of RCS is when you are working in a workgroup. When someone locks a file, no one else can make changes to the repository version until you check it back in, you release the lock, or someone steals the lock. For anything but a small group, file locking issues get in the way of getting things done. CVS sidesteps this issue nicely. ",
            "id": "8173064e6a0bebe2d2ab21dc67604a31"
          },
          {
            "type": "html",
            "text": "\nThe [[Awki Wiki]] uses RCS as a backend to provide version control, diffs and history.",
            "id": "a2f67ff1e81c2135a281cdf49bf3df21"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
          },
          {
            "type": "html",
            "text": "<b>RCS tips</b>",
            "id": "44e0c6b90581b0acc7fe92b3a9e6de2d"
          },
          {
            "type": "code",
            "text": " mkdir RCS",
            "id": "bd61beaed4e2ea0026428d3c90354af8"
          },
          {
            "type": "html",
            "text": "First, make an RCS directory in your working directory. This keeps all the RCS files tucked neatly away.",
            "id": "bad4105705023e2908799d53e6f52281"
          },
          {
            "type": "code",
            "text": " ci ''filename''  #ci stands for <c>heck <i>n.",
            "id": "e83a147e633e9db3e6c57979c2387d53"
          },
          {
            "type": "html",
            "text": "The first time you issue this command for a file, RCS does the following:",
            "id": "fec3e6d7c87f11b37cb8237e39e1cfed"
          },
          {
            "type": "html",
            "text": " Adds the file named <i>filename</i> to your RCS repository. ",
            "id": "c077ed311c936bb07ba159bf4dfa4a5b"
          },
          {
            "type": "html",
            "text": " Removes the original file from your working directory. ",
            "id": "8596252fb330e640895729dca733faf1"
          },
          {
            "type": "html",
            "text": " Prompts you for a file description for the RCS log.",
            "id": "67f168df1be1853467858c2b3c57909c"
          },
          {
            "type": "code",
            "text": " co ''filename''  #co stands for <c>heck <o>ut. ",
            "id": "911c98b4912c0500568ceb3b161ec29c"
          },
          {
            "type": "html",
            "text": "A copy of the repository file is placed in your working directory. Once you do this, you can view it, compile with it, even alter it. However, if you're planning on checking the file back in again, you may want to use the following command:",
            "id": "a1c80d6f0dcc90d4919d6d6141e89800"
          },
          {
            "type": "code",
            "text": " co -l ''filename'' #check out and lock.",
            "id": "d039ea1eded4949d9b21d8994378cba2"
          },
          {
            "type": "html",
            "text": "This has the additional effect of 'locking' the repository. No one but you can check the file back in until the lock is released.  ",
            "id": "38e834a842db12ef231c0a5e385ff464"
          },
          {
            "type": "html",
            "text": "\nLet's say you make changes to the file and want to check it back in. You can use one of these commands. ",
            "id": "ad544fc48931d50cda0854d7e4c0f357"
          },
          {
            "type": "code",
            "text": " ci ''filename''  # Check in the file. Working copy disappears. \n ci -l ''filename''  # Check in the file. Working copy retained. Lock is retained.\n ci -u ''filename''  # Check in the file. Working copy retained. Lock is released.",
            "id": "7e092c9c6fcd16fc6d3f5e99da23af3a"
          },
          {
            "type": "html",
            "text": "When you check the file back in, RCS asks for a \"change log entry\". This should be a description of the changes you made. See [[Good Change Log Entry]] for discussion on <i>that</i> ball of worms.",
            "id": "1a6d1cb45ceebee822e917bcba458e68"
          },
          {
            "type": "html",
            "text": "---- Additional tips:  See [[Rcs Keywords]]",
            "id": "55126a7f584a2787c02a2f3f1f846eb3"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
          },
          {
            "type": "html",
            "text": "Contributors: [[Anders Bengtsson]], [[Sean Oleary]], [[Chris Garrod]]",
            "id": "6fe7e01b22a7355e8bc7a090f773237a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "8f5f980a8dcb9621bcbf0a8d988dbb38"
          },
          {
            "type": "html",
            "text": "[[Category Software Tool]] [[Category Configuration Management]]",
            "id": "ac39eafe0dcc8cd81442e2ffec94f0d8"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?RevisionControlSystem c2.com]",
            "id": "ffb58c104c7e2373a28d20d56ecab8a4"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1671724653588
    }
  ]
}