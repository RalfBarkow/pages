{
  "title": "Intensional Scientific Programming",
  "story": [
    {
      "type": "paragraph",
      "id": "0604ca0e75c49b8e",
      "text": "Context: Multidimensional dataflow graphs"
    },
    {
      "type": "paragraph",
      "id": "d38462780d3cd75a",
      "text": "A [[Dataflow Network]] is a directed graph whose nodes represent filters on the data elements flowing in the network. The edges of the dataflow graph define the \"means of transport\" of tokens throughout the network. Each node can itself be represented by a lesser-level dataflow network, or it can represent a basic operator."
    },
    {
      "type": "paragraph",
      "id": "512f7a0d557c112d",
      "text": "For the case of pipeline dataflow, [[Gilles Kahn]] established the direct relationship between dataflow graphs and sets of equations [43,44]."
    },
    {
      "type": "paragraph",
      "id": "c5513309aa6d3234",
      "text": "[43] G.Kahn. The semantics of a simple language for parallel processing. In Proceedings of the IFIP Congress ’74, pages 471–475, Amsterdam, 1974. Elsevier North-Holland."
    },
    {
      "type": "paragraph",
      "id": "2637b7982d5cfabd",
      "text": "[44] G.Kahn and D.B.MacQueen. Coroutines and networks of parallel processes. In Proceedings of the IFIP Congress ’77, pages 993–998, Amsterdam, 1977. Elsevier North-Holland."
    },
    {
      "type": "paragraph",
      "id": "20684c7989377e0f",
      "text": "He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
    },
    {
      "type": "paragraph",
      "id": "d3b552e5d779c377",
      "text": "Kahn’s result gives us a very powerful tool: it is possible to define programming systems in which programming can either be done textually, through equations, or visually, through networks."
    },
    {
      "type": "pagefold",
      "id": "a2687d5341538ac8",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b6f575dbc48fef29",
      "text": "PAQUET, Joey, 1999. Intensional scientific programming. PhD Thesis. Université Laval. [https://www.researchgate.net/profile/Joey-Paquet/publication/2522926_Intensional_Scientific_Programming/links/0deec522f32ee1b8c0000000/Intensional-Scientific-Programming.pdf pdf]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Intensional Scientific Programming",
        "story": []
      },
      "date": 1713822184448
    },
    {
      "id": "d3b552e5d779c377",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d3b552e5d779c377",
        "text": "Kahn’s result gives us a very powerful tool: it is possible to define programming systems in which programming can either be done textually, through equations, or visually, through networks."
      },
      "attribution": {
        "page": "2024-04-22"
      },
      "date": 1713822189886
    },
    {
      "item": {
        "type": "factory",
        "id": "a2687d5341538ac8"
      },
      "id": "a2687d5341538ac8",
      "type": "add",
      "after": "d3b552e5d779c377",
      "date": 1713822191719
    },
    {
      "type": "edit",
      "id": "a2687d5341538ac8",
      "item": {
        "type": "pagefold",
        "id": "a2687d5341538ac8",
        "text": "~"
      },
      "date": 1713822195811
    },
    {
      "id": "b6f575dbc48fef29",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b6f575dbc48fef29",
        "text": "PAQUET, Joey, 1999. Intensional scientific programming. PhD Thesis. Université Laval. [https://www.researchgate.net/profile/Joey-Paquet/publication/2522926_Intensional_Scientific_Programming/links/0deec522f32ee1b8c0000000/Intensional-Scientific-Programming.pdf pdf]."
      },
      "after": "a2687d5341538ac8",
      "attribution": {
        "page": "2024-04-22"
      },
      "date": 1713822204422
    },
    {
      "item": {
        "type": "factory",
        "id": "0604ca0e75c49b8e"
      },
      "id": "0604ca0e75c49b8e",
      "type": "add",
      "after": "b6f575dbc48fef29",
      "date": 1713856864040
    },
    {
      "type": "edit",
      "id": "0604ca0e75c49b8e",
      "item": {
        "type": "paragraph",
        "id": "0604ca0e75c49b8e",
        "text": "Context: Multidimensional dataflow graphs"
      },
      "date": 1713856872525
    },
    {
      "type": "add",
      "id": "d38462780d3cd75a",
      "item": {
        "type": "paragraph",
        "id": "d38462780d3cd75a",
        "text": "Adataflo wnetworkisadirected graph whose nodesrepresen tfilters onthedata elements flowing inthenetwork. The edges ofthedataflo wgraph define the“means oftransp ort” ofthetokensthroughout thenetwork. Eachnodecanitself berepresen tedbyalesser-lev el dataflownetworkoritcanrepresen tabasic operator. Forthecase ofpipeline dataflow,Gilles Kahn established thedirect relationship betweendataflo wgraphs andsetsofequations [43,44].Herelates theedges ofagraph with expressions andfilters with functions inapipeline dataflowprogram. Subcomputations, asdefined through functions andusing the where clause, correspondtosubnet works that canbesubsumed byindividual nodes. Inthecase ofpipeline dataflow,theedges ina graph canliterally beconsidered tobefirst-in first-out queues, where thesuccessiv edatons inastream followoneafter another; similarly,thenodes-as-filters canbeconsidered to“consume” their data asneeded."
      },
      "after": "0604ca0e75c49b8e",
      "date": 1713856898854
    },
    {
      "type": "edit",
      "id": "d38462780d3cd75a",
      "item": {
        "type": "paragraph",
        "id": "d38462780d3cd75a",
        "text": "A dataflow network is a directed graph whose nodes represent filters on the data elements flowing in the network. The edges of the dataflow graph define the \"means of transport\" of tokens throughout the network. Each node can itself be represented by a lesser-level dataflow network, or it can represent a basic operator.\nFor the case of pipeline dataflow, Gilles Kahn established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive data in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713857574075
    },
    {
      "type": "add",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, Gilles Kahn established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive data in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "after": "d38462780d3cd75a",
      "date": 1713857589869
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, Gilles Kahn established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive data"
      },
      "date": 1713857778447
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, Gilles Kahn established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive datons [sic!] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713857797467
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, Gilles Kahn established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713857939113
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, [[Gilles Kahn]]s established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713857979376
    },
    {
      "type": "edit",
      "id": "d38462780d3cd75a",
      "item": {
        "type": "paragraph",
        "id": "d38462780d3cd75a",
        "text": "A [[Dataflow Network]] is a directed graph whose nodes represent filters on the data elements flowing in the network. The edges of the dataflow graph define the \"means of transport\" of tokens throughout the network. Each node can itself be represented by a lesser-level dataflow network, or it can represent a basic operator."
      },
      "date": 1713858074898
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, [[Gilles Kahn]] established the direct relationship between dataflow graphs and sets of equations [43,44]. He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713858112604
    },
    {
      "type": "edit",
      "id": "512f7a0d557c112d",
      "item": {
        "type": "paragraph",
        "id": "512f7a0d557c112d",
        "text": "For the case of pipeline dataflow, [[Gilles Kahn]] established the direct relationship between dataflow graphs and sets of equations [43,44]."
      },
      "date": 1713858143160
    },
    {
      "type": "add",
      "id": "2637b7982d5cfabd",
      "item": {
        "type": "paragraph",
        "id": "2637b7982d5cfabd",
        "text": "[44] G.Kahn and D.B.MacQueen. Coroutines and networks of parallel processes. In Proceedings of the IFIP Congress ’77, pages 993–998, Amsterdam, 1977. Elsevier North-Holland."
      },
      "after": "c5513309aa6d3234",
      "date": 1713858150022
    },
    {
      "type": "edit",
      "id": "c5513309aa6d3234",
      "item": {
        "type": "paragraph",
        "id": "c5513309aa6d3234",
        "text": "[43] G.Kahn. The semantics of a simple language for parallel processing. In Proceedings of the IFIP Congress ’74, pages 471–475, Amsterdam, 1974. Elsevier North-Holland."
      },
      "date": 1713858183401
    },
    {
      "type": "fork",
      "date": 1713858995114
    },
    {
      "id": "0604ca0e75c49b8e",
      "type": "move",
      "order": [
        "0604ca0e75c49b8e",
        "2637b7982d5cfabd",
        "d3b552e5d779c377",
        "a2687d5341538ac8",
        "b6f575dbc48fef29",
        "d38462780d3cd75a",
        "512f7a0d557c112d",
        "c5513309aa6d3234"
      ],
      "date": 1713858999332
    },
    {
      "id": "d38462780d3cd75a",
      "type": "move",
      "order": [
        "0604ca0e75c49b8e",
        "d38462780d3cd75a",
        "2637b7982d5cfabd",
        "d3b552e5d779c377",
        "a2687d5341538ac8",
        "b6f575dbc48fef29",
        "512f7a0d557c112d",
        "c5513309aa6d3234"
      ],
      "date": 1713859016091
    },
    {
      "id": "512f7a0d557c112d",
      "type": "move",
      "order": [
        "0604ca0e75c49b8e",
        "d38462780d3cd75a",
        "512f7a0d557c112d",
        "2637b7982d5cfabd",
        "d3b552e5d779c377",
        "a2687d5341538ac8",
        "b6f575dbc48fef29",
        "c5513309aa6d3234"
      ],
      "date": 1713859020589
    },
    {
      "id": "c5513309aa6d3234",
      "type": "move",
      "order": [
        "0604ca0e75c49b8e",
        "d38462780d3cd75a",
        "512f7a0d557c112d",
        "c5513309aa6d3234",
        "2637b7982d5cfabd",
        "d3b552e5d779c377",
        "a2687d5341538ac8",
        "b6f575dbc48fef29"
      ],
      "date": 1713859024298
    },
    {
      "type": "add",
      "id": "20684c7989377e0f",
      "item": {
        "type": "paragraph",
        "id": "20684c7989377e0f",
        "text": "He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "after": "2637b7982d5cfabd",
      "date": 1713859094596
    },
    {
      "type": "edit",
      "id": "c5513309aa6d3234",
      "item": {
        "type": "paragraph",
        "id": "c5513309aa6d3234",
        "text": "[43] G.Kahn. The semantics of a simple language for parallel processing. In Proceedings of the IFIP Congress ’74, pages 471–475, Amsterdam, 1974. Elsevier North-Holland."
      },
      "date": 1713859125781
    },
    {
      "type": "edit",
      "id": "2637b7982d5cfabd",
      "item": {
        "type": "paragraph",
        "id": "2637b7982d5cfabd",
        "text": "[44] G.Kahn and D.B.MacQueen. Coroutines and networks of parallel processes. In Proceedings of the IFIP Congress ’77, pages 993–998, Amsterdam, 1977. Elsevier North-Holland."
      },
      "date": 1713859152151
    },
    {
      "type": "edit",
      "id": "20684c7989377e0f",
      "item": {
        "type": "paragraph",
        "id": "20684c7989377e0f",
        "text": "He relates the edges of a graph with expressions and filters with functions in a pipeline dataflow program. Subcomputations, as defined through functions and using the where clause, correspond to subnetworks that can be subsumed by individual nodes. In the case of pipeline dataflow, the edges in a graph can literally be considered to be first-in-first-out queues, where successive [[Datons]] in a stream follow one another; similarly, the nodes-as-filters can be considered to \"consume\" their data as needed."
      },
      "date": 1713859250446
    },
    {
      "type": "fork",
      "date": 1713859277491
    }
  ]
}