{
  "title": "A Core Calculus for Documents",
  "story": [
    {
      "type": "paragraph",
      "id": "70b5d54fac3f43a7",
      "text": "The core contribution of our paper is a formal model of document languages. This model extends [[System F]] with the concept of templates. We provide static and dynamic semantics for templates, and we also model various run-time extensions to the system such as reference labeling and reactivity."
    },
    {
      "type": "pagefold",
      "id": "fcf748bae0bcd2de",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4367c0bf2fb48dbf",
      "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi] and related artifacts [https://doi.org/10.5281/zenodo.8409115 zenodo], [https://github.com/cognitive-engineering-lab/document-calculus github] [https://cs.brown.edu/~sk/Publications/Papers/Published/ck-core-calc-doc-lambda-ultimate-doc/paper.pdf pdf] [https://blog.brownplt.org/2023/12/28/document-calculus.html blog]"
    },
    {
      "type": "paragraph",
      "id": "8ab72aa0d6df5afb",
      "text": "Passive documents and active programs now widely comingle. Document languages include Turing-complete programming elements, and programming languages include sophisticated document notations. However, there are no formal foundations that model these languages. This matters because the interaction between document and program can be subtle and error-prone. In this paper we describe several such problems, then taxonomize and formalize document languages as levels of a document calculus. We employ the calculus as a foundation for implementing complex features such as [[Reactivity]], as well as for proving theorems about the boundary of content and computation. We intend for the document calculus to provide a theoretical basis for new document languages, and to assist designers in cleaning up the unsavory corners of existing languages."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "A Core Calculus for Documents",
        "story": []
      },
      "date": 1711451102980
    },
    {
      "item": {
        "type": "factory",
        "id": "70b5d54fac3f43a7"
      },
      "id": "70b5d54fac3f43a7",
      "type": "add",
      "date": 1711451126386
    },
    {
      "type": "edit",
      "id": "70b5d54fac3f43a7",
      "item": {
        "type": "paragraph",
        "id": "70b5d54fac3f43a7",
        "text": "The core contribution of our paper is a formal model of document languages. This model extends System F with the concept of templates. We provide static and dynamic semantics for templates, and we also model various run-time extensions to the system such as reference labeling and reactivity."
      },
      "date": 1711451128416
    },
    {
      "type": "edit",
      "id": "70b5d54fac3f43a7",
      "item": {
        "type": "paragraph",
        "id": "70b5d54fac3f43a7",
        "text": "The core contribution of our paper is a formal model of document languages. This model extends [[System F]] with the concept of templates. We provide static and dynamic semantics for templates, and we also model various run-time extensions to the system such as reference labeling and reactivity."
      },
      "date": 1711451159347
    },
    {
      "id": "fcf748bae0bcd2de",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "fcf748bae0bcd2de",
        "text": "~"
      },
      "after": "70b5d54fac3f43a7",
      "attribution": {
        "page": "String Template Programs"
      },
      "date": 1711451190094
    },
    {
      "id": "4367c0bf2fb48dbf",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. DOI 10.1145/3632865, p. 23:9."
      },
      "after": "fcf748bae0bcd2de",
      "attribution": {
        "page": "String Template Programs"
      },
      "date": 1711451193988
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. DOI 10.1145/3632865."
      },
      "date": 1711451212152
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi]"
      },
      "date": 1711451278531
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi] and related artifacts [https://doi.org/10.5281/zenodo.8409115 zenodo]"
      },
      "date": 1711451336622
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi] and related artifacts [https://doi.org/10.5281/zenodo.8409115 zenodo], [https://github.com/cognitive-engineering-lab/document-calculus github]"
      },
      "date": 1711451404958
    },
    {
      "item": {
        "type": "factory",
        "id": "8ab72aa0d6df5afb"
      },
      "id": "8ab72aa0d6df5afb",
      "type": "add",
      "after": "4367c0bf2fb48dbf",
      "date": 1711451522152
    },
    {
      "type": "edit",
      "id": "8ab72aa0d6df5afb",
      "item": {
        "type": "paragraph",
        "id": "8ab72aa0d6df5afb",
        "text": "Passive documents and active programs now widely comingle. Document languages include Turing-complete programming elements, and programming languages include sophisticated document notations. However, there are no formal foundations that model these languages. This matters because the interaction between document and program can be subtle and error-prone. In this paper we describe several such problems, then taxonomize and formalize document languages as levels of a document calculus. We employ the calculus as a foundation for implementing complex features such as reactivity, as well as for proving theorems about the boundary of content and computation. We intend for the document calculus to provide a theoretical basis for new document languages, and to assist designers in cleaning up the unsavory corners of existing languages."
      },
      "date": 1711451524070
    },
    {
      "type": "edit",
      "id": "8ab72aa0d6df5afb",
      "item": {
        "type": "paragraph",
        "id": "8ab72aa0d6df5afb",
        "text": "Passive documents and active programs now widely comingle. Document languages include Turing-complete programming elements, and programming languages include sophisticated document notations. However, there are no formal foundations that model these languages. This matters because the interaction between document and program can be subtle and error-prone. In this paper we describe several such problems, then taxonomize and formalize document languages as levels of a document calculus. We employ the calculus as a foundation for implementing complex features such as [[Reactivity]], as well as for proving theorems about the boundary of content and computation. We intend for the document calculus to provide a theoretical basis for new document languages, and to assist designers in cleaning up the unsavory corners of existing languages."
      },
      "date": 1711451589705
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi] and related artifacts [https://doi.org/10.5281/zenodo.8409115 zenodo], [https://github.com/cognitive-engineering-lab/document-calculus github] [https://cs.brown.edu/~sk/Publications/Papers/Published/ck-core-calc-doc-lambda-ultimate-doc/paper.pdf pdf]"
      },
      "date": 1711451714641
    },
    {
      "type": "edit",
      "id": "4367c0bf2fb48dbf",
      "item": {
        "type": "paragraph",
        "id": "4367c0bf2fb48dbf",
        "text": "CRICHTON, Will and KRISHNAMURTHI, Shriram, 2024. A Core Calculus for Documents: Or, Lambda: The Ultimate Document. Proceedings of the ACM on Programming Languages. 5 January 2024. Vol. 8, no. POPL, p. 23:667-23:694. [https://doi.org/10.1145/3632865 doi] and related artifacts [https://doi.org/10.5281/zenodo.8409115 zenodo], [https://github.com/cognitive-engineering-lab/document-calculus github] [https://cs.brown.edu/~sk/Publications/Papers/Published/ck-core-calc-doc-lambda-ultimate-doc/paper.pdf pdf] [https://blog.brownplt.org/2023/12/28/document-calculus.html blog]"
      },
      "date": 1711451776462
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711452665856
    }
  ]
}