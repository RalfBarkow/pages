{
  "title": "MIX Character Code",
  "story": [
    {
      "type": "paragraph",
      "id": "913b9d369cd7070e",
      "text": "Note: Zero indicates a space, 10 and 20 and 21 are Greek alphabets, and character codes higher than 55 are not valid."
    },
    {
      "type": "markdown",
      "id": "a959f7fb1b91c60b",
      "text": "# Character Codes"
    },
    {
      "type": "code",
      "id": "9879924eaf751c13",
      "text": "00 01 02 03 04 05 06 07 08 09\n ⊔  A  B  C  D  E  F  G  H  I\n10 11 12 13 14 15 16 17 18 19\n Δ  J  K  L  M  N  O  P  Q  R\n20 21 22 23 24 25 26 27 28 29\n Σ  Π  S  T  U  V  W  X  Y  Z\n30 31 32 33 34 35 36 37 38 39\n 0  1  2  3  4  5  6  7  8  9\n40 41 42 43 44 45 46 47 48 49\n .  ,  (  )  +  -  *  /  =  $\n50 51 52 53 54 55\n <  >  @  ;  :  '\n"
    },
    {
      "type": "paragraph",
      "id": "e0b7c88e1f2c9b13",
      "text": "The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). [https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]",
      "alias": "913b9d369cd7070e"
    },
    {
      "type": "markdown",
      "id": "295f9d11d0d1998b",
      "text": "# Decode \"10111 01000 00101\""
    },
    {
      "type": "paragraph",
      "id": "5c973f662794839a",
      "text": "With the specified MIX character codes, e.g. the bit pattern \"10111 01000 00101\" is to be decoded:"
    },
    {
      "type": "markdown",
      "id": "34dcbbacac8ce713",
      "text": "## Break Down the Bit Pattern"
    },
    {
      "type": "paragraph",
      "id": "e512f884091a2e7c",
      "text": "1. `10111` -> This is a 5-bit sequence."
    },
    {
      "type": "paragraph",
      "id": "1d328052a79857f9",
      "text": "2. `01000` -> Another 5-bit sequence."
    },
    {
      "type": "paragraph",
      "id": "8edee75c26b55cc6",
      "text": "3. `00101` -> Yet another 5-bit sequence."
    },
    {
      "type": "markdown",
      "id": "3794df6ca46a1e51",
      "text": "## Convert 5-Bit Sequences into Decimal"
    },
    {
      "type": "paragraph",
      "id": "df59205bf5025fb2",
      "text": "Now, let's convert each of these 5-bit sequences into decimal:\n\n1. `10111` in decimal is `23`."
    },
    {
      "type": "paragraph",
      "id": "eaba1b4e4c871fac",
      "text": "2. `01000` in decimal is `8`."
    },
    {
      "type": "paragraph",
      "id": "01ebe843f241b3d4",
      "text": "3. `00101` in decimal is `5`."
    },
    {
      "type": "markdown",
      "id": "8eea091465708c90",
      "text": "## Find the Corresponding Characters"
    },
    {
      "type": "paragraph",
      "id": "c9fc6c042f7a23b5",
      "text": "Next, let's find the characters corresponding to these decimal values in the provided MIX character code:\n\n1. `23` corresponds to the character 'T'.",
      "alias": "8eea091465708c90"
    },
    {
      "type": "paragraph",
      "id": "9a31d843321adceb",
      "text": "2. `8` corresponds to the character 'H'."
    },
    {
      "type": "paragraph",
      "id": "1d8bf1315e1354e2",
      "text": "3. `5` corresponds to the character 'E'."
    },
    {
      "type": "paragraph",
      "id": "81a2abcc9f06095d",
      "text": "Using the MIX character code, the bit pattern `10111 01000 00101` decodes to the characters 'THE'."
    },
    {
      "type": "pagefold",
      "id": "d9e534017fea8173",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "c60d5902fbe50c6d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "patricia",
      "title": "Patricia",
      "text": "Practical Algorithm To Retrieve Information Coded In Alphanumeric’s basic idea is to build a binary [[Trie]], but to avoid one-way branching by including in each node the number of bits to skip over before making the next test. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MIX Character Code",
        "story": []
      },
      "date": 1695095302278
    },
    {
      "id": "bc30785e87da880a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "bc30785e87da880a",
        "text": "is a computer architecture created by [[Donald Knuth]]. [https://esolangs.org/wiki/MIX_(Knuth) page]"
      },
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095308386
    },
    {
      "id": "c6020fcb85efb5e5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c6020fcb85efb5e5",
        "text": "Knuth is writing a grand monography [[The Art of Computer Programming]], and in older editions of that book, he used to present example subroutines and programs in this architecture."
      },
      "after": "bc30785e87da880a",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095312692
    },
    {
      "id": "a959f7fb1b91c60b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a959f7fb1b91c60b",
        "text": "Character codes [https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]"
      },
      "after": "c6020fcb85efb5e5",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095316011
    },
    {
      "id": "9879924eaf751c13",
      "type": "add",
      "item": {
        "type": "code",
        "id": "9879924eaf751c13",
        "text": "00 01 02 03 04 05 06 07 08 09\n ⊔  A  B  C  D  E  F  G  H  I\n10 11 12 13 14 15 16 17 18 19\n Δ  J  K  L  M  N  O  P  Q  R\n20 21 22 23 24 25 26 27 28 29\n Σ  Π  S  T  U  V  W  X  Y  Z\n30 31 32 33 34 35 36 37 38 39\n 0  1  2  3  4  5  6  7  8  9\n40 41 42 43 44 45 46 47 48 49\n .  ,  (  )  +  -  *  /  =  $\n50 51 52 53 54 55\n <  >  @  ;  :  '\n"
      },
      "after": "c6020fcb85efb5e5",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095320594
    },
    {
      "id": "a959f7fb1b91c60b",
      "type": "move",
      "order": [
        "bc30785e87da880a",
        "c6020fcb85efb5e5",
        "a959f7fb1b91c60b",
        "9879924eaf751c13"
      ],
      "date": 1695095323872
    },
    {
      "id": "913b9d369cd7070e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "913b9d369cd7070e",
        "text": "Note: Zero indicates a space, 10 and 20 and 21 are Greek alphabets, and character codes higher than 55 are not valid. The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). "
      },
      "after": "9879924eaf751c13",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095333984
    },
    {
      "type": "edit",
      "id": "a959f7fb1b91c60b",
      "item": {
        "type": "paragraph",
        "id": "a959f7fb1b91c60b",
        "text": "Character codes "
      },
      "date": 1695095345608
    },
    {
      "type": "edit",
      "id": "913b9d369cd7070e",
      "item": {
        "type": "paragraph",
        "id": "913b9d369cd7070e",
        "text": "Note: Zero indicates a space, 10 and 20 and 21 are Greek alphabets, and character codes higher than 55 are not valid. The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). [https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]"
      },
      "date": 1695095348334
    },
    {
      "type": "edit",
      "id": "a959f7fb1b91c60b",
      "item": {
        "type": "paragraph",
        "id": "a959f7fb1b91c60b",
        "text": "# Character Codes"
      },
      "date": 1695095364525
    },
    {
      "type": "edit",
      "id": "a959f7fb1b91c60b",
      "item": {
        "type": "markdown",
        "id": "a959f7fb1b91c60b",
        "text": "# Character Codes"
      },
      "date": 1695095365608
    },
    {
      "id": "5c973f662794839a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5c973f662794839a",
        "text": "With the specified MIX character codes, e.g. the bit pattern \"10111 01000 00101\" is to be decoded:"
      },
      "after": "913b9d369cd7070e",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095399518
    },
    {
      "id": "34dcbbacac8ce713",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "34dcbbacac8ce713",
        "text": "# Break Down the Bit Pattern"
      },
      "after": "5c973f662794839a",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095402279
    },
    {
      "id": "e512f884091a2e7c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e512f884091a2e7c",
        "text": "1. `10111` -> This is a 5-bit sequence."
      },
      "after": "34dcbbacac8ce713",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095407816
    },
    {
      "id": "1d328052a79857f9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1d328052a79857f9",
        "text": "2. `01000` -> Another 5-bit sequence."
      },
      "after": "e512f884091a2e7c",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095991207
    },
    {
      "id": "8edee75c26b55cc6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8edee75c26b55cc6",
        "text": "3. `00101` -> Yet another 5-bit sequence."
      },
      "after": "1d328052a79857f9",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095994453
    },
    {
      "id": "3794df6ca46a1e51",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "3794df6ca46a1e51",
        "text": "# Convert 5-Bit Sequences into Decimal"
      },
      "after": "8edee75c26b55cc6",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695095997419
    },
    {
      "id": "df59205bf5025fb2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "df59205bf5025fb2",
        "text": "Now, let's convert each of these 5-bit sequences into decimal:\n\n1. `10111` in decimal is `23`."
      },
      "after": "3794df6ca46a1e51",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096003007
    },
    {
      "id": "eaba1b4e4c871fac",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "eaba1b4e4c871fac",
        "text": "2. `01000` in decimal is `8`."
      },
      "after": "df59205bf5025fb2",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096013500
    },
    {
      "id": "01ebe843f241b3d4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "01ebe843f241b3d4",
        "text": "3. `00101` in decimal is `5`."
      },
      "after": "eaba1b4e4c871fac",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096017606
    },
    {
      "id": "8eea091465708c90",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "8eea091465708c90",
        "text": "# Find the Corresponding Characters"
      },
      "after": "01ebe843f241b3d4",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096031712
    },
    {
      "id": "c9fc6c042f7a23b5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c9fc6c042f7a23b5",
        "text": "Next, let's find the characters corresponding to these decimal values in the provided MIX character code:\n\n1. `23` corresponds to the character 'T'.",
        "alias": "8eea091465708c90"
      },
      "after": "8eea091465708c90",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096036182
    },
    {
      "id": "9a31d843321adceb",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9a31d843321adceb",
        "text": "2. `8` corresponds to the character 'H'."
      },
      "after": "c9fc6c042f7a23b5",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096041156
    },
    {
      "id": "1d8bf1315e1354e2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1d8bf1315e1354e2",
        "text": "3. `5` corresponds to the character 'E'."
      },
      "after": "9a31d843321adceb",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096048249
    },
    {
      "id": "81a2abcc9f06095d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "81a2abcc9f06095d",
        "text": "Using the MIX character code, the bit pattern `10111 01000 00101` decodes to the characters 'THE'."
      },
      "after": "1d8bf1315e1354e2",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096054634
    },
    {
      "id": "d9e534017fea8173",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "d9e534017fea8173",
        "text": "~"
      },
      "after": "81a2abcc9f06095d",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096059918
    },
    {
      "id": "c60d5902fbe50c6d",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "c60d5902fbe50c6d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "patricia",
        "title": "Patricia",
        "text": "Practical Algorithm To Retrieve Information Coded In Alphanumeric’s basic idea is to build a binary [[Trie]], but to avoid one-way branching by including in each node the number of bits to skip over before making the next test. "
      },
      "after": "d9e534017fea8173",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096063625
    },
    {
      "type": "remove",
      "id": "bc30785e87da880a",
      "date": 1695096078205
    },
    {
      "type": "remove",
      "id": "c6020fcb85efb5e5",
      "date": 1695096080122
    },
    {
      "type": "remove",
      "id": "a959f7fb1b91c60b",
      "date": 1695096082726
    },
    {
      "id": "913b9d369cd7070e",
      "type": "move",
      "order": [
        "913b9d369cd7070e",
        "9879924eaf751c13",
        "5c973f662794839a",
        "34dcbbacac8ce713",
        "e512f884091a2e7c",
        "1d328052a79857f9",
        "8edee75c26b55cc6",
        "3794df6ca46a1e51",
        "df59205bf5025fb2",
        "eaba1b4e4c871fac",
        "01ebe843f241b3d4",
        "8eea091465708c90",
        "c9fc6c042f7a23b5",
        "9a31d843321adceb",
        "1d8bf1315e1354e2",
        "81a2abcc9f06095d",
        "d9e534017fea8173",
        "c60d5902fbe50c6d"
      ],
      "date": 1695096091631
    },
    {
      "type": "edit",
      "id": "913b9d369cd7070e",
      "item": {
        "type": "paragraph",
        "id": "913b9d369cd7070e",
        "text": "Note: Zero indicates a space, 10 and 20 and 21 are Greek alphabets, and character codes higher than 55 are not valid."
      },
      "date": 1695096149186
    },
    {
      "id": "9879924eaf751c13",
      "type": "move",
      "order": [
        "913b9d369cd7070e",
        "9879924eaf751c13",
        "1db2424240b8697e",
        "5c973f662794839a",
        "34dcbbacac8ce713",
        "e512f884091a2e7c",
        "1d328052a79857f9",
        "8edee75c26b55cc6",
        "3794df6ca46a1e51",
        "df59205bf5025fb2",
        "eaba1b4e4c871fac",
        "01ebe843f241b3d4",
        "8eea091465708c90",
        "c9fc6c042f7a23b5",
        "9a31d843321adceb",
        "1d8bf1315e1354e2",
        "81a2abcc9f06095d",
        "d9e534017fea8173",
        "c60d5902fbe50c6d"
      ],
      "date": 1695096152451,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1695096158306
    },
    {
      "id": "e0b7c88e1f2c9b13",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e0b7c88e1f2c9b13",
        "text": "Note: Zero indicates a space, 10 and 20 and 21 are Greek alphabets, and character codes higher than 55 are not valid. The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). ",
        "alias": "913b9d369cd7070e"
      },
      "after": "9879924eaf751c13",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096220713
    },
    {
      "type": "edit",
      "id": "e0b7c88e1f2c9b13",
      "item": {
        "type": "paragraph",
        "id": "e0b7c88e1f2c9b13",
        "text": "The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). ",
        "alias": "913b9d369cd7070e"
      },
      "date": 1695096226981
    },
    {
      "type": "edit",
      "id": "e0b7c88e1f2c9b13",
      "item": {
        "type": "paragraph",
        "id": "e0b7c88e1f2c9b13",
        "text": "The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards).",
        "alias": "913b9d369cd7070e"
      },
      "date": 1695096336655
    },
    {
      "type": "add",
      "id": "295f9d11d0d1998b",
      "item": {
        "type": "paragraph",
        "id": "295f9d11d0d1998b",
        "text": "# Decode \"10111 01000 00101\""
      },
      "after": "e0b7c88e1f2c9b13",
      "date": 1695096352893
    },
    {
      "type": "edit",
      "id": "295f9d11d0d1998b",
      "item": {
        "type": "markdown",
        "id": "295f9d11d0d1998b",
        "text": "# Decode \"10111 01000 00101\""
      },
      "date": 1695096356594
    },
    {
      "type": "edit",
      "id": "34dcbbacac8ce713",
      "item": {
        "type": "markdown",
        "id": "34dcbbacac8ce713",
        "text": "## Break Down the Bit Pattern"
      },
      "date": 1695096366531
    },
    {
      "type": "edit",
      "id": "3794df6ca46a1e51",
      "item": {
        "type": "markdown",
        "id": "3794df6ca46a1e51",
        "text": "## Convert 5-Bit Sequences into Decimal"
      },
      "date": 1695096371501
    },
    {
      "type": "edit",
      "id": "8eea091465708c90",
      "item": {
        "type": "markdown",
        "id": "8eea091465708c90",
        "text": "## Find the Corresponding Characters"
      },
      "date": 1695096378274
    },
    {
      "type": "edit",
      "id": "e0b7c88e1f2c9b13",
      "item": {
        "type": "paragraph",
        "id": "e0b7c88e1f2c9b13",
        "text": "The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]",
        "alias": "913b9d369cd7070e"
      },
      "date": 1695096485728
    },
    {
      "type": "edit",
      "id": "e0b7c88e1f2c9b13",
      "item": {
        "type": "paragraph",
        "id": "e0b7c88e1f2c9b13",
        "text": "The characters above are for the old version. The new version has some Greek alphabets difference: Δ instead of Θ and Σ instead of Φ. Character code 10 is also used to represent a \"negative zero\" on a card (positions 0 and 11 punched for Hollerith cards). [https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]",
        "alias": "913b9d369cd7070e"
      },
      "date": 1695096492758
    },
    {
      "id": "a959f7fb1b91c60b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a959f7fb1b91c60b",
        "text": "Character codes [https://esolangs.org/wiki/MIX_(Knuth)#Character_codes page]"
      },
      "after": "913b9d369cd7070e",
      "attribution": {
        "page": "MIX"
      },
      "date": 1695096804238
    },
    {
      "type": "edit",
      "id": "a959f7fb1b91c60b",
      "item": {
        "type": "paragraph",
        "id": "a959f7fb1b91c60b",
        "text": "# Character Codes"
      },
      "date": 1695096817838
    },
    {
      "type": "edit",
      "id": "a959f7fb1b91c60b",
      "item": {
        "type": "markdown",
        "id": "a959f7fb1b91c60b",
        "text": "# Character Codes"
      },
      "date": 1695096831025
    }
  ]
}