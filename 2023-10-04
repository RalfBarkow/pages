{
  "title": "2023-10-04",
  "story": [
    {
      "type": "paragraph",
      "id": "7cdf87d7dce67201",
      "text": "⇒ [[Parser Pipelines]]"
    },
    {
      "type": "paragraph",
      "id": "2cbd1e428edc8ebd",
      "text": "I recommend having one line per operator in your parser pipeline. If you need multiple lines for some reason, use a let or make a helper function. [https://package.elm-lang.org/packages/elm/parser/latest page]"
    },
    {
      "type": "paragraph",
      "id": "96e1c97f16d84df1",
      "text": "⇒ [[multiComment]] [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page]"
    },
    {
      "type": "pagefold",
      "id": "fb50f29830b0a8e9",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "740232365d169b91",
      "text": "⇒ [[Circuit Structure Inverter]] ⇒ [[Lisp]] ⇒ [[Lambdatalk]] ⇒ [[Lambda Browsing]]"
    },
    {
      "type": "paragraph",
      "id": "b0ca73b6e947acd0",
      "text": "PRATHYUSH, 2023. Understanding Lambda Calculus.  [https://github.com/prathyvsh/lambda-calculus github]\n"
    },
    {
      "type": "paragraph",
      "id": "dc6468602af7a5e0",
      "text": "Networked Notebooks Catalogue [https://github.com/prathyvsh/networked-notebooks#networked-notebooks-catalogue github]"
    },
    {
      "type": "paragraph",
      "id": "3a9474a168f736da",
      "text": "[[Alain Marty]]"
    },
    {
      "type": "paragraph",
      "id": "ef0fd7f06b14d3d3",
      "text": "⇒ [[Mind’s Eye Time]]. [https://www.linkedin.com/posts/ralfbarkow_go-and-sit-somewhere-and-have-no-input-https-activity-7115213968691838976-641s?utm_source=share&utm_medium=member_desktop post] ⇐ [[Rich Hickey]]"
    },
    {
      "type": "paragraph",
      "id": "78cd3b703da19889",
      "text": "I ([[Rich Hickey]]) close my eyes and try to recall it and think about it a little bit more, and you'll find that if you've done that last step over and over again, you'll actually be able to, sit down on a hammock and put all the different parts of a pretty big problem in one This exercise is really very important, I don't know why, but it's because it forces this memory that definitely makes these things agenda items for your background line, so we'll call that the time in your mind's eye, now you're done."
    },
    {
      "type": "pagefold",
      "id": "e04cdd48ba88a081",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "42931d279897731e",
      "text": "Hi Ralf -   It’s been a while since we worked together at Advent 3B2, and I trust that things are going well with you.   I just wanted to reach out and let you know about the launch of my new enterprise content consulting practice, The Content Pool.   I'd appreciate if on your various professional interactions you could keep an ear out for any potential opportunities that you think might be a fit.   More details on what we are offering can be found at [https://the-content-pool.com/content-pool-consulting-services/ the-content-pool.com].  All the best  [[Alan J. Porter]]"
    },
    {
      "type": "image",
      "id": "ab0771c5037b06d5",
      "text": "LEUF, Bo and CUNNINGHAM, Ward, 2001. The Wiki way: quick collaboration on the Web. Boston: Addison-Wesley. ISBN 978-0-201-71499-9. ",
      "size": "thumbnail",
      "width": 183,
      "height": 230,
      "url": "/assets/plugins/image/97982ac25e8ffc51d949d8cdbe0cc59e.jpg"
    },
    {
      "type": "paragraph",
      "id": "6c392e088a8d953e",
      "text": "WIKI: Grow Your Own for Fun and Profit [https://xmlpress.net/publications/wiki-how-to-grow/ page], [https://archive.org/details/wikigrowyourownf0000port archive]"
    },
    {
      "type": "reference",
      "id": "bd3e50a3b5d84adc",
      "site": "ward.mud.asia.wiki.org",
      "slug": "why-wiki",
      "title": "Why \"wiki\"",
      "text": "The word \"wiki\" in federation wiki seems counter-intuitive. The wiki concept was originally a way to edit webpages fast, then do it cooperatively in a relatively painless way?"
    },
    {
      "type": "paragraph",
      "id": "ed7c07f65b73449e",
      "text": "[[The Wiki Way]]: Quick Collaboration on the Web "
    },
    {
      "type": "reference",
      "id": "d7725104de07d004",
      "site": "sfw.c2.com",
      "slug": "wiki-way",
      "title": "Wiki Way",
      "text": "[[Wiki Way]] is an expression of essence in a design, an interface, a tool"
    },
    {
      "type": "reference",
      "id": "ea9312c804633687",
      "site": "wellspring.fed.wiki",
      "slug": "the-way-of-the-wiki",
      "title": "The Way of the Wiki",
      "text": "We sit and ponder. And feel. [⇒ [[Parallel Poetry]] ⇒ [[Poetry of Patterns]]]"
    },
    {
      "type": "paragraph",
      "id": "7b321b91c0c9c6e9",
      "text": "this reference to a talk that he ([[Ward Cunningham]]) gave back at the computer museum where he was interviewed and he was interviewed about the wiki and in the interview on stage he talks about his experience with [[Hypercard]] …"
    },
    {
      "text": "<video poster=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Ward_Cunningham%2C_Inventor_of_the_Wiki.webm/800px--Ward_Cunningham%2C_Inventor_of_the_Wiki.webm.jpg\" src=\"https://upload.wikimedia.org/wikipedia/commons/3/31/Ward_Cunningham%2C_Inventor_of_the_Wiki.webm\" type='video/webm' width=\"420\" controls>This is fallback content to display for user agents that do not support the video tag.</video>\n<br></br>\nInterview with Ward Cunningham, inventor of the wiki - <a href=\"https://commons.wikimedia.org/wiki/File:Ward_Cunningham,_Inventor_of_the_Wiki.webm\" target=\"_blank\">wikimedia</a>",
      "type": "html",
      "id": "c26630ac-01de-4855-86da-a297bfa4a813"
    },
    {
      "type": "reference",
      "id": "f2930609501de66f",
      "site": "code.fed.wiki.org",
      "slug": "hypercard",
      "title": "HyperCard",
      "text": "HyperCard combines graphics, scripting and persistence into an innovative approach to application programming."
    },
    {
      "type": "paragraph",
      "id": "d0b734382d2391c3",
      "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[Stigmergic Emergence]], [[Fedwiki Unfolding]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged [[unfold]]ed as a wiki."
    },
    {
      "type": "paragraph",
      "id": "fe436ba033760578",
      "text": "⇒ [[Complexity That Empowers]] ⇒ [[HyperCard]] ⇒ [[Hypertext]]"
    },
    {
      "type": "paragraph",
      "id": "49c70f6d6ad3d6d6",
      "text": "KUHLEN, Rainer, 1991. Hypertext: ein nicht-lineares Medium zwischen Buch und Wissensbank. Berlin: Springer. Edition SEL-Stiftung. ISBN 978-3-540-53566-9. \n"
    },
    {
      "type": "paragraph",
      "id": "3df3e1374b70b99f",
      "text": "[[HyperCard]] 8, 12, 13, 19,42,47,54,55, 72,76,80,95,156,167,187,205,221"
    },
    {
      "type": "paragraph",
      "id": "b95b38955c727a4c",
      "text": "Ein Buch mit seinen begrenzten nicht-linearen Möglichkeiten über Hypertext mit seinen sehr viel erweiterten nicht-linearen Möglichkeiten zu schreiben, ist zumindest etwas delikat."
    },
    {
      "type": "paragraph",
      "id": "daaded8d94e56cf5",
      "text": "Ein Beispiel für ein Buch im Hypertextstil ist Horn (1989), im übrigen auch sonst in seiner drastischen graphischen Aufbereitung ein lustiges Buch, obwohl sicherlich sehr ernst gemeint. Ein (allerdings nicht sehr weit fortgeschrittener) Versuch der \"Hypertextualisierung\" eines Buches ist auch der von Jonassen/Mandl (1990) herausgegebene Sammelband \"[[Designing Hypermedia for Learning]]\". Zur Zeit (Anfang 1991) laufen Bestrebungen der ACM unter der Federführung von [[Bob Akscyn]], die bisherigen englischsprachigen Hypertextkonferenzen (vgl. Abschnitt 1.4) als Hypertext aufzubereiten und anzubieten, wie es versuchsweise schon mit dem dem Thema Hypertext gewidmeten Sonderheft der Communications of the ACM (Vol. 31, No.7, Juli 1988) geschehen ist (für [[HyperCard]] und HyperTIES)."
    },
    {
      "type": "paragraph",
      "id": "ed1229c1c81133d1",
      "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Human-Übersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch über Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überflüssig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
    },
    {
      "type": "paragraph",
      "id": "9a2c9dcacff5aabb",
      "text": "Zertifikatskurs Digital Learning Technologies 2024 [https://www.data2type.de/home/zertifikatskurs-digital-learning-technologies-2024 page]"
    },
    {
      "type": "reference",
      "id": "6289c5bde4b8d107",
      "site": "wiki.ralfbarkow.ch",
      "slug": "unfolding-sequence",
      "title": "Unfolding Sequence",
      "text": "[[Greg Bryant]]: \"Here's an attempt to explain 'unfolding sequences', and include computer people in the audience. Unfolding sequences are natural, pervasive, and extremely powerful. But we don't notice them or use them enough.\" [https://twitter.com/greg_bryant/status/1483962627277549569?s=20&t=yrPPt2XXhdzzqf1z-k1XoQ tweet], [https://beautiful.software/docs/intro_to_sequences_transcript.html page], [https://gregbryant.com/ site]"
    },
    {
      "type": "paragraph",
      "id": "8cf853ea479244f9",
      "text": "⇒ [[Smoothly Unfolding Sequences]]"
    },
    {
      "type": "reference",
      "id": "4923c79d8ef91bc1",
      "site": "wiki.ralfbarkow.ch",
      "slug": "thoughts-on-the-aspen-meeting",
      "title": "Thoughts on the Aspen Meeting",
      "text": "After listening to comments made in Aspen, and afterwards, I ([[Christopher Alexander]]) was very puzzled. I've come to believe that participants in the Aspen meeting must have found themselves unable to retain their experience with [[Gatemaker]], or understand the experimental process that led to the program in its present early form. [https://www.gregbryant.com/grogbrat/aspen97/TOJOY.html page]"
    },
    {
      "type": "reference",
      "id": "0b672033677dbab1",
      "site": "wiki.ralfbarkow.ch",
      "slug": "centre-for-environmental-structure",
      "title": "Centre for Environmental Structure",
      "text": "was founded by the renowned architect, Christopher Alexander, in 1967 to house his research, teaching and building projects. [https://www.jstor.org/publisher/cfes page]"
    },
    {
      "type": "reference",
      "id": "6c97b625be11b0fd",
      "site": "wiki.ralfbarkow.ch",
      "slug": "parsing",
      "title": "Parsing",
      "text": "is the process of transforming text into meaningful data. [https://exercism.org/tracks/elm/concepts/parsing page]"
    },
    {
      "type": "reference",
      "id": "bb0c9198f8bc9532",
      "site": "code.fed.wiki.org",
      "slug": "exploratory-parsing",
      "title": "Exploratory Parsing",
      "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
    },
    {
      "type": "markdown",
      "id": "9c5fd63c6ea59354",
      "text": "> This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you [[Write the Grammar That Fits]] the text, not the other way around."
    },
    {
      "type": "paragraph",
      "id": "83ab158952568a79",
      "text": "⇒ [[Parse a String with the Grammar]] [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/tests/MainSpec.elm#L8-L22 code]"
    },
    {
      "type": "reference",
      "id": "2a3ada31ee14ac06",
      "site": "wiki.ralfbarkow.ch",
      "slug": "write-the-grammar-that-fits",
      "title": "Write the Grammar That Fits",
      "text": "This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
    },
    {
      "type": "markdown",
      "id": "61ca48cc7531ce73",
      "text": "> For example, we write the grammar that fits the text in the form of the following [[Elm]] source [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L15-L22 code]."
    },
    {
      "type": "code",
      "id": "5a696e64cd863ed7",
      "text": "grammarString : String\ngrammarString =\n    \"\"\"\n    start <- <char+> {action}\n    char <- [a-z]    \n    \"\"\"\n\n"
    },
    {
      "type": "reference",
      "id": "f6490ef4ca1d62df",
      "site": "wiki.ralfbarkow.ch",
      "slug": "pegn",
      "title": "PEGN",
      "text": "is a language for defining languages. [https://pegn.dev/ site], [https://github.com/rwxrob/pegn-spec github]"
    },
    {
      "type": "paragraph",
      "id": "452f55d439bca702",
      "text": "I replaced the grammarString with the JSON specification in PEGN. [https://github.com/RalfBarkow/vite-elm-dojo/commit/aae4867de5723710f07c8c02e897326c221bb8fa commit] and get"
    },
    {
      "type": "markdown",
      "id": "150933e36963ce33",
      "text": "> Parse error: Unexpected match at position 11"
    },
    {
      "type": "paragraph",
      "id": "ec555a8d07dd81b6",
      "text": "The position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
    },
    {
      "type": "code",
      "id": "58b34f4d2fd07adf",
      "text": "Grammar <-- ws* Value ws*\n          ↑ 11"
    },
    {
      "type": "paragraph",
      "id": "ba08e9e5e4d3a7b8",
      "text": "One hyphen minus too many? [https://github.com/RalfBarkow/vite-elm-dojo/commit/dbeddfaa6de86ec406ca710e1d7d73f27b172861 commit]"
    },
    {
      "type": "paragraph",
      "id": "c1670e8c67e73ec5",
      "text": "DM from [[Romāns Potašovs]] via [https://elmlang.slack.com/archives/D05UU7PQLDB/p1696334531857749 slack]"
    },
    {
      "type": "markdown",
      "id": "f1b0514c2ab963f7",
      "text": "> btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n>\n> Kalabibishkis\n  2:14 PM\nhere you go - 1.0.1 [https://package.elm-lang.org/packages/microelm/elm-peg/1.0.1/ package] - thanks for reminder.. (edited)"
    },
    {
      "type": "paragraph",
      "id": "7c3dcc4415463534",
      "text": "⇒ [[elm-peg]] [https://github.com/microelm/elm-peg/tree/1.0.1 v1.0.1]: add more reliable error catch [https://github.com/microelm/elm-peg/commit/2b03f1d90ec42f520702106821c989ffc84e1858 commit]"
    },
    {
      "type": "paragraph",
      "id": "fdc11e8c92551fe3",
      "text": "QUEIROZ DE MEDEIROS, Sergio, 2023. From Antlr Grammars to Peg Parsers. Online. SSRN Scholarly Paper. 12 March 2023. Rochester, NY. 4385789. [Accessed 4 October 2023]. ANTLR is a popular parsing tool. As there are ANTLR grammars available for around 270 languages, new applications related to such languages often use these grammars as a guide. However, the task of getting an equivalent non-ANTLR parser for these applications may not be trivial and it may involve a much grammar rewriting.Parsing Expression Grammars (PEGs) is a formalism used to define deterministic top-down parses, which is the basis of dozens of parser generators.To facilitate the development of new applications based on PEGs parsers, we investigate the automatic translation from ANTLR grammars to PEGs. We discuss the main issues involved in this translation and we implement tools that build a PEG-based parser from an ANTLR grammar.We evaluate our automatic translation on grammars from a public repository of ANTLR grammars. To assess the equivalence between the ANTLR and the PEG parsers generated from a grammar, we use a grammar-based test generation approach, which uses the original ANTLR grammar, as also example files used to validate the ANTLR parser.Results indicate that our approach can reduce significantly  the manual intervention necessary to get from an ANTLR grammar a PEG parser whose behavior looks equivalent to the corresponding ANTLR one."
    },
    {
      "type": "markdown",
      "id": "0d22a64f685c0405",
      "text": "> Below, we have the example of a PEG that matches C multiline comments: COMMENT ← ‘/∗’ (!‘∗/’ .) ∗ ‘∗/’"
    },
    {
      "type": "paragraph",
      "id": "4243d33d1ca32b55",
      "text": "I copied this PEG rule into the grammar ring, got an error message, and 'talked' to the chat thing about it."
    },
    {
      "type": "markdown",
      "id": "df17bdc8a2476e90",
      "text": "The error message \"Parse error: Unexpected match when parseNotPredicate at position 50\" indicates that there was an unexpected match while trying to parse the input, specifically within a `parseNotPredicate`. The position mentioned (position 50) refers to the 50th character in the input string.\n\nIn the context of your grammar, this issue likely arises from the `comment` rule:\n\n```elm\ncomment <- /\\\\* (!\\\\*/ .) * \\\\*/\n```\n\nThe `(!\\\\*/ .)*` part of the rule is intended to match any character except `*` and `\\/` (the closing of a C-style comment), but it seems there may be an issue with how the negation is handled.\n\nTo troubleshoot this issue, you can try the following:\n\n1. Verify the input: Make sure the input string being parsed contains a valid C-style multiline comment.\n\n2. Check the escaping: Ensure that the escape sequences `\\\\` are correctly escaping the characters. In Elm strings, you need to use `\\\\` to represent a literal backslash.\n\n3. Test the regular expression separately: You can test the regular expression `/\\\\* (!\\\\*/ .) * \\\\*/` in a regular expression tester to ensure it matches C-style comments correctly.\n\nIf the issue persists, you may need to review the PEG grammar and the input string to identify any discrepancies or errors in the pattern matching. (ChatGPT September 25 Version)\n"
    },
    {
      "type": "paragraph",
      "id": "816f2cd9aba842df",
      "text": "ChatGPT seems to confuse PEG and regular expressions. ⇒ [[PEG vs Regular Expression]]"
    },
    {
      "type": "paragraph",
      "id": "d6ca682c8332030f",
      "text": "So where are we now within which [[Sequence]]? [⇐ [[Smoothly Unfolding Sequences]]]"
    },
    {
      "type": "paragraph",
      "id": "12e8d73b1bc07f51",
      "text": "We can describe the [[Sequence]] as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
    },
    {
      "type": "paragraph",
      "id": "1cab2a6067c38c9b",
      "text": "[[From EBNF to PEG]]"
    },
    {
      "type": "paragraph",
      "id": "7ffa8cb5ecbbcdfb",
      "text": "MainSpec.elm and Main.elm"
    },
    {
      "type": "paragraph",
      "id": "3b7637e91e307ec4",
      "text": "⇒ [[Programming Elm]] by [[Jeremy Fairbank]], Chapter 9, [[Test Elm Applications]]"
    },
    {
      "type": "pagefold",
      "id": "c0d70abcdf074885",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "0df5e0c705e48591",
      "text": "Keyboard for writing, camera for vlogging [https://rwxrob.github.io/zet/2371/ page] [⇐[[Mobile Wiki]]]"
    },
    {
      "type": "paragraph",
      "id": "09ed63e398714722",
      "text": "⇒ [[Sonoma]]"
    },
    {
      "type": "paragraph",
      "id": "862baa7449476a6f",
      "text": "Blockierungsmodus [https://support.apple.com/de-ch/HT212650 page]"
    },
    {
      "type": "paragraph",
      "id": "7c365214ff54c796",
      "text": "⇒ topgrade [https://github.com/topgrade-rs/topgrade github], [https://topgrade-rs.github.io/ site]"
    },
    {
      "type": "paragraph",
      "id": "5e4b095bb5ed2dba",
      "text": "Error: Your Xcode (14.2) is too outdated.\nPlease update to Xcode 15.0 (or delete it).\nXcode can be updated from the App Store."
    },
    {
      "type": "code",
      "id": "bf287cdf24edb4bc",
      "text": "sudo xcodebuild -license"
    },
    {
      "type": "paragraph",
      "id": "44490fd9b6363fd4",
      "text": "sudoers file"
    },
    {
      "type": "pagefold",
      "id": "34722489b21e3c82",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "29660d86ed64863b",
      "text": "The Accessors library [https://package.elm-lang.org/packages/MackeyRMS/elm-accessors/1.0.1/ package], [https://github.com/MackeyRMS/elm-accessors/tree/1.0.1 github]"
    },
    {
      "type": "paragraph",
      "id": "54aaad01fad6375d",
      "text": "⇒ [[Parsing Expression Grammars]]"
    },
    {
      "type": "paragraph",
      "id": "fd3bb5c99b2f3595",
      "text": "[[Parsley]]"
    },
    {
      "type": "paragraph",
      "id": "a8661940ad0b9825",
      "text": "[[Principled Procedural Parsing]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-10-04",
        "story": []
      },
      "date": 1696393348192
    },
    {
      "item": {
        "type": "factory",
        "id": "2cbd1e428edc8ebd"
      },
      "id": "2cbd1e428edc8ebd",
      "type": "add",
      "date": 1696393362246
    },
    {
      "type": "edit",
      "id": "2cbd1e428edc8ebd",
      "item": {
        "type": "paragraph",
        "id": "2cbd1e428edc8ebd",
        "text": "I recommend having one line per operator in your parser pipeline. If you need multiple lines for some reason, use a let or make a helper function."
      },
      "date": 1696393364207
    },
    {
      "item": {
        "type": "factory",
        "id": "7cdf87d7dce67201"
      },
      "id": "7cdf87d7dce67201",
      "type": "add",
      "after": "2cbd1e428edc8ebd",
      "date": 1696393380102
    },
    {
      "id": "7cdf87d7dce67201",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd"
      ],
      "date": 1696393381638
    },
    {
      "type": "edit",
      "id": "7cdf87d7dce67201",
      "item": {
        "type": "paragraph",
        "id": "7cdf87d7dce67201",
        "text": "⇒ [[Parser Pipelines]]"
      },
      "date": 1696393391271
    },
    {
      "type": "edit",
      "id": "2cbd1e428edc8ebd",
      "item": {
        "type": "paragraph",
        "id": "2cbd1e428edc8ebd",
        "text": "I recommend having one line per operator in your parser pipeline. If you need multiple lines for some reason, use a let or make a helper function. [https://package.elm-lang.org/packages/elm/parser/latest page]"
      },
      "date": 1696393402728
    },
    {
      "item": {
        "type": "factory",
        "id": "96e1c97f16d84df1"
      },
      "id": "96e1c97f16d84df1",
      "type": "add",
      "after": "2cbd1e428edc8ebd",
      "date": 1696393454887
    },
    {
      "type": "edit",
      "id": "96e1c97f16d84df1",
      "item": {
        "type": "paragraph",
        "id": "96e1c97f16d84df1",
        "text": "multiComment "
      },
      "date": 1696393457240
    },
    {
      "type": "edit",
      "id": "96e1c97f16d84df1",
      "item": {
        "type": "paragraph",
        "id": "96e1c97f16d84df1",
        "text": "multiComment [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page]"
      },
      "date": 1696393471083
    },
    {
      "item": {
        "type": "factory",
        "id": "afae66717216d4c3"
      },
      "id": "afae66717216d4c3",
      "type": "add",
      "after": "96e1c97f16d84df1",
      "date": 1696393526815
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "Idea: 'Abuse' multicomment parser for wiki style links."
      },
      "date": 1696393543727
    },
    {
      "item": {
        "type": "factory",
        "id": "2c6d600a1d85831a"
      },
      "id": "2c6d600a1d85831a",
      "type": "add",
      "after": "afae66717216d4c3",
      "date": 1696393553512
    },
    {
      "type": "edit",
      "id": "2c6d600a1d85831a",
      "item": {
        "type": "code",
        "id": "2c6d600a1d85831a",
        "text": "multiComment : String -> String -> Nestable -> Parser ()"
      },
      "date": 1696393555487
    },
    {
      "item": {
        "type": "factory",
        "id": "3d9e9fc43bc79ae5"
      },
      "id": "3d9e9fc43bc79ae5",
      "type": "add",
      "after": "2c6d600a1d85831a",
      "date": 1696393562037
    },
    {
      "type": "edit",
      "id": "3d9e9fc43bc79ae5",
      "item": {
        "type": "paragraph",
        "id": "3d9e9fc43bc79ae5",
        "text": " Parse multi-line comments. So if you wanted to parse Elm whitespace or JS whitespace, you could say:\n\n"
      },
      "date": 1696393564003
    },
    {
      "type": "edit",
      "id": "3d9e9fc43bc79ae5",
      "item": {
        "type": "paragraph",
        "id": "3d9e9fc43bc79ae5",
        "text": "Parse multi-line comments. So if you wanted to parse Elm whitespace or JS whitespace, you could say:\n\n"
      },
      "date": 1696393567563
    },
    {
      "item": {
        "type": "factory",
        "id": "29523afeaa9309df"
      },
      "id": "29523afeaa9309df",
      "type": "add",
      "after": "3d9e9fc43bc79ae5",
      "date": 1696393577644
    },
    {
      "type": "edit",
      "id": "29523afeaa9309df",
      "item": {
        "type": "code",
        "id": "29523afeaa9309df",
        "text": "elm : Parser ()\nelm =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"--\"\n      , multiComment \"{-\" \"-}\" Nestable\n      , spaces\n      ]\n\njs : Parser ()\njs =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"//\"\n      , multiComment \"/*\" \"*/\" NotNestable\n      , chompWhile (\\c -> c == ' ' || c == '\\n' || c == '\\r' || c == '\\t')\n      ]\n\nifProgress : Parser a -> Int -> Parser (Step Int ())\nifProgress parser offset =\n  succeed identity\n    |. parser\n    |= getOffset\n    |> map (\\newOffset -> if offset == newOffset then Done () else Loop newOffset)"
      },
      "date": 1696393579295
    },
    {
      "item": {
        "type": "factory",
        "id": "afb623c32c39d3ea"
      },
      "id": "afb623c32c39d3ea",
      "type": "add",
      "after": "29523afeaa9309df",
      "date": 1696393596572
    },
    {
      "type": "edit",
      "id": "afb623c32c39d3ea",
      "item": {
        "type": "paragraph",
        "id": "afb623c32c39d3ea",
        "text": "Note: The fact that spaces comes last in the definition of elm is very important! It can succeed without consuming any characters, so if it were the first option, it would always succeed and bypass the others! (Same is true of chompWhile in js.) This possibility of success without consumption is also why wee need the ifProgress helper. It detects if there is no more whitespace to consume."
      },
      "date": 1696393598116
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "Idea: 'Abuse' multiComment parser for wiki style links."
      },
      "date": 1696395392978
    },
    {
      "item": {
        "type": "factory",
        "id": "fb50f29830b0a8e9"
      },
      "id": "fb50f29830b0a8e9",
      "type": "add",
      "after": "afb623c32c39d3ea",
      "date": 1696396329097
    },
    {
      "type": "edit",
      "id": "fb50f29830b0a8e9",
      "item": {
        "type": "pagefold",
        "id": "fb50f29830b0a8e9",
        "text": "~"
      },
      "date": 1696396332156
    },
    {
      "item": {
        "type": "factory",
        "id": "740232365d169b91"
      },
      "id": "740232365d169b91",
      "type": "add",
      "after": "fb50f29830b0a8e9",
      "date": 1696396339798
    },
    {
      "type": "edit",
      "id": "740232365d169b91",
      "item": {
        "type": "paragraph",
        "id": "740232365d169b91",
        "text": "⇒ [[Circuit Structure Inverter]]"
      },
      "date": 1696396350822
    },
    {
      "id": "cc5411b6980e2170",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "cc5411b6980e2170",
        "text": "⇒ [[Lambdatalk]] ⇒ [[Lambda Browsing]]"
      },
      "after": "740232365d169b91",
      "attribution": {
        "page": "Lisp"
      },
      "date": 1696396368285
    },
    {
      "type": "remove",
      "id": "cc5411b6980e2170",
      "date": 1696396372827
    },
    {
      "type": "edit",
      "id": "740232365d169b91",
      "item": {
        "type": "paragraph",
        "id": "740232365d169b91",
        "text": "⇒ [[Circuit Structure Inverter]] ⇒ [[Lisp]] ⇒ [[Lambdatalk]] ⇒ [[Lambda Browsing]]"
      },
      "date": 1696396385062
    },
    {
      "item": {
        "type": "factory",
        "id": "b0ca73b6e947acd0"
      },
      "id": "b0ca73b6e947acd0",
      "type": "add",
      "after": "740232365d169b91",
      "date": 1696396411276
    },
    {
      "type": "edit",
      "id": "b0ca73b6e947acd0",
      "item": {
        "type": "paragraph",
        "id": "b0ca73b6e947acd0",
        "text": "\nPRATHYUSH, 2023. Understanding Lambda Calculus. Online. 30 September 2023. [Accessed 3 October 2023]. Available from: https://github.com/prathyvsh/lambda-calculusGuide elucidating Lambda Calculus\n"
      },
      "date": 1696396413029
    },
    {
      "type": "edit",
      "id": "b0ca73b6e947acd0",
      "item": {
        "type": "paragraph",
        "id": "b0ca73b6e947acd0",
        "text": "PRATHYUSH, 2023. Understanding Lambda Calculus. Online. 30 September 2023. [Accessed 3 October 2023]. Available from: https://github.com/prathyvsh/lambda-calculusGuide elucidating Lambda Calculus\n"
      },
      "date": 1696396420181
    },
    {
      "item": {
        "type": "factory",
        "id": "dc6468602af7a5e0"
      },
      "id": "dc6468602af7a5e0",
      "type": "add",
      "after": "b0ca73b6e947acd0",
      "date": 1696396618077
    },
    {
      "type": "edit",
      "id": "dc6468602af7a5e0",
      "item": {
        "type": "paragraph",
        "id": "dc6468602af7a5e0",
        "text": "Networked Notebooks Catalogue"
      },
      "date": 1696396621315
    },
    {
      "type": "edit",
      "id": "b0ca73b6e947acd0",
      "item": {
        "type": "paragraph",
        "id": "b0ca73b6e947acd0",
        "text": "PRATHYUSH, 2023. Understanding Lambda Calculus.  [https://github.com/prathyvsh/lambda-calculus github]\n"
      },
      "date": 1696396644825
    },
    {
      "type": "edit",
      "id": "dc6468602af7a5e0",
      "item": {
        "type": "paragraph",
        "id": "dc6468602af7a5e0",
        "text": "Networked Notebooks Catalogue [https://github.com/prathyvsh/networked-notebooks#networked-notebooks-catalogue github]"
      },
      "date": 1696396683308
    },
    {
      "item": {
        "type": "factory",
        "id": "3a9474a168f736da"
      },
      "id": "3a9474a168f736da",
      "type": "add",
      "after": "dc6468602af7a5e0",
      "date": 1696396753066
    },
    {
      "type": "edit",
      "id": "3a9474a168f736da",
      "item": {
        "type": "paragraph",
        "id": "3a9474a168f736da",
        "text": "[[Alain Marty]]"
      },
      "date": 1696396756926
    },
    {
      "item": {
        "type": "factory",
        "id": "ef0fd7f06b14d3d3"
      },
      "id": "ef0fd7f06b14d3d3",
      "type": "add",
      "after": "3a9474a168f736da",
      "date": 1696397349231
    },
    {
      "type": "edit",
      "id": "ef0fd7f06b14d3d3",
      "item": {
        "type": "paragraph",
        "id": "ef0fd7f06b14d3d3",
        "text": "⇒ [[Mind’s Eye Time]]"
      },
      "date": 1696397358837
    },
    {
      "type": "edit",
      "id": "ef0fd7f06b14d3d3",
      "item": {
        "type": "paragraph",
        "id": "ef0fd7f06b14d3d3",
        "text": "⇒ [[Mind’s Eye Time]] ⇐ [[Rich Hickey]]"
      },
      "date": 1696397389120
    },
    {
      "item": {
        "type": "factory",
        "id": "78cd3b703da19889"
      },
      "id": "78cd3b703da19889",
      "type": "add",
      "after": "ef0fd7f06b14d3d3",
      "date": 1696397613988
    },
    {
      "type": "edit",
      "id": "78cd3b703da19889",
      "item": {
        "type": "paragraph",
        "id": "78cd3b703da19889",
        "text": "I ([[Rich Hickey]]) close my eyes and try to recall it and think about it a little bit more, and you'll find that if you've done that last step over and over again, you'll actually be able to, sit down on a hammock and put all the different parts of a pretty big problem in one This exercise is really very important, I don't know why, but it's because it forces this memory that definitely makes these things agenda items for your background line, so we'll call that the time in your mind's eye, now you're done."
      },
      "date": 1696397615640
    },
    {
      "item": {
        "type": "factory",
        "id": "e04cdd48ba88a081"
      },
      "id": "e04cdd48ba88a081",
      "type": "add",
      "after": "78cd3b703da19889",
      "date": 1696398661882
    },
    {
      "type": "edit",
      "id": "e04cdd48ba88a081",
      "item": {
        "type": "pagefold",
        "id": "e04cdd48ba88a081",
        "text": "~"
      },
      "date": 1696398666494
    },
    {
      "item": {
        "type": "factory",
        "id": "42931d279897731e"
      },
      "id": "42931d279897731e",
      "type": "add",
      "after": "e04cdd48ba88a081",
      "date": 1696398667915
    },
    {
      "type": "edit",
      "id": "42931d279897731e",
      "item": {
        "type": "paragraph",
        "id": "42931d279897731e",
        "text": "Hi Ralf -   It’s been a while since we worked together at Advent 3B2, and I trust that things are going well with you.   I just wanted to reach out and let you know about the launch of my new enterprise content consulting practice, The Content Pool.   I'd appreciate if on your various professional interactions you could keep an ear out for any potential opportunities that you think might be a fit.   More details on what we are offering can be found at https://the-content-pool.com/content-pool-consulting-services/.  All the best  Alan"
      },
      "date": 1696398669570
    },
    {
      "type": "edit",
      "id": "42931d279897731e",
      "item": {
        "type": "paragraph",
        "id": "42931d279897731e",
        "text": "Hi Ralf -   It’s been a while since we worked together at Advent 3B2, and I trust that things are going well with you.   I just wanted to reach out and let you know about the launch of my new enterprise content consulting practice, The Content Pool.   I'd appreciate if on your various professional interactions you could keep an ear out for any potential opportunities that you think might be a fit.   More details on what we are offering can be found at [https://the-content-pool.com/content-pool-consulting-services/ the-content-pool.com].  All the best  Alan"
      },
      "date": 1696398777291
    },
    {
      "type": "edit",
      "id": "ef0fd7f06b14d3d3",
      "item": {
        "type": "paragraph",
        "id": "ef0fd7f06b14d3d3",
        "text": "⇒ [[Mind’s Eye Time]] [https://www.linkedin.com/posts/ralfbarkow_go-and-sit-somewhere-and-have-no-input-https-activity-7115213968691838976-641s?utm_source=share&utm_medium=member_desktop post] ⇐ [[Rich Hickey]]"
      },
      "date": 1696399289264
    },
    {
      "type": "edit",
      "id": "ef0fd7f06b14d3d3",
      "item": {
        "type": "paragraph",
        "id": "ef0fd7f06b14d3d3",
        "text": "⇒ [[Mind’s Eye Time]]. [https://www.linkedin.com/posts/ralfbarkow_go-and-sit-somewhere-and-have-no-input-https-activity-7115213968691838976-641s?utm_source=share&utm_medium=member_desktop post] ⇐ [[Rich Hickey]]"
      },
      "date": 1696399293801
    },
    {
      "item": {
        "type": "factory",
        "id": "9a2c9dcacff5aabb"
      },
      "id": "9a2c9dcacff5aabb",
      "type": "add",
      "after": "42931d279897731e",
      "date": 1696399600609
    },
    {
      "type": "edit",
      "id": "9a2c9dcacff5aabb",
      "item": {
        "type": "paragraph",
        "id": "9a2c9dcacff5aabb",
        "text": "Zertifikatskurs Digital Learning Technologies 2024"
      },
      "date": 1696399603825
    },
    {
      "type": "edit",
      "id": "9a2c9dcacff5aabb",
      "item": {
        "type": "paragraph",
        "id": "9a2c9dcacff5aabb",
        "text": "Zertifikatskurs Digital Learning Technologies 2024 [https://www.data2type.de/home/zertifikatskurs-digital-learning-technologies-2024 page]"
      },
      "date": 1696399709690
    },
    {
      "type": "add",
      "id": "6c392e088a8d953e",
      "item": {
        "type": "paragraph",
        "id": "6c392e088a8d953e",
        "text": "WIKI: Grow Your Own for Fun and Profit"
      },
      "after": "42931d279897731e",
      "date": 1696400017563
    },
    {
      "type": "edit",
      "id": "6c392e088a8d953e",
      "item": {
        "type": "paragraph",
        "id": "6c392e088a8d953e",
        "text": "WIKI: Grow Your Own for Fun and Profit [https://xmlpress.net/publications/wiki-how-to-grow/ page]"
      },
      "date": 1696400027133
    },
    {
      "type": "edit",
      "id": "6c392e088a8d953e",
      "item": {
        "type": "paragraph",
        "id": "6c392e088a8d953e",
        "text": "WIKI: Grow Your Own for Fun and Profit [https://xmlpress.net/publications/wiki-how-to-grow/ page], [https://archive.org/details/wikigrowyourownf0000port archive]"
      },
      "date": 1696400290422
    },
    {
      "type": "edit",
      "id": "42931d279897731e",
      "item": {
        "type": "paragraph",
        "id": "42931d279897731e",
        "text": "Hi Ralf -   It’s been a while since we worked together at Advent 3B2, and I trust that things are going well with you.   I just wanted to reach out and let you know about the launch of my new enterprise content consulting practice, The Content Pool.   I'd appreciate if on your various professional interactions you could keep an ear out for any potential opportunities that you think might be a fit.   More details on what we are offering can be found at [https://the-content-pool.com/content-pool-consulting-services/ the-content-pool.com].  All the best  [[Alan J. Porter]]"
      },
      "date": 1696400469821
    },
    {
      "type": "add",
      "id": "ed7c07f65b73449e",
      "item": {
        "type": "paragraph",
        "id": "ed7c07f65b73449e",
        "text": "The Wiki Way: Quick Collaboration on the Web "
      },
      "after": "6c392e088a8d953e",
      "date": 1696401738357
    },
    {
      "item": {
        "type": "factory",
        "id": "ab0771c5037b06d5"
      },
      "id": "ab0771c5037b06d5",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696401744746
    },
    {
      "type": "edit",
      "id": "ab0771c5037b06d5",
      "item": {
        "type": "image",
        "id": "ab0771c5037b06d5",
        "text": "Uploaded image",
        "size": "thumbnail",
        "width": 183,
        "height": 230,
        "url": "/assets/plugins/image/97982ac25e8ffc51d949d8cdbe0cc59e.jpg"
      },
      "date": 1696401762619
    },
    {
      "type": "edit",
      "id": "ab0771c5037b06d5",
      "item": {
        "type": "image",
        "id": "ab0771c5037b06d5",
        "text": "\nLEUF, Bo and CUNNINGHAM, Ward, 2001. The Wiki way: quick collaboration on the Web. . Boston: Addison-Wesley. ISBN 978-0-201-71499-9. TK5105.8882 .L48 2001\n",
        "size": "thumbnail",
        "width": 183,
        "height": 230,
        "url": "/assets/plugins/image/97982ac25e8ffc51d949d8cdbe0cc59e.jpg"
      },
      "date": 1696401773660
    },
    {
      "type": "edit",
      "id": "ab0771c5037b06d5",
      "item": {
        "type": "image",
        "id": "ab0771c5037b06d5",
        "text": "LEUF, Bo and CUNNINGHAM, Ward, 2001. The Wiki way: quick collaboration on the Web. Boston: Addison-Wesley. ISBN 978-0-201-71499-9. ",
        "size": "thumbnail",
        "width": 183,
        "height": 230,
        "url": "/assets/plugins/image/97982ac25e8ffc51d949d8cdbe0cc59e.jpg"
      },
      "date": 1696401785962
    },
    {
      "id": "ab0771c5037b06d5",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "6c392e088a8d953e",
        "ab0771c5037b06d5",
        "ed7c07f65b73449e",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696401795085
    },
    {
      "id": "ab0771c5037b06d5",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "ed7c07f65b73449e",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696401798869
    },
    {
      "type": "edit",
      "id": "ed7c07f65b73449e",
      "item": {
        "type": "paragraph",
        "id": "ed7c07f65b73449e",
        "text": "[[The Wiki Way]]: Quick Collaboration on the Web "
      },
      "date": 1696401873568
    },
    {
      "item": {
        "type": "factory",
        "id": "d7725104de07d004"
      },
      "id": "d7725104de07d004",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696401978765
    },
    {
      "type": "edit",
      "id": "d7725104de07d004",
      "item": {
        "type": "reference",
        "id": "d7725104de07d004",
        "site": "sfw.c2.com",
        "slug": "wiki-way",
        "title": "Wiki Way",
        "text": "[[Wiki Way]] is an expression of essence in a design, an interface, a tool"
      },
      "date": 1696401981156
    },
    {
      "id": "d7725104de07d004",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696401983546
    },
    {
      "item": {
        "type": "factory",
        "id": "ea9312c804633687"
      },
      "id": "ea9312c804633687",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696402757670
    },
    {
      "type": "edit",
      "id": "ea9312c804633687",
      "item": {
        "type": "reference",
        "id": "ea9312c804633687",
        "site": "wellspring.fed.wiki",
        "slug": "the-way-of-the-wiki",
        "title": "The Way of the Wiki",
        "text": "We sit and ponder. And feel."
      },
      "date": 1696402760234
    },
    {
      "id": "ea9312c804633687",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696402763373
    },
    {
      "item": {
        "type": "factory",
        "id": "bd3e50a3b5d84adc"
      },
      "id": "bd3e50a3b5d84adc",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696403261495
    },
    {
      "type": "edit",
      "id": "bd3e50a3b5d84adc",
      "item": {
        "type": "reference",
        "id": "bd3e50a3b5d84adc",
        "site": "ward.mud.asia.wiki.org",
        "slug": "why-wiki",
        "title": "Why \"wiki\"",
        "text": "The word \"wiki\" in federation wiki seems counter-intuitive. The wiki concept was originally a way to edit webpages fast, then do it cooperatively in a relatively painless way?"
      },
      "date": 1696403264961
    },
    {
      "id": "bd3e50a3b5d84adc",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696403279003
    },
    {
      "item": {
        "type": "factory",
        "id": "f2930609501de66f"
      },
      "id": "f2930609501de66f",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696404960100
    },
    {
      "type": "edit",
      "id": "f2930609501de66f",
      "item": {
        "type": "reference",
        "id": "f2930609501de66f",
        "site": "code.fed.wiki.org",
        "slug": "hypercard",
        "title": "HyperCard",
        "text": "HyperCard combines graphics, scripting and persistence into an innovative approach to application programming."
      },
      "date": 1696404963524
    },
    {
      "id": "f2930609501de66f",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "f2930609501de66f",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696404964888
    },
    {
      "item": {
        "type": "factory",
        "id": "fe436ba033760578"
      },
      "id": "fe436ba033760578",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696405216861
    },
    {
      "type": "edit",
      "id": "fe436ba033760578",
      "item": {
        "type": "paragraph",
        "id": "fe436ba033760578",
        "text": "[[Complexity That Empowers]]"
      },
      "date": 1696405222046
    },
    {
      "type": "edit",
      "id": "fe436ba033760578",
      "item": {
        "type": "paragraph",
        "id": "fe436ba033760578",
        "text": "⇒ [[Complexity That Empowers]] ⇒ [[HyperCard]] ⇒ [[Hypertext]]"
      },
      "date": 1696405389340
    },
    {
      "item": {
        "type": "factory",
        "id": "49c70f6d6ad3d6d6"
      },
      "id": "49c70f6d6ad3d6d6",
      "type": "add",
      "after": "fe436ba033760578",
      "date": 1696406019738
    },
    {
      "type": "edit",
      "id": "49c70f6d6ad3d6d6",
      "item": {
        "type": "paragraph",
        "id": "49c70f6d6ad3d6d6",
        "text": "KUHLEN, Rainer, 1991. Hypertext: ein nicht-lineares Medium zwischen Buch und Wissensbank. Berlin: Springer. Edition SEL-Stiftung. ISBN 978-3-540-53566-9. \n"
      },
      "date": 1696406028675
    },
    {
      "item": {
        "type": "factory",
        "id": "3df3e1374b70b99f"
      },
      "id": "3df3e1374b70b99f",
      "type": "add",
      "after": "49c70f6d6ad3d6d6",
      "date": 1696406108810
    },
    {
      "type": "edit",
      "id": "3df3e1374b70b99f",
      "item": {
        "type": "paragraph",
        "id": "3df3e1374b70b99f",
        "text": "[[HyperCard]] 8, 12, 13, 19,42,47,54,55, 72,76,80,95,156,167,187,205,221"
      },
      "date": 1696406116710
    },
    {
      "item": {
        "type": "factory",
        "id": "ed1229c1c81133d1"
      },
      "id": "ed1229c1c81133d1",
      "type": "add",
      "after": "3df3e1374b70b99f",
      "date": 1696406148661
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ahnliches Gefiihl hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgesprach iiber die Perspektiven des automatischen Ubersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zuganglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie AuBerungen iibersetzten, die darauf abzielten, eben jene Tatigkeit des HumanUbersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daB Biicher durch Hypertexte nicht so bald iiberfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406150297
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ahnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgesprach iiber die Perspektiven des automatischen Ubersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zuganglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie AuBerungen iibersetzten, die darauf abzielten, eben jene Tatigkeit des HumanUbersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daB Biicher durch Hypertexte nicht so bald iiberfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406163748
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgesprach iiber die Perspektiven des automatischen Ubersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zuganglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie AuBerungen iibersetzten, die darauf abzielten, eben jene Tatigkeit des HumanUbersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daB Biicher durch Hypertexte nicht so bald iiberfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406170783
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie AüBerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Humanübersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daB Biicher durch Hypertexte nicht so bald iiberfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406231565
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Humanübersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406269534
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Human-Übersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch iiber Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406288302
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Human-Übersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch Über Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406300927
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Human-Übersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch über Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überfliissig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406313150
    },
    {
      "type": "edit",
      "id": "ed1229c1c81133d1",
      "item": {
        "type": "paragraph",
        "id": "ed1229c1c81133d1",
        "text": "Ein ähnliches [[Gefühl]] hatte der Autor, als er vor einiger Zeit an einem intemationalen, multilingualen Fachgespräch über die Perspektiven des automatischen Übersetzens und Echtzeitdolmetschens teilnahm, das mit hohem intellektuellem Einsatz von Personen, Dolmetscherinnen, allen Teilnehmem zugänglich gemacht wurde. Was haben wohl diese Frauen gedacht, als sie Aüßerungen übersetzten, die darauf abzielten, eben jene Tätigkeit des Human-Übersetzens oder -Dolmetschens in langerer Perspektive ersetzbar zu machen? Mit diesem Buch über Hypertext demonstrieren wir unsere Erwartung, daß Bücher durch Hypertexte nicht so bald überflüssig werden, auch wenn letztere den ersteren zumindest Konkurrenz machen werden."
      },
      "date": 1696406325580
    },
    {
      "type": "add",
      "id": "b95b38955c727a4c",
      "item": {
        "type": "paragraph",
        "id": "b95b38955c727a4c",
        "text": "Ein Buch mit seinen begrenzten nicht-linearen Möglichkeiten über Hypertext mit seinen sehr viel erweiterten nicht-linearen Möglichkeiten zu schreiben, ist zumindest etwas"
      },
      "after": "3df3e1374b70b99f",
      "date": 1696406432808
    },
    {
      "type": "edit",
      "id": "b95b38955c727a4c",
      "item": {
        "type": "paragraph",
        "id": "b95b38955c727a4c",
        "text": "Ein Buch mit seinen begrenzten nicht-linearen Möglichkeiten über Hypertext mit seinen sehr viel erweiterten nicht-linearen Möglichkeiten zu schreiben, ist zumindest etwas delikat."
      },
      "date": 1696406441373
    },
    {
      "type": "add",
      "id": "daaded8d94e56cf5",
      "item": {
        "type": "paragraph",
        "id": "daaded8d94e56cf5",
        "text": "Ein Beispiel für ein Buch im Hypertextstil ist Horn (1989), im übrigen auch sonst in seiner drastischen graphischen Aufbereitung ein lustiges Buch, obwohl sicherlich sehr ernst gemeint. Ein (allerdings nicht sehr weit fortgeschrittener) Versuch der \"Hypertextualisierung\" eines Buches ist auch der von Jonassen/Mandl (1990) herausgegebene Sammelband \"Designing Hypermedia for Learning\". Zur Zeit (Anfang 1991) laufen Bestrebungen der ACM unter der Federführung von Bob Akscyn, die bisherigen englischsprachigen Hypertextkonferenzen (vgl. Abschnitt 1.4) als Hypertext aufzubereiten und anzubieten, wie es versuchsweise schon mit dem dem Thema Hypertext gewidmeten Sonderheft der Communications of the ACM (Vol. 31, No.7, Juli 1988) geschehen ist (für HyperCard und HyperTIES)."
      },
      "after": "b95b38955c727a4c",
      "date": 1696406521076
    },
    {
      "type": "edit",
      "id": "daaded8d94e56cf5",
      "item": {
        "type": "paragraph",
        "id": "daaded8d94e56cf5",
        "text": "Ein Beispiel für ein Buch im Hypertextstil ist Horn (1989), im übrigen auch sonst in seiner drastischen graphischen Aufbereitung ein lustiges Buch, obwohl sicherlich sehr ernst gemeint. Ein (allerdings nicht sehr weit fortgeschrittener) Versuch der \"Hypertextualisierung\" eines Buches ist auch der von Jonassen/Mandl (1990) herausgegebene Sammelband \"Designing Hypermedia for Learning\". Zur Zeit (Anfang 1991) laufen Bestrebungen der ACM unter der Federführung von [[Bob Akscyn]], die bisherigen englischsprachigen Hypertextkonferenzen (vgl. Abschnitt 1.4) als Hypertext aufzubereiten und anzubieten, wie es versuchsweise schon mit dem dem Thema Hypertext gewidmeten Sonderheft der Communications of the ACM (Vol. 31, No.7, Juli 1988) geschehen ist (für HyperCard und HyperTIES)."
      },
      "date": 1696406575711
    },
    {
      "type": "edit",
      "id": "daaded8d94e56cf5",
      "item": {
        "type": "paragraph",
        "id": "daaded8d94e56cf5",
        "text": "Ein Beispiel für ein Buch im Hypertextstil ist Horn (1989), im übrigen auch sonst in seiner drastischen graphischen Aufbereitung ein lustiges Buch, obwohl sicherlich sehr ernst gemeint. Ein (allerdings nicht sehr weit fortgeschrittener) Versuch der \"Hypertextualisierung\" eines Buches ist auch der von Jonassen/Mandl (1990) herausgegebene Sammelband \"Designing Hypermedia for Learning\". Zur Zeit (Anfang 1991) laufen Bestrebungen der ACM unter der Federführung von [[Bob Akscyn]], die bisherigen englischsprachigen Hypertextkonferenzen (vgl. Abschnitt 1.4) als Hypertext aufzubereiten und anzubieten, wie es versuchsweise schon mit dem dem Thema Hypertext gewidmeten Sonderheft der Communications of the ACM (Vol. 31, No.7, Juli 1988) geschehen ist (für [[HyperCard]] und HyperTIES)."
      },
      "date": 1696406636446
    },
    {
      "type": "edit",
      "id": "daaded8d94e56cf5",
      "item": {
        "type": "paragraph",
        "id": "daaded8d94e56cf5",
        "text": "Ein Beispiel für ein Buch im Hypertextstil ist Horn (1989), im übrigen auch sonst in seiner drastischen graphischen Aufbereitung ein lustiges Buch, obwohl sicherlich sehr ernst gemeint. Ein (allerdings nicht sehr weit fortgeschrittener) Versuch der \"Hypertextualisierung\" eines Buches ist auch der von Jonassen/Mandl (1990) herausgegebene Sammelband \"[[Designing Hypermedia for Learning]]\". Zur Zeit (Anfang 1991) laufen Bestrebungen der ACM unter der Federführung von [[Bob Akscyn]], die bisherigen englischsprachigen Hypertextkonferenzen (vgl. Abschnitt 1.4) als Hypertext aufzubereiten und anzubieten, wie es versuchsweise schon mit dem dem Thema Hypertext gewidmeten Sonderheft der Communications of the ACM (Vol. 31, No.7, Juli 1988) geschehen ist (für [[HyperCard]] und HyperTIES)."
      },
      "date": 1696407093356
    },
    {
      "item": {
        "type": "factory",
        "id": "7b321b91c0c9c6e9"
      },
      "id": "7b321b91c0c9c6e9",
      "type": "add",
      "after": "ed1229c1c81133d1",
      "date": 1696407732340
    },
    {
      "id": "7b321b91c0c9c6e9",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "f2930609501de66f",
        "9a2c9dcacff5aabb",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1"
      ],
      "date": 1696407740165
    },
    {
      "type": "edit",
      "id": "7b321b91c0c9c6e9",
      "item": {
        "type": "paragraph",
        "id": "7b321b91c0c9c6e9",
        "text": "this reference to a talk that he gave back at the computer museum where he was interviewed and he was interviewed about the wiki and in the interview on stage he talks about his experience with hypercard and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hyper card particularly when it was done collectively when when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the when when we talk about the the wikipedia it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696407743136
    },
    {
      "type": "edit",
      "id": "7b321b91c0c9c6e9",
      "item": {
        "type": "paragraph",
        "id": "7b321b91c0c9c6e9",
        "text": "this reference to a talk that he gave back at the computer museum where he was interviewed and he was interviewed about the wiki and in the interview on stage he talks about his experience with hypercard"
      },
      "date": 1696407787675
    },
    {
      "type": "add",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hyper card particularly when it was done collectively when when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the when when we talk about the the wikipedia it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "after": "7b321b91c0c9c6e9",
      "date": 1696407789883
    },
    {
      "id": "f2930609501de66f",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "9a2c9dcacff5aabb",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1"
      ],
      "date": 1696407796625
    },
    {
      "type": "edit",
      "id": "7b321b91c0c9c6e9",
      "item": {
        "type": "paragraph",
        "id": "7b321b91c0c9c6e9",
        "text": "this reference to a talk that he ([[Ward Cunningham]]) gave back at the computer museum where he was interviewed and he was interviewed about the wiki and in the interview on stage he talks about his experience with hypercard"
      },
      "date": 1696407815966
    },
    {
      "id": "c26630ac-01de-4855-86da-a297bfa4a813",
      "type": "add",
      "item": {
        "text": "<video poster=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/31/Ward_Cunningham%2C_Inventor_of_the_Wiki.webm/800px--Ward_Cunningham%2C_Inventor_of_the_Wiki.webm.jpg\" src=\"https://upload.wikimedia.org/wikipedia/commons/3/31/Ward_Cunningham%2C_Inventor_of_the_Wiki.webm\" type='video/webm' width=\"420\" controls>This is fallback content to display for user agents that do not support the video tag.</video>\n<br></br>\nInterview with Ward Cunningham, inventor of the wiki - <a href=\"https://commons.wikimedia.org/wiki/File:Ward_Cunningham,_Inventor_of_the_Wiki.webm\" target=\"_blank\">wikimedia</a>",
        "type": "html",
        "id": "c26630ac-01de-4855-86da-a297bfa4a813"
      },
      "after": "7b321b91c0c9c6e9",
      "attribution": {
        "page": "Ward Cunningham"
      },
      "date": 1696407844757
    },
    {
      "type": "edit",
      "id": "ea9312c804633687",
      "item": {
        "type": "reference",
        "id": "ea9312c804633687",
        "site": "wellspring.fed.wiki",
        "slug": "the-way-of-the-wiki",
        "title": "The Way of the Wiki",
        "text": "We sit and ponder. And feel. [⇒ [[Parallel Poetry]] ⇒ [[Parallel Poetry]]]"
      },
      "date": 1696408181405
    },
    {
      "type": "edit",
      "id": "ea9312c804633687",
      "item": {
        "type": "reference",
        "id": "ea9312c804633687",
        "site": "wellspring.fed.wiki",
        "slug": "the-way-of-the-wiki",
        "title": "The Way of the Wiki",
        "text": "We sit and ponder. And feel. [⇒ [[Parallel Poetry]] ⇒ [[Parallel Poetry]] ⇒ [[Poetry of Patterns]]]"
      },
      "date": 1696408204090
    },
    {
      "type": "edit",
      "id": "ea9312c804633687",
      "item": {
        "type": "reference",
        "id": "ea9312c804633687",
        "site": "wellspring.fed.wiki",
        "slug": "the-way-of-the-wiki",
        "title": "The Way of the Wiki",
        "text": "We sit and ponder. And feel. [⇒ [[Parallel Poetry]] ⇒ [[Poetry of Patterns]]]"
      },
      "date": 1696408219531
    },
    {
      "type": "edit",
      "id": "7b321b91c0c9c6e9",
      "item": {
        "type": "paragraph",
        "id": "7b321b91c0c9c6e9",
        "text": "this reference to a talk that he ([[Ward Cunningham]]) gave back at the computer museum where he was interviewed and he was interviewed about the wiki and in the interview on stage he talks about his experience with [[Hypercard]] …"
      },
      "date": 1696408260123
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hyper card particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the when when we talk about the the wikipedia it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408293503
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hyper card particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the when when we talk about the the wikipedia it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408313897
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the when when we talk about the the wikipedia it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408337010
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to sigmargy is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408497101
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or iteration it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408579914
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmatic unfolding or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408832445
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408861863
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408917930
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[Stigmergic Emergence]], [[]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408948175
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[Stigmergic Emergence]], [[Fedwiki Unfolding]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki"
      },
      "date": 1696408998583
    },
    {
      "id": "9a2c9dcacff5aabb",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb"
      ],
      "date": 1696409105510
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[Stigmergic Emergence]], [[Fedwiki Unfolding]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged unfolded as a wiki."
      },
      "date": 1696409158144
    },
    {
      "type": "edit",
      "id": "d0b734382d2391c3",
      "item": {
        "type": "paragraph",
        "id": "d0b734382d2391c3",
        "text": "and what it felt like to actually use hypercard when and how that feeling of using hypercard really created the understanding for what he sought to do in the original wiki and but when he talked about it he talked about the feeling of using hypercard particularly when it was done collectively when the engineers at tektronix would come around his cubicle and just watch him be able to not only modify cards on the fly but then to allow something to happen and that something to happen was the really critical piece of what that experience was of hypercard which was what ward figured out was when you did not have you could put a button onto a card and if that button was pressed on the card which was its hyperlink and it did a search into the database if it did not find the card with that name it would actually ask you do you want to create a card and this was this critical piece because what he what happened is that he would begin to put in little buttons in there of information he knew he didn't have it wasn't in the database but when engineers would sit there and click on it and realize that it was missing they would immediately lean into it and say well i can tell you about that i can and they would lean into that and that feeling of something to emerge that it was happening that creative potential of the engineers to be storytellers to tell the story about tektronix's engineering and that was this feeling of creativity and that later became recognized as the – when we talk about the the wikipedia – it was the red link it was the red link that is that appeared on wikipedia where a word where you could link to a word but if that word did not go to a page you would appear in red and it was recognized that red links were essential for the emergence of wikipedia because people would say well i know that and they would then create the page and that was we talk about stigmergic unfolding [⇒ [[Stigmergic Emergence]], [[Fedwiki Unfolding]]] or [[Stigmergic Iteration]] it's like that's the key to [[Stigmergy]] is the recognition that there's something here that needs to be shared but is not known yet someone in that community will know it and they will go and create it and so this was at the core of why wikipedia actually emerged [[unfold]]ed as a wiki."
      },
      "date": 1696409177474
    },
    {
      "item": {
        "type": "factory",
        "id": "6289c5bde4b8d107"
      },
      "id": "6289c5bde4b8d107",
      "type": "add",
      "after": "9a2c9dcacff5aabb",
      "date": 1696409429854
    },
    {
      "type": "edit",
      "id": "6289c5bde4b8d107",
      "item": {
        "type": "reference",
        "id": "6289c5bde4b8d107",
        "site": "wiki.ralfbarkow.ch",
        "slug": "unfolding-sequence",
        "title": "Unfolding Sequence",
        "text": "[[Greg Bryant]]: \"Here's an attempt to explain 'unfolding sequences', and include computer people in the audience. Unfolding sequences are natural, pervasive, and extremely powerful. But we don't notice them or use them enough.\" [https://twitter.com/greg_bryant/status/1483962627277549569?s=20&t=yrPPt2XXhdzzqf1z-k1XoQ tweet], [https://beautiful.software/docs/intro_to_sequences_transcript.html page], [https://gregbryant.com/ site]"
      },
      "date": 1696409432283
    },
    {
      "item": {
        "type": "factory",
        "id": "8cf853ea479244f9"
      },
      "id": "8cf853ea479244f9",
      "type": "add",
      "after": "6289c5bde4b8d107",
      "date": 1696409449504
    },
    {
      "type": "edit",
      "id": "8cf853ea479244f9",
      "item": {
        "type": "paragraph",
        "id": "8cf853ea479244f9",
        "text": "\"Smoothly unfolding sequences Which of the things that we make are good? Which are beautiful? Which are wonderful, coherent, clear, natural, and full of life? Good work may be hard to describe in words, but we know how it makes us feel. So how do we create work like that? And how can we make the act of working, the process of working itself, something that's smooth, comprehensive, flowing, focusing, comprehensible, reliable, well-informed, rich and rewarding, personal and pleasant? And if we figure out how to do all that, how can we explain it to people, and empower them to do good work? An architect, scientist, and Berkeley professor, Christopher Alexander, spent decades trying to answer these kinds of questions. He found that the most useful places to look for answers were on the one hand in traditional communities, that build their own structures in harmony with their lives, and on the other hand in living organisms, which produce by far the most beautiful and complex systems on the planet. Alexander publicly explored these questions in the realm of architecture, art, and urban planning, starting in the late 1950s. But surprisingly his work had a regular impact on the way computing has progressed. An insanely prolific impact. Structured programming, structure decomposition, design methods, object-oriented programming, software patterns, pattern languages of programming, incremental improvement, extreme programming scrum, agile, continuous delivery, life cycle management, user interface and user experience principles and design tools. All these, and many more, were influenced by a series of groundbreaking books by Alexander. Even the wiki was invented to store patterns as Alexander defined them in his classic book 'A Pattern Language'. And his work influenced countless successful products from Java's first frameworks, to SimCity, Spore, and The Sims. But in his core research and practice, Alexander was not completely satisfied with the quality of the work that people do by using only patterns, user directed design, incremental construction, and pattern languages. He knew early on that these tools were not sufficient to energize people to generate truly wonderful work. There was something else required. A feeling, an innate sensibility and appreciation for life, which people need to find within themselves. One of the best contexts for discovery and use of this sensitivity were tools that I like to call 'smoothly unfolding sequences'. In this context, 'sequences' means a series of prioritized steps that an experienced designer or engineer or builder would take so that they, and their colleagues, and their users, could together build the most well-adapted, custom, beautiful thing possible in the smoothest and most robust way possible, together making the best decisions, and adjusting the growing system to changing conditions, revealed facts, and emerging structures, at every stage in the development of their project. Within specific domains done properly these sequences could be tested, debugged if you will, smoothed out, and corrected, until they could be used repeatedly, and people who experienced them could use them for new kinds of projects, once the general principles as expressed by the sequence were understood. Or, they could write new sequences. Overall, after much experimentation during many group projects, Alexander concluded that these natural sequences significantly improved communication, process, and satisfaction with the resulting quality, in any domain. But this result, which could be considered Alexander's next big idea, has not yet been adopted by the computer industry. So, what might that be like? Imagine you have a technology stack. You want people to become good at using it. You get your best people together to make a complex product, one they know quite well how to build with your stack. They write a special kind of plan for building this product, which we'll call a sequence. They now build it, following this sequence. But of course it's not quite right so they correct the sequence. You're left with a product, and an unfolding sequence. Then this or another group tests the resulting sequence, building the product again. Eventually you have a well-debugged 'example unfolding' of a complex product with your stack. If the sequence is really good anyone who follows it will be using an expert guide to making any application with that stack. At the same time, problems with the stack itself will become apparent. You can then make other sequences if there are different kinds of approaches to making use of your stack In 1996 Alexander and I embarked on building a psychologically effective computer program that would facilitate some complex design work. The user would be guided by just this kind of evocative, smoothly unfolding sequence of suggestions about the kinds of structures that should be emerging, by their hand, at a series of important stages. Thanks to a grant from Bill Joy at Sun Microsystems we had our first real successes with it in 1997. The program was called 'Gatemaker', and we gave it to people who had no idea how to design a good gate. Here is a recording of musician Peter Gabriel making use of the sequence. The result has been natural and satisfying for everyone who has been guided to use it. Sequences may turn out to be the best way to communicate ideas about the design and development of anything complex. The authoring of good sequences records institutional and community knowledge, in a way that increases quality and reduces risk in future projects. Unfortunately the dot-com boom and crash interfered with our initial work. But we've discovered many important things about unfolding sequences, over the years, which we would like to share with people. We believe everyone will find that they feel very familiar. In the description below read more about how to join us and where we're going.\""
      },
      "date": 1696409450977
    },
    {
      "type": "edit",
      "id": "8cf853ea479244f9",
      "item": {
        "type": "paragraph",
        "id": "8cf853ea479244f9",
        "text": "\"Smoothly unfolding sequences"
      },
      "date": 1696409532075
    },
    {
      "type": "add",
      "id": "03f7dc0afcac5478",
      "item": {
        "type": "paragraph",
        "id": "03f7dc0afcac5478",
        "text": "Which of the things that we make are good? Which are beautiful? Which are wonderful, coherent, clear, natural, and full of life? Good work may be hard to describe in words, but we know how it makes us feel. So how do we create work like that? And how can we make the act of working, the process of working itself, something that's smooth, comprehensive, flowing, focusing, comprehensible, reliable, well-informed, rich and rewarding, personal and pleasant? And if we figure out how to do all that, how can we explain it to people, and empower them to do good work? An architect, scientist, and Berkeley professor, Christopher Alexander, spent decades trying to answer these kinds of questions. He found that the most useful places to look for answers were on the one hand in traditional communities, that build their own structures in harmony with their lives, and on the other hand in living organisms, which produce by far the most beautiful and complex systems on the planet. Alexander publicly explored these questions in the realm of architecture, art, and urban planning, starting in the late 1950s. But surprisingly his work had a regular impact on the way computing has progressed. An insanely prolific impact. Structured programming, structure decomposition, design methods, object-oriented programming, software patterns, pattern languages of programming, incremental improvement, extreme programming scrum, agile, continuous delivery, life cycle management, user interface and user experience principles and design tools. All these, and many more, were influenced by a series of groundbreaking books by Alexander. Even the wiki was invented to store patterns as Alexander defined them in his classic book 'A Pattern Language'. And his work influenced countless successful products from Java's first frameworks, to SimCity, Spore, and The Sims. But in his core research and practice, Alexander was not completely satisfied with the quality of the work that people do by using only patterns, user directed design, incremental construction, and pattern languages. He knew early on that these tools were not sufficient to energize people to generate truly wonderful work. There was something else required. A feeling, an innate sensibility and appreciation for life, which people need to find within themselves. One of the best contexts for discovery and use of this sensitivity were tools that I like to call 'smoothly unfolding sequences'. In this context, 'sequences' means a series of prioritized steps that an experienced designer or engineer or builder would take so that they, and their colleagues, and their users, could together build the most well-adapted, custom, beautiful thing possible in the smoothest and most robust way possible, together making the best decisions, and adjusting the growing system to changing conditions, revealed facts, and emerging structures, at every stage in the development of their project. Within specific domains done properly these sequences could be tested, debugged if you will, smoothed out, and corrected, until they could be used repeatedly, and people who experienced them could use them for new kinds of projects, once the general principles as expressed by the sequence were understood. Or, they could write new sequences. Overall, after much experimentation during many group projects, Alexander concluded that these natural sequences significantly improved communication, process, and satisfaction with the resulting quality, in any domain. But this result, which could be considered Alexander's next big idea, has not yet been adopted by the computer industry. So, what might that be like? Imagine you have a technology stack. You want people to become good at using it. You get your best people together to make a complex product, one they know quite well how to build with your stack. They write a special kind of plan for building this product, which we'll call a sequence. They now build it, following this sequence. But of course it's not quite right so they correct the sequence. You're left with a product, and an unfolding sequence. Then this or another group tests the resulting sequence, building the product again. Eventually you have a well-debugged 'example unfolding' of a complex product with your stack. If the sequence is really good anyone who follows it will be using an expert guide to making any application with that stack. At the same time, problems with the stack itself will become apparent. You can then make other sequences if there are different kinds of approaches to making use of your stack In 1996 Alexander and I embarked on building a psychologically effective computer program that would facilitate some complex design work. The user would be guided by just this kind of evocative, smoothly unfolding sequence of suggestions about the kinds of structures that should be emerging, by their hand, at a series of important stages. Thanks to a grant from Bill Joy at Sun Microsystems we had our first real successes with it in 1997. The program was called 'Gatemaker', and we gave it to people who had no idea how to design a good gate. Here is a recording of musician Peter Gabriel making use of the sequence. The result has been natural and satisfying for everyone who has been guided to use it. Sequences may turn out to be the best way to communicate ideas about the design and development of anything complex. The authoring of good sequences records institutional and community knowledge, in a way that increases quality and reduces risk in future projects. Unfortunately the dot-com boom and crash interfered with our initial work. But we've discovered many important things about unfolding sequences, over the years, which we would like to share with people. We believe everyone will find that they feel very familiar. In the description below read more about how to join us and where we're going.\""
      },
      "after": "8cf853ea479244f9",
      "date": 1696409537664
    },
    {
      "type": "edit",
      "id": "8cf853ea479244f9",
      "item": {
        "type": "paragraph",
        "id": "8cf853ea479244f9",
        "text": "Smoothly unfolding sequences"
      },
      "date": 1696409546251
    },
    {
      "type": "edit",
      "id": "8cf853ea479244f9",
      "item": {
        "type": "paragraph",
        "id": "8cf853ea479244f9",
        "text": "[[Smoothly Unfolding Sequences]]"
      },
      "date": 1696409555478
    },
    {
      "id": "03f7dc0afcac5478",
      "type": "remove",
      "removedTo": {
        "page": "Smoothly Unfolding Sequences"
      },
      "date": 1696409663063
    },
    {
      "type": "edit",
      "id": "8cf853ea479244f9",
      "item": {
        "type": "paragraph",
        "id": "8cf853ea479244f9",
        "text": "⇒ [[Smoothly Unfolding Sequences]]"
      },
      "date": 1696409673669
    },
    {
      "item": {
        "type": "factory",
        "id": "abb17e02a8a4e0c8"
      },
      "id": "abb17e02a8a4e0c8",
      "type": "add",
      "after": "8cf853ea479244f9",
      "date": 1696413023522
    },
    {
      "type": "edit",
      "id": "abb17e02a8a4e0c8",
      "item": {
        "type": "paragraph",
        "id": "abb17e02a8a4e0c8",
        "text": "Thoughts on the Aspen Meeting"
      },
      "date": 1696413026857
    },
    {
      "type": "edit",
      "id": "abb17e02a8a4e0c8",
      "item": {
        "type": "paragraph",
        "id": "abb17e02a8a4e0c8",
        "text": "[[Thoughts on the Aspen Meeting]]"
      },
      "date": 1696413037207
    },
    {
      "item": {
        "type": "factory",
        "id": "4923c79d8ef91bc1"
      },
      "id": "4923c79d8ef91bc1",
      "type": "add",
      "after": "abb17e02a8a4e0c8",
      "date": 1696413420447
    },
    {
      "type": "edit",
      "id": "4923c79d8ef91bc1",
      "item": {
        "type": "reference",
        "id": "4923c79d8ef91bc1",
        "site": "wiki.ralfbarkow.ch",
        "slug": "thoughts-on-the-aspen-meeting",
        "title": "Thoughts on the Aspen Meeting",
        "text": "After listening to comments made in Aspen, and afterwards, I ([[Christopher Alexander]]) was very puzzled. I've come to believe that participants in the Aspen meeting must have found themselves unable to retain their experience with [[Gatemaker]], or understand the experimental process that led to the program in its present early form. [https://www.gregbryant.com/grogbrat/aspen97/TOJOY.html page]"
      },
      "date": 1696413423525
    },
    {
      "type": "remove",
      "id": "abb17e02a8a4e0c8",
      "date": 1696413427043
    },
    {
      "item": {
        "type": "factory",
        "id": "a3e3ac1d1bc0a03f"
      },
      "id": "a3e3ac1d1bc0a03f",
      "type": "add",
      "after": "4923c79d8ef91bc1",
      "date": 1696413483323
    },
    {
      "type": "edit",
      "id": "a3e3ac1d1bc0a03f",
      "item": {
        "type": "paragraph",
        "id": "a3e3ac1d1bc0a03f",
        "text": "[[Centre for Environmental Structure]]"
      },
      "date": 1696413489320
    },
    {
      "item": {
        "type": "factory",
        "id": "0b672033677dbab1"
      },
      "id": "0b672033677dbab1",
      "type": "add",
      "after": "a3e3ac1d1bc0a03f",
      "date": 1696413805591
    },
    {
      "type": "edit",
      "id": "0b672033677dbab1",
      "item": {
        "type": "reference",
        "id": "0b672033677dbab1",
        "site": "wiki.ralfbarkow.ch",
        "slug": "centre-for-environmental-structure",
        "title": "Centre for Environmental Structure",
        "text": "was founded by the renowned architect, Christopher Alexander, in 1967 to house his research, teaching and building projects. [https://www.jstor.org/publisher/cfes page]"
      },
      "date": 1696413807893
    },
    {
      "type": "remove",
      "id": "a3e3ac1d1bc0a03f",
      "date": 1696413811312
    },
    {
      "item": {
        "type": "factory",
        "id": "6c97b625be11b0fd"
      },
      "id": "6c97b625be11b0fd",
      "type": "add",
      "after": "0b672033677dbab1",
      "date": 1696413848208
    },
    {
      "type": "edit",
      "id": "6c97b625be11b0fd",
      "item": {
        "type": "reference",
        "id": "6c97b625be11b0fd",
        "site": "wiki.ralfbarkow.ch",
        "slug": "parsing",
        "title": "Parsing",
        "text": "is the process of transforming text into meaningful data. [https://exercism.org/tracks/elm/concepts/parsing page]"
      },
      "date": 1696413851289
    },
    {
      "item": {
        "type": "factory",
        "id": "bb0c9198f8bc9532"
      },
      "id": "bb0c9198f8bc9532",
      "type": "add",
      "after": "6c97b625be11b0fd",
      "date": 1696413871488
    },
    {
      "type": "edit",
      "id": "bb0c9198f8bc9532",
      "item": {
        "type": "reference",
        "id": "bb0c9198f8bc9532",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "date": 1696413874663
    },
    {
      "id": "9c5fd63c6ea59354",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9c5fd63c6ea59354",
        "text": "This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "after": "bb0c9198f8bc9532",
      "attribution": {
        "page": "Exploratory Parsing"
      },
      "date": 1696413898798
    },
    {
      "type": "edit",
      "id": "9c5fd63c6ea59354",
      "item": {
        "type": "paragraph",
        "id": "9c5fd63c6ea59354",
        "text": "> This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "date": 1696413904065
    },
    {
      "type": "edit",
      "id": "9c5fd63c6ea59354",
      "item": {
        "type": "markdown",
        "id": "9c5fd63c6ea59354",
        "text": "> This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "date": 1696413905066
    },
    {
      "type": "edit",
      "id": "9c5fd63c6ea59354",
      "item": {
        "type": "markdown",
        "id": "9c5fd63c6ea59354",
        "text": "> This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you [[Write the Grammar That Fits the Text]], not the other way around."
      },
      "date": 1696413942158
    },
    {
      "type": "edit",
      "id": "9c5fd63c6ea59354",
      "item": {
        "type": "markdown",
        "id": "9c5fd63c6ea59354",
        "text": "> This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you [[Write the Grammar That Fits]] the text, not the other way around."
      },
      "date": 1696413965562
    },
    {
      "item": {
        "type": "factory",
        "id": "83ab158952568a79"
      },
      "id": "83ab158952568a79",
      "type": "add",
      "after": "9c5fd63c6ea59354",
      "date": 1696414127911
    },
    {
      "type": "edit",
      "id": "83ab158952568a79",
      "item": {
        "type": "paragraph",
        "id": "83ab158952568a79",
        "text": "Parse a string with the grammar"
      },
      "date": 1696414131208
    },
    {
      "item": {
        "type": "factory",
        "id": "b5eab3649c24c1f9"
      },
      "id": "b5eab3649c24c1f9",
      "type": "add",
      "after": "83ab158952568a79",
      "date": 1696414152555
    },
    {
      "type": "edit",
      "id": "b5eab3649c24c1f9",
      "item": {
        "type": "code",
        "id": "b5eab3649c24c1f9",
        "text": "suite : Test\nsuite =\n    describe \"Parsing Expression Grammar (PEG)\"\n        [ test \"should parse 'abc' and convert it to all upper case 'ABC' with an action.\" <|\n            \\() ->\n                let\n                    expected =\n                        Ok \"ABC\"\n\n                    actual =\n                        result\n                in\n                Expect.equal actual expected\n        ]\n"
      },
      "date": 1696414154761
    },
    {
      "type": "edit",
      "id": "83ab158952568a79",
      "item": {
        "type": "paragraph",
        "id": "83ab158952568a79",
        "text": "Parse a string with the grammar [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/tests/MainSpec.elm#L8-L22 code]"
      },
      "date": 1696414173095
    },
    {
      "item": {
        "type": "factory",
        "id": "56e429f68bdc0077"
      },
      "id": "56e429f68bdc0077",
      "type": "add",
      "after": "b5eab3649c24c1f9",
      "date": 1696414201685
    },
    {
      "type": "edit",
      "id": "56e429f68bdc0077",
      "item": {
        "type": "paragraph",
        "id": "56e429f68bdc0077",
        "text": "We focus on result."
      },
      "date": 1696414208077
    },
    {
      "type": "edit",
      "id": "56e429f68bdc0077",
      "item": {
        "type": "paragraph",
        "id": "56e429f68bdc0077",
        "text": "We focus on `result`."
      },
      "date": 1696414215200
    },
    {
      "type": "edit",
      "id": "56e429f68bdc0077",
      "item": {
        "type": "markdown",
        "id": "56e429f68bdc0077",
        "text": "We focus on `result`."
      },
      "date": 1696414216617
    },
    {
      "item": {
        "type": "factory",
        "id": "bb2f02b804d7af55"
      },
      "id": "bb2f02b804d7af55",
      "type": "add",
      "after": "56e429f68bdc0077",
      "date": 1696414257519
    },
    {
      "type": "edit",
      "id": "bb2f02b804d7af55",
      "item": {
        "type": "code",
        "id": "bb2f02b804d7af55",
        "text": "{-| Parse a string with the grammar\n-}\nresult : Result Error String\nresult =\n    let\n        actions _ found _ =\n            Ok (String.toUpper found)\n\n        predicate _ _ state =\n            ( True, state )\n    in\n    grammarString\n        |> fromString\n        |> Result.andThen (\\grammar -> parse grammar \"\" actions predicate \"abc\")\n\n"
      },
      "date": 1696414259787
    },
    {
      "type": "edit",
      "id": "56e429f68bdc0077",
      "item": {
        "type": "markdown",
        "id": "56e429f68bdc0077",
        "text": "We focus on `result`. [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L23-L38 code]"
      },
      "date": 1696414274451
    },
    {
      "item": {
        "type": "factory",
        "id": "1e683425006f88da"
      },
      "id": "1e683425006f88da",
      "type": "add",
      "after": "bb2f02b804d7af55",
      "date": 1696414314343
    },
    {
      "item": {
        "type": "factory",
        "id": "2fb8139b38576b5d"
      },
      "id": "2fb8139b38576b5d",
      "type": "add",
      "after": "1e683425006f88da",
      "date": 1696414317372
    },
    {
      "type": "edit",
      "id": "2fb8139b38576b5d",
      "item": {
        "type": "code",
        "id": "2fb8139b38576b5d",
        "text": "{-| Check if the parse succeeded\n-}\nmain : Html.Html msg\nmain =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message ++ \" at position \" ++ String.fromInt error.position)\n"
      },
      "date": 1696414319415
    },
    {
      "type": "edit",
      "id": "1e683425006f88da",
      "item": {
        "type": "paragraph",
        "id": "1e683425006f88da",
        "text": "and the `main` function [code]"
      },
      "date": 1696414338662
    },
    {
      "type": "edit",
      "id": "1e683425006f88da",
      "item": {
        "type": "paragraph",
        "id": "1e683425006f88da",
        "text": "and the `main` function [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L39-L49 code]"
      },
      "date": 1696414346945
    },
    {
      "type": "edit",
      "id": "1e683425006f88da",
      "item": {
        "type": "markdown",
        "id": "1e683425006f88da",
        "text": "and the `main` function [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L39-L49 code]"
      },
      "date": 1696414349042
    },
    {
      "item": {
        "type": "factory",
        "id": "d0e8f5ea10430423"
      },
      "id": "d0e8f5ea10430423",
      "type": "add",
      "after": "2fb8139b38576b5d",
      "date": 1696414524823
    },
    {
      "type": "remove",
      "id": "d0e8f5ea10430423",
      "date": 1696414538705
    },
    {
      "type": "edit",
      "id": "1e683425006f88da",
      "item": {
        "type": "markdown",
        "id": "1e683425006f88da",
        "text": "and the `main` function [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L39-L49 code]  evaluates the result of parsing:"
      },
      "date": 1696414547464
    },
    {
      "item": {
        "type": "factory",
        "id": "2a3ada31ee14ac06"
      },
      "id": "2a3ada31ee14ac06",
      "type": "add",
      "after": "2fb8139b38576b5d",
      "date": 1696416375754
    },
    {
      "type": "edit",
      "id": "2a3ada31ee14ac06",
      "item": {
        "type": "reference",
        "id": "2a3ada31ee14ac06",
        "site": "wiki.ralfbarkow.ch",
        "slug": "write-the-grammar-that-fits",
        "title": "Write the Grammar That Fits",
        "text": "This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "date": 1696416378068
    },
    {
      "item": {
        "type": "factory",
        "id": "f6490ef4ca1d62df"
      },
      "id": "f6490ef4ca1d62df",
      "type": "add",
      "after": "2a3ada31ee14ac06",
      "date": 1696416396518
    },
    {
      "type": "edit",
      "id": "f6490ef4ca1d62df",
      "item": {
        "type": "reference",
        "id": "f6490ef4ca1d62df",
        "site": "wiki.ralfbarkow.ch",
        "slug": "pegn",
        "title": "PEGN",
        "text": "is a language for defining languages. [https://pegn.dev/ site], [https://github.com/rwxrob/pegn-spec github]"
      },
      "date": 1696416398733
    },
    {
      "id": "61ca48cc7531ce73",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "61ca48cc7531ce73",
        "text": "For example, we write the grammar that fits the text in the form of the following [[Elm]] source [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L15-L22 code]."
      },
      "after": "2a3ada31ee14ac06",
      "attribution": {
        "page": "Write the Grammar That Fits"
      },
      "date": 1696416425738
    },
    {
      "type": "edit",
      "id": "61ca48cc7531ce73",
      "item": {
        "type": "paragraph",
        "id": "61ca48cc7531ce73",
        "text": "> For example, we write the grammar that fits the text in the form of the following [[Elm]] source [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L15-L22 code]."
      },
      "date": 1696416432301
    },
    {
      "type": "edit",
      "id": "61ca48cc7531ce73",
      "item": {
        "type": "markdown",
        "id": "61ca48cc7531ce73",
        "text": "> For example, we write the grammar that fits the text in the form of the following [[Elm]] source [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L15-L22 code]."
      },
      "date": 1696416433338
    },
    {
      "id": "5a696e64cd863ed7",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5a696e64cd863ed7",
        "text": "grammarString : String\ngrammarString =\n    \"\"\"\n    start <- <char+> {action}\n    char <- [a-z]    \n    \"\"\"\n\n"
      },
      "after": "61ca48cc7531ce73",
      "attribution": {
        "page": "Write the Grammar That Fits"
      },
      "date": 1696416436386
    },
    {
      "item": {
        "type": "factory",
        "id": "452f55d439bca702"
      },
      "id": "452f55d439bca702",
      "type": "add",
      "after": "f6490ef4ca1d62df",
      "date": 1696416573954
    },
    {
      "type": "edit",
      "id": "452f55d439bca702",
      "item": {
        "type": "paragraph",
        "id": "452f55d439bca702",
        "text": "the JSON specification in PEGN"
      },
      "date": 1696416576818
    },
    {
      "type": "edit",
      "id": "452f55d439bca702",
      "item": {
        "type": "paragraph",
        "id": "452f55d439bca702",
        "text": "replace grammarString with JSON specification in PEGN (RED Phase) "
      },
      "date": 1696416636088
    },
    {
      "type": "edit",
      "id": "452f55d439bca702",
      "item": {
        "type": "paragraph",
        "id": "452f55d439bca702",
        "text": "I replaced the grammarString with the JSON specification in PEGN."
      },
      "date": 1696416668253
    },
    {
      "type": "edit",
      "id": "452f55d439bca702",
      "item": {
        "type": "paragraph",
        "id": "452f55d439bca702",
        "text": "I replaced the grammarString with the JSON specification in PEGN. [https://github.com/RalfBarkow/vite-elm-dojo/commit/aae4867de5723710f07c8c02e897326c221bb8fa commit]"
      },
      "date": 1696416682499
    },
    {
      "type": "add",
      "id": "ba08e9e5e4d3a7b8",
      "item": {
        "type": "paragraph",
        "id": "ba08e9e5e4d3a7b8",
        "text": "DM "
      },
      "after": "452f55d439bca702",
      "date": 1696416698763
    },
    {
      "type": "edit",
      "id": "ba08e9e5e4d3a7b8",
      "item": {
        "type": "paragraph",
        "id": "ba08e9e5e4d3a7b8",
        "text": "DM from [[Romāns Potašovs]]"
      },
      "date": 1696416739106
    },
    {
      "item": {
        "type": "factory",
        "id": "f1b0514c2ab963f7"
      },
      "id": "f1b0514c2ab963f7",
      "type": "add",
      "after": "ba08e9e5e4d3a7b8",
      "date": 1696416757205
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "paragraph",
        "id": "f1b0514c2ab963f7",
        "text": "btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n\n\nKalabibishkis\n  2:14 PM\nhere you go - 1.0.1 - thanks for reminder.. (edited) \n\n\n\n\n\n"
      },
      "date": 1696416758735
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "paragraph",
        "id": "f1b0514c2ab963f7",
        "text": "btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n\n\nKalabibishkis\n  2:14 PM\nhere you go - 1.0.1 - thanks for reminder.. (edited)"
      },
      "date": 1696416770053
    },
    {
      "type": "add",
      "id": "7c3dcc4415463534",
      "item": {
        "type": "paragraph",
        "id": "7c3dcc4415463534",
        "text": "⇒ [[elm-peg]]"
      },
      "after": "f1b0514c2ab963f7",
      "date": 1696416781035
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "paragraph",
        "id": "f1b0514c2ab963f7",
        "text": "> btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n\n\nKalabibishkis\n  2:14 PM\nhere you go - 1.0.1 - thanks for reminder.. (edited)"
      },
      "date": 1696416882401
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "markdown",
        "id": "f1b0514c2ab963f7",
        "text": "> btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n\n\nKalabibishkis\n  2:14 PM\nhere you go - 1.0.1 - thanks for reminder.. (edited)"
      },
      "date": 1696416885665
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "markdown",
        "id": "f1b0514c2ab963f7",
        "text": "> btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n>\n> Kalabibishkis\n  2:14 PM\nhere you go - 1.0.1 - thanks for reminder.. (edited)"
      },
      "date": 1696416902369
    },
    {
      "type": "edit",
      "id": "f1b0514c2ab963f7",
      "item": {
        "type": "markdown",
        "id": "f1b0514c2ab963f7",
        "text": "> btw that was just experiment.. how helpful could be chatGPT..\n2:03\now right..  need to update that..\n>\n> Kalabibishkis\n  2:14 PM\nhere you go - 1.0.1 [https://package.elm-lang.org/packages/microelm/elm-peg/1.0.1/ package] - thanks for reminder.. (edited)"
      },
      "date": 1696416934968
    },
    {
      "type": "edit",
      "id": "7c3dcc4415463534",
      "item": {
        "type": "paragraph",
        "id": "7c3dcc4415463534",
        "text": "⇒ [[elm-peg]] [https://github.com/microelm/elm-peg/tree/1.0.1 v1.0.1]"
      },
      "date": 1696416972540
    },
    {
      "type": "edit",
      "id": "7c3dcc4415463534",
      "item": {
        "type": "paragraph",
        "id": "7c3dcc4415463534",
        "text": "⇒ [[elm-peg]] [https://github.com/microelm/elm-peg/tree/1.0.1 v1.0.1]: add more reliable error catch "
      },
      "date": 1696417002965
    },
    {
      "type": "edit",
      "id": "7c3dcc4415463534",
      "item": {
        "type": "paragraph",
        "id": "7c3dcc4415463534",
        "text": "⇒ [[elm-peg]] [https://github.com/microelm/elm-peg/tree/1.0.1 v1.0.1]: add more reliable error catch [https://github.com/microelm/elm-peg/commit/2b03f1d90ec42f520702106821c989ffc84e1858 commit]"
      },
      "date": 1696417015012
    },
    {
      "type": "edit",
      "id": "452f55d439bca702",
      "item": {
        "type": "paragraph",
        "id": "452f55d439bca702",
        "text": "I replaced the grammarString with the JSON specification in PEGN. [https://github.com/RalfBarkow/vite-elm-dojo/commit/aae4867de5723710f07c8c02e897326c221bb8fa commit] and get"
      },
      "date": 1696417040200
    },
    {
      "type": "add",
      "id": "150933e36963ce33",
      "item": {
        "type": "paragraph",
        "id": "150933e36963ce33",
        "text": "> Parse error: Unexpected match at position 11"
      },
      "after": "452f55d439bca702",
      "date": 1696417041369
    },
    {
      "type": "edit",
      "id": "150933e36963ce33",
      "item": {
        "type": "markdown",
        "id": "150933e36963ce33",
        "text": "> Parse error: Unexpected match at position 11"
      },
      "date": 1696417042599
    },
    {
      "type": "edit",
      "id": "ba08e9e5e4d3a7b8",
      "item": {
        "type": "paragraph",
        "id": "ba08e9e5e4d3a7b8",
        "text": "DM from [[Romāns Potašovs]] via [https://elmlang.slack.com/archives/D05UU7PQLDB/p1696334531857749 slack]"
      },
      "date": 1696417168018
    },
    {
      "id": "ec555a8d07dd81b6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ec555a8d07dd81b6",
        "text": "Represents an error that occurred during parsing.\n\nThe position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
      },
      "after": "150933e36963ce33",
      "attribution": {
        "page": "2023-10-03"
      },
      "date": 1696417339415
    },
    {
      "type": "edit",
      "id": "ec555a8d07dd81b6",
      "item": {
        "type": "paragraph",
        "id": "ec555a8d07dd81b6",
        "text": "\n\nThe position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
      },
      "date": 1696417345451
    },
    {
      "type": "edit",
      "id": "ec555a8d07dd81b6",
      "item": {
        "type": "paragraph",
        "id": "ec555a8d07dd81b6",
        "text": "The position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
      },
      "date": 1696417349038
    },
    {
      "item": {
        "type": "factory",
        "id": "58b34f4d2fd07adf"
      },
      "id": "58b34f4d2fd07adf",
      "type": "add",
      "after": "7c3dcc4415463534",
      "date": 1696417478186
    },
    {
      "id": "58b34f4d2fd07adf",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534"
      ],
      "date": 1696417481785
    },
    {
      "type": "edit",
      "id": "58b34f4d2fd07adf",
      "item": {
        "type": "code",
        "id": "58b34f4d2fd07adf",
        "text": "Grammar <-- ws* Value ws*\n          | 11"
      },
      "date": 1696417494731
    },
    {
      "type": "edit",
      "id": "58b34f4d2fd07adf",
      "item": {
        "type": "code",
        "id": "58b34f4d2fd07adf",
        "text": "Grammar <-- ws* Value ws*\n          ↑ 11"
      },
      "date": 1696417524190
    },
    {
      "item": {
        "type": "factory",
        "id": "c0d70abcdf074885"
      },
      "id": "c0d70abcdf074885",
      "type": "add",
      "after": "7c3dcc4415463534",
      "date": 1696417843030
    },
    {
      "type": "edit",
      "id": "c0d70abcdf074885",
      "item": {
        "type": "pagefold",
        "id": "c0d70abcdf074885",
        "text": "~"
      },
      "date": 1696417846768
    },
    {
      "item": {
        "type": "factory",
        "id": "0df5e0c705e48591"
      },
      "id": "0df5e0c705e48591",
      "type": "add",
      "after": "c0d70abcdf074885",
      "date": 1696417848148
    },
    {
      "type": "edit",
      "id": "0df5e0c705e48591",
      "item": {
        "type": "paragraph",
        "id": "0df5e0c705e48591",
        "text": "Keyboard for writing, camera for vlogging"
      },
      "date": 1696417851070
    },
    {
      "type": "edit",
      "id": "0df5e0c705e48591",
      "item": {
        "type": "paragraph",
        "id": "0df5e0c705e48591",
        "text": "Keyboard for writing, camera for vlogging [https://rwxrob.github.io/zet/2371/ page]"
      },
      "date": 1696417863388
    },
    {
      "type": "edit",
      "id": "0df5e0c705e48591",
      "item": {
        "type": "paragraph",
        "id": "0df5e0c705e48591",
        "text": "Keyboard for writing, camera for vlogging [https://rwxrob.github.io/zet/2371/ page] [⇐[[Mobile Wiki]]]"
      },
      "date": 1696417968502
    },
    {
      "item": {
        "type": "factory",
        "id": "fdc11e8c92551fe3"
      },
      "id": "fdc11e8c92551fe3",
      "type": "add",
      "after": "0df5e0c705e48591",
      "date": 1696421446329
    },
    {
      "id": "fdc11e8c92551fe3",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "c0d70abcdf074885",
        "0df5e0c705e48591"
      ],
      "date": 1696421450718
    },
    {
      "type": "edit",
      "id": "fdc11e8c92551fe3",
      "item": {
        "type": "paragraph",
        "id": "fdc11e8c92551fe3",
        "text": "\nQUEIROZ DE MEDEIROS, Sergio, 2023. From Antlr Grammars to Peg Parsers. Online. SSRN Scholarly Paper. 12 March 2023. Rochester, NY. 4385789. [Accessed 4 October 2023]. ANTLR is a popular parsing tool. As there are ANTLR grammars available for around 270 languages, new applications related to such languages often use these grammars as a guide. However, the task of getting an equivalent non-ANTLR parser for these applications may not be trivial and it may involve a much grammar rewriting.Parsing Expression Grammars (PEGs) is a formalism used to define deterministic top-down parses, which is the basis of dozens of parser generators.To facilitate the development of new applications based on PEGs parsers, we investigate the automatic translation from ANTLR grammars to PEGs. We discuss the main issues involved in this translation and we implement tools that build a PEG-based parser from an ANTLR grammar.We evaluate our automatic translation on grammars from a public repository of ANTLR grammars. To assess the equivalence between the ANTLR and the PEG parsers generated from a grammar, we use a grammar-based test generation approach, which uses the original ANTLR grammar, as also example files used to validate the ANTLR parser.Results indicate that our approach can reduce significantly  the manual intervention necessary to get from an ANTLR grammar a PEG parser whose behavior looks equivalent to the corresponding ANTLR one.\n"
      },
      "date": 1696421454051
    },
    {
      "type": "edit",
      "id": "fdc11e8c92551fe3",
      "item": {
        "type": "paragraph",
        "id": "fdc11e8c92551fe3",
        "text": "QUEIROZ DE MEDEIROS, Sergio, 2023. From Antlr Grammars to Peg Parsers. Online. SSRN Scholarly Paper. 12 March 2023. Rochester, NY. 4385789. [Accessed 4 October 2023]. ANTLR is a popular parsing tool. As there are ANTLR grammars available for around 270 languages, new applications related to such languages often use these grammars as a guide. However, the task of getting an equivalent non-ANTLR parser for these applications may not be trivial and it may involve a much grammar rewriting.Parsing Expression Grammars (PEGs) is a formalism used to define deterministic top-down parses, which is the basis of dozens of parser generators.To facilitate the development of new applications based on PEGs parsers, we investigate the automatic translation from ANTLR grammars to PEGs. We discuss the main issues involved in this translation and we implement tools that build a PEG-based parser from an ANTLR grammar.We evaluate our automatic translation on grammars from a public repository of ANTLR grammars. To assess the equivalence between the ANTLR and the PEG parsers generated from a grammar, we use a grammar-based test generation approach, which uses the original ANTLR grammar, as also example files used to validate the ANTLR parser.Results indicate that our approach can reduce significantly  the manual intervention necessary to get from an ANTLR grammar a PEG parser whose behavior looks equivalent to the corresponding ANTLR one."
      },
      "date": 1696421484466
    },
    {
      "type": "add",
      "id": "0d22a64f685c0405",
      "item": {
        "type": "paragraph",
        "id": "0d22a64f685c0405",
        "text": "> Below, we have the example of a PEG that matches C multiline comments: COM M EN T ← ‘/∗’ (!‘∗/’ .) ∗ ‘∗/’"
      },
      "after": "fdc11e8c92551fe3",
      "date": 1696421485796
    },
    {
      "type": "edit",
      "id": "0d22a64f685c0405",
      "item": {
        "type": "markdown",
        "id": "0d22a64f685c0405",
        "text": "> Below, we have the example of a PEG that matches C multiline comments: COM M EN T ← ‘/∗’ (!‘∗/’ .) ∗ ‘∗/’"
      },
      "date": 1696421487801
    },
    {
      "type": "edit",
      "id": "0d22a64f685c0405",
      "item": {
        "type": "markdown",
        "id": "0d22a64f685c0405",
        "text": "> Below, we have the example of a PEG that matches C multiline comments: COMMENT ← ‘/∗’ (!‘∗/’ .) ∗ ‘∗/’"
      },
      "date": 1696421503042
    },
    {
      "item": {
        "type": "factory",
        "id": "df17bdc8a2476e90"
      },
      "id": "df17bdc8a2476e90",
      "type": "add",
      "after": "0df5e0c705e48591",
      "date": 1696422480819
    },
    {
      "id": "df17bdc8a2476e90",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "0d22a64f685c0405",
        "df17bdc8a2476e90",
        "c0d70abcdf074885",
        "0df5e0c705e48591"
      ],
      "date": 1696422484811
    },
    {
      "type": "edit",
      "id": "df17bdc8a2476e90",
      "item": {
        "type": "markdown",
        "id": "df17bdc8a2476e90",
        "text": "The error message \"Parse error: Unexpected match when parseNotPredicate at position 50\" indicates that there was an unexpected match while trying to parse the input, specifically within a `parseNotPredicate`. The position mentioned (position 50) refers to the 50th character in the input string.\n\nIn the context of your grammar, this issue likely arises from the `comment` rule:\n\n```elm\ncomment <- /\\\\* (!\\\\*/ .) * \\\\*/\n```\n\nThe `(!\\\\*/ .)*` part of the rule is intended to match any character except `*` and `\\/` (the closing of a C-style comment), but it seems there may be an issue with how the negation is handled.\n\nTo troubleshoot this issue, you can try the following:\n\n1. Verify the input: Make sure the input string being parsed contains a valid C-style multiline comment.\n\n2. Check the escaping: Ensure that the escape sequences `\\\\` are correctly escaping the characters. In Elm strings, you need to use `\\\\` to represent a literal backslash.\n\n3. Test the regular expression separately: You can test the regular expression `/\\\\* (!\\\\*/ .) * \\\\*/` in a regular expression tester to ensure it matches C-style comments correctly.\n\nIf the issue persists, you may need to review the PEG grammar and the input string to identify any discrepancies or errors in the pattern matching."
      },
      "date": 1696422486879
    },
    {
      "type": "edit",
      "id": "df17bdc8a2476e90",
      "item": {
        "type": "markdown",
        "id": "df17bdc8a2476e90",
        "text": "The error message \"Parse error: Unexpected match when parseNotPredicate at position 50\" indicates that there was an unexpected match while trying to parse the input, specifically within a `parseNotPredicate`. The position mentioned (position 50) refers to the 50th character in the input string.\n\nIn the context of your grammar, this issue likely arises from the `comment` rule:\n\n```elm\ncomment <- /\\\\* (!\\\\*/ .) * \\\\*/\n```\n\nThe `(!\\\\*/ .)*` part of the rule is intended to match any character except `*` and `\\/` (the closing of a C-style comment), but it seems there may be an issue with how the negation is handled.\n\nTo troubleshoot this issue, you can try the following:\n\n1. Verify the input: Make sure the input string being parsed contains a valid C-style multiline comment.\n\n2. Check the escaping: Ensure that the escape sequences `\\\\` are correctly escaping the characters. In Elm strings, you need to use `\\\\` to represent a literal backslash.\n\n3. Test the regular expression separately: You can test the regular expression `/\\\\* (!\\\\*/ .) * \\\\*/` in a regular expression tester to ensure it matches C-style comments correctly.\n\nIf the issue persists, you may need to review the PEG grammar and the input string to identify any discrepancies or errors in the pattern matching. (ChatGPT September 25 Version)"
      },
      "date": 1696422574343
    },
    {
      "type": "edit",
      "id": "fdc11e8c92551fe3",
      "item": {
        "type": "paragraph",
        "id": "fdc11e8c92551fe3",
        "text": "QUEIROZ DE MEDEIROS, Sergio, 2023. From Antlr Grammars to Peg Parsers. Online. SSRN Scholarly Paper. 12 March 2023. Rochester, NY. 4385789. [Accessed 4 October 2023]. ANTLR is a popular parsing tool. As there are ANTLR grammars available for around 270 languages, new applications related to such languages often use these grammars as a guide. However, the task of getting an equivalent non-ANTLR parser for these applications may not be trivial and it may involve a much grammar rewriting.Parsing Expression Grammars (PEGs) is a formalism used to define deterministic top-down parses, which is the basis of dozens of parser generators.To facilitate the development of new applications based on PEGs parsers, we investigate the automatic translation from ANTLR grammars to PEGs. We discuss the main issues involved in this translation and we implement tools that build a PEG-based parser from an ANTLR grammar.We evaluate our automatic translation on grammars from a public repository of ANTLR grammars. To assess the equivalence between the ANTLR and the PEG parsers generated from a grammar, we use a grammar-based test generation approach, which uses the original ANTLR grammar, as also example files used to validate the ANTLR parser.Results indicate that our approach can reduce significantly  the manual intervention necessary to get from an ANTLR grammar a PEG parser whose behavior looks"
      },
      "date": 1696423755793
    },
    {
      "type": "edit",
      "id": "fdc11e8c92551fe3",
      "item": {
        "type": "paragraph",
        "id": "fdc11e8c92551fe3",
        "text": "QUEIROZ DE MEDEIROS, Sergio, 2023. From Antlr Grammars to Peg Parsers. Online. SSRN Scholarly Paper. 12 March 2023. Rochester, NY. 4385789. [Accessed 4 October 2023]. ANTLR is a popular parsing tool. As there are ANTLR grammars available for around 270 languages, new applications related to such languages often use these grammars as a guide. However, the task of getting an equivalent non-ANTLR parser for these applications may not be trivial and it may involve a much grammar rewriting.Parsing Expression Grammars (PEGs) is a formalism used to define deterministic top-down parses, which is the basis of dozens of parser generators.To facilitate the development of new applications based on PEGs parsers, we investigate the automatic translation from ANTLR grammars to PEGs. We discuss the main issues involved in this translation and we implement tools that build a PEG-based parser from an ANTLR grammar.We evaluate our automatic translation on grammars from a public repository of ANTLR grammars. To assess the equivalence between the ANTLR and the PEG parsers generated from a grammar, we use a grammar-based test generation approach, which uses the original ANTLR grammar, as also example files used to validate the ANTLR parser.Results indicate that our approach can reduce significantly  the manual intervention necessary to get from an ANTLR grammar a PEG parser whose behavior looks equivalent to the corresponding ANTLR one."
      },
      "date": 1696423772823
    },
    {
      "type": "add",
      "id": "4243d33d1ca32b55",
      "item": {
        "type": "paragraph",
        "id": "4243d33d1ca32b55",
        "text": "I copied this PEG rule into the grammar ring, got an error message, and \"talked\" to the chat thing about it."
      },
      "after": "fdc11e8c92551fe3",
      "date": 1696423774973
    },
    {
      "id": "0d22a64f685c0405",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "0d22a64f685c0405",
        "4243d33d1ca32b55",
        "df17bdc8a2476e90",
        "c0d70abcdf074885",
        "0df5e0c705e48591"
      ],
      "date": 1696423776890
    },
    {
      "type": "edit",
      "id": "4243d33d1ca32b55",
      "item": {
        "type": "paragraph",
        "id": "4243d33d1ca32b55",
        "text": "I copied this PEG rule into the grammar ring, got an error message, and 'talked' to the chat thing about it."
      },
      "date": 1696423787627
    },
    {
      "type": "edit",
      "id": "df17bdc8a2476e90",
      "item": {
        "type": "markdown",
        "id": "df17bdc8a2476e90",
        "text": "The error message \"Parse error: Unexpected match when parseNotPredicate at position 50\" indicates that there was an unexpected match while trying to parse the input, specifically within a `parseNotPredicate`. The position mentioned (position 50) refers to the 50th character in the input string.\n\nIn the context of your grammar, this issue likely arises from the `comment` rule:\n\n```elm\ncomment <- /\\\\* (!\\\\*/ .) * \\\\*/\n```\n\nThe `(!\\\\*/ .)*` part of the rule is intended to match any character except `*` and `\\/` (the closing of a C-style comment), but it seems there may be an issue with how the negation is handled.\n\nTo troubleshoot this issue, you can try the following:\n\n1. Verify the input: Make sure the input string being parsed contains a valid C-style multiline comment.\n\n2. Check the escaping: Ensure that the escape sequences `\\\\` are correctly escaping the characters. In Elm strings, you need to use `\\\\` to represent a literal backslash.\n\n3. Test the regular expression separately: You can test the regular expression `/\\\\* (!\\\\*/ .) * \\\\*/` in a regular expression tester to ensure it matches C-style comments correctly.\n\nIf the issue persists, you may need to review the PEG grammar and the input string to identify any discrepancies or errors in the pattern matching. (ChatGPT September 25 Version)\n"
      },
      "date": 1696423875359
    },
    {
      "item": {
        "type": "factory",
        "id": "816f2cd9aba842df"
      },
      "id": "816f2cd9aba842df",
      "type": "add",
      "after": "0df5e0c705e48591",
      "date": 1696423880074
    },
    {
      "id": "816f2cd9aba842df",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "0d22a64f685c0405",
        "4243d33d1ca32b55",
        "df17bdc8a2476e90",
        "c0d70abcdf074885",
        "816f2cd9aba842df",
        "0df5e0c705e48591"
      ],
      "date": 1696423883574
    },
    {
      "id": "816f2cd9aba842df",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "afae66717216d4c3",
        "2c6d600a1d85831a",
        "3d9e9fc43bc79ae5",
        "29523afeaa9309df",
        "afb623c32c39d3ea",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "0d22a64f685c0405",
        "4243d33d1ca32b55",
        "df17bdc8a2476e90",
        "816f2cd9aba842df",
        "c0d70abcdf074885",
        "0df5e0c705e48591"
      ],
      "date": 1696423886124
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "So where are we now within which sequence?"
      },
      "date": 1696423887888
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "So where are we now within which [[Sequence]]?"
      },
      "date": 1696423895949
    },
    {
      "type": "add",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]."
      },
      "after": "816f2cd9aba842df",
      "date": 1696423946582
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]:"
      },
      "date": 1696423970880
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]]"
      },
      "date": 1696423980573
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]]"
      },
      "date": 1696424017814
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "So where are we now within which [[Sequence]]? [⇐ [[Smoothly Unfolding Sequences]]]"
      },
      "date": 1696424651979
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]]"
      },
      "date": 1696424704626
    },
    {
      "type": "add",
      "id": "1cab2a6067c38c9b",
      "item": {
        "type": "paragraph",
        "id": "1cab2a6067c38c9b",
        "text": "[[From EBNF to PEG]]"
      },
      "after": "12e8d73b1bc07f51",
      "date": 1696424934125
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[multiComment ]]"
      },
      "date": 1696425440544
    },
    {
      "type": "edit",
      "id": "96e1c97f16d84df1",
      "item": {
        "type": "paragraph",
        "id": "96e1c97f16d84df1",
        "text": "⇒ [[multiComment]] [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page]"
      },
      "date": 1696425575727
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[multiComment]]"
      },
      "date": 1696425635661
    },
    {
      "id": "afae66717216d4c3",
      "type": "remove",
      "removedTo": {
        "page": "multiComment"
      },
      "date": 1696425679141
    },
    {
      "id": "2c6d600a1d85831a",
      "type": "remove",
      "removedTo": {
        "page": "multiComment"
      },
      "date": 1696425745042
    },
    {
      "id": "3d9e9fc43bc79ae5",
      "type": "remove",
      "removedTo": {
        "page": "multiComment"
      },
      "date": 1696425790808
    },
    {
      "id": "29523afeaa9309df",
      "type": "remove",
      "removedTo": {
        "page": "multiComment"
      },
      "date": 1696425830710
    },
    {
      "id": "afb623c32c39d3ea",
      "type": "remove",
      "removedTo": {
        "page": "multiComment"
      },
      "date": 1696425837628
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]]  ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "date": 1696425994703
    },
    {
      "type": "add",
      "id": "7ffa8cb5ecbbcdfb",
      "item": {
        "type": "paragraph",
        "id": "7ffa8cb5ecbbcdfb",
        "text": "MainSpec.elm and Main.elm "
      },
      "after": "1cab2a6067c38c9b",
      "date": 1696426340325
    },
    {
      "type": "edit",
      "id": "7ffa8cb5ecbbcdfb",
      "item": {
        "type": "paragraph",
        "id": "7ffa8cb5ecbbcdfb",
        "text": "MainSpec.elm and Main.elm"
      },
      "date": 1696426735163
    },
    {
      "type": "add",
      "id": "3b7637e91e307ec4",
      "item": {
        "type": "paragraph",
        "id": "3b7637e91e307ec4",
        "text": "[[Programming Elm]]"
      },
      "after": "7ffa8cb5ecbbcdfb",
      "date": 1696426738527
    },
    {
      "type": "edit",
      "id": "3b7637e91e307ec4",
      "item": {
        "type": "paragraph",
        "id": "3b7637e91e307ec4",
        "text": "⇒ [[Programming Elm]]"
      },
      "date": 1696426750115
    },
    {
      "type": "edit",
      "id": "3b7637e91e307ec4",
      "item": {
        "type": "paragraph",
        "id": "3b7637e91e307ec4",
        "text": "⇒ [[Programming Elm]] by [[Jeremy Fairbank]]"
      },
      "date": 1696426866683
    },
    {
      "type": "edit",
      "id": "3b7637e91e307ec4",
      "item": {
        "type": "paragraph",
        "id": "3b7637e91e307ec4",
        "text": "⇒ [[Programming Elm]] by [[Jeremy Fairbank]], Chapter 9, "
      },
      "date": 1696426959381
    },
    {
      "type": "edit",
      "id": "3b7637e91e307ec4",
      "item": {
        "type": "paragraph",
        "id": "3b7637e91e307ec4",
        "text": "⇒ [[Programming Elm]] by [[Jeremy Fairbank]], Chapter 9, [[Test Elm Applications]]"
      },
      "date": 1696426969058
    },
    {
      "item": {
        "type": "factory",
        "id": "862baa7449476a6f"
      },
      "id": "862baa7449476a6f",
      "type": "add",
      "after": "0df5e0c705e48591",
      "date": 1696430464266
    },
    {
      "type": "edit",
      "id": "862baa7449476a6f",
      "item": {
        "type": "paragraph",
        "id": "862baa7449476a6f",
        "text": "Blockierungsmodus"
      },
      "date": 1696430467580
    },
    {
      "type": "add",
      "id": "5e4b095bb5ed2dba",
      "item": {
        "type": "paragraph",
        "id": "5e4b095bb5ed2dba",
        "text": "Error: Your Xcode (14.2) is too outdated.\nPlease update to Xcode 15.0 (or delete it).\nXcode can be updated from the App Store."
      },
      "after": "862baa7449476a6f",
      "date": 1696430752680
    },
    {
      "type": "edit",
      "id": "862baa7449476a6f",
      "item": {
        "type": "paragraph",
        "id": "862baa7449476a6f",
        "text": "Blockierungsmodus [https://support.apple.com/de-ch/HT212650 page]"
      },
      "date": 1696430766091
    },
    {
      "type": "add",
      "id": "09ed63e398714722",
      "item": {
        "type": "paragraph",
        "id": "09ed63e398714722",
        "text": "Sonoma"
      },
      "after": "0df5e0c705e48591",
      "date": 1696430830295
    },
    {
      "type": "edit",
      "id": "09ed63e398714722",
      "item": {
        "type": "paragraph",
        "id": "09ed63e398714722",
        "text": "⇒ [[Sonoma]]"
      },
      "date": 1696430848134
    },
    {
      "type": "add",
      "id": "7c365214ff54c796",
      "item": {
        "type": "paragraph",
        "id": "7c365214ff54c796",
        "text": "topgrade"
      },
      "after": "862baa7449476a6f",
      "date": 1696431636260
    },
    {
      "type": "edit",
      "id": "7c365214ff54c796",
      "item": {
        "type": "paragraph",
        "id": "7c365214ff54c796",
        "text": "topgrade [https://github.com/topgrade-rs/topgrade github]"
      },
      "date": 1696431762160
    },
    {
      "type": "edit",
      "id": "7c365214ff54c796",
      "item": {
        "type": "paragraph",
        "id": "7c365214ff54c796",
        "text": "⇒ topgrade [https://github.com/topgrade-rs/topgrade github]"
      },
      "date": 1696431769448
    },
    {
      "type": "edit",
      "id": "7c365214ff54c796",
      "item": {
        "type": "paragraph",
        "id": "7c365214ff54c796",
        "text": "⇒ topgrade [https://github.com/topgrade-rs/topgrade github], [https://topgrade-rs.github.io/ site]"
      },
      "date": 1696431784740
    },
    {
      "item": {
        "type": "factory",
        "id": "44490fd9b6363fd4"
      },
      "id": "44490fd9b6363fd4",
      "type": "add",
      "after": "5e4b095bb5ed2dba",
      "date": 1696433233863
    },
    {
      "type": "edit",
      "id": "44490fd9b6363fd4",
      "item": {
        "type": "paragraph",
        "id": "44490fd9b6363fd4",
        "text": "sudoers file"
      },
      "date": 1696433236281
    },
    {
      "item": {
        "type": "factory",
        "id": "bf287cdf24edb4bc"
      },
      "id": "bf287cdf24edb4bc",
      "type": "add",
      "after": "44490fd9b6363fd4",
      "date": 1696433249875
    },
    {
      "type": "edit",
      "id": "bf287cdf24edb4bc",
      "item": {
        "type": "code",
        "id": "bf287cdf24edb4bc",
        "text": "sudo xcodebuild -license"
      },
      "date": 1696433252947
    },
    {
      "id": "bf287cdf24edb4bc",
      "type": "move",
      "order": [
        "7cdf87d7dce67201",
        "2cbd1e428edc8ebd",
        "96e1c97f16d84df1",
        "fb50f29830b0a8e9",
        "740232365d169b91",
        "b0ca73b6e947acd0",
        "dc6468602af7a5e0",
        "3a9474a168f736da",
        "ef0fd7f06b14d3d3",
        "78cd3b703da19889",
        "e04cdd48ba88a081",
        "42931d279897731e",
        "ab0771c5037b06d5",
        "6c392e088a8d953e",
        "bd3e50a3b5d84adc",
        "ed7c07f65b73449e",
        "d7725104de07d004",
        "ea9312c804633687",
        "7b321b91c0c9c6e9",
        "c26630ac-01de-4855-86da-a297bfa4a813",
        "f2930609501de66f",
        "d0b734382d2391c3",
        "fe436ba033760578",
        "49c70f6d6ad3d6d6",
        "3df3e1374b70b99f",
        "b95b38955c727a4c",
        "daaded8d94e56cf5",
        "ed1229c1c81133d1",
        "9a2c9dcacff5aabb",
        "6289c5bde4b8d107",
        "8cf853ea479244f9",
        "4923c79d8ef91bc1",
        "0b672033677dbab1",
        "6c97b625be11b0fd",
        "bb0c9198f8bc9532",
        "9c5fd63c6ea59354",
        "83ab158952568a79",
        "b5eab3649c24c1f9",
        "56e429f68bdc0077",
        "bb2f02b804d7af55",
        "1e683425006f88da",
        "2fb8139b38576b5d",
        "2a3ada31ee14ac06",
        "61ca48cc7531ce73",
        "5a696e64cd863ed7",
        "f6490ef4ca1d62df",
        "452f55d439bca702",
        "150933e36963ce33",
        "ec555a8d07dd81b6",
        "58b34f4d2fd07adf",
        "ba08e9e5e4d3a7b8",
        "f1b0514c2ab963f7",
        "7c3dcc4415463534",
        "fdc11e8c92551fe3",
        "0d22a64f685c0405",
        "4243d33d1ca32b55",
        "df17bdc8a2476e90",
        "816f2cd9aba842df",
        "12e8d73b1bc07f51",
        "1cab2a6067c38c9b",
        "7ffa8cb5ecbbcdfb",
        "3b7637e91e307ec4",
        "c0d70abcdf074885",
        "0df5e0c705e48591",
        "09ed63e398714722",
        "862baa7449476a6f",
        "7c365214ff54c796",
        "5e4b095bb5ed2dba",
        "bf287cdf24edb4bc",
        "44490fd9b6363fd4"
      ],
      "date": 1696433254659
    },
    {
      "type": "edit",
      "id": "83ab158952568a79",
      "item": {
        "type": "paragraph",
        "id": "83ab158952568a79",
        "text": "⇒ [[Parse a String with the Grammar]] [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/tests/MainSpec.elm#L8-L22 code]"
      },
      "date": 1696433816684
    },
    {
      "id": "b5eab3649c24c1f9",
      "type": "remove",
      "removedTo": {
        "page": "Parse a String with the Grammar"
      },
      "date": 1696433885198
    },
    {
      "id": "56e429f68bdc0077",
      "type": "remove",
      "removedTo": {
        "page": "Parse a String with the Grammar"
      },
      "date": 1696433889194
    },
    {
      "id": "bb2f02b804d7af55",
      "type": "remove",
      "removedTo": {
        "page": "Parse a String with the Grammar"
      },
      "date": 1696433898649
    },
    {
      "id": "1e683425006f88da",
      "type": "remove",
      "removedTo": {
        "page": "Parse a String with the Grammar"
      },
      "date": 1696433903545
    },
    {
      "id": "2fb8139b38576b5d",
      "type": "remove",
      "removedTo": {
        "page": "Parse a String with the Grammar"
      },
      "date": 1696433911377
    },
    {
      "type": "edit",
      "id": "ba08e9e5e4d3a7b8",
      "item": {
        "type": "paragraph",
        "id": "ba08e9e5e4d3a7b8",
        "text": "One hyphen minus too many?"
      },
      "date": 1696433993357
    },
    {
      "type": "add",
      "id": "c1670e8c67e73ec5",
      "item": {
        "type": "paragraph",
        "id": "c1670e8c67e73ec5",
        "text": "DM from [[Romāns Potašovs]] via [https://elmlang.slack.com/archives/D05UU7PQLDB/p1696334531857749 slack]"
      },
      "after": "ba08e9e5e4d3a7b8",
      "date": 1696433994375
    },
    {
      "type": "edit",
      "id": "ba08e9e5e4d3a7b8",
      "item": {
        "type": "paragraph",
        "id": "ba08e9e5e4d3a7b8",
        "text": "One hyphen minus too many? [https://github.com/RalfBarkow/vite-elm-dojo/commit/dbeddfaa6de86ec406ca710e1d7d73f27b172861 commit]"
      },
      "date": 1696434055446
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "Peg vs Regular Expression"
      },
      "date": 1696434152243
    },
    {
      "type": "add",
      "id": "d6ca682c8332030f",
      "item": {
        "type": "paragraph",
        "id": "d6ca682c8332030f",
        "text": "So where are we now within which [[Sequence]]? [⇐ [[Smoothly Unfolding Sequences]]]"
      },
      "after": "816f2cd9aba842df",
      "date": 1696434153818
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "PEG vs Regular Expression"
      },
      "date": 1696434195311
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "[[PEG vs Regular Expression]]"
      },
      "date": 1696434237886
    },
    {
      "type": "edit",
      "id": "816f2cd9aba842df",
      "item": {
        "type": "paragraph",
        "id": "816f2cd9aba842df",
        "text": "ChatGPT seems to confuse PEG and regular expressions. ⇒ [[PEG vs Regular Expression]]"
      },
      "date": 1696434404522
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]]  ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "date": 1696434591154
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the sequence as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "date": 1696434628176
    },
    {
      "type": "edit",
      "id": "12e8d73b1bc07f51",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the [[Sequence]] as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "date": 1696435139601
    },
    {
      "item": {
        "type": "factory",
        "id": "34722489b21e3c82"
      },
      "id": "34722489b21e3c82",
      "type": "add",
      "after": "44490fd9b6363fd4",
      "date": 1696437634627
    },
    {
      "type": "edit",
      "id": "34722489b21e3c82",
      "item": {
        "type": "pagefold",
        "id": "34722489b21e3c82",
        "text": "~"
      },
      "date": 1696437638838
    },
    {
      "item": {
        "type": "factory",
        "id": "29660d86ed64863b"
      },
      "id": "29660d86ed64863b",
      "type": "add",
      "after": "34722489b21e3c82",
      "date": 1696437641621
    },
    {
      "type": "edit",
      "id": "29660d86ed64863b",
      "item": {
        "type": "paragraph",
        "id": "29660d86ed64863b",
        "text": "The Accessors library"
      },
      "date": 1696437645586
    },
    {
      "type": "edit",
      "id": "29660d86ed64863b",
      "item": {
        "type": "paragraph",
        "id": "29660d86ed64863b",
        "text": "The Accessors library [https://package.elm-lang.org/packages/MackeyRMS/elm-accessors/1.0.1/ package]"
      },
      "date": 1696437662016
    },
    {
      "type": "edit",
      "id": "29660d86ed64863b",
      "item": {
        "type": "paragraph",
        "id": "29660d86ed64863b",
        "text": "The Accessors library [https://package.elm-lang.org/packages/MackeyRMS/elm-accessors/1.0.1/ package], [https://github.com/MackeyRMS/elm-accessors/tree/1.0.1 github]"
      },
      "date": 1696437699896
    },
    {
      "item": {
        "type": "factory",
        "id": "54aaad01fad6375d"
      },
      "id": "54aaad01fad6375d",
      "type": "add",
      "after": "29660d86ed64863b",
      "date": 1696439987620
    },
    {
      "type": "edit",
      "id": "54aaad01fad6375d",
      "item": {
        "type": "paragraph",
        "id": "54aaad01fad6375d",
        "text": "[[Parsing Expression Grammars]]"
      },
      "date": 1696439993442
    },
    {
      "type": "edit",
      "id": "54aaad01fad6375d",
      "item": {
        "type": "paragraph",
        "id": "54aaad01fad6375d",
        "text": "⇒ [[Parsing Expression Grammars]]"
      },
      "date": 1696440004587
    },
    {
      "item": {
        "type": "factory",
        "id": "fd3bb5c99b2f3595"
      },
      "id": "fd3bb5c99b2f3595",
      "type": "add",
      "after": "54aaad01fad6375d",
      "date": 1696451769325
    },
    {
      "type": "edit",
      "id": "fd3bb5c99b2f3595",
      "item": {
        "type": "paragraph",
        "id": "fd3bb5c99b2f3595",
        "text": "[[Parsley]]"
      },
      "date": 1696451775612
    },
    {
      "type": "add",
      "id": "a8661940ad0b9825",
      "item": {
        "type": "paragraph",
        "id": "a8661940ad0b9825",
        "text": "[[Principled Procedural Parsing]]"
      },
      "after": "fd3bb5c99b2f3595",
      "date": 1696453645813
    }
  ]
}