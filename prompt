{
  "title": "Prompt",
  "story": [
    {
      "type": "paragraph",
      "id": "298e80966937b3b7",
      "text": "⇒ [[Prompt Based Image Synthesis]] "
    },
    {
      "type": "paragraph",
      "id": "7ac338d0774a20c1",
      "text": "⇒ [[Prompt Programming]] ⇒ [[Dynamics of Language]] ⇒ [[Task Specification by Memetic Proxy]]"
    },
    {
      "type": "graphviz",
      "id": "918bf3fd9b234008",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "paragraph",
      "id": "e3989a1939e6fd02",
      "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[choose]] the prompt ⇒ [[plan]] ⇒ [[Socio-Cultural Evolution]] ⇒ [[Intervention]]"
    },
    {
      "type": "html",
      "id": "3b7f9aea26c15098",
      "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2008.21.52.png\"\n>"
    },
    {
      "type": "paragraph",
      "id": "9b103c6100b075ac",
      "text": "⇒ [[Intervention]]"
    },
    {
      "type": "paragraph",
      "id": "a16117d2a6277ee9",
      "text": "\"The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a [[Function]], it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern.\" ⇒ [[Task Specification by Memetic Proxy]]"
    },
    {
      "type": "markdown",
      "id": "ec141bac842dd652",
      "text": "[…] **After consolidation of the world society, however, the question will arise whether the unity of the evolving system does not make all intermediate solutions obsolete and if one wants further evolution, one must also [[plan]] it.** ⇒ [[Socio-Cultural Evolution]]"
    },
    {
      "type": "pagefold",
      "id": "186ab41c200ed96c",
      "text": "chat.openai"
    },
    {
      "type": "paragraph",
      "id": "ba32ab437eaf9c12",
      "text": "Here's a JavaScript representation of the statement:"
    },
    {
      "type": "code",
      "id": "da4f43bbc485a0d0",
      "text": "const examples = [...];\n\nlet continuation;\nif (examples.length >= numerous) {\n  continuation = examples[0];\n} else {\n  continuation = someOtherFunction();\n}\n"
    },
    {
      "type": "paragraph",
      "id": "175df2eb131f654d",
      "text": "Note that numerous and someOtherFunction() would need to be defined in order for this code to be functional. This code snippet is intended to demonstrate how the statement could be translated into code form."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Prompt",
        "story": []
      },
      "date": 1674731791152
    },
    {
      "id": "298e80966937b3b7",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "298e80966937b3b7",
        "text": "⇒ [[Prompt Based Image Synthesis]] "
      },
      "date": 1674731794508
    },
    {
      "item": {
        "type": "factory",
        "id": "7ac338d0774a20c1"
      },
      "id": "7ac338d0774a20c1",
      "type": "add",
      "after": "298e80966937b3b7",
      "date": 1675058859412
    },
    {
      "type": "edit",
      "id": "7ac338d0774a20c1",
      "item": {
        "type": "paragraph",
        "id": "7ac338d0774a20c1",
        "text": "Prompt Programming"
      },
      "date": 1675058862261
    },
    {
      "type": "edit",
      "id": "7ac338d0774a20c1",
      "item": {
        "type": "paragraph",
        "id": "7ac338d0774a20c1",
        "text": "⇒ [[Prompt Programming]]"
      },
      "date": 1675058872511
    },
    {
      "type": "edit",
      "id": "7ac338d0774a20c1",
      "item": {
        "type": "paragraph",
        "id": "7ac338d0774a20c1",
        "text": "⇒ [[Prompt Programming]] ⇒ [[Dynamics of Language]]"
      },
      "date": 1675060691192
    },
    {
      "type": "edit",
      "id": "7ac338d0774a20c1",
      "item": {
        "type": "paragraph",
        "id": "7ac338d0774a20c1",
        "text": "⇒ [[Prompt Programming]] ⇒ [[Dynamics of Language]] ⇒ [[Task Specification by Memetic Proxy]]"
      },
      "date": 1675079354771
    },
    {
      "item": {
        "type": "factory",
        "id": "918bf3fd9b234008"
      },
      "id": "918bf3fd9b234008",
      "type": "add",
      "after": "7ac338d0774a20c1",
      "date": 1675079364251
    },
    {
      "type": "edit",
      "id": "918bf3fd9b234008",
      "item": {
        "type": "graphviz",
        "id": "918bf3fd9b234008",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1675079374870
    },
    {
      "item": {
        "type": "factory",
        "id": "e3989a1939e6fd02"
      },
      "id": "e3989a1939e6fd02",
      "type": "add",
      "after": "918bf3fd9b234008",
      "date": 1675079453017
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[Terrorist Network]]"
      },
      "date": 1675079469603
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[Terrorist Network]] ⇒ [[2023-01-24]]"
      },
      "date": 1675079860174
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[Terrorist Network]] ⇒ [[2023-01-24]] ⇒ [[Modelling Insurgent and Terrorist Networks]] "
      },
      "date": 1675079895185
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]]  ⇒ [[Terrorist Network]] ⇒ [[2023-01-24]] ⇒ [[Modelling Insurgent and Terrorist Networks]] "
      },
      "date": 1675079966324
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]]  ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] "
      },
      "date": 1675079999333
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] "
      },
      "date": 1675080065455
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[choose]] the prompt "
      },
      "date": 1675080106035
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[choose]] the prompt ⇒ [[plan]]"
      },
      "date": 1675080163386
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[choose]] the prompt ⇒ [[plan]] ⇒ [[Socio-Cultural Evolution]]"
      },
      "date": 1675080172072
    },
    {
      "item": {
        "type": "factory",
        "id": "a3b6228878770adf"
      },
      "id": "a3b6228878770adf",
      "type": "add",
      "after": "e3989a1939e6fd02",
      "date": 1675080243840
    },
    {
      "id": "a16117d2a6277ee9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a16117d2a6277ee9",
        "text": "The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a function, it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern."
      },
      "after": "e3989a1939e6fd02",
      "date": 1675080252157
    },
    {
      "type": "remove",
      "id": "a3b6228878770adf",
      "date": 1675080254832
    },
    {
      "type": "edit",
      "id": "a16117d2a6277ee9",
      "item": {
        "type": "paragraph",
        "id": "a16117d2a6277ee9",
        "text": "\"The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a function, it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern.\" ⇒ [[Task Specification by Memetic Proxy]]"
      },
      "date": 1675080294806
    },
    {
      "id": "3b7f9aea26c15098",
      "type": "add",
      "item": {
        "type": "html",
        "id": "3b7f9aea26c15098",
        "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2008.21.52.png\"\n>"
      },
      "after": "e3989a1939e6fd02",
      "date": 1675080329970
    },
    {
      "id": "ec141bac842dd652",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ec141bac842dd652",
        "text": "With all these characteristics sociocultural evolution (as well as organic evolution) is itself an evolutionary achievement. In all differences between organic and sociocultural evolution it can be seen that this new possibility was not dependent on immediate perfection, but could build up gradually: Unnecessity of chance variation does not exclude the use of chance; the possibility to choose among the possible does not exclude the possibility to choose among the real; the reduction of the number of stabilizing systems does not require the immediate reduction to one; and socio-cultural evolution does not depend on immediate self-thematization, but can use its own progress as illustrative material in such a way that instead of evolution first system history becomes conscious. **After consolidation of the world society, however, the question will arise whether the unity of the evolving system does not make all intermediate solutions obsolete and if one wants further evolution, one must also [[plan]] it.**"
      },
      "after": "a16117d2a6277ee9",
      "date": 1675080405212
    },
    {
      "type": "edit",
      "id": "ec141bac842dd652",
      "item": {
        "type": "markdown",
        "id": "ec141bac842dd652",
        "text": "[…] **After consolidation of the world society, however, the question will arise whether the unity of the evolving system does not make all intermediate solutions obsolete and if one wants further evolution, one must also [[plan]] it.**"
      },
      "date": 1675080416439
    },
    {
      "type": "edit",
      "id": "ec141bac842dd652",
      "item": {
        "type": "markdown",
        "id": "ec141bac842dd652",
        "text": "[…] **After consolidation of the world society, however, the question will arise whether the unity of the evolving system does not make all intermediate solutions obsolete and if one wants further evolution, one must also [[plan]] it.** ⇒ [[Socio-Cultural Evolution]]"
      },
      "date": 1675080430971
    },
    {
      "id": "ba32ab437eaf9c12",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ba32ab437eaf9c12",
        "text": "chat.openai: Here's a JavaScript representation of the statement:"
      },
      "after": "ec141bac842dd652",
      "date": 1675081195769
    },
    {
      "id": "da4f43bbc485a0d0",
      "type": "add",
      "item": {
        "type": "code",
        "id": "da4f43bbc485a0d0",
        "text": "const examples = [...];\n\nlet continuation;\nif (examples.length >= numerous) {\n  continuation = examples[0];\n} else {\n  continuation = someOtherFunction();\n}\n"
      },
      "after": "ba32ab437eaf9c12",
      "date": 1675081200029
    },
    {
      "id": "175df2eb131f654d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "175df2eb131f654d",
        "text": "Note that numerous and someOtherFunction() would need to be defined in order for this code to be functional. This code snippet is intended to demonstrate how the statement could be translated into code form."
      },
      "after": "da4f43bbc485a0d0",
      "date": 1675081203277
    },
    {
      "item": {
        "type": "factory",
        "id": "186ab41c200ed96c"
      },
      "id": "186ab41c200ed96c",
      "type": "add",
      "after": "175df2eb131f654d",
      "date": 1675081217317
    },
    {
      "type": "edit",
      "id": "186ab41c200ed96c",
      "item": {
        "type": "pagefold",
        "id": "186ab41c200ed96c",
        "text": "chat.openai"
      },
      "date": 1675081219630
    },
    {
      "id": "186ab41c200ed96c",
      "type": "move",
      "order": [
        "298e80966937b3b7",
        "7ac338d0774a20c1",
        "918bf3fd9b234008",
        "e3989a1939e6fd02",
        "3b7f9aea26c15098",
        "a16117d2a6277ee9",
        "ec141bac842dd652",
        "186ab41c200ed96c",
        "ba32ab437eaf9c12",
        "da4f43bbc485a0d0",
        "175df2eb131f654d"
      ],
      "date": 1675081222437
    },
    {
      "type": "edit",
      "id": "ba32ab437eaf9c12",
      "item": {
        "type": "paragraph",
        "id": "ba32ab437eaf9c12",
        "text": "Here's a JavaScript representation of the statement:"
      },
      "date": 1675081231105
    },
    {
      "type": "add",
      "id": "9b103c6100b075ac",
      "item": {
        "type": "paragraph",
        "id": "9b103c6100b075ac",
        "text": "⇒ [[Intervention]]"
      },
      "after": "e3989a1939e6fd02",
      "date": 1675103544441
    },
    {
      "id": "9b103c6100b075ac",
      "type": "move",
      "order": [
        "298e80966937b3b7",
        "7ac338d0774a20c1",
        "918bf3fd9b234008",
        "e3989a1939e6fd02",
        "3b7f9aea26c15098",
        "9b103c6100b075ac",
        "a16117d2a6277ee9",
        "ec141bac842dd652",
        "186ab41c200ed96c",
        "ba32ab437eaf9c12",
        "da4f43bbc485a0d0",
        "175df2eb131f654d"
      ],
      "date": 1675103546535
    },
    {
      "type": "edit",
      "id": "e3989a1939e6fd02",
      "item": {
        "type": "paragraph",
        "id": "e3989a1939e6fd02",
        "text": "⇒ [[deviate]] from the pattern ⇒ [[Terrorist Network]] ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[choose]] the prompt ⇒ [[plan]] ⇒ [[Socio-Cultural Evolution]] ⇒ [[Intervention]]"
      },
      "date": 1675103631463
    },
    {
      "type": "edit",
      "id": "a16117d2a6277ee9",
      "item": {
        "type": "paragraph",
        "id": "a16117d2a6277ee9",
        "text": "\"The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a [[Function]], it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern.\" ⇒ [[Task Specification by Memetic Proxy]]"
      },
      "date": 1675103730141
    }
  ]
}