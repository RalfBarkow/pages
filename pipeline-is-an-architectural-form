{
  "title": "Pipeline Is an Architectural Form",
  "story": [
    {
      "type": "paragraph",
      "id": "a6d74105dba4c099",
      "text": "[…] the most important words or verbs or operators are the shortest ones, like + is pretty important so it doesn’t take a lot of space, but if you think about a sequencing, putting one thing after another, that sequential nature is that one operation that is just implicit in just about every language. So, yes we think of things sequentially and that was a real advance when Unix came along and said “let’s make simple little things that read from input and write to output and then you can put something at the other end and catch that and read it and write it and that [[Pipeline Is an Architectural Form]]”, very successful, I (Ward) consider it [[The Latin of Our Discipline]], to go back and think in those terms. But, as we build the really high performance data driven multi computer things just the response times that people expect it gets in the way, [[Process]] is too heavy, so it’s a pendulum that is swinging back and forth, before Unix, people they were doing some synchronous, some asynchronous, you never knew what you were doing, so I think all synchronous, all asynchronous, keep it straight, what idiom you are using. That’s why I say JavaScript is yet to really fully settle down on how it’s properly written. I think Java is way ahead on that regard. But then you’ve got the mavericks there, the Scalas and so forth that say “well, yes, but we can do better too’, and that’s pretty impressive stuff."
    },
    {
      "type": "pagefold",
      "id": "0391a41b7696da45",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "2be71c23ba4ea616",
      "site": "wiki.ralfbarkow.ch",
      "slug": "the-latin-of-our-discipline",
      "title": "The Latin of Our Discipline",
      "text": "Ward Cunningham on the Appeal of OOP and Dynamic Languages, Federated Wiki. [https://www.infoq.com/interviews/cunningham-federated-wiki/ page] (10:17 ff. within the video)"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Pipeline Is an Architectural Form",
        "story": []
      },
      "date": 1712812112923
    },
    {
      "item": {
        "type": "factory",
        "id": "2be71c23ba4ea616"
      },
      "id": "2be71c23ba4ea616",
      "type": "add",
      "date": 1712812115083
    },
    {
      "type": "edit",
      "id": "2be71c23ba4ea616",
      "item": {
        "type": "reference",
        "id": "2be71c23ba4ea616",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-latin-of-our-discipline",
        "title": "The Latin of Our Discipline",
        "text": "[…] the most important words or verbs or operators are the shortest ones, like + is pretty important so it doesn’t take a lot of space, but if you think about a sequencing, putting one thing after another, that sequential nature is that one operation that is just implicit in just about every language. So, yes we think of things sequentially and that was a real advance when Unix came along and said “let’s make simple little things that read from input and write to output and then you can put something at the other end and catch that and read it and write "
      },
      "date": 1712812120585
    },
    {
      "type": "edit",
      "id": "2be71c23ba4ea616",
      "item": {
        "type": "reference",
        "id": "2be71c23ba4ea616",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-latin-of-our-discipline",
        "title": "The Latin of Our Discipline",
        "text": "Ward Cunningham on the Appeal of OOP and Dynamic Languages, Federated Wiki. [https://www.infoq.com/interviews/cunningham-federated-wiki/ page] (10:17 ff. within the video)"
      },
      "date": 1712812126175
    },
    {
      "id": "a6d74105dba4c099",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a6d74105dba4c099",
        "text": "[…] the most important words or verbs or operators are the shortest ones, like + is pretty important so it doesn’t take a lot of space, but if you think about a sequencing, putting one thing after another, that sequential nature is that one operation that is just implicit in just about every language. So, yes we think of things sequentially and that was a real advance when Unix came along and said “let’s make simple little things that read from input and write to output and then you can put something at the other end and catch that and read it and write it and that [[Pipeline Is an Architectural Form]]”, very successful, I (Ward) consider it [[The Latin of Our Discipline]], to go back and think in those terms. But, as we build the really high performance data driven multi computer things just the response times that people expect it gets in the way, [[Process]] is too heavy, so it’s a pendulum that is swinging back and forth, before Unix, people they were doing some synchronous, some asynchronous, you never knew what you were doing, so I think all synchronous, all asynchronous, keep it straight, what idiom you are using. That’s why I say JavaScript is yet to really fully settle down on how it’s properly written. I think Java is way ahead on that regard. But then you’ve got the mavericks there, the Scalas and so forth that say “well, yes, but we can do better too’, and that’s pretty impressive stuff."
      },
      "attribution": {
        "page": "The Latin of Our Discipline"
      },
      "date": 1712812148168
    },
    {
      "item": {
        "type": "factory",
        "id": "0391a41b7696da45"
      },
      "id": "0391a41b7696da45",
      "type": "add",
      "after": "2be71c23ba4ea616",
      "date": 1712812152670
    },
    {
      "type": "edit",
      "id": "0391a41b7696da45",
      "item": {
        "type": "pagefold",
        "id": "0391a41b7696da45",
        "text": "~"
      },
      "date": 1712812156973
    },
    {
      "id": "0391a41b7696da45",
      "type": "move",
      "order": [
        "a6d74105dba4c099",
        "0391a41b7696da45",
        "2be71c23ba4ea616"
      ],
      "date": 1712812165181
    }
  ]
}