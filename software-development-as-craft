{
  "title": "Software Development As Craft",
  "story": [
    {
      "type": "html",
      "text": "Good software development is a <b>craft</b> because it produces a result that is both functional and beautiful.",
      "id": "e43b4afa37b7798ab20f4a508161cd5b"
    },
    {
      "type": "html",
      "text": "\nIf we produced software according to rigorously defined rules of what's \"true in the universe\" then it might be a science, or an application of \"engineering\" principles. ([[Programming As Engineering]]. So I guess beautiful buildings are a result of architecture, not engineering.)",
      "id": "3de70f7ce4b48c6f56a4336d871d4dbe"
    },
    {
      "type": "html",
      "text": "\nIf we produced something beautiful (or pleasing to us), but not functional, then we would be doing art. ([[Programming As Art]])",
      "id": "b4f4716214b83d8482679ca254c39396"
    },
    {
      "type": "html",
      "text": "\nAs craftsmen (and -women) we should feel proud that we produce high quality product that serve a very useful purpose. [[Discipline Envy]] is for those who don't really know what they're doing.",
      "id": "666624d67a39e9c2c9497c7aae4df688"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "Recently. I have heard talk about <i>formalizing</i> patterns and proving that the concept has scientific validity... Well, sometimes I need to remind myself why I develop software and write patterns:",
      "id": "82b0582cdb2578ab10ddcdacbc93f3e4"
    },
    {
      "type": "html",
      "text": "\nSometimes we forget that most of software development is about people. Ultimately ,the greater percentage of software modules and programs written will be viewed and/or used by other people.",
      "id": "068b9e4d54a647a4b6e7c8dec21c77e7"
    },
    {
      "type": "html",
      "text": "\nWhen we forget, we tend to tack on interfaces, write end-user manuals to explain the tricky concepts, and allow cryptic error messages like <i>abort: system error</i> to explain to a user why something doesn't work.",
      "id": "f797dc2add34c537165cbf34dce718a5"
    },
    {
      "type": "html",
      "text": "\nWe also tend to resist viewing design and implementation as true legacy to be left behind for others developers who follow. What we leave behind should, above and beyond technical content, adequately communicate design and implementation issues (the why and how) to the future developers.",
      "id": "8c1bdea65dbda6b5e20f80f2d99ef81d"
    },
    {
      "type": "html",
      "text": "\nAs much as we like to view software development as",
      "id": "bec71f0d3944ac7a08f2b7269c005777"
    },
    {
      "type": "html",
      "text": "<i>applied science</i> or ",
      "id": "0c6b9ccdf9f5d5312f3764e418929b38"
    },
    {
      "type": "html",
      "text": "<i>engineering</i>, we must also remember that it is a craft. It takes good taste and carefully thought out design to make useful software.",
      "id": "1e6e66a55f12ae8c671e7698e8ae24e7"
    },
    {
      "type": "html",
      "text": "\nYou don't need fancy GUIs, animation or sound to make friendly software. You need sound technical skills, a passion for quality, and an open mind.",
      "id": "33f73e7857b4989bb86422d83b711ec5"
    },
    {
      "type": "html",
      "text": "-- [[Todd Coram]]",
      "id": "349a3ee2bd45894dcec3757f712f92da"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nThere is a lot of pressure in the worlds of both academe and business to formalize software analysis, design, and engineering into more of a science and less of a black art. Personally, I think they're flogging a dead horse.",
      "id": "d932a02ffdc5842abe3f1514b2efd5f5"
    },
    {
      "type": "html",
      "text": "\nYes, much of software engineering can be formalized into rules, patterns, methodologies etc. Just as an artist must follow certain rules when mixing pigments to get a specific colour. But what remains is down to individual skill and experience.",
      "id": "331260d47e071de80dc4e2627140a83e"
    },
    {
      "type": "html",
      "text": "\nIf it was a pure science, anyone could do it and excel. But it's not. You need a particular mindset and enthusiasm for the job. The programmer who thinks they've <i>learnt enough</i> will probably never be a software artist.",
      "id": "6d1d8e6840422550ce1ad768fc2dc83b"
    },
    {
      "type": "html",
      "text": "-- [[Keith Derrick]]",
      "id": "32d1d4cafe1603c25bab812439c53f41"
    },
    {
      "type": "html",
      "text": "\nI take some exception to this pejorative view of science. After all, scientists consider themselves artists, not just craftsmen. ",
      "id": "1a11413c30f782e9486d6cc006a3b0f6"
    },
    {
      "type": "html",
      "text": "-- [[Dan Rawsthorne]]",
      "id": "0c0b32f4150c1483e0bbe5c73ef1d419"
    },
    {
      "type": "html",
      "text": "\nEngineering is neither pure science nor pure craft. It is the artful mix of both. Creating a product (any product) requires imagination. This is art, pure and simple. Building complex products requires science. The successful engineer must master both. Many in software have mastered the art, none have really mastered the science. Too bad, because we could produce truly elegant programs that really work as they are intended to work.",
      "id": "84d44295a3c36c07a56448fdddd3fbbc"
    },
    {
      "type": "html",
      "text": "-- [[Scott Whitmire]]",
      "id": "07177987cd56648ecd3510dffad2e223"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nI am reminded of [[Guitar Craft]] ([http://www.cs.man.ac.uk/aig/staff/toby/et/articles/fripp-gu.htm www.cs.man.ac.uk]), a conscious course of study turning guitar playing into a craft. I've never taken the course, but I would love to some day.",
      "id": "977418b9ab01503475f613b60c17925b"
    },
    {
      "type": "html",
      "text": "-- [[Kent Beck]]",
      "id": "7af7c2adb74be1e98dc209ff7ff4b77d"
    },
    {
      "type": "html",
      "text": "\nThere's a very well established pattern lore in the [[Game Of Go]] - I'm surprised no one here has referred to it before. Go-playing is a 4,000 year-old craft whose study involves extensive examination of patterns (joseki) and heuristics (proverbs). The theory is that knowledge of the craft of Go is absolutely fundamental to the production of Go as art - and as the art is codified, it becomes craft. Art is just the bleeding edge of craft. -- [[Peter Merel]].",
      "id": "717891ae77587285ddcd57cd601adbf0"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": " <b>Work</b> -- to satisfy your boss.",
      "id": "013b6f476f71f41af5f00383e972d14e"
    },
    {
      "type": "html",
      "text": " <b>Craft</b> -- to satisfy your customer.",
      "id": "157d378f50e7367b8bd0a1a7f548ae48"
    },
    {
      "type": "html",
      "text": " <b>Art</b> -- to satisfy yourself.",
      "id": "22b4de808dd944c797716a3d83dcaa22"
    },
    {
      "type": "html",
      "text": "\nThere's more to it than this, I'm sure, but I find these distinctions useful. -- [[Ward Cunningham]]",
      "id": "3718a2f96730904686e462b8e9d9da5d"
    },
    {
      "type": "html",
      "text": "\nSee also [[Turkish Crafts]].",
      "id": "23edcebbc455bcdc7dade5342778657e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nI heard the following the other day:",
      "id": "0b9e14b3b32e414b103118a14b0b2889"
    },
    {
      "type": "html",
      "text": " If you work with your hands, you're a mechanic",
      "id": "d4cf5fca6e6ae3ab9ec7ad3e618dc97c"
    },
    {
      "type": "html",
      "text": " If you work with your hands and your head, you're an artisan (read craftsperson)",
      "id": "38a48709a4f545a8b0a1378c170dbe18"
    },
    {
      "type": "html",
      "text": " If you work with your hands, your head and your heart, you're an artist.",
      "id": "faa9ef86a79661330af9b554a25825de"
    },
    {
      "type": "html",
      "text": "\nSince patterns create elegance, I think they are especially good for those that work with their heart as well as their head.",
      "id": "e02edf8c426a66e0a1fe0c0cdaa1d9e7"
    },
    {
      "type": "html",
      "text": "<i>I disagree. (1) A really good craftsperson works with their heart too. I used to know a drum-maker who lost money for years because that was what he really wanted to do. (2) Do composers and poets work with their hands?</i>",
      "id": "a66e9a2035e1179dfcaba41de7e96f69"
    },
    {
      "type": "html",
      "text": "(1) A really good craftsperson who works with their heart is an artist.",
      "id": "7194619976a2364342eaa1caea9f539d"
    },
    {
      "type": "html",
      "text": "(2) Don't composers and poets write down in some form what they create?",
      "id": "3bcbdb63eb136b78ee3ac1ef9687c5c8"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nCheck out the [[Chuang Tse]] version on [[Cook Ding]]",
      "id": "151d245c0a3e59e99ac34229b47534a0"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nI love the idea of [[Software Development As Craft]], but every time I see the writings of [[Jim Coplien]], [[Kent Beck]] and others where there is so much, dare I say, love of doing a good job and the right specialized job for the situation, I just get the feeling that it is great, but someday, inevitably, technological advances will come along that will render our lore of craft useless.",
      "id": "c1774f1d591ddf6608ce6be637181d9a"
    },
    {
      "type": "html",
      "text": "\nUnlike art, where something like [[Robert Fripp]]'s [[Guitar Craft]] is sustainable, we have to deal with creeping standardization and competitive pressures that tend to churn and antiquate methods. While the spirit of inquiry and the love of doing and doing it right will never go away, the particular knowledge and heuristics or content of the craft will. Things are already changing. I see [[Extreme Programming]] as something along the lines of \"good enough software\" along with Microsoft's synch and stabilize methods. More programmers are employed now than ever. I don't think that the craft model will be sustainable in the face of pressure to drive costs down. ",
      "id": "bb0cb4536940f56bc58e911aaf7ccf36"
    },
    {
      "type": "html",
      "text": "<i>Synch and stabilize is good. Knowing what is \"good enough\" is good. Software costs are not necessarily reduced, however, by deviation from a craft model. In XP we strive to do just what the customer needs, provably correctly, as fast as possible. That's craft, I submit, and it's hard to beat. -- [[Ron Jeffries]]</i> ",
      "id": "4b9d839e404daa0a9ecc3cb2223cd04f"
    },
    {
      "type": "html",
      "text": "\nComponent-driven design in particular is ascendant. We should be assembling more and more of our systems these days. We are living in the age of the cobbler-artisans. Will we maintain our pride and identity in the face of people who just want $20 shoes? I see how the pride in craftsmanship over the years has changed towards pride in giving the customer what they want. And that is good, it is what we are paid for. It looks like there will be more of that. But, to respond to Ward, will there be enough art to keep us happy?",
      "id": "4a4a0dd2bbae71694de8934da641b64b"
    },
    {
      "type": "html",
      "text": "<i>I used to think payroll was easy. We export over 1000 values per person to around 20 downstream programs. There are about seven savings plans, half a dozen different ways of supporting people who are laid off or ill ... it goes on and on. No one is ever (IMO) going to build systems that complicated the way $20 shoes are built. More components, yes. Less craft? Never.</i>",
      "id": "8747933bada9f3705fea88f9b06c1d79"
    },
    {
      "type": "html",
      "text": "<i>Designer software, with the [[Extreme Programming]] logo on it. Costs more, but your friends know you're cool. I can go with it. -- [[Ron Jeffries]]</i>",
      "id": "6dea7b897f7a305ce020beb9a54e7872"
    },
    {
      "type": "html",
      "text": "\nI want to be doing this 20 years from now. But it is going to be different. OO will be old school. -- [[Michael Feathers]]",
      "id": "e10c6f523cfd86784da1381855af1aed"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nWhy not look at our forbears - the realware architects and engineers? Their domains are simpler than ours. After all, how many ways are there to build a building or bolt together a bridge? Yet no one imagines the end of realware architecture or engineering any time soon.",
      "id": "b27dda59ea3ae7233c2681b504c338f3"
    },
    {
      "type": "html",
      "text": "\nCertainly there are track housing projects and robotic assembly lines. Certainly there are slums and malls. But the engineers continue to provide value so long as there is a market for more complex, more refined and more maintainable products. That market isn't going away so far as I can see.",
      "id": "f1ad39056af208d7cbf49e12dca41eb0"
    },
    {
      "type": "html",
      "text": "\nInstead, the productivity of an engineer increases with time. His tools get better, get meta, get standardized, and get obsoleted by new tools, but so long as he keeps up and learns to use what is at hand his drive, discipline and spark will be in demand. He might not be making the same old nuts and bolts any more. He might be making things with the things that the nuts and bolts made. But that only makes his job more interesting.",
      "id": "4f0b5e1c103f312e9d123e7d448ce290"
    },
    {
      "type": "html",
      "text": "\nI expect, being of that bent, that one day our skills <b>will</b> no longer be required. At that time I expect that no human skill will be required, for then we will be bootstrapping ourselves to [[Trans Humanity]]. Sure, we'll no longer be making $20 shoes. We'll be making the machine that makes $20 shoes, and then the machine that makes that machine, and then the machine that makes that. Eventually one or more of us must be making the machine that makes us, and then that machine will make the machine that makes that machine, and so on ad deity.",
      "id": "090beb54e326417d62d1b08bab10de8c"
    },
    {
      "type": "html",
      "text": "<i>I've already made three of the 'machine that makes us'. I call them Gregory, Tommy and Andrew!</i> -- [[Kiel Hodges]]",
      "id": "40ed0a0c7ad0ad4181df3d899ff54d87"
    },
    {
      "type": "html",
      "text": "\nJust when this [[Technological Singularity]] might arrive, I have no idea - I'd bet it'll be more than 20 years and less than 200. But I expect even then our poor mental porridge might serve as the germ of the transhuman equivalent of an originative engineer, and so our craft would continue on, not superseded, only vastened. ",
      "id": "7fcabd3d8a92671208db1a1cd5268cd1"
    },
    {
      "type": "html",
      "text": "-- [[Peter Merel]]",
      "id": "6b0cc229814578fc2b57d2b164cc6101"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "I've seen the analogy of producing software to making shoes and the analogy of producing software to constructing buildings. But software is infinitely malleable. The appropriate analogy is to making shoes",
      "id": "dde958d58f39499d836439443d75586e"
    },
    {
      "type": "html",
      "text": "<i>and</i> constructing buildings",
      "id": "d74c4d5fcc4fd8ae6bb5347cb8f2d7f3"
    },
    {
      "type": "html",
      "text": "<i>and</i> building airplanes",
      "id": "6f3f79de556aab037c3ad676aaafda9d"
    },
    {
      "type": "html",
      "text": "<i>and</i> creating and running organizations",
      "id": "a0d8cedece81230013b4eee8f4f4a537"
    },
    {
      "type": "html",
      "text": "<i>and</i> constructing roads",
      "id": "130dfd9678953944c7da8d7481b1f741"
    },
    {
      "type": "html",
      "text": "<i>and</i> making appliances",
      "id": "7c7b35335e7060ef08663e6915dbf6f2"
    },
    {
      "type": "html",
      "text": "<i>and</i> so on...",
      "id": "a5cb1f6e7cc5b469e693508e89a2fa55"
    },
    {
      "type": "html",
      "text": "\nFor the foreseeable future, the craft will survive. It will change as it has since the beginning; that's one of the appeals for many of us. But as some things become more cut and dried, new opportunities will arise in unforeseen areas. The craft will live on.",
      "id": "fe94bb73599237e0ffc6e6b678f2a929"
    },
    {
      "type": "html",
      "text": "-- [[Kiel Hodges]]",
      "id": "415574b3067a331608c1a1fbccf9ca52"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "When I watch [[Star Trek The Next Generation]] and [[Star Trek Deep Space Nine]], and see how much trouble the people have making the holo-deck do what they want, I say \"there will still be a need for programmers in the 24th century.\"",
      "id": "c760450a5117495b1fe6dd0edc6ae0e8"
    },
    {
      "type": "html",
      "text": "\nThis is something that comes to mind every time another salesman gives his spiel about how his product eliminates the need for programmers. <b>Please go ahead and try.</b> I say; it'll reduce the tedium, but it won't eliminate me. -- [[Jeff Grigg]]",
      "id": "0d38440a450fca1d0e79990cfe262bd9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "Programming will endure. [[Teach Me To Smoke]].",
      "id": "ab2f92a73029e59bf436334ab9206338"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "This discussion of craft seems to miss the social aspects, in particular the notions of <i>apprenticeship</i> \nand <i>peer judgement</i>. Many skilled crafts take place either on site or in a workshop (or, if you count dance musicians, in a band). This is where [[Extreme Programming]] looks right because it has good mechanisms for passing on skills and for keeping an eye on what people are doing as it develops. There's also an element in many crafts that, as you get better, you either specialize in the hard bits or get more supervisory. I suppose this would be like a coach in [[Extreme Programming]].",
      "id": "86c55dab7680ab3217083169c95862b9"
    },
    {
      "type": "html",
      "text": "<i>I was listening to Jacques Pepin talk about his apprenticeship and he was saying that \"after a year he graduated to the stove.\" Maybe we need this kind of thing in programming - a year of grunt work that teaches you respect for the tools, the materials and your master. But what would you do in that year? In Germany they still make apprentice machinists file a metal cube by hand for the first four weeks. It's completely \"unproductive\" but, man, does it teach you about tools and materials.</i> --[[Andrew Queisser]]",
      "id": "833ec7aae2a48f1110bc74baa26d1d68"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "\nIf you start talking about this stuff and people seem to be arguing with you for reasons you don't understand, remember that some of these terms are very slippery. I love to talk about what I do as a craft; the word seems absolutely right to me. It captures the blend of beauty and practicality, the need for compromise, the amount of instinct and taste involved and the occasional difficulty of explaining decisions and reasoning to others, etc. But I have a colleague - a terrific programmer - who considers the term an insult. To him, a \"craft\" is a hobby (he associates it with \"arts and crafts\", and not in the sense of a style movement). So when someone says that programming is a craft, he feels it as an accusation that he gets paid for doing something useless.",
      "id": "cc9c377421b66750785a18c2447d8f9c"
    },
    {
      "type": "html",
      "text": "(I think he's wrong, incidentally, but it helps me to know that some people understand the word that way.)",
      "id": "69d675b73fe7997052213d2e8bc778ae"
    },
    {
      "type": "html",
      "text": "\nLikewise the word \"science.\" Above, [[Dan Rawsthorne]] said this:",
      "id": "c7b49711bfc28f81f45eb9281d9a5a5e"
    },
    {
      "type": "html",
      "text": "<i>I take some exception to this pejorative view of science. After all, scientists consider themselves artists, not just craftsmen.</i>",
      "id": "4f04b482291b4ae8489f09ac8e5e4f38"
    },
    {
      "type": "html",
      "text": "\nBut there are at least two meanings of the word \"science,\" and Dan was responding to someone who used it in the sense of \"he's got that down to a science,\" meaning that it could be done mechanically without thought. I know that that meaning of the word comes from a naive and incorrect popular view of what real science is, but nevertheless that is what the idiom actually means. -- [[Glenn Vanderburg]]",
      "id": "4573548e5a1685c0d8fe095e99bbcab7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "efcf423a6cef18d687e8fb77f7d08fee"
    },
    {
      "type": "html",
      "text": "See: [[Is Computer Science]]",
      "id": "46d3f6e9605b25c90799ab79046e9b6d"
    },
    {
      "type": "html",
      "text": "\nSee also: [[Art Craft Soft Science Hard Science]]",
      "id": "b4f4cdd1df42ac7c2c04b5c555bfe776"
    },
    {
      "type": "html",
      "text": "\nContrast: [[Software Development As Labor]]",
      "id": "a51d596db074ceb7e8285831e0bbc978"
    },
    {
      "type": "html",
      "text": "\n[[Category Wiki Favorites]]",
      "id": "c083c534cec3b4383b094d36be17b797"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?SoftwareDevelopmentAsCraft c2.com]",
      "id": "2d8e4389a6704f8552382d51a0d58643"
    }
  ],
  "journal": [
    {
      "date": 1133586014000,
      "id": "82824485a5d55772a3668aec1b81fe5c",
      "type": "create",
      "item": {
        "title": "Software Development As Craft",
        "story": [
          {
            "type": "html",
            "text": "Good software development is a <b>craft</b> because it produces a result that is both functional and beautiful.",
            "id": "e43b4afa37b7798ab20f4a508161cd5b"
          },
          {
            "type": "html",
            "text": "\nIf we produced software according to rigorously defined rules of what's \"true in the universe\" then it might be a science, or an application of \"engineering\" principles. ([[Programming As Engineering]]. So I guess beautiful buildings are a result of architecture, not engineering.)",
            "id": "3de70f7ce4b48c6f56a4336d871d4dbe"
          },
          {
            "type": "html",
            "text": "\nIf we produced something beautiful (or pleasing to us), but not functional, then we would be doing art. ([[Programming As Art]])",
            "id": "b4f4716214b83d8482679ca254c39396"
          },
          {
            "type": "html",
            "text": "\nAs craftsmen (and -women) we should feel proud that we produce high quality product that serve a very useful purpose. [[Discipline Envy]] is for those who don't really know what they're doing.",
            "id": "666624d67a39e9c2c9497c7aae4df688"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "Recently. I have heard talk about <i>formalizing</i> patterns and proving that the concept has scientific validity... Well, sometimes I need to remind myself why I develop software and write patterns:",
            "id": "82b0582cdb2578ab10ddcdacbc93f3e4"
          },
          {
            "type": "html",
            "text": "\nSometimes we forget that most of software development is about people. Ultimately ,the greater percentage of software modules and programs written will be viewed and/or used by other people.",
            "id": "068b9e4d54a647a4b6e7c8dec21c77e7"
          },
          {
            "type": "html",
            "text": "\nWhen we forget, we tend to tack on interfaces, write end-user manuals to explain the tricky concepts, and allow cryptic error messages like <i>abort: system error</i> to explain to a user why something doesn't work.",
            "id": "f797dc2add34c537165cbf34dce718a5"
          },
          {
            "type": "html",
            "text": "\nWe also tend to resist viewing design and implementation as true legacy to be left behind for others developers who follow. What we leave behind should, above and beyond technical content, adequately communicate design and implementation issues (the why and how) to the future developers.",
            "id": "8c1bdea65dbda6b5e20f80f2d99ef81d"
          },
          {
            "type": "html",
            "text": "\nAs much as we like to view software development as",
            "id": "bec71f0d3944ac7a08f2b7269c005777"
          },
          {
            "type": "html",
            "text": "<i>applied science</i> or ",
            "id": "0c6b9ccdf9f5d5312f3764e418929b38"
          },
          {
            "type": "html",
            "text": "<i>engineering</i>, we must also remember that it is a craft. It takes good taste and carefully thought out design to make useful software.",
            "id": "1e6e66a55f12ae8c671e7698e8ae24e7"
          },
          {
            "type": "html",
            "text": "\nYou don't need fancy GUIs, animation or sound to make friendly software. You need sound technical skills, a passion for quality, and an open mind.",
            "id": "33f73e7857b4989bb86422d83b711ec5"
          },
          {
            "type": "html",
            "text": "-- [[Todd Coram]]",
            "id": "349a3ee2bd45894dcec3757f712f92da"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nThere is a lot of pressure in the worlds of both academe and business to formalize software analysis, design, and engineering into more of a science and less of a black art. Personally, I think they're flogging a dead horse.",
            "id": "d932a02ffdc5842abe3f1514b2efd5f5"
          },
          {
            "type": "html",
            "text": "\nYes, much of software engineering can be formalized into rules, patterns, methodologies etc. Just as an artist must follow certain rules when mixing pigments to get a specific colour. But what remains is down to individual skill and experience.",
            "id": "331260d47e071de80dc4e2627140a83e"
          },
          {
            "type": "html",
            "text": "\nIf it was a pure science, anyone could do it and excel. But it's not. You need a particular mindset and enthusiasm for the job. The programmer who thinks they've <i>learnt enough</i> will probably never be a software artist.",
            "id": "6d1d8e6840422550ce1ad768fc2dc83b"
          },
          {
            "type": "html",
            "text": "-- [[Keith Derrick]]",
            "id": "32d1d4cafe1603c25bab812439c53f41"
          },
          {
            "type": "html",
            "text": "\nI take some exception to this pejorative view of science. After all, scientists consider themselves artists, not just craftsmen. ",
            "id": "1a11413c30f782e9486d6cc006a3b0f6"
          },
          {
            "type": "html",
            "text": "-- [[Dan Rawsthorne]]",
            "id": "0c0b32f4150c1483e0bbe5c73ef1d419"
          },
          {
            "type": "html",
            "text": "\nEngineering is neither pure science nor pure craft. It is the artful mix of both. Creating a product (any product) requires imagination. This is art, pure and simple. Building complex products requires science. The successful engineer must master both. Many in software have mastered the art, none have really mastered the science. Too bad, because we could produce truly elegant programs that really work as they are intended to work.",
            "id": "84d44295a3c36c07a56448fdddd3fbbc"
          },
          {
            "type": "html",
            "text": "-- [[Scott Whitmire]]",
            "id": "07177987cd56648ecd3510dffad2e223"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nI am reminded of [[Guitar Craft]] ([http://www.cs.man.ac.uk/aig/staff/toby/et/articles/fripp-gu.htm www.cs.man.ac.uk]), a conscious course of study turning guitar playing into a craft. I've never taken the course, but I would love to some day.",
            "id": "977418b9ab01503475f613b60c17925b"
          },
          {
            "type": "html",
            "text": "-- [[Kent Beck]]",
            "id": "7af7c2adb74be1e98dc209ff7ff4b77d"
          },
          {
            "type": "html",
            "text": "\nThere's a very well established pattern lore in the [[Game Of Go]] - I'm surprised no one here has referred to it before. Go-playing is a 4,000 year-old craft whose study involves extensive examination of patterns (joseki) and heuristics (proverbs). The theory is that knowledge of the craft of Go is absolutely fundamental to the production of Go as art - and as the art is codified, it becomes craft. Art is just the bleeding edge of craft. -- [[Peter Merel]].",
            "id": "717891ae77587285ddcd57cd601adbf0"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": " <b>Work</b> -- to satisfy your boss.",
            "id": "013b6f476f71f41af5f00383e972d14e"
          },
          {
            "type": "html",
            "text": " <b>Craft</b> -- to satisfy your customer.",
            "id": "157d378f50e7367b8bd0a1a7f548ae48"
          },
          {
            "type": "html",
            "text": " <b>Art</b> -- to satisfy yourself.",
            "id": "22b4de808dd944c797716a3d83dcaa22"
          },
          {
            "type": "html",
            "text": "\nThere's more to it than this, I'm sure, but I find these distinctions useful. -- [[Ward Cunningham]]",
            "id": "3718a2f96730904686e462b8e9d9da5d"
          },
          {
            "type": "html",
            "text": "\nSee also [[Turkish Crafts]].",
            "id": "23edcebbc455bcdc7dade5342778657e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nI heard the following the other day:",
            "id": "0b9e14b3b32e414b103118a14b0b2889"
          },
          {
            "type": "html",
            "text": " If you work with your hands, you're a mechanic",
            "id": "d4cf5fca6e6ae3ab9ec7ad3e618dc97c"
          },
          {
            "type": "html",
            "text": " If you work with your hands and your head, you're an artisan (read craftsperson)",
            "id": "38a48709a4f545a8b0a1378c170dbe18"
          },
          {
            "type": "html",
            "text": " If you work with your hands, your head and your heart, you're an artist.",
            "id": "faa9ef86a79661330af9b554a25825de"
          },
          {
            "type": "html",
            "text": "\nSince patterns create elegance, I think they are especially good for those that work with their heart as well as their head.",
            "id": "e02edf8c426a66e0a1fe0c0cdaa1d9e7"
          },
          {
            "type": "html",
            "text": "<i>I disagree. (1) A really good craftsperson works with their heart too. I used to know a drum-maker who lost money for years because that was what he really wanted to do. (2) Do composers and poets work with their hands?</i>",
            "id": "a66e9a2035e1179dfcaba41de7e96f69"
          },
          {
            "type": "html",
            "text": "(1) A really good craftsperson who works with their heart is an artist.",
            "id": "7194619976a2364342eaa1caea9f539d"
          },
          {
            "type": "html",
            "text": "(2) Don't composers and poets write down in some form what they create?",
            "id": "3bcbdb63eb136b78ee3ac1ef9687c5c8"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nCheck out the [[Chuang Tse]] version on [[Cook Ding]]",
            "id": "151d245c0a3e59e99ac34229b47534a0"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nI love the idea of [[Software Development As Craft]], but every time I see the writings of [[Jim Coplien]], [[Kent Beck]] and others where there is so much, dare I say, love of doing a good job and the right specialized job for the situation, I just get the feeling that it is great, but someday, inevitably, technological advances will come along that will render our lore of craft useless.",
            "id": "c1774f1d591ddf6608ce6be637181d9a"
          },
          {
            "type": "html",
            "text": "\nUnlike art, where something like [[Robert Fripp]]'s [[Guitar Craft]] is sustainable, we have to deal with creeping standardization and competitive pressures that tend to churn and antiquate methods. While the spirit of inquiry and the love of doing and doing it right will never go away, the particular knowledge and heuristics or content of the craft will. Things are already changing. I see [[Extreme Programming]] as something along the lines of \"good enough software\" along with Microsoft's synch and stabilize methods. More programmers are employed now than ever. I don't think that the craft model will be sustainable in the face of pressure to drive costs down. ",
            "id": "bb0cb4536940f56bc58e911aaf7ccf36"
          },
          {
            "type": "html",
            "text": "<i>Synch and stabilize is good. Knowing what is \"good enough\" is good. Software costs are not necessarily reduced, however, by deviation from a craft model. In XP we strive to do just what the customer needs, provably correctly, as fast as possible. That's craft, I submit, and it's hard to beat. -- [[Ron Jeffries]]</i> ",
            "id": "4b9d839e404daa0a9ecc3cb2223cd04f"
          },
          {
            "type": "html",
            "text": "\nComponent-driven design in particular is ascendant. We should be assembling more and more of our systems these days. We are living in the age of the cobbler-artisans. Will we maintain our pride and identity in the face of people who just want $20 shoes? I see how the pride in craftsmanship over the years has changed towards pride in giving the customer what they want. And that is good, it is what we are paid for. It looks like there will be more of that. But, to respond to Ward, will there be enough art to keep us happy?",
            "id": "4a4a0dd2bbae71694de8934da641b64b"
          },
          {
            "type": "html",
            "text": "<i>I used to think payroll was easy. We export over 1000 values per person to around 20 downstream programs. There are about seven savings plans, half a dozen different ways of supporting people who are laid off or ill ... it goes on and on. No one is ever (IMO) going to build systems that complicated the way $20 shoes are built. More components, yes. Less craft? Never.</i>",
            "id": "8747933bada9f3705fea88f9b06c1d79"
          },
          {
            "type": "html",
            "text": "<i>Designer software, with the [[Extreme Programming]] logo on it. Costs more, but your friends know you're cool. I can go with it. -- [[Ron Jeffries]]</i>",
            "id": "6dea7b897f7a305ce020beb9a54e7872"
          },
          {
            "type": "html",
            "text": "\nI want to be doing this 20 years from now. But it is going to be different. OO will be old school. -- [[Michael Feathers]]",
            "id": "e10c6f523cfd86784da1381855af1aed"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nWhy not look at our forbears - the realware architects and engineers? Their domains are simpler than ours. After all, how many ways are there to build a building or bolt together a bridge? Yet no one imagines the end of realware architecture or engineering any time soon.",
            "id": "b27dda59ea3ae7233c2681b504c338f3"
          },
          {
            "type": "html",
            "text": "\nCertainly there are track housing projects and robotic assembly lines. Certainly there are slums and malls. But the engineers continue to provide value so long as there is a market for more complex, more refined and more maintainable products. That market isn't going away so far as I can see.",
            "id": "f1ad39056af208d7cbf49e12dca41eb0"
          },
          {
            "type": "html",
            "text": "\nInstead, the productivity of an engineer increases with time. His tools get better, get meta, get standardized, and get obsoleted by new tools, but so long as he keeps up and learns to use what is at hand his drive, discipline and spark will be in demand. He might not be making the same old nuts and bolts any more. He might be making things with the things that the nuts and bolts made. But that only makes his job more interesting.",
            "id": "4f0b5e1c103f312e9d123e7d448ce290"
          },
          {
            "type": "html",
            "text": "\nI expect, being of that bent, that one day our skills <b>will</b> no longer be required. At that time I expect that no human skill will be required, for then we will be bootstrapping ourselves to [[Trans Humanity]]. Sure, we'll no longer be making $20 shoes. We'll be making the machine that makes $20 shoes, and then the machine that makes that machine, and then the machine that makes that. Eventually one or more of us must be making the machine that makes us, and then that machine will make the machine that makes that machine, and so on ad deity.",
            "id": "090beb54e326417d62d1b08bab10de8c"
          },
          {
            "type": "html",
            "text": "<i>I've already made three of the 'machine that makes us'. I call them Gregory, Tommy and Andrew!</i> -- [[Kiel Hodges]]",
            "id": "40ed0a0c7ad0ad4181df3d899ff54d87"
          },
          {
            "type": "html",
            "text": "\nJust when this [[Technological Singularity]] might arrive, I have no idea - I'd bet it'll be more than 20 years and less than 200. But I expect even then our poor mental porridge might serve as the germ of the transhuman equivalent of an originative engineer, and so our craft would continue on, not superseded, only vastened. ",
            "id": "7fcabd3d8a92671208db1a1cd5268cd1"
          },
          {
            "type": "html",
            "text": "-- [[Peter Merel]]",
            "id": "6b0cc229814578fc2b57d2b164cc6101"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "I've seen the analogy of producing software to making shoes and the analogy of producing software to constructing buildings. But software is infinitely malleable. The appropriate analogy is to making shoes",
            "id": "dde958d58f39499d836439443d75586e"
          },
          {
            "type": "html",
            "text": "<i>and</i> constructing buildings",
            "id": "d74c4d5fcc4fd8ae6bb5347cb8f2d7f3"
          },
          {
            "type": "html",
            "text": "<i>and</i> building airplanes",
            "id": "6f3f79de556aab037c3ad676aaafda9d"
          },
          {
            "type": "html",
            "text": "<i>and</i> creating and running organizations",
            "id": "a0d8cedece81230013b4eee8f4f4a537"
          },
          {
            "type": "html",
            "text": "<i>and</i> constructing roads",
            "id": "130dfd9678953944c7da8d7481b1f741"
          },
          {
            "type": "html",
            "text": "<i>and</i> making appliances",
            "id": "7c7b35335e7060ef08663e6915dbf6f2"
          },
          {
            "type": "html",
            "text": "<i>and</i> so on...",
            "id": "a5cb1f6e7cc5b469e693508e89a2fa55"
          },
          {
            "type": "html",
            "text": "\nFor the foreseeable future, the craft will survive. It will change as it has since the beginning; that's one of the appeals for many of us. But as some things become more cut and dried, new opportunities will arise in unforeseen areas. The craft will live on.",
            "id": "fe94bb73599237e0ffc6e6b678f2a929"
          },
          {
            "type": "html",
            "text": "-- [[Kiel Hodges]]",
            "id": "415574b3067a331608c1a1fbccf9ca52"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "When I watch [[Star Trek The Next Generation]] and [[Star Trek Deep Space Nine]], and see how much trouble the people have making the holo-deck do what they want, I say \"there will still be a need for programmers in the 24th century.\"",
            "id": "c760450a5117495b1fe6dd0edc6ae0e8"
          },
          {
            "type": "html",
            "text": "\nThis is something that comes to mind every time another salesman gives his spiel about how his product eliminates the need for programmers. <b>Please go ahead and try.</b> I say; it'll reduce the tedium, but it won't eliminate me. -- [[Jeff Grigg]]",
            "id": "0d38440a450fca1d0e79990cfe262bd9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "Programming will endure. [[Teach Me To Smoke]].",
            "id": "ab2f92a73029e59bf436334ab9206338"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "This discussion of craft seems to miss the social aspects, in particular the notions of <i>apprenticeship</i> \nand <i>peer judgement</i>. Many skilled crafts take place either on site or in a workshop (or, if you count dance musicians, in a band). This is where [[Extreme Programming]] looks right because it has good mechanisms for passing on skills and for keeping an eye on what people are doing as it develops. There's also an element in many crafts that, as you get better, you either specialize in the hard bits or get more supervisory. I suppose this would be like a coach in [[Extreme Programming]].",
            "id": "86c55dab7680ab3217083169c95862b9"
          },
          {
            "type": "html",
            "text": "<i>I was listening to Jacques Pepin talk about his apprenticeship and he was saying that \"after a year he graduated to the stove.\" Maybe we need this kind of thing in programming - a year of grunt work that teaches you respect for the tools, the materials and your master. But what would you do in that year? In Germany they still make apprentice machinists file a metal cube by hand for the first four weeks. It's completely \"unproductive\" but, man, does it teach you about tools and materials.</i> --[[Andrew Queisser]]",
            "id": "833ec7aae2a48f1110bc74baa26d1d68"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "\nIf you start talking about this stuff and people seem to be arguing with you for reasons you don't understand, remember that some of these terms are very slippery. I love to talk about what I do as a craft; the word seems absolutely right to me. It captures the blend of beauty and practicality, the need for compromise, the amount of instinct and taste involved and the occasional difficulty of explaining decisions and reasoning to others, etc. But I have a colleague - a terrific programmer - who considers the term an insult. To him, a \"craft\" is a hobby (he associates it with \"arts and crafts\", and not in the sense of a style movement). So when someone says that programming is a craft, he feels it as an accusation that he gets paid for doing something useless.",
            "id": "cc9c377421b66750785a18c2447d8f9c"
          },
          {
            "type": "html",
            "text": "(I think he's wrong, incidentally, but it helps me to know that some people understand the word that way.)",
            "id": "69d675b73fe7997052213d2e8bc778ae"
          },
          {
            "type": "html",
            "text": "\nLikewise the word \"science.\" Above, [[Dan Rawsthorne]] said this:",
            "id": "c7b49711bfc28f81f45eb9281d9a5a5e"
          },
          {
            "type": "html",
            "text": "<i>I take some exception to this pejorative view of science. After all, scientists consider themselves artists, not just craftsmen.</i>",
            "id": "4f04b482291b4ae8489f09ac8e5e4f38"
          },
          {
            "type": "html",
            "text": "\nBut there are at least two meanings of the word \"science,\" and Dan was responding to someone who used it in the sense of \"he's got that down to a science,\" meaning that it could be done mechanically without thought. I know that that meaning of the word comes from a naive and incorrect popular view of what real science is, but nevertheless that is what the idiom actually means. -- [[Glenn Vanderburg]]",
            "id": "4573548e5a1685c0d8fe095e99bbcab7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "efcf423a6cef18d687e8fb77f7d08fee"
          },
          {
            "type": "html",
            "text": "See: [[Is Computer Science]]",
            "id": "46d3f6e9605b25c90799ab79046e9b6d"
          },
          {
            "type": "html",
            "text": "\nSee also: [[Art Craft Soft Science Hard Science]]",
            "id": "b4f4cdd1df42ac7c2c04b5c555bfe776"
          },
          {
            "type": "html",
            "text": "\nContrast: [[Software Development As Labor]]",
            "id": "a51d596db074ceb7e8285831e0bbc978"
          },
          {
            "type": "html",
            "text": "\n[[Category Wiki Favorites]]",
            "id": "c083c534cec3b4383b094d36be17b797"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?SoftwareDevelopmentAsCraft c2.com]",
            "id": "2d8e4389a6704f8552382d51a0d58643"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1664257754336
    }
  ]
}