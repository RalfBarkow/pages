{
  "title": "Mercury OS",
  "story": [
    {
      "type": "paragraph",
      "id": "5ee775835e35bd40",
      "text": "Mercury OS is a speculative vision designed to question the paradigms governing human-computer interaction today. Questions and feedback are welcomed here. [https://www.mercuryos.com/art-direction site]"
    },
    {
      "type": "markdown",
      "id": "581e5437767dccee",
      "text": "> Mercury’s visual identity fuses the rational structures of Western Modernist design with the East Asian instinct to seek tranquility in chaos."
    },
    {
      "type": "pagefold",
      "id": "b41d77facb5aaba9",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "e54d165e823b16ad",
      "text": "Another concept set i would note, ideas from which would potentially play nice with glamorous (even though the design concept as a whole wasn't done that good) is https://www.mercuryos.com/ - implementing ideas from there, maybe in a separate product/plugin, would allow for no-code usage, and could evolve into a proper shell and a desktop environment (such as GNOME on Linux or Windows gui app stack), but much better. [https://discord.com/channels/729445214812504107/735946052347363551/985815087505870879 discord] \n"
    },
    {
      "type": "markdown",
      "id": "4d86d331688c7457",
      "text": "But to be honest what I don't like in Glamorous (and in Pharo, Emacs, and Common Lisp as well) is being exactly single lang centric, and monolythic. Being done in a microkernel-esque + microservice-esque way (i see a problem in passing gpu buffers, but that can be solved using either os tools or vulkan/gl extensions) would help much more for some products. Maybe as an opt-in thing, idk \nAlso you can look at widgets and touchbar made by apple, and live tiles in windows 10 - they seem to do gpu buffer passing as well\nIirc Chromium also does use ipc for gpu buffer passing, to help isolating os processes from each other, to help with security\nSingle lang centric means that only a single language can be used for developing proper apps for the platform for user interaction. This is a pain in android as well"
    },
    {
      "type": "markdown",
      "id": "060442ee06328e61",
      "text": "tudor girba — [https://discord.com/channels/729445214812504107/735946052347363551/985819649407066143 discord]\nThanks for the details.\n\nI can see how people can look at Moldable Development as a buzzword. Moldable Development is a programming practice that introduces a new feedback loop, not unlike how TDD or DevOps did.\n\nGT is a concrete environment. Emacs looks similar in that it can be extended within itself. GT is different in that you can actually practice Moldable Development. It's not the extensibility that is the key. It's the embedding it as a core part of the development flow. This has several dimensions, but it's easier to look at the outcome. In the core GT you get more than 2k extensions. These were created as an engineering need (as different from marketing) and act by themselves as validation for why the practice is relevant.\n\nThat said, we can certainly compare artifacts. Emacs was a great environment, but breaking free of text is not of secondary importance :). \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Mercury OS",
        "story": []
      },
      "date": 1658228858302
    },
    {
      "id": "e54d165e823b16ad",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "e54d165e823b16ad",
        "text": "Another concept set i would note, ideas from which would potentially play nice with glamorous (even though the design concept as a whole wasn't done that good) is https://www.mercuryos.com/ - implementing ideas from there, maybe in a separate product/plugin, would allow for no-code usage, and could evolve into a proper shell and a desktop environment (such as GNOME on Linux or Windows gui app stack), but much better. [https://discord.com/channels/729445214812504107/735946052347363551/985815087505870879 discord] \n"
      },
      "date": 1658228866552
    },
    {
      "id": "4d86d331688c7457",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "4d86d331688c7457",
        "text": "But to be honest what I don't like in Glamorous (and in Pharo, Emacs, and Common Lisp as well) is being exactly single lang centric, and monolythic. Being done in a microkernel-esque + microservice-esque way (i see a problem in passing gpu buffers, but that can be solved using either os tools or vulkan/gl extensions) would help much more for some products. Maybe as an opt-in thing, idk \nAlso you can look at widgets and touchbar made by apple, and live tiles in windows 10 - they seem to do gpu buffer passing as well\nIirc Chromium also does use ipc for gpu buffer passing, to help isolating os processes from each other, to help with security\nSingle lang centric means that only a single language can be used for developing proper apps for the platform for user interaction. This is a pain in android as well"
      },
      "after": "e54d165e823b16ad",
      "date": 1658228869617
    },
    {
      "id": "060442ee06328e61",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "060442ee06328e61",
        "text": "tudor girba — [https://discord.com/channels/729445214812504107/735946052347363551/985819649407066143 discord]\nThanks for the details.\n\nI can see how people can look at Moldable Development as a buzzword. Moldable Development is a programming practice that introduces a new feedback loop, not unlike how TDD or DevOps did.\n\nGT is a concrete environment. Emacs looks similar in that it can be extended within itself. GT is different in that you can actually practice Moldable Development. It's not the extensibility that is the key. It's the embedding it as a core part of the development flow. This has several dimensions, but it's easier to look at the outcome. In the core GT you get more than 2k extensions. These were created as an engineering need (as different from marketing) and act by themselves as validation for why the practice is relevant.\n\nThat said, we can certainly compare artifacts. Emacs was a great environment, but breaking free of text is not of secondary importance :). \n"
      },
      "after": "4d86d331688c7457",
      "date": 1658228873711
    },
    {
      "item": {
        "type": "factory",
        "id": "b41d77facb5aaba9"
      },
      "id": "b41d77facb5aaba9",
      "type": "add",
      "after": "060442ee06328e61",
      "date": 1658228962102
    },
    {
      "type": "edit",
      "id": "b41d77facb5aaba9",
      "item": {
        "type": "pagefold",
        "id": "b41d77facb5aaba9",
        "text": "~"
      },
      "date": 1658228965713
    },
    {
      "id": "b41d77facb5aaba9",
      "type": "move",
      "order": [
        "b41d77facb5aaba9",
        "e54d165e823b16ad",
        "4d86d331688c7457",
        "060442ee06328e61"
      ],
      "date": 1658228971719
    },
    {
      "item": {
        "type": "factory",
        "id": "5ee775835e35bd40"
      },
      "id": "5ee775835e35bd40",
      "type": "add",
      "after": "060442ee06328e61",
      "date": 1658228974428
    },
    {
      "id": "5ee775835e35bd40",
      "type": "move",
      "order": [
        "5ee775835e35bd40",
        "b41d77facb5aaba9",
        "e54d165e823b16ad",
        "4d86d331688c7457",
        "060442ee06328e61"
      ],
      "date": 1658228979743
    },
    {
      "type": "edit",
      "id": "5ee775835e35bd40",
      "item": {
        "type": "paragraph",
        "id": "5ee775835e35bd40",
        "text": "Mercury OS is a speculative vision designed to question the paradigms governing human-computer interaction today. Questions and feedback are welcomed here."
      },
      "date": 1658228983563
    },
    {
      "type": "edit",
      "id": "5ee775835e35bd40",
      "item": {
        "type": "paragraph",
        "id": "5ee775835e35bd40",
        "text": "Mercury OS is a speculative vision designed to question the paradigms governing human-computer interaction today. Questions and feedback are welcomed here. [https://www.mercuryos.com/art-direction site]"
      },
      "date": 1658228994454
    },
    {
      "type": "add",
      "id": "581e5437767dccee",
      "item": {
        "type": "paragraph",
        "id": "581e5437767dccee",
        "text": "Mercury’s visual identity fuses the rational structures of Western Modernist design with the East Asian instinct to seek tranquility in chaos."
      },
      "after": "5ee775835e35bd40",
      "date": 1658229019619
    },
    {
      "type": "edit",
      "id": "581e5437767dccee",
      "item": {
        "type": "paragraph",
        "id": "581e5437767dccee",
        "text": "> Mercury’s visual identity fuses the rational structures of Western Modernist design with the East Asian instinct to seek tranquility in chaos."
      },
      "date": 1658229036681
    },
    {
      "type": "edit",
      "id": "581e5437767dccee",
      "item": {
        "type": "markdown",
        "id": "581e5437767dccee",
        "text": "> Mercury’s visual identity fuses the rational structures of Western Modernist design with the East Asian instinct to seek tranquility in chaos."
      },
      "date": 1658229038120
    }
  ]
}