{
  "title": "Variations On The Visitor Pattern",
  "story": [
    {
      "type": "html",
      "text": "A paper written by Martin E. Nordberg III of Quintessoft Engineering on July 22, 1996.  The paper can be downloaded in [[Post Script]] format from (as of 20050913):",
      "id": "5211dbebe3e843b1df18e0572eb5a574"
    },
    {
      "type": "html",
      "text": "\n[http://www.ccs.neu.edu/research/demeter/adaptive-patterns/visitor-usage/papers/plop96/variations-visitor-nordberg.ps www.ccs.neu.edu]",
      "id": "81087518804f7be3be1181957ceb09d1"
    },
    {
      "type": "html",
      "text": "\nFrom the abstract:  Two variations on the [[Visitor Pattern]] are presented.",
      "id": "7c6f8216585e9e1615ccd53b45613781"
    },
    {
      "type": "html",
      "text": " A [[Default Visitor Pattern]] provides default handlers for cases where the polymorphism of the hierarchy of elements can reduce the cost of code maintenance.",
      "id": "c2d10619ea08a5f347b6d6129096cf6c"
    },
    {
      "type": "html",
      "text": " An [[Extrinsic Visitor Pattern]] implements double dispatch with run time type information instead of Accept( ) methods. With the same machinery it is possible to test the feasibility of a particular visit before performing its operation. The extrinsic visitor pattern provides several benefits in ease of software development in trade for poorer run time performance.",
      "id": "2cbffe59af8befe0e062d7f337b8085c"
    },
    {
      "type": "html",
      "text": "\nInteresting design tradeoffs between efficiency and maintainability determine the choice of the standard, default, or extrinsic visitor pattern in an application.",
      "id": "606849abaceb307ee478e03ed2c90f03"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2dcfd32694b576ce98bc3e390b66baa4"
    },
    {
      "type": "html",
      "text": "See also: [[Visitor Pattern]], [[Acyclic Visitor]]",
      "id": "7b200c95d1002c3f323db063f8ba09cb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2dcfd32694b576ce98bc3e390b66baa4"
    },
    {
      "type": "html",
      "text": "[[Category Pattern]]",
      "id": "4458295d3eddcf363fd1dac6b94a27e3"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?VariationsOnTheVisitorPattern c2.com]",
      "id": "c367e00750799d4d1e33aca17f6f420c"
    }
  ],
  "journal": [
    {
      "date": 1336336810000,
      "id": "795b50bc30d10d639e993fd156e8d173",
      "type": "create",
      "item": {
        "title": "Variations On The Visitor Pattern",
        "story": [
          {
            "type": "html",
            "text": "A paper written by Martin E. Nordberg III of Quintessoft Engineering on July 22, 1996.  The paper can be downloaded in [[Post Script]] format from (as of 20050913):",
            "id": "5211dbebe3e843b1df18e0572eb5a574"
          },
          {
            "type": "html",
            "text": "\n[http://www.ccs.neu.edu/research/demeter/adaptive-patterns/visitor-usage/papers/plop96/variations-visitor-nordberg.ps www.ccs.neu.edu]",
            "id": "81087518804f7be3be1181957ceb09d1"
          },
          {
            "type": "html",
            "text": "\nFrom the abstract:  Two variations on the [[Visitor Pattern]] are presented.",
            "id": "7c6f8216585e9e1615ccd53b45613781"
          },
          {
            "type": "html",
            "text": " A [[Default Visitor Pattern]] provides default handlers for cases where the polymorphism of the hierarchy of elements can reduce the cost of code maintenance.",
            "id": "c2d10619ea08a5f347b6d6129096cf6c"
          },
          {
            "type": "html",
            "text": " An [[Extrinsic Visitor Pattern]] implements double dispatch with run time type information instead of Accept( ) methods. With the same machinery it is possible to test the feasibility of a particular visit before performing its operation. The extrinsic visitor pattern provides several benefits in ease of software development in trade for poorer run time performance.",
            "id": "2cbffe59af8befe0e062d7f337b8085c"
          },
          {
            "type": "html",
            "text": "\nInteresting design tradeoffs between efficiency and maintainability determine the choice of the standard, default, or extrinsic visitor pattern in an application.",
            "id": "606849abaceb307ee478e03ed2c90f03"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2dcfd32694b576ce98bc3e390b66baa4"
          },
          {
            "type": "html",
            "text": "See also: [[Visitor Pattern]], [[Acyclic Visitor]]",
            "id": "7b200c95d1002c3f323db063f8ba09cb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2dcfd32694b576ce98bc3e390b66baa4"
          },
          {
            "type": "html",
            "text": "[[Category Pattern]]",
            "id": "4458295d3eddcf363fd1dac6b94a27e3"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?VariationsOnTheVisitorPattern c2.com]",
            "id": "c367e00750799d4d1e33aca17f6f420c"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1708264984729
    }
  ]
}