{
  "title": "Graph Theoretical Background",
  "story": [
    {
      "type": "markdown",
      "id": "fee607bb78aa1bd1",
      "text": "[[Property Graphs]] Explained. [http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html page] – The Universal Data Model Paradigm"
    },
    {
      "type": "paragraph",
      "id": "a50973158fada126",
      "text": "On the Github site for the [[OpenCypher]] project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own [[Identity]]. "
    },
    {
      "type": "markdown",
      "id": "d3d3948a09d6b5cf",
      "text": "In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n* Directed multigraph\n* Labeled multigraph\n"
    },
    {
      "type": "markdown",
      "id": "5a88113edd4507a4",
      "text": "The Apache Tinkerpop ™ project is also based on very similar concepts."
    },
    {
      "type": "markdown",
      "id": "5da81bd2e1368441",
      "text": "There are several physical implementations of property graph technologies. One of the most well know is Neo4J from Neo Technologies, most of the rest of the companies are listed on the Tinkerpop site. Neo has a good introduction to property graphs over here: https://neo4j.com/developer/graph-database/\n"
    },
    {
      "type": "video",
      "id": "b36e1a1e0755e03a",
      "text": "YOUTUBE jFdEeJ-Ez1E\nWhy Neo4j?"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Graph Theoretical Background",
        "story": []
      },
      "date": 1649917549857
    },
    {
      "item": {
        "type": "factory",
        "id": "a50973158fada126"
      },
      "id": "a50973158fada126",
      "type": "add",
      "date": 1649917552605
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the OpenCypher project you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own identity. In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n• Directed multigraph\n• Labeled multigraph\nThe Apache Tinkerpop ™ project is also based on very similar concepts.\nThere are several physical implementations of property graph technologies. One of the most well know is Neo4J from Neo Technologies, most of the rest of the companies are listed on the Tinkerpop site. Neo has a good introduction to property graphs over here: https://neo4j.com/developer/graph-database/\n"
      },
      "date": 1649917561769
    },
    {
      "item": {
        "type": "factory",
        "id": "fee607bb78aa1bd1"
      },
      "id": "fee607bb78aa1bd1",
      "type": "add",
      "after": "a50973158fada126",
      "date": 1649917567101
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "paragraph",
        "id": "fee607bb78aa1bd1",
        "text": "http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html"
      },
      "date": 1649917569834
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "markdown",
        "id": "fee607bb78aa1bd1",
        "text": "http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html"
      },
      "date": 1649917571503
    },
    {
      "id": "fee607bb78aa1bd1",
      "type": "move",
      "order": [
        "fee607bb78aa1bd1",
        "a50973158fada126"
      ],
      "date": 1649917574502
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the OpenCypher project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own identity. In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n• Directed multigraph\n• Labeled multigraph\nThe Apache Tinkerpop ™ project is also based on very similar concepts.\nThere are several physical implementations of property graph technologies. One of the most well know is Neo4J from Neo Technologies, most of the rest of the companies are listed on the Tinkerpop site. Neo has a good introduction to property graphs over here: https://neo4j.com/developer/graph-database/\n"
      },
      "date": 1649917595745
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the OpenCypher project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own identity. In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n• Directed multigraph\n• Labeled multigraph\nThe Apache Tinkerpop ™ project is also based on very similar concepts."
      },
      "date": 1649917610527
    },
    {
      "type": "add",
      "id": "5da81bd2e1368441",
      "item": {
        "type": "paragraph",
        "id": "5da81bd2e1368441",
        "text": "There are several physical implementations of property graph technologies. One of the most well know is Neo4J from Neo Technologies, most of the rest of the companies are listed on the Tinkerpop site. Neo has a good introduction to property graphs over here: https://neo4j.com/developer/graph-database/\n"
      },
      "after": "a50973158fada126",
      "date": 1649917620719
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the OpenCypher project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own identity. "
      },
      "date": 1649917625655
    },
    {
      "type": "add",
      "id": "d3d3948a09d6b5cf",
      "item": {
        "type": "paragraph",
        "id": "d3d3948a09d6b5cf",
        "text": "In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n* Directed multigraph\n* Labeled multigraph\nThe Apache Tinkerpop ™ project is also based on very similar concepts."
      },
      "after": "a50973158fada126",
      "date": 1649917635552
    },
    {
      "type": "edit",
      "id": "d3d3948a09d6b5cf",
      "item": {
        "type": "markdown",
        "id": "d3d3948a09d6b5cf",
        "text": "In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n* Directed multigraph\n* Labeled multigraph\nThe Apache Tinkerpop ™ project is also based on very similar concepts."
      },
      "date": 1649917637732
    },
    {
      "type": "edit",
      "id": "d3d3948a09d6b5cf",
      "item": {
        "type": "markdown",
        "id": "d3d3948a09d6b5cf",
        "text": "In the property graph paradigm, the term node is used to denote a vertex, and relationship to denote an edge. See Wikipedia’s definitions for reference:\n* Directed multigraph\n* Labeled multigraph\n"
      },
      "date": 1649917640707
    },
    {
      "type": "add",
      "id": "5a88113edd4507a4",
      "item": {
        "type": "markdown",
        "id": "5a88113edd4507a4",
        "text": "The Apache Tinkerpop ™ project is also based on very similar concepts."
      },
      "after": "d3d3948a09d6b5cf",
      "date": 1649917641124
    },
    {
      "type": "edit",
      "id": "5da81bd2e1368441",
      "item": {
        "type": "markdown",
        "id": "5da81bd2e1368441",
        "text": "There are several physical implementations of property graph technologies. One of the most well know is Neo4J from Neo Technologies, most of the rest of the companies are listed on the Tinkerpop site. Neo has a good introduction to property graphs over here: https://neo4j.com/developer/graph-database/\n"
      },
      "date": 1649917663783
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "markdown",
        "id": "fee607bb78aa1bd1",
        "text": "[http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html page]"
      },
      "date": 1649917702992
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "markdown",
        "id": "fee607bb78aa1bd1",
        "text": "Property Graphs Explained. [http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html page]\n– The Universal Data Model Paradigm"
      },
      "date": 1649917745790
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "markdown",
        "id": "fee607bb78aa1bd1",
        "text": "Property Graphs Explained. [http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html page] – The Universal Data Model Paradigm"
      },
      "date": 1649917753377
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the OpenCypher project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own [[identity]]. "
      },
      "date": 1649917819578
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the [[OpenCypher]] project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own [[identity]]. "
      },
      "date": 1652331847395
    },
    {
      "type": "edit",
      "id": "fee607bb78aa1bd1",
      "item": {
        "type": "markdown",
        "id": "fee607bb78aa1bd1",
        "text": "[[Property Graphs]] Explained. [http://graphdatamodeling.com/Graph%20Data%20Modeling/GraphDataModeling/page/PropertyGraphs.html page] – The Universal Data Model Paradigm"
      },
      "date": 1652331966152
    },
    {
      "item": {
        "type": "factory",
        "id": "b36e1a1e0755e03a"
      },
      "id": "b36e1a1e0755e03a",
      "type": "add",
      "after": "5da81bd2e1368441",
      "date": 1652351460544
    },
    {
      "type": "edit",
      "id": "b36e1a1e0755e03a",
      "item": {
        "type": "video",
        "id": "b36e1a1e0755e03a",
        "text": "YOUTUBE jFdEeJ-Ez1E"
      },
      "date": 1652351472366
    },
    {
      "type": "edit",
      "id": "b36e1a1e0755e03a",
      "item": {
        "type": "video",
        "id": "b36e1a1e0755e03a",
        "text": "YOUTUBE jFdEeJ-Ez1E\nWhy Neo4j?"
      },
      "date": 1652351486991
    },
    {
      "type": "edit",
      "id": "a50973158fada126",
      "item": {
        "type": "paragraph",
        "id": "a50973158fada126",
        "text": "On the Github site for the [[OpenCypher]] project [https://github.com/opencypher/openCypher/blob/master/docs/property-graph-model.adoc page] you can find a good, formal definition based on mathematical graph theoretical concepts. Basically a property graph in the sense it is used here is a directed, vertex-labeled, edge-labeled multigraph with self-edges, where edges have their own [[Identity]]. "
      },
      "date": 1708775283300
    }
  ]
}