{
  "title": "Elm Stack",
  "story": [
    {
      "type": "paragraph",
      "id": "e289924b186ff20f",
      "text": "is an implementation of the stack data structure for the elm language. [https://github.com/mhoare/elm-stack/tree/3.1.2 github], [https://package.elm-lang.org/packages/mhoare/elm-stack/latest package], [https://elm-stack.surge.sh/ site]"
    },
    {
      "type": "paragraph",
      "id": "0727197588887da1",
      "text": "Abstract Data Structures: Stacks [https://elm-stack.surge.sh site], [https://package.elm-lang.org/packages/mhoare/elm-stack/latest/Stack package] "
    },
    {
      "type": "markdown",
      "id": "eba13b32db4fed8d",
      "text": "> The item must be of the same type [⇐ [[Frame Type]]] as the stack."
    },
    {
      "type": "code",
      "id": "8107ffac3a74ad44",
      "text": "{-| Removes the item at the top of the stack and returns it as the first item of a tuple.\n-}\npop : Stack a -> ( Maybe a, Stack a )\npop (Stack stack) =\n    case stack of\n        [] ->\n            ( Nothing, Stack [] )\n\n        head :: tail ->\n            ( Just head, Stack tail )"
    },
    {
      "type": "pagefold",
      "id": "b96739e1655abdde",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "420a36963428ed48",
      "site": "wiki.ralfbarkow.ch",
      "slug": "context",
      "title": "Context",
      "text": "The [[Arrangement]] axiom gives permission to take multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Elm Stack",
        "story": []
      },
      "date": 1695377240606
    },
    {
      "item": {
        "type": "factory",
        "id": "e289924b186ff20f"
      },
      "id": "e289924b186ff20f",
      "type": "add",
      "date": 1695377241766
    },
    {
      "type": "edit",
      "id": "e289924b186ff20f",
      "item": {
        "type": "paragraph",
        "id": "e289924b186ff20f",
        "text": "is an implementation of the stack data structure for the elm language. "
      },
      "date": 1695377243324
    },
    {
      "type": "edit",
      "id": "e289924b186ff20f",
      "item": {
        "type": "paragraph",
        "id": "e289924b186ff20f",
        "text": "is an implementation of the stack data structure for the elm language. [https://github.com/mhoare/elm-stack/tree/3.1.2 github]"
      },
      "date": 1695377255328
    },
    {
      "id": "0727197588887da1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0727197588887da1",
        "text": "Abstract Data Structures: Stacks [https://elm-stack.surge.sh site], [https://github.com/mhoare/elm-stack github], [https://package.elm-lang.org/packages/mhoare/elm-stack/latest/Stack package] ⇒ [[Elm Stack]]"
      },
      "after": "e289924b186ff20f",
      "attribution": {
        "page": "2023-09-22"
      },
      "date": 1695377261236
    },
    {
      "item": {
        "type": "factory",
        "id": "5907aa46838ee4f1"
      },
      "id": "5907aa46838ee4f1",
      "type": "add",
      "after": "0727197588887da1",
      "date": 1695377262942
    },
    {
      "type": "edit",
      "id": "0727197588887da1",
      "item": {
        "type": "paragraph",
        "id": "0727197588887da1",
        "text": "Abstract Data Structures: Stacks [https://elm-stack.surge.sh site], [https://package.elm-lang.org/packages/mhoare/elm-stack/latest/Stack package] "
      },
      "date": 1695377288611
    },
    {
      "id": "eba13b32db4fed8d",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "eba13b32db4fed8d",
        "text": "> The item must be of the same type as the stack."
      },
      "after": "0727197588887da1",
      "attribution": {
        "page": "2023-09-22"
      },
      "date": 1695377293657
    },
    {
      "type": "remove",
      "id": "5907aa46838ee4f1",
      "date": 1695377296733
    },
    {
      "id": "8107ffac3a74ad44",
      "type": "add",
      "item": {
        "type": "code",
        "id": "8107ffac3a74ad44",
        "text": "{-| Removes the item at the top of the stack and returns it as the first item of a tuple.\n-}\npop : Stack a -> ( Maybe a, Stack a )\npop (Stack stack) =\n    case stack of\n        [] ->\n            ( Nothing, Stack [] )\n\n        head :: tail ->\n            ( Just head, Stack tail )"
      },
      "after": "eba13b32db4fed8d",
      "attribution": {
        "page": "2023-09-22"
      },
      "date": 1695377301419
    },
    {
      "item": {
        "type": "factory",
        "id": "b96739e1655abdde"
      },
      "id": "b96739e1655abdde",
      "type": "add",
      "after": "8107ffac3a74ad44",
      "date": 1695377337635
    },
    {
      "type": "edit",
      "id": "b96739e1655abdde",
      "item": {
        "type": "pagefold",
        "id": "b96739e1655abdde",
        "text": "~"
      },
      "date": 1695377341050
    },
    {
      "item": {
        "type": "factory",
        "id": "420a36963428ed48"
      },
      "id": "420a36963428ed48",
      "type": "add",
      "after": "b96739e1655abdde",
      "date": 1695377342619
    },
    {
      "type": "edit",
      "id": "420a36963428ed48",
      "item": {
        "type": "reference",
        "id": "420a36963428ed48",
        "site": "wiki.ralfbarkow.ch",
        "slug": "context",
        "title": "Context",
        "text": "The Arrangement axiom gives permission to take multiple forms out of the interior [[Content]] of a [[Frame]] and put them into separate frames, so long as we carry their Context — i.e. their [[Frame Type]], (A [...]) — along with them."
      },
      "date": 1695377344778
    },
    {
      "type": "edit",
      "id": "eba13b32db4fed8d",
      "item": {
        "type": "markdown",
        "id": "eba13b32db4fed8d",
        "text": "> The item must be of the same type as the stack. [⇐ [Frame Type]]]"
      },
      "date": 1695377384820
    },
    {
      "type": "edit",
      "id": "eba13b32db4fed8d",
      "item": {
        "type": "markdown",
        "id": "eba13b32db4fed8d",
        "text": "> The item must be of the same type as the stack. \n[⇐ [Frame Type]]]"
      },
      "date": 1695377399451
    },
    {
      "type": "edit",
      "id": "eba13b32db4fed8d",
      "item": {
        "type": "markdown",
        "id": "eba13b32db4fed8d",
        "text": "> The item must be of the same type as the stack. [⇐ [[Frame Type]]]"
      },
      "date": 1695377408634
    },
    {
      "type": "edit",
      "id": "eba13b32db4fed8d",
      "item": {
        "type": "markdown",
        "id": "eba13b32db4fed8d",
        "text": "> The item must be of the same type [⇐ [[Frame Type]]] as the stack."
      },
      "date": 1695377427720
    },
    {
      "type": "remove",
      "id": "420a36963428ed48",
      "date": 1695377575167
    },
    {
      "id": "420a36963428ed48",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "420a36963428ed48",
        "site": "wiki.ralfbarkow.ch",
        "slug": "context",
        "title": "Context",
        "text": "The [[Arrangement]] axiom gives permission to take multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
      },
      "after": "b96739e1655abdde",
      "attribution": {
        "page": "Frame Type"
      },
      "date": 1695377579950
    },
    {
      "type": "edit",
      "id": "e289924b186ff20f",
      "item": {
        "type": "paragraph",
        "id": "e289924b186ff20f",
        "text": "is an implementation of the stack data structure for the elm language. [https://github.com/mhoare/elm-stack/tree/3.1.2 github], [https://elm-stack.surge.sh/ site]"
      },
      "date": 1695463262320
    },
    {
      "type": "edit",
      "id": "e289924b186ff20f",
      "item": {
        "type": "paragraph",
        "id": "e289924b186ff20f",
        "text": "is an implementation of the stack data structure for the elm language. [https://github.com/mhoare/elm-stack/tree/3.1.2 github], [https://package.elm-lang.org/packages/mhoare/elm-stack/latest package], [https://elm-stack.surge.sh/ site]"
      },
      "date": 1695464964897
    }
  ]
}