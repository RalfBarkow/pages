{
  "title": "Registration Workflows",
  "story": [
    {
      "type": "paragraph",
      "id": "1a277499efc01661",
      "text": "Here we think through how one could host a wiki farm for themselves and friends without opening hosting for the world. [https://riot.im/app/#/room/#fedwiki:matrix.org/$15098118261302156xrASH:matrix.org riot]"
    },
    {
      "type": "paragraph",
      "id": "da841f0b9b70b01b",
      "text": "See [[Zero-Steps to Claim]] for earliest thoughts."
    },
    {
      "type": "paragraph",
      "id": "23813c2766b87a69",
      "text": "Say I have a list of names and emails, how would I make sites for everyone on the list and get them the right credentials to use it? Or, say I am at a meetup and want to open signup at the meetup for anyone there and then close it for anyone else after that?\n"
    },
    {
      "type": "paragraph",
      "id": "8d02a7795eb3dfde",
      "text": "Our current farm behavior is to create sites on first reference. What if we reconsider this? "
    },
    {
      "type": "paragraph",
      "id": "7190270074260054",
      "text": "One idea would be to redirect non-existent fetches to the first superior name that exists. This domain would then have the opportunity to manage its own expansion. "
    },
    {
      "type": "paragraph",
      "id": "ab505726190d61c7",
      "text": "As is, no expansion would happen. But a site might add a plugin that subscribes new members by some workflow configured into that plugin. The server administrator retains some control by restricting which new site workflow plugins are available.\n"
    },
    {
      "type": "paragraph",
      "id": "e0b920a0a55a4f84",
      "text": "See [[Register Plugin]] for the simplest of examples."
    },
    {
      "type": "paragraph",
      "id": "6693988ad6fcbec5",
      "text": "Such a plugin and the workflow that it administers could be 2x more complicated that the Club plugin suggested here before which would allow sites to join a Roster maintained on another site. That alone enabled abuses that were hard to think through. The delegation of rights to new sites is even more complex but just being wide open as we are now is probably a non-starter as we grow."
    },
    {
      "type": "paragraph",
      "id": "263c3e5108c335fb",
      "text": "See [[Open Membership in a Club]] for similar complexities."
    },
    {
      "type": "markdown",
      "id": "0e149ec8437ed8b3",
      "text": "# Invitations"
    },
    {
      "type": "paragraph",
      "id": "59b48e0d297ce21d",
      "text": "The best login experience would be through giving users a temporary and hard to guess url which would expire after a given period. We could simply generate an invitation to include information that the site-owner/author chooses."
    },
    {
      "type": "paragraph",
      "id": "5b1f0c4002b7636e",
      "text": "When a new user visits this page they can interact with resources there in order to create and customize their site. The invitation and the provisioned site should recognize the context of the invitation and provide custom content for each new site."
    },
    {
      "type": "paragraph",
      "id": "d66fc6f5b393d456",
      "text": "It would be important that resources created for in-progress invitations not show up in a site search."
    },
    {
      "type": "markdown",
      "id": "541b16bc654c2671",
      "text": "# Discovery"
    },
    {
      "type": "paragraph",
      "id": "35a279f17e10489c",
      "text": "These could work the same as [[Secure scuttlebutt]], in that multiple local severs would be able to discover each other over the LAN with multicast UDP and connect (via a roster?)."
    },
    {
      "type": "markdown",
      "id": "d890832298e67e75",
      "text": "# Caddy"
    },
    {
      "type": "paragraph",
      "id": "a3fdd6703b439a22",
      "text": "A reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains. This requires additional configuration. \n[https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile github]"
    },
    {
      "type": "code",
      "id": "359fb98f70c12d2a",
      "text": "https://example.com,\nhttp://example.com,\nhttps://*.example.com,\nhttp://*.example.com:80\ngzip\ntls {\n  max_certs 4\n}\nproxy / farm:3000 {\n  transparent\n}"
    },
    {
      "type": "markdown",
      "id": "d7319fcc02175013",
      "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter. [https://caddyserver.com/docs/automatic-https#on-demand doc]\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n"
    },
    {
      "type": "paragraph",
      "id": "b01658c87a42fa80",
      "text": "I currently write in four subdomains.  If I were to create a new subdomain, I would add 1 to the max_certs directive, restart caddy, and then visit the domain in my browser to cause the farm to instantiate the new wiki."
    },
    {
      "type": "paragraph",
      "id": "7fbaa9ee5fe6d7d7",
      "text": "It happens that letsencrypt will start offering wildcard certificates in January 2018 and Caddy plans to support them.  Perhaps this specific complication will resolve itself."
    },
    {
      "type": "paragraph",
      "id": "b6f68930163d4e52",
      "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically. "
    },
    {
      "type": "paragraph",
      "id": "1ef0588bd1da66b1",
      "text": "How will registration of a subdomain of a farm interact with certificate negotiations or any other administered configuration? More markup? Delegate to shell script?"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Registration Workflows",
        "story": []
      },
      "date": 1509815199665
    },
    {
      "item": {
        "type": "factory",
        "id": "1a277499efc01661"
      },
      "id": "1a277499efc01661",
      "type": "add",
      "date": 1509815248692
    },
    {
      "type": "edit",
      "id": "1a277499efc01661",
      "item": {
        "type": "paragraph",
        "id": "1a277499efc01661",
        "text": "Help me think through how one could host a wiki farm for themselves and friends without opening hosting for the world. Say I have a list of names and emails, how would I make sites for everyone on the list and get them the right credentials to use it? Or, say I am at a meetup and want to open signup at the meetup for anyone there and then close it for anyone else after that?\n"
      },
      "date": 1509815264030
    },
    {
      "type": "add",
      "id": "8d02a7795eb3dfde",
      "item": {
        "type": "paragraph",
        "id": "8d02a7795eb3dfde",
        "text": "Our current farm behavior is to create sites on first reference. What if we reconsider this? One idea would be to redirect non-existent fetches to the first superior name that exists. This domain would then have the opportunity to manage its own expansion. As is, no expansion would happen. But a site might add a plugin that subscribes new members by some workflow configured into that plugin. The server administrator retains some control by restricting which new site workflow plugins are available.\n"
      },
      "after": "1a277499efc01661",
      "date": 1509815272606
    },
    {
      "type": "add",
      "id": "6693988ad6fcbec5",
      "item": {
        "type": "paragraph",
        "id": "6693988ad6fcbec5",
        "text": "Such a plugin and the workflow that it administers could be 2x more complicated that the Club plugin suggested here before which would allow sites to join a Roster maintained on another site. That alone enabled abuses that were hard to think through. The delegation of rights to new sites is even more complex but just being wide open as we are now is probably a non-starter as we grow."
      },
      "after": "8d02a7795eb3dfde",
      "date": 1509815285052
    },
    {
      "type": "edit",
      "id": "1a277499efc01661",
      "item": {
        "type": "paragraph",
        "id": "1a277499efc01661",
        "text": "Here we think through how one could host a wiki farm for themselves and friends without opening hosting for the world. "
      },
      "date": 1509815320068
    },
    {
      "type": "add",
      "id": "23813c2766b87a69",
      "item": {
        "type": "paragraph",
        "id": "23813c2766b87a69",
        "text": "Say I have a list of names and emails, how would I make sites for everyone on the list and get them the right credentials to use it? Or, say I am at a meetup and want to open signup at the meetup for anyone there and then close it for anyone else after that?\n"
      },
      "after": "1a277499efc01661",
      "date": 1509815327115
    },
    {
      "type": "edit",
      "id": "1a277499efc01661",
      "item": {
        "type": "paragraph",
        "id": "1a277499efc01661",
        "text": "Here we think through how one could host a wiki farm for themselves and friends without opening hosting for the world. [https://riot.im/app/#/room/#fedwiki:matrix.org/$15098118261302156xrASH:matrix.org riot]"
      },
      "date": 1509815427265
    },
    {
      "type": "edit",
      "id": "8d02a7795eb3dfde",
      "item": {
        "type": "paragraph",
        "id": "8d02a7795eb3dfde",
        "text": "Our current farm behavior is to create sites on first reference. What if we reconsider this? "
      },
      "date": 1509815444761
    },
    {
      "type": "add",
      "id": "7190270074260054",
      "item": {
        "type": "paragraph",
        "id": "7190270074260054",
        "text": "One idea would be to redirect non-existent fetches to the first superior name that exists. This domain would then have the opportunity to manage its own expansion. "
      },
      "after": "8d02a7795eb3dfde",
      "date": 1509815463423
    },
    {
      "type": "add",
      "id": "ab505726190d61c7",
      "item": {
        "type": "paragraph",
        "id": "ab505726190d61c7",
        "text": "As is, no expansion would happen. "
      },
      "after": "7190270074260054",
      "date": 1509815466824
    },
    {
      "type": "edit",
      "id": "ab505726190d61c7",
      "item": {
        "type": "paragraph",
        "id": "ab505726190d61c7",
        "text": "As is, no expansion would happen. But a site might add a plugin that subscribes new members by some workflow configured into that plugin. The server administrator retains some control by restricting which new site workflow plugins are available.\n"
      },
      "date": 1509815475663
    },
    {
      "type": "add",
      "id": "e0b920a0a55a4f84",
      "item": {
        "type": "paragraph",
        "id": "e0b920a0a55a4f84",
        "text": "See [[Register Plugin]] for the simplest of examples."
      },
      "after": "ab505726190d61c7",
      "date": 1509815561053
    },
    {
      "type": "add",
      "id": "263c3e5108c335fb",
      "item": {
        "type": "paragraph",
        "id": "263c3e5108c335fb",
        "text": "See [[Open Membership in a Club]]"
      },
      "after": "6693988ad6fcbec5",
      "date": 1509818858665
    },
    {
      "type": "edit",
      "id": "263c3e5108c335fb",
      "item": {
        "type": "paragraph",
        "id": "263c3e5108c335fb",
        "text": "See [[Open Membership in a Club]] for similar complexities."
      },
      "date": 1509818879737
    },
    {
      "type": "fork",
      "date": 1509836986570
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1509844262137
    },
    {
      "item": {
        "type": "factory",
        "id": "0e149ec8437ed8b3"
      },
      "id": "0e149ec8437ed8b3",
      "type": "add",
      "after": "263c3e5108c335fb",
      "date": 1509844554108
    },
    {
      "type": "edit",
      "id": "0e149ec8437ed8b3",
      "item": {
        "type": "markdown",
        "id": "0e149ec8437ed8b3",
        "text": "# Capability URL Invitations"
      },
      "date": 1509844584171
    },
    {
      "item": {
        "type": "factory",
        "id": "59b48e0d297ce21d"
      },
      "id": "59b48e0d297ce21d",
      "type": "add",
      "after": "0e149ec8437ed8b3",
      "date": 1509844585568
    },
    {
      "type": "edit",
      "id": "59b48e0d297ce21d",
      "item": {
        "type": "paragraph",
        "id": "59b48e0d297ce21d",
        "text": "The best login experience is through giving users a temporary and hard to guess url which would expire after a given period."
      },
      "date": 1509844738339
    },
    {
      "type": "add",
      "id": "08bef78275401077",
      "item": {
        "type": "paragraph",
        "id": "08bef78275401077",
        "text": "In this way the [[Invitation Plugin]] could simply generate a wiki page with hard-to-guess page slug. This wiki page could then include any information that the site-owner/author likes - such as a friendly invite."
      },
      "after": "59b48e0d297ce21d",
      "date": 1509844884143
    },
    {
      "type": "add",
      "id": "5b1f0c4002b7636e",
      "item": {
        "type": "paragraph",
        "id": "5b1f0c4002b7636e",
        "text": "When a new user visits this page they can interact with the [[Register Plugin]] in order to create a site a site/subdomain described."
      },
      "after": "08bef78275401077",
      "date": 1509844953523
    },
    {
      "type": "add",
      "id": "50140573d8a9b567",
      "item": {
        "type": "paragraph",
        "id": "50140573d8a9b567",
        "text": "Additionally (and very usefully), links (reference links?) provided in a suitable manor on this [[Welcome Author]] page could specify additional wiki pages that should be forked to the new subdomain. In tis way an site administrator could provide custom content for each new site."
      },
      "after": "5b1f0c4002b7636e",
      "date": 1509845128051
    },
    {
      "type": "edit",
      "id": "08bef78275401077",
      "item": {
        "type": "paragraph",
        "id": "08bef78275401077",
        "text": "In this way the [[Invitation Plugin]] could simply generate a wiki page with hard-to-guess page slug. This wiki page could then include any information that the site-owner/author likes - such as a friendly invite. Let's call this a [[Welcome Author]] page."
      },
      "date": 1509845144521
    },
    {
      "type": "add",
      "id": "1756ec04eee5c5fc",
      "item": {
        "type": "paragraph",
        "id": "1756ec04eee5c5fc",
        "text": "Given the hard-to-guess page slug could be set to expire in some time the site-administrator specified the page could be safely left online and later deleted to tidy things up (manually for now). "
      },
      "after": "50140573d8a9b567",
      "date": 1509845308044
    },
    {
      "type": "add",
      "id": "d66fc6f5b393d456",
      "item": {
        "type": "paragraph",
        "id": "d66fc6f5b393d456",
        "text": "It would be important that the capability-url wiki pages would not show up in a site search."
      },
      "after": "1756ec04eee5c5fc",
      "date": 1509845338417
    },
    {
      "type": "add",
      "id": "541b16bc654c2671",
      "item": {
        "type": "paragraph",
        "id": "541b16bc654c2671",
        "text": "# LAN based invitations"
      },
      "after": "d66fc6f5b393d456",
      "date": 1509845363358
    },
    {
      "type": "add",
      "id": "35a279f17e10489c",
      "item": {
        "type": "paragraph",
        "id": "35a279f17e10489c",
        "text": "These could work the same as [[Secure scuttlebutt]]."
      },
      "after": "541b16bc654c2671",
      "date": 1509845430157
    },
    {
      "type": "edit",
      "id": "541b16bc654c2671",
      "item": {
        "type": "markdown",
        "id": "541b16bc654c2671",
        "text": "# LAN based invitations"
      },
      "date": 1509845431937
    },
    {
      "type": "edit",
      "id": "35a279f17e10489c",
      "item": {
        "type": "paragraph",
        "id": "35a279f17e10489c",
        "text": "These could work the same as [[Secure scuttlebutt]], in that multiple local severs would be able to recognise each other and connect (via a roster?)."
      },
      "date": 1509847913332
    },
    {
      "type": "edit",
      "id": "35a279f17e10489c",
      "item": {
        "type": "paragraph",
        "id": "35a279f17e10489c",
        "text": "These could work the same as [[Secure scuttlebutt]], in that multiple local severs would be able to discover each other over the LAN with multicast UDP and connect (via a roster?)."
      },
      "date": 1509847991350
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1509892103522
    },
    {
      "type": "edit",
      "id": "08bef78275401077",
      "item": {
        "type": "paragraph",
        "id": "08bef78275401077",
        "text": "In this way the Invitation Plugin could simply generate a wiki page with hard-to-guess page slug. This wiki page could then include any information that the site-owner/author likes - such as a friendly invite. Let's call this a [[Welcome Author]] page."
      },
      "date": 1509892157393
    },
    {
      "type": "edit",
      "id": "08bef78275401077",
      "item": {
        "type": "paragraph",
        "id": "08bef78275401077",
        "text": "In this way the Invitation Plugin could simply generate a wiki page with hard-to-guess page slug. This wiki page could then include any information that the site-owner/author likes - such as a friendly invite. Let's call this a Welcome Author page."
      },
      "date": 1509892166409
    },
    {
      "type": "edit",
      "id": "50140573d8a9b567",
      "item": {
        "type": "paragraph",
        "id": "50140573d8a9b567",
        "text": "Additionally (and very usefully), links (reference links?) provided in a suitable manor on this Welcome Author page could specify additional wiki pages that should be forked to the new subdomain. In tis way an site administrator could provide custom content for each new site."
      },
      "date": 1509892183017
    },
    {
      "type": "edit",
      "id": "59b48e0d297ce21d",
      "item": {
        "type": "paragraph",
        "id": "59b48e0d297ce21d",
        "text": "The best login experience might be through giving users a temporary and hard to guess url which would expire after a given period."
      },
      "date": 1509892216519
    },
    {
      "type": "remove",
      "id": "08bef78275401077",
      "date": 1509892323982
    },
    {
      "type": "edit",
      "id": "59b48e0d297ce21d",
      "item": {
        "type": "paragraph",
        "id": "59b48e0d297ce21d",
        "text": "The best login experience might be through giving users a temporary and hard to guess url which would expire after a given period. We could simply generate an invitation to include information that the site-owner/author chooses."
      },
      "date": 1509892404747
    },
    {
      "type": "edit",
      "id": "0e149ec8437ed8b3",
      "item": {
        "type": "markdown",
        "id": "0e149ec8437ed8b3",
        "text": "# Invitations"
      },
      "date": 1509892415049
    },
    {
      "type": "edit",
      "id": "5b1f0c4002b7636e",
      "item": {
        "type": "paragraph",
        "id": "5b1f0c4002b7636e",
        "text": "When a new user visits this page they can interact with resources there in order to create and customize their site."
      },
      "date": 1509892559406
    },
    {
      "type": "remove",
      "id": "50140573d8a9b567",
      "date": 1509892586686
    },
    {
      "type": "edit",
      "id": "5b1f0c4002b7636e",
      "item": {
        "type": "paragraph",
        "id": "5b1f0c4002b7636e",
        "text": "When a new user visits this page they can interact with resources there in order to create and customize their site. The invitation and the provisioned site should recognize the context of the invitation and provide custom content for each new site."
      },
      "date": 1509892727490
    },
    {
      "type": "remove",
      "id": "1756ec04eee5c5fc",
      "date": 1509892775981
    },
    {
      "type": "edit",
      "id": "d66fc6f5b393d456",
      "item": {
        "type": "paragraph",
        "id": "d66fc6f5b393d456",
        "text": "It would be important that resources created for in progress invitations not show up in a site search."
      },
      "date": 1509892833822
    },
    {
      "type": "edit",
      "id": "541b16bc654c2671",
      "item": {
        "type": "markdown",
        "id": "541b16bc654c2671",
        "text": "# Discovery"
      },
      "date": 1509892846596
    },
    {
      "type": "edit",
      "id": "59b48e0d297ce21d",
      "item": {
        "type": "paragraph",
        "id": "59b48e0d297ce21d",
        "text": "The best login experience would be through giving users a temporary and hard to guess url which would expire after a given period. We could simply generate an invitation to include information that the site-owner/author chooses."
      },
      "date": 1509892894628
    },
    {
      "type": "edit",
      "id": "d66fc6f5b393d456",
      "item": {
        "type": "paragraph",
        "id": "d66fc6f5b393d456",
        "text": "It would be important that resources created for in-progress invitations not show up in a site search."
      },
      "date": 1509894096892
    },
    {
      "type": "add",
      "id": "da841f0b9b70b01b",
      "item": {
        "type": "paragraph",
        "id": "da841f0b9b70b01b",
        "text": "See [[Zero-Steps to Claim]] for earliest thoughts."
      },
      "after": "1a277499efc01661",
      "date": 1509986281842
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1510027541846
    },
    {
      "type": "add",
      "id": "43f846211bf5e7c5",
      "item": {
        "type": "paragraph",
        "id": "43f846211bf5e7c5",
        "text": "# Complications with HTTPS"
      },
      "after": "35a279f17e10489c",
      "date": 1510027582713
    },
    {
      "item": {
        "type": "factory",
        "id": "d890832298e67e75"
      },
      "id": "d890832298e67e75",
      "type": "add",
      "after": "43f846211bf5e7c5",
      "date": 1510027599277
    },
    {
      "type": "remove",
      "id": "43f846211bf5e7c5",
      "date": 1510027602348
    },
    {
      "type": "edit",
      "id": "d890832298e67e75",
      "item": {
        "type": "markdown",
        "id": "d890832298e67e75",
        "text": "# Complications with HTTPS"
      },
      "date": 1510027606149
    },
    {
      "item": {
        "type": "factory",
        "id": "a3fdd6703b439a22"
      },
      "id": "a3fdd6703b439a22",
      "type": "add",
      "after": "d890832298e67e75",
      "date": 1510027610449
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A Caddy reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains."
      },
      "date": 1510027744278
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A Caddy reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains. [https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile Caddyfile]"
      },
      "date": 1510027817213
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A Caddy reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains."
      },
      "date": 1510027852752
    },
    {
      "type": "add",
      "id": "3d0129405eefefae",
      "item": {
        "type": "paragraph",
        "id": "3d0129405eefefae",
        "text": " [https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile Caddyfile]"
      },
      "after": "a3fdd6703b439a22",
      "date": 1510027853888
    },
    {
      "item": {
        "type": "factory",
        "id": "359fb98f70c12d2a"
      },
      "id": "359fb98f70c12d2a",
      "type": "add",
      "after": "3d0129405eefefae",
      "date": 1510027855928
    },
    {
      "type": "edit",
      "id": "359fb98f70c12d2a",
      "item": {
        "type": "code",
        "id": "359fb98f70c12d2a",
        "text": "placeholder\n"
      },
      "date": 1510027866923
    },
    {
      "type": "move",
      "order": [
        "1a277499efc01661",
        "da841f0b9b70b01b",
        "23813c2766b87a69",
        "8d02a7795eb3dfde",
        "7190270074260054",
        "ab505726190d61c7",
        "e0b920a0a55a4f84",
        "6693988ad6fcbec5",
        "263c3e5108c335fb",
        "0e149ec8437ed8b3",
        "59b48e0d297ce21d",
        "5b1f0c4002b7636e",
        "d66fc6f5b393d456",
        "541b16bc654c2671",
        "35a279f17e10489c",
        "d890832298e67e75",
        "a3fdd6703b439a22",
        "359fb98f70c12d2a",
        "3d0129405eefefae"
      ],
      "id": "359fb98f70c12d2a",
      "date": 1510027869881
    },
    {
      "type": "edit",
      "id": "359fb98f70c12d2a",
      "item": {
        "type": "code",
        "id": "359fb98f70c12d2a",
        "text": "https://wiki.dbbs.co,\nhttp://wiki.dbbs.co,\nhttps://*.wiki.dbbs.co,\nhttp://*.wiki.dbbs.co:80\ngzip\ntls {\n  max_certs 4\n}\nproxy / farm:3000 {\n  transparent\n}"
      },
      "date": 1510027885676
    },
    {
      "item": {
        "type": "factory",
        "id": "d7319fcc02175013"
      },
      "id": "d7319fcc02175013",
      "type": "add",
      "after": "3d0129405eefefae",
      "date": 1510027900546
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of letsencrypt."
      },
      "date": 1510027994567
    },
    {
      "item": {
        "type": "factory",
        "id": "20ea0a8b69cad48f"
      },
      "id": "20ea0a8b69cad48f",
      "type": "add",
      "after": "d7319fcc02175013",
      "date": 1510028158482
    },
    {
      "type": "edit",
      "id": "20ea0a8b69cad48f",
      "item": {
        "type": "paragraph",
        "id": "20ea0a8b69cad48f",
        "text": "\"Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space.\" [https://caddy link]"
      },
      "date": 1510028184370
    },
    {
      "type": "edit",
      "id": "20ea0a8b69cad48f",
      "item": {
        "type": "paragraph",
        "id": "20ea0a8b69cad48f",
        "text": "\"Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space.\" [https://caddyserver.com/docs/automatic-https#on-demand link]"
      },
      "date": 1510028216476
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter."
      },
      "date": 1510028250411
    },
    {
      "type": "add",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy or ACME client which obtain certificates on-demand.  We must also think through how registration of a subdomain of a farm will interact with letsencrypt or other ACME things."
      },
      "after": "20ea0a8b69cad48f",
      "date": 1510028564505
    },
    {
      "type": "edit",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically.  How will registration of a subdomain of a farm interact?"
      },
      "date": 1510028721640
    },
    {
      "type": "remove",
      "id": "20ea0a8b69cad48f",
      "date": 1510058314317
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter.\n"
      },
      "date": 1510058318392
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter.\n> \"Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space.\" [https://caddyserver.com/docs/automatic-https#on-demand link]"
      },
      "date": 1510058335962
    },
    {
      "type": "edit",
      "id": "359fb98f70c12d2a",
      "item": {
        "type": "code",
        "id": "359fb98f70c12d2a",
        "text": "https://example.com,\nhttp://example.com,\nhttps://*.example.com,\nhttp://*.example.com:80\ngzip\ntls {\n  max_certs 4\n}\nproxy / farm:3000 {\n  transparent\n}"
      },
      "date": 1510058481862
    },
    {
      "type": "edit",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "I currently write in four subdomains.  When I want to add another, I add 1 to the max_certs The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically.  How will registration of a subdomain of a farm interact?"
      },
      "date": 1510058574927
    },
    {
      "type": "edit",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "I currently write in four subdomains.  When I wish to create a new subdomain, I add 1 to the max_certs directive and then visit the domain in my browser to cause the farm to instantiate the new wiki."
      },
      "date": 1510058654241
    },
    {
      "type": "add",
      "id": "b6f68930163d4e52",
      "item": {
        "type": "paragraph",
        "id": "b6f68930163d4e52",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically.  How will registration of a subdomain of a farm interact?"
      },
      "after": "b01658c87a42fa80",
      "date": 1510058663403
    },
    {
      "type": "edit",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "I currently write in four subdomains.  If I were to create a new subdomain, I would add 1 to the max_certs directive and then visit the domain in my browser to cause the farm to instantiate the new wiki."
      },
      "date": 1510058723237
    },
    {
      "type": "edit",
      "id": "b01658c87a42fa80",
      "item": {
        "type": "paragraph",
        "id": "b01658c87a42fa80",
        "text": "I currently write in four subdomains.  If I were to create a new subdomain, I would add 1 to the max_certs directive, restart caddy, and then visit the domain in my browser to cause the farm to instantiate the new wiki."
      },
      "date": 1510058748112
    },
    {
      "type": "add",
      "id": "7fbaa9ee5fe6d7d7",
      "item": {
        "type": "paragraph",
        "id": "7fbaa9ee5fe6d7d7",
        "text": "It happens that letsencrypt will start offering wildcard certificates in January 2018 and Caddy plans to support them.  Perhaps this specific complication will resolve itself."
      },
      "after": "b01658c87a42fa80",
      "date": 1510060014285
    },
    {
      "type": "edit",
      "id": "b6f68930163d4e52",
      "item": {
        "type": "paragraph",
        "id": "b6f68930163d4e52",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically.  How will registration of a subdomain of a farm interact with certificate negotiations?"
      },
      "date": 1510060043082
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1510062046568
    },
    {
      "type": "edit",
      "id": "d890832298e67e75",
      "item": {
        "type": "markdown",
        "id": "d890832298e67e75",
        "text": "# Caddy"
      },
      "date": 1510062069524
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter.\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n[https://caddyserver.com/docs/automatic-https#on-demand link]"
      },
      "date": 1510062971665
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter.\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n[https://caddyserver.com/docs/automatic-https#on-demand link]"
      },
      "date": 1510062997238
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter.\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n"
      },
      "date": 1510063051270
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter. [https://caddyserver.com/docs/automatic-https#on-demand link]\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n"
      },
      "date": 1510063060339
    },
    {
      "type": "remove",
      "id": "3d0129405eefefae",
      "date": 1510063095329
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains. A wiki requires some configuration. \n[https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile github]"
      },
      "date": 1510063225286
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains. For wiki this requires additional configuration. \n[https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile github]"
      },
      "date": 1510063245948
    },
    {
      "type": "edit",
      "id": "a3fdd6703b439a22",
      "item": {
        "type": "paragraph",
        "id": "a3fdd6703b439a22",
        "text": "A reverse proxy in front of a farm makes for convenient automation of TLS certificate registration for new domains. This requires additional configuration. \n[https://github.com/dobbs/wiki.dbbs.co/blob/production/Caddyfile github]"
      },
      "date": 1510063259117
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter. [https://caddyserver.com/docs/automatic-https#on-demand page]\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n"
      },
      "date": 1510063300589
    },
    {
      "type": "edit",
      "id": "d7319fcc02175013",
      "item": {
        "type": "markdown",
        "id": "d7319fcc02175013",
        "text": "The `max_certs` directive within the `tls` block is required.  Caddy thereby limits potential abuse of local disk space and of letsencrypt for that matter. [https://caddyserver.com/docs/automatic-https#on-demand doc]\n\n> Mitigating abuse: This feature is intentionally rate-limited. The max_certs property of the tls directive sets a hard limit on how many new certificates are issued this way, so that even over a long period of time, attackers cannot issue unlimited certificates and fill up your disk space. \n"
      },
      "date": 1510063317649
    },
    {
      "type": "edit",
      "id": "b6f68930163d4e52",
      "item": {
        "type": "paragraph",
        "id": "b6f68930163d4e52",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically.  How will registration of a subdomain of a farm interact with certificate negotiations or any other administered configuration? "
      },
      "date": 1510063491643
    },
    {
      "type": "edit",
      "id": "b6f68930163d4e52",
      "item": {
        "type": "paragraph",
        "id": "b6f68930163d4e52",
        "text": "The details here are specific to Caddy, but probably generalize to any similar reverse proxy using letsencrypt ACME protocol to obtain certificates automatically. "
      },
      "date": 1510063700869
    },
    {
      "type": "add",
      "id": "1ef0588bd1da66b1",
      "item": {
        "type": "paragraph",
        "id": "1ef0588bd1da66b1",
        "text": "How will registration of a subdomain of a farm interact with certificate negotiations or any other administered configuration? More markup? Delegate to shell script?"
      },
      "after": "b6f68930163d4e52",
      "date": 1510063762299
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1602039053900
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1626382099048
    },
    {
      "type": "fork",
      "date": 1626382870621
    }
  ]
}