{
  "title": "Scrape Pages",
  "story": [
    {
      "type": "paragraph",
      "id": "469a499e191a09a2",
      "text": "A good way to understand the federation is to write a sitemap scraper. [https://riot.im/app/#/room/#liquidwiki:matrix.org/$15174053932405673AQRwQ:matrix.org matrix]"
    },
    {
      "type": "paragraph",
      "id": "eb3bccd5d4a2c00e",
      "text": "I wrote a scraper once that was a lot of fun to watch as it was written in one html script tag that animated the scrape as it went. I never distributed it because no learning comes from running it, just a lot of fetch load on the federation. I would share it with anyone who promised to run it only once and then destroy it."
    },
    {
      "type": "paragraph",
      "id": "2ef339663e915238",
      "text": "See [[Javascript Sitemap Scrape]]"
    },
    {
      "type": "paragraph",
      "id": "fa4920ac58cc8300",
      "text": "Tip to self: it is called scrape-pages.html. Try sys/find."
    },
    {
      "type": "paragraph",
      "id": "875fa6c9ade71f29",
      "text": "I found a copy on a remote disk. I opened the html file in chrome which launched the scrape. Within seconds it had filled my screen with info gleaned from sitemaps."
    },
    {
      "type": "html",
      "id": "7a8340d63c1aa072",
      "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/clips/Screen%20Shot%202018-01-31%20at%205.34.51%20AM.png>"
    },
    {
      "type": "paragraph",
      "id": "7cc8d837b028be22",
      "text": "Now, after 35 minutes of scraping, and stopping a few times, we have found a lot more work to do."
    },
    {
      "type": "html",
      "id": "048a6cde7a41f0bc",
      "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/clips/Screen%20Shot%202018-01-31%20at%206.15.07%20AM.png>"
    },
    {
      "type": "paragraph",
      "id": "c7006de9853e6316",
      "text": "This script is fetching every reachable page. My four-times daily scrape that feeds search only fetches pages that have changed in the last six hours. This is much less abusive of sites. See [[How Scrape Works]]"
    },
    {
      "type": "paragraph",
      "id": "175ba2f94a91fce1",
      "text": "I make scrape data available in several formats and update this four times a day. See [[Search Index Download]]"
    },
    {
      "type": "markdown",
      "id": "4886cc7787737bcc",
      "text": "# Code"
    },
    {
      "type": "paragraph",
      "id": "00749ea9f43f7fa7",
      "text": "Here are a few javascript snippets to give you an idea how sitemaps guide a scrape."
    },
    {
      "type": "paragraph",
      "id": "815d22fe2ea24023",
      "text": "As we visit each site we add its pages to that todo list."
    },
    {
      "type": "code",
      "id": "2729e7e74f06f233",
      "text": "function do_site(site, sitemap) {\n for (var i=0; i<sitemap.length; i++) {\n  try {\n   var entry = sitemap[i];\n   if (entry.date > oldest) {\n    var site_page = site + '/' + entry.slug\n    if (new_page(site_page)) {\n     pages_todo.push(site_page)\n    }\n   }\n  }\n  catch (e) { }\n }\n pages_todo.sort(chronological);\n}\n"
    },
    {
      "type": "paragraph",
      "id": "b2fcef875d01b9aa",
      "text": "As we visit each page we add new sites to that todo list."
    },
    {
      "type": "code",
      "id": "1bfd072bf57a3c72",
      "text": "function do_page(site, slug, page) {\n  try {\n   for (var i=0; i<page.story.length; i++) {\n    var item = page.story[i]\n    if (item.site && new_site(item.site)) {\n     sites_todo.push(item.site)\n    }\n   }\n   for (var i=0; i<page.journal.length; i++) {\n    var action = page.journal[i]\n    if (action.site && new_site(action.site)) {\n     sites_todo.push(action.site)\n    }\n   }\n  }\n  catch (e) { }\n}\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Scrape Pages",
        "story": []
      },
      "date": 1517409000330
    },
    {
      "item": {
        "type": "factory",
        "id": "469a499e191a09a2"
      },
      "id": "469a499e191a09a2",
      "type": "add",
      "date": 1517409032753
    },
    {
      "type": "edit",
      "id": "469a499e191a09a2",
      "item": {
        "type": "paragraph",
        "id": "469a499e191a09a2",
        "text": "A good way to understand the federation is to write a federation scraper. I wrote a scraper once that was a lot of fun to watch as it was written in one html script tag that animated the scrape as it went. I never distributed it because no learning comes from running it, just a lot of fetch load on the federation. I would share it with anyone who promised to run it only once and then destroy it."
      },
      "date": 1517409043194
    },
    {
      "type": "add",
      "id": "875fa6c9ade71f29",
      "item": {
        "type": "paragraph",
        "id": "875fa6c9ade71f29",
        "text": "I found a copy on a remote disk. I opened the html file in chrome which launched the scrape. Within seconds it had filled my screen with info gleaned from sitemaps."
      },
      "after": "469a499e191a09a2",
      "date": 1517409077496
    },
    {
      "item": {
        "type": "factory",
        "id": "7a8340d63c1aa072"
      },
      "id": "7a8340d63c1aa072",
      "type": "add",
      "after": "875fa6c9ade71f29",
      "date": 1517409087555
    },
    {
      "type": "edit",
      "id": "7a8340d63c1aa072",
      "item": {
        "type": "html",
        "id": "7a8340d63c1aa072",
        "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/clips/Screen%20Shot%202018-01-31%20at%205.34.51%20AM.png>"
      },
      "date": 1517409106920
    },
    {
      "item": {
        "type": "factory",
        "id": "7cc8d837b028be22"
      },
      "id": "7cc8d837b028be22",
      "type": "add",
      "after": "7a8340d63c1aa072",
      "date": 1517409234123
    },
    {
      "type": "edit",
      "id": "7cc8d837b028be22",
      "item": {
        "type": "paragraph",
        "id": "7cc8d837b028be22",
        "text": "Now, after 35 minutes of scraping, and starting and stopping a few times, we have found a lot more work to do."
      },
      "date": 1517409275755
    },
    {
      "type": "edit",
      "id": "7cc8d837b028be22",
      "item": {
        "type": "paragraph",
        "id": "7cc8d837b028be22",
        "text": "Now, after 35 minutes of scraping, and stopping a few times, we have found a lot more work to do."
      },
      "date": 1517409296722
    },
    {
      "item": {
        "type": "factory",
        "id": "048a6cde7a41f0bc"
      },
      "id": "048a6cde7a41f0bc",
      "type": "add",
      "after": "7cc8d837b028be22",
      "date": 1517409311411
    },
    {
      "type": "edit",
      "id": "048a6cde7a41f0bc",
      "item": {
        "type": "html",
        "id": "048a6cde7a41f0bc",
        "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/clips/Screen%20Shot%202018-01-31%20at%206.15.07%20AM.png>"
      },
      "date": 1517409328969
    },
    {
      "item": {
        "type": "factory",
        "id": "c7006de9853e6316"
      },
      "id": "c7006de9853e6316",
      "type": "add",
      "after": "048a6cde7a41f0bc",
      "date": 1517409401909
    },
    {
      "type": "edit",
      "id": "c7006de9853e6316",
      "item": {
        "type": "paragraph",
        "id": "c7006de9853e6316",
        "text": "This script is fetching every reachable page. My four-times daily scrape that feeds search only fetches pages that have changed in the last six hours. This is much less abusive of sites."
      },
      "date": 1517409406246
    },
    {
      "type": "edit",
      "id": "469a499e191a09a2",
      "item": {
        "type": "paragraph",
        "id": "469a499e191a09a2",
        "text": "A good way to understand the federation is to write a federation scraper. [https://riot.im/app/#/room/#liquidwiki:matrix.org/$15174053932405673AQRwQ:matrix.org matrix]"
      },
      "date": 1517409473639
    },
    {
      "type": "add",
      "id": "eb3bccd5d4a2c00e",
      "item": {
        "type": "paragraph",
        "id": "eb3bccd5d4a2c00e",
        "text": "I wrote a scraper once that was a lot of fun to watch as it was written in one html script tag that animated the scrape as it went. I never distributed it because no learning comes from running it, just a lot of fetch load on the federation. I would share it with anyone who promised to run it only once and then destroy it."
      },
      "after": "469a499e191a09a2",
      "date": 1517409475259
    },
    {
      "type": "edit",
      "id": "469a499e191a09a2",
      "item": {
        "type": "paragraph",
        "id": "469a499e191a09a2",
        "text": "A good way to understand the federation is to write a sitemap scraper. [https://riot.im/app/#/room/#liquidwiki:matrix.org/$15174053932405673AQRwQ:matrix.org matrix]"
      },
      "date": 1517409514028
    },
    {
      "item": {
        "type": "factory",
        "id": "2729e7e74f06f233"
      },
      "id": "2729e7e74f06f233",
      "type": "add",
      "after": "c7006de9853e6316",
      "date": 1517409890690
    },
    {
      "type": "edit",
      "id": "2729e7e74f06f233",
      "item": {
        "type": "code",
        "id": "2729e7e74f06f233",
        "text": "function do_site(site, sitemap) {\n for (var i=0; i<sitemap.length; i++) {\n  try {\n   var entry = sitemap[i];\n   if (entry.date > oldest) {\n    var site_page = site + '/' + entry.slug\n    if (new_page(site_page)) {\n     pages_todo.push(site_page)\n    }\n   }\n  }\n  catch (e) { }\n }\n pages_todo.sort(chronological);\n}\n"
      },
      "date": 1517409895182
    },
    {
      "type": "add",
      "id": "815d22fe2ea24023",
      "item": {
        "type": "paragraph",
        "id": "815d22fe2ea24023",
        "text": "As we visit each site we add its pages to that todo list."
      },
      "after": "c7006de9853e6316",
      "date": 1517409944943
    },
    {
      "item": {
        "type": "factory",
        "id": "b2fcef875d01b9aa"
      },
      "id": "b2fcef875d01b9aa",
      "type": "add",
      "after": "2729e7e74f06f233",
      "date": 1517409955359
    },
    {
      "type": "edit",
      "id": "b2fcef875d01b9aa",
      "item": {
        "type": "paragraph",
        "id": "b2fcef875d01b9aa",
        "text": "As we visit each page we add new sites to that todo list."
      },
      "date": 1517409982509
    },
    {
      "item": {
        "type": "factory",
        "id": "1bfd072bf57a3c72"
      },
      "id": "1bfd072bf57a3c72",
      "type": "add",
      "after": "b2fcef875d01b9aa",
      "date": 1517410000772
    },
    {
      "type": "edit",
      "id": "1bfd072bf57a3c72",
      "item": {
        "type": "code",
        "id": "1bfd072bf57a3c72",
        "text": "function do_page(site, slug, page) {\n  try {\n   for (var i=0; i<page.story.length; i++) {\n    var item = page.story[i]\n    if (item.site && new_site(item.site)) {\n     sites_todo.push(item.site)\n    }\n   }\n   for (var i=0; i<page.journal.length; i++) {\n    var action = page.journal[i]\n    if (action.site && new_site(action.site)) {\n     sites_todo.push(action.site)\n    }\n   }\n  }\n  catch (e) { }\n}\n"
      },
      "date": 1517410005362
    },
    {
      "item": {
        "type": "factory",
        "id": "6028c842363bf988"
      },
      "id": "6028c842363bf988",
      "type": "add",
      "after": "1bfd072bf57a3c72",
      "date": 1517418634345
    },
    {
      "type": "edit",
      "id": "c7006de9853e6316",
      "item": {
        "type": "paragraph",
        "id": "c7006de9853e6316",
        "text": "This script is fetching every reachable page. My four-times daily scrape that feeds search only fetches pages that have changed in the last six hours. This is much less abusive of sites. I make that data available in several formats. See [[Search Index Download]]"
      },
      "date": 1517418701932
    },
    {
      "type": "add",
      "id": "4886cc7787737bcc",
      "item": {
        "type": "paragraph",
        "id": "4886cc7787737bcc",
        "text": "# Code"
      },
      "after": "c7006de9853e6316",
      "date": 1517418711578
    },
    {
      "type": "add",
      "id": "00749ea9f43f7fa7",
      "item": {
        "type": "paragraph",
        "id": "00749ea9f43f7fa7",
        "text": "Here are a few snippets to give you an idea how sitemaps guide a scrape."
      },
      "after": "4886cc7787737bcc",
      "date": 1517418737693
    },
    {
      "type": "edit",
      "id": "4886cc7787737bcc",
      "item": {
        "type": "markdown",
        "id": "4886cc7787737bcc",
        "text": "# Code"
      },
      "date": 1517418742137
    },
    {
      "type": "edit",
      "id": "c7006de9853e6316",
      "item": {
        "type": "paragraph",
        "id": "c7006de9853e6316",
        "text": "This script is fetching every reachable page. My four-times daily scrape that feeds search only fetches pages that have changed in the last six hours. This is much less abusive of sites. See [[How Scrape Works]]"
      },
      "date": 1517418839693
    },
    {
      "type": "add",
      "id": "175ba2f94a91fce1",
      "item": {
        "type": "paragraph",
        "id": "175ba2f94a91fce1",
        "text": "I make that data available in several formats. See [[Search Index Download]]"
      },
      "after": "c7006de9853e6316",
      "date": 1517418841052
    },
    {
      "type": "edit",
      "id": "175ba2f94a91fce1",
      "item": {
        "type": "paragraph",
        "id": "175ba2f94a91fce1",
        "text": "I make scrape data available in several formats and update this four times a day. See [[Search Index Download]]"
      },
      "date": 1517418874272
    },
    {
      "type": "edit",
      "id": "00749ea9f43f7fa7",
      "item": {
        "type": "paragraph",
        "id": "00749ea9f43f7fa7",
        "text": "Here are a few javascript snippets to give you an idea how sitemaps guide a scrape."
      },
      "date": 1517418899227
    },
    {
      "type": "remove",
      "id": "6028c842363bf988",
      "date": 1517418913509
    },
    {
      "type": "add",
      "id": "fa4920ac58cc8300",
      "item": {
        "type": "paragraph",
        "id": "fa4920ac58cc8300",
        "text": "Tip to self: it is called scrape-pages.html. Try sys/find."
      },
      "after": "eb3bccd5d4a2c00e",
      "date": 1571252854227
    },
    {
      "type": "add",
      "id": "2ef339663e915238",
      "item": {
        "type": "paragraph",
        "id": "2ef339663e915238",
        "text": "See [[Javascript Sitemap Scrape]]"
      },
      "after": "eb3bccd5d4a2c00e",
      "date": 1572380434673
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1628855021173
    }
  ]
}