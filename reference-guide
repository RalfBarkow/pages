{
  "title": "Reference Guide",
  "story": [
    {
      "type": "paragraph",
      "id": "d03d80532fa37f9f",
      "text": "Reference guides are technical descriptions of the machinery and how to operate it. [https://documentation.divio.com/reference.html#reference page]"
    },
    {
      "type": "paragraph",
      "id": "67806a185a5a683b",
      "text": "Reference guides have one job only: to describe. They are code-determined, because ultimately that’s what they describe: key classes, functions, APIs, and so they should list things like functions, fields, attributes and methods, and set out how to use them.\n\nReference material is information-oriented.\n\nBy all means technical reference can contain examples to illustrate usage, but it should not attempt to explain basic concepts, or how to achieve common tasks.\n\nReference material should be simple and to the point."
    },
    {
      "type": "paragraph",
      "id": "bba36ab23880e6d2",
      "text": "Note that description does include basic description of how to use the machinery – how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a [[How-to Guide]] – describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation)."
    },
    {
      "type": "paragraph",
      "id": "fc9510dd9634a12c",
      "text": "For some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it."
    },
    {
      "type": "paragraph",
      "id": "626b019c64e439f3",
      "text": "Reference material tends to be written well. It can even – to some extent – be generated automatically, but this is never sufficient on its own."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reference Guide",
        "story": []
      },
      "date": 1713296486852
    },
    {
      "item": {
        "type": "factory",
        "id": "d03d80532fa37f9f"
      },
      "id": "d03d80532fa37f9f",
      "type": "add",
      "date": 1713296488261
    },
    {
      "type": "edit",
      "id": "d03d80532fa37f9f",
      "item": {
        "type": "paragraph",
        "id": "d03d80532fa37f9f",
        "text": "Reference guides are technical descriptions of the machinery and how to operate it.\n\nReference guides have one job only: to describe. They are code-determined, because ultimately that’s what they describe: key classes, functions, APIs, and so they should list things like functions, fields, attributes and methods, and set out how to use them.\n\nReference material is information-oriented.\n\nBy all means technical reference can contain examples to illustrate usage, but it should not attempt to explain basic concepts, or how to achieve common tasks.\n\nReference material should be simple and to the point.\n\nNote that description does include basic description of how to use the machinery - how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a how-to guide - describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation).\n\nFor some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it.\n\nReference material tends to be written well. It can even - to some extent - be generated automatically, but this is never sufficient on its own."
      },
      "date": 1713296492158
    },
    {
      "type": "edit",
      "id": "d03d80532fa37f9f",
      "item": {
        "type": "paragraph",
        "id": "d03d80532fa37f9f",
        "text": "Reference guides are technical descriptions of the machinery and how to operate it. [https://documentation.divio.com/reference.html#reference page]"
      },
      "date": 1713296507291
    },
    {
      "type": "add",
      "id": "67806a185a5a683b",
      "item": {
        "type": "paragraph",
        "id": "67806a185a5a683b",
        "text": "Reference guides have one job only: to describe. They are code-determined, because ultimately that’s what they describe: key classes, functions, APIs, and so they should list things like functions, fields, attributes and methods, and set out how to use them.\n\nReference material is information-oriented.\n\nBy all means technical reference can contain examples to illustrate usage, but it should not attempt to explain basic concepts, or how to achieve common tasks.\n\nReference material should be simple and to the point.\n\nNote that description does include basic description of how to use the machinery - how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a how-to guide - describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation).\n\nFor some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it.\n\nReference material tends to be written well. It can even - to some extent - be generated automatically, but this is never sufficient on its own."
      },
      "after": "d03d80532fa37f9f",
      "date": 1713296507714
    },
    {
      "type": "edit",
      "id": "67806a185a5a683b",
      "item": {
        "type": "paragraph",
        "id": "67806a185a5a683b",
        "text": "Reference guides have one job only: to describe. They are code-determined, because ultimately that’s what they describe: key classes, functions, APIs, and so they should list things like functions, fields, attributes and methods, and set out how to use them.\n\nReference material is information-oriented.\n\nBy all means technical reference can contain examples to illustrate usage, but it should not attempt to explain basic concepts, or how to achieve common tasks.\n\nReference material should be simple and to the point."
      },
      "date": 1713296567582
    },
    {
      "type": "add",
      "id": "bba36ab23880e6d2",
      "item": {
        "type": "paragraph",
        "id": "bba36ab23880e6d2",
        "text": "Note that description does include basic description of how to use the machinery – how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a how-to guide - describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation).\n\nFor some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it.\n\nReference material tends to be written well. It can even - to some extent - be generated automatically, but this is never sufficient on its own."
      },
      "after": "67806a185a5a683b",
      "date": 1713296577594
    },
    {
      "type": "edit",
      "id": "bba36ab23880e6d2",
      "item": {
        "type": "paragraph",
        "id": "bba36ab23880e6d2",
        "text": "Note that description does include basic description of how to use the machinery – how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a how-to guide – describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation)."
      },
      "date": 1713296641104
    },
    {
      "type": "add",
      "id": "fc9510dd9634a12c",
      "item": {
        "type": "paragraph",
        "id": "fc9510dd9634a12c",
        "text": "For some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it.\n\nReference material tends to be written well. It can even - to some extent - be generated automatically, but this is never sufficient on its own."
      },
      "after": "bba36ab23880e6d2",
      "date": 1713296641942
    },
    {
      "type": "edit",
      "id": "bba36ab23880e6d2",
      "item": {
        "type": "paragraph",
        "id": "bba36ab23880e6d2",
        "text": "Note that description does include basic description of how to use the machinery – how to instantiate a particular class, or invoke a certain method, for example, or precautions that must be taken when passing something to a function. However this is simply part of its function as technical reference, and emphatically not to be confused with a [[How-to Guide]] – describing correct usage of software (technical reference) is not the same as showing how to use it to achieve a certain end (how-to documentation)."
      },
      "date": 1713296686824
    },
    {
      "type": "edit",
      "id": "fc9510dd9634a12c",
      "item": {
        "type": "paragraph",
        "id": "fc9510dd9634a12c",
        "text": "For some developers, reference guides are the only kind of documentation they can imagine. They already understand their software, they know how to use it. All they can imagine that other people might need is technical information about it."
      },
      "date": 1713296714408
    },
    {
      "type": "add",
      "id": "626b019c64e439f3",
      "item": {
        "type": "paragraph",
        "id": "626b019c64e439f3",
        "text": "Reference material tends to be written well. It can even – to some extent – be generated automatically, but this is never sufficient on its own."
      },
      "after": "fc9510dd9634a12c",
      "date": 1713296723557
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713297277266
    }
  ]
}