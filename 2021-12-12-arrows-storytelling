{
  "title": "2021-12-12 Arrows Storytelling",
  "story": [
    {
      "type": "paragraph",
      "id": "13f5b363c060f223",
      "text": "While Marc and Ward were talking about a path from storytelling to model building, I was trying to recreate some grouping out of the Arrows SVG files."
    },
    {
      "type": "reference",
      "id": "6f0be7c5b13d53bd",
      "site": "marc.tries.fed.wiki",
      "slug": "story-to-graph",
      "title": "Story to Graph",
      "text": "Our goal is to invent a way to move from stories to graphs and back again to that the limitations of stories and graphs can be overcome by combining the strengths of both in an iterative process. This is meant to be used by regular folk as then deal with neighborhood-level systems."
    },
    {
      "type": "paragraph",
      "id": "e22d97623359dd75",
      "text": "[https://arrows.app/#/import/json=eyJncmFwaCI6eyJub2RlcyI6W3siaWQiOiJuMCIsInBvc2l0aW9uIjp7IngiOjE3OC4yMDg3NzQ1ODM5NjM1NiwieSI6LTY5LjYyNDM1ODgyNTE4NDA1fSwiY2FwdGlvbiI6Ik1vZGVscyIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6eyJib3JkZXItY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuMSIsInBvc2l0aW9uIjp7IngiOjQ3MS43MTk1MjU1MTIzNjk0NCwieSI6Mzk2LjU2MjU1MDQwNjY5ODh9LCJjYXB0aW9uIjoiQ2FzdWFsIExvb3AgRGlhZ3JhbSIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMiIsInBvc2l0aW9uIjp7IngiOjQ3MS43MTk1MjU1MTIzNjk0NCwieSI6NDAuODAwODMxMjM2NTg5NDc0fSwiY2FwdGlvbiI6IkRyaXZlciBEaWFncmFtIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4zIiwicG9zaXRpb24iOnsieCI6LTQzOS45MzA0MDg0NzIwMTIxLCJ5Ijo1MzYuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJOYXJyYXRpdmUiLCJsYWJlbHMiOltdLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYm9yZGVyLWNvbG9yIjoiI2Y0NGUzYiJ9fSx7ImlkIjoibjQiLCJwb3NpdGlvbiI6eyJ4IjotMTgzLjYyNDM1ODgyNTE4Mzk1LCJ5Ijo1MzYuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJUcmFuc2NyaWJlIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im41IiwicG9zaXRpb24iOnsieCI6MTc4LjIwODc3NDU4Mzk2MzU2LCJ5Ijo1MzQuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJJRCBLZXkgVmFyaWFibGVzIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7ImJvcmRlci1jb2xvciI6IiNmNDRlM2IifX0seyJpZCI6Im42IiwicG9zaXRpb24iOnsieCI6LTIyMC4zMDI1MDc3MjU2OTI2LCJ5IjotNjcuNjI0MzU4ODI1MTg0fSwiY2FwdGlvbiI6IlJlZmxlY3Rpb24iLCJsYWJlbHMiOltdLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjciLCJwb3NpdGlvbiI6eyJ4IjotNDM5LjkzMDQwODQ3MjAxMjEsInkiOjI0OS42ODE2OTA4MjE2NDQxN30sImNhcHRpb24iOiJVbmRlcnN0YW5kaW5nIFNlbnNlTWFraW5nIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im44IiwicG9zaXRpb24iOnsieCI6LTQzOS45MzA0MDg0NzIwMTIxLCJ5IjotNjcuNjI0MzU4ODI1MTg0fSwiY2FwdGlvbiI6IlNpdHVhdGlvbiIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319XSwicmVsYXRpb25zaGlwcyI6W3siaWQiOiJuMCIsImZyb21JZCI6Im4zIiwidG9JZCI6Im40IiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xIiwiZnJvbUlkIjoibjQiLCJ0b0lkIjoibjUiLCJ0eXBlIjoiUmVkdWNlIEluZm8iLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjIiLCJmcm9tSWQiOiJuNSIsInRvSWQiOiJuMSIsInR5cGUiOiJJbmNyZWFzZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4zIiwiZnJvbUlkIjoibjEiLCJ0b0lkIjoibjIiLCJ0eXBlIjoiUmVkdWNlIEluZm8iLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjQiLCJmcm9tSWQiOiJuMiIsInRvSWQiOiJuMCIsInR5cGUiOiIiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjUiLCJmcm9tSWQiOiJuMSIsInRvSWQiOiJuMCIsInR5cGUiOiIiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjYiLCJmcm9tSWQiOiJuMCIsInRvSWQiOiJuNiIsInR5cGUiOiJDaGFuZ2UgUXVhbGl0eSBvZiAiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjciLCJmcm9tSWQiOiJuNiIsInRvSWQiOiJuMyIsInR5cGUiOiJDaGFuZ2UiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYXJyb3ctY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuOSIsImZyb21JZCI6Im44IiwidG9JZCI6Im43IiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xMCIsImZyb21JZCI6Im43IiwidG9JZCI6Im4zIiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xMSIsImZyb21JZCI6Im42IiwidG9JZCI6Im44IiwidHlwZSI6IiIsInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMTIiLCJmcm9tSWQiOiJuNiIsInRvSWQiOiJuNyIsInR5cGUiOiJDaGFuZ2UiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYXJyb3ctY29sb3IiOiIjZjQ0ZTNiIn19XSwic3R5bGUiOnsiZm9udC1mYW1pbHkiOiJzYW5zLXNlcmlmIiwiYmFja2dyb3VuZC1jb2xvciI6IiNmZmZmZmYiLCJub2RlLWNvbG9yIjoiI2ZmZmZmZiIsImJvcmRlci13aWR0aCI6NCwiYm9yZGVyLWNvbG9yIjoiIzAwMDAwMCIsInJhZGl1cyI6NTAsIm5vZGUtcGFkZGluZyI6NSwibm9kZS1tYXJnaW4iOjIsIm91dHNpZGUtcG9zaXRpb24iOiJhdXRvIiwibm9kZS1pY29uLWltYWdlIjoiIiwibm9kZS1iYWNrZ3JvdW5kLWltYWdlIjoiIiwiaWNvbi1wb3NpdGlvbiI6Imluc2lkZSIsImljb24tc2l6ZSI6NjQsImNhcHRpb24tcG9zaXRpb24iOiJpbnNpZGUiLCJjYXB0aW9uLW1heC13aWR0aCI6MjAwLCJjYXB0aW9uLWNvbG9yIjoiIzAwMDAwMCIsImNhcHRpb24tZm9udC1zaXplIjo1MCwiY2FwdGlvbi1mb250LXdlaWdodCI6Im5vcm1hbCIsImxhYmVsLXBvc2l0aW9uIjoiaW5zaWRlIiwibGFiZWwtZGlzcGxheSI6InBpbGwiLCJsYWJlbC1jb2xvciI6IiMwMDAwMDAiLCJsYWJlbC1iYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsImxhYmVsLWJvcmRlci1jb2xvciI6IiMwMDAwMDAiLCJsYWJlbC1ib3JkZXItd2lkdGgiOjQsImxhYmVsLWZvbnQtc2l6ZSI6NDAsImxhYmVsLXBhZGRpbmciOjUsImxhYmVsLW1hcmdpbiI6NCwiZGlyZWN0aW9uYWxpdHkiOiJkaXJlY3RlZCIsImRldGFpbC1wb3NpdGlvbiI6ImlubGluZSIsImRldGFpbC1vcmllbnRhdGlvbiI6InBhcmFsbGVsIiwiYXJyb3ctd2lkdGgiOjUsImFycm93LWNvbG9yIjoiIzAwMDAwMCIsIm1hcmdpbi1zdGFydCI6NSwibWFyZ2luLWVuZCI6NSwibWFyZ2luLXBlZXIiOjIwLCJhdHRhY2htZW50LXN0YXJ0Ijoibm9ybWFsIiwiYXR0YWNobWVudC1lbmQiOiJub3JtYWwiLCJyZWxhdGlvbnNoaXAtaWNvbi1pbWFnZSI6IiIsInR5cGUtY29sb3IiOiIjMDAwMDAwIiwidHlwZS1iYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsInR5cGUtYm9yZGVyLWNvbG9yIjoiIzAwMDAwMCIsInR5cGUtYm9yZGVyLXdpZHRoIjowLCJ0eXBlLWZvbnQtc2l6ZSI6MTYsInR5cGUtcGFkZGluZyI6NSwicHJvcGVydHktcG9zaXRpb24iOiJvdXRzaWRlIiwicHJvcGVydHktYWxpZ25tZW50IjoiY29sb24iLCJwcm9wZXJ0eS1jb2xvciI6IiMwMDAwMDAiLCJwcm9wZXJ0eS1mb250LXNpemUiOjE2LCJwcm9wZXJ0eS1mb250LXdlaWdodCI6Im5vcm1hbCJ9fSwiZGlhZ3JhbU5hbWUiOiJTdG9yeS0tTW9kZWwtLVJlZmxlY3Rpb24gMiJ9 Arrows Story diagram]"
    },
    {
      "type": "paragraph",
      "id": "b27057b1e4789586",
      "text": "[http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg Diagram in Assets Folder]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = async event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      console.log({here:\"button click\", title, url})\n      let graph = await go(url)\n      console.log({here:\"button click\", graph})\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph.outerHTML\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
    },
    {
      "type": "code",
      "id": "a50d6a627283624a",
      "text": "async function go(url) {\n  let res = await fetch(url)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  let svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  groupNodes(svg).forEach(anchorGroup)\n  groupEdges(svg).forEach(anchorGroup)\n  return svg\n}"
    },
    {
      "type": "code",
      "id": "0acde88fafe24559",
      "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"a\"\n  )\n  group[0].insertAdjacentElement(\n    \"beforebegin\", anchor)\n  for (let el of group) {\n    anchor.parentElement.removeChild(el)\n    anchor.appendChild(el)\n  }\n  let title = Array.from(\n    anchor.querySelectorAll(\"text\")\n  ).map(text => text.textContent.trim()).join(\" \")\n  anchor.setAttribute(\"class\", \"internal\")\n  anchor.setAttribute(\"data-title\", title)\n  anchor.onclick = event => {\n    event.preventDefault()\n    event.stopPropagation()\n    window.parent.postMessage({\n      action: \"doInternalLink\",\n      title\n    }, \"*\")\n  }\n}"
    },
    {
      "type": "code",
      "id": "db54250b528c93c3",
      "text": "function groupNodes(svg) {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"circle\"), [])\n}"
    },
    {
      "type": "code",
      "id": "3d2366f8da24f0e4",
      "text": "function groupEdges(svg) {\n  let selector = list(4, (_,i) => \n    'path+polygon+rect+text'.split(\"+\")\n      .slice(0,i+1).join(\"+\")\n  ).join(\",\")\n  return Array.from(svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"path\"), [])\n}"
    },
    {
      "type": "code",
      "id": "2c6b3a392c21f364",
      "text": "const list = (size, map) =>\n  Array.from({length: size}, map)\n\nconst groupStartsWith = tagName => (acc, shape) => {\n  if (shape.tagName == tagName) {\n    acc.unshift([shape])\n  } else {\n    acc[0].push(shape)\n  }\n  return acc\n}"
    },
    {
      "type": "paragraph",
      "id": "caa626ac93aa7d4c",
      "text": "In the frame below we can view the results."
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "//eric.dojo.fed.wiki/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "assets",
      "id": "65f7a1408d67fd4b",
      "text": "pages/2021-12-12 Arrows Storytelling"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2021-12-12 Arrows Storytelling",
        "story": []
      },
      "date": 1639332159319
    },
    {
      "item": {
        "type": "factory",
        "id": "13f5b363c060f223"
      },
      "id": "13f5b363c060f223",
      "type": "add",
      "date": 1639332161405
    },
    {
      "type": "edit",
      "id": "13f5b363c060f223",
      "item": {
        "type": "paragraph",
        "id": "13f5b363c060f223",
        "text": "While Marc and Ward were talking about a path from storytelling to model building, I was trying to recreate some grouping out of the Arrows SVG files."
      },
      "date": 1639332235565
    },
    {
      "item": {
        "type": "factory",
        "id": "6f0be7c5b13d53bd"
      },
      "id": "6f0be7c5b13d53bd",
      "type": "add",
      "after": "13f5b363c060f223",
      "date": 1639332269641
    },
    {
      "type": "edit",
      "id": "6f0be7c5b13d53bd",
      "item": {
        "type": "reference",
        "id": "6f0be7c5b13d53bd",
        "site": "marc.tries.fed.wiki",
        "slug": "story-to-graph",
        "title": "Story to Graph",
        "text": "Our goal is to invent a way to move from stories to graphs and back again to that the limitations of stories and graphs can be cover come by combining the strengths of both in an iterative process. This is meant to be used by regular folk as then deal with neighborhood-level systems."
      },
      "date": 1639332274255
    },
    {
      "id": "e22d97623359dd75",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e22d97623359dd75",
        "text": "[https://arrows.app/#/local/id=HfxJTz8DBI_2GsSG7eQW Arrows diagram]"
      },
      "after": "6f0be7c5b13d53bd",
      "date": 1639332281206
    },
    {
      "id": "b27057b1e4789586",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b27057b1e4789586",
        "text": "[http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg Diagram in Assets Folder]"
      },
      "after": "e22d97623359dd75",
      "date": 1639332284502
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}"
      },
      "after": "b27057b1e4789586",
      "date": 1639332361119
    },
    {
      "id": "caa626ac93aa7d4c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "In the frame below we can view the results."
      },
      "after": "5eb6b67568179aa3",
      "date": 1639332385670
    },
    {
      "id": "6cf52409eec3988c",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//eric.dojo.fed.wiki/assets/pages/snippet-template/esm.html"
      },
      "after": "caa626ac93aa7d4c",
      "date": 1639332390064
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Greeting, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}"
      },
      "date": 1639332511658
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Greeting, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n\n}"
      },
      "date": 1639332730350
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Greeting, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639332889399
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let res = await fetch(\"\")\n  el.innerHTML = `<h2>Greeting, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333102258
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = res.text()\n  el.innerHTML = `<h2>Greeting, World!</h2>`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333216159
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>${svg}`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333417669
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333441466
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>${svg.outerHTML}`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333757948
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>${svg.document.outerHTML}`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333782025
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = svg\n  el.innerHTML = `<h2>Hello, Arrows!</h2>${svg.document.outerHTML}`\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333802381
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = svg\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg.documentElement)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639333921170
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = svg.documentElement\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg.documentElement)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639334094298
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let svg = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = svg.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg.documentElement)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639334160048
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg.documentElement)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639334190937
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  $$(Array.from({length:5},\n    (_, j) => Array.from({length:j+1},\n      (_, i)=>i?\"text\":\"circle\"\n    ).join(\"+\")).join(\",\")\n  ).reduce((acc, el) => {\n    if (el.tagName==\"circle\") {acc.unshift([el])}\n    else {acc[0].push(el)}\n    return acc\n  }, [])\n}"
      },
      "date": 1639334220775
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\")).join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n  )\n}\nwindow.regroupArrows = regroupArrows"
      },
      "date": 1639334486834
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\")).join(\",\")\n    )).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\nwindow.regroupArrows = regroupArrows"
      },
      "date": 1639334573717
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n\nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\nwindow.regroupArrows = regroupArrows"
      },
      "date": 1639334686076
    },
    {
      "type": "add",
      "id": "db54250b528c93c3",
      "item": {
        "type": "factory",
        "id": "db54250b528c93c3",
        "text": "# code"
      },
      "after": "5eb6b67568179aa3",
      "date": 1639334720311
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "# code\n\n"
      },
      "date": 1639334726556
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1639334738488
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\nwindow.regroupArrows = regroupArrows\n\n*/"
      },
      "date": 1639334757006
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return []\n}\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\nwindow.regroupArrows = regroupArrows\n\n*/"
      },
      "date": 1639334832079
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return []\n}\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639334860402
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return \n}\nconst list(size, map) => Array.from()\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639334993898
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return []\n}\n//const list(size, map) => Array.from()\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639335048617
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n}\nconst list(size, map) => \n  Array.from({length: size}, map)\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639338016443
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  return list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n}\nconst list = (size, map) => \n  Array.from({length: size}, map)\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639338070450
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return window.svg.querySelectorAll(selector)\n    .reduce((acc, shape)=>{\n      if (shape.tagName==\"circle\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nconst list = (size, map) => \n  Array.from({length: size}, map)\nwindow.regroupArrows = regroupArrows\n\n/* \nfunction regroupArrows() {\n  return window.svg.querySelectorAll(\n    Array.from({length:5},\n      (_, j) => Array.from({length:j+1},\n        (_, i)=>i?\"text\":\"circle\"\n      ).join(\"+\").join(\",\")\n    ).reduce((acc, el) => {\n      if (el.tagName==\"circle\") {acc.unshift([el])}\n      else {acc[0].push(el)}\n      return acc\n    }, [])\n}\n\n*/"
      },
      "date": 1639338334978
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction regroupArrows() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce((acc, shape)=>{\n      if (shape.tagName==\"circle\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nconst list = (size, map) => \n  Array.from({length: size}, map)\nwindow.regroupArrows = regroupArrows\n"
      },
      "date": 1639338412319
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "// code\nfunction groupNodes() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce((acc, shape)=>{\n      if (shape.tagName==\"circle\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nconst list = (size, map) => \n  Array.from({length: size}, map)\nwindow.groupNodes = groupNodes\n"
      },
      "date": 1639350527008
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "function groupNodes() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce((acc, shape)=>{\n      if (shape.tagName==\"circle\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nconst list = (size, map) => \n  Array.from({length: size}, map)\nwindow.groupNodes = groupNodes\n"
      },
      "date": 1639350534944
    },
    {
      "type": "add",
      "id": "3d2366f8da24f0e4",
      "item": {
        "type": "factory",
        "id": "3d2366f8da24f0e4",
        "text": "//code"
      },
      "after": "db54250b528c93c3",
      "date": 1639350542717
    },
    {
      "type": "edit",
      "id": "3d2366f8da24f0e4",
      "item": {
        "type": "code",
        "id": "3d2366f8da24f0e4",
        "text": "function groupEdges() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce((acc, shape)=>{\n      if (shape.tagName==\"circle\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nwindow.groupEdges = groupEdges\n"
      },
      "date": 1639350576408
    },
    {
      "type": "edit",
      "id": "3d2366f8da24f0e4",
      "item": {
        "type": "code",
        "id": "3d2366f8da24f0e4",
        "text": "function groupEdges() {\n  let selector = list(4, (_,i) => \n    'path+polygon+rect+text'.split(\"+\")\n      .slice(0,i+1).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce((acc, shape)=>{\n      if (shape.tagName==\"path\") {\n        acc.unshift([shape])\n      } else {\n        acc[0].push(shape)\n      }\n      return acc\n    }, [])\n}\nwindow.groupEdges = groupEdges\n"
      },
      "date": 1639350680968
    },
    {
      "type": "add",
      "id": "2c6b3a392c21f364",
      "item": {
        "type": "factory",
        "id": "2c6b3a392c21f364",
        "text": "//code"
      },
      "after": "3d2366f8da24f0e4",
      "date": 1639350814972
    },
    {
      "type": "edit",
      "id": "2c6b3a392c21f364",
      "item": {
        "type": "code",
        "id": "2c6b3a392c21f364",
        "text": "const list = (size, map) =>\n  Array.from({length: size}, map)\n\nconst groupStartsWith = tagName => (acc, shape) => {\n  if (shape.tagName == tagName) {\n    acc.unshift([shape])\n  } else {\n    acc[0].push(shape)\n  }\n}"
      },
      "date": 1639351008570
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "function groupNodes() {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"circle\"), [])\n}\nwindow.groupNodes = groupNodes\n"
      },
      "date": 1639351037278
    },
    {
      "type": "edit",
      "id": "3d2366f8da24f0e4",
      "item": {
        "type": "code",
        "id": "3d2366f8da24f0e4",
        "text": "function groupEdges() {\n  let selector = list(4, (_,i) => \n    'path+polygon+rect+text'.split(\"+\")\n      .slice(0,i+1).join(\"+\")\n  ).join(\",\")\n  return Array.from(window.svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"path\"), [])\n}\nwindow.groupEdges = groupEdges\n"
      },
      "date": 1639351064982
    },
    {
      "type": "edit",
      "id": "2c6b3a392c21f364",
      "item": {
        "type": "code",
        "id": "2c6b3a392c21f364",
        "text": "const list = (size, map) =>\n  Array.from({length: size}, map)\n\nconst groupStartsWith = tagName => (acc, shape) => {\n  if (shape.tagName == tagName) {\n    acc.unshift([shape])\n  } else {\n    acc[0].push(shape)\n  }\n  return acc\n}"
      },
      "date": 1639352074564
    },
    {
      "type": "add",
      "id": "0acde88fafe24559",
      "item": {
        "type": "factory",
        "id": "0acde88fafe24559",
        "text": "//code"
      },
      "after": "2c6b3a392c21f364",
      "date": 1639352633839
    },
    {
      "type": "edit",
      "id": "0acde88fafe24559",
      "item": {
        "type": "code",
        "id": "0acde88fafe24559",
        "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"\",\n    \"a\"\n  )\n}"
      },
      "date": 1639352690275
    },
    {
      "type": "edit",
      "id": "0acde88fafe24559",
      "item": {
        "type": "code",
        "id": "0acde88fafe24559",
        "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"a\"\n  )\n  group[0].insertAdjacentElement(\n    \"beforebegin\", anchor)\n  for (let el of group) {\n    anchor.parentElement.removeChild(el)\n    anchor.appendChild(el)\n  }\n\n}"
      },
      "date": 1639353052857
    },
    {
      "type": "edit",
      "id": "0acde88fafe24559",
      "item": {
        "type": "code",
        "id": "0acde88fafe24559",
        "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"a\"\n  )\n  group[0].insertAdjacentElement(\n    \"beforebegin\", anchor)\n  for (let el of group) {\n    anchor.parentElement.removeChild(el)\n    anchor.appendChild(el)\n  }\n  anchor.setAttribute(\"class\", \"internal\")\n  anchor.setAttribute(\n    \"data-title\", anchor.textContent)\n  anchor.onclick = event => {\n    window.parent.postMessage({\n      action: \"doInternalLink\",\n      title: anchor.textContent\n    }, \"*\")\n  }\n}"
      },
      "date": 1639353258814
    },
    {
      "id": "0acde88fafe24559",
      "type": "move",
      "order": [
        "13f5b363c060f223",
        "6f0be7c5b13d53bd",
        "e22d97623359dd75",
        "b27057b1e4789586",
        "5eb6b67568179aa3",
        "db54250b528c93c3",
        "3d2366f8da24f0e4",
        "0acde88fafe24559",
        "2c6b3a392c21f364",
        "caa626ac93aa7d4c",
        "6cf52409eec3988c"
      ],
      "date": 1639353270255
    },
    {
      "id": "0acde88fafe24559",
      "type": "move",
      "order": [
        "13f5b363c060f223",
        "6f0be7c5b13d53bd",
        "e22d97623359dd75",
        "b27057b1e4789586",
        "5eb6b67568179aa3",
        "0acde88fafe24559",
        "db54250b528c93c3",
        "3d2366f8da24f0e4",
        "2c6b3a392c21f364",
        "caa626ac93aa7d4c",
        "6cf52409eec3988c"
      ],
      "date": 1639353277565
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1639353388930
    },
    {
      "type": "edit",
      "id": "0acde88fafe24559",
      "item": {
        "type": "code",
        "id": "0acde88fafe24559",
        "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"a\"\n  )\n  group[0].insertAdjacentElement(\n    \"beforebegin\", anchor)\n  for (let el of group) {\n    anchor.parentElement.removeChild(el)\n    anchor.appendChild(el)\n  }\n  anchor.setAttribute(\"class\", \"internal\")\n  anchor.setAttribute(\n    \"data-title\", anchor.textContent)\n  anchor.onclick = event => {\n    event.preventDefault()\n    event.stopPropagation()\n    window.parent.postMessage({\n      action: \"doInternalLink\",\n      title: anchor.textContent\n    }, \"*\")\n  }\n}"
      },
      "date": 1639353433862
    },
    {
      "type": "edit",
      "id": "0acde88fafe24559",
      "item": {
        "type": "code",
        "id": "0acde88fafe24559",
        "text": "function anchorGroup(group) {\n  let anchor = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    \"a\"\n  )\n  group[0].insertAdjacentElement(\n    \"beforebegin\", anchor)\n  for (let el of group) {\n    anchor.parentElement.removeChild(el)\n    anchor.appendChild(el)\n  }\n  let title = Array.from(\n    anchor.querySelectorAll(\"text\")\n  ).map(text => text.textContent.trim()).join(\" \")\n  anchor.setAttribute(\"class\", \"internal\")\n  anchor.setAttribute(\"data-title\", title)\n  anchor.onclick = event => {\n    event.preventDefault()\n    event.stopPropagation()\n    window.parent.postMessage({\n      action: \"doInternalLink\",\n      title\n    }, \"*\")\n  }\n}"
      },
      "date": 1639353672721
    },
    {
      "item": {
        "type": "factory",
        "id": "f9672c4a158acc68"
      },
      "id": "f9672c4a158acc68",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1640541399433
    },
    {
      "type": "edit",
      "id": "f9672c4a158acc68",
      "item": {
        "type": "html",
        "id": "f9672c4a158acc68",
        "text": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 893 621\"><defs><style type=\"text/css\"></style></defs><a class=\"internal\" data-title=\"Reduce\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 505.98774046847234) rotate(0)\" d=\"M 59 0 L 172.4438990290799 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 505.98774046847234) rotate(0) translate(197.30604964682817 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-324.2084589574722 505.98774046847234) rotate(0) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"0\" y=\"0\" width=\"65.1484375\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-324.2084589574722 505.98774046847234) rotate(0) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Reduce</text></a><a class=\"internal\" data-title=\"Reduce\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-183.62435882518395 505.98774046847234) rotate(0)\" d=\"M 59 0 L 228.97098279139922 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-183.62435882518395 505.98774046847234) rotate(0) translate(253.83313340914754 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-39.63886742948432 505.98774046847234) rotate(0) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"0\" y=\"0\" width=\"65.1484375\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-39.63886742948432 505.98774046847234) rotate(0) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Reduce</text></a><a class=\"internal\" data-title=\"Increase\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 505.98774046847234) rotate(-32.88432351416979)\" d=\"M 59 0 L 172.76900904468152 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 505.98774046847234) rotate(-32.88432351416979) translate(197.6311596624298 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(226.5249252159715 443.0688624225571) rotate(-32.88432351416979) translate(0 -13) translate(0 0) translate(-35.68359375 0)\" x=\"0\" y=\"0\" width=\"71.3671875\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(226.5249252159715 443.0688624225571) rotate(-32.88432351416979) translate(0 -13) translate(0 0) translate(-35.68359375 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Increase</text></a><a class=\"internal\" data-title=\"Reduce\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) rotate(-90.00000000000001)\" d=\"M 59 0 L 164.9882295057987 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) rotate(-90.00000000000001) translate(189.850380123547 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 254.65709660723707) rotate(89.99999999999997) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"0\" y=\"0\" width=\"65.1484375\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 254.65709660723707) rotate(89.99999999999997) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Reduce</text></a><a class=\"internal\" data-title=\"\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 117.8008312365894) rotate(-150.00000000000003)\" d=\"M 59 0 L 164.9882295057987 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 117.8008312365894) rotate(-150.00000000000003) translate(189.85038012354698 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon></a><a class=\"internal\" data-title=\"\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) rotate(-120.00000000000001)\" d=\"M 59 0 L 347.15935123906337 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) rotate(-120.00000000000001) translate(372.02150185681165 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon></a><a class=\"internal\" data-title=\"Change Quality of\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 -6.624358825184046) rotate(180)\" d=\"M 59 0 L 265.6491316919079 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 -6.624358825184046) rotate(180) translate(290.51128230965617 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-33.11579126199038 -6.624358825184027) rotate(360) translate(0 -13) translate(0 0) translate(-71.26171875 0)\" x=\"0\" y=\"0\" width=\"142.5234375\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-33.11579126199038 -6.624358825184027) rotate(360) translate(0 -13) translate(0 0) translate(-71.26171875 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Change Quality of </text></a><a class=\"internal\" data-title=\"Change\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(113.1926413692836)\" d=\"M 59 0 L 473.81838439175385 0\" fill=\"none\" stroke=\"#f44e3b\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(113.1926413692836) translate(498.68053500950214 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#f44e3b\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-325.2208040411742 238.2552213457982) rotate(293.19264136928365) translate(0 -13) translate(0 0) translate(-33.0234375 0)\" x=\"0\" y=\"0\" width=\"66.046875\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-325.2208040411742 238.2552213457982) rotate(293.19264136928365) translate(0 -13) translate(0 0) translate(-33.0234375 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Change</text></a><a class=\"internal\" data-title=\"Reduce\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 -6.624358825184004) rotate(90)\" d=\"M 59 0 L 172.4438990290799 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 -6.624358825184004) rotate(90) translate(197.30604964682817 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 109.09759068935594) rotate(270) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"0\" y=\"0\" width=\"65.1484375\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 109.09759068935594) rotate(270) translate(0 -13) translate(0 0) translate(-32.57421875 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Reduce</text></a><a class=\"internal\" data-title=\"REduce\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 249.68169082164417) rotate(90)\" d=\"M 59 0 L 172.4438990290799 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 249.68169082164417) rotate(90) translate(197.30604964682817 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 365.40364033618414) rotate(270) translate(0 -13) translate(0 0) translate(-33.4609375 0)\" x=\"0\" y=\"0\" width=\"66.921875\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 365.40364033618414) rotate(270) translate(0 -13) translate(0 0) translate(-33.4609375 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">REduce</text></a><a class=\"internal\" data-title=\"\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(180)\" d=\"M 59 0 L 135.7657501285712 0\" fill=\"none\" stroke=\"#000000\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(180) translate(160.6279007463195 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#000000\" stroke=\"none\" stroke-width=\"5\"></polygon></a><a class=\"internal\" data-title=\"Change\"><path transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(130.59317518786355)\" d=\"M 59 0 L 253.67185636791456 0\" fill=\"none\" stroke=\"#f44e3b\" stroke-width=\"5\"></path><polygon transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) rotate(130.59317518786355) translate(278.53400698566287 0) rotate(0)\" points=\"-24.8621506177483,0 -27.62461179749811,9.20820393249937 0,0 -27.62461179749811,-9.20820393249937\" fill=\"#f44e3b\" stroke=\"none\" stroke-width=\"5\"></polygon><rect transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-322.0277591304447 112.08914364096105) rotate(310.59317518786355) translate(0 -13) translate(0 0) translate(-33.0234375 0)\" x=\"0\" y=\"0\" width=\"66.046875\" height=\"26\" rx=\"5\" ry=\"5\" fill=\"#ffffff\" stroke=\"none\"></rect><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-322.0277591304447 112.08914364096105) rotate(310.59317518786355) translate(0 -13) translate(0 0) translate(-33.0234375 0)\" x=\"5\" y=\"17.45703125\" font-family=\"sans-serif\" font-size=\"16\" font-weight=\"normal\" text-anchor=\"left\" fill=\"#000000\">Change</text></a><a class=\"internal\" data-title=\"Models\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"129.20877458396356\" cy=\"-6.624358825184046\" r=\"52\" fill=\"#ffffff\" stroke=\"#f44e3b\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 -6.624358825184046) scale(0.5195317304687499) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Models</text></a><a class=\"internal\" data-title=\"Casual Loop Diagram\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"344.71952551236944\" cy=\"366.6512113601364\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) scale(0.34375065625) translate(0 0) translate(0 0)\" x=\"0\" y=\"-46.07177734375\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Casual</text><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) scale(0.34375065625) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Loop</text><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.71952551236944 366.6512113601364) scale(0.34375065625) translate(0 0) translate(0 0)\" x=\"0\" y=\"73.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Diagram</text></a><a class=\"internal\" data-title=\"Driver Diagram\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"344.7195255123694\" cy=\"117.8008312365894\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 117.8008312365894) scale(0.3984381015624999) translate(0 0) translate(0 0)\" x=\"0\" y=\"-16.07177734375\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Driver</text><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(344.7195255123694 117.8008312365894) scale(0.3984381015624999) translate(0 0) translate(0 0)\" x=\"0\" y=\"43.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Diagram</text></a><a class=\"internal\" data-title=\"Narrative\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"-439.9304084720121\" cy=\"505.98774046847234\" r=\"52\" fill=\"#ffffff\" stroke=\"#f44e3b\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 505.98774046847234) scale(0.421875578125) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Narrative</text></a><a class=\"internal\" data-title=\"Transcribe\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"-183.62435882518395\" cy=\"505.98774046847234\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-183.62435882518395 505.98774046847234) scale(0.37109437890624997) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Transcribe</text></a><a class=\"internal\" data-title=\"ID Key Variables\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"129.20877458396356\" cy=\"505.98774046847234\" r=\"52\" fill=\"#ffffff\" stroke=\"#f44e3b\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 505.98774046847234) scale(0.3828131171875) translate(0 0) translate(0 0)\" x=\"0\" y=\"-46.07177734375\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">ID Key</text><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(129.20877458396356 505.98774046847234) scale(0.3828131171875) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Variables</text></a><a class=\"internal\" data-title=\"Reflection\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"-220.3025077256926\" cy=\"-6.624358825184004\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-220.3025077256926 -6.624358825184004) scale(0.39062560937499996) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Reflection</text></a><a class=\"internal\" data-title=\"Understanding SenseMaking\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"-439.9304084720121\" cy=\"249.68169082164417\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 249.68169082164417) scale(0.2578132421875) translate(0 0) translate(0 0)\" x=\"0\" y=\"-16.07177734375\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Understanding</text><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 249.68169082164417) scale(0.2578132421875) translate(0 0) translate(0 0)\" x=\"0\" y=\"43.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">SenseMaking</text></a><a class=\"internal\" data-title=\"Situation\"><circle transform=\"translate(493.9304084720121 60.624358825184046) scale(1)\" cx=\"-439.9304084720121\" cy=\"-6.624358825184004\" r=\"52\" fill=\"#ffffff\" stroke=\"#000000\" stroke-width=\"4\"></circle><text xml:space=\"preserve\" transform=\"translate(493.9304084720121 60.624358825184046) scale(1) translate(-439.9304084720121 -6.624358825184004) scale(0.4414068085937499) translate(0 0) translate(0 0)\" x=\"0\" y=\"13.92822265625\" font-family=\"sans-serif\" font-size=\"50\" font-weight=\"normal\" text-anchor=\"middle\" fill=\"#000000\">Situation</text></a></svg>"
      },
      "date": 1640541403519
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `<button>ghost</button>`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title: \"Clickable Arrows\",\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: \"<h1>Hello</h1>\"\n            }\n          ]\n        }\n      })\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640541734875
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `<button>ghost</button>`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title: \"Clickable Arrows\",\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: \"<h1>Hello</h1>\"\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640541787979
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `<button>ghost</button>`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n\n      graph = document.querySelector('svg')\n        .outterHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title: \"Clickable Arrows\",\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640541894662
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://marc.tries.fed.wiki/assets/Story%20to%20Model.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `<button>ghost</button>`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n\n      let graph = document.querySelector('svg')\n        .outerHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title: \"Clickable Arrows\",\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640541967137
    },
    {
      "type": "remove",
      "id": "f9672c4a158acc68",
      "date": 1640541988203
    },
    {
      "item": {
        "type": "factory",
        "id": "65f7a1408d67fd4b"
      },
      "id": "65f7a1408d67fd4b",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1640542364869
    },
    {
      "type": "edit",
      "id": "65f7a1408d67fd4b",
      "item": {
        "type": "assets",
        "id": "65f7a1408d67fd4b",
        "text": "pages/"
      },
      "date": 1640542376569
    },
    {
      "type": "edit",
      "id": "65f7a1408d67fd4b",
      "item": {
        "type": "assets",
        "id": "65f7a1408d67fd4b",
        "text": "pages/2021-12-12 Arrows Storytelling"
      },
      "date": 1640542386426
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://eric.dojo.fed.wiki/assets/pages/2021-12-12/Clickable%20Nodes.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `<button>ghost</button>`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n\n      let graph = document.querySelector('svg')\n        .outerHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title: \"Clickable Arrows\",\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640542406395
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  let arrows = \"http://eric.dojo.fed.wiki/assets/pages/2021-12-12/Clickable%20Nodes.svg\"\n  let res = await fetch(arrows)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n  el.appendChild(svg)\n\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      let title = document.querySelector('input[name=title]')\n  .value\ndocument.querySelector('input[name=source]')\n  .value\n      let graph = document.querySelector('svg')\n        .outerHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640542706402
    },
    {
      "item": {
        "type": "factory",
        "id": "a50d6a627283624a"
      },
      "id": "a50d6a627283624a",
      "type": "add",
      "after": "65f7a1408d67fd4b",
      "date": 1640542732809
    },
    {
      "id": "a50d6a627283624a",
      "type": "move",
      "order": [
        "13f5b363c060f223",
        "6f0be7c5b13d53bd",
        "e22d97623359dd75",
        "b27057b1e4789586",
        "5eb6b67568179aa3",
        "a50d6a627283624a",
        "0acde88fafe24559",
        "db54250b528c93c3",
        "3d2366f8da24f0e4",
        "2c6b3a392c21f364",
        "caa626ac93aa7d4c",
        "6cf52409eec3988c",
        "65f7a1408d67fd4b"
      ],
      "date": 1640542747233
    },
    {
      "type": "edit",
      "id": "a50d6a627283624a",
      "item": {
        "type": "code",
        "id": "a50d6a627283624a",
        "text": "async function go(url) {\n  let res = await fetch(url)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  el.appendChild(svg)\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}"
      },
      "date": 1640542934304
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      let title = document.querySelector('input[name=title]')\n  .value\ndocument.querySelector('input[name=source]')\n  .value\n      let graph = document.querySelector('svg')\n        .outerHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640543085942
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      go(url)\n      let graph = document.querySelector('svg')\n        .outerHTML\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640543174392
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      console.log({here:\"button click\", title, url})\n      go(url)\n      let graph = document.querySelector('svg')\n        .outerHTML\n      console.log({here:\"button click\", graph})\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640543398081
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      console.log({here:\"button click\", title, url})\n      await go(url)\n      let graph = document.querySelector('svg')\n        .outerHTML\n      console.log({here:\"button click\", graph})\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640543471448
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = async event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      console.log({here:\"button click\", title, url})\n      await go(url)\n      let graph = document.querySelector('svg')\n        .outerHTML\n      console.log({here:\"button click\", graph})\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640543497454
    },
    {
      "type": "edit",
      "id": "a50d6a627283624a",
      "item": {
        "type": "code",
        "id": "a50d6a627283624a",
        "text": "async function go(url) {\n  let res = await fetch(url)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  window.svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  document.body.appendChild(svg)\n  groupNodes().forEach(anchorGroup)\n  groupEdges().forEach(anchorGroup)\n}"
      },
      "date": 1640543583823
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "function groupNodes(svg) {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"circle\"), [])\n}\nwindow.groupNodes = groupNodes\n"
      },
      "date": 1640543884697
    },
    {
      "type": "edit",
      "id": "db54250b528c93c3",
      "item": {
        "type": "code",
        "id": "db54250b528c93c3",
        "text": "function groupNodes(svg) {\n  let selector = list(5, (_,j) => \n    list(j+1, (_, i)=>\n      i?\"text\":\"circle\"\n    ).join(\"+\")\n  ).join(\",\")\n  return Array.from(svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"circle\"), [])\n}"
      },
      "date": 1640543904297
    },
    {
      "type": "edit",
      "id": "3d2366f8da24f0e4",
      "item": {
        "type": "code",
        "id": "3d2366f8da24f0e4",
        "text": "function groupEdges(svg) {\n  let selector = list(4, (_,i) => \n    'path+polygon+rect+text'.split(\"+\")\n      .slice(0,i+1).join(\"+\")\n  ).join(\",\")\n  return Array.from(svg\n    .querySelectorAll(selector)\n  ).reduce(groupStartsWith(\"path\"), [])\n}"
      },
      "date": 1640543921308
    },
    {
      "type": "edit",
      "id": "a50d6a627283624a",
      "item": {
        "type": "code",
        "id": "a50d6a627283624a",
        "text": "async function go(url) {\n  let res = await fetch(url)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  let svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  document.body.appendChild(svg)\n  groupNodes(svg).forEach(anchorGroup)\n  groupEdges(svg).forEach(anchorGroup)\n  return svg\n}"
      },
      "date": 1640543957506
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `<h2>Hello, Arrows!</h2>`\n  el.insertAdjacentHTML('beforeend',\n    `\n<input name=\"title\" type=\"text\" placeholder=\"page title\"></br>\n<input name=\"source\" type=\"text\" placeholder=\"URL to svg file\"><br>\n<button>ghost</button>\n`)\n}\n\nexport async function bind(el) {\n  document.querySelector('button')\n    .onclick = async event => {\n      let title = document\n        .querySelector('input[name=title]').value\n      let url = document\n        .querySelector('input[name=source]').value\n      console.log({here:\"button click\", title, url})\n      let graph = await go(url)\n      console.log({here:\"button click\", graph})\n      window.parent.postMessage({\n        action: \"showResult\",\n        page: {\n          title,\n          story: [\n            {\n              id: \"asldfasdfasf\",\n              type: \"html\",\n              text: graph.outerHTML\n            }\n          ]\n        },\n        keepLineup: event.shiftKey\n      }, \"*\")\n    }\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}\n"
      },
      "date": 1640544010734
    },
    {
      "type": "edit",
      "id": "a50d6a627283624a",
      "item": {
        "type": "code",
        "id": "a50d6a627283624a",
        "text": "async function go(url) {\n  let res = await fetch(url)\n  let string = await res.text()\n  let dom = new DOMParser().parseFromString(\n    string, \"image/svg+xml\")\n  let svg = dom.documentElement\n  svg.removeAttribute(\"width\")\n  svg.removeAttribute(\"height\")\n  groupNodes(svg).forEach(anchorGroup)\n  groupEdges(svg).forEach(anchorGroup)\n  return svg\n}"
      },
      "date": 1640544059033
    },
    {
      "type": "fork",
      "site": "eric.dojo.fed.wiki",
      "date": 1640544697188
    },
    {
      "type": "edit",
      "id": "6f0be7c5b13d53bd",
      "item": {
        "type": "reference",
        "id": "6f0be7c5b13d53bd",
        "site": "marc.tries.fed.wiki",
        "slug": "story-to-graph",
        "title": "Story to Graph",
        "text": "Our goal is to invent a way to move from stories to graphs and back again to that the limitations of stories and graphs can be overcome by combining the strengths of both in an iterative process. This is meant to be used by regular folk as then deal with neighborhood-level systems."
      },
      "date": 1642432886651
    },
    {
      "type": "edit",
      "id": "e22d97623359dd75",
      "item": {
        "type": "paragraph",
        "id": "e22d97623359dd75",
        "text": "[https://arrows.app/#/import/json=eyJncmFwaCI6eyJub2RlcyI6W3siaWQiOiJuMCIsInBvc2l0aW9uIjp7IngiOjE3OC4yMDg3NzQ1ODM5NjM1NiwieSI6LTY5LjYyNDM1ODgyNTE4NDA1fSwiY2FwdGlvbiI6Ik1vZGVscyIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6eyJib3JkZXItY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuMSIsInBvc2l0aW9uIjp7IngiOjQ3MS43MTk1MjU1MTIzNjk0NCwieSI6Mzk2LjU2MjU1MDQwNjY5ODh9LCJjYXB0aW9uIjoiQ2FzdWFsIExvb3AgRGlhZ3JhbSIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMiIsInBvc2l0aW9uIjp7IngiOjQ3MS43MTk1MjU1MTIzNjk0NCwieSI6NDAuODAwODMxMjM2NTg5NDc0fSwiY2FwdGlvbiI6IkRyaXZlciBEaWFncmFtIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4zIiwicG9zaXRpb24iOnsieCI6LTQzOS45MzA0MDg0NzIwMTIxLCJ5Ijo1MzYuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJOYXJyYXRpdmUiLCJsYWJlbHMiOltdLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYm9yZGVyLWNvbG9yIjoiI2Y0NGUzYiJ9fSx7ImlkIjoibjQiLCJwb3NpdGlvbiI6eyJ4IjotMTgzLjYyNDM1ODgyNTE4Mzk1LCJ5Ijo1MzYuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJUcmFuc2NyaWJlIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im41IiwicG9zaXRpb24iOnsieCI6MTc4LjIwODc3NDU4Mzk2MzU2LCJ5Ijo1MzQuOTg3NzQwNDY4NDcyM30sImNhcHRpb24iOiJJRCBLZXkgVmFyaWFibGVzIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7ImJvcmRlci1jb2xvciI6IiNmNDRlM2IifX0seyJpZCI6Im42IiwicG9zaXRpb24iOnsieCI6LTIyMC4zMDI1MDc3MjU2OTI2LCJ5IjotNjcuNjI0MzU4ODI1MTg0fSwiY2FwdGlvbiI6IlJlZmxlY3Rpb24iLCJsYWJlbHMiOltdLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjciLCJwb3NpdGlvbiI6eyJ4IjotNDM5LjkzMDQwODQ3MjAxMjEsInkiOjI0OS42ODE2OTA4MjE2NDQxN30sImNhcHRpb24iOiJVbmRlcnN0YW5kaW5nIFNlbnNlTWFraW5nIiwibGFiZWxzIjpbXSwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im44IiwicG9zaXRpb24iOnsieCI6LTQzOS45MzA0MDg0NzIwMTIxLCJ5IjotNjcuNjI0MzU4ODI1MTg0fSwiY2FwdGlvbiI6IlNpdHVhdGlvbiIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319XSwicmVsYXRpb25zaGlwcyI6W3siaWQiOiJuMCIsImZyb21JZCI6Im4zIiwidG9JZCI6Im40IiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xIiwiZnJvbUlkIjoibjQiLCJ0b0lkIjoibjUiLCJ0eXBlIjoiUmVkdWNlIEluZm8iLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjIiLCJmcm9tSWQiOiJuNSIsInRvSWQiOiJuMSIsInR5cGUiOiJJbmNyZWFzZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4zIiwiZnJvbUlkIjoibjEiLCJ0b0lkIjoibjIiLCJ0eXBlIjoiUmVkdWNlIEluZm8iLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjQiLCJmcm9tSWQiOiJuMiIsInRvSWQiOiJuMCIsInR5cGUiOiIiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjUiLCJmcm9tSWQiOiJuMSIsInRvSWQiOiJuMCIsInR5cGUiOiIiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjYiLCJmcm9tSWQiOiJuMCIsInRvSWQiOiJuNiIsInR5cGUiOiJDaGFuZ2UgUXVhbGl0eSBvZiAiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnt9fSx7ImlkIjoibjciLCJmcm9tSWQiOiJuNiIsInRvSWQiOiJuMyIsInR5cGUiOiJDaGFuZ2UiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYXJyb3ctY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuOSIsImZyb21JZCI6Im44IiwidG9JZCI6Im43IiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xMCIsImZyb21JZCI6Im43IiwidG9JZCI6Im4zIiwidHlwZSI6IlJlZHVjZSBJbmZvIiwicHJvcGVydGllcyI6e30sInN0eWxlIjp7fX0seyJpZCI6Im4xMSIsImZyb21JZCI6Im42IiwidG9JZCI6Im44IiwidHlwZSI6IiIsInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMTIiLCJmcm9tSWQiOiJuNiIsInRvSWQiOiJuNyIsInR5cGUiOiJDaGFuZ2UiLCJwcm9wZXJ0aWVzIjp7fSwic3R5bGUiOnsiYXJyb3ctY29sb3IiOiIjZjQ0ZTNiIn19XSwic3R5bGUiOnsiZm9udC1mYW1pbHkiOiJzYW5zLXNlcmlmIiwiYmFja2dyb3VuZC1jb2xvciI6IiNmZmZmZmYiLCJub2RlLWNvbG9yIjoiI2ZmZmZmZiIsImJvcmRlci13aWR0aCI6NCwiYm9yZGVyLWNvbG9yIjoiIzAwMDAwMCIsInJhZGl1cyI6NTAsIm5vZGUtcGFkZGluZyI6NSwibm9kZS1tYXJnaW4iOjIsIm91dHNpZGUtcG9zaXRpb24iOiJhdXRvIiwibm9kZS1pY29uLWltYWdlIjoiIiwibm9kZS1iYWNrZ3JvdW5kLWltYWdlIjoiIiwiaWNvbi1wb3NpdGlvbiI6Imluc2lkZSIsImljb24tc2l6ZSI6NjQsImNhcHRpb24tcG9zaXRpb24iOiJpbnNpZGUiLCJjYXB0aW9uLW1heC13aWR0aCI6MjAwLCJjYXB0aW9uLWNvbG9yIjoiIzAwMDAwMCIsImNhcHRpb24tZm9udC1zaXplIjo1MCwiY2FwdGlvbi1mb250LXdlaWdodCI6Im5vcm1hbCIsImxhYmVsLXBvc2l0aW9uIjoiaW5zaWRlIiwibGFiZWwtZGlzcGxheSI6InBpbGwiLCJsYWJlbC1jb2xvciI6IiMwMDAwMDAiLCJsYWJlbC1iYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsImxhYmVsLWJvcmRlci1jb2xvciI6IiMwMDAwMDAiLCJsYWJlbC1ib3JkZXItd2lkdGgiOjQsImxhYmVsLWZvbnQtc2l6ZSI6NDAsImxhYmVsLXBhZGRpbmciOjUsImxhYmVsLW1hcmdpbiI6NCwiZGlyZWN0aW9uYWxpdHkiOiJkaXJlY3RlZCIsImRldGFpbC1wb3NpdGlvbiI6ImlubGluZSIsImRldGFpbC1vcmllbnRhdGlvbiI6InBhcmFsbGVsIiwiYXJyb3ctd2lkdGgiOjUsImFycm93LWNvbG9yIjoiIzAwMDAwMCIsIm1hcmdpbi1zdGFydCI6NSwibWFyZ2luLWVuZCI6NSwibWFyZ2luLXBlZXIiOjIwLCJhdHRhY2htZW50LXN0YXJ0Ijoibm9ybWFsIiwiYXR0YWNobWVudC1lbmQiOiJub3JtYWwiLCJyZWxhdGlvbnNoaXAtaWNvbi1pbWFnZSI6IiIsInR5cGUtY29sb3IiOiIjMDAwMDAwIiwidHlwZS1iYWNrZ3JvdW5kLWNvbG9yIjoiI2ZmZmZmZiIsInR5cGUtYm9yZGVyLWNvbG9yIjoiIzAwMDAwMCIsInR5cGUtYm9yZGVyLXdpZHRoIjowLCJ0eXBlLWZvbnQtc2l6ZSI6MTYsInR5cGUtcGFkZGluZyI6NSwicHJvcGVydHktcG9zaXRpb24iOiJvdXRzaWRlIiwicHJvcGVydHktYWxpZ25tZW50IjoiY29sb24iLCJwcm9wZXJ0eS1jb2xvciI6IiMwMDAwMDAiLCJwcm9wZXJ0eS1mb250LXNpemUiOjE2LCJwcm9wZXJ0eS1mb250LXdlaWdodCI6Im5vcm1hbCJ9fSwiZGlhZ3JhbU5hbWUiOiJTdG9yeS0tTW9kZWwtLVJlZmxlY3Rpb24gMiJ9 Arrows Story diagram]"
      },
      "date": 1642433068482
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1651127335734
    }
  ]
}