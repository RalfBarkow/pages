{
  "title": "Reflective Wiki",
  "story": [
    {
      "type": "html",
      "text": "Spawned from [[Wiki Placename Problem]] by this comment:",
      "id": "44e8e6e20e8b8f174d737f6f085273dd"
    },
    {
      "type": "html",
      "text": "<i>Actually, a \"reflective\" Wiki which could be used to alter its own source code would be a very worthwhile thing. On the other hand, it is also most definitely and absolutely certainly a stupid idea and one that couldn't possibly work, ever ever. On the gripping hand an [[Object Oriented Wiki]] could certainly work. Combine that with [[Mana Mana]] and one might have a [[Tar Baby]]. Hmm.</i> -- [[Peter Merel]]",
      "id": "8f5e5accbb6c77d8087fb233f13538c5"
    },
    {
      "type": "html",
      "text": "\nHence the [[Reflective Wiki]] is an idea or suggestion for yet another [[Wiki Engine]].",
      "id": "6a91d590e75a85b9afc0783b615fae59"
    },
    {
      "type": "html",
      "text": "<b>Which technology? How would it work?</b>",
      "id": "78e86aa6508f14a843c0636562f82462"
    },
    {
      "type": "html",
      "text": "\nWell, it seems obvious that you would need a strong sandbox.",
      "id": "0d52337c3fee0c114eb698b3f8345995"
    },
    {
      "type": "html",
      "text": "\nYou would probably need some automatic version control, such that the system could automatically roll back changes which cause it to malfunction.",
      "id": "ca90625151709e0d718b56e3b1abc977"
    },
    {
      "type": "html",
      "text": "\nSupposing each \"page\" had a [[Unit Test]], you then have a hook for your version control - if the change you are making will break the [[Reflective Wiki]], then you must commit to a branch.",
      "id": "8d5b12137ab9d242a13511a916cb9905"
    },
    {
      "type": "html",
      "text": "\nOf course, that would be [[Version Control Applied To Wiki]] gone mad.",
      "id": "c0ce33ea02dba2cdbcd937ad374c2459"
    },
    {
      "type": "html",
      "text": "<i>I don't think such a thing is necessary.  Just provide some rudimentary scripts (eg show and edit) that cannot be altered, but usually use other (reflective) interfaces to the wiki.  Make an exception handler that points the user directly to the non-alterable edit script on the right file.</i>",
      "id": "cd6d052dc4f35df7be72c270902d8199"
    },
    {
      "type": "html",
      "text": "<b>Likely side effects</b>",
      "id": "35753a61f25c07d5a64995ca2bbf6a4d"
    },
    {
      "type": "html",
      "text": "\nI can see that this system is not going to be popular with the casual [[Wiki Zen]].",
      "id": "f2d7886b8a7c0cd966d9edaa46f1eed6"
    },
    {
      "type": "html",
      "text": "\n[[Self Modifying Code]] is often [[Considered Harmful]], so I can see that the average contributor is likely to be a hacker with a twisted mind. Hence the [[Reflective Wiki]] would have some amazing features, but few will be able to understand or use them.",
      "id": "6488b3b9fc30cb748b32eb478fccc283"
    },
    {
      "type": "html",
      "text": "\nIn case there was still some doubt, it would nicely underline the fact that [[Code Is Speech]] (in the [[Protected By American Constitution]] sense. See also [[Digital Millennium Copyright Act]]).",
      "id": "d7cc80bf4a89d13d1804dcf297e62703"
    },
    {
      "type": "html",
      "text": "\nThere could be problems with ensuring that the code compiles.  OK, you could check that at submission time, unless \"do\" or \"use\" are allowed to include other pages - you don't want to have to \"perl -wc\" the whole site each time.",
      "id": "351a1c7e0c40038599d47134f1f52da2"
    },
    {
      "type": "html",
      "text": "\nThen there is the [[Halting Problem]].  Solve that and you're on to a winner!  8->",
      "id": "80a96d712f6a3fd258190d4a3d6e2e8a"
    },
    {
      "type": "html",
      "text": "<b>Examples</b>",
      "id": "55ede04845efce27503907800413c24e"
    },
    {
      "type": "html",
      "text": " (Haven't actually looked at it yet but) [[Hyper Perl]] sounds interesting.",
      "id": "56edb0672d6e656d316144eb9bfb360d"
    },
    {
      "type": "html",
      "text": " [[Active Wiki Pages]]",
      "id": "9211281c020ca5ad8840474f8610ce77"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f00b9827e6743e48fcd1804d9f8d39ce"
    },
    {
      "type": "html",
      "text": "\nI started the page thinking the idea must be bonkers, but I'm not so sure now. -- [[Matthew Astley]]",
      "id": "fa2d2037a12c7f85ddfae2b7aa6b6159"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f00b9827e6743e48fcd1804d9f8d39ce"
    },
    {
      "type": "html",
      "text": "See also [[Wiki Engines]] and [[Wiki Engines Wanted]]",
      "id": "3303f807286b9113e2ccf1f02dfa1d98"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f00b9827e6743e48fcd1804d9f8d39ce"
    },
    {
      "type": "html",
      "text": "\nWell, you don't actually need to build all that much. Start with a plain vanilla Wiki. You could just add some special [[Text Formatting Rules]] to mark those areas that are [[Reflective Wiki]] code. Then a small script can be run whenever \"save\" is pressed to strip out all lines of [[Reflective Wiki]] text into a file.",
      "id": "4f4a3d6563ddac29a87134d3f74a8f15"
    },
    {
      "type": "html",
      "text": "\nA [[User Mode Linux]] sandbox can run the actual [[Reflective Wiki]].",
      "id": "e98c3adc568f99f76327e9404dba2813"
    },
    {
      "type": "html",
      "text": "\nOf course that leaves one wondering about a [[Meta Reflective Wiki]]...",
      "id": "01597ddf7b74d70a1720a8885e3cbf1e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f00b9827e6743e48fcd1804d9f8d39ce"
    },
    {
      "type": "html",
      "text": "A [[Reflective Wiki]] could also just have one layer that users could edit for instance using [[Prolog Language]] to assert facts and rules, and query them, and another underlying layer (in perl, java or whatever) that would not be user modifyable. Perhaps with import/export from/to RDF. Most [[Semantic Web]]/[[Semantic Wiki]]/[[Rdf Wiki]] sites seem just about storing facts a [[Reflective Wiki]] could allow inference on the facts. So even if the knowledge/rulebase got deleted or mangled it could be repaired by users from recent edits the basic functionality to allow viewing, adding, editing would not be affected.",
      "id": "2e73c26efc1265f0d1d34fba7c047205"
    },
    {
      "type": "html",
      "text": "\nFor instance [http://easytopicmaps.com/index.php?page=BeerTM easytopicmaps.com] describes an ontology for Beer and [http://www.ontopia.net/~grove/beer/notes.txt www.ontopia.net] even has breakdowns by country but nowhere does it let a user type for instance <i>beer(seasonals,'by event',X)</i> to query what another user(s) has entered.",
      "id": "9da422576fcb9509432bf8e2af0fb15a"
    },
    {
      "type": "html",
      "text": "\nAn online example showing what is possible can be tried by going to [http://logic.csci.unt.edu/bp_inet/cgi/query_frame.html logic.csci.unt.edu] copy and paste the following (derived from the .txt above)-",
      "id": "1ce35ef5e9dc01571dc29aa8e709cab6"
    },
    {
      "type": "html",
      "text": "\nPaste in \"Query Interpreter\":",
      "id": "049ac347bd957da5f2634b4a8ff02d69"
    },
    {
      "type": "code",
      "text": "  beer(seasonals,'by event',X)",
      "id": "ff5ced801eb1ceb25c179f973566cdd6"
    },
    {
      "type": "html",
      "text": "Paste in \"Quick Online Editor\":",
      "id": "1714902eb8642b3f5ce5f117bb03586f"
    },
    {
      "type": "code",
      "text": "  beer(seasonals,'by season',\n     ['christmas beers',\n     'easter beers',\n     'winter beers (belgian)',\n     'summer beers',\n     'saison (belgian, french)']).\n  beer(seasonals,'by month',\n     ['mï¿½rzen',\n      'maibock',\n      'oktoberfest']).\n  beer(seasonals,'by event',\n     ['festbier']).",
      "id": "f9afcae70368bfe108eab96b8a932bcf"
    },
    {
      "type": "html",
      "text": "Then click the submit button the result is a bit hard to see but in the bottom frame scroll down a bit it should say ",
      "id": "4869770d955537fed87baa31355b5c69"
    },
    {
      "type": "code",
      "text": "  X=[festbier];",
      "id": "aec703914fec4bcd55048d43db4ae549"
    },
    {
      "type": "html",
      "text": "You could vary parameters and it would return results accordingly. In a [[Reflective Wiki]] with a prolog or other interpretive top layer one set of users could enter knowledge and rules and others query it to arbitrary levels of detail. See also an online prolog RDF parser demo at [http://www.swi.psy.uva.nl/projects/SWI-Prolog/packages/sgml/online.html www.swi.psy.uva.nl]\nWith that kind of interface users could combine queries to outside the wiki from RDF/RSS feeds See [http://bitsko.slc.ut.us/blog/feed-data.html bitsko.slc.ut.us]. By using [[Use Mod Wiki]] and swi prolog (free with both unix and windows source) it should not be hard to do.",
      "id": "63e552df4ad1e7360244a61137870ddd"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f00b9827e6743e48fcd1804d9f8d39ce"
    },
    {
      "type": "html",
      "text": "See also [[Anti Comment]], [[Lukes Programmable Wiki]] ",
      "id": "0270cf6650cc04e10406e8ca796ca45b"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ReflectiveWiki c2.com]",
      "id": "080e5476b90c7ad7a6ef819af2a29b55"
    }
  ],
  "journal": [
    {
      "date": 1199520828000,
      "id": "019632aa99930634506341bd91cb2d3a",
      "type": "create",
      "item": {
        "title": "Reflective Wiki",
        "story": [
          {
            "type": "html",
            "text": "Spawned from [[Wiki Placename Problem]] by this comment:",
            "id": "44e8e6e20e8b8f174d737f6f085273dd"
          },
          {
            "type": "html",
            "text": "<i>Actually, a \"reflective\" Wiki which could be used to alter its own source code would be a very worthwhile thing. On the other hand, it is also most definitely and absolutely certainly a stupid idea and one that couldn't possibly work, ever ever. On the gripping hand an [[Object Oriented Wiki]] could certainly work. Combine that with [[Mana Mana]] and one might have a [[Tar Baby]]. Hmm.</i> -- [[Peter Merel]]",
            "id": "8f5e5accbb6c77d8087fb233f13538c5"
          },
          {
            "type": "html",
            "text": "\nHence the [[Reflective Wiki]] is an idea or suggestion for yet another [[Wiki Engine]].",
            "id": "6a91d590e75a85b9afc0783b615fae59"
          },
          {
            "type": "html",
            "text": "<b>Which technology? How would it work?</b>",
            "id": "78e86aa6508f14a843c0636562f82462"
          },
          {
            "type": "html",
            "text": "\nWell, it seems obvious that you would need a strong sandbox.",
            "id": "0d52337c3fee0c114eb698b3f8345995"
          },
          {
            "type": "html",
            "text": "\nYou would probably need some automatic version control, such that the system could automatically roll back changes which cause it to malfunction.",
            "id": "ca90625151709e0d718b56e3b1abc977"
          },
          {
            "type": "html",
            "text": "\nSupposing each \"page\" had a [[Unit Test]], you then have a hook for your version control - if the change you are making will break the [[Reflective Wiki]], then you must commit to a branch.",
            "id": "8d5b12137ab9d242a13511a916cb9905"
          },
          {
            "type": "html",
            "text": "\nOf course, that would be [[Version Control Applied To Wiki]] gone mad.",
            "id": "c0ce33ea02dba2cdbcd937ad374c2459"
          },
          {
            "type": "html",
            "text": "<i>I don't think such a thing is necessary.  Just provide some rudimentary scripts (eg show and edit) that cannot be altered, but usually use other (reflective) interfaces to the wiki.  Make an exception handler that points the user directly to the non-alterable edit script on the right file.</i>",
            "id": "cd6d052dc4f35df7be72c270902d8199"
          },
          {
            "type": "html",
            "text": "<b>Likely side effects</b>",
            "id": "35753a61f25c07d5a64995ca2bbf6a4d"
          },
          {
            "type": "html",
            "text": "\nI can see that this system is not going to be popular with the casual [[Wiki Zen]].",
            "id": "f2d7886b8a7c0cd966d9edaa46f1eed6"
          },
          {
            "type": "html",
            "text": "\n[[Self Modifying Code]] is often [[Considered Harmful]], so I can see that the average contributor is likely to be a hacker with a twisted mind. Hence the [[Reflective Wiki]] would have some amazing features, but few will be able to understand or use them.",
            "id": "6488b3b9fc30cb748b32eb478fccc283"
          },
          {
            "type": "html",
            "text": "\nIn case there was still some doubt, it would nicely underline the fact that [[Code Is Speech]] (in the [[Protected By American Constitution]] sense. See also [[Digital Millennium Copyright Act]]).",
            "id": "d7cc80bf4a89d13d1804dcf297e62703"
          },
          {
            "type": "html",
            "text": "\nThere could be problems with ensuring that the code compiles.  OK, you could check that at submission time, unless \"do\" or \"use\" are allowed to include other pages - you don't want to have to \"perl -wc\" the whole site each time.",
            "id": "351a1c7e0c40038599d47134f1f52da2"
          },
          {
            "type": "html",
            "text": "\nThen there is the [[Halting Problem]].  Solve that and you're on to a winner!  8->",
            "id": "80a96d712f6a3fd258190d4a3d6e2e8a"
          },
          {
            "type": "html",
            "text": "<b>Examples</b>",
            "id": "55ede04845efce27503907800413c24e"
          },
          {
            "type": "html",
            "text": " (Haven't actually looked at it yet but) [[Hyper Perl]] sounds interesting.",
            "id": "56edb0672d6e656d316144eb9bfb360d"
          },
          {
            "type": "html",
            "text": " [[Active Wiki Pages]]",
            "id": "9211281c020ca5ad8840474f8610ce77"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f00b9827e6743e48fcd1804d9f8d39ce"
          },
          {
            "type": "html",
            "text": "\nI started the page thinking the idea must be bonkers, but I'm not so sure now. -- [[Matthew Astley]]",
            "id": "fa2d2037a12c7f85ddfae2b7aa6b6159"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f00b9827e6743e48fcd1804d9f8d39ce"
          },
          {
            "type": "html",
            "text": "See also [[Wiki Engines]] and [[Wiki Engines Wanted]]",
            "id": "3303f807286b9113e2ccf1f02dfa1d98"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f00b9827e6743e48fcd1804d9f8d39ce"
          },
          {
            "type": "html",
            "text": "\nWell, you don't actually need to build all that much. Start with a plain vanilla Wiki. You could just add some special [[Text Formatting Rules]] to mark those areas that are [[Reflective Wiki]] code. Then a small script can be run whenever \"save\" is pressed to strip out all lines of [[Reflective Wiki]] text into a file.",
            "id": "4f4a3d6563ddac29a87134d3f74a8f15"
          },
          {
            "type": "html",
            "text": "\nA [[User Mode Linux]] sandbox can run the actual [[Reflective Wiki]].",
            "id": "e98c3adc568f99f76327e9404dba2813"
          },
          {
            "type": "html",
            "text": "\nOf course that leaves one wondering about a [[Meta Reflective Wiki]]...",
            "id": "01597ddf7b74d70a1720a8885e3cbf1e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f00b9827e6743e48fcd1804d9f8d39ce"
          },
          {
            "type": "html",
            "text": "A [[Reflective Wiki]] could also just have one layer that users could edit for instance using [[Prolog Language]] to assert facts and rules, and query them, and another underlying layer (in perl, java or whatever) that would not be user modifyable. Perhaps with import/export from/to RDF. Most [[Semantic Web]]/[[Semantic Wiki]]/[[Rdf Wiki]] sites seem just about storing facts a [[Reflective Wiki]] could allow inference on the facts. So even if the knowledge/rulebase got deleted or mangled it could be repaired by users from recent edits the basic functionality to allow viewing, adding, editing would not be affected.",
            "id": "2e73c26efc1265f0d1d34fba7c047205"
          },
          {
            "type": "html",
            "text": "\nFor instance [http://easytopicmaps.com/index.php?page=BeerTM easytopicmaps.com] describes an ontology for Beer and [http://www.ontopia.net/~grove/beer/notes.txt www.ontopia.net] even has breakdowns by country but nowhere does it let a user type for instance <i>beer(seasonals,'by event',X)</i> to query what another user(s) has entered.",
            "id": "9da422576fcb9509432bf8e2af0fb15a"
          },
          {
            "type": "html",
            "text": "\nAn online example showing what is possible can be tried by going to [http://logic.csci.unt.edu/bp_inet/cgi/query_frame.html logic.csci.unt.edu] copy and paste the following (derived from the .txt above)-",
            "id": "1ce35ef5e9dc01571dc29aa8e709cab6"
          },
          {
            "type": "html",
            "text": "\nPaste in \"Query Interpreter\":",
            "id": "049ac347bd957da5f2634b4a8ff02d69"
          },
          {
            "type": "code",
            "text": "  beer(seasonals,'by event',X)",
            "id": "ff5ced801eb1ceb25c179f973566cdd6"
          },
          {
            "type": "html",
            "text": "Paste in \"Quick Online Editor\":",
            "id": "1714902eb8642b3f5ce5f117bb03586f"
          },
          {
            "type": "code",
            "text": "  beer(seasonals,'by season',\n     ['christmas beers',\n     'easter beers',\n     'winter beers (belgian)',\n     'summer beers',\n     'saison (belgian, french)']).\n  beer(seasonals,'by month',\n     ['mï¿½rzen',\n      'maibock',\n      'oktoberfest']).\n  beer(seasonals,'by event',\n     ['festbier']).",
            "id": "f9afcae70368bfe108eab96b8a932bcf"
          },
          {
            "type": "html",
            "text": "Then click the submit button the result is a bit hard to see but in the bottom frame scroll down a bit it should say ",
            "id": "4869770d955537fed87baa31355b5c69"
          },
          {
            "type": "code",
            "text": "  X=[festbier];",
            "id": "aec703914fec4bcd55048d43db4ae549"
          },
          {
            "type": "html",
            "text": "You could vary parameters and it would return results accordingly. In a [[Reflective Wiki]] with a prolog or other interpretive top layer one set of users could enter knowledge and rules and others query it to arbitrary levels of detail. See also an online prolog RDF parser demo at [http://www.swi.psy.uva.nl/projects/SWI-Prolog/packages/sgml/online.html www.swi.psy.uva.nl]\nWith that kind of interface users could combine queries to outside the wiki from RDF/RSS feeds See [http://bitsko.slc.ut.us/blog/feed-data.html bitsko.slc.ut.us]. By using [[Use Mod Wiki]] and swi prolog (free with both unix and windows source) it should not be hard to do.",
            "id": "63e552df4ad1e7360244a61137870ddd"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f00b9827e6743e48fcd1804d9f8d39ce"
          },
          {
            "type": "html",
            "text": "See also [[Anti Comment]], [[Lukes Programmable Wiki]] ",
            "id": "0270cf6650cc04e10406e8ca796ca45b"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ReflectiveWiki c2.com]",
            "id": "080e5476b90c7ad7a6ef819af2a29b55"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1626101609969
    }
  ]
}