{
  "title": "2024-01-06",
  "story": [
    {
      "type": "reference",
      "id": "fcc5d5a7c1d607c7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "initialize",
      "title": "initialize",
      "text": "[[Back Side]]. Cf. [[GtMemoryCard]]>>#[[initialize]] ⇒ [[Announcer]] ⇒ [[flip]] ⇒ [[Flip Operation]] ⇒ [[Memory Game]]"
    },
    {
      "type": "code",
      "id": "c27dc3dcd2e586fc",
      "text": "initialize\n\tsuper initialize.\n\tflipped := false.\n\tvisible := true.\n\tannouncer := Announcer new."
    },
    {
      "type": "reference",
      "id": "7f997f28aeb829a6",
      "site": "wiki.ralfbarkow.ch",
      "slug": "announcer",
      "title": "Announcer",
      "text": "The implementation uses a threadsafe [[Subscription Registry]], in the sense that registering, unregistering, and announcing from an [[Announcer]] at the same time in different threads should never cause failures."
    },
    {
      "type": "image",
      "id": "c955dfdff3bba013",
      "text": "Fig. 1. [[Large Systems]]",
      "size": "wide",
      "width": 419,
      "height": 254,
      "url": "/assets/plugins/image/8992ad691e18a75bf2609c0b7cf2aa27.jpg"
    },
    {
      "type": "markdown",
      "id": "f533eb5bf59a2818",
      "text": "In [[Pharo]], `subscriptionsFor:` protocol is not implemented."
    },
    {
      "type": "image",
      "id": "176b01e519da0a27",
      "text": "Fig. 2. [[Announcer]]>>#gtSubscriptionsFor:",
      "size": "wide",
      "width": 430,
      "height": 262,
      "url": "/assets/plugins/image/e3e2bb8e6b5590312cda7c4c31f5e02e.jpg"
    },
    {
      "type": "pagefold",
      "id": "37d7690036700dff",
      "text": "uid"
    },
    {
      "type": "paragraph",
      "id": "115d1ad1b3028955",
      "text": "Back to our snippet of the [[Large Systems]] page:"
    },
    {
      "type": "code",
      "id": "465b74000c2372e1",
      "text": "\"story\": [\n    {\n      \"type\": \"paragraph\",\n      \"id\": \"55efea523e1a5031\",\n      \"text\": \"Section 1.3 of [[A Mentoring Course on Smalltalk]]\"\n    }, …"
    },
    {
      "type": "paragraph",
      "id": "09a5d37bd6436284",
      "text": "In Fig. 1. above, this is a [[LeTextSnippet]] (Section 1.3 of [[A Mentoring Course on Smalltalk]])."
    },
    {
      "type": "markdown",
      "id": "ca4eb1352f8d798f",
      "text": "We should add the `id` from the code snippet above as additional metadata. Every Federated Wiki Story Snippet has an `id`."
    },
    {
      "type": "markdown",
      "id": "b2212ed917f98113",
      "text": "Let's take a look at a [[QuLeTranscriptLineSnippet]] below. It is a subclass of [[LeTextSnippet]]."
    },
    {
      "type": "code",
      "id": "abd3523e91e6936d",
      "text": "LeTextSnippet subclass: #QuLeTranscriptLineSnippet\n\tinstanceVariableNames: 'cachedLine'\n\tclassVariableNames: ''\n\tpackage: 'QuoteMe-GToolkit-Transcripts-Lepiter'"
    },
    {
      "type": "markdown",
      "id": "e041aba3dabf92ec",
      "text": "# Refactor [[Snippet]]"
    },
    {
      "type": "markdown",
      "id": "87a8eec0d2f96a90",
      "text": "In the following sections I document refactoring attempts."
    },
    {
      "type": "markdown",
      "id": "6e8b94514f4c1350",
      "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s. I follow [[Sean DeNigris]]'s [[QuLeTranscriptLineSnippet]] example here, which is a subclass of [[LeTextSnippet]]."
    },
    {
      "type": "code",
      "id": "c528c3b8cbd0f64d",
      "text": "LeTextSnippet subclass: #Snippet\n\tinstanceVariableNames: 'rawData'\n\tclassVariableNames: ''\n\tpackage: 'FederatedLepiter'"
    },
    {
      "type": "markdown",
      "id": "2a7fefce1375532a",
      "text": "Instance of ByteString did not understand #copyWithoutExternalReferences"
    },
    {
      "type": "image",
      "id": "4442ebebe4e79fc9",
      "text": "[[Text]]>>#copyWithoutExternalReferences",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/ea5548f9ce871f4e6988ace47842f026.jpg"
    },
    {
      "type": "markdown",
      "id": "ee3249e0ee266857",
      "text": "Refactor [[Snippet]]: Change superclass to [[LeSnippet]]"
    },
    {
      "type": "code",
      "id": "b456d49a4086f506",
      "text": "LeSnippet subclass: #Snippet\n\tinstanceVariableNames: 'rawData'\n\tclassVariableNames: ''\n\tpackage: 'FederatedLepiter'"
    },
    {
      "type": "markdown",
      "id": "5b38eaf07740db64",
      "text": "Snippet is now a subclass of [[LeSnippet]] instead of [[LeTextSnippet]]."
    },
    {
      "type": "markdown",
      "id": "bfee6a2bbbb5e839",
      "text": "SubclassResponsibility: Snippet had the subclass responsibility to implement #asSnippetViewModel"
    },
    {
      "type": "image",
      "id": "dfcb57232cb939d9",
      "text": "[[QuLeTranscriptLineSnippet]]>>#asSnippetViewModel",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/4ecb28c9912cddd5223b706476629405.jpg"
    },
    {
      "type": "reference",
      "id": "4c85af87a38c7966",
      "site": "wiki.ralfbarkow.ch",
      "slug": "model-view-viewmodel",
      "title": "Model-View-ViewModel",
      "text": "Model–view–viewmodel (MVVM) is a software architectural pattern that facilitates the separation of the development of the graphical user interface (the view) – be it via a markup language or GUI code – from the development of the business logic or back-end logic (the model) so that the view is not dependent on any specific model platform. The viewmodel of MVVM is a value converter,[1] meaning the viewmodel is responsible for exposing (converting) the data objects from the model in such a way that objects are easily managed and presented. In this respect,"
    },
    {
      "type": "reference",
      "id": "104358db81ff0d06",
      "site": "wiki.ralfbarkow.ch",
      "slug": "custom-snippet",
      "title": "Custom Snippet",
      "text": "Considering snippets use an MVVM pattern [⇒[[Model-View-ViewModel]]], where would the talents be applied? Sprinkled throughout multiple classes? \nIf you want to extend functionality with [[Talents]], who is the super class?"
    },
    {
      "type": "markdown",
      "id": "effe2a3207e173fa",
      "text": "[[LeModel]] ⇐ [[LeContent]] ⇐ **[[LeSnippet]]** ⇐ [[Snippet]]"
    },
    {
      "type": "code",
      "id": "de50b307d5056684",
      "text": "Object subclass: #LeModel\n\tuses: TGtAssert + TGtOptions\n\tinstanceVariableNames: ''\n\tclassVariableNames: ''\n\tpackage: 'Lepiter-Core-Model'"
    },
    {
      "type": "pagefold",
      "id": "bb970724f07f27a0",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "6a817008b3da19da",
      "text": "[[LeContent]]>>#addSnippet:after:"
    },
    {
      "type": "paragraph",
      "id": "866a47a25a2d85ca",
      "text": "related to Journal … after ?!"
    },
    {
      "type": "pagefold",
      "id": "5c059f747ed180e6",
      "text": "~"
    },
    {
      "type": "image",
      "id": "5f95dc435a96e380",
      "text": "QuTTranscriptable",
      "size": "wide",
      "width": 430,
      "height": 261,
      "url": "/assets/plugins/image/35eb8b7338ebae7c490de51b8e0b3a5d.jpg"
    },
    {
      "type": "reference",
      "id": "fc2d9d92ed06639d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "trait",
      "title": "Trait",
      "text": "Traits can be composed in arbitrary order. The composite entity (class or trait)"
    },
    {
      "type": "paragraph",
      "id": "13a79e31b779aa0a",
      "text": "Experimenting-with-GT [https://github.com/xekoukou/Experimenting-with-GT github]"
    },
    {
      "type": "markdown",
      "id": "9b51077972045aec",
      "text": "# [[Live Object Programming in Pharo]] [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
    },
    {
      "type": "paragraph",
      "id": "934a51c90a91936e",
      "text": "Download & Install Pharo for this MOOC [https://mooc.pharo.org/#download page]"
    },
    {
      "type": "paragraph",
      "id": "cb865fa6dd63bc02",
      "text": "Konrad Hinsen via [https://discord.com/channels/729445214812504107/1086175443209687080/1088504601717780652 discord]\nYou have to sign up to the supervised version of the MOOC: [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ page]. In fact, that's the only one I was aware of. I just discovered from your link that the various resources are also available for self-study,"
    },
    {
      "type": "paragraph",
      "id": "714c1caabbe2edfb",
      "text": "First look at Objects,\nClasses, Methods and\nMessages [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "54e617e23ac8c5d7",
      "text": "An [[Object]]"
    },
    {
      "type": "markdown",
      "id": "06e0e27892b1773a",
      "text": "A little entity with: \n* [[State]] \n* [[Behavior]] \n* [[Identity]]"
    },
    {
      "type": "reference",
      "id": "2c84da7789fb4875",
      "site": "wiki.ralfbarkow.ch",
      "slug": "location-in-the-network-of-message-paths",
      "title": "Location in the Network of Message Paths",
      "text": "> […], the fact that the virtual machine answers `true` or `false` is the result of some arbitrary [[Choice]]. As such, we can separate the act of answering two different things (the actual answer) from the actual things being answered (how the answer is labelled for our convenience). But then, if the actual answer could be whatever pair of distinct objects we want, we can also see that the meaning of these objects is not given by their name (`true`, `false`, `0`, `1`), not even by their Identity. …"
    },
    {
      "type": "paragraph",
      "id": "e533d3d636755134",
      "text": "An [[Object]] is a unique entity instance of a class. A class specifies the shape and behavior of all its instances. An object receives messages and executes corresponding methods. A message is: What to do. A method is: How to do it. Different objects can understand the same message and execute different methods. But we will see that again in the future lectures! [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
    },
    {
      "type": "pagefold",
      "id": "fc0d682662c842e6",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "5cdcd2e6684dc4a9",
      "text": "[[Voyage]] is an object persistence abstraction layer for Pharo. [https://github.com/pharo-nosql/voyage github] [https://discord.com/channels/223421264751099906/359632451674570754/1181959700938494032 discord]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-01-06",
        "story": []
      },
      "date": 1704536806968
    },
    {
      "item": {
        "type": "factory",
        "id": "c955dfdff3bba013"
      },
      "id": "c955dfdff3bba013",
      "type": "add",
      "date": 1704536811786
    },
    {
      "type": "edit",
      "id": "c955dfdff3bba013",
      "item": {
        "type": "image",
        "id": "c955dfdff3bba013",
        "text": "[[Large Systems]]",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/8992ad691e18a75bf2609c0b7cf2aa27.jpg"
      },
      "date": 1704536834751
    },
    {
      "item": {
        "type": "factory",
        "id": "115d1ad1b3028955"
      },
      "id": "115d1ad1b3028955",
      "type": "add",
      "after": "c955dfdff3bba013",
      "date": 1704537122901
    },
    {
      "type": "edit",
      "id": "115d1ad1b3028955",
      "item": {
        "type": "paragraph",
        "id": "115d1ad1b3028955",
        "text": "We should add another metadata. Every Federated Wiki Page Snippet has an ID."
      },
      "date": 1704537125871
    },
    {
      "item": {
        "type": "factory",
        "id": "5f95dc435a96e380"
      },
      "id": "5f95dc435a96e380",
      "type": "add",
      "after": "115d1ad1b3028955",
      "date": 1704538882094
    },
    {
      "type": "edit",
      "id": "5f95dc435a96e380",
      "item": {
        "type": "image",
        "id": "5f95dc435a96e380",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 261,
        "url": "/assets/plugins/image/35eb8b7338ebae7c490de51b8e0b3a5d.jpg"
      },
      "date": 1704538914836
    },
    {
      "item": {
        "type": "factory",
        "id": "13a79e31b779aa0a"
      },
      "id": "13a79e31b779aa0a",
      "type": "add",
      "after": "5f95dc435a96e380",
      "date": 1704539086481
    },
    {
      "type": "edit",
      "id": "13a79e31b779aa0a",
      "item": {
        "type": "paragraph",
        "id": "13a79e31b779aa0a",
        "text": "Experimenting-with-GT"
      },
      "date": 1704539088809
    },
    {
      "type": "edit",
      "id": "13a79e31b779aa0a",
      "item": {
        "type": "paragraph",
        "id": "13a79e31b779aa0a",
        "text": "Experimenting-with-GT [https://github.com/xekoukou/Experimenting-with-GT github]"
      },
      "date": 1704539126323
    },
    {
      "type": "edit",
      "id": "5f95dc435a96e380",
      "item": {
        "type": "image",
        "id": "5f95dc435a96e380",
        "text": "QuTTranscriptable",
        "size": "wide",
        "width": 430,
        "height": 261,
        "url": "/assets/plugins/image/35eb8b7338ebae7c490de51b8e0b3a5d.jpg"
      },
      "date": 1704539281227
    },
    {
      "item": {
        "type": "factory",
        "id": "fc2d9d92ed06639d"
      },
      "id": "fc2d9d92ed06639d",
      "type": "add",
      "after": "13a79e31b779aa0a",
      "date": 1704539306830
    },
    {
      "type": "edit",
      "id": "fc2d9d92ed06639d",
      "item": {
        "type": "reference",
        "id": "fc2d9d92ed06639d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "trait",
        "title": "Trait",
        "text": "Traits can be composed in arbitrary order. The composite entity (class or trait)"
      },
      "date": 1704539312847
    },
    {
      "id": "fc2d9d92ed06639d",
      "type": "move",
      "order": [
        "c955dfdff3bba013",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a"
      ],
      "date": 1704539315024
    },
    {
      "item": {
        "type": "factory",
        "id": "7f997f28aeb829a6"
      },
      "id": "7f997f28aeb829a6",
      "type": "add",
      "after": "13a79e31b779aa0a",
      "date": 1704539370019
    },
    {
      "type": "edit",
      "id": "7f997f28aeb829a6",
      "item": {
        "type": "reference",
        "id": "7f997f28aeb829a6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "announcer",
        "title": "Announcer",
        "text": "The implementation uses a threadsafe subscription registry, in the sense that registering, unregistering, and announcing from an announcer at the same time in different threads should never cause failures."
      },
      "date": 1704539372820
    },
    {
      "id": "7f997f28aeb829a6",
      "type": "move",
      "order": [
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a"
      ],
      "date": 1704539377861
    },
    {
      "item": {
        "type": "factory",
        "id": "fcc5d5a7c1d607c7"
      },
      "id": "fcc5d5a7c1d607c7",
      "type": "add",
      "after": "13a79e31b779aa0a",
      "date": 1704539414966
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "* (or “provision”) the [[ESP32]] with [[Toit]]"
      },
      "date": 1704539421668
    },
    {
      "id": "fcc5d5a7c1d607c7",
      "type": "move",
      "order": [
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "fcc5d5a7c1d607c7",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a"
      ],
      "date": 1704539426750
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "[[Back Side]]"
      },
      "date": 1704539450502
    },
    {
      "item": {
        "type": "factory",
        "id": "9a1e178758965a57"
      },
      "id": "9a1e178758965a57",
      "type": "add",
      "after": "13a79e31b779aa0a",
      "date": 1704539509463
    },
    {
      "type": "edit",
      "id": "9a1e178758965a57",
      "item": {
        "type": "paragraph",
        "id": "9a1e178758965a57",
        "text": "[[SubscriptionRegistry]]"
      },
      "date": 1704539513802
    },
    {
      "id": "9a1e178758965a57",
      "type": "move",
      "order": [
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "9a1e178758965a57",
        "fcc5d5a7c1d607c7",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a"
      ],
      "date": 1704539520272
    },
    {
      "type": "edit",
      "id": "7f997f28aeb829a6",
      "item": {
        "type": "reference",
        "id": "7f997f28aeb829a6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "announcer",
        "title": "Announcer",
        "text": "The implementation uses a threadsafe [[Subscription Registry]], in the sense that registering, unregistering, and announcing from an announcer at the same time in different threads should never cause failures."
      },
      "date": 1704539558509
    },
    {
      "id": "9a1e178758965a57",
      "type": "remove",
      "removedTo": {
        "page": "Subscription Registry"
      },
      "date": 1704539574592
    },
    {
      "item": {
        "type": "factory",
        "id": "cb865fa6dd63bc02"
      },
      "id": "cb865fa6dd63bc02",
      "type": "add",
      "after": "13a79e31b779aa0a",
      "date": 1704539708582
    },
    {
      "type": "edit",
      "id": "cb865fa6dd63bc02",
      "item": {
        "type": "paragraph",
        "id": "cb865fa6dd63bc02",
        "text": "Konrad Hinsen — 23.03.2023 17:48\nYou have to sign up to the supervised version of the MOOC: https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/. In fact, that's the only one I was aware of. I just discovered from your link that the various resources are also available for self-study,"
      },
      "date": 1704539710917
    },
    {
      "type": "edit",
      "id": "cb865fa6dd63bc02",
      "item": {
        "type": "paragraph",
        "id": "cb865fa6dd63bc02",
        "text": "Konrad Hinsen via [https://discord.com/channels/729445214812504107/1086175443209687080/1088504601717780652 discord]\nYou have to sign up to the supervised version of the MOOC: https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/. In fact, that's the only one I was aware of. I just discovered from your link that the various resources are also available for self-study,"
      },
      "date": 1704539733125
    },
    {
      "type": "edit",
      "id": "cb865fa6dd63bc02",
      "item": {
        "type": "paragraph",
        "id": "cb865fa6dd63bc02",
        "text": "Konrad Hinsen via [https://discord.com/channels/729445214812504107/1086175443209687080/1088504601717780652 discord]\nYou have to sign up to the supervised version of the MOOC: [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ page]. In fact, that's the only one I was aware of. I just discovered from your link that the various resources are also available for self-study,"
      },
      "date": 1704539753445
    },
    {
      "item": {
        "type": "factory",
        "id": "714c1caabbe2edfb"
      },
      "id": "714c1caabbe2edfb",
      "type": "add",
      "after": "cb865fa6dd63bc02",
      "date": 1704540896412
    },
    {
      "type": "edit",
      "id": "714c1caabbe2edfb",
      "item": {
        "type": "paragraph",
        "id": "714c1caabbe2edfb",
        "text": "First look at Objects,\nClasses, Methods and\nMessages"
      },
      "date": 1704540899188
    },
    {
      "type": "edit",
      "id": "714c1caabbe2edfb",
      "item": {
        "type": "paragraph",
        "id": "714c1caabbe2edfb",
        "text": "First look at Objects,\nClasses, Methods and\nMessages [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "date": 1704540913062
    },
    {
      "type": "add",
      "id": "9b51077972045aec",
      "item": {
        "type": "paragraph",
        "id": "9b51077972045aec",
        "text": "Live Object Programming in Pharo"
      },
      "after": "13a79e31b779aa0a",
      "date": 1704541005169
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "paragraph",
        "id": "9b51077972045aec",
        "text": "Live Object Programming in Pharo [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
      },
      "date": 1704541037127
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "paragraph",
        "id": "9b51077972045aec",
        "text": "Live Object Programming in Pharo [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site] [https://mooc.pharo.org/#download page]"
      },
      "date": 1704541229732
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "paragraph",
        "id": "9b51077972045aec",
        "text": "Live Object Programming in Pharo [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
      },
      "date": 1704541255248
    },
    {
      "type": "add",
      "id": "934a51c90a91936e",
      "item": {
        "type": "paragraph",
        "id": "934a51c90a91936e",
        "text": "Download & Install Pharo for this MOOC [https://mooc.pharo.org/#download page]"
      },
      "after": "9b51077972045aec",
      "date": 1704541258196
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "paragraph",
        "id": "9b51077972045aec",
        "text": "# Live Object Programming in Pharo [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
      },
      "date": 1704541263020
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "markdown",
        "id": "9b51077972045aec",
        "text": "# Live Object Programming in Pharo [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
      },
      "date": 1704541265222
    },
    {
      "item": {
        "type": "factory",
        "id": "5cdcd2e6684dc4a9"
      },
      "id": "5cdcd2e6684dc4a9",
      "type": "add",
      "after": "714c1caabbe2edfb",
      "date": 1704541473048
    },
    {
      "type": "edit",
      "id": "5cdcd2e6684dc4a9",
      "item": {
        "type": "paragraph",
        "id": "5cdcd2e6684dc4a9",
        "text": "[[Voyage]]"
      },
      "date": 1704541480833
    },
    {
      "type": "edit",
      "id": "5cdcd2e6684dc4a9",
      "item": {
        "type": "paragraph",
        "id": "5cdcd2e6684dc4a9",
        "text": "[[Voyage]] is an object persistence abstraction layer for Pharo. "
      },
      "date": 1704541501935
    },
    {
      "type": "edit",
      "id": "5cdcd2e6684dc4a9",
      "item": {
        "type": "paragraph",
        "id": "5cdcd2e6684dc4a9",
        "text": "[[Voyage]] is an object persistence abstraction layer for Pharo. [] [https://discord.com/channels/223421264751099906/359632451674570754/1181959700938494032 discord]"
      },
      "date": 1704541522460
    },
    {
      "type": "edit",
      "id": "5cdcd2e6684dc4a9",
      "item": {
        "type": "paragraph",
        "id": "5cdcd2e6684dc4a9",
        "text": "[[Voyage]] is an object persistence abstraction layer for Pharo. [https://github.com/pharo-nosql/voyage github] [https://discord.com/channels/223421264751099906/359632451674570754/1181959700938494032 discord]"
      },
      "date": 1704541537061
    },
    {
      "type": "add",
      "id": "54e617e23ac8c5d7",
      "item": {
        "type": "paragraph",
        "id": "54e617e23ac8c5d7",
        "text": "An object"
      },
      "after": "714c1caabbe2edfb",
      "date": 1704541574410
    },
    {
      "type": "add",
      "id": "06e0e27892b1773a",
      "item": {
        "type": "paragraph",
        "id": "06e0e27892b1773a",
        "text": "A little entity with: * state behavior identity"
      },
      "after": "54e617e23ac8c5d7",
      "date": 1704541580855
    },
    {
      "type": "edit",
      "id": "06e0e27892b1773a",
      "item": {
        "type": "markdown",
        "id": "06e0e27892b1773a",
        "text": "A little entity with: * state behavior identity"
      },
      "date": 1704541582204
    },
    {
      "type": "edit",
      "id": "06e0e27892b1773a",
      "item": {
        "type": "markdown",
        "id": "06e0e27892b1773a",
        "text": "A little entity with: \n* state behavior identity"
      },
      "date": 1704541590424
    },
    {
      "type": "edit",
      "id": "06e0e27892b1773a",
      "item": {
        "type": "markdown",
        "id": "06e0e27892b1773a",
        "text": "A little entity with: \n* [[State]] \n* [[Behavior]] \n* [[Identity]]"
      },
      "date": 1704541620840
    },
    {
      "type": "edit",
      "id": "54e617e23ac8c5d7",
      "item": {
        "type": "paragraph",
        "id": "54e617e23ac8c5d7",
        "text": "An [[Object]]"
      },
      "date": 1704541632873
    },
    {
      "item": {
        "type": "factory",
        "id": "fc0d682662c842e6"
      },
      "id": "fc0d682662c842e6",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704541716084
    },
    {
      "id": "fc0d682662c842e6",
      "type": "move",
      "order": [
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "fcc5d5a7c1d607c7",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704541718417
    },
    {
      "type": "edit",
      "id": "fc0d682662c842e6",
      "item": {
        "type": "pagefold",
        "id": "fc0d682662c842e6",
        "text": "~"
      },
      "date": 1704541721477
    },
    {
      "id": "2c84da7789fb4875",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "2c84da7789fb4875",
        "site": "wiki.ralfbarkow.ch",
        "slug": "location-in-the-network-of-message-paths",
        "title": "Location in the Network of Message Paths",
        "text": "> […], the fact that the virtual machine answers `true` or `false` is the result of some arbitrary [[Choice]]. As such, we can separate the act of answering two different things (the actual answer) from the actual things being answered (how the answer is labelled for our convenience). But then, if the actual answer could be whatever pair of distinct objects we want, we can also see that the meaning of these objects is not given by their name (`true`, `false`, `0`, `1`), not even by their Identity. …"
      },
      "after": "06e0e27892b1773a",
      "attribution": {
        "page": "Identity"
      },
      "date": 1704541726147
    },
    {
      "type": "edit",
      "id": "7f997f28aeb829a6",
      "item": {
        "type": "reference",
        "id": "7f997f28aeb829a6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "announcer",
        "title": "Announcer",
        "text": "The implementation uses a threadsafe [[Subscription Registry]], in the sense that registering, unregistering, and announcing from an [[Announcer]] at the same time in different threads should never cause failures."
      },
      "date": 1704542186666
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1704544293430
    },
    {
      "id": "fcc5d5a7c1d607c7",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704544453941
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "[[Back Side]]. Cf. [[GtMemoryCard]]>>#[[initialize]] "
      },
      "date": 1704544633517
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "[[Back Side]]. Cf. [[GtMemoryCard]]>>#[[initialize]] ⇒ [[Announcer]] "
      },
      "date": 1704544645623
    },
    {
      "id": "c27dc3dcd2e586fc",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c27dc3dcd2e586fc",
        "text": "initialize\n\tsuper initialize.\n\tflipped := false.\n\tvisible := true.\n\tannouncer := Announcer new."
      },
      "after": "fcc5d5a7c1d607c7",
      "attribution": {
        "page": "initialize"
      },
      "date": 1704544708249
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "[[Back Side]]. Cf. [[GtMemoryCard]]>>#[[initialize]] ⇒ [[Announcer]] ⇒ [[flip]]"
      },
      "date": 1704544736143
    },
    {
      "type": "edit",
      "id": "fcc5d5a7c1d607c7",
      "item": {
        "type": "reference",
        "id": "fcc5d5a7c1d607c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "initialize",
        "title": "initialize",
        "text": "[[Back Side]]. Cf. [[GtMemoryCard]]>>#[[initialize]] ⇒ [[Announcer]] ⇒ [[flip]] ⇒ [[Flip Operation]] ⇒ [[Memory Game]]"
      },
      "date": 1704544756906
    },
    {
      "id": "f533eb5bf59a2818",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "f533eb5bf59a2818",
        "text": "In [[Pharo]], `subscriptionsFor:` protocol is not implemented."
      },
      "after": "c955dfdff3bba013",
      "attribution": {
        "page": "Subscription Registry"
      },
      "date": 1704545049253
    },
    {
      "item": {
        "type": "factory",
        "id": "176b01e519da0a27"
      },
      "id": "176b01e519da0a27",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704545054897
    },
    {
      "type": "edit",
      "id": "176b01e519da0a27",
      "item": {
        "type": "image",
        "id": "176b01e519da0a27",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 262,
        "url": "/assets/plugins/image/e3e2bb8e6b5590312cda7c4c31f5e02e.jpg"
      },
      "date": 1704545141732
    },
    {
      "type": "edit",
      "id": "176b01e519da0a27",
      "item": {
        "type": "image",
        "id": "176b01e519da0a27",
        "text": "[[Announcer]]>>#gtSubscriptionsFor:",
        "size": "wide",
        "width": 430,
        "height": 262,
        "url": "/assets/plugins/image/e3e2bb8e6b5590312cda7c4c31f5e02e.jpg"
      },
      "date": 1704545158853
    },
    {
      "id": "176b01e519da0a27",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "115d1ad1b3028955",
        "176b01e519da0a27",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704545179007
    },
    {
      "id": "115d1ad1b3028955",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704545208081
    },
    {
      "item": {
        "type": "factory",
        "id": "37d7690036700dff"
      },
      "id": "37d7690036700dff",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704545253898
    },
    {
      "type": "edit",
      "id": "37d7690036700dff",
      "item": {
        "type": "pagefold",
        "id": "37d7690036700dff",
        "text": "uid"
      },
      "date": 1704545256190
    },
    {
      "id": "37d7690036700dff",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704545309812
    },
    {
      "item": {
        "type": "factory",
        "id": "465b74000c2372e1"
      },
      "id": "465b74000c2372e1",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704545489861
    },
    {
      "id": "465b74000c2372e1",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "465b74000c2372e1",
        "115d1ad1b3028955",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704545498829
    },
    {
      "type": "edit",
      "id": "115d1ad1b3028955",
      "item": {
        "type": "paragraph",
        "id": "115d1ad1b3028955",
        "text": "Back to our snippet:"
      },
      "date": 1704545515227
    },
    {
      "type": "add",
      "id": "09a5d37bd6436284",
      "item": {
        "type": "paragraph",
        "id": "09a5d37bd6436284",
        "text": "We should add another metadata. Every Federated Wiki Page Snippet has an ID."
      },
      "after": "115d1ad1b3028955",
      "date": 1704545515631
    },
    {
      "id": "115d1ad1b3028955",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704545548448
    },
    {
      "type": "edit",
      "id": "115d1ad1b3028955",
      "item": {
        "type": "paragraph",
        "id": "115d1ad1b3028955",
        "text": "Back to our snippet of the [[Large Systems] page:"
      },
      "date": 1704545584801
    },
    {
      "type": "edit",
      "id": "115d1ad1b3028955",
      "item": {
        "type": "paragraph",
        "id": "115d1ad1b3028955",
        "text": "Back to our snippet of the [[Large Systems]] page:"
      },
      "date": 1704545589353
    },
    {
      "type": "edit",
      "id": "465b74000c2372e1",
      "item": {
        "type": "code",
        "id": "465b74000c2372e1",
        "text": "\"story\": [\n    {\n      \"type\": \"paragraph\",\n      \"id\": \"55efea523e1a5031\",\n      \"text\": \"Section 1.3 of [[A Mentoring Course on Smalltalk]]\"\n    }, …"
      },
      "date": 1704545616880
    },
    {
      "type": "edit",
      "id": "09a5d37bd6436284",
      "item": {
        "type": "paragraph",
        "id": "09a5d37bd6436284",
        "text": "In the screenshot above, this is a LeTextSnippet(Section 1.3 of [[A Mentoring Course on Smalltalk]])"
      },
      "date": 1704545677464
    },
    {
      "type": "add",
      "id": "ca4eb1352f8d798f",
      "item": {
        "type": "paragraph",
        "id": "ca4eb1352f8d798f",
        "text": "We should add another metadata. Every Federated Wiki Page Snippet has an ID."
      },
      "after": "09a5d37bd6436284",
      "date": 1704545678365
    },
    {
      "type": "edit",
      "id": "09a5d37bd6436284",
      "item": {
        "type": "paragraph",
        "id": "09a5d37bd6436284",
        "text": "In the screenshot above, this is a [[LeTextSnippet]](Section 1.3 of [[A Mentoring Course on Smalltalk]])."
      },
      "date": 1704545702637
    },
    {
      "type": "edit",
      "id": "c955dfdff3bba013",
      "item": {
        "type": "image",
        "id": "c955dfdff3bba013",
        "text": "**Fig. 1** [[Large Systems]]",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/8992ad691e18a75bf2609c0b7cf2aa27.jpg"
      },
      "date": 1704545879420
    },
    {
      "type": "edit",
      "id": "c955dfdff3bba013",
      "item": {
        "type": "image",
        "id": "c955dfdff3bba013",
        "text": "Fig. 1. [[Large Systems]]",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/8992ad691e18a75bf2609c0b7cf2aa27.jpg"
      },
      "date": 1704545894211
    },
    {
      "type": "edit",
      "id": "09a5d37bd6436284",
      "item": {
        "type": "paragraph",
        "id": "09a5d37bd6436284",
        "text": "In Fig. 1. above, this is a [[LeTextSnippet]](Section 1.3 of [[A Mentoring Course on Smalltalk]])."
      },
      "date": 1704545918002
    },
    {
      "type": "edit",
      "id": "09a5d37bd6436284",
      "item": {
        "type": "paragraph",
        "id": "09a5d37bd6436284",
        "text": "In Fig. 1. above, this is a [[LeTextSnippet]] (Section 1.3 of [[A Mentoring Course on Smalltalk]])."
      },
      "date": 1704545927951
    },
    {
      "type": "edit",
      "id": "ca4eb1352f8d798f",
      "item": {
        "type": "paragraph",
        "id": "ca4eb1352f8d798f",
        "text": "We should add the `id` from the code snippet above as another metadata. Every Federated Wiki Page Snippet has an `id`."
      },
      "date": 1704545989302
    },
    {
      "type": "edit",
      "id": "ca4eb1352f8d798f",
      "item": {
        "type": "markdown",
        "id": "ca4eb1352f8d798f",
        "text": "We should add the `id` from the code snippet above as another metadata. Every Federated Wiki Page Snippet has an `id`."
      },
      "date": 1704545990221
    },
    {
      "type": "edit",
      "id": "ca4eb1352f8d798f",
      "item": {
        "type": "markdown",
        "id": "ca4eb1352f8d798f",
        "text": "We should add the `id` from the code snippet above as additional metadata. Every Federated Wiki Page Snippet has an `id`."
      },
      "date": 1704546009848
    },
    {
      "type": "edit",
      "id": "ca4eb1352f8d798f",
      "item": {
        "type": "markdown",
        "id": "ca4eb1352f8d798f",
        "text": "We should add the `id` from the code snippet above as additional metadata. Every Federated Wiki Story Snippet has an `id`."
      },
      "date": 1704546037153
    },
    {
      "item": {
        "type": "factory",
        "id": "5c059f747ed180e6"
      },
      "id": "5c059f747ed180e6",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704546074052
    },
    {
      "id": "5c059f747ed180e6",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704546081653
    },
    {
      "type": "edit",
      "id": "5c059f747ed180e6",
      "item": {
        "type": "pagefold",
        "id": "5c059f747ed180e6",
        "text": "~"
      },
      "date": 1704546086222
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704546108752
    },
    {
      "item": {
        "type": "factory",
        "id": "e533d3d636755134"
      },
      "id": "e533d3d636755134",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704546143167
    },
    {
      "id": "e533d3d636755134",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "fc0d682662c842e6",
        "e533d3d636755134",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704546153907
    },
    {
      "id": "e533d3d636755134",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704546156304
    },
    {
      "type": "edit",
      "id": "e533d3d636755134",
      "item": {
        "type": "paragraph",
        "id": "e533d3d636755134",
        "text": "An object is a unique entity instance of a class. A class specifies the shape and behavior of all its instances. An object receives messages and executes corresponding methods. A message is: What to do. A method is: How to do it. Different objects can understand the same message and execute different methods. But we will see that again in the future lectures!"
      },
      "date": 1704546167416
    },
    {
      "type": "edit",
      "id": "e533d3d636755134",
      "item": {
        "type": "paragraph",
        "id": "e533d3d636755134",
        "text": "An object is a unique entity instance of a class. A class specifies the shape and behavior of all its instances. An object receives messages and executes corresponding methods. A message is: What to do. A method is: How to do it. Different objects can understand the same message and execute different methods. But we will see that again in the future lectures! [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "date": 1704546181212
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1704546235003
    },
    {
      "type": "edit",
      "id": "e533d3d636755134",
      "item": {
        "type": "paragraph",
        "id": "e533d3d636755134",
        "text": "An [[Object]] is a unique entity instance of a class. A class specifies the shape and behavior of all its instances. An object receives messages and executes corresponding methods. A message is: What to do. A method is: How to do it. Different objects can understand the same message and execute different methods. But we will see that again in the future lectures! [http://rmod-pharo-mooc.lille.inria.fr/MOOC/2018-PreSequelOOP-ENG/01-FirstLookAtClassObjectMethods.pdf pdf]"
      },
      "date": 1704546245472
    },
    {
      "item": {
        "type": "factory",
        "id": "abd3523e91e6936d"
      },
      "id": "abd3523e91e6936d",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704546636169
    },
    {
      "type": "edit",
      "id": "abd3523e91e6936d",
      "item": {
        "type": "code",
        "id": "abd3523e91e6936d",
        "text": "LeTextSnippet subclass: #QuLeTranscriptLineSnippet\n\tinstanceVariableNames: 'cachedLine'\n\tclassVariableNames: ''\n\tpackage: 'QuoteMe-GToolkit-Transcripts-Lepiter'"
      },
      "date": 1704546638840
    },
    {
      "id": "abd3523e91e6936d",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "abd3523e91e6936d",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704546648767
    },
    {
      "type": "add",
      "id": "b2212ed917f98113",
      "item": {
        "type": "markdown",
        "id": "b2212ed917f98113",
        "text": "Let's take a look at a [[QuLeTranscriptLineSnippet]] below. It is a subclass of [[LeTextSnippet]]."
      },
      "after": "ca4eb1352f8d798f",
      "date": 1704546802542
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704553260055
    },
    {
      "item": {
        "type": "factory",
        "id": "c528c3b8cbd0f64d"
      },
      "id": "c528c3b8cbd0f64d",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704553274480
    },
    {
      "id": "c528c3b8cbd0f64d",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "5c059f747ed180e6",
        "c528c3b8cbd0f64d",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553284370
    },
    {
      "id": "c528c3b8cbd0f64d",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "c528c3b8cbd0f64d",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553286760
    },
    {
      "type": "edit",
      "id": "c528c3b8cbd0f64d",
      "item": {
        "type": "code",
        "id": "c528c3b8cbd0f64d",
        "text": "LeTextSnippet subclass: #Snippet\n\tinstanceVariableNames: 'rawData'\n\tclassVariableNames: ''\n\tpackage: 'FederatedLepiter'"
      },
      "date": 1704553288894
    },
    {
      "type": "add",
      "id": "e041aba3dabf92ec",
      "item": {
        "type": "markdown",
        "id": "e041aba3dabf92ec",
        "text": "Refactor [[Snippet]]"
      },
      "after": "b2212ed917f98113",
      "date": 1704553326426
    },
    {
      "id": "e041aba3dabf92ec",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553328901
    },
    {
      "type": "add",
      "id": "2a7fefce1375532a",
      "item": {
        "type": "markdown",
        "id": "2a7fefce1375532a",
        "text": "Instance of ByteString did not understand #copyWithoutExternalReferences"
      },
      "after": "e041aba3dabf92ec",
      "date": 1704553397571
    },
    {
      "id": "2a7fefce1375532a",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553399898
    },
    {
      "item": {
        "type": "factory",
        "id": "4442ebebe4e79fc9"
      },
      "id": "4442ebebe4e79fc9",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704553488796
    },
    {
      "type": "edit",
      "id": "4442ebebe4e79fc9",
      "item": {
        "type": "image",
        "id": "4442ebebe4e79fc9",
        "text": "[[Text]]>>#copyWithoutExternalReferences",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/ea5548f9ce871f4e6988ace47842f026.jpg"
      },
      "date": 1704553530410
    },
    {
      "id": "4442ebebe4e79fc9",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553549862
    },
    {
      "type": "add",
      "id": "ee3249e0ee266857",
      "item": {
        "type": "markdown",
        "id": "ee3249e0ee266857",
        "text": "SubclassResponsibility: Snippet had the subclass responsibility to implement #asSnippetViewModel"
      },
      "after": "2a7fefce1375532a",
      "date": 1704553838767
    },
    {
      "id": "ee3249e0ee266857",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553842255
    },
    {
      "item": {
        "type": "factory",
        "id": "b456d49a4086f506"
      },
      "id": "b456d49a4086f506",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704553858916
    },
    {
      "type": "edit",
      "id": "b456d49a4086f506",
      "item": {
        "type": "code",
        "id": "b456d49a4086f506",
        "text": "LeSnippet subclass: #Snippet\n\tinstanceVariableNames: 'rawData'\n\tclassVariableNames: ''\n\tpackage: 'FederatedLepiter'"
      },
      "date": 1704553862524
    },
    {
      "id": "b456d49a4086f506",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "b456d49a4086f506",
        "ee3249e0ee266857",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553872688
    },
    {
      "type": "edit",
      "id": "ee3249e0ee266857",
      "item": {
        "type": "markdown",
        "id": "ee3249e0ee266857",
        "text": "Refactor [[Snippet]]"
      },
      "date": 1704553899244
    },
    {
      "type": "add",
      "id": "5b38eaf07740db64",
      "item": {
        "type": "markdown",
        "id": "5b38eaf07740db64",
        "text": "SubclassResponsibility: Snippet had the subclass responsibility to implement #asSnippetViewModel"
      },
      "after": "ee3249e0ee266857",
      "date": 1704553899787
    },
    {
      "id": "ee3249e0ee266857",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704553902073
    },
    {
      "type": "edit",
      "id": "5b38eaf07740db64",
      "item": {
        "type": "markdown",
        "id": "5b38eaf07740db64",
        "text": "Snippet is now a subclass of [[LeSnippet]] instead of"
      },
      "date": 1704553936158
    },
    {
      "type": "add",
      "id": "bfee6a2bbbb5e839",
      "item": {
        "type": "markdown",
        "id": "bfee6a2bbbb5e839",
        "text": "SubclassResponsibility: Snippet had the subclass responsibility to implement #asSnippetViewModel"
      },
      "after": "5b38eaf07740db64",
      "date": 1704553940284
    },
    {
      "type": "edit",
      "id": "5b38eaf07740db64",
      "item": {
        "type": "markdown",
        "id": "5b38eaf07740db64",
        "text": "Snippet is now a subclass of [[LeSnippet]] instead of [[LeTextSnippet]]."
      },
      "date": 1704553952237
    },
    {
      "item": {
        "type": "factory",
        "id": "dfcb57232cb939d9"
      },
      "id": "dfcb57232cb939d9",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704554075978
    },
    {
      "type": "edit",
      "id": "dfcb57232cb939d9",
      "item": {
        "type": "image",
        "id": "dfcb57232cb939d9",
        "text": "asSnippetViewModel",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/4ecb28c9912cddd5223b706476629405.jpg"
      },
      "date": 1704554093139
    },
    {
      "type": "edit",
      "id": "dfcb57232cb939d9",
      "item": {
        "type": "image",
        "id": "dfcb57232cb939d9",
        "text": "[[QuLeTranscriptLineSnippet]]>>#asSnippetViewModel",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/4ecb28c9912cddd5223b706476629405.jpg"
      },
      "date": 1704554109309
    },
    {
      "id": "dfcb57232cb939d9",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704554120933
    },
    {
      "type": "edit",
      "id": "e041aba3dabf92ec",
      "item": {
        "type": "markdown",
        "id": "e041aba3dabf92ec",
        "text": "# Refactor [[Snippet]]"
      },
      "date": 1704554940612
    },
    {
      "type": "add",
      "id": "87a8eec0d2f96a90",
      "item": {
        "type": "markdown",
        "id": "87a8eec0d2f96a90",
        "text": "In the following sections I document refactoring attempts."
      },
      "after": "2a7fefce1375532a",
      "date": 1704554993444
    },
    {
      "id": "87a8eec0d2f96a90",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704554995196
    },
    {
      "type": "add",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable."
      },
      "after": "87a8eec0d2f96a90",
      "date": 1704555152888
    },
    {
      "type": "edit",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s."
      },
      "date": 1704555172629
    },
    {
      "type": "edit",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s. I follow Sean's example here."
      },
      "date": 1704555238315
    },
    {
      "type": "edit",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s. I follow [[Sean DeNigirs]]'s [[QuLeTranscriptLineSnippet]] example here."
      },
      "date": 1704555257788
    },
    {
      "type": "edit",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s. I follow [[Sean DeNigris]]'s [[QuLeTranscriptLineSnippet]] example here."
      },
      "date": 1704555270176
    },
    {
      "type": "edit",
      "id": "6e8b94514f4c1350",
      "item": {
        "type": "markdown",
        "id": "6e8b94514f4c1350",
        "text": "I am interested in the question of which superclass might be suitable for my [[Snippet]]s. I follow [[Sean DeNigris]]'s [[QuLeTranscriptLineSnippet]] example here, which is a subclass of [[LeTextSnippet]]."
      },
      "date": 1704555318149
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1704555398825
    },
    {
      "type": "edit",
      "id": "176b01e519da0a27",
      "item": {
        "type": "image",
        "id": "176b01e519da0a27",
        "text": "Fig. 2. [[Announcer]]>>#gtSubscriptionsFor:",
        "size": "wide",
        "width": 430,
        "height": 262,
        "url": "/assets/plugins/image/e3e2bb8e6b5590312cda7c4c31f5e02e.jpg"
      },
      "date": 1704555432648
    },
    {
      "type": "edit",
      "id": "ee3249e0ee266857",
      "item": {
        "type": "markdown",
        "id": "ee3249e0ee266857",
        "text": "Refactor [[Snippet]]: Change superclass to [[LeSnippet]]:"
      },
      "date": 1704555582391
    },
    {
      "type": "edit",
      "id": "ee3249e0ee266857",
      "item": {
        "type": "markdown",
        "id": "ee3249e0ee266857",
        "text": "Refactor [[Snippet]]: Change superclass to [[LeSnippet]]"
      },
      "date": 1704555587430
    },
    {
      "item": {
        "type": "factory",
        "id": "4c85af87a38c7966"
      },
      "id": "4c85af87a38c7966",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704555672390
    },
    {
      "type": "edit",
      "id": "4c85af87a38c7966",
      "item": {
        "type": "reference",
        "id": "4c85af87a38c7966",
        "site": "wiki.ralfbarkow.ch",
        "slug": "model-view-viewmodel",
        "title": "Model-View-ViewModel",
        "text": "Model–view–viewmodel (MVVM) is a software architectural pattern that facilitates the separation of the development of the graphical user interface (the view) – be it via a markup language or GUI code – from the development of the business logic or back-end logic (the model) so that the view is not dependent on any specific model platform. The viewmodel of MVVM is a value converter,[1] meaning the viewmodel is responsible for exposing (converting) the data objects from the model in such a way that objects are easily managed and presented. In this respect,"
      },
      "date": 1704555678950
    },
    {
      "id": "4c85af87a38c7966",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "6e8b94514f4c1350",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "4c85af87a38c7966",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704555695953
    },
    {
      "item": {
        "type": "factory",
        "id": "104358db81ff0d06"
      },
      "id": "104358db81ff0d06",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704555756216
    },
    {
      "type": "edit",
      "id": "104358db81ff0d06",
      "item": {
        "type": "reference",
        "id": "104358db81ff0d06",
        "site": "wiki.ralfbarkow.ch",
        "slug": "custom-snippet",
        "title": "Custom Snippet",
        "text": "See [[Custom Snippets]]."
      },
      "date": 1704555763006
    },
    {
      "id": "104358db81ff0d06",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "6e8b94514f4c1350",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "4c85af87a38c7966",
        "104358db81ff0d06",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704555768497
    },
    {
      "type": "edit",
      "id": "104358db81ff0d06",
      "item": {
        "type": "reference",
        "id": "104358db81ff0d06",
        "site": "wiki.ralfbarkow.ch",
        "slug": "custom-snippet",
        "title": "Custom Snippet",
        "text": "Considering snippets use an MVVM pattern [⇒[[Model-View-ViewModel]]], where would the talents be applied? Sprinkled throughout multiple classes? \nIf you want to extend functionality with [[Talents]], who is the super class."
      },
      "date": 1704555812378
    },
    {
      "type": "edit",
      "id": "104358db81ff0d06",
      "item": {
        "type": "reference",
        "id": "104358db81ff0d06",
        "site": "wiki.ralfbarkow.ch",
        "slug": "custom-snippet",
        "title": "Custom Snippet",
        "text": "Considering snippets use an MVVM pattern [⇒[[Model-View-ViewModel]]], where would the talents be applied? Sprinkled throughout multiple classes? \nIf you want to extend functionality with [[Talents]], who is the super class?"
      },
      "date": 1704555887491
    },
    {
      "item": {
        "type": "factory",
        "id": "effe2a3207e173fa"
      },
      "id": "effe2a3207e173fa",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704555929829
    },
    {
      "id": "effe2a3207e173fa",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "6e8b94514f4c1350",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "4c85af87a38c7966",
        "104358db81ff0d06",
        "effe2a3207e173fa",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704555936414
    },
    {
      "type": "edit",
      "id": "effe2a3207e173fa",
      "item": {
        "type": "paragraph",
        "id": "effe2a3207e173fa",
        "text": "⇐ [[LeSnippet]] ⇐ [[Snippet]]"
      },
      "date": 1704555952194
    },
    {
      "type": "edit",
      "id": "effe2a3207e173fa",
      "item": {
        "type": "paragraph",
        "id": "effe2a3207e173fa",
        "text": "[[LeModel]] ⇐ [[LeContent]] ⇐ [[LeSnippet]] ⇐ [[Snippet]]"
      },
      "date": 1704556001343
    },
    {
      "item": {
        "type": "factory",
        "id": "de50b307d5056684"
      },
      "id": "de50b307d5056684",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704556178541
    },
    {
      "id": "de50b307d5056684",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "6e8b94514f4c1350",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "4c85af87a38c7966",
        "104358db81ff0d06",
        "effe2a3207e173fa",
        "de50b307d5056684",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704556189988
    },
    {
      "type": "edit",
      "id": "de50b307d5056684",
      "item": {
        "type": "code",
        "id": "de50b307d5056684",
        "text": "Object subclass: #LeModel\n\tuses: TGtAssert + TGtOptions\n\tinstanceVariableNames: ''\n\tclassVariableNames: ''\n\tpackage: 'Lepiter-Core-Model'"
      },
      "date": 1704556386144
    },
    {
      "type": "edit",
      "id": "effe2a3207e173fa",
      "item": {
        "type": "paragraph",
        "id": "effe2a3207e173fa",
        "text": "[[LeModel]] ⇐ [[LeContent]] ⇐ **[[LeSnippet]]** ⇐ [[Snippet]]"
      },
      "date": 1704556407761
    },
    {
      "type": "edit",
      "id": "effe2a3207e173fa",
      "item": {
        "type": "markdown",
        "id": "effe2a3207e173fa",
        "text": "[[LeModel]] ⇐ [[LeContent]] ⇐ **[[LeSnippet]]** ⇐ [[Snippet]]"
      },
      "date": 1704556409204
    },
    {
      "item": {
        "type": "factory",
        "id": "bb970724f07f27a0"
      },
      "id": "bb970724f07f27a0",
      "type": "add",
      "after": "5cdcd2e6684dc4a9",
      "date": 1704556559993
    },
    {
      "id": "bb970724f07f27a0",
      "type": "move",
      "order": [
        "fcc5d5a7c1d607c7",
        "c27dc3dcd2e586fc",
        "7f997f28aeb829a6",
        "c955dfdff3bba013",
        "f533eb5bf59a2818",
        "176b01e519da0a27",
        "37d7690036700dff",
        "115d1ad1b3028955",
        "465b74000c2372e1",
        "09a5d37bd6436284",
        "ca4eb1352f8d798f",
        "b2212ed917f98113",
        "abd3523e91e6936d",
        "e041aba3dabf92ec",
        "87a8eec0d2f96a90",
        "6e8b94514f4c1350",
        "c528c3b8cbd0f64d",
        "2a7fefce1375532a",
        "4442ebebe4e79fc9",
        "ee3249e0ee266857",
        "b456d49a4086f506",
        "5b38eaf07740db64",
        "bfee6a2bbbb5e839",
        "dfcb57232cb939d9",
        "4c85af87a38c7966",
        "104358db81ff0d06",
        "effe2a3207e173fa",
        "de50b307d5056684",
        "bb970724f07f27a0",
        "5c059f747ed180e6",
        "5f95dc435a96e380",
        "fc2d9d92ed06639d",
        "13a79e31b779aa0a",
        "9b51077972045aec",
        "934a51c90a91936e",
        "cb865fa6dd63bc02",
        "714c1caabbe2edfb",
        "54e617e23ac8c5d7",
        "06e0e27892b1773a",
        "2c84da7789fb4875",
        "e533d3d636755134",
        "fc0d682662c842e6",
        "5cdcd2e6684dc4a9"
      ],
      "date": 1704556570656
    },
    {
      "type": "add",
      "id": "6a817008b3da19da",
      "item": {
        "type": "paragraph",
        "id": "6a817008b3da19da",
        "text": "[[LeContent]]>>#addSnippet:after:"
      },
      "after": "bb970724f07f27a0",
      "date": 1704556615147
    },
    {
      "type": "add",
      "id": "866a47a25a2d85ca",
      "item": {
        "type": "paragraph",
        "id": "866a47a25a2d85ca",
        "text": "related to Journal … after ?!"
      },
      "after": "6a817008b3da19da",
      "date": 1704556652402
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704609947539
    },
    {
      "type": "edit",
      "id": "bb970724f07f27a0",
      "item": {
        "type": "pagefold",
        "id": "bb970724f07f27a0",
        "text": "~"
      },
      "date": 1704634496071
    },
    {
      "type": "edit",
      "id": "9b51077972045aec",
      "item": {
        "type": "markdown",
        "id": "9b51077972045aec",
        "text": "# [[Live Object Programming in Pharo]] [https://www.fun-mooc.fr/en/courses/live-object-programming-pharo/ site]"
      },
      "date": 1704695634499
    }
  ]
}