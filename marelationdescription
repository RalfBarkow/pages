{
  "title": "MARelationDescription",
  "story": [
    {
      "type": "markdown",
      "id": "fdab14bc69cd6644",
      "text": "I am an abstract description for descriptions representing a relation. My instance variable ==classes== references a collection of possible classes that I can relate to. If required the reference description will be automatically built from this list of classes.\n"
    },
    {
      "type": "markdown",
      "id": "6841eebb3864c4e3",
      "text": "## Background Info\n[[Lukas Renggli]] describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used the relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\n\n"
    },
    {
      "type": "markdown",
      "id": "564cdd08fab2e3e0",
      "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more of the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create simple components only. I would then compose these individual components in a master component. This allows one to easily create arbitrary complex forms with custom navigation between different objects that exactly match the wishes of the customer with relatively little glue code. \n>\n>I know that other web and meta-frameworks go much further here. I would not mind somebody talking over the issue an implement (and maintain) better working and well tested relationship descriptions that solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
    },
    {
      "type": "pagefold",
      "id": "bdc5ed93608af51e",
      "text": "~"
    },
    {
      "type": "graphviz",
      "id": "d883cce6f3302794",
      "text": "DOT FROM lambda-browsing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MARelationDescription",
        "story": []
      },
      "date": 1654078584058
    },
    {
      "item": {
        "type": "factory",
        "id": "fdab14bc69cd6644"
      },
      "id": "fdab14bc69cd6644",
      "type": "add",
      "date": 1654078588143
    },
    {
      "type": "edit",
      "id": "fdab14bc69cd6644",
      "item": {
        "type": "markdown",
        "id": "fdab14bc69cd6644",
        "text": "I am an abstract description for descriptions representing a relation. My instance variable ==classes== references a collection of possible classes that I can relate to. If required the reference description will be automatically built from this list of classes.\n!Background Info\nLukas describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used \nthe relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\nAnd then in more detail:\n> The relationships work for simple things. In practice however I have \nalways felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to \nsatisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a \nproof of concept. I never used relationships in any project (other \nthan the Magritte meta editor in Magritte itself), it is largely \nuntested in practice. The only changes relationships have seen since \nmy Master in 2006 were fixes that other people have submitted. The \nfact that some of these fixes got reverted again by newer fixes has \nled me to the conclusion that at least in the current form the \nimplementation of relationships is fragile and I refrain from \nsuggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654078590371
    },
    {
      "type": "edit",
      "id": "fdab14bc69cd6644",
      "item": {
        "type": "markdown",
        "id": "fdab14bc69cd6644",
        "text": "I am an abstract description for descriptions representing a relation. My instance variable ==classes== references a collection of possible classes that I can relate to. If required the reference description will be automatically built from this list of classes.\n"
      },
      "date": 1654078879230
    },
    {
      "type": "add",
      "id": "6841eebb3864c4e3",
      "item": {
        "type": "markdown",
        "id": "6841eebb3864c4e3",
        "text": "## Background Info\nLukas describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used \nthe relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\nAnd then in more detail:\n> The relationships work for simple things. In practice however I have \nalways felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to \nsatisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a \nproof of concept. I never used relationships in any project (other \nthan the Magritte meta editor in Magritte itself), it is largely \nuntested in practice. The only changes relationships have seen since \nmy Master in 2006 were fixes that other people have submitted. The \nfact that some of these fixes got reverted again by newer fixes has \nled me to the conclusion that at least in the current form the \nimplementation of relationships is fragile and I refrain from \nsuggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "after": "fdab14bc69cd6644",
      "date": 1654078879857
    },
    {
      "type": "edit",
      "id": "6841eebb3864c4e3",
      "item": {
        "type": "markdown",
        "id": "6841eebb3864c4e3",
        "text": "## Background Info\nLukas describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used the relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\nAnd then in more detail:\n> The relationships work for simple things. In practice however I have \nalways felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to \nsatisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a \nproof of concept. I never used relationships in any project (other \nthan the Magritte meta editor in Magritte itself), it is largely \nuntested in practice. The only changes relationships have seen since \nmy Master in 2006 were fixes that other people have submitted. The \nfact that some of these fixes got reverted again by newer fixes has \nled me to the conclusion that at least in the current form the \nimplementation of relationships is fragile and I refrain from \nsuggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654078897336
    },
    {
      "type": "edit",
      "id": "6841eebb3864c4e3",
      "item": {
        "type": "markdown",
        "id": "6841eebb3864c4e3",
        "text": "## Background Info\nLukas describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used the relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\n\n"
      },
      "date": 1654078912700
    },
    {
      "type": "add",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a \nproof of concept. I never used relationships in any project (other \nthan the Magritte meta editor in Magritte itself), it is largely \nuntested in practice. The only changes relationships have seen since \nmy Master in 2006 were fixes that other people have submitted. The \nfact that some of these fixes got reverted again by newer fixes has \nled me to the conclusion that at least in the current form the \nimplementation of relationships is fragile and I refrain from \nsuggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "after": "6841eebb3864c4e3",
      "date": 1654078920756
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since \nmy Master in 2006 were fixes that other people have submitted. The \nfact that some of these fixes got reverted again by newer fixes has \nled me to the conclusion that at least in the current form the \nimplementation of relationships is fragile and I refrain from \nsuggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654078962862
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain a from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654079008247
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create \nsimple components only. I would then compose these individual \ncomponents in a master component. This allows one to easily create \narbitrary complex forms with custom navigation between different \nobjects that exactly match the wishes of the customer with relatively \nlittle glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654079079490
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create simple components only. I would then compose these individual components in a master component. This allows one to easily create arbitrary complex forms with custom navigation between different objects that exactly match the wishes of the customer with relatively little glue code. \n>\n>I know that other web and meta-frameworks go much further here. I \nwould not mind somebody talking over the issue an implement (and \nmaintain) better working and well tested relationship descriptions \nthat solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654079103622
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more a\nof the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create simple components only. I would then compose these individual components in a master component. This allows one to easily create arbitrary complex forms with custom navigation between different objects that exactly match the wishes of the customer with relatively little glue code. \n>\n>I know that other web and meta-frameworks go much further here. I would not mind somebody talking over the issue an implement (and maintain) better working and well tested relationship descriptions that solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654079143450
    },
    {
      "type": "edit",
      "id": "6841eebb3864c4e3",
      "item": {
        "type": "markdown",
        "id": "6841eebb3864c4e3",
        "text": "## Background Info\n[[Lukas Renggli]] describes them as \"proof of concept\", which probably accounts for the haziness and lack of documentation.\n\n> I've personally never used the relationships. I rarely found the default behavior useful, and \nanother default behavior was not useful in other contexts. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1562662.html*\n\n\n"
      },
      "date": 1654083403859
    },
    {
      "type": "edit",
      "id": "564cdd08fab2e3e0",
      "item": {
        "type": "markdown",
        "id": "564cdd08fab2e3e0",
        "text": "And then in more detail:\n> The relationships work for simple things. In practice however I have  always felt the need to customize the descriptions through one or more of the extension mechanisms in Magritte, either for usability or to satisfy particular customer requests. \n>\n>I must say that the current implementation is more at the state of a proof of concept. I never used relationships in any project (other than the Magritte meta editor in Magritte itself), it is largely  untested in practice. The only changes relationships have seen since my Master in 2006 were fixes that other people have submitted. The fact that some of these fixes got reverted again by newer fixes has led me to the conclusion that at least in the current form the implementation of relationships is fragile and I refrain from suggesting its use. \n>\n>I found it more flexible and user-friendly to let Magritte create simple components only. I would then compose these individual components in a master component. This allows one to easily create arbitrary complex forms with custom navigation between different objects that exactly match the wishes of the customer with relatively little glue code. \n>\n>I know that other web and meta-frameworks go much further here. I would not mind somebody talking over the issue an implement (and maintain) better working and well tested relationship descriptions that solve the current problems. - *Lukas>http://forum.world.st/magrite-toOne-relationship-and-component-creation-tp1561754p1563032.html*"
      },
      "date": 1654083785548
    },
    {
      "item": {
        "type": "factory",
        "id": "bdc5ed93608af51e"
      },
      "id": "bdc5ed93608af51e",
      "type": "add",
      "after": "564cdd08fab2e3e0",
      "date": 1654084910196
    },
    {
      "item": {
        "type": "factory",
        "id": "d883cce6f3302794"
      },
      "id": "d883cce6f3302794",
      "type": "add",
      "after": "bdc5ed93608af51e",
      "date": 1654084918366
    },
    {
      "type": "edit",
      "id": "bdc5ed93608af51e",
      "item": {
        "type": "pagefold",
        "id": "bdc5ed93608af51e",
        "text": "~"
      },
      "date": 1654084923696
    },
    {
      "type": "edit",
      "id": "d883cce6f3302794",
      "item": {
        "type": "graphviz",
        "id": "d883cce6f3302794",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1654084935867
    }
  ]
}