{
  "title": "Rebol Language",
  "story": [
    {
      "type": "html",
      "text": "REBOL - the Relative Expression-Based Object Language",
      "id": "da6fb9c3d522a88c48507bc88dd90b1d"
    },
    {
      "type": "html",
      "text": "\nSee [http://www.rebol.com/ www.rebol.com] [http://reboltutorial.com reboltutorial.com]",
      "id": "c2e86732901739f6d5e7fa582b98330a"
    },
    {
      "type": "html",
      "text": "\nQuoting the home page ([http://www.rebol.com/rebol-intro.html www.rebol.com]):",
      "id": "00447de88fdec5c116c0344ad5104e5d"
    },
    {
      "type": "html",
      "text": "<i>REBOL is a messaging language for distributed Internet applications that run across all devices.</i>",
      "id": "029d1ebb3ba92133d9b0c4611549a0b8"
    },
    {
      "type": "html",
      "text": "<i>REBOL was designed over a 20 year period by [[Carl Sassenrath]], the system architect responsible for the world's first multitasking multimedia operating system, the Commodore [[Amiga Os]]. The first implementation of REBOL (pronounced like \"rebel yell\") was released in 1997 to a small group of users running on three operating systems, and today REBOL has grown to reach more than 1,000,000 users running on more than 40 OS platforms.</i>",
      "id": "29e3bdac6769f2d6431edf8bd22dc352"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "average:<br>function [block] [total] [",
      "id": "ef7408910afae6b2911a00ef5a940df8"
    },
    {
      "type": "html",
      "text": "total:<br>0",
      "id": "943e31a9db27548cc27c545de4186f56"
    },
    {
      "type": "html",
      "text": "foreach number block [total:<br>number + total]",
      "id": "7b95f16edf013e2dceedbe73851fd76a"
    },
    {
      "type": "code",
      "text": "  total / (length? block)\n ]\n print average [1 10 12.34]",
      "id": "efd584c1371b4f158b8ca37144392a1c"
    },
    {
      "type": "html",
      "text": "<b>7.78</b>",
      "id": "23aee98dfb0f1a6d62f252182d5c9214"
    },
    {
      "type": "html",
      "text": "\nHere is another version, which defines average as a \"refinement\" of a sum function (\"either\" is basically a prefix ?: operator):",
      "id": "ce3d66f3439d58c4e2c0aaf605fc3b1d"
    },
    {
      "type": "html",
      "text": "sum:<br>func [nums [block!] /average /local total] [",
      "id": "00887505f875457a776d7c29c4499b4b"
    },
    {
      "type": "html",
      "text": "total:<br>0",
      "id": "943e31a9db27548cc27c545de4186f56"
    },
    {
      "type": "html",
      "text": "foreach num nums [total:<br>total + num]",
      "id": "4267d9c41af1813a960a3773b176e50b"
    },
    {
      "type": "code",
      "text": "  either average [total / (length? nums)][total]\n ]\n print sum [123 321 456 800]",
      "id": "f3e9a579364458c45e57524b9bdd8689"
    },
    {
      "type": "html",
      "text": "<b>1700</b>",
      "id": "88d1bc23c710787e42192cd6596886b1"
    },
    {
      "type": "code",
      "text": " print sum/average [123 321 456 800]",
      "id": "784c12dbba49778297e42eeba84aca43"
    },
    {
      "type": "html",
      "text": "<b>425</b>",
      "id": "b878bac2b96120ae6a9177c01cfa68db"
    },
    {
      "type": "html",
      "text": "\nHere is an object definition with sample uses:",
      "id": "3ba018af963965d2c8b1ef4e2e5ba892"
    },
    {
      "type": "html",
      "text": "account:<br>make object! [",
      "id": "2c8677651846301e2c57cb4dd8db500d"
    },
    {
      "type": "html",
      "text": "balance:<br>0",
      "id": "9754efd782943a239179dda8dc9910e6"
    },
    {
      "type": "html",
      "text": "deposit:<br>func [amount] [balance: balance + amount]",
      "id": "864115b4ffbe4bce9c209be8a4fa9d8b"
    },
    {
      "type": "html",
      "text": "withdraw:<br>func [amount] [balance: balance - amount]",
      "id": "ad5c47ad64ffdba454bc0924724acbee"
    },
    {
      "type": "code",
      "text": " ]",
      "id": "ab327f6acff6a7207c424fdb8bf1e5ec"
    },
    {
      "type": "code",
      "text": " account/deposit 1000",
      "id": "b53bded2128c0fa0a999a722868bebdf"
    },
    {
      "type": "html",
      "text": "my-account:<br>make account [balance: 400]",
      "id": "fd2a5ba30a56134eb2b479e229849cb3"
    },
    {
      "type": "html",
      "text": "\nSee the \"REBOL in Ten Steps\" page ([http://www.rebol.com/rebolsteps.html www.rebol.com]) for more examples.",
      "id": "5f061e9840acb763142edfe505032c54"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nA <i>fascinating</i> idea. I downloaded it last night and spent some time with the docs. Folks, even if you have no interest in language development not backed by the majors, you should go check this link out. -- [[Michael Hill]]",
      "id": "bef7de84cc6c7b8604dc6c714c887504"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "Rebol - Squeak. Squeak - Rebol. Hmm.. whenever I use one I think of the other. \nRebol is young and very compact. Squeak is large but it does the whole object thing, which Rebol seems to think is not worth the trouble. I wonder how the forthcoming Rebol/Media (GUI support) will compare to Squeak's Morphic system. I wonder how Rebol can do GUIs at all without an object-based system. I look forward to being edified.",
      "id": "eed8d3231e8727cf6ad001768ad92b9e"
    },
    {
      "type": "html",
      "text": "-- [[Simon Michael]]",
      "id": "83851f14410da6cea8721ae66a12ccd4"
    },
    {
      "type": "html",
      "text": "[Note from an infrequent reader of this page: Rebol does have object-like structures; it's just that they aren't nearly as pervasive as in Smalltalk. The OOP features of J are similar.] ",
      "id": "6abe1ad20916738c8d62380cb798acfe"
    },
    {
      "type": "html",
      "text": "\nREBOL uses a prototype based object system, like Self.",
      "id": "b2d6654ca0e702fd52e5fbc32c08ea1d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nRebol tries to solve many problems by adding more \"value\" datatypes to the language. Datatypes provide a non-extensible (?) set of core objects. Here are the different kinds of value datatypes (from the REBOL Dictionary for 2.1.92.3.1):",
      "id": "f9a809093603cd8e7d6da7c266b1dec0"
    },
    {
      "type": "html",
      "text": "\nbinary bitset block char date decimal email file get-word hash integer issue list lit-word logic money none paren path refinement set-path set-word string tag time tuple url word",
      "id": "89adc3713e6a0912870e6eb9346c05fe"
    },
    {
      "type": "html",
      "text": "\nEach of these values has separate commands for conversion (like to-binary), checking the type of a value (binary?), and another word to describe the datatype (binary!).",
      "id": "18c850aaccf6db8fd61b6189279f2173"
    },
    {
      "type": "html",
      "text": "\nThere appear to be more kinds of values - the values above are simply the ones which have a \"to-typename\" command. Some of the others are: datatype, port, object, function, series, error, and native.",
      "id": "c20de2c48374d481fa1a374000fcf3cf"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nRebol makes Perl seem clean and orthogonal. It contains many interesting ideas (especially the object construction without separate \"classes\"), but the structure ... they should have stopped with the kitchen sink. The sad thing is that with a little more consistency, the language could have been much smaller and more powerful. Still, the quick \"Ten Steps\" guide is worth reading for a different perspective. -- [[Clifford Adams]] (generally a fan of [[Little Language]]s)",
      "id": "847b8e6e787355d55e360d367ea418b9"
    },
    {
      "type": "html",
      "text": "\nSadly there is no [[Free Reference Implementation]].",
      "id": "fedd2e8f34a9d5a2ac018cc6c8502f2c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "We've used it to write a [[Domain Specific Language]] that compiles into XML.",
      "id": "68cfe3a56ff907ae6bdbb59f725d4fb4"
    },
    {
      "type": "html",
      "text": "Example Script:<br>",
      "id": "009447f11937ef5870640050941d5e29"
    },
    {
      "type": "code",
      "text": "  create Vendor IBM\n   id 'IBM'\n   salesperson 'S1'\n   discount  10.0",
      "id": "12e51997fead099650a44578818eb4be"
    },
    {
      "type": "code",
      "text": "  Translates Into:\n  <script>\n   <create domain='Vendor', id='IBM'>\n    <field name='id'>IBM</field>\n    <field name='salesperson'>S1</field>\n    <field name='discount'>10.0</field>\n   </create>\n  </script>",
      "id": "a0520a8c2ec2c10c510c4e2b9a7db42c"
    },
    {
      "type": "html",
      "text": "-- [[David Vydra]]",
      "id": "68e6a467b6c16eb94965c06d0858f3bf"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nThere is a wiki written in Rebol called [[Va Nilla]] which illustrates some of its features as a language (Networking, Parsing, etc).",
      "id": "ea0a7c6542b7f48072721f3b0afa7ff6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nI've written up a HTML/XML/WML dialect in Rebol, that allows me to write __ML without needing to worry about closing tags. For example, a part of my site creation code is:",
      "id": "55d89d2098c3af5591a0bd808e3d7b15"
    },
    {
      "type": "html",
      "text": "\nhtml [",
      "id": "ecc8e09ac0dc07f02843098badb96ff3"
    },
    {
      "type": "code",
      "text": "  head [\n    title (Title)\n    meta/http-equiv/content \"Refresh\" (\n      rejoin [\n        mold Refresh/second \"; URL=\" Destination\n        ]\n      )\n    link/rel/type/href \"stylesheet\" \"text/css\" %Index.css\n    script/type/language/src \"text/javascript\" \"JavaScript\" %FrameBurster.js \"\"\n    ]\n  ]",
      "id": "d62c134b01e99a17af79850a02b90cc5"
    },
    {
      "type": "html",
      "text": "\nwhich generates HTML according to the words and paths used.",
      "id": "5324e37ffb9266072dce025545adc49c"
    },
    {
      "type": "html",
      "text": "\nAlso, written up a plain text to ML dialect, so I don't have to bother with HTML. And a site creation dialect which uses files and directories to create a basic web site.",
      "id": "cdf3b3de015665d6457dc03d62ae4f08"
    },
    {
      "type": "html",
      "text": "-- [[Andrew Martin]]",
      "id": "a5c7c7acf33332eaf5f17501074994f1"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nYou can do just the same with the various LISPs, in a very similar fashion. It is well-known that XML et. al are just \"too verbose\" [[Ess Expressions]].",
      "id": "2b92015a69efdd38732e19f812d7e679"
    },
    {
      "type": "html",
      "text": "<i>REBOL's approach is quite different from using Lisp macros. There's a function called PARSE, that allows you to use a pseudo-BNF dialect to define your own dialects.</i>",
      "id": "4259c4a8bce726e9483f8262b1bff663"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nIn fact there are many other REBOL-based tools that support this small community. One of them called REBOL/IOS contains many small apps (called REBlets) that enable the members of this closed community (you have to request a free password to become eventually eligible as a new member).",
      "id": "b923809674bedbbbc11a8ede2f9620c2"
    },
    {
      "type": "html",
      "text": "\nThe community members exchange almost everything related to a conversation going from text messages, to emails with attached files and web links, but no sound or video can travel directly on screens without external help from Web browsers or other tools. ",
      "id": "5a5ea3cda9186817b9c796428e4bb3f7"
    },
    {
      "type": "html",
      "text": "\nAll of the common activities take place in a central room hosted on a foreign (or local) server and every client has its own -automatically synchronized - copy of everything that resides on the server. The client part of the set-up is called the DESKTOP and from this start-up point users can do almost everything other user communities do which normally requires them to use many of the common required client tools to do so like EMAIL, INSTANT MESSENGER, FORUM and CHAT - in fact the one that REBOL/IOS offers is a persistent one (Called the CONFERENCE REBlet) and every message can even be received and consulted while OFF-LINE - a not so common tool to find in fact. ",
      "id": "a7a42a8990f53092690f580436134a2f"
    },
    {
      "type": "html",
      "text": "\nSo all of these tools are glued around the small DESKTOP client app. and everything can be shared from a single place. To work into this environment is like having a warm summer breeze coming during a very cold winter. We just continue to live in a better environment while we look at others trying to do their best with some tools that sometimes would have to be rethinked! The Wiki concept is an exception to these other tools and is a class by itself, like REBOL/IOS.",
      "id": "50968eb3b8b0d49fabaf2c3520b26d76"
    },
    {
      "type": "html",
      "text": "-- Gerard Cote",
      "id": "3a88b09f70d8e33ee7b777c9461b4f6f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\n[[Answer Me]]",
      "id": "acebbcb776f112105c824b41428a1af1"
    },
    {
      "type": "html",
      "text": "\nThere used to be a Rebol clone called Sherman available at \n[http://www.vsf.cape.com/~emergent/sherman.htm www.vsf.cape.com]<i></i>. Does anybody know if it is still around? My google searches to date only seem to turn up links to this same page.",
      "id": "e9e832e48226ba4bb84c9d71b385fbaf"
    },
    {
      "type": "html",
      "text": "<i>archive.org has this as the last updated content:</i>\n[http://web.archive.org/web/20000412131326/http://www.vsf.cape.com/~emergent/sherman.htm web.archive.org]",
      "id": "87d674f5347deaaf6b41fd5524f563d2"
    },
    {
      "type": "html",
      "text": "\nPlease do not delete the above archive.org link, but here is Joe Marshall's current web site's copy of Sherman, which is a Rebol to Scheme translator:",
      "id": "8dfb8081f7543f745ed9e780e9cfe8f9"
    },
    {
      "type": "html",
      "text": "\n[http://home.comcast.net/~prunesquallor/random/sherman.zip home.comcast.net]",
      "id": "c561748c2a9dfd163a95babb435402bf"
    },
    {
      "type": "html",
      "text": "...hmmm...the site is live (and mostly contains Lisp code by Marshall), but that particular link isn't working today (2004apr24)",
      "id": "636c446ec25caa17fffeee67b8d06702"
    },
    {
      "type": "html",
      "text": "\nHmmm - Google finds [http://members.core.com/~bhawley/rebol/Sherman.zip members.core.com], which is live.",
      "id": "1169f85ff5c535eadd73cb92ba0c5546"
    },
    {
      "type": "html",
      "text": "<i>It's not clear what that is, though; it contains a .EXE, not source code. Anyone try it?</i> [[Answer Me]]",
      "id": "bda62d4e8759fdbd76075a148ce81325"
    },
    {
      "type": "html",
      "text": "\nNote: Joe Marshall was co-author of the Rebol 1.0 interpreter at Rebol Technology, and wrote sherman after leaving RT.",
      "id": "f444f46a1d9210309ee953d96a391bc7"
    },
    {
      "type": "html",
      "text": "\nHe gave a talk about Rebol at the first Little Language conference:\n[http://ll1.ai.mit.edu/marshall.html ll1.ai.mit.edu]",
      "id": "8a01a4ae9f43b93fdb0555d579d65a76"
    },
    {
      "type": "html",
      "text": "\nMarshall also criticizes some of the Rebol 2.0 decisions (e.g. removing continuations): [http://www.compkarori.com/vanilla/display/Continuations+Rebuttal www.compkarori.com]",
      "id": "0673b7c07c257d756d5fd696c2a025ff"
    },
    {
      "type": "html",
      "text": "\nElsewhere he mentions that a Rebol program with N tokens has N! possible parses, making parsing rather harder than is typical for computer languages. See this thread: [http://www.ai.mit.edu/~gregs/ll1-discuss-archive-html/msg03917.html www.ai.mit.edu]",
      "id": "91252f1fdecce1b5e5cd966a958274c8"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nThere's a Rebol clone called: R# or [[Rebol Sharp]]. There's more details on [[Source Forge]] at: [http://sourceforge.net/projects/r-sharp sourceforge.net]. It features GNU General Public License.",
      "id": "c874c3ef0bad2b0606742722d9b27254"
    },
    {
      "type": "html",
      "text": "-- [[Andrew Martin]]",
      "id": "a5c7c7acf33332eaf5f17501074994f1"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "\nDoes Rebol fall into the category of [[Homoiconic Languages]]? It seems to, but I can't quite tell from the descriptions given.",
      "id": "5c113491b7aba9abf998146491124540"
    },
    {
      "type": "html",
      "text": "<i>Yes</i>",
      "id": "8af168c8d0e3c51572735164f1633c66"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "Rebol is a great language, no doubt, but [[Why Isnt Rebol Popular]]?",
      "id": "59074db13277f1104d6a95d7848ca1ab"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "32e849711afb6f3dfac83e721c9be782"
    },
    {
      "type": "html",
      "text": "[[Category Programming Language]] [[Minimalist Language]] [[Prototype Based Programming]]",
      "id": "f99ac49c4dfed474d85bb2e14a90f0d7"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?RebolLanguage c2.com]",
      "id": "355a41bfe49eea1aca62bc9de2751b55"
    }
  ],
  "journal": [
    {
      "date": 1251581642000,
      "id": "79e4ac533ee6dc945c054e5b1c913dc5",
      "type": "create",
      "item": {
        "title": "Rebol Language",
        "story": [
          {
            "type": "html",
            "text": "REBOL - the Relative Expression-Based Object Language",
            "id": "da6fb9c3d522a88c48507bc88dd90b1d"
          },
          {
            "type": "html",
            "text": "\nSee [http://www.rebol.com/ www.rebol.com] [http://reboltutorial.com reboltutorial.com]",
            "id": "c2e86732901739f6d5e7fa582b98330a"
          },
          {
            "type": "html",
            "text": "\nQuoting the home page ([http://www.rebol.com/rebol-intro.html www.rebol.com]):",
            "id": "00447de88fdec5c116c0344ad5104e5d"
          },
          {
            "type": "html",
            "text": "<i>REBOL is a messaging language for distributed Internet applications that run across all devices.</i>",
            "id": "029d1ebb3ba92133d9b0c4611549a0b8"
          },
          {
            "type": "html",
            "text": "<i>REBOL was designed over a 20 year period by [[Carl Sassenrath]], the system architect responsible for the world's first multitasking multimedia operating system, the Commodore [[Amiga Os]]. The first implementation of REBOL (pronounced like \"rebel yell\") was released in 1997 to a small group of users running on three operating systems, and today REBOL has grown to reach more than 1,000,000 users running on more than 40 OS platforms.</i>",
            "id": "29e3bdac6769f2d6431edf8bd22dc352"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "average:<br>function [block] [total] [",
            "id": "ef7408910afae6b2911a00ef5a940df8"
          },
          {
            "type": "html",
            "text": "total:<br>0",
            "id": "943e31a9db27548cc27c545de4186f56"
          },
          {
            "type": "html",
            "text": "foreach number block [total:<br>number + total]",
            "id": "7b95f16edf013e2dceedbe73851fd76a"
          },
          {
            "type": "code",
            "text": "  total / (length? block)\n ]\n print average [1 10 12.34]",
            "id": "efd584c1371b4f158b8ca37144392a1c"
          },
          {
            "type": "html",
            "text": "<b>7.78</b>",
            "id": "23aee98dfb0f1a6d62f252182d5c9214"
          },
          {
            "type": "html",
            "text": "\nHere is another version, which defines average as a \"refinement\" of a sum function (\"either\" is basically a prefix ?: operator):",
            "id": "ce3d66f3439d58c4e2c0aaf605fc3b1d"
          },
          {
            "type": "html",
            "text": "sum:<br>func [nums [block!] /average /local total] [",
            "id": "00887505f875457a776d7c29c4499b4b"
          },
          {
            "type": "html",
            "text": "total:<br>0",
            "id": "943e31a9db27548cc27c545de4186f56"
          },
          {
            "type": "html",
            "text": "foreach num nums [total:<br>total + num]",
            "id": "4267d9c41af1813a960a3773b176e50b"
          },
          {
            "type": "code",
            "text": "  either average [total / (length? nums)][total]\n ]\n print sum [123 321 456 800]",
            "id": "f3e9a579364458c45e57524b9bdd8689"
          },
          {
            "type": "html",
            "text": "<b>1700</b>",
            "id": "88d1bc23c710787e42192cd6596886b1"
          },
          {
            "type": "code",
            "text": " print sum/average [123 321 456 800]",
            "id": "784c12dbba49778297e42eeba84aca43"
          },
          {
            "type": "html",
            "text": "<b>425</b>",
            "id": "b878bac2b96120ae6a9177c01cfa68db"
          },
          {
            "type": "html",
            "text": "\nHere is an object definition with sample uses:",
            "id": "3ba018af963965d2c8b1ef4e2e5ba892"
          },
          {
            "type": "html",
            "text": "account:<br>make object! [",
            "id": "2c8677651846301e2c57cb4dd8db500d"
          },
          {
            "type": "html",
            "text": "balance:<br>0",
            "id": "9754efd782943a239179dda8dc9910e6"
          },
          {
            "type": "html",
            "text": "deposit:<br>func [amount] [balance: balance + amount]",
            "id": "864115b4ffbe4bce9c209be8a4fa9d8b"
          },
          {
            "type": "html",
            "text": "withdraw:<br>func [amount] [balance: balance - amount]",
            "id": "ad5c47ad64ffdba454bc0924724acbee"
          },
          {
            "type": "code",
            "text": " ]",
            "id": "ab327f6acff6a7207c424fdb8bf1e5ec"
          },
          {
            "type": "code",
            "text": " account/deposit 1000",
            "id": "b53bded2128c0fa0a999a722868bebdf"
          },
          {
            "type": "html",
            "text": "my-account:<br>make account [balance: 400]",
            "id": "fd2a5ba30a56134eb2b479e229849cb3"
          },
          {
            "type": "html",
            "text": "\nSee the \"REBOL in Ten Steps\" page ([http://www.rebol.com/rebolsteps.html www.rebol.com]) for more examples.",
            "id": "5f061e9840acb763142edfe505032c54"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nA <i>fascinating</i> idea. I downloaded it last night and spent some time with the docs. Folks, even if you have no interest in language development not backed by the majors, you should go check this link out. -- [[Michael Hill]]",
            "id": "bef7de84cc6c7b8604dc6c714c887504"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "Rebol - Squeak. Squeak - Rebol. Hmm.. whenever I use one I think of the other. \nRebol is young and very compact. Squeak is large but it does the whole object thing, which Rebol seems to think is not worth the trouble. I wonder how the forthcoming Rebol/Media (GUI support) will compare to Squeak's Morphic system. I wonder how Rebol can do GUIs at all without an object-based system. I look forward to being edified.",
            "id": "eed8d3231e8727cf6ad001768ad92b9e"
          },
          {
            "type": "html",
            "text": "-- [[Simon Michael]]",
            "id": "83851f14410da6cea8721ae66a12ccd4"
          },
          {
            "type": "html",
            "text": "[Note from an infrequent reader of this page: Rebol does have object-like structures; it's just that they aren't nearly as pervasive as in Smalltalk. The OOP features of J are similar.] ",
            "id": "6abe1ad20916738c8d62380cb798acfe"
          },
          {
            "type": "html",
            "text": "\nREBOL uses a prototype based object system, like Self.",
            "id": "b2d6654ca0e702fd52e5fbc32c08ea1d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nRebol tries to solve many problems by adding more \"value\" datatypes to the language. Datatypes provide a non-extensible (?) set of core objects. Here are the different kinds of value datatypes (from the REBOL Dictionary for 2.1.92.3.1):",
            "id": "f9a809093603cd8e7d6da7c266b1dec0"
          },
          {
            "type": "html",
            "text": "\nbinary bitset block char date decimal email file get-word hash integer issue list lit-word logic money none paren path refinement set-path set-word string tag time tuple url word",
            "id": "89adc3713e6a0912870e6eb9346c05fe"
          },
          {
            "type": "html",
            "text": "\nEach of these values has separate commands for conversion (like to-binary), checking the type of a value (binary?), and another word to describe the datatype (binary!).",
            "id": "18c850aaccf6db8fd61b6189279f2173"
          },
          {
            "type": "html",
            "text": "\nThere appear to be more kinds of values - the values above are simply the ones which have a \"to-typename\" command. Some of the others are: datatype, port, object, function, series, error, and native.",
            "id": "c20de2c48374d481fa1a374000fcf3cf"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nRebol makes Perl seem clean and orthogonal. It contains many interesting ideas (especially the object construction without separate \"classes\"), but the structure ... they should have stopped with the kitchen sink. The sad thing is that with a little more consistency, the language could have been much smaller and more powerful. Still, the quick \"Ten Steps\" guide is worth reading for a different perspective. -- [[Clifford Adams]] (generally a fan of [[Little Language]]s)",
            "id": "847b8e6e787355d55e360d367ea418b9"
          },
          {
            "type": "html",
            "text": "\nSadly there is no [[Free Reference Implementation]].",
            "id": "fedd2e8f34a9d5a2ac018cc6c8502f2c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "We've used it to write a [[Domain Specific Language]] that compiles into XML.",
            "id": "68cfe3a56ff907ae6bdbb59f725d4fb4"
          },
          {
            "type": "html",
            "text": "Example Script:<br>",
            "id": "009447f11937ef5870640050941d5e29"
          },
          {
            "type": "code",
            "text": "  create Vendor IBM\n   id 'IBM'\n   salesperson 'S1'\n   discount  10.0",
            "id": "12e51997fead099650a44578818eb4be"
          },
          {
            "type": "code",
            "text": "  Translates Into:\n  <script>\n   <create domain='Vendor', id='IBM'>\n    <field name='id'>IBM</field>\n    <field name='salesperson'>S1</field>\n    <field name='discount'>10.0</field>\n   </create>\n  </script>",
            "id": "a0520a8c2ec2c10c510c4e2b9a7db42c"
          },
          {
            "type": "html",
            "text": "-- [[David Vydra]]",
            "id": "68e6a467b6c16eb94965c06d0858f3bf"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nThere is a wiki written in Rebol called [[Va Nilla]] which illustrates some of its features as a language (Networking, Parsing, etc).",
            "id": "ea0a7c6542b7f48072721f3b0afa7ff6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nI've written up a HTML/XML/WML dialect in Rebol, that allows me to write __ML without needing to worry about closing tags. For example, a part of my site creation code is:",
            "id": "55d89d2098c3af5591a0bd808e3d7b15"
          },
          {
            "type": "html",
            "text": "\nhtml [",
            "id": "ecc8e09ac0dc07f02843098badb96ff3"
          },
          {
            "type": "code",
            "text": "  head [\n    title (Title)\n    meta/http-equiv/content \"Refresh\" (\n      rejoin [\n        mold Refresh/second \"; URL=\" Destination\n        ]\n      )\n    link/rel/type/href \"stylesheet\" \"text/css\" %Index.css\n    script/type/language/src \"text/javascript\" \"JavaScript\" %FrameBurster.js \"\"\n    ]\n  ]",
            "id": "d62c134b01e99a17af79850a02b90cc5"
          },
          {
            "type": "html",
            "text": "\nwhich generates HTML according to the words and paths used.",
            "id": "5324e37ffb9266072dce025545adc49c"
          },
          {
            "type": "html",
            "text": "\nAlso, written up a plain text to ML dialect, so I don't have to bother with HTML. And a site creation dialect which uses files and directories to create a basic web site.",
            "id": "cdf3b3de015665d6457dc03d62ae4f08"
          },
          {
            "type": "html",
            "text": "-- [[Andrew Martin]]",
            "id": "a5c7c7acf33332eaf5f17501074994f1"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nYou can do just the same with the various LISPs, in a very similar fashion. It is well-known that XML et. al are just \"too verbose\" [[Ess Expressions]].",
            "id": "2b92015a69efdd38732e19f812d7e679"
          },
          {
            "type": "html",
            "text": "<i>REBOL's approach is quite different from using Lisp macros. There's a function called PARSE, that allows you to use a pseudo-BNF dialect to define your own dialects.</i>",
            "id": "4259c4a8bce726e9483f8262b1bff663"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nIn fact there are many other REBOL-based tools that support this small community. One of them called REBOL/IOS contains many small apps (called REBlets) that enable the members of this closed community (you have to request a free password to become eventually eligible as a new member).",
            "id": "b923809674bedbbbc11a8ede2f9620c2"
          },
          {
            "type": "html",
            "text": "\nThe community members exchange almost everything related to a conversation going from text messages, to emails with attached files and web links, but no sound or video can travel directly on screens without external help from Web browsers or other tools. ",
            "id": "5a5ea3cda9186817b9c796428e4bb3f7"
          },
          {
            "type": "html",
            "text": "\nAll of the common activities take place in a central room hosted on a foreign (or local) server and every client has its own -automatically synchronized - copy of everything that resides on the server. The client part of the set-up is called the DESKTOP and from this start-up point users can do almost everything other user communities do which normally requires them to use many of the common required client tools to do so like EMAIL, INSTANT MESSENGER, FORUM and CHAT - in fact the one that REBOL/IOS offers is a persistent one (Called the CONFERENCE REBlet) and every message can even be received and consulted while OFF-LINE - a not so common tool to find in fact. ",
            "id": "a7a42a8990f53092690f580436134a2f"
          },
          {
            "type": "html",
            "text": "\nSo all of these tools are glued around the small DESKTOP client app. and everything can be shared from a single place. To work into this environment is like having a warm summer breeze coming during a very cold winter. We just continue to live in a better environment while we look at others trying to do their best with some tools that sometimes would have to be rethinked! The Wiki concept is an exception to these other tools and is a class by itself, like REBOL/IOS.",
            "id": "50968eb3b8b0d49fabaf2c3520b26d76"
          },
          {
            "type": "html",
            "text": "-- Gerard Cote",
            "id": "3a88b09f70d8e33ee7b777c9461b4f6f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\n[[Answer Me]]",
            "id": "acebbcb776f112105c824b41428a1af1"
          },
          {
            "type": "html",
            "text": "\nThere used to be a Rebol clone called Sherman available at \n[http://www.vsf.cape.com/~emergent/sherman.htm www.vsf.cape.com]<i></i>. Does anybody know if it is still around? My google searches to date only seem to turn up links to this same page.",
            "id": "e9e832e48226ba4bb84c9d71b385fbaf"
          },
          {
            "type": "html",
            "text": "<i>archive.org has this as the last updated content:</i>\n[http://web.archive.org/web/20000412131326/http://www.vsf.cape.com/~emergent/sherman.htm web.archive.org]",
            "id": "87d674f5347deaaf6b41fd5524f563d2"
          },
          {
            "type": "html",
            "text": "\nPlease do not delete the above archive.org link, but here is Joe Marshall's current web site's copy of Sherman, which is a Rebol to Scheme translator:",
            "id": "8dfb8081f7543f745ed9e780e9cfe8f9"
          },
          {
            "type": "html",
            "text": "\n[http://home.comcast.net/~prunesquallor/random/sherman.zip home.comcast.net]",
            "id": "c561748c2a9dfd163a95babb435402bf"
          },
          {
            "type": "html",
            "text": "...hmmm...the site is live (and mostly contains Lisp code by Marshall), but that particular link isn't working today (2004apr24)",
            "id": "636c446ec25caa17fffeee67b8d06702"
          },
          {
            "type": "html",
            "text": "\nHmmm - Google finds [http://members.core.com/~bhawley/rebol/Sherman.zip members.core.com], which is live.",
            "id": "1169f85ff5c535eadd73cb92ba0c5546"
          },
          {
            "type": "html",
            "text": "<i>It's not clear what that is, though; it contains a .EXE, not source code. Anyone try it?</i> [[Answer Me]]",
            "id": "bda62d4e8759fdbd76075a148ce81325"
          },
          {
            "type": "html",
            "text": "\nNote: Joe Marshall was co-author of the Rebol 1.0 interpreter at Rebol Technology, and wrote sherman after leaving RT.",
            "id": "f444f46a1d9210309ee953d96a391bc7"
          },
          {
            "type": "html",
            "text": "\nHe gave a talk about Rebol at the first Little Language conference:\n[http://ll1.ai.mit.edu/marshall.html ll1.ai.mit.edu]",
            "id": "8a01a4ae9f43b93fdb0555d579d65a76"
          },
          {
            "type": "html",
            "text": "\nMarshall also criticizes some of the Rebol 2.0 decisions (e.g. removing continuations): [http://www.compkarori.com/vanilla/display/Continuations+Rebuttal www.compkarori.com]",
            "id": "0673b7c07c257d756d5fd696c2a025ff"
          },
          {
            "type": "html",
            "text": "\nElsewhere he mentions that a Rebol program with N tokens has N! possible parses, making parsing rather harder than is typical for computer languages. See this thread: [http://www.ai.mit.edu/~gregs/ll1-discuss-archive-html/msg03917.html www.ai.mit.edu]",
            "id": "91252f1fdecce1b5e5cd966a958274c8"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nThere's a Rebol clone called: R# or [[Rebol Sharp]]. There's more details on [[Source Forge]] at: [http://sourceforge.net/projects/r-sharp sourceforge.net]. It features GNU General Public License.",
            "id": "c874c3ef0bad2b0606742722d9b27254"
          },
          {
            "type": "html",
            "text": "-- [[Andrew Martin]]",
            "id": "a5c7c7acf33332eaf5f17501074994f1"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "\nDoes Rebol fall into the category of [[Homoiconic Languages]]? It seems to, but I can't quite tell from the descriptions given.",
            "id": "5c113491b7aba9abf998146491124540"
          },
          {
            "type": "html",
            "text": "<i>Yes</i>",
            "id": "8af168c8d0e3c51572735164f1633c66"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "Rebol is a great language, no doubt, but [[Why Isnt Rebol Popular]]?",
            "id": "59074db13277f1104d6a95d7848ca1ab"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "32e849711afb6f3dfac83e721c9be782"
          },
          {
            "type": "html",
            "text": "[[Category Programming Language]] [[Minimalist Language]] [[Prototype Based Programming]]",
            "id": "f99ac49c4dfed474d85bb2e14a90f0d7"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?RebolLanguage c2.com]",
            "id": "355a41bfe49eea1aca62bc9de2751b55"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1708035465274
    }
  ]
}