{
  "title": "Particle Pipeline",
  "story": [
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "Would particles be a good representation for massive flows in a datacenter visualization? [https://threejs-journey.xyz/lessons/18 lesson]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Particle Pipeline",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "Explain what this does."
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "// Code that does it.\n\nconst geometry = new THREE.BoxGeometry(1, 1, 1)\nconst material = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geometry, material)\nscene.add(box)\ntick = () => box.rotation.y += 0.01\n\n\n"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1614385953601
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "Would particles be a good representation for massive flows in a datacenter visualization? "
      },
      "date": 1614386088751
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "Would particles be a good representation for massive flows in a datacenter visualization? [https://threejs-journey.xyz/lessons/18 lesson]"
      },
      "date": 1614386118335
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614452080273
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Fload32Array(count*3)\nlet stop = new Fload32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Fload32Array(count)\n\nfor(let i=0; i<count; i++){\n  const = rn = Math.random()-Math.random()\n  const = set3 = (a,x,y,z) {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn()}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntickx = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614452867859
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Fload32Array(count*3)\nlet stop = new Fload32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Fload32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn()}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntickx = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614452925344
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Fload32Array(count*3)\nlet stop = new Fload32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Fload32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntickx = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614452950927
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Fload32Array(count*3)\nlet stop = new Fload32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Fload32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntickx = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614452976909
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntickx = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453001553
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  return\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453034767
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453372151
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.01)%2\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453472254
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.01)%2 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453516694
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.01)%2 - 1}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453569183
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.01)%2 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453616670
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.001)%2 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453764122
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.002-1)%2+1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453837437
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.002+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453878818
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffffcc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.002+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453937788
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.002+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614453958996
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet start = new Float32Array(count*3)\nlet stop = new Float32Array(count*3)\nlet pos = new Float32Array(count*3)\nlet at = new Float32Array(count)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.02+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614454738124
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () =>Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.02+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614454984128
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.02+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614455000379
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    geop.array[i3] = (geop.array[i3]+0.02+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614545077263
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614545239404
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614545281838
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614545536667
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614545786259
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn(),rn()/4)}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546569854
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/8,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546612029
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546661710
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%4,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546757014
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%4-2,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546777818
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%4-1.5,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546789545
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%5-2,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546837035
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546898952
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%3-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546965896
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614546992775
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 500000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614613753430
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614614007881
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 500000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1614906831410
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\n\nfor(let i=0; i<count; i++){\n  const rn = () => Math.random()-Math.random()\n  const set3 = (a,x,y,z) => {\n    let i3 = i*3; a[i3++]=x; a[i3++]=y; a[i3++]=z;}\n  set3(pos,rn(),rn()/4+i%3-1,rn())}\n\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xffff88})\n\nscene.add(new THREE.Points(geo, mat))\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    pos[i3] = (pos[i3]+0.02+1)%2-1 }\n  geo.attributes.position.needsUpdate = true }"
      },
      "date": 1615053195751
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233559539
    }
  ]
}