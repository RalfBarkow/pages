{
  "title": "Workflows",
  "story": [
    {
      "type": "code",
      "id": "93b2257f6da61fb5",
      "text": "Uses {{lzUseContext:name = \"One-dimensional arrays\"}}"
    },
    {
      "type": "paragraph",
      "id": "6c68b26d491e2dbf",
      "text": "Workflows are computations that transform input data into output data, with all data stored in files. The smallest unit of computation in a workflow is a [[Task]], which corresponds to the execution of a program that reads some input files and produces some output files. The workflow defines the dependencies between the [[Tasks]] and the data files. A workflow manager uses this dependency information to run the tasks in the most efficient way possible, given the available computational resources."
    },
    {
      "type": "markdown",
      "id": "1e9a50bac8da0d8c",
      "text": "Workflow tasks resemble functions (see [[Functions]]), the difference being that they process data stored in files (of sort `{{lzSort:file}}`) rather than represented by terms. We therefore use the same arrow notation for task sorts as for function sorts:\n\n"
    },
    {
      "type": "code",
      "id": "623694797d7ec299",
      "text": "\t{{lzSort:(inputs:ùïä) ‚Üí (outputs:ùïä)}}"
    },
    {
      "type": "markdown",
      "id": "eca565ba167f1624",
      "text": "Task composition, unlike function composition, is usually written from left to right, representing the flow of information\n"
    },
    {
      "type": "code",
      "id": "2ed67ad79afeccd6",
      "text": "{{lzOp: (inputs_:ùïä ‚Üí intermediate_:ùïä) ‚ßü (intermediate_:ùïä ‚Üí outputs_:ùïä) : (inputs_:ùïä ‚Üí outputs_:ùïä)}}"
    },
    {
      "type": "pagefold",
      "id": "efb03a757f49e284",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9e53e8f4bb3a22ee",
      "text": "Workflows describe productive activities that are well supported but not enforced by wiki."
    },
    {
      "type": "paragraph",
      "id": "c8996bee85f30adc",
      "text": "We rely on discovered sequences of primitive actions to complete [[task]]s that might be directly supported by designed features in a monolithic system. Primitives, cautiously created when needs arise, are closely aligned with the necessary software operations."
    },
    {
      "type": "paragraph",
      "id": "9546cd7a78d5db48",
      "text": "Workflows might start life as a workaround for a missing feature only to be recognized later to be a versatile solution that does not require additional user [[affordance]]."
    },
    {
      "type": "paragraph",
      "id": "4b999cb5a07dfdce",
      "text": "Workflows avoid the unfortunate, inscrutable and wholly unintended feature interactions common in designed systems. "
    },
    {
      "type": "paragraph",
      "id": "8226cf4cc09db588",
      "text": "See [[Familiar Workflows]] for some specific cases."
    },
    {
      "type": "markdown",
      "id": "3ad1bf897c65a8dc",
      "text": "# Features"
    },
    {
      "type": "paragraph",
      "id": "0fd1c100885b236d",
      "text": "Some workflows revolve around unfamiliar capabilities for managing or sharing our work."
    },
    {
      "type": "paragraph",
      "id": "eec77992cf2419e3",
      "text": "We rely on domain names for identity and make subdomain creation automatic. We expect but do not require an author profile page for each new site. "
    },
    {
      "type": "paragraph",
      "id": "5819956696e68942",
      "text": "We often make new pages as ghostly versions of their future selves that can be read, even borrowed from, but are not saved until forked."
    },
    {
      "type": "paragraph",
      "id": "f7134154d7cf6127",
      "text": "We present useful versions of specific plugins as companions to the standard about pages. Recent Changes, Grep for Errors and Topo Map are useful versions of Activity, Grep and Map plugins."
    },
    {
      "type": "paragraph",
      "id": "a9191b065dae7207",
      "text": "We employ Template pages and Transport services to construct new pages with consistent format and organization structure."
    },
    {
      "type": "markdown",
      "id": "f6a8c63111a92864",
      "text": "# Limitations"
    },
    {
      "type": "paragraph",
      "id": "92aab5e132f67f5b",
      "text": "We live within limitations, some enforced by browsers and others of our own choice, that preclude operations familiar to database driven sites."
    },
    {
      "type": "paragraph",
      "id": "d8fde44bc415e4af",
      "text": "We limit notifications to the discovery of twin pages in already known and visited sites. We can know what our friends are doing only if we go look. We offer affordances for observing but do not subject authors to spam."
    },
    {
      "type": "paragraph",
      "id": "c7aaa2b546f7bd58",
      "text": "We collect more history than might be desired especially when a page with many edits to large items becomes bulky. Clever refactoring and forks from history provide handy journal manipulations."
    },
    {
      "type": "paragraph",
      "id": "7b0abd2e9090e686",
      "text": "We live within the visibility constraints of firewalls but find use for carefully placed staging sites from which we can fork to public visibility pages once reviewed."
    },
    {
      "type": "markdown",
      "id": "e0b01f41e7a9dc70",
      "text": "# Incompleteness"
    },
    {
      "type": "paragraph",
      "id": "ee7c4cc04864c7ce",
      "text": "We do without some convenience features because we simply haven't made providing them a priority."
    },
    {
      "type": "paragraph",
      "id": "eaef5f2f768712dd",
      "text": "We have good support for comparing pages, often three, four or more pages, by scrolling each to align paragraphs that may have moved in different versions. But we don't yet red-green diff individual lines."
    },
    {
      "type": "paragraph",
      "id": "309a03e616c99de4",
      "text": "We learn strategies for opening and abandoning pages to the point that we don't miss the ability to close from the middle or otherwise rearrange the lineup."
    },
    {
      "type": "paragraph",
      "id": "dd68067817607a58",
      "text": "We don't handle deleting pages except in the case of browser local storage where they can inescapably hide desired content. This requires retrieving the more empowered Local Changes variation of Recent Changes."
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "1e9a50bac8da0d8c",
      "item": {
        "type": "markdown",
        "id": "1e9a50bac8da0d8c",
        "text": "Workflow tasks resemble functions (see [[Functions]]), the difference being that they process data stored in files (of sort `{{lzSort:file}}`) rather than represented by terms. We therefore use the same arrow notation for task sorts as for function sorts:\n"
      },
      "date": 1661776071222
    },
    {
      "type": "edit",
      "id": "623694797d7ec299",
      "item": {
        "type": "code",
        "id": "623694797d7ec299",
        "text": "\t{{lzSort:(inputs:ùïä) ‚Üí (outputs:ùïä)}}"
      },
      "date": 1661776042513
    },
    {
      "type": "edit",
      "id": "1e9a50bac8da0d8c",
      "item": {
        "type": "markdown",
        "id": "1e9a50bac8da0d8c",
        "text": "Workflow tasks resemble functions (see [[Functions]]), the difference being that they process data stored in files (of sort {{lzSort:file}}) rather than represented by terms. We therefore use the same arrow notation for task sorts as for function sorts:\n"
      },
      "date": 1661776041315
    },
    {
      "id": "623694797d7ec299",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "623694797d7ec299",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661776035097
    },
    {
      "item": {
        "type": "factory",
        "id": "623694797d7ec299"
      },
      "id": "623694797d7ec299",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661776026331
    },
    {
      "type": "edit",
      "id": "6c68b26d491e2dbf",
      "item": {
        "type": "paragraph",
        "id": "6c68b26d491e2dbf",
        "text": "Workflows are computations that transform input data into output data, with all data stored in files. The smallest unit of computation in a workflow is a [[Task]], which corresponds to the execution of a program that reads some input files and produces some output files. The workflow defines the dependencies between the [[Tasks]] and the data files. A workflow manager uses this dependency information to run the tasks in the most efficient way possible, given the available computational resources."
      },
      "date": 1661776009966
    },
    {
      "type": "edit",
      "id": "6c68b26d491e2dbf",
      "item": {
        "type": "paragraph",
        "id": "6c68b26d491e2dbf",
        "text": "Workflows are computations that transform input data into output data, with all data stored in files. The smallest unit of computation in a workflow is a [[Task]], which corresponds to the execution of a program that reads some input files and produces some output files. The workflow defines the dependencies between the tasks and the data files. A workflow manager uses this dependency information to run the tasks in the most efficient way possible, given the available computational resources."
      },
      "date": 1661775979655
    },
    {
      "type": "edit",
      "id": "6c68b26d491e2dbf",
      "item": {
        "type": "paragraph",
        "id": "6c68b26d491e2dbf",
        "text": "Workflows are computations that transform input data into output data, with all data stored in files. The smallest unit of computation in a workflow is a [[task]], which corresponds to the execution of a program that reads some input files and produces some output files. The workflow defines the dependencies between the tasks and the data files. A workflow manager uses this dependency information to run the tasks in the most efficient way possible, given the available computational resources."
      },
      "date": 1661775972431
    },
    {
      "type": "edit",
      "id": "efb03a757f49e284",
      "item": {
        "type": "pagefold",
        "id": "efb03a757f49e284",
        "text": "~"
      },
      "date": 1661775953925
    },
    {
      "type": "edit",
      "id": "1e9a50bac8da0d8c",
      "item": {
        "type": "markdown",
        "id": "1e9a50bac8da0d8c",
        "text": "Workflow tasks resemble functions (see [[Functions]]), the difference being that they process data stored in files (of sort {{lzSort:file}}) rather than represented by terms. We therefore use the same arrow notation for task sorts as for function sorts:\n\t{{lzSort:(inputs:ùïä) ‚Üí (outputs:ùïä)}}"
      },
      "date": 1661775942613
    },
    {
      "id": "1e9a50bac8da0d8c",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661775940243
    },
    {
      "item": {
        "type": "factory",
        "id": "1e9a50bac8da0d8c"
      },
      "id": "1e9a50bac8da0d8c",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661775933470
    },
    {
      "id": "efb03a757f49e284",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661775928911
    },
    {
      "item": {
        "type": "factory",
        "id": "efb03a757f49e284"
      },
      "id": "efb03a757f49e284",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661775921282
    },
    {
      "type": "edit",
      "id": "6c68b26d491e2dbf",
      "item": {
        "type": "paragraph",
        "id": "6c68b26d491e2dbf",
        "text": "Workflows are computations that transform input data into output data, with all data stored in files. The smallest unit of computation in a workflow is a task, which corresponds to the execution of a program that reads some input files and produces some output files. The workflow defines the dependencies between the tasks and the data files. A workflow manager uses this dependency information to run the tasks in the most efficient way possible, given the available computational resources."
      },
      "date": 1661775905315
    },
    {
      "id": "6c68b26d491e2dbf",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661775898178
    },
    {
      "item": {
        "type": "factory",
        "id": "6c68b26d491e2dbf"
      },
      "id": "6c68b26d491e2dbf",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661775886403
    },
    {
      "type": "edit",
      "id": "93b2257f6da61fb5",
      "item": {
        "type": "code",
        "id": "93b2257f6da61fb5",
        "text": "Uses {{lzUseContext:name = \"One-dimensional arrays\"}}"
      },
      "date": 1661775870004
    },
    {
      "id": "93b2257f6da61fb5",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661775867762
    },
    {
      "item": {
        "type": "factory",
        "id": "93b2257f6da61fb5"
      },
      "id": "93b2257f6da61fb5",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661775859838
    },
    {
      "type": "edit",
      "id": "9546cd7a78d5db48",
      "item": {
        "type": "paragraph",
        "id": "9546cd7a78d5db48",
        "text": "Workflows might start life as a workaround for a missing feature only to be recognized later to be a versatile solution that does not require additional user [[affordance]]."
      },
      "date": 1661395972717
    },
    {
      "type": "edit",
      "id": "c8996bee85f30adc",
      "item": {
        "type": "paragraph",
        "id": "c8996bee85f30adc",
        "text": "We rely on discovered sequences of primitive actions to complete [[task]]s that might be directly supported by designed features in a monolithic system. Primitives, cautiously created when needs arise, are closely aligned with the necessary software operations."
      },
      "date": 1661395953549
    },
    {
      "type": "fork",
      "site": "about.fed.wiki",
      "date": 1626370555036
    },
    {
      "type": "edit",
      "id": "8226cf4cc09db588",
      "item": {
        "type": "paragraph",
        "id": "8226cf4cc09db588",
        "text": "See [[Familiar Workflows]] for some specific cases."
      },
      "date": 1469302410737
    },
    {
      "type": "edit",
      "id": "8226cf4cc09db588",
      "item": {
        "type": "paragraph",
        "id": "8226cf4cc09db588",
        "text": "See [Familiar [Workflows]] for some specific cases."
      },
      "date": 1469302401892
    },
    {
      "type": "fork",
      "date": 1469302358390
    },
    {
      "type": "move",
      "order": [
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "id": "8226cf4cc09db588",
      "date": 1469302300887,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "8226cf4cc09db588",
      "item": {
        "type": "paragraph",
        "id": "8226cf4cc09db588",
        "text": "See [[Workflows]] for some specific cases."
      },
      "after": "dd68067817607a58",
      "date": 1469302283858
    },
    {
      "type": "edit",
      "id": "dd68067817607a58",
      "item": {
        "type": "paragraph",
        "id": "dd68067817607a58",
        "text": "We don't handle deleting pages except in the case of browser local storage where they can inescapably hide desired content. This requires retrieving the more empowered Local Changes variation of Recent Changes."
      },
      "date": 1469302148068
    },
    {
      "type": "add",
      "id": "dd68067817607a58",
      "item": {
        "type": "paragraph",
        "id": "dd68067817607a58",
        "text": "We don't handle deleting pages except in the case of browser local storage where they can inescapably hide desired content. This requires retrieving the more empowered Local Changes variation of Recent Changes."
      },
      "after": "309a03e616c99de4",
      "date": 1469302086680
    },
    {
      "type": "add",
      "id": "309a03e616c99de4",
      "item": {
        "type": "paragraph",
        "id": "309a03e616c99de4",
        "text": "We learn strategies for opening and abandoning pages to the point that we don't miss the ability to close from the middle or otherwise rearrange the lineup."
      },
      "after": "eaef5f2f768712dd",
      "date": 1469301646740
    },
    {
      "type": "add",
      "id": "eaef5f2f768712dd",
      "item": {
        "type": "paragraph",
        "id": "eaef5f2f768712dd",
        "text": "We have good support for comparing pages, often three, four or more pages, by scrolling each to align paragraphs that may have moved in different versions. But we don't yet red-green diff individual lines."
      },
      "after": "ee7c4cc04864c7ce",
      "date": 1469301537647
    },
    {
      "type": "edit",
      "id": "ee7c4cc04864c7ce",
      "item": {
        "type": "paragraph",
        "id": "ee7c4cc04864c7ce",
        "text": "We do without some convenience features because we simply haven't made providing them a priority."
      },
      "date": 1469301352703
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ee7c4cc04864c7ce",
        "text": "We do without some convenience features because we simply haven't made providing them a priority."
      },
      "id": "ee7c4cc04864c7ce",
      "type": "add",
      "after": "e0b01f41e7a9dc70",
      "date": 1469301226632
    },
    {
      "type": "edit",
      "id": "e0b01f41e7a9dc70",
      "item": {
        "type": "markdown",
        "id": "e0b01f41e7a9dc70",
        "text": "# Incompleteness"
      },
      "date": 1469301221108
    },
    {
      "type": "edit",
      "id": "7b0abd2e9090e686",
      "item": {
        "type": "paragraph",
        "id": "7b0abd2e9090e686",
        "text": "We live within the visibility constraints of firewalls but find use for carefully placed staging sites from which we can fork to public visibility pages once reviewed."
      },
      "date": 1469301146707
    },
    {
      "type": "add",
      "id": "7b0abd2e9090e686",
      "item": {
        "type": "paragraph",
        "id": "7b0abd2e9090e686",
        "text": "We live within the visibility constraints of firewalls but find use for carefully placed staging sites from which we can fork to public visibility pages once reviewed."
      },
      "after": "c7aaa2b546f7bd58",
      "date": 1469301129000
    },
    {
      "type": "add",
      "id": "c7aaa2b546f7bd58",
      "item": {
        "type": "paragraph",
        "id": "c7aaa2b546f7bd58",
        "text": "We collect more history than might be desired especially when a page with many edits to large items becomes bulky. Clever refactoring and forks from history provide handy journal manipulations."
      },
      "after": "d8fde44bc415e4af",
      "date": 1469300775410
    },
    {
      "type": "edit",
      "id": "d8fde44bc415e4af",
      "item": {
        "type": "paragraph",
        "id": "d8fde44bc415e4af",
        "text": "We limit notifications to the discovery of twin pages in already known and visited sites. We can know what our friends are doing only if we go look. We offer affordances for observing but do not subject authors to spam."
      },
      "date": 1469300483529
    },
    {
      "type": "add",
      "id": "d8fde44bc415e4af",
      "item": {
        "type": "paragraph",
        "id": "d8fde44bc415e4af",
        "text": "We limit notifications to the discovery of twin pages in already known and visited sites. We can know what our friends are doing only if we go look. We offer affordances for observing but do not subject authors to spam."
      },
      "after": "92aab5e132f67f5b",
      "date": 1469300462947
    },
    {
      "type": "edit",
      "id": "f6a8c63111a92864",
      "item": {
        "type": "markdown",
        "id": "f6a8c63111a92864",
        "text": "# Limitations"
      },
      "date": 1469299867832
    },
    {
      "type": "add",
      "id": "92aab5e132f67f5b",
      "item": {
        "type": "paragraph",
        "id": "92aab5e132f67f5b",
        "text": "We live within limitations, some enforced by browsers and others of our own choice, that preclude operations familiar to database driven sites."
      },
      "after": "f6a8c63111a92864",
      "date": 1469299767793
    },
    {
      "type": "add",
      "id": "a9191b065dae7207",
      "item": {
        "type": "paragraph",
        "id": "a9191b065dae7207",
        "text": "We employ Template pages and Transport services to construct new pages with consistent format and organization structure."
      },
      "after": "f7134154d7cf6127",
      "date": 1469299607766
    },
    {
      "type": "edit",
      "id": "3ad1bf897c65a8dc",
      "item": {
        "type": "markdown",
        "id": "3ad1bf897c65a8dc",
        "text": "# Features"
      },
      "date": 1469299197491
    },
    {
      "type": "add",
      "id": "f7134154d7cf6127",
      "item": {
        "type": "paragraph",
        "id": "f7134154d7cf6127",
        "text": "We present useful versions of specific plugins as companions to the standard about pages. Recent Changes, Grep for Errors and Topo Map are useful versions of Activity, Grep and Map plugins."
      },
      "after": "5819956696e68942",
      "date": 1469299188300
    },
    {
      "type": "add",
      "id": "5819956696e68942",
      "item": {
        "type": "paragraph",
        "id": "5819956696e68942",
        "text": "We often make new pages as ghostly versions of their future selves that can be read, even borrowed from, but are not saved until forked."
      },
      "after": "eec77992cf2419e3",
      "date": 1469298759912
    },
    {
      "type": "add",
      "id": "eec77992cf2419e3",
      "item": {
        "type": "paragraph",
        "id": "eec77992cf2419e3",
        "text": "We rely on domain names for identity and make subdomain creation automatic. We expect but do not require an author profile page for each new site. "
      },
      "after": "0fd1c100885b236d",
      "date": 1469298577635
    },
    {
      "type": "add",
      "id": "0fd1c100885b236d",
      "item": {
        "type": "paragraph",
        "id": "0fd1c100885b236d",
        "text": "Some workflows revolve around unfamiliar capabilities for managing or sharing our work."
      },
      "after": "3ad1bf897c65a8dc",
      "date": 1469298401344
    },
    {
      "type": "add",
      "id": "e0b01f41e7a9dc70",
      "item": {
        "type": "markdown",
        "id": "e0b01f41e7a9dc70",
        "text": "# Incompleteness"
      },
      "after": "f6a8c63111a92864",
      "date": 1469298260183
    },
    {
      "type": "add",
      "id": "f6a8c63111a92864",
      "item": {
        "type": "markdown",
        "id": "f6a8c63111a92864",
        "text": "# Limitations"
      },
      "after": "3ad1bf897c65a8dc",
      "date": 1469298227345
    },
    {
      "type": "add",
      "id": "3ad1bf897c65a8dc",
      "item": {
        "type": "markdown",
        "id": "3ad1bf897c65a8dc",
        "text": "# Features"
      },
      "after": "4b999cb5a07dfdce",
      "date": 1469298220225
    },
    {
      "type": "edit",
      "id": "4b999cb5a07dfdce",
      "item": {
        "type": "paragraph",
        "id": "4b999cb5a07dfdce",
        "text": "Workflows avoid the unfortunate, inscrutable and wholly unintended feature interactions common in designed systems. "
      },
      "date": 1469298180133
    },
    {
      "type": "add",
      "id": "4b999cb5a07dfdce",
      "item": {
        "type": "paragraph",
        "id": "4b999cb5a07dfdce",
        "text": "Workflows avoid the unfortunate, inscrutable and wholly unintended feature interactions common in designed systems. "
      },
      "after": "9546cd7a78d5db48",
      "date": 1469298077327
    },
    {
      "type": "add",
      "id": "9546cd7a78d5db48",
      "item": {
        "type": "paragraph",
        "id": "9546cd7a78d5db48",
        "text": "Workflows might start life as a workaround for a missing feature only to be recognized later to be a versatile solution that does not require additional user affordance."
      },
      "after": "c8996bee85f30adc",
      "date": 1469297904653
    },
    {
      "type": "edit",
      "id": "c8996bee85f30adc",
      "item": {
        "type": "paragraph",
        "id": "c8996bee85f30adc",
        "text": "We rely on discovered sequences of primitive actions to complete tasks that might be directly supported by designed features in a monolithic system. Primitives, cautiously created when needs arise, are closely aligned with the necessary software operations."
      },
      "date": 1469297296992
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c8996bee85f30adc",
        "text": "We rely on discovered sequences of primitive actions to complete tasks that might be directly supported by designed features in a monolithic system. Primitives, cautiously created when needs arise, are closely aligned with the necessary software operations."
      },
      "id": "c8996bee85f30adc",
      "type": "add",
      "after": "9e53e8f4bb3a22ee",
      "date": 1469296630662
    },
    {
      "type": "edit",
      "id": "9e53e8f4bb3a22ee",
      "item": {
        "type": "paragraph",
        "id": "9e53e8f4bb3a22ee",
        "text": "Workflows describe productive activities that are well supported but not enforced by wiki."
      },
      "date": 1469296556729
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9e53e8f4bb3a22ee",
        "text": "Workflows describe productive activities that are well supported but not enforced by wiki."
      },
      "id": "9e53e8f4bb3a22ee",
      "type": "add",
      "date": 1469296517832
    },
    {
      "type": "create",
      "item": {
        "title": "Workflows",
        "story": []
      },
      "date": 1469246304478
    },
    {
      "type": "edit",
      "id": "1e9a50bac8da0d8c",
      "item": {
        "type": "markdown",
        "id": "1e9a50bac8da0d8c",
        "text": "Workflow tasks resemble functions (see [[Functions]]), the difference being that they process data stored in files (of sort `{{lzSort:file}}`) rather than represented by terms. We therefore use the same arrow notation for task sorts as for function sorts:\n\n"
      },
      "date": 1661776126002
    },
    {
      "id": "623694797d7ec299",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "623694797d7ec299",
        "eca565ba167f1624",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661776132389,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "eca565ba167f1624",
      "item": {
        "type": "markdown",
        "id": "eca565ba167f1624",
        "text": "Task composition, unlike function composition, is usually written from left to right, representing the flow of information\n"
      },
      "after": "1e9a50bac8da0d8c",
      "date": 1661776138904
    },
    {
      "item": {
        "type": "code",
        "id": "2ed67ad79afeccd6",
        "text": "{{lzOp: (inputs_:ùïä ‚Üí intermediate_:ùïä) ‚ßü (intermediate_:ùïä ‚Üí outputs_:ùïä) : (inputs_:ùïä ‚Üí outputs_:ùïä)}}"
      },
      "id": "2ed67ad79afeccd6",
      "type": "add",
      "after": "dd68067817607a58",
      "date": 1661776143356
    },
    {
      "id": "2ed67ad79afeccd6",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "623694797d7ec299",
        "eca565ba167f1624",
        "efb03a757f49e284",
        "2ed67ad79afeccd6",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661776157246
    },
    {
      "type": "edit",
      "id": "eca565ba167f1624",
      "item": {
        "type": "markdown",
        "id": "eca565ba167f1624",
        "text": "Task composition, unlike function composition, is usually written from left to right, representing the flow of information\n"
      },
      "date": 1661776164306
    },
    {
      "type": "edit",
      "id": "2ed67ad79afeccd6",
      "item": {
        "type": "code",
        "id": "2ed67ad79afeccd6",
        "text": "{{lzOp: (inputs_:ùïä ‚Üí intermediate_:ùïä) ‚ßü (intermediate_:ùïä ‚Üí outputs_:ùïä) : (inputs_:ùïä ‚Üí outputs_:ùïä)}}"
      },
      "date": 1661776165437
    },
    {
      "id": "2ed67ad79afeccd6",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "623694797d7ec299",
        "eca565ba167f1624",
        "2ed67ad79afeccd6",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661776167333
    },
    {
      "type": "fork",
      "date": 1661776173781
    },
    {
      "id": "623694797d7ec299",
      "type": "move",
      "order": [
        "93b2257f6da61fb5",
        "6c68b26d491e2dbf",
        "1e9a50bac8da0d8c",
        "623694797d7ec299",
        "eca565ba167f1624",
        "2ed67ad79afeccd6",
        "efb03a757f49e284",
        "9e53e8f4bb3a22ee",
        "c8996bee85f30adc",
        "9546cd7a78d5db48",
        "4b999cb5a07dfdce",
        "8226cf4cc09db588",
        "3ad1bf897c65a8dc",
        "0fd1c100885b236d",
        "eec77992cf2419e3",
        "5819956696e68942",
        "f7134154d7cf6127",
        "a9191b065dae7207",
        "f6a8c63111a92864",
        "92aab5e132f67f5b",
        "d8fde44bc415e4af",
        "c7aaa2b546f7bd58",
        "7b0abd2e9090e686",
        "e0b01f41e7a9dc70",
        "ee7c4cc04864c7ce",
        "eaef5f2f768712dd",
        "309a03e616c99de4",
        "dd68067817607a58"
      ],
      "date": 1661777436277
    }
  ]
}