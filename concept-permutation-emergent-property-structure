{
  "title": "Concept Permutation Emergent Property Structure",
  "story": [
    {
      "type": "html",
      "text": "The Concept Permutation Emergent Property Structure which I call an [[Endeme Set]] is a structure in which the relative priorities of concepts can be placed. Usually I list 22 concepts and then order them into an endeme to store a piece of information. That piece of information is an emergent property. Here is an example:",
      "id": "906b164bacf9045e2bc5d0e70cc59c31"
    },
    {
      "type": "code",
      "text": " Identity Name fields EndemeSet:",
      "id": "9bad8bcc02a457953e666d1aefedf487"
    },
    {
      "type": "code",
      "text": " ABCDEFGHIJKLMNOPQRSTUV|\n ----------------------+\n A                     |A. Alias\n  B             P      |B. Best/preferred\n   C  F                |C. Complete/full\n    D       L          |D. Documentary/literary\n     E             S   |E. Engaged's/spouse's\n      FG               |F. First/given\n       G               |G. Generational\n        H              |H. Handle\n         I             |I. Internet\n          J L          |J. Judicial/Legal name \n      F    K           |K. Kinship/father's\n      F     L          |L. Last/family\n             M         |M. Mother's\n              N        |N. Name\n               O       |O. Old\n                P      |P. Professional\n   C             Q     |Q. Quit/cut endeme\n                  R   V|R. Responsibility/virtual\n                   S   |S. Suffix\n                P   T  |T. Title/prefix\n                     U |U. Unknown identity\n   C                   |V. child's\n ----------------------+\n ABCDEFGHIJKLMNOPQRSTUV|",
      "id": "b615f4d873770ca5e9ea130d4c01d8ab"
    },
    {
      "type": "code",
      "text": " maiden name        = NLGO\n occupational name  = PT\n like to be called  = NB\n second middle name = LF\n former first name  = FO\n birthday           = DG\n Internet name      = NI\n Internet alias     = AI\n Internet handle    = HI\n nickname           = NH\n known pseudonym    = NA\n hidden pseudonym   = AN\n pseudonym          = ADQ",
      "id": "cc873e3e08fb312263935d66fee67801"
    },
    {
      "type": "code",
      "text": " Is not intended to be interpreted past the Q in this case.",
      "id": "819a1a1859dce4ed242cc94f4fcd0b3a"
    },
    {
      "type": "code",
      "text": " <field set=\"name\">\n   <f e=\"NF\">Jon</f>\n   <f e=\"NFL\">Robb</f>\n   <f e=\"NL\">Grover</f>\n   <f e=\"NFC\">Jonathan</f>\n   <f e=\"NBF\">Jack</f>\n   <f e=\"NI\">jonrgrover</f>\n   <f e=\"HI\">Random Axess</f>\n   <f e=\"NJ\">Jon Grover</f>\n   <f e=\"NH\">Jonny</f>\n   <f e=\"NLGO\">Smith</f>\n   <f e=\"NLGOM\">Tunney</f>\n   <f e=\"SP\">MD</f>\n   <f e=\"SG\">III</f>\n   <f e=\"TP\">Mr</f>\n   <f e=\"FK\">Jeffrey</f>\n </fields>",
      "id": "c1f8e052f2f31e2f4efaf8d96e599b0d"
    },
    {
      "type": "html",
      "text": "<i>Why is the above useful or desirable?</i>",
      "id": "9186b0edf018d21b0ead4276af3167fe"
    },
    {
      "type": "html",
      "text": "\n[[Endeme Set]]s make it possible or easier to:",
      "id": "1763cfe2f0e8b0fe7d353dcd849777ee"
    },
    {
      "type": "html",
      "text": " Index unorderable information",
      "id": "a2d1ae1373f9452954071e6c4579350c"
    },
    {
      "type": "html",
      "text": " Automate decision making",
      "id": "59fd26860d256d61a01b5da20e7486e1"
    },
    {
      "type": "html",
      "text": " Construct mutual languages between data formats or between people and data",
      "id": "b9ab3885b6feb471baf8f772272d13f0"
    },
    {
      "type": "html",
      "text": " Allocate resources",
      "id": "ab974e9b01583972b08ed19da9790895"
    },
    {
      "type": "html",
      "text": " Build [[Information Model]]s",
      "id": "a386bdf3f430e58c029396f8cce86aa8"
    },
    {
      "type": "html",
      "text": " Build an [[Information Layer]] that makes what is behind the scenes in a program more similar to what the customer/user needs than data is.",
      "id": "80fda450cfba7948c54c17e1568869be"
    },
    {
      "type": "html",
      "text": " Reduce interface complexity between multiple systems using an information layer as a central conversion layer",
      "id": "52707bc29990cac062a9b696eaa7532c"
    },
    {
      "type": "html",
      "text": " Reduce space requirements for sparsely used structured data structures such as xml",
      "id": "c603a1172bf1ed0e84bfd3bc1826184a"
    },
    {
      "type": "html",
      "text": " Reduce the number of screens for sparsely used data",
      "id": "5d50e1096ecf68620f0b8a848dde90ab"
    },
    {
      "type": "html",
      "text": " Manage people and groups with more precision",
      "id": "d7a8b5c6c1d9c40b1d9a6fdfbb45b321"
    },
    {
      "type": "html",
      "text": " Help users find buttons, and functions in a large complex menu hierarchy or application",
      "id": "a1e5fa134c85ec905346230bcb383112"
    },
    {
      "type": "html",
      "text": " Support a certain amount of natural language",
      "id": "db9ed24944132cce1d3bac2b225dac8d"
    },
    {
      "type": "html",
      "text": " Computational/artificial creativity",
      "id": "8b611d5a6983ba500809f23d41f1ae99"
    },
    {
      "type": "html",
      "text": " Partner human creativity with computer creativity",
      "id": "394b542a204e085e14553abadc512ce5"
    },
    {
      "type": "html",
      "text": " Add fields to a UI that have not been thought of until the user needs them",
      "id": "30642e0f44e080189ecddafff77a9226"
    },
    {
      "type": "html",
      "text": " Build genetic algorithms",
      "id": "0985ee576efd2fb8db611e911e1bc9d2"
    },
    {
      "type": "html",
      "text": " Perform signature recognition",
      "id": "e2504969dc6c004742c2e143be1e716e"
    },
    {
      "type": "html",
      "text": " Identify overlooked possibilities in a domain",
      "id": "7ae7491a7d7e8d961f5adb8e0ce0035d"
    },
    {
      "type": "html",
      "text": "-- [[Jon Grover]]",
      "id": "181d9ee189c1b8921b3a3cc0bfe6d7ea"
    },
    {
      "type": "html",
      "text": "<i>How do [[Endeme Set]]s make it possible or easier to do the above?</i>",
      "id": "aa5a86b96092092671b5cbc042eeee49"
    },
    {
      "type": "html",
      "text": "<i>In partial answer to my own question, I found a better example at [http://acblog.net//comments.php?id=100_0_1_0_C acblog.net]</i>",
      "id": "7488ac88118abf078af211dce9469a24"
    },
    {
      "type": "html",
      "text": "<i>It's a simple dictionary encoding scheme.  By way of analogy, in the same manner that XML generalises HTML, it seems to be an attempt at generalising the concept behind [[Geek Code]].</i>",
      "id": "23e22701274e061a0b1efba063b3c7dd"
    },
    {
      "type": "html",
      "text": "\n[[Category Endeme Set]], [[Category Information Orientation]]",
      "id": "ce65c811443f2edc66edd95a1e7cb83d"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ConceptPermutationEmergentPropertyStructure c2.com]",
      "id": "2ba15f4ba03f3806f53d065755bb18bb"
    }
  ],
  "journal": [
    {
      "date": 1418764883000,
      "id": "1b1054ff63e503a0da2d5f930602e2c8",
      "type": "create",
      "item": {
        "title": "Concept Permutation Emergent Property Structure",
        "story": [
          {
            "type": "html",
            "text": "The Concept Permutation Emergent Property Structure which I call an [[Endeme Set]] is a structure in which the relative priorities of concepts can be placed. Usually I list 22 concepts and then order them into an endeme to store a piece of information. That piece of information is an emergent property. Here is an example:",
            "id": "906b164bacf9045e2bc5d0e70cc59c31"
          },
          {
            "type": "code",
            "text": " Identity Name fields EndemeSet:",
            "id": "9bad8bcc02a457953e666d1aefedf487"
          },
          {
            "type": "code",
            "text": " ABCDEFGHIJKLMNOPQRSTUV|\n ----------------------+\n A                     |A. Alias\n  B             P      |B. Best/preferred\n   C  F                |C. Complete/full\n    D       L          |D. Documentary/literary\n     E             S   |E. Engaged's/spouse's\n      FG               |F. First/given\n       G               |G. Generational\n        H              |H. Handle\n         I             |I. Internet\n          J L          |J. Judicial/Legal name \n      F    K           |K. Kinship/father's\n      F     L          |L. Last/family\n             M         |M. Mother's\n              N        |N. Name\n               O       |O. Old\n                P      |P. Professional\n   C             Q     |Q. Quit/cut endeme\n                  R   V|R. Responsibility/virtual\n                   S   |S. Suffix\n                P   T  |T. Title/prefix\n                     U |U. Unknown identity\n   C                   |V. child's\n ----------------------+\n ABCDEFGHIJKLMNOPQRSTUV|",
            "id": "b615f4d873770ca5e9ea130d4c01d8ab"
          },
          {
            "type": "code",
            "text": " maiden name        = NLGO\n occupational name  = PT\n like to be called  = NB\n second middle name = LF\n former first name  = FO\n birthday           = DG\n Internet name      = NI\n Internet alias     = AI\n Internet handle    = HI\n nickname           = NH\n known pseudonym    = NA\n hidden pseudonym   = AN\n pseudonym          = ADQ",
            "id": "cc873e3e08fb312263935d66fee67801"
          },
          {
            "type": "code",
            "text": " Is not intended to be interpreted past the Q in this case.",
            "id": "819a1a1859dce4ed242cc94f4fcd0b3a"
          },
          {
            "type": "code",
            "text": " <field set=\"name\">\n   <f e=\"NF\">Jon</f>\n   <f e=\"NFL\">Robb</f>\n   <f e=\"NL\">Grover</f>\n   <f e=\"NFC\">Jonathan</f>\n   <f e=\"NBF\">Jack</f>\n   <f e=\"NI\">jonrgrover</f>\n   <f e=\"HI\">Random Axess</f>\n   <f e=\"NJ\">Jon Grover</f>\n   <f e=\"NH\">Jonny</f>\n   <f e=\"NLGO\">Smith</f>\n   <f e=\"NLGOM\">Tunney</f>\n   <f e=\"SP\">MD</f>\n   <f e=\"SG\">III</f>\n   <f e=\"TP\">Mr</f>\n   <f e=\"FK\">Jeffrey</f>\n </fields>",
            "id": "c1f8e052f2f31e2f4efaf8d96e599b0d"
          },
          {
            "type": "html",
            "text": "<i>Why is the above useful or desirable?</i>",
            "id": "9186b0edf018d21b0ead4276af3167fe"
          },
          {
            "type": "html",
            "text": "\n[[Endeme Set]]s make it possible or easier to:",
            "id": "1763cfe2f0e8b0fe7d353dcd849777ee"
          },
          {
            "type": "html",
            "text": " Index unorderable information",
            "id": "a2d1ae1373f9452954071e6c4579350c"
          },
          {
            "type": "html",
            "text": " Automate decision making",
            "id": "59fd26860d256d61a01b5da20e7486e1"
          },
          {
            "type": "html",
            "text": " Construct mutual languages between data formats or between people and data",
            "id": "b9ab3885b6feb471baf8f772272d13f0"
          },
          {
            "type": "html",
            "text": " Allocate resources",
            "id": "ab974e9b01583972b08ed19da9790895"
          },
          {
            "type": "html",
            "text": " Build [[Information Model]]s",
            "id": "a386bdf3f430e58c029396f8cce86aa8"
          },
          {
            "type": "html",
            "text": " Build an [[Information Layer]] that makes what is behind the scenes in a program more similar to what the customer/user needs than data is.",
            "id": "80fda450cfba7948c54c17e1568869be"
          },
          {
            "type": "html",
            "text": " Reduce interface complexity between multiple systems using an information layer as a central conversion layer",
            "id": "52707bc29990cac062a9b696eaa7532c"
          },
          {
            "type": "html",
            "text": " Reduce space requirements for sparsely used structured data structures such as xml",
            "id": "c603a1172bf1ed0e84bfd3bc1826184a"
          },
          {
            "type": "html",
            "text": " Reduce the number of screens for sparsely used data",
            "id": "5d50e1096ecf68620f0b8a848dde90ab"
          },
          {
            "type": "html",
            "text": " Manage people and groups with more precision",
            "id": "d7a8b5c6c1d9c40b1d9a6fdfbb45b321"
          },
          {
            "type": "html",
            "text": " Help users find buttons, and functions in a large complex menu hierarchy or application",
            "id": "a1e5fa134c85ec905346230bcb383112"
          },
          {
            "type": "html",
            "text": " Support a certain amount of natural language",
            "id": "db9ed24944132cce1d3bac2b225dac8d"
          },
          {
            "type": "html",
            "text": " Computational/artificial creativity",
            "id": "8b611d5a6983ba500809f23d41f1ae99"
          },
          {
            "type": "html",
            "text": " Partner human creativity with computer creativity",
            "id": "394b542a204e085e14553abadc512ce5"
          },
          {
            "type": "html",
            "text": " Add fields to a UI that have not been thought of until the user needs them",
            "id": "30642e0f44e080189ecddafff77a9226"
          },
          {
            "type": "html",
            "text": " Build genetic algorithms",
            "id": "0985ee576efd2fb8db611e911e1bc9d2"
          },
          {
            "type": "html",
            "text": " Perform signature recognition",
            "id": "e2504969dc6c004742c2e143be1e716e"
          },
          {
            "type": "html",
            "text": " Identify overlooked possibilities in a domain",
            "id": "7ae7491a7d7e8d961f5adb8e0ce0035d"
          },
          {
            "type": "html",
            "text": "-- [[Jon Grover]]",
            "id": "181d9ee189c1b8921b3a3cc0bfe6d7ea"
          },
          {
            "type": "html",
            "text": "<i>How do [[Endeme Set]]s make it possible or easier to do the above?</i>",
            "id": "aa5a86b96092092671b5cbc042eeee49"
          },
          {
            "type": "html",
            "text": "<i>In partial answer to my own question, I found a better example at [http://acblog.net//comments.php?id=100_0_1_0_C acblog.net]</i>",
            "id": "7488ac88118abf078af211dce9469a24"
          },
          {
            "type": "html",
            "text": "<i>It's a simple dictionary encoding scheme.  By way of analogy, in the same manner that XML generalises HTML, it seems to be an attempt at generalising the concept behind [[Geek Code]].</i>",
            "id": "23e22701274e061a0b1efba063b3c7dd"
          },
          {
            "type": "html",
            "text": "\n[[Category Endeme Set]], [[Category Information Orientation]]",
            "id": "ce65c811443f2edc66edd95a1e7cb83d"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ConceptPermutationEmergentPropertyStructure c2.com]",
            "id": "2ba15f4ba03f3806f53d065755bb18bb"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1628688766972
    }
  ]
}