{
  "title": "Technique",
  "story": [
    {
      "type": "paragraph",
      "id": "482a591b6b7b1599",
      "text": "Programmers must master and apply techniques that preserve flexibility within their code. We say code is \"clean\" when decisions already made are expressed with appropriate abstraction and inconsequential decisions have been removed or avoided entirely. [[S7]]"
    },
    {
      "type": "paragraph",
      "id": "4b4254a15c482795",
      "text": "Code cleanliness itself requires judgement decisions that improve with experience. Extreme programming expects mastery here and will allow the team whatever time they need to achieve it to their own satisfaction. The customer is not qualified to pass judgement regarding the code. [[S8]]"
    },
    {
      "type": "paragraph",
      "id": "1bbe616e59065891",
      "text": "The customer has their own decisions to make about the future functionality. Developers can offer complexity estimates in the units of past velocity so that customers can prioritize the work they ask of developers. [[S9]]"
    },
    {
      "type": "pagefold",
      "id": "74a63fdf1b911b2e",
      "text": "."
    },
    {
      "type": "graphviz",
      "id": "8359dca181bc3daf",
      "text": "DOT FROM section-diagram",
      "dot": "strict digraph {node [shape=box style=filled]\nnode [fillcolor=palegreen]\n\"Technique\"\nnode [fillcolor=lightblue]\n\"Technique\" -> \"S7\"\n\"Technique\" -> \"S8\"\n\"Technique\" -> \"S9\"\n\"S7\"\nnode [fillcolor=bisque]\n\"S7\" -> \"Outmaneuvering\nConstraints\"\n\"S8\"\nnode [fillcolor=bisque]\n\"S8\" -> \"Outmaneuvering\nConstraints\"\n\"S9\"\nnode [fillcolor=bisque]\n\"S9\" -> \"Outmaneuvering\nConstraints\"}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.44.0 (20200518.1210)\n -->\n<!-- Pages: 1 -->\n<svg width=\"206pt\" height=\"194pt\"\n viewBox=\"0.00 0.00 206.00 193.60\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 189.6)\">\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-189.6 202,-189.6 202,4 -4,4\"/>\n<!-- Technique -->\n<g id=\"node1\" class=\"node\">\n<title>Technique</title>\n<polygon fill=\"palegreen\" stroke=\"black\" points=\"136.59,-185.6 61.41,-185.6 61.41,-149.6 136.59,-149.6 136.59,-185.6\"/>\n<text text-anchor=\"middle\" x=\"99\" y=\"-163.4\" font-family=\"Times,serif\" font-size=\"14.00\">Technique</text>\n</g>\n<!-- S7 -->\n<g id=\"node2\" class=\"node\">\n<title>S7</title>\n<polygon fill=\"lightblue\" stroke=\"black\" points=\"54,-113.6 0,-113.6 0,-77.6 54,-77.6 54,-113.6\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-91.4\" font-family=\"Times,serif\" font-size=\"14.00\">S7</text>\n</g>\n<!-- Technique&#45;&gt;S7 -->\n<g id=\"edge1\" class=\"edge\">\n<title>Technique&#45;&gt;S7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M81.2,-149.3C72.4,-140.74 61.62,-130.26 52,-120.9\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"54.2,-118.17 44.59,-113.7 49.32,-123.18 54.2,-118.17\"/>\n</g>\n<!-- S8 -->\n<g id=\"node3\" class=\"node\">\n<title>S8</title>\n<polygon fill=\"lightblue\" stroke=\"black\" points=\"126,-113.6 72,-113.6 72,-77.6 126,-77.6 126,-113.6\"/>\n<text text-anchor=\"middle\" x=\"99\" y=\"-91.4\" font-family=\"Times,serif\" font-size=\"14.00\">S8</text>\n</g>\n<!-- Technique&#45;&gt;S8 -->\n<g id=\"edge2\" class=\"edge\">\n<title>Technique&#45;&gt;S8</title>\n<path fill=\"none\" stroke=\"black\" d=\"M99,-149.3C99,-141.58 99,-132.31 99,-123.71\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"102.5,-123.7 99,-113.7 95.5,-123.7 102.5,-123.7\"/>\n</g>\n<!-- S9 -->\n<g id=\"node4\" class=\"node\">\n<title>S9</title>\n<polygon fill=\"lightblue\" stroke=\"black\" points=\"198,-113.6 144,-113.6 144,-77.6 198,-77.6 198,-113.6\"/>\n<text text-anchor=\"middle\" x=\"171\" y=\"-91.4\" font-family=\"Times,serif\" font-size=\"14.00\">S9</text>\n</g>\n<!-- Technique&#45;&gt;S9 -->\n<g id=\"edge3\" class=\"edge\">\n<title>Technique&#45;&gt;S9</title>\n<path fill=\"none\" stroke=\"black\" d=\"M116.8,-149.3C125.6,-140.74 136.38,-130.26 146,-120.9\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"148.68,-123.18 153.41,-113.7 143.8,-118.17 148.68,-123.18\"/>\n</g>\n<!-- Outmaneuvering\nConstraints -->\n<g id=\"node5\" class=\"node\">\n<title>Outmaneuvering\nConstraints</title>\n<polygon fill=\"bisque\" stroke=\"black\" points=\"154.08,-41.4 43.92,-41.4 43.92,-0.2 154.08,-0.2 154.08,-41.4\"/>\n<text text-anchor=\"middle\" x=\"99\" y=\"-25\" font-family=\"Times,serif\" font-size=\"14.00\">Outmaneuvering</text>\n<text text-anchor=\"middle\" x=\"99\" y=\"-8.2\" font-family=\"Times,serif\" font-size=\"14.00\">Constraints</text>\n</g>\n<!-- S7&#45;&gt;Outmaneuvering\nConstraints -->\n<g id=\"edge4\" class=\"edge\">\n<title>S7&#45;&gt;Outmaneuvering\nConstraints</title>\n<path fill=\"none\" stroke=\"black\" d=\"M44.06,-77.35C52.46,-68.85 62.79,-58.42 72.21,-48.89\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"74.97,-51.07 79.52,-41.5 70,-46.15 74.97,-51.07\"/>\n</g>\n<!-- S8&#45;&gt;Outmaneuvering\nConstraints -->\n<g id=\"edge5\" class=\"edge\">\n<title>S8&#45;&gt;Outmaneuvering\nConstraints</title>\n<path fill=\"none\" stroke=\"black\" d=\"M99,-77.35C99,-69.69 99,-60.46 99,-51.74\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"102.5,-51.5 99,-41.5 95.5,-51.5 102.5,-51.5\"/>\n</g>\n<!-- S9&#45;&gt;Outmaneuvering\nConstraints -->\n<g id=\"edge6\" class=\"edge\">\n<title>S9&#45;&gt;Outmaneuvering\nConstraints</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.94,-77.35C145.54,-68.85 135.21,-58.42 125.79,-48.89\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"128,-46.15 118.48,-41.5 123.03,-51.07 128,-46.15\"/>\n</g>\n</g>\n</svg>\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Technique",
        "story": [
          {
            "type": "paragraph",
            "id": "d1fdbd95afea2373",
            "text": "Original paragraphs go here followed by links to applicable statements [[S1]] to [[S10]]."
          },
          {
            "type": "pagefold",
            "id": "74a63fdf1b911b2e",
            "text": "."
          },
          {
            "type": "graphviz",
            "id": "8359dca181bc3daf",
            "text": "DOT FROM section-diagram"
          }
        ]
      },
      "date": 1554576056994
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "482a591b6b7b1599",
        "text": "Programmers must master and apply techniques that preserve flexibility within their code. We say code is \"clean\" when decisions already made are expressed with appropriate abstraction and inconsequential decisions have been removed or avoided entirely."
      },
      "id": "482a591b6b7b1599",
      "date": 1554576063103
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4b4254a15c482795",
        "text": "Code cleanliness itself requires judgement decisions that improve with experience. Extreme programming expects mastery here and will allow the team whatever time they need to achieve it to their own satisfaction. The customer is not qualified to pass judgement regarding the code."
      },
      "after": "482a591b6b7b1599",
      "id": "4b4254a15c482795",
      "date": 1554576066398
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1bbe616e59065891",
        "text": "The customer has their own decisions to make about the future functionality. Developers can offer complexity estimates in the units of past velocity so that customers can prioritize the work they ask of developers."
      },
      "after": "4b4254a15c482795",
      "id": "1bbe616e59065891",
      "date": 1554576070237
    },
    {
      "type": "edit",
      "id": "482a591b6b7b1599",
      "item": {
        "type": "paragraph",
        "id": "482a591b6b7b1599",
        "text": "Programmers must master and apply techniques that preserve flexibility within their code. We say code is \"clean\" when decisions already made are expressed with appropriate abstraction and inconsequential decisions have been removed or avoided entirely. [[S7]]"
      },
      "date": 1554578084410
    },
    {
      "type": "edit",
      "id": "4b4254a15c482795",
      "item": {
        "type": "paragraph",
        "id": "4b4254a15c482795",
        "text": "Code cleanliness itself requires judgement decisions that improve with experience. Extreme programming expects mastery here and will allow the team whatever time they need to achieve it to their own satisfaction. The customer is not qualified to pass judgement regarding the code. [[S8]]"
      },
      "date": 1554578141266
    },
    {
      "type": "edit",
      "id": "1bbe616e59065891",
      "item": {
        "type": "paragraph",
        "id": "1bbe616e59065891",
        "text": "The customer has their own decisions to make about the future functionality. Developers can offer complexity estimates in the units of past velocity so that customers can prioritize the work they ask of developers. [[S9]]"
      },
      "date": 1554578177439
    },
    {
      "type": "remove",
      "id": "d1fdbd95afea2373",
      "date": 1554578185653
    },
    {
      "type": "fork",
      "site": "norms.ward.asia.wiki.org",
      "date": 1628404909689
    }
  ]
}