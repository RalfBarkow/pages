{
  "title": "Traversal-Enabled Pharo Objects",
  "story": [
    {
      "type": "paragraph",
      "id": "edbe765e4a279297",
      "text": "Objects form complicated graphs. Understanding complicated graphs requires a broader perspective on these graphs. Yet, developers are most often exposed to only one node at a time, and there are limited tools available to navigating and slicing these graphs. "
    },
    {
      "type": "markdown",
      "id": "82a8fa45a8ede7f4",
      "text": "http://www.humane-assessment.com/blog/traversal-enabled-pharo-objects\n"
    },
    {
      "type": "markdown",
      "id": "d9d647cb2f137340",
      "text": "Posted by [[Tudor Girba]] at 11 December 2013, 4:14 pm with tags moose, pharo, tooling, analysis, assessment link"
    },
    {
      "type": "markdown",
      "id": "ad00ab5a6aeb7173",
      "text": "To understand graphs, you need to traverse them. This need is often observed in traversal methods directly written inside the domain classes. For example, to get all subclasses of a given class, we have `Object>>#allSubclasses`. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Traversal-Enabled Pharo Objects",
        "story": []
      },
      "date": 1636380027731
    },
    {
      "item": {
        "type": "factory",
        "id": "82a8fa45a8ede7f4"
      },
      "id": "82a8fa45a8ede7f4",
      "type": "add",
      "date": 1636380028857
    },
    {
      "type": "edit",
      "id": "82a8fa45a8ede7f4",
      "item": {
        "type": "markdown",
        "id": "82a8fa45a8ede7f4",
        "text": "http://www.humane-assessment.com/blog/traversal-enabled-pharo-objects"
      },
      "date": 1636380038669
    },
    {
      "item": {
        "type": "factory",
        "id": "edbe765e4a279297"
      },
      "id": "edbe765e4a279297",
      "type": "add",
      "after": "82a8fa45a8ede7f4",
      "date": 1636380074762
    },
    {
      "type": "edit",
      "id": "edbe765e4a279297",
      "item": {
        "type": "paragraph",
        "id": "edbe765e4a279297",
        "text": "Objects form complicated graphs. Understanding complicated graphs requires a broader perspective on these graphs. Yet, developers are most often exposed to only one node at a time, and there are limited tools available to navigating and slicing these graphs. "
      },
      "date": 1636380079218
    },
    {
      "id": "edbe765e4a279297",
      "type": "move",
      "order": [
        "edbe765e4a279297",
        "82a8fa45a8ede7f4"
      ],
      "date": 1636380081607
    },
    {
      "item": {
        "type": "factory",
        "id": "677ead368841b23a"
      },
      "id": "677ead368841b23a",
      "type": "add",
      "after": "82a8fa45a8ede7f4",
      "date": 1636380208185
    },
    {
      "type": "edit",
      "id": "677ead368841b23a",
      "item": {
        "type": "paragraph",
        "id": "677ead368841b23a",
        "text": "To understand graphs, you need to traverse them. This need is often observed in traversal methods directly written inside the domain classes. For example, to get all subclasses of a given class, we have Object>>#allSubclasses. "
      },
      "date": 1636380211635
    },
    {
      "type": "edit",
      "id": "82a8fa45a8ede7f4",
      "item": {
        "type": "markdown",
        "id": "82a8fa45a8ede7f4",
        "text": "http://www.humane-assessment.com/blog/traversal-enabled-pharo-objects\n"
      },
      "date": 1636380224491
    },
    {
      "type": "add",
      "id": "d9d647cb2f137340",
      "item": {
        "type": "markdown",
        "id": "d9d647cb2f137340",
        "text": "Posted by Tudor Girba at 11 December 2013, 4:14 pm with tags moose, pharo, tooling, analysis, assessment link"
      },
      "after": "82a8fa45a8ede7f4",
      "date": 1636380232794
    },
    {
      "type": "edit",
      "id": "677ead368841b23a",
      "item": {
        "type": "paragraph",
        "id": "677ead368841b23a",
        "text": "To understand graphs, you need to traverse them. This need is often observed in traversal methods directly written inside the domain classes. For example, to get all subclasses of a given class, we have `Object>>#allSubclasses`. "
      },
      "date": 1636380273490
    },
    {
      "item": {
        "type": "factory",
        "id": "ad00ab5a6aeb7173"
      },
      "id": "ad00ab5a6aeb7173",
      "type": "add",
      "after": "677ead368841b23a",
      "date": 1636380279356
    },
    {
      "type": "remove",
      "id": "677ead368841b23a",
      "date": 1636380280781
    },
    {
      "type": "edit",
      "id": "ad00ab5a6aeb7173",
      "item": {
        "type": "markdown",
        "id": "ad00ab5a6aeb7173",
        "text": "To understand graphs, you need to traverse them. This need is often observed in traversal methods directly written inside the domain classes. For example, to get all subclasses of a given class, we have `Object>>#allSubclasses`. "
      },
      "date": 1636380281927
    },
    {
      "type": "edit",
      "id": "d9d647cb2f137340",
      "item": {
        "type": "markdown",
        "id": "d9d647cb2f137340",
        "text": "Posted by [[Tudor Girba]] at 11 December 2013, 4:14 pm with tags moose, pharo, tooling, analysis, assessment link"
      },
      "date": 1636380319093
    }
  ]
}