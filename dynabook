{
  "title": "Dynabook",
  "story": [
    {
      "type": "paragraph",
      "id": "0a1fcd38a71d06b8",
      "text": "Although we have to admit that at heart we are not programmers, but [[Dynabook]] fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any [[Blue Plane]] ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now [[Bloc]] which seems fraught with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
    },
    {
      "type": "pagefold",
      "id": "122f07cebadfeb8d",
      "text": "DE"
    },
    {
      "type": "paragraph",
      "id": "a0dee1c162377780",
      "text": "Obwohl wir zugeben müssen, dass wir im Grunde unseres Herzens keine Programmierer, sondern Dynabook-Fanatiker sind, war es emotional schwierig, endloses Hacken zu sehen, das nie zu einem System zu führen scheint, das dem Traum nahe kommt. Zen und die Kunst der Motorradwartung spricht von einem Ideal, bei dem statische (konservativ, traditionell, die Dinge so lassen wie sie sind) und dynamische (Fortschritt, Experimentieren, Evolution) eine Rückkopplungsschleife bilden, in der die guten Teile der letzten Evolution als statische Grundlage für den nächsten dynamischen Sprung fixiert werden. Leider scheinen wir in der Praxis nur die beiden Extreme zur Verfügung zu haben: die statischen Ideen aus dem letzten Jahrhundert, die hinter Windows und Mac stehen, und ein ständiger Strom von Papieren, Theorien und Experimenten der echten Visionäre (hust, nicht Steve Jobs, die echten). Uns ist klar, dass das Modell der letzteren der Bau von Kathedralen ist und die Hunderte von Jahren vom Buchdruck bis zu sattelfesten Büchern abkürzt, aber wir können uns des Eindrucks nicht erwehren, dass das Hinterlassen einer Spur brauchbarer Artefakte so viel mehr Menschen an Bord bringen würde, die mit etwas Realem spielen und etwas schaffen. Als wir Squeak entdeckten, machten wir uns sofort an die Arbeit mit unserem neuen Dynabook, aber die Morphic-Säuberung, die nie stattfand, zerstörte schnell unsere Träume von irgendwelchen Blue-Plane-Ideen und wir gingen zurück in den Winterschlaf, um auf eine Säuberung zu warten, und dann Morphic 3, das nie integriert wurde, und dann Frankenstein, das nie öffentlich zur Nutzung verfügbar war, und jetzt [[Bloc]], das voller politischer Kontroversen zu sein scheint... - 24.4.2020 auf {{gtWikiPage:SqueakReunion}}.\n"
    },
    {
      "type": "reference",
      "id": "8c9f825c4b818b3d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "perfection-and-feedback-loops-",
      "title": "Perfection And Feedback Loops ",
      "text": "https://www.slideshare.net/MarcusDenker/perfection-feedback-loops-or-why-worse-is-better-65540840"
    },
    {
      "type": "video",
      "id": "904e1352f11e5277",
      "text": "YOUTUBE wP4FUhI2-mU\nThe Dynabook as a tool for Research and Development by [[Juan Vuletich]]"
    },
    {
      "type": "paragraph",
      "id": "8e608e2a2252b1d2",
      "text": "Software is usually seen as the means to solve a problem by computer. Science is usually seen as a buildup of knowledge that can be mined for ideas to solve problems. Keeping Software Development and Scientific Research as two separated activities limits the quality of the former and the applicability of the latter. We describe an approach to scientific research and software development that builds on the ideas and practices of Experimental Mathematics, and best practices in Software Development, and results in an integrated process and tools. The result is a body of knowledge that satisfies the requirements to be considered serious research, and provides useful building blocks for real world software applications."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Dynabook",
        "story": []
      },
      "date": 1636144706421
    },
    {
      "item": {
        "type": "factory",
        "id": "0a1fcd38a71d06b8"
      },
      "id": "0a1fcd38a71d06b8",
      "type": "add",
      "date": 1636144716417
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but Dynabook fanatics and it's been emotionally difficult to see neverending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last tevolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). I realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but I can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When I discovered Squeak, I got right to work with my new Dynabook, but the Morphic clean up that never happened quickly crushed my dreams of any Blue Plane ideas and I went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now Bloc which seems frought with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1636144790749
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but Dynabook fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any Blue Plane ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now Bloc which seems frought with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1636144928949
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but Dynabook fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any Blue Plane ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now Bloc which seems fraught with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1636145123562
    },
    {
      "item": {
        "type": "factory",
        "id": "122f07cebadfeb8d"
      },
      "id": "122f07cebadfeb8d",
      "type": "add",
      "after": "0a1fcd38a71d06b8",
      "date": 1640066530127
    },
    {
      "type": "edit",
      "id": "122f07cebadfeb8d",
      "item": {
        "type": "pagefold",
        "id": "122f07cebadfeb8d",
        "text": "DE"
      },
      "date": 1640066533001
    },
    {
      "item": {
        "type": "factory",
        "id": "a0dee1c162377780"
      },
      "id": "a0dee1c162377780",
      "type": "add",
      "after": "122f07cebadfeb8d",
      "date": 1640066534393
    },
    {
      "type": "edit",
      "id": "a0dee1c162377780",
      "item": {
        "type": "paragraph",
        "id": "a0dee1c162377780",
        "text": "Obwohl wir zugeben müssen, dass wir im Grunde unseres Herzens keine Programmierer, sondern Dynabook-Fanatiker sind, war es emotional schwierig, endloses Hacken zu sehen, das nie zu einem System zu führen scheint, das dem Traum nahe kommt. Zen und die Kunst der Motorradwartung\" spricht von einem Ideal, bei dem statische (konservativ, traditionell, die Dinge so lassen wie sie sind) und dynamische (Fortschritt, Experimentieren, Evolution) eine Rückkopplungsschleife bilden, in der die guten Teile der letzten Evolution als statische Grundlage für den nächsten dynamischen Sprung fixiert werden. Leider scheinen wir in der Praxis nur die beiden Extreme zur Verfügung zu haben: die statischen Ideen aus dem letzten Jahrhundert, die hinter Windows und Mac stehen, und ein ständiger Strom von Papieren, Theorien und Experimenten der echten Visionäre (hust, nicht Steve Jobs, die echten). Uns ist klar, dass das Modell der letzteren der Bau von Kathedralen ist und die Hunderte von Jahren vom Buchdruck bis zu sattelfesten Büchern abkürzt, aber wir können uns des Eindrucks nicht erwehren, dass das Hinterlassen einer Spur brauchbarer Artefakte so viel mehr Menschen an Bord bringen würde, die mit etwas Realem spielen und etwas schaffen. Als wir Squeak entdeckten, machten wir uns sofort an die Arbeit mit unserem neuen Dynabook, aber die Morphic-Säuberung, die nie stattfand, zerstörte schnell unsere Träume von irgendwelchen Blue-Plane-Ideen und wir gingen zurück in den Winterschlaf, um auf eine Säuberung zu warten, und dann Morphic 3, das nie integriert wurde, und dann Frankenstein, das nie öffentlich zur Nutzung verfügbar war, und jetzt Bloc, das voller politischer Kontroversen zu sein scheint... - 24.4.2020 auf {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1640066537030
    },
    {
      "type": "edit",
      "id": "a0dee1c162377780",
      "item": {
        "type": "paragraph",
        "id": "a0dee1c162377780",
        "text": "Obwohl wir zugeben müssen, dass wir im Grunde unseres Herzens keine Programmierer, sondern Dynabook-Fanatiker sind, war es emotional schwierig, endloses Hacken zu sehen, das nie zu einem System zu führen scheint, das dem Traum nahe kommt. Zen und die Kunst der Motorradwartung spricht von einem Ideal, bei dem statische (konservativ, traditionell, die Dinge so lassen wie sie sind) und dynamische (Fortschritt, Experimentieren, Evolution) eine Rückkopplungsschleife bilden, in der die guten Teile der letzten Evolution als statische Grundlage für den nächsten dynamischen Sprung fixiert werden. Leider scheinen wir in der Praxis nur die beiden Extreme zur Verfügung zu haben: die statischen Ideen aus dem letzten Jahrhundert, die hinter Windows und Mac stehen, und ein ständiger Strom von Papieren, Theorien und Experimenten der echten Visionäre (hust, nicht Steve Jobs, die echten). Uns ist klar, dass das Modell der letzteren der Bau von Kathedralen ist und die Hunderte von Jahren vom Buchdruck bis zu sattelfesten Büchern abkürzt, aber wir können uns des Eindrucks nicht erwehren, dass das Hinterlassen einer Spur brauchbarer Artefakte so viel mehr Menschen an Bord bringen würde, die mit etwas Realem spielen und etwas schaffen. Als wir Squeak entdeckten, machten wir uns sofort an die Arbeit mit unserem neuen Dynabook, aber die Morphic-Säuberung, die nie stattfand, zerstörte schnell unsere Träume von irgendwelchen Blue-Plane-Ideen und wir gingen zurück in den Winterschlaf, um auf eine Säuberung zu warten, und dann Morphic 3, das nie integriert wurde, und dann Frankenstein, das nie öffentlich zur Nutzung verfügbar war, und jetzt Bloc, das voller politischer Kontroversen zu sein scheint... - 24.4.2020 auf {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1640066564826
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but Dynabook fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any [[Blue Plane]] ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now Bloc which seems fraught with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1640066634443
    },
    {
      "type": "edit",
      "id": "a0dee1c162377780",
      "item": {
        "type": "paragraph",
        "id": "a0dee1c162377780",
        "text": "Obwohl wir zugeben müssen, dass wir im Grunde unseres Herzens keine Programmierer, sondern Dynabook-Fanatiker sind, war es emotional schwierig, endloses Hacken zu sehen, das nie zu einem System zu führen scheint, das dem Traum nahe kommt. Zen und die Kunst der Motorradwartung spricht von einem Ideal, bei dem statische (konservativ, traditionell, die Dinge so lassen wie sie sind) und dynamische (Fortschritt, Experimentieren, Evolution) eine Rückkopplungsschleife bilden, in der die guten Teile der letzten Evolution als statische Grundlage für den nächsten dynamischen Sprung fixiert werden. Leider scheinen wir in der Praxis nur die beiden Extreme zur Verfügung zu haben: die statischen Ideen aus dem letzten Jahrhundert, die hinter Windows und Mac stehen, und ein ständiger Strom von Papieren, Theorien und Experimenten der echten Visionäre (hust, nicht Steve Jobs, die echten). Uns ist klar, dass das Modell der letzteren der Bau von Kathedralen ist und die Hunderte von Jahren vom Buchdruck bis zu sattelfesten Büchern abkürzt, aber wir können uns des Eindrucks nicht erwehren, dass das Hinterlassen einer Spur brauchbarer Artefakte so viel mehr Menschen an Bord bringen würde, die mit etwas Realem spielen und etwas schaffen. Als wir Squeak entdeckten, machten wir uns sofort an die Arbeit mit unserem neuen Dynabook, aber die Morphic-Säuberung, die nie stattfand, zerstörte schnell unsere Träume von irgendwelchen Blue-Plane-Ideen und wir gingen zurück in den Winterschlaf, um auf eine Säuberung zu warten, und dann Morphic 3, das nie integriert wurde, und dann Frankenstein, das nie öffentlich zur Nutzung verfügbar war, und jetzt [[Bloc]], das voller politischer Kontroversen zu sein scheint... - 24.4.2020 auf {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1640066690345
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but Dynabook fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any [[Blue Plane]] ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now [[Bloc]] which seems fraught with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1640066828038
    },
    {
      "item": {
        "type": "factory",
        "id": "8c9f825c4b818b3d"
      },
      "id": "8c9f825c4b818b3d",
      "type": "add",
      "after": "a0dee1c162377780",
      "date": 1640067461879
    },
    {
      "type": "edit",
      "id": "8c9f825c4b818b3d",
      "item": {
        "type": "reference",
        "id": "8c9f825c4b818b3d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "perfection-and-feedback-loops-",
        "title": "Perfection And Feedback Loops ",
        "text": "https://www.slideshare.net/MarcusDenker/perfection-feedback-loops-or-why-worse-is-better-65540840"
      },
      "date": 1640067463943
    },
    {
      "item": {
        "type": "factory",
        "id": "904e1352f11e5277"
      },
      "id": "904e1352f11e5277",
      "type": "add",
      "after": "8c9f825c4b818b3d",
      "date": 1640067931581
    },
    {
      "type": "edit",
      "id": "904e1352f11e5277",
      "item": {
        "type": "video",
        "id": "904e1352f11e5277",
        "text": "YOUTUBE wP4FUhI2-mU"
      },
      "date": 1640067946255
    },
    {
      "type": "edit",
      "id": "904e1352f11e5277",
      "item": {
        "type": "video",
        "id": "904e1352f11e5277",
        "text": "YOUTUBE wP4FUhI2-mU\nThe Dynabook as a tool for Research and Development"
      },
      "date": 1640067964456
    },
    {
      "type": "edit",
      "id": "0a1fcd38a71d06b8",
      "item": {
        "type": "paragraph",
        "id": "0a1fcd38a71d06b8",
        "text": "Although we have to admit that at heart we are not programmers, but [[Dynabook]] fanatics and it's been emotionally difficult to see never-ending hacking that never seems to lead to a system that touches the dream. Zen and the Art of Motorcycle Maintenance talks about an ideal where static (conservative, traditional, keep things as they are) and dynamic (progress, experimentation, evolution) form a feedback loop where the good parts of the last evolution become fixed as a static foundation for the next dynamic leap. Unfortunately, in practice we seem to only have the extremes available: the static last century ideas behind Windows and Mac and a steady stream of papers, theories and experiments from the real visionaries (cough, not Steve Jobs, the real ones). We realize that the model of the latter is cathedral building and shortening the hundreds of years from printing press to saddle-sized books, but we can't help but think that leaving a trail of usable artifacts would bring so many more people on board, playing and creating with something real. When we discovered Squeak, we got right to work with our new Dynabook, but the Morphic clean up that never happened quickly crushed our dreams of any [[Blue Plane]] ideas and we went back to hibernation waiting for a cleanup, and then Morphic 3 which was never integrated and then Frankenstein which was never publicly available for use and now [[Bloc]] which seems fraught with political controversy... - 4/24/2020 on {{gtWikiPage:SqueakReunion}}.\n"
      },
      "date": 1645435396065
    },
    {
      "item": {
        "type": "factory",
        "id": "8e608e2a2252b1d2"
      },
      "id": "8e608e2a2252b1d2",
      "type": "add",
      "after": "904e1352f11e5277",
      "date": 1645435540777
    },
    {
      "type": "edit",
      "id": "8e608e2a2252b1d2",
      "item": {
        "type": "paragraph",
        "id": "8e608e2a2252b1d2",
        "text": "Speaker: Juan Vuletich\nSoftware is usually seen as the means to solve a problem by computer. Science is usually seen as a buildup of knowledge that can be mined for ideas to solve problems. Keeping Software Development and Scientific Research as two separated activities limits the quality of the former and the applicability of the latter. We describe an approach to scientific research and software development that builds on the ideas and practices of Experimental Mathematics, and best practices in Software Development, and results in an integrated process and tools. The result is a body of knowledge that satisfies the requirements to be considered serious research, and provides useful building blocks for real world software applications."
      },
      "date": 1645435542663
    },
    {
      "type": "edit",
      "id": "8e608e2a2252b1d2",
      "item": {
        "type": "paragraph",
        "id": "8e608e2a2252b1d2",
        "text": "Speaker: \nSoftware is usually seen as the means to solve a problem by computer. Science is usually seen as a buildup of knowledge that can be mined for ideas to solve problems. Keeping Software Development and Scientific Research as two separated activities limits the quality of the former and the applicability of the latter. We describe an approach to scientific research and software development that builds on the ideas and practices of Experimental Mathematics, and best practices in Software Development, and results in an integrated process and tools. The result is a body of knowledge that satisfies the requirements to be considered serious research, and provides useful building blocks for real world software applications."
      },
      "date": 1645435555287
    },
    {
      "type": "edit",
      "id": "904e1352f11e5277",
      "item": {
        "type": "video",
        "id": "904e1352f11e5277",
        "text": "YOUTUBE wP4FUhI2-mU\nThe Dynabook as a tool for Research and Development by [[Juan Vuletich]]"
      },
      "date": 1645435562676
    },
    {
      "type": "edit",
      "id": "8e608e2a2252b1d2",
      "item": {
        "type": "paragraph",
        "id": "8e608e2a2252b1d2",
        "text": "Software is usually seen as the means to solve a problem by computer. Science is usually seen as a buildup of knowledge that can be mined for ideas to solve problems. Keeping Software Development and Scientific Research as two separated activities limits the quality of the former and the applicability of the latter. We describe an approach to scientific research and software development that builds on the ideas and practices of Experimental Mathematics, and best practices in Software Development, and results in an integrated process and tools. The result is a body of knowledge that satisfies the requirements to be considered serious research, and provides useful building blocks for real world software applications."
      },
      "date": 1645435572737
    }
  ]
}