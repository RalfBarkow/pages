{
  "title": "Prompt Programming",
  "story": [
    {
      "type": "paragraph",
      "id": "23f8bb4ce9c87e9b",
      "text": "is an area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of [[Human–Computer Interaction]] in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for [[Large Language Model]]s"
    },
    {
      "type": "paragraph",
      "id": "3ce0b3514b096c62",
      "text": "⇒ [[Dynamics of Language]] ⇒ [[Anthropomorphic Approach]] to Prompt Programming"
    },
    {
      "type": "pagefold",
      "id": "9d35935e016861ea",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "0e9c5a5dd73e8425",
      "text": "Prevailing methods for mapping large generative language models to supervised tasks may fail to sufficiently probe models’ novel capabilities. Using GPT-3 as a case study, we show that 0-shot prompts can significantly outperform few-shot prompts. We suggest that the function of few-shot examples in these cases is better described as locating an already learned task rather than meta-learning. This analysis motivates rethinking the role of prompts in controlling and evaluating powerful language models. We discuss methods of prompt programming, emphasizing the usefulness of considering prompts through the lens of natural language. We explore techniques for exploiting the capacity of narratives and cultural anchors to encode nuanced intentions and techniques for encouraging deconstruction of a problem into components before producing a verdict. Informed by this more encompassing theory of prompt programming, we also introduce the idea of a metaprompt that seeds the model to generate its own natural language prompts for a range of tasks. Finally, we discuss how these more general methods of interacting with language models can be incorporated into existing and future benchmarks and practical applications.\n"
    },
    {
      "type": "pagefold",
      "id": "32859b219135dd3b",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "cae43d45adcd6272",
      "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. New York, NY, USA: Association for Computing Machinery. 2021. p. 1–7. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
    },
    {
      "type": "paragraph",
      "id": "f41f12cd0ee69b5e",
      "text": "Rewriting a prompt can result in significant changes to the performance of a language model on tasks. That motivates the question: Is there a methodology which we can follow to craft prompts more likely to yield desired behavior?"
    },
    {
      "type": "paragraph",
      "id": "b1b6d4be62b61d15",
      "text": "Prompt engineering for a language model whose input and output are in natural language may be conceived as programming in natural language. Natural language, however, is indeterministic and much more complex than traditional programming languages. In this section, we open a discussion about the theory and method of natural language programming."
    },
    {
      "type": "paragraph",
      "id": "7af92119f1c69b7f",
      "text": "⇒ [[Dynamics of Language]]"
    },
    {
      "type": "paragraph",
      "id": "2546d55d725ae4c4",
      "text": "The thrust of this section is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. "
    },
    {
      "type": "paragraph",
      "id": "373b1addf8eb8f78",
      "text": "Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
    },
    {
      "type": "paragraph",
      "id": "95651447f704dad7",
      "text": "⇒ [[Interaction]]  ⇒ [[Interaction (Interaktion)]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Prompt Programming",
        "story": []
      },
      "date": 1675058895028
    },
    {
      "id": "3ce0b3514b096c62",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3ce0b3514b096c62",
        "text": "Prevailing methods for mapping large generative language models to supervised tasks may fail to sufficiently probe models’ novel capabilities. Using GPT-3 as a case study, we show that 0-shot prompts can significantly outperform few-shot prompts. We suggest that the function of few-shot examples in these cases is better described as locating an already learned task rather than meta-learning. This analysis motivates rethinking the role of prompts in controlling and evaluating powerful language models. We discuss methods of prompt programming, emphasizing the usefulness of considering prompts through the lens of natural language. We explore techniques for exploiting the capacity of narratives and cultural anchors to encode nuanced intentions and techniques for encouraging deconstruction of a problem into components before producing a verdict. Informed by this more encompassing theory of prompt programming, we also introduce the idea of a metaprompt that seeds the model to generate its own natural language prompts for a range of tasks. Finally, we discuss how these more general methods of interacting with language models can be incorporated into existing and future benchmarks and practical applications.\n"
      },
      "date": 1675058898270
    },
    {
      "item": {
        "type": "factory",
        "id": "32859b219135dd3b"
      },
      "id": "32859b219135dd3b",
      "type": "add",
      "after": "3ce0b3514b096c62",
      "date": 1675058900903
    },
    {
      "type": "edit",
      "id": "32859b219135dd3b",
      "item": {
        "type": "pagefold",
        "id": "32859b219135dd3b",
        "text": "~"
      },
      "date": 1675058904468
    },
    {
      "item": {
        "type": "factory",
        "id": "a17e1b5e6603c6ce"
      },
      "id": "a17e1b5e6603c6ce",
      "type": "add",
      "after": "32859b219135dd3b",
      "date": 1675058906427
    },
    {
      "id": "cae43d45adcd6272",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "cae43d45adcd6272",
        "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. Online. New York, NY, USA: Association for Computing Machinery. 8 May 2021. p. 1–7. [Accessed 29 January 2023]. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
      },
      "after": "32859b219135dd3b",
      "date": 1675058909127
    },
    {
      "type": "remove",
      "id": "a17e1b5e6603c6ce",
      "date": 1675058911415
    },
    {
      "item": {
        "type": "factory",
        "id": "f41f12cd0ee69b5e"
      },
      "id": "f41f12cd0ee69b5e",
      "type": "add",
      "after": "cae43d45adcd6272",
      "date": 1675059008371
    },
    {
      "type": "edit",
      "id": "f41f12cd0ee69b5e",
      "item": {
        "type": "paragraph",
        "id": "f41f12cd0ee69b5e",
        "text": "Rewriting a prompt can result in significant changes to the performance of a language model on tasks. That motivates the question: Is there a methodology which we can follow to craft prompts more likely to yield desired behavior?"
      },
      "date": 1675059009880
    },
    {
      "item": {
        "type": "factory",
        "id": "b1b6d4be62b61d15"
      },
      "id": "b1b6d4be62b61d15",
      "type": "add",
      "after": "f41f12cd0ee69b5e",
      "date": 1675059026529
    },
    {
      "type": "edit",
      "id": "b1b6d4be62b61d15",
      "item": {
        "type": "paragraph",
        "id": "b1b6d4be62b61d15",
        "text": "Prompt engineering for a language model whose input and output are in natural language may be conceived as programming in natural language. Natural language, however, is indeterministic and much more complex than traditional programming languages. In this section, we open a discussion about the theory and method of natural language programming."
      },
      "date": 1675059027980
    },
    {
      "item": {
        "type": "factory",
        "id": "7af92119f1c69b7f"
      },
      "id": "7af92119f1c69b7f",
      "type": "add",
      "after": "b1b6d4be62b61d15",
      "date": 1675059057511
    },
    {
      "type": "edit",
      "id": "7af92119f1c69b7f",
      "item": {
        "type": "paragraph",
        "id": "7af92119f1c69b7f",
        "text": "4.1 the Dynamics of Language"
      },
      "date": 1675059061916
    },
    {
      "type": "edit",
      "id": "7af92119f1c69b7f",
      "item": {
        "type": "paragraph",
        "id": "7af92119f1c69b7f",
        "text": "4.1 The [[Dynamics of Language]]"
      },
      "date": 1675059080163
    },
    {
      "type": "edit",
      "id": "7af92119f1c69b7f",
      "item": {
        "type": "paragraph",
        "id": "7af92119f1c69b7f",
        "text": "⇒ [[Dynamics of Language]]"
      },
      "date": 1675059280009
    },
    {
      "type": "edit",
      "id": "3ce0b3514b096c62",
      "item": {
        "type": "paragraph",
        "id": "3ce0b3514b096c62",
        "text": "[[Anthropomorphic Approach]] to [[Prompt Programming]]"
      },
      "date": 1675059489057
    },
    {
      "type": "add",
      "id": "0e9c5a5dd73e8425",
      "item": {
        "type": "paragraph",
        "id": "0e9c5a5dd73e8425",
        "text": "Prevailing methods for mapping large generative language models to supervised tasks may fail to sufficiently probe models’ novel capabilities. Using GPT-3 as a case study, we show that 0-shot prompts can significantly outperform few-shot prompts. We suggest that the function of few-shot examples in these cases is better described as locating an already learned task rather than meta-learning. This analysis motivates rethinking the role of prompts in controlling and evaluating powerful language models. We discuss methods of prompt programming, emphasizing the usefulness of considering prompts through the lens of natural language. We explore techniques for exploiting the capacity of narratives and cultural anchors to encode nuanced intentions and techniques for encouraging deconstruction of a problem into components before producing a verdict. Informed by this more encompassing theory of prompt programming, we also introduce the idea of a metaprompt that seeds the model to generate its own natural language prompts for a range of tasks. Finally, we discuss how these more general methods of interacting with language models can be incorporated into existing and future benchmarks and practical applications.\n"
      },
      "after": "3ce0b3514b096c62",
      "date": 1675059492250
    },
    {
      "type": "edit",
      "id": "3ce0b3514b096c62",
      "item": {
        "type": "paragraph",
        "id": "3ce0b3514b096c62",
        "text": "⇒ [[Anthropomorphic Approach]] to Prompt Programming"
      },
      "date": 1675059505786
    },
    {
      "item": {
        "type": "factory",
        "id": "9d35935e016861ea"
      },
      "id": "9d35935e016861ea",
      "type": "add",
      "after": "7af92119f1c69b7f",
      "date": 1675059508739
    },
    {
      "type": "edit",
      "id": "9d35935e016861ea",
      "item": {
        "type": "pagefold",
        "id": "9d35935e016861ea",
        "text": "~"
      },
      "date": 1675059511084
    },
    {
      "id": "9d35935e016861ea",
      "type": "move",
      "order": [
        "3ce0b3514b096c62",
        "9d35935e016861ea",
        "0e9c5a5dd73e8425",
        "32859b219135dd3b",
        "cae43d45adcd6272",
        "f41f12cd0ee69b5e",
        "b1b6d4be62b61d15",
        "7af92119f1c69b7f"
      ],
      "date": 1675059514962
    },
    {
      "type": "edit",
      "id": "3ce0b3514b096c62",
      "item": {
        "type": "paragraph",
        "id": "3ce0b3514b096c62",
        "text": "⇒ [[Dynamics of Language]] ⇒ [[Anthropomorphic Approach]] to Prompt Programming"
      },
      "date": 1675059543369
    },
    {
      "type": "edit",
      "id": "cae43d45adcd6272",
      "item": {
        "type": "paragraph",
        "id": "cae43d45adcd6272",
        "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. Online. New York, NY, USA: Association for Computing Machinery. 2021. p. 1–7. [Accessed 29 January 2023]. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
      },
      "date": 1675059737527
    },
    {
      "type": "edit",
      "id": "cae43d45adcd6272",
      "item": {
        "type": "paragraph",
        "id": "cae43d45adcd6272",
        "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. New York, NY, USA: Association for Computing Machinery. 2021. p. 1–7. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
      },
      "date": 1675059773460
    },
    {
      "type": "add",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the Hamiltonian of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "after": "7af92119f1c69b7f",
      "date": 1675060155188
    },
    {
      "item": {
        "type": "factory",
        "id": "23f8bb4ce9c87e9b"
      },
      "id": "23f8bb4ce9c87e9b",
      "type": "add",
      "after": "2546d55d725ae4c4",
      "date": 1675063375160
    },
    {
      "id": "23f8bb4ce9c87e9b",
      "type": "move",
      "order": [
        "23f8bb4ce9c87e9b",
        "3ce0b3514b096c62",
        "9d35935e016861ea",
        "0e9c5a5dd73e8425",
        "32859b219135dd3b",
        "cae43d45adcd6272",
        "f41f12cd0ee69b5e",
        "b1b6d4be62b61d15",
        "7af92119f1c69b7f",
        "2546d55d725ae4c4"
      ],
      "date": 1675063382244
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of human-computer interaction in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis."
      },
      "date": 1675063406481
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of human-computer interaction in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds und McDonell, „Prompt Programming for Large Language Models“."
      },
      "date": 1675063415291
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of human-computer interaction in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for Large Language Models."
      },
      "date": 1675063428763
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of human-computer interaction in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for [[Large Language Models]]"
      },
      "date": 1675063446776
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of human-computer interaction in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for [[Large Language Model]]s"
      },
      "date": 1675063455310
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is a nascent and highly relevant area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of [[Human–Computer Interaction]] in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for [[Large Language Model]]s"
      },
      "date": 1675064463353
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675074186362
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. "
      },
      "date": 1675074211257
    },
    {
      "type": "add",
      "id": "373b1addf8eb8f78",
      "item": {
        "type": "paragraph",
        "id": "373b1addf8eb8f78",
        "text": "Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "after": "2546d55d725ae4c4",
      "date": 1675074211875
    },
    {
      "item": {
        "type": "factory",
        "id": "95651447f704dad7"
      },
      "id": "95651447f704dad7",
      "type": "add",
      "after": "373b1addf8eb8f78",
      "date": 1675074249076
    },
    {
      "type": "edit",
      "id": "95651447f704dad7",
      "item": {
        "type": "paragraph",
        "id": "95651447f704dad7",
        "text": "⇒ [[Interaction]]"
      },
      "date": 1675074263830
    },
    {
      "type": "edit",
      "id": "95651447f704dad7",
      "item": {
        "type": "paragraph",
        "id": "95651447f704dad7",
        "text": "⇒ [[Interaction]]  ⇒ [[Interaction (Interaktion)]]"
      },
      "date": 1675074275795
    },
    {
      "type": "edit",
      "id": "23f8bb4ce9c87e9b",
      "item": {
        "type": "paragraph",
        "id": "23f8bb4ce9c87e9b",
        "text": "is an area of research which requires interdisciplinary knowledge and methods. We are entering a new paradigm of [[Human–Computer Interaction]] in which anyone who is fluent in natural language can be a programmer. We hope to see prompt-programming grow into a discipline itself and be the subject of theoretical study and quantitative analysis. -- Reynolds and McDonell, Prompt Programming for [[Large Language Model]]s"
      },
      "date": 1675076924653
    }
  ]
}