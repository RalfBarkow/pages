{
  "title": "Literate Paradox",
  "story": [
    {
      "type": "markdown",
      "id": "db19190b55e75df3",
      "text": "This is a title I’m giving to some failings in the history of [[literate programming]]. Great software was created in a literate style only for all the literate elements to be stripped out by programmers preferring the concise efficiency of straight code. The theory eat itself."
    },
    {
      "type": "markdown",
      "id": "43eefeba28287654",
      "text": "The motivation behind this auto-canibalisation of the paradigm is clear to anyone who has coded for any time - it is very time consuming to document what you are doing. In fact it takes considerably longer to write about what you are coding that’s it does to code it. If you are a coder and not a writer, writing about your code is not simply inconvenient it is physically painful. It is a rare coder who enjoys documenting there work.\n"
    },
    {
      "type": "markdown",
      "id": "89a65b829600d220",
      "text": "# Empathy\n"
    },
    {
      "type": "markdown",
      "id": "11104c5f731d5974",
      "text": "Given an understanding of the problem, we can see how we might step sideways and solve it - at least for specific cases. The evolution is to accept that coders won’t write, and to focus on writers. We need to make the experience motivating for writers. That way the coders can be motivated to join in - even if this is the same person."
    },
    {
      "type": "markdown",
      "id": "20c63ac77e45b19e",
      "text": "These elements are:\n\n- [[Unearthing energy]]\n- [[Autopoetic integration]]\n- [[Content = Code]]\n"
    },
    {
      "type": "markdown",
      "id": "d4bd34a5f8a115ab",
      "text": "Or if we were to say the same thing in words, itch scratching in diverse communities is possible, but requires building feedback systems between varied incentives."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Literate Paradox",
        "story": []
      },
      "date": 1630066114056
    },
    {
      "item": {
        "type": "factory",
        "id": "db19190b55e75df3"
      },
      "id": "db19190b55e75df3",
      "type": "add",
      "date": 1630066115048
    },
    {
      "type": "edit",
      "id": "db19190b55e75df3",
      "item": {
        "type": "markdown",
        "id": "db19190b55e75df3",
        "text": "This is a title I’m giving to some failings in the history of [[literate programming]]. Great software was created in a literate style only for all the literate elements to be stripped out by programmers preferring the concise efficiency of straight code. The theory eat itself."
      },
      "date": 1630066247964
    },
    {
      "id": "20c63ac77e45b19e",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "20c63ac77e45b19e",
        "text": "These elements are:\n\n- [[Unearthing energy]]\n- [[Autopoetic integration]]\n- [[Content = Code]]\n"
      },
      "after": "db19190b55e75df3",
      "date": 1630066253826
    },
    {
      "id": "d4bd34a5f8a115ab",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d4bd34a5f8a115ab",
        "text": "Or if we were to say the same thing in words, itch scratching in diverse communities is possible, but requires building feedback systems between varied incentives."
      },
      "after": "20c63ac77e45b19e",
      "date": 1630066256418
    },
    {
      "item": {
        "type": "factory",
        "id": "43eefeba28287654"
      },
      "id": "43eefeba28287654",
      "type": "add",
      "after": "d4bd34a5f8a115ab",
      "date": 1630066265102
    },
    {
      "id": "43eefeba28287654",
      "type": "move",
      "order": [
        "db19190b55e75df3",
        "43eefeba28287654",
        "20c63ac77e45b19e",
        "d4bd34a5f8a115ab"
      ],
      "date": 1630066266933
    },
    {
      "type": "edit",
      "id": "43eefeba28287654",
      "item": {
        "type": "markdown",
        "id": "43eefeba28287654",
        "text": "The motivation behind this auto-canibalisation of the paradigm is clear to anyone who has coded for any time - it is very tie consuming to document what you are doing. In fact it takes considerably longer to write about what you are coding that’s it does to code it. If you are a coder and not a writer, writing about your code is not simply inconvenient it is physically painful. It is a rare coder who enjoys documenting there work.\n"
      },
      "date": 1630066436165
    },
    {
      "type": "add",
      "id": "89a65b829600d220",
      "item": {
        "type": "markdown",
        "id": "89a65b829600d220",
        "text": "# Empathy\n"
      },
      "after": "43eefeba28287654",
      "date": 1630066451232
    },
    {
      "type": "add",
      "id": "11104c5f731d5974",
      "item": {
        "type": "markdown",
        "id": "11104c5f731d5974",
        "text": "Given an understanding of the problem, we can see how we might step sideways and solve it - at least for specific cases. The evolution is to accept that coders won’t write, and to focus on writers. We need to make the experience motivating for writers. That way the coders can be motivated to join in - even if this is the same person."
      },
      "after": "89a65b829600d220",
      "date": 1630066586025
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1630067947778
    },
    {
      "type": "edit",
      "id": "43eefeba28287654",
      "item": {
        "type": "markdown",
        "id": "43eefeba28287654",
        "text": "The motivation behind this auto-canibalisation of the paradigm is clear to anyone who has coded for any time - it is very time consuming to document what you are doing. In fact it takes considerably longer to write about what you are coding that’s it does to code it. If you are a coder and not a writer, writing about your code is not simply inconvenient it is physically painful. It is a rare coder who enjoys documenting there work.\n"
      },
      "date": 1630068014331
    }
  ]
}