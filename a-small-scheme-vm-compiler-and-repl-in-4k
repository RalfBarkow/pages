{
  "title": "A Small Scheme VM, Compiler, and REPL in 4K",
  "story": [
    {
      "type": "paragraph",
      "id": "410d4f4e37d0dba5",
      "text": "Compact language implementations are increasingly popular for use in resource constrained environments. For embedded applications such as robotics and home automation, it is useful to support a [[Read-Eval-Print-Loop]] (REPL) so that a basic level of interactive development is possible directly on the device."
    },
    {
      "type": "paragraph",
      "id": "a5dc9968ab25d895",
      "text": "Due to its minimalistic design, the Scheme language is particularly well suited for such applications and several implementations are available with different tradeoffs. In this paper we explain the design and implementation of Ribbit, a compact Scheme system that supports a [[REPL]], is extensible and has a 4 KB executable code footprint."
    },
    {
      "type": "pagefold",
      "id": "baf2df7c6d095cc2",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "96551b2c9481b1b4",
      "text": "YVON, Samuel and FEELEY, Marc, 2021. A small scheme VM, compiler, and REPL in 4k. In: Proceedings of the 13th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages. Online. New York, NY, USA: Association for Computing Machinery. 19 October 2021. p. 14–24. [Accessed 13 October 2023]. VMIL 2021. ISBN 978-1-4503-9109-2. DOI 10.1145/3486606.3486783. [https://www-labs.iro.umontreal.ca/~feeley/papers/YvonFeeleyVMIL21.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "427fb40d9a716c56",
      "text": "Our work is closer in spirit to the [[Smalltalk-80]] implementation, where we put emphasis on minimizing the footprint of the VM."
    },
    {
      "type": "paragraph",
      "id": "76f21ba64ac97b8c",
      "text": "[…] until the addition of jshell, the REPL is not a traditional Java feature. [⇒ [[fedwiki-java\n]]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "A Small Scheme VM, Compiler, and REPL in 4K",
        "story": []
      },
      "date": 1697265332610
    },
    {
      "id": "96551b2c9481b1b4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "96551b2c9481b1b4",
        "text": "YVON, Samuel and FEELEY, Marc, 2021. A small scheme VM, compiler, and REPL in 4k. In: Proceedings of the 13th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages. Online. New York, NY, USA: Association for Computing Machinery. 19 October 2021. p. 14–24. [Accessed 13 October 2023]. VMIL 2021. ISBN 978-1-4503-9109-2. DOI 10.1145/3486606.3486783. Compact language implementations are increasingly popular for use in resource constrained environments. For embedded applications such as robotics and home automation, it is useful to support a [[Read-Eval-Print-Loop]] (REPL) so that a basic level of interactive development is possible directly on the device. Due to its minimalistic design, the Scheme language is particularly well suited for such applications and several implementations are available with different tradeoffs. In this paper we explain the design and implementation of Ribbit, a compact Scheme system that supports a REPL, is extensible and has a 4 KB executable code footprint.\n"
      },
      "attribution": {
        "page": "2023-10-14"
      },
      "date": 1697265338378
    },
    {
      "type": "edit",
      "id": "96551b2c9481b1b4",
      "item": {
        "type": "paragraph",
        "id": "96551b2c9481b1b4",
        "text": "YVON, Samuel and FEELEY, Marc, 2021. A small scheme VM, compiler, and REPL in 4k. In: Proceedings of the 13th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages. Online. New York, NY, USA: Association for Computing Machinery. 19 October 2021. p. 14–24. [Accessed 13 October 2023]. VMIL 2021. ISBN 978-1-4503-9109-2. DOI 10.1145/3486606.3486783."
      },
      "date": 1697265346553
    },
    {
      "type": "add",
      "id": "410d4f4e37d0dba5",
      "item": {
        "type": "paragraph",
        "id": "410d4f4e37d0dba5",
        "text": "Compact language implementations are increasingly popular for use in resource constrained environments. For embedded applications such as robotics and home automation, it is useful to support a [[Read-Eval-Print-Loop]] (REPL) so that a basic level of interactive development is possible directly on the device. Due to its minimalistic design, the Scheme language is particularly well suited for such applications and several implementations are available with different tradeoffs. In this paper we explain the design and implementation of Ribbit, a compact Scheme system that supports a REPL, is extensible and has a 4 KB executable code footprint."
      },
      "after": "96551b2c9481b1b4",
      "date": 1697265347278
    },
    {
      "id": "410d4f4e37d0dba5",
      "type": "move",
      "order": [
        "410d4f4e37d0dba5",
        "96551b2c9481b1b4"
      ],
      "date": 1697265349529
    },
    {
      "item": {
        "type": "factory",
        "id": "baf2df7c6d095cc2"
      },
      "id": "baf2df7c6d095cc2",
      "type": "add",
      "after": "96551b2c9481b1b4",
      "date": 1697265351766
    },
    {
      "id": "baf2df7c6d095cc2",
      "type": "move",
      "order": [
        "410d4f4e37d0dba5",
        "baf2df7c6d095cc2",
        "96551b2c9481b1b4"
      ],
      "date": 1697265353712
    },
    {
      "type": "edit",
      "id": "baf2df7c6d095cc2",
      "item": {
        "type": "pagefold",
        "id": "baf2df7c6d095cc2",
        "text": "~"
      },
      "date": 1697265356580
    },
    {
      "type": "edit",
      "id": "96551b2c9481b1b4",
      "item": {
        "type": "paragraph",
        "id": "96551b2c9481b1b4",
        "text": "YVON, Samuel and FEELEY, Marc, 2021. A small scheme VM, compiler, and REPL in 4k. In: Proceedings of the 13th ACM SIGPLAN International Workshop on Virtual Machines and Intermediate Languages. Online. New York, NY, USA: Association for Computing Machinery. 19 October 2021. p. 14–24. [Accessed 13 October 2023]. VMIL 2021. ISBN 978-1-4503-9109-2. DOI 10.1145/3486606.3486783. [https://www-labs.iro.umontreal.ca/~feeley/papers/YvonFeeleyVMIL21.pdf pdf]"
      },
      "date": 1697265374677
    },
    {
      "type": "edit",
      "id": "410d4f4e37d0dba5",
      "item": {
        "type": "paragraph",
        "id": "410d4f4e37d0dba5",
        "text": "Compact language implementations are increasingly popular for use in resource constrained environments. For embedded applications such as robotics and home automation, it is useful to support a [[Read-Eval-Print-Loop]] (REPL) so that a basic level of interactive development is possible directly on the device."
      },
      "date": 1697265414888
    },
    {
      "type": "add",
      "id": "a5dc9968ab25d895",
      "item": {
        "type": "paragraph",
        "id": "a5dc9968ab25d895",
        "text": "Due to its minimalistic design, the Scheme language is particularly well suited for such applications and several implementations are available with different tradeoffs. In this paper we explain the design and implementation of Ribbit, a compact Scheme system that supports a REPL, is extensible and has a 4 KB executable code footprint."
      },
      "after": "410d4f4e37d0dba5",
      "date": 1697265415310
    },
    {
      "type": "edit",
      "id": "a5dc9968ab25d895",
      "item": {
        "type": "paragraph",
        "id": "a5dc9968ab25d895",
        "text": "Due to its minimalistic design, the Scheme language is particularly well suited for such applications and several implementations are available with different tradeoffs. In this paper we explain the design and implementation of Ribbit, a compact Scheme system that supports a [[REPL]], is extensible and has a 4 KB executable code footprint."
      },
      "date": 1697265440690
    },
    {
      "item": {
        "type": "factory",
        "id": "427fb40d9a716c56"
      },
      "id": "427fb40d9a716c56",
      "type": "add",
      "after": "96551b2c9481b1b4",
      "date": 1697265614598
    },
    {
      "type": "edit",
      "id": "427fb40d9a716c56",
      "item": {
        "type": "paragraph",
        "id": "427fb40d9a716c56",
        "text": "Our work is closer in spirit to the [[Smalltalk-80]] implementation, where we put emphasis on minimizing the footprint of the VM."
      },
      "date": 1697265624196
    },
    {
      "item": {
        "type": "factory",
        "id": "76f21ba64ac97b8c"
      },
      "id": "76f21ba64ac97b8c",
      "type": "add",
      "after": "427fb40d9a716c56",
      "date": 1697265775735
    },
    {
      "type": "edit",
      "id": "76f21ba64ac97b8c",
      "item": {
        "type": "paragraph",
        "id": "76f21ba64ac97b8c",
        "text": "[…] until the addition of jshell, the REPL is not a traditional Java feature."
      },
      "date": 1697265789160
    },
    {
      "type": "edit",
      "id": "76f21ba64ac97b8c",
      "item": {
        "type": "paragraph",
        "id": "76f21ba64ac97b8c",
        "text": "[…] until the addition of jshell, the REPL is not a traditional Java feature. [⇒ [[ fedwiki-java\n]]]"
      },
      "date": 1697265846697
    },
    {
      "type": "edit",
      "id": "76f21ba64ac97b8c",
      "item": {
        "type": "paragraph",
        "id": "76f21ba64ac97b8c",
        "text": "[…] until the addition of jshell, the REPL is not a traditional Java feature. [⇒ [[fedwiki-java\n]]]"
      },
      "date": 1697265854302
    }
  ]
}