{
  "title": "2024-02-27",
  "story": [
    {
      "type": "paragraph",
      "id": "44a5f09ef7020fbe",
      "text": "⇒ [[clog-inspector]]"
    },
    {
      "type": "paragraph",
      "id": "75a9b71af4073283",
      "text": "CLOG - The Common Lisp Omnificent GUI [https://github.com/rabbibotton/clog github]"
    },
    {
      "type": "paragraph",
      "id": "bffde390ba6d55e4",
      "text": "Start emacs then M-x slime"
    },
    {
      "type": "paragraph",
      "id": "c5e7866706e34e47",
      "text": "Quicklisp beta [https://www.quicklisp.org/beta/ site]"
    },
    {
      "type": "paragraph",
      "id": "9c863d179b3d72a9",
      "text": "Using asdf to load systems [http://sbcl.org/asdf/Using-asdf-to-load-systems.html page]"
    },
    {
      "type": "paragraph",
      "id": "1feb9d8fb9a24809",
      "text": "asdf-vm [https://asdf-vm.com/guide/introduction.html page] [https://github.com/asdf-vm/asdf github]"
    },
    {
      "type": "paragraph",
      "id": "dfac93d3c94e1cf9",
      "text": "Sleeping Too Much and Fighting With Emacs and ASDF [http://pchristensen.com/blog/articles/sleeping-too-much-and-fighting-with-emacs-and-asdf/ blog]"
    },
    {
      "type": "paragraph",
      "id": "58b6ddf70e9803bb",
      "text": "Stopping SBCL [http://www.sbcl.org/manual/#Stopping-SBCL page]"
    },
    {
      "type": "code",
      "id": "5173484c7d78e858",
      "text": "(sb-ext:exit)"
    },
    {
      "type": "paragraph",
      "id": "af68a19055cc227d",
      "text": "⇒ [[MiniDocs]]"
    },
    {
      "type": "pagefold",
      "id": "841969f2a150dd3a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9cf9474182a2fe21",
      "text": "Ward via matrix DM:"
    },
    {
      "type": "paragraph",
      "id": "404cf083f07b2b57",
      "text": "[…]: to make his partition script operate in a random order Ward replaced a for loop with a while loop watching a random todo list. Randomizing a list of integers in javascript is tricky. First there is the trick to get a list of integers and then a trick to shuffle it. [https://wiki.c2.com/?LinearShuffle c2]"
    },
    {
      "type": "paragraph",
      "id": "8d14a08da81e3077",
      "text": "⇒ [[Linear Shuffle]]"
    },
    {
      "type": "paragraph",
      "id": "5a9fabd5545d01b7",
      "text": "Relations are directional. A node keeps separate lists of inbound and outbound relations. A node can have many of each, including none. Relations know what nodes they connect. They always have a from and a to though this can be the same node. I modeled this after Neo4j which has the same semantics. This is similar to but not the same as \"triples\". The most distinctive difference between a triple store and a property graph is that one has a schema that defines what is allowed where a property graph holds whatever is put into it."
    },
    {
      "type": "paragraph",
      "id": "94329d1059aaa7fd",
      "text": "A graph could be corrupted if the nodes in & out don't agree with the relations from & to. We wrap the nodes and rels up in a class definition where changing one affects the other. Consider these fields to be read-only outside the class, though that is not enforced. One can changed the other fields at will. ",
      "alias": "a1bb99e3a948d965"
    },
    {
      "type": "paragraph",
      "id": "db8a21814692de01",
      "text": "[…] the right number of arguments […] The addRel function expects a type, from and to, and optionally an object with properties to be remembered within the relation."
    },
    {
      "type": "paragraph",
      "id": "cef13a0fa4258029",
      "text": "This from the documentation: [https://wardcunningham.github.io/graph/ github.io]",
      "alias": "1fd00ffd1a5c0d2f"
    },
    {
      "type": "markdown",
      "id": "9f939068ff9decb4",
      "text": "> Add nodes to the graph.\nRemember node ids."
    },
    {
      "type": "code",
      "id": "bec727fb1694a45a",
      "text": "const repo = graph.addNode('Repo',{name:'Graph',url:'https://github.com/WardCunningham/graph/'})\n  \nconst docs = graph.addNode('Docs',{name:'Graph',url:'https://wardcunningham.github.io/graph/'})\n",
      "alias": "49b5af65ba8098b3"
    },
    {
      "type": "markdown",
      "id": "239b70e7db5f99f5",
      "text": "> Add relation to the graph.\nConnect remembered nodes by id.",
      "alias": "a567c7a493100777"
    },
    {
      "type": "code",
      "id": "0360ae43e84130a6",
      "text": "graph.addRel('Hosts',repo,docs,{})\n"
    },
    {
      "type": "paragraph",
      "id": "029ada4d83b18a66",
      "text": "This is the implementation of addNode and addRel that we are currently using.",
      "alias": "d29ea9d6498b884e"
    },
    {
      "type": "code",
      "id": "22ccb25f8de5afd4",
      "text": "  addNode(type, props={}){\n    const obj = {type, in:[], out:[], props};\n    this.nodes.push(obj);\n    return this.nodes.length-1;\n  }\n\n  addRel(type, from, to, props={}) {\n    const obj = {type, from, to, props};\n    this.rels.push(obj);\n    const rid = this.rels.length-1;\n    this.nodes[from].out.push(rid)\n    this.nodes[to].in.push(rid);\n    return rid;\n  }\n",
      "alias": "ab2ccf57f43c47a9"
    },
    {
      "type": "paragraph",
      "id": "27f827ec7fe2964f",
      "text": "JSON doesn't have any provision for saving class-based objects so we pull the two arrays out as a simple object, {nodes,rels}, when we save a Graph as JSON.",
      "alias": "5158bbbe9bb5f4ae"
    },
    {
      "type": "paragraph",
      "id": "3fdae30dfabb9504",
      "text": "Remember, we moved away from building up graphs as dot commands so that we could more easily work with the graph once created.",
      "alias": "789d3bf18dcd7e6d"
    },
    {
      "type": "paragraph",
      "id": "1551524b155fea05",
      "text": "⇒ [[Parse Page Paragraphs]]"
    },
    {
      "type": "paragraph",
      "id": "732c8a909d3e7a51",
      "text": "I send the graph as JSONL from the SOURCE graph frame to the LINEUP graph frame. See current version at [http://wiki.ralfbarkow.ch/view/lineup-graph/view/parse-page-paragraphs lineup]"
    },
    {
      "type": "image",
      "id": "e7e0d71095ec1c81",
      "text": "Second drop-down list",
      "size": "wide",
      "width": 419,
      "height": 158,
      "url": "/assets/plugins/image/63b483ab9bc14bfef8095fa8ad9de74b.jpg"
    },
    {
      "type": "paragraph",
      "id": "f0653e932d102243",
      "text": "Click start"
    },
    {
      "type": "paragraph",
      "id": "6a528f9b96fa4c1e",
      "text": "In addition to my actual goal of analyzing the paragraph texts, I may next try to render the Graphviz diagram based on the graph arriving in the LINEUP graph frame, thus reproducing the diagram on the right in the lineup on the left but with other techniques"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-02-27",
        "story": []
      },
      "date": 1709025758334
    },
    {
      "item": {
        "type": "factory",
        "id": "af68a19055cc227d"
      },
      "id": "af68a19055cc227d",
      "type": "add",
      "date": 1709025760013
    },
    {
      "item": {
        "type": "factory",
        "id": "c62382758e122698"
      },
      "id": "c62382758e122698",
      "type": "add",
      "after": "af68a19055cc227d",
      "date": 1709025762469
    },
    {
      "type": "edit",
      "id": "c62382758e122698",
      "item": {
        "type": "paragraph",
        "id": "c62382758e122698",
        "text": "[https://discord.com/channels/729445214812504107/737255889517543545/1208170336076693534 discord]"
      },
      "date": 1709025772678
    },
    {
      "type": "edit",
      "id": "af68a19055cc227d",
      "item": {
        "type": "paragraph",
        "id": "af68a19055cc227d",
        "text": "⇐ [[MiniDocs]]"
      },
      "date": 1709025786031
    },
    {
      "type": "edit",
      "id": "af68a19055cc227d",
      "item": {
        "type": "paragraph",
        "id": "af68a19055cc227d",
        "text": "⇒ [[MiniDocs]]"
      },
      "date": 1709025820679
    },
    {
      "id": "c62382758e122698",
      "type": "remove",
      "removedTo": {
        "page": "MiniDocs"
      },
      "date": 1709025850684
    },
    {
      "item": {
        "type": "factory",
        "id": "42d771226c6d7180"
      },
      "id": "42d771226c6d7180",
      "type": "add",
      "after": "af68a19055cc227d",
      "date": 1709027192635
    },
    {
      "type": "edit",
      "id": "42d771226c6d7180",
      "item": {
        "type": "paragraph",
        "id": "42d771226c6d7180",
        "text": "clog-inspector"
      },
      "date": 1709027195350
    },
    {
      "type": "edit",
      "id": "42d771226c6d7180",
      "item": {
        "type": "paragraph",
        "id": "42d771226c6d7180",
        "text": "clog-inspector [https://codeberg.org/khinsen/clog-inspector github]"
      },
      "date": 1709027207105
    },
    {
      "type": "edit",
      "id": "42d771226c6d7180",
      "item": {
        "type": "paragraph",
        "id": "42d771226c6d7180",
        "text": "clog-inspector [https://codeberg.org/khinsen/clog-inspector github] [https://discord.com/channels/729445214812504107/834369757452697641/1211671619294986271 discord]"
      },
      "date": 1709027223887
    },
    {
      "type": "add",
      "id": "0cc68e14fd8063ea",
      "item": {
        "type": "paragraph",
        "id": "0cc68e14fd8063ea",
        "text": "McCLIM User’s Manual"
      },
      "after": "42d771226c6d7180",
      "date": 1709027248456
    },
    {
      "type": "edit",
      "id": "0cc68e14fd8063ea",
      "item": {
        "type": "paragraph",
        "id": "0cc68e14fd8063ea",
        "text": "McCLIM User’s Manual [https://mcclim.common-lisp.dev/static/manual/mcclim.html page]"
      },
      "date": 1709027258638
    },
    {
      "type": "edit",
      "id": "0cc68e14fd8063ea",
      "item": {
        "type": "paragraph",
        "id": "0cc68e14fd8063ea",
        "text": "McCLIM User’s Manual [https://mcclim.common-lisp.dev/static/manual/mcclim.html page] ⇒ [[CLIM ]]"
      },
      "date": 1709027283309
    },
    {
      "item": {
        "type": "factory",
        "id": "b1dc89c64540bb77"
      },
      "id": "b1dc89c64540bb77",
      "type": "add",
      "after": "0cc68e14fd8063ea",
      "date": 1709027474678
    },
    {
      "type": "edit",
      "id": "b1dc89c64540bb77",
      "item": {
        "type": "image",
        "id": "b1dc89c64540bb77",
        "text": "clog-inspector",
        "size": "wide",
        "width": 418,
        "height": 309,
        "url": "/assets/plugins/image/c1c73d263036e17b8701d17e4ada6516.jpg"
      },
      "date": 1709027504525
    },
    {
      "type": "add",
      "id": "44a5f09ef7020fbe",
      "item": {
        "type": "paragraph",
        "id": "44a5f09ef7020fbe",
        "text": "⇒ [[clog-inspector]]"
      },
      "after": "af68a19055cc227d",
      "date": 1709027803690
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709027874215
    },
    {
      "item": {
        "type": "factory",
        "id": "75a9b71af4073283"
      },
      "id": "75a9b71af4073283",
      "type": "add",
      "after": "b1dc89c64540bb77",
      "date": 1709028227325
    },
    {
      "type": "edit",
      "id": "75a9b71af4073283",
      "item": {
        "type": "paragraph",
        "id": "75a9b71af4073283",
        "text": "CLOG - The Common Lisp Omnificent GUI"
      },
      "date": 1709028229098
    },
    {
      "type": "edit",
      "id": "75a9b71af4073283",
      "item": {
        "type": "paragraph",
        "id": "75a9b71af4073283",
        "text": "CLOG - The Common Lisp Omnificent GUI [https://github.com/rabbibotton/clog github]"
      },
      "date": 1709028239783
    },
    {
      "item": {
        "type": "factory",
        "id": "bffde390ba6d55e4"
      },
      "id": "bffde390ba6d55e4",
      "type": "add",
      "after": "75a9b71af4073283",
      "date": 1709028258503
    },
    {
      "type": "edit",
      "id": "bffde390ba6d55e4",
      "item": {
        "type": "paragraph",
        "id": "bffde390ba6d55e4",
        "text": "\n    Start emacs then M-x slime\n    In the REPL, run:\n"
      },
      "date": 1709028260322
    },
    {
      "type": "edit",
      "id": "bffde390ba6d55e4",
      "item": {
        "type": "paragraph",
        "id": "bffde390ba6d55e4",
        "text": "Start emacs then M-x slime"
      },
      "date": 1709028266121
    },
    {
      "type": "add",
      "id": "33316aa0d6655308",
      "item": {
        "type": "paragraph",
        "id": "33316aa0d6655308",
        "text": "In the REPL, run:"
      },
      "after": "bffde390ba6d55e4",
      "date": 1709028267125
    },
    {
      "item": {
        "type": "factory",
        "id": "dc87d763f58192b5"
      },
      "id": "dc87d763f58192b5",
      "type": "add",
      "after": "33316aa0d6655308",
      "date": 1709028289091
    },
    {
      "type": "edit",
      "id": "dc87d763f58192b5",
      "item": {
        "type": "code",
        "id": "dc87d763f58192b5",
        "text": "CL-USER> (ql:quickload :clog)\nCL-USER> (clog:run-tutorial 1)"
      },
      "date": 1709028294355
    },
    {
      "item": {
        "type": "factory",
        "id": "8bb8ae93f62a5bfc"
      },
      "id": "8bb8ae93f62a5bfc",
      "type": "add",
      "after": "dc87d763f58192b5",
      "date": 1709028844546
    },
    {
      "type": "edit",
      "id": "8bb8ae93f62a5bfc",
      "item": {
        "type": "code",
        "id": "8bb8ae93f62a5bfc",
        "text": "(asdf:load-system :clog-inspector)\n(clog-inspector:clog-inspect *package*)"
      },
      "date": 1709028847295
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709037709872
    },
    {
      "id": "0cc68e14fd8063ea",
      "type": "remove",
      "removedTo": {
        "page": "clog-inspector"
      },
      "date": 1709037807758
    },
    {
      "id": "b1dc89c64540bb77",
      "type": "remove",
      "removedTo": {
        "page": "clog-inspector"
      },
      "date": 1709037815081
    },
    {
      "item": {
        "type": "factory",
        "id": "c5e7866706e34e47"
      },
      "id": "c5e7866706e34e47",
      "type": "add",
      "after": "8bb8ae93f62a5bfc",
      "date": 1709039050373
    },
    {
      "type": "edit",
      "id": "c5e7866706e34e47",
      "item": {
        "type": "paragraph",
        "id": "c5e7866706e34e47",
        "text": "Quicklisp beta"
      },
      "date": 1709039053006
    },
    {
      "type": "edit",
      "id": "c5e7866706e34e47",
      "item": {
        "type": "paragraph",
        "id": "c5e7866706e34e47",
        "text": "Quicklisp beta [https://www.quicklisp.org/beta/ site]"
      },
      "date": 1709039064763
    },
    {
      "item": {
        "type": "factory",
        "id": "9c863d179b3d72a9"
      },
      "id": "9c863d179b3d72a9",
      "type": "add",
      "after": "c5e7866706e34e47",
      "date": 1709040028982
    },
    {
      "type": "edit",
      "id": "9c863d179b3d72a9",
      "item": {
        "type": "paragraph",
        "id": "9c863d179b3d72a9",
        "text": "Using asdf to load systems"
      },
      "date": 1709040030992
    },
    {
      "type": "edit",
      "id": "9c863d179b3d72a9",
      "item": {
        "type": "paragraph",
        "id": "9c863d179b3d72a9",
        "text": "Using asdf to load systems [http://sbcl.org/asdf/Using-asdf-to-load-systems.html page]"
      },
      "date": 1709040045137
    },
    {
      "type": "add",
      "id": "1feb9d8fb9a24809",
      "item": {
        "type": "paragraph",
        "id": "1feb9d8fb9a24809",
        "text": "[https://asdf-vm.com/guide/introduction.html page]"
      },
      "after": "9c863d179b3d72a9",
      "date": 1709040224371
    },
    {
      "type": "edit",
      "id": "1feb9d8fb9a24809",
      "item": {
        "type": "paragraph",
        "id": "1feb9d8fb9a24809",
        "text": "asdf-vm [https://asdf-vm.com/guide/introduction.html page]"
      },
      "date": 1709040391606
    },
    {
      "type": "add",
      "id": "dfac93d3c94e1cf9",
      "item": {
        "type": "paragraph",
        "id": "dfac93d3c94e1cf9",
        "text": "[http://pchristensen.com/blog/articles/sleeping-too-much-and-fighting-with-emacs-and-asdf/ blog]"
      },
      "after": "1feb9d8fb9a24809",
      "date": 1709040402394
    },
    {
      "type": "edit",
      "id": "dfac93d3c94e1cf9",
      "item": {
        "type": "paragraph",
        "id": "dfac93d3c94e1cf9",
        "text": "Sleeping Too Much and Fighting With Emacs and ASDF [http://pchristensen.com/blog/articles/sleeping-too-much-and-fighting-with-emacs-and-asdf/ blog]"
      },
      "date": 1709040415076
    },
    {
      "item": {
        "type": "factory",
        "id": "33e2f27cd1b30887"
      },
      "id": "33e2f27cd1b30887",
      "type": "add",
      "after": "dfac93d3c94e1cf9",
      "date": 1709040471051
    },
    {
      "item": {
        "type": "factory",
        "id": "d88b84c7cc6e0d95"
      },
      "id": "d88b84c7cc6e0d95",
      "type": "add",
      "after": "33e2f27cd1b30887",
      "date": 1709040472140
    },
    {
      "type": "edit",
      "id": "d88b84c7cc6e0d95",
      "item": {
        "type": "markdown",
        "id": "d88b84c7cc6e0d95",
        "text": "To use asdf, add the following line (or equivalent) to your shell profile\ne.g. ~/.profile or ~/.zshrc:\n  . /usr/local/opt/asdf/libexec/asdf.sh\ne.g. ~/.config/fish/config.fish\n  source /usr/local/opt/asdf/libexec/asdf.fish\nRestart your terminal for the settings to take effect."
      },
      "date": 1709040474708
    },
    {
      "type": "edit",
      "id": "33e2f27cd1b30887",
      "item": {
        "type": "paragraph",
        "id": "33e2f27cd1b30887",
        "text": "brew info asdf"
      },
      "date": 1709040489441
    },
    {
      "type": "edit",
      "id": "1feb9d8fb9a24809",
      "item": {
        "type": "paragraph",
        "id": "1feb9d8fb9a24809",
        "text": "asdf-vm [https://asdf-vm.com/guide/introduction.html page] [https://github.com/asdf-vm/asdf github]"
      },
      "date": 1709040574160
    },
    {
      "item": {
        "type": "factory",
        "id": "58b6ddf70e9803bb"
      },
      "id": "58b6ddf70e9803bb",
      "type": "add",
      "after": "d88b84c7cc6e0d95",
      "date": 1709042622827
    },
    {
      "type": "edit",
      "id": "58b6ddf70e9803bb",
      "item": {
        "type": "paragraph",
        "id": "58b6ddf70e9803bb",
        "text": "Stopping SBCL"
      },
      "date": 1709042626444
    },
    {
      "type": "edit",
      "id": "58b6ddf70e9803bb",
      "item": {
        "type": "paragraph",
        "id": "58b6ddf70e9803bb",
        "text": "Stopping SBCL [http://www.sbcl.org/manual/#Stopping-SBCL page]"
      },
      "date": 1709042633087
    },
    {
      "id": "33316aa0d6655308",
      "type": "remove",
      "removedTo": {
        "page": "clog-inspector"
      },
      "date": 1709046902406
    },
    {
      "id": "dc87d763f58192b5",
      "type": "remove",
      "removedTo": {
        "page": "clog-inspector"
      },
      "date": 1709046906448
    },
    {
      "id": "8bb8ae93f62a5bfc",
      "type": "remove",
      "removedTo": {
        "page": "clog-inspector"
      },
      "date": 1709046920846
    },
    {
      "type": "remove",
      "id": "33e2f27cd1b30887",
      "date": 1709046960632
    },
    {
      "type": "remove",
      "id": "d88b84c7cc6e0d95",
      "date": 1709046962352
    },
    {
      "item": {
        "type": "factory",
        "id": "5173484c7d78e858"
      },
      "id": "5173484c7d78e858",
      "type": "add",
      "after": "58b6ddf70e9803bb",
      "date": 1709046973988
    },
    {
      "type": "edit",
      "id": "5173484c7d78e858",
      "item": {
        "type": "code",
        "id": "5173484c7d78e858",
        "text": "(sb-ext:exit)"
      },
      "date": 1709046976001
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709047032245
    },
    {
      "type": "remove",
      "id": "42d771226c6d7180",
      "date": 1709048834690
    },
    {
      "id": "af68a19055cc227d",
      "type": "move",
      "order": [
        "44a5f09ef7020fbe",
        "75a9b71af4073283",
        "bffde390ba6d55e4",
        "c5e7866706e34e47",
        "9c863d179b3d72a9",
        "1feb9d8fb9a24809",
        "dfac93d3c94e1cf9",
        "58b6ddf70e9803bb",
        "5173484c7d78e858",
        "af68a19055cc227d"
      ],
      "date": 1709048931096
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709048952348
    },
    {
      "item": {
        "type": "factory",
        "id": "841969f2a150dd3a"
      },
      "id": "841969f2a150dd3a",
      "type": "add",
      "after": "af68a19055cc227d",
      "date": 1709049170066
    },
    {
      "item": {
        "type": "factory",
        "id": "9cf9474182a2fe21"
      },
      "id": "9cf9474182a2fe21",
      "type": "add",
      "after": "841969f2a150dd3a",
      "date": 1709049174926
    },
    {
      "type": "edit",
      "id": "9cf9474182a2fe21",
      "item": {
        "type": "paragraph",
        "id": "9cf9474182a2fe21",
        "text": "Aside: to make my partition script operate in a random order I replaced a for loop with a while loop watching a random todo list. Randomizing a list of integers in javascript is tricky. First there is the trick to get a list of integers and then a trick to shuffle it. https://wiki.c2.com/?LinearShuffle"
      },
      "date": 1709049177556
    },
    {
      "type": "edit",
      "id": "9cf9474182a2fe21",
      "item": {
        "type": "paragraph",
        "id": "9cf9474182a2fe21",
        "text": "[…]: to make his partition script operate in a random order Ward replaced a for loop with a while loop watching a random todo list. Randomizing a list of integers in javascript is tricky. First there is the trick to get a list of integers and then a trick to shuffle it. https://wiki.c2.com/?LinearShuffle"
      },
      "date": 1709049216566
    },
    {
      "type": "edit",
      "id": "9cf9474182a2fe21",
      "item": {
        "type": "paragraph",
        "id": "9cf9474182a2fe21",
        "text": "[…]: to make his partition script operate in a random order Ward replaced a for loop with a while loop watching a random todo list. Randomizing a list of integers in javascript is tricky. First there is the trick to get a list of integers and then a trick to shuffle it. [https://wiki.c2.com/?LinearShuffle c2]"
      },
      "date": 1709049229086
    },
    {
      "type": "add",
      "id": "8d14a08da81e3077",
      "item": {
        "type": "paragraph",
        "id": "8d14a08da81e3077",
        "text": "⇒ [[Linear Shuffle]]"
      },
      "after": "9cf9474182a2fe21",
      "date": 1709049251256
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709049829312
    },
    {
      "type": "edit",
      "id": "a9727aa4c16af916",
      "item": {
        "type": "paragraph",
        "id": "a9727aa4c16af916",
        "text": "Relations are directional. A node keeps separate lists of inbound and outbound relations. A node can have many of each, including none. Relations know what nodes they connect. They always have a from and a to though this can be the same node. I modeled this after Neo4j which has the same semantics. This is similar to but not the same as \"triples\". The most distinctive difference between a triple store and a property graph is that one has a schema that defines what is allowed where a property graph holds whatever is put into it."
      },
      "date": 1709049839653
    },
    {
      "type": "edit",
      "id": "9cf9474182a2fe21",
      "item": {
        "type": "paragraph",
        "id": "9cf9474182a2fe21",
        "text": "Ward via matrix DM:"
      },
      "date": 1709049870155
    },
    {
      "type": "add",
      "id": "404cf083f07b2b57",
      "item": {
        "type": "paragraph",
        "id": "404cf083f07b2b57",
        "text": "[…]: to make his partition script operate in a random order Ward replaced a for loop with a while loop watching a random todo list. Randomizing a list of integers in javascript is tricky. First there is the trick to get a list of integers and then a trick to shuffle it. [https://wiki.c2.com/?LinearShuffle c2]"
      },
      "after": "9cf9474182a2fe21",
      "date": 1709049870917
    },
    {
      "item": {
        "type": "factory",
        "id": "a1bb99e3a948d965"
      },
      "id": "a1bb99e3a948d965",
      "type": "add",
      "after": "a9727aa4c16af916",
      "date": 1709049900269
    },
    {
      "type": "edit",
      "id": "a1bb99e3a948d965",
      "item": {
        "type": "paragraph",
        "id": "a1bb99e3a948d965",
        "text": "A graph could be corrupted if the nodes in & out don't agree with the relations from & to. We wrap the nodes and rels up in a class definition where changing one affects the other. Consider these fields to be read-only outside the class, though that is not enforced. One can changed the other fields at will. "
      },
      "date": 1709049917715
    },
    {
      "item": {
        "type": "factory",
        "id": "db8a21814692de01"
      },
      "id": "db8a21814692de01",
      "type": "add",
      "after": "a1bb99e3a948d965",
      "date": 1709049934574
    },
    {
      "type": "edit",
      "id": "db8a21814692de01",
      "item": {
        "type": "paragraph",
        "id": "db8a21814692de01",
        "text": "The addRel function expects a type, from and to, and optionally an object with properties to be remembered within the relation."
      },
      "date": 1709049937598
    },
    {
      "type": "edit",
      "id": "db8a21814692de01",
      "item": {
        "type": "paragraph",
        "id": "db8a21814692de01",
        "text": "[…] the right number of arguments […] The addRel function expects a type, from and to, and optionally an object with properties to be remembered within the relation."
      },
      "date": 1709049967556
    },
    {
      "item": {
        "type": "factory",
        "id": "1fd00ffd1a5c0d2f"
      },
      "id": "1fd00ffd1a5c0d2f",
      "type": "add",
      "after": "db8a21814692de01",
      "date": 1709049993291
    },
    {
      "type": "edit",
      "id": "1fd00ffd1a5c0d2f",
      "item": {
        "type": "paragraph",
        "id": "1fd00ffd1a5c0d2f",
        "text": "This from the documentation: [https://wardcunningham.github.io/graph/ github.io]"
      },
      "date": 1709050005775
    },
    {
      "item": {
        "type": "factory",
        "id": "9f939068ff9decb4"
      },
      "id": "9f939068ff9decb4",
      "type": "add",
      "after": "1fd00ffd1a5c0d2f",
      "date": 1709050019347
    },
    {
      "type": "edit",
      "id": "9f939068ff9decb4",
      "item": {
        "type": "markdown",
        "id": "9f939068ff9decb4",
        "text": "> Add nodes to the graph.\nRemember node ids."
      },
      "date": 1709050025794
    },
    {
      "item": {
        "type": "factory",
        "id": "49b5af65ba8098b3"
      },
      "id": "49b5af65ba8098b3",
      "type": "add",
      "after": "9f939068ff9decb4",
      "date": 1709050031653
    },
    {
      "type": "edit",
      "id": "49b5af65ba8098b3",
      "item": {
        "type": "code",
        "id": "49b5af65ba8098b3",
        "text": "  const repo = graph.addNode('Repo',{name:'Graph',url:'https://github.com/WardCunningham/graph/'})\n  const docs = graph.addNode('Docs',{name:'Graph',url:'https://wardcunningham.github.io/graph/'})\n"
      },
      "date": 1709050033888
    },
    {
      "item": {
        "type": "factory",
        "id": "a567c7a493100777"
      },
      "id": "a567c7a493100777",
      "type": "add",
      "after": "49b5af65ba8098b3",
      "date": 1709050048950
    },
    {
      "type": "edit",
      "id": "a567c7a493100777",
      "item": {
        "type": "markdown",
        "id": "a567c7a493100777",
        "text": "> Add relation to the graph.\nConnect remembered nodes by id."
      },
      "date": 1709050053796
    },
    {
      "item": {
        "type": "factory",
        "id": "0360ae43e84130a6"
      },
      "id": "0360ae43e84130a6",
      "type": "add",
      "after": "a567c7a493100777",
      "date": 1709050060029
    },
    {
      "type": "edit",
      "id": "0360ae43e84130a6",
      "item": {
        "type": "code",
        "id": "0360ae43e84130a6",
        "text": "  graph.addRel('Hosts',repo,docs,{})\n"
      },
      "date": 1709050062752
    },
    {
      "type": "edit",
      "id": "0360ae43e84130a6",
      "item": {
        "type": "code",
        "id": "0360ae43e84130a6",
        "text": "graph.addRel('Hosts',repo,docs,{})\n"
      },
      "date": 1709050068724
    },
    {
      "type": "edit",
      "id": "49b5af65ba8098b3",
      "item": {
        "type": "code",
        "id": "49b5af65ba8098b3",
        "text": "const repo = graph.addNode('Repo',{name:'Graph',url:'https://github.com/WardCunningham/graph/'})\n  \nconst docs = graph.addNode('Docs',{name:'Graph',url:'https://wardcunningham.github.io/graph/'})\n"
      },
      "date": 1709050084210
    },
    {
      "item": {
        "type": "factory",
        "id": "d29ea9d6498b884e"
      },
      "id": "d29ea9d6498b884e",
      "type": "add",
      "after": "0360ae43e84130a6",
      "date": 1709050098573
    },
    {
      "type": "edit",
      "id": "d29ea9d6498b884e",
      "item": {
        "type": "paragraph",
        "id": "d29ea9d6498b884e",
        "text": "This is the implementation of addNode and addRel that we are currently using."
      },
      "date": 1709050100538
    },
    {
      "item": {
        "type": "factory",
        "id": "ab2ccf57f43c47a9"
      },
      "id": "ab2ccf57f43c47a9",
      "type": "add",
      "after": "d29ea9d6498b884e",
      "date": 1709050108596
    },
    {
      "type": "edit",
      "id": "ab2ccf57f43c47a9",
      "item": {
        "type": "code",
        "id": "ab2ccf57f43c47a9",
        "text": "  addNode(type, props={}){\n    const obj = {type, in:[], out:[], props};\n    this.nodes.push(obj);\n    return this.nodes.length-1;\n  }\n\n  addRel(type, from, to, props={}) {\n    const obj = {type, from, to, props};\n    this.rels.push(obj);\n    const rid = this.rels.length-1;\n    this.nodes[from].out.push(rid)\n    this.nodes[to].in.push(rid);\n    return rid;\n  }\n"
      },
      "date": 1709050115070
    },
    {
      "item": {
        "type": "factory",
        "id": "5158bbbe9bb5f4ae"
      },
      "id": "5158bbbe9bb5f4ae",
      "type": "add",
      "after": "ab2ccf57f43c47a9",
      "date": 1709050127176
    },
    {
      "type": "edit",
      "id": "5158bbbe9bb5f4ae",
      "item": {
        "type": "paragraph",
        "id": "5158bbbe9bb5f4ae",
        "text": "JSON doesn't have any provision for saving class-based objects so we pull the two arrays out as a simple object, {nodes,rels}, when we save a Graph as JSON. \nRemember, we moved away from building up graphs as dot commands so that we could more easily work with the graph once created. \n"
      },
      "date": 1709050129034
    },
    {
      "type": "edit",
      "id": "5158bbbe9bb5f4ae",
      "item": {
        "type": "paragraph",
        "id": "5158bbbe9bb5f4ae",
        "text": "JSON doesn't have any provision for saving class-based objects so we pull the two arrays out as a simple object, {nodes,rels}, when we save a Graph as JSON."
      },
      "date": 1709050136083
    },
    {
      "type": "add",
      "id": "789d3bf18dcd7e6d",
      "item": {
        "type": "paragraph",
        "id": "789d3bf18dcd7e6d",
        "text": "Remember, we moved away from building up graphs as dot commands so that we could more easily work with the graph once created."
      },
      "after": "5158bbbe9bb5f4ae",
      "date": 1709050136720
    },
    {
      "item": {
        "type": "factory",
        "id": "1551524b155fea05"
      },
      "id": "1551524b155fea05",
      "type": "add",
      "after": "789d3bf18dcd7e6d",
      "date": 1709050248354
    },
    {
      "type": "edit",
      "id": "1551524b155fea05",
      "item": {
        "type": "paragraph",
        "id": "1551524b155fea05",
        "text": "⇒ [[Parse Page Paragraphs]]"
      },
      "date": 1709050258112
    },
    {
      "type": "edit",
      "id": "841969f2a150dd3a",
      "item": {
        "type": "pagefold",
        "id": "841969f2a150dd3a",
        "text": "~"
      },
      "date": 1709050804548
    },
    {
      "type": "add",
      "id": "5a9fabd5545d01b7",
      "item": {
        "type": "paragraph",
        "id": "5a9fabd5545d01b7",
        "text": "Relations are directional. A node keeps separate lists of inbound and outbound relations. A node can have many of each, including none. Relations know what nodes they connect. They always have a from and a to though this can be the same node. I modeled this after Neo4j which has the same semantics. This is similar to but not the same as \"triples\". The most distinctive difference between a triple store and a property graph is that one has a schema that defines what is allowed where a property graph holds whatever is put into it."
      },
      "after": "8d14a08da81e3077",
      "date": 1709050887971
    },
    {
      "id": "a1bb99e3a948d965",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050897556
    },
    {
      "id": "94329d1059aaa7fd",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "94329d1059aaa7fd",
        "text": "A graph could be corrupted if the nodes in & out don't agree with the relations from & to. We wrap the nodes and rels up in a class definition where changing one affects the other. Consider these fields to be read-only outside the class, though that is not enforced. One can changed the other fields at will. ",
        "alias": "a1bb99e3a948d965"
      },
      "after": "5a9fabd5545d01b7",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050901368
    },
    {
      "id": "db8a21814692de01",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050912688
    },
    {
      "id": "db8a21814692de01",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "db8a21814692de01",
        "text": "[…] the right number of arguments […] The addRel function expects a type, from and to, and optionally an object with properties to be remembered within the relation."
      },
      "after": "94329d1059aaa7fd",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050920189
    },
    {
      "id": "1fd00ffd1a5c0d2f",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050932735
    },
    {
      "id": "cef13a0fa4258029",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "cef13a0fa4258029",
        "text": "This from the documentation: [https://wardcunningham.github.io/graph/ github.io]",
        "alias": "1fd00ffd1a5c0d2f"
      },
      "after": "db8a21814692de01",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050937834
    },
    {
      "id": "9f939068ff9decb4",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050944365
    },
    {
      "id": "9f939068ff9decb4",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "9f939068ff9decb4",
        "text": "> Add nodes to the graph.\nRemember node ids."
      },
      "after": "cef13a0fa4258029",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050955504
    },
    {
      "id": "49b5af65ba8098b3",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050963392
    },
    {
      "id": "bec727fb1694a45a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "bec727fb1694a45a",
        "text": "const repo = graph.addNode('Repo',{name:'Graph',url:'https://github.com/WardCunningham/graph/'})\n  \nconst docs = graph.addNode('Docs',{name:'Graph',url:'https://wardcunningham.github.io/graph/'})\n",
        "alias": "49b5af65ba8098b3"
      },
      "after": "9f939068ff9decb4",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050970442
    },
    {
      "id": "a567c7a493100777",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050982117
    },
    {
      "id": "239b70e7db5f99f5",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "239b70e7db5f99f5",
        "text": "> Add relation to the graph.\nConnect remembered nodes by id.",
        "alias": "a567c7a493100777"
      },
      "after": "bec727fb1694a45a",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709050987591
    },
    {
      "id": "0360ae43e84130a6",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709050994016
    },
    {
      "id": "0360ae43e84130a6",
      "type": "add",
      "item": {
        "type": "code",
        "id": "0360ae43e84130a6",
        "text": "graph.addRel('Hosts',repo,docs,{})\n"
      },
      "after": "239b70e7db5f99f5",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051002761
    },
    {
      "id": "d29ea9d6498b884e",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709051016629
    },
    {
      "id": "029ada4d83b18a66",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "029ada4d83b18a66",
        "text": "This is the implementation of addNode and addRel that we are currently using.",
        "alias": "d29ea9d6498b884e"
      },
      "after": "0360ae43e84130a6",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051022380
    },
    {
      "id": "ab2ccf57f43c47a9",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709051038490
    },
    {
      "id": "22ccb25f8de5afd4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "22ccb25f8de5afd4",
        "text": "  addNode(type, props={}){\n    const obj = {type, in:[], out:[], props};\n    this.nodes.push(obj);\n    return this.nodes.length-1;\n  }\n\n  addRel(type, from, to, props={}) {\n    const obj = {type, from, to, props};\n    this.rels.push(obj);\n    const rid = this.rels.length-1;\n    this.nodes[from].out.push(rid)\n    this.nodes[to].in.push(rid);\n    return rid;\n  }\n",
        "alias": "ab2ccf57f43c47a9"
      },
      "after": "029ada4d83b18a66",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051043083
    },
    {
      "id": "5158bbbe9bb5f4ae",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709051056051
    },
    {
      "id": "27f827ec7fe2964f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "27f827ec7fe2964f",
        "text": "JSON doesn't have any provision for saving class-based objects so we pull the two arrays out as a simple object, {nodes,rels}, when we save a Graph as JSON.",
        "alias": "5158bbbe9bb5f4ae"
      },
      "after": "22ccb25f8de5afd4",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051060262
    },
    {
      "id": "789d3bf18dcd7e6d",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709051068348
    },
    {
      "id": "3fdae30dfabb9504",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3fdae30dfabb9504",
        "text": "Remember, we moved away from building up graphs as dot commands so that we could more easily work with the graph once created.",
        "alias": "789d3bf18dcd7e6d"
      },
      "after": "27f827ec7fe2964f",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051073637
    },
    {
      "id": "1551524b155fea05",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1709051079269
    },
    {
      "id": "1551524b155fea05",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1551524b155fea05",
        "text": "⇒ [[Parse Page Paragraphs]]"
      },
      "after": "3fdae30dfabb9504",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709051087781
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709052602710
    },
    {
      "type": "add",
      "id": "732c8a909d3e7a51",
      "item": {
        "type": "paragraph",
        "id": "732c8a909d3e7a51",
        "text": "I send the graph as JSONL from the SOURCE graph frame to the LINEUP graph frame. See current version at [http://wiki.ralfbarkow.ch/view/lineup-graph/view/parse-page-paragraphs lineup]\n\nClick start"
      },
      "after": "1551524b155fea05",
      "date": 1709052761227
    },
    {
      "type": "add",
      "id": "6a528f9b96fa4c1e",
      "item": {
        "type": "paragraph",
        "id": "6a528f9b96fa4c1e",
        "text": "In addition to my actual goal of analyzing the paragraph texts, I may next try to render the Graphviz diagram based on the graph arriving in the LINEUP graph frame, thus reproducing the diagram on the right in the lineup on the left but with other techniques"
      },
      "after": "732c8a909d3e7a51",
      "date": 1709052770956
    },
    {
      "id": "e7e0d71095ec1c81",
      "type": "add",
      "item": {
        "type": "image",
        "id": "e7e0d71095ec1c81",
        "text": "Second drop-down list",
        "size": "wide",
        "width": 419,
        "height": 158,
        "url": "/assets/plugins/image/63b483ab9bc14bfef8095fa8ad9de74b.jpg"
      },
      "after": "732c8a909d3e7a51",
      "attribution": {
        "page": "Parse Page Paragraphs"
      },
      "date": 1709052947423
    },
    {
      "type": "edit",
      "id": "732c8a909d3e7a51",
      "item": {
        "type": "paragraph",
        "id": "732c8a909d3e7a51",
        "text": "I send the graph as JSONL from the SOURCE graph frame to the LINEUP graph frame. See current version at [http://wiki.ralfbarkow.ch/view/lineup-graph/view/parse-page-paragraphs lineup]"
      },
      "date": 1709052956586
    },
    {
      "type": "add",
      "id": "f0653e932d102243",
      "item": {
        "type": "paragraph",
        "id": "f0653e932d102243",
        "text": "Click start"
      },
      "after": "732c8a909d3e7a51",
      "date": 1709052957535
    },
    {
      "id": "f0653e932d102243",
      "type": "move",
      "order": [
        "44a5f09ef7020fbe",
        "75a9b71af4073283",
        "bffde390ba6d55e4",
        "c5e7866706e34e47",
        "9c863d179b3d72a9",
        "1feb9d8fb9a24809",
        "dfac93d3c94e1cf9",
        "58b6ddf70e9803bb",
        "5173484c7d78e858",
        "af68a19055cc227d",
        "841969f2a150dd3a",
        "9cf9474182a2fe21",
        "404cf083f07b2b57",
        "8d14a08da81e3077",
        "5a9fabd5545d01b7",
        "94329d1059aaa7fd",
        "db8a21814692de01",
        "cef13a0fa4258029",
        "9f939068ff9decb4",
        "bec727fb1694a45a",
        "239b70e7db5f99f5",
        "0360ae43e84130a6",
        "029ada4d83b18a66",
        "22ccb25f8de5afd4",
        "27f827ec7fe2964f",
        "3fdae30dfabb9504",
        "1551524b155fea05",
        "732c8a909d3e7a51",
        "e7e0d71095ec1c81",
        "f0653e932d102243",
        "6a528f9b96fa4c1e"
      ],
      "date": 1709052963550
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709053026477
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709099777375
    }
  ]
}