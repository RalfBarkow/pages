{
  "title": "Isolation without Containers",
  "story": [
    {
      "type": "markdown",
      "id": "40e8b2cff9b37233",
      "text": "Eric turned the weekly meeting with Ward toward a rich discussion on software lineage resulting in WASM by sharing this talk on \"Isolation without Containers\" [[Wiki Dev/User Video Chat Oct 31]] "
    },
    {
      "type": "video",
      "id": "447da702b4331045",
      "text": "YOUTUBE FkM1L8-qcjU\nIsolation without Containers by Tyler McMullen\n"
    },
    {
      "type": "markdown",
      "id": "a4333390dc260812",
      "text": "Abstract: \n"
    },
    {
      "type": "markdown",
      "id": "99c0291ac9a913e5",
      "text": "Software Fault Isolation, or SFI, is a way of preventing errors or unexpected behavior in one program from affecting others. Sandboxes, processes, containers, and VMs are all forms of SFI. SFI is a deeply important part of not only operating systems, but also browsers, and even server software.\n\nThe ways in which SFI can be implemented vary widely. Operating systems take advantage of hardware capabilities, like the MMU (Memory Management Unit). Others, like processes and containers, use facilities provided by the operating system kernel to provide isolation. Some types of sandboxing even use a combination of the compiler and runtime libraries in order to provide safety.\n"
    },
    {
      "type": "markdown",
      "id": "996c3d67570c0bbe",
      "text": "Which brings us back to Alan Kay's and Mark Miller's on object-capabilities in programming languages for safety on the internet."
    },
    {
      "type": "paragraph",
      "id": "24c4bfa04895dd87",
      "text": "See [[Fastly's Terrarium]]"
    },
    {
      "type": "pagefold",
      "id": "394cb89a274f92c6",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "140adc97081e518c",
      "text": "Cranelift, a low-level retargetable code generator written in Rust. [https://news.ycombinator.com/item?id=17734750 post]"
    },
    {
      "type": "paragraph",
      "id": "f1f1970d13c82887",
      "text": "WebAssembly on Cloudflare Workers. [https://blog.cloudflare.com/webassembly-on-cloudflare-workers/ post]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Isolation without Containers",
        "story": []
      },
      "date": 1541023740586
    },
    {
      "item": {
        "type": "factory",
        "id": "40e8b2cff9b37233"
      },
      "id": "40e8b2cff9b37233",
      "type": "add",
      "date": 1541023742395
    },
    {
      "type": "edit",
      "id": "40e8b2cff9b37233",
      "item": {
        "type": "markdown",
        "id": "40e8b2cff9b37233",
        "text": "Eric turned the weekly meeting with Ward toward isolation without containers. [[Wiki Dev/User Video Chat Oct 31]] "
      },
      "date": 1541023915325
    },
    {
      "item": {
        "type": "factory",
        "id": "447da702b4331045"
      },
      "id": "447da702b4331045",
      "type": "add",
      "after": "40e8b2cff9b37233",
      "date": 1541023976034
    },
    {
      "type": "edit",
      "id": "447da702b4331045",
      "item": {
        "type": "video",
        "id": "447da702b4331045",
        "text": "YOUTUBE FkM1L8-qcjU\n(double-click to edit caption)\n"
      },
      "date": 1541023986338
    },
    {
      "type": "edit",
      "id": "447da702b4331045",
      "item": {
        "type": "video",
        "id": "447da702b4331045",
        "text": "YOUTUBE FkM1L8-qcjU\nIsolation without Containers by Tyler McMullen\n"
      },
      "date": 1541024056241
    },
    {
      "type": "edit",
      "id": "40e8b2cff9b37233",
      "item": {
        "type": "markdown",
        "id": "40e8b2cff9b37233",
        "text": "Eric turned the weekly meeting with Ward toward capabilities [[Wiki Dev/User Video Chat Oct 31]] "
      },
      "date": 1541024106403
    },
    {
      "type": "edit",
      "id": "40e8b2cff9b37233",
      "item": {
        "type": "markdown",
        "id": "40e8b2cff9b37233",
        "text": "Eric turned the weekly meeting with Ward toward a rich discussion on software capabilities [[Wiki Dev/User Video Chat Oct 31]] "
      },
      "date": 1541024143003
    },
    {
      "type": "edit",
      "id": "40e8b2cff9b37233",
      "item": {
        "type": "markdown",
        "id": "40e8b2cff9b37233",
        "text": "Eric turned the weekly meeting with Ward toward a rich discussion on software lineage resulting in WASM by sharing this talk on Isolation without Containers [[Wiki Dev/User Video Chat Oct 31]] "
      },
      "date": 1541024470744
    },
    {
      "item": {
        "type": "factory",
        "id": "c0fa40f1e8466e1d"
      },
      "id": "c0fa40f1e8466e1d",
      "type": "add",
      "after": "447da702b4331045",
      "date": 1541024484527
    },
    {
      "type": "remove",
      "id": "c0fa40f1e8466e1d",
      "date": 1541024517160
    },
    {
      "type": "edit",
      "id": "40e8b2cff9b37233",
      "item": {
        "type": "markdown",
        "id": "40e8b2cff9b37233",
        "text": "Eric turned the weekly meeting with Ward toward a rich discussion on software lineage resulting in WASM by sharing this talk on \"Isolation without Containers\" [[Wiki Dev/User Video Chat Oct 31]] "
      },
      "date": 1541024547610
    },
    {
      "item": {
        "type": "factory",
        "id": "a4333390dc260812"
      },
      "id": "a4333390dc260812",
      "type": "add",
      "after": "447da702b4331045",
      "date": 1541024685451
    },
    {
      "type": "edit",
      "id": "a4333390dc260812",
      "item": {
        "type": "markdown",
        "id": "a4333390dc260812",
        "text": "Abstract: \n"
      },
      "date": 1541024701864
    },
    {
      "type": "add",
      "id": "99c0291ac9a913e5",
      "item": {
        "type": "markdown",
        "id": "99c0291ac9a913e5",
        "text": "Software Fault Isolation, or SFI, is a way of preventing errors or unexpected behavior in one program from affecting others. Sandboxes, processes, containers, and VMs are all forms of SFI. SFI is a deeply important part of not only operating systems, but also browsers, and even server software.\n\nThe ways in which SFI can be implemented vary widely. Operating systems take advantage of hardware capabilities, like the MMU (Memory Management Unit). Others, like processes and containers, use facilities provided by the operating system kernel to provide isolation. Some types of sandboxing even use a combination of the compiler and runtime libraries in order to provide safety.\n"
      },
      "after": "a4333390dc260812",
      "date": 1541024732813
    },
    {
      "item": {
        "type": "factory",
        "id": "996c3d67570c0bbe"
      },
      "id": "996c3d67570c0bbe",
      "type": "add",
      "after": "99c0291ac9a913e5",
      "date": 1541024739156
    },
    {
      "type": "edit",
      "id": "996c3d67570c0bbe",
      "item": {
        "type": "markdown",
        "id": "996c3d67570c0bbe",
        "text": "Which brings us back to Alan Kay's and Mark Miller's work on object-capabilities in programming languages for safety on the internet."
      },
      "date": 1541024914558
    },
    {
      "type": "edit",
      "id": "996c3d67570c0bbe",
      "item": {
        "type": "markdown",
        "id": "996c3d67570c0bbe",
        "text": "Which brings us back to Alan Kay's (early work) and Mark Miller's (current work) on object-capabilities in programming languages for safety on the internet."
      },
      "date": 1541024970398
    },
    {
      "type": "edit",
      "id": "996c3d67570c0bbe",
      "item": {
        "type": "markdown",
        "id": "996c3d67570c0bbe",
        "text": "Which brings us back to Alan Kay's and Mark Miller's on object-capabilities in programming languages for safety on the internet."
      },
      "date": 1541024991462
    },
    {
      "type": "fork",
      "site": "clive.tries.fed.wiki",
      "date": 1542239046939
    },
    {
      "item": {
        "type": "factory",
        "id": "394cb89a274f92c6"
      },
      "id": "394cb89a274f92c6",
      "type": "add",
      "after": "996c3d67570c0bbe",
      "date": 1542303215519
    },
    {
      "type": "edit",
      "id": "394cb89a274f92c6",
      "item": {
        "type": "pagefold",
        "id": "394cb89a274f92c6",
        "text": "."
      },
      "date": 1542303220260
    },
    {
      "item": {
        "type": "factory",
        "id": "140adc97081e518c"
      },
      "id": "140adc97081e518c",
      "type": "add",
      "after": "394cb89a274f92c6",
      "date": 1542303222059
    },
    {
      "type": "edit",
      "id": "140adc97081e518c",
      "item": {
        "type": "paragraph",
        "id": "140adc97081e518c",
        "text": "[https://news.ycombinator.com/item?id=17734750 post]"
      },
      "date": 1542303240096
    },
    {
      "type": "edit",
      "id": "140adc97081e518c",
      "item": {
        "type": "paragraph",
        "id": "140adc97081e518c",
        "text": "Cranelift, a low-level retargetable code generator written in Rust. [https://news.ycombinator.com/item?id=17734750 post]"
      },
      "date": 1542303264575
    },
    {
      "item": {
        "type": "factory",
        "id": "f1f1970d13c82887"
      },
      "id": "f1f1970d13c82887",
      "type": "add",
      "after": "140adc97081e518c",
      "date": 1542303358780
    },
    {
      "type": "edit",
      "id": "f1f1970d13c82887",
      "item": {
        "type": "paragraph",
        "id": "f1f1970d13c82887",
        "text": "[https://blog.cloudflare.com/webassembly-on-cloudflare-workers/ post]"
      },
      "date": 1542303371159
    },
    {
      "type": "edit",
      "id": "f1f1970d13c82887",
      "item": {
        "type": "paragraph",
        "id": "f1f1970d13c82887",
        "text": "WebAssembly on Cloudflare Workers. [https://blog.cloudflare.com/webassembly-on-cloudflare-workers/ post]"
      },
      "date": 1542303392085
    },
    {
      "type": "add",
      "id": "24c4bfa04895dd87",
      "item": {
        "type": "paragraph",
        "id": "24c4bfa04895dd87",
        "text": "See [[Fastly's Terrarium]]"
      },
      "after": "f1f1970d13c82887",
      "date": 1542775291352
    },
    {
      "type": "move",
      "order": [
        "40e8b2cff9b37233",
        "447da702b4331045",
        "a4333390dc260812",
        "99c0291ac9a913e5",
        "996c3d67570c0bbe",
        "24c4bfa04895dd87",
        "394cb89a274f92c6",
        "140adc97081e518c",
        "f1f1970d13c82887"
      ],
      "id": "24c4bfa04895dd87",
      "date": 1542775315803
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1627295588039
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1627295905359
    }
  ]
}