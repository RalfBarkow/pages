{
  "title": "Replicated Computation",
  "story": [
    {
      "type": "markdown",
      "id": "1ab25046fb9cb173",
      "text": "Replication in computing involves sharing information so as to ensure consistency between redundant resources, such as software or hardware components, to improve reliability, fault-tolerance, or accessibility. [https://en.wikipedia.org/wiki/Replication_(computing) wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "86ffeea9c38cac2e",
      "text": "[[Croquet]] is based upon the concept of replicated computation [⇒[[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[Time Based Messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
    },
    {
      "type": "pagefold",
      "id": "8b810eda2b004e7d",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "c3f85ba0b22676c2",
      "text": "– https://liacs.leidenuniv.nl/assets/Bachelorscripties/2009-06SjaakWolff.pdf"
    },
    {
      "type": "markdown",
      "id": "a7f9f12cc218caae",
      "text": "– https://wwj718.github.io/post/img/Croquet%20Programming%201.0B.pdf\n"
    },
    {
      "type": "markdown",
      "id": "f88eef4376db9a2d",
      "text": "– https://cyber.ee/uploads/ilja_livenson_msc_d7c2ef2b32.pdf ⇒  [[Project Wonderland]]"
    },
    {
      "type": "pagefold",
      "id": "d1f3e3b5bf46faee",
      "text": "–"
    },
    {
      "type": "graphviz",
      "id": "b0d00dab2651d564",
      "text": "DOT FROM lambda-browsing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Replicated Computation",
        "story": []
      },
      "date": 1654059844268
    },
    {
      "item": {
        "type": "factory",
        "id": "1ab25046fb9cb173"
      },
      "id": "1ab25046fb9cb173",
      "type": "add",
      "date": 1654059847172
    },
    {
      "type": "edit",
      "id": "1ab25046fb9cb173",
      "item": {
        "type": "paragraph",
        "id": "1ab25046fb9cb173",
        "text": "– https://en.wikipedia.org/wiki/Replication_(computing)"
      },
      "date": 1654059849723
    },
    {
      "type": "edit",
      "id": "1ab25046fb9cb173",
      "item": {
        "type": "markdown",
        "id": "1ab25046fb9cb173",
        "text": "– https://en.wikipedia.org/wiki/Replication_(computing)"
      },
      "date": 1654059850848
    },
    {
      "type": "edit",
      "id": "1ab25046fb9cb173",
      "item": {
        "type": "markdown",
        "id": "1ab25046fb9cb173",
        "text": "– [https://en.wikipedia.org/wiki/Replication_(computing) wikipedia]"
      },
      "date": 1654059887292
    },
    {
      "type": "edit",
      "id": "1ab25046fb9cb173",
      "item": {
        "type": "markdown",
        "id": "1ab25046fb9cb173",
        "text": "Replication in computing involves sharing information so as to ensure consistency between redundant resources, such as software or hardware components, to improve reliability, fault-tolerance, or accessibility. [https://en.wikipedia.org/wiki/Replication_(computing) wikipedia]"
      },
      "date": 1654059902140
    },
    {
      "item": {
        "type": "factory",
        "id": "86ffeea9c38cac2e"
      },
      "id": "86ffeea9c38cac2e",
      "type": "add",
      "after": "1ab25046fb9cb173",
      "date": 1654451720453
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "Croquet is based upon the concept of replicated computation – rather than replicated data. Croquet\nis based upon a synchronized message passing model, where the messages themselves ensure that the\nreplicated systems remain consistent between machines. Though it is necessary to synchronize the world state\nof a new user by transferring the current contents of the world, after that, the worlds stay consistent only\nthrough the creation and processing of time based messages."
      },
      "date": 1654451724231
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of time based messages."
      },
      "date": 1654451773277
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of time based messages. [System Overview]"
      },
      "date": 1654451815381
    },
    {
      "item": {
        "type": "factory",
        "id": "d7738a1866d25bec"
      },
      "id": "d7738a1866d25bec",
      "type": "add",
      "after": "86ffeea9c38cac2e",
      "date": 1654451833297
    },
    {
      "type": "edit",
      "id": "d7738a1866d25bec",
      "item": {
        "type": "paragraph",
        "id": "d7738a1866d25bec",
        "text": "\nSCHWAN, Waldemar, [no date]. System Overview - Croquet Consortium. . P. 9. \n"
      },
      "date": 1654451839688
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of time based messages. [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview System Overview]"
      },
      "date": 1654451911544
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of time based messages. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654451947914
    },
    {
      "type": "remove",
      "id": "d7738a1866d25bec",
      "date": 1654451994680
    },
    {
      "item": {
        "type": "factory",
        "id": "8b810eda2b004e7d"
      },
      "id": "8b810eda2b004e7d",
      "type": "add",
      "after": "86ffeea9c38cac2e",
      "date": 1654452089002
    },
    {
      "type": "edit",
      "id": "8b810eda2b004e7d",
      "item": {
        "type": "pagefold",
        "id": "8b810eda2b004e7d",
        "text": "~"
      },
      "date": 1654452092338
    },
    {
      "item": {
        "type": "factory",
        "id": "c3f85ba0b22676c2"
      },
      "id": "c3f85ba0b22676c2",
      "type": "add",
      "after": "8b810eda2b004e7d",
      "date": 1654452093681
    },
    {
      "type": "edit",
      "id": "c3f85ba0b22676c2",
      "item": {
        "type": "paragraph",
        "id": "c3f85ba0b22676c2",
        "text": "– https://liacs.leidenuniv.nl/assets/Bachelorscripties/2009-06SjaakWolff.pdf"
      },
      "date": 1654452097971
    },
    {
      "type": "edit",
      "id": "c3f85ba0b22676c2",
      "item": {
        "type": "markdown",
        "id": "c3f85ba0b22676c2",
        "text": "– https://liacs.leidenuniv.nl/assets/Bachelorscripties/2009-06SjaakWolff.pdf"
      },
      "date": 1654452098918
    },
    {
      "item": {
        "type": "factory",
        "id": "a7f9f12cc218caae"
      },
      "id": "a7f9f12cc218caae",
      "type": "add",
      "after": "c3f85ba0b22676c2",
      "date": 1654452123843
    },
    {
      "type": "edit",
      "id": "a7f9f12cc218caae",
      "item": {
        "type": "paragraph",
        "id": "a7f9f12cc218caae",
        "text": "– https://wwj718.github.io/post/img/Croquet%20Programming%201.0B.pdf"
      },
      "date": 1654452126109
    },
    {
      "type": "edit",
      "id": "a7f9f12cc218caae",
      "item": {
        "type": "markdown",
        "id": "a7f9f12cc218caae",
        "text": "– https://wwj718.github.io/post/img/Croquet%20Programming%201.0B.pdf"
      },
      "date": 1654452127162
    },
    {
      "type": "edit",
      "id": "a7f9f12cc218caae",
      "item": {
        "type": "markdown",
        "id": "a7f9f12cc218caae",
        "text": "– https://wwj718.github.io/post/img/Croquet%20Programming%201.0B.pdf\n"
      },
      "date": 1654452218258
    },
    {
      "type": "add",
      "id": "f88eef4376db9a2d",
      "item": {
        "type": "markdown",
        "id": "f88eef4376db9a2d",
        "text": "– https://cyber.ee/uploads/ilja_livenson_msc_d7c2ef2b32.pdf"
      },
      "after": "a7f9f12cc218caae",
      "date": 1654452220502
    },
    {
      "type": "edit",
      "id": "f88eef4376db9a2d",
      "item": {
        "type": "markdown",
        "id": "f88eef4376db9a2d",
        "text": "– https://cyber.ee/uploads/ilja_livenson_msc_d7c2ef2b32.pdf – [[Project Wonderland]]"
      },
      "date": 1654452269186
    },
    {
      "type": "edit",
      "id": "f88eef4376db9a2d",
      "item": {
        "type": "markdown",
        "id": "f88eef4376db9a2d",
        "text": "– https://cyber.ee/uploads/ilja_livenson_msc_d7c2ef2b32.pdf ⇒  [[Project Wonderland]]"
      },
      "date": 1654452275467
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[time based messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654452378380
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation [–[[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[time based messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654772524321
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation [⇒[[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[time based messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654772533909
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation [⇒ [[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[time based messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654772554121
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation [⇒[[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[time based messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654772566349
    },
    {
      "item": {
        "type": "factory",
        "id": "d1f3e3b5bf46faee"
      },
      "id": "d1f3e3b5bf46faee",
      "type": "add",
      "after": "f88eef4376db9a2d",
      "date": 1654772568668
    },
    {
      "type": "edit",
      "id": "d1f3e3b5bf46faee",
      "item": {
        "type": "pagefold",
        "id": "d1f3e3b5bf46faee",
        "text": "–"
      },
      "date": 1654772574150
    },
    {
      "item": {
        "type": "factory",
        "id": "b0d00dab2651d564"
      },
      "id": "b0d00dab2651d564",
      "type": "add",
      "after": "d1f3e3b5bf46faee",
      "date": 1654772575721
    },
    {
      "type": "edit",
      "id": "b0d00dab2651d564",
      "item": {
        "type": "graphviz",
        "id": "b0d00dab2651d564",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1654772584127
    },
    {
      "type": "edit",
      "id": "86ffeea9c38cac2e",
      "item": {
        "type": "paragraph",
        "id": "86ffeea9c38cac2e",
        "text": "[[Croquet]] is based upon the concept of replicated computation [⇒[[Computational Irreducibility]]] – rather than replicated data. Croquet is based upon a synchronized message passing model, where the messages themselves ensure that the replicated systems remain consistent between machines. Though it is necessary to synchronize the world state of a new user by transferring the current contents of the world, after that, the worlds stay consistent only through the creation and processing of [[Time Based Messages]]. (System Overview [https://web.archive.org/web/20080725005021/http://croquetproject.org/index.php/System_Overview wayback])"
      },
      "date": 1654844107486
    }
  ]
}