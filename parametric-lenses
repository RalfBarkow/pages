{
  "title": "Parametric Lenses",
  "story": [
    {
      "type": "paragraph",
      "id": "77f8a3233498ed16",
      "text": "Most complex applications inevitably need to maintain dependencies between subsystems based on some shared data. The dependent parts must be informed that the shared information is changed. As every actual notification has some communication cost, and every triggered task has associated computation cost, it is crucial for the overall performance of the application to reduce the number of notifications as much as possible. To achieve this, one must be able to define, with arbitrary precision, which party is depending on which data. In this paper we offer a general solution to this general problem. The solution is based on an extension to bidirectional lenses, called parametric lenses. With the help of parametric lenses one can define compositional parametric views in a declarative way to access some shared data. Parametric views, besides providing read/write access to the shared data, also enable to observe changes of some parts, given by an explicit parameter, the focus domain. The focus domain can be specified as a type-based query language defined over one or more resources using predefined combinators of parametric views."
    },
    {
      "type": "pagefold",
      "id": "119594a3310a6f90",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "00bc1267a5133678",
      "text": "\nDOMOSZLAI, László, LIJNSE, Bas and PLASMEIJER, Rinus, 2014. Parametric lenses: change notification for bidirectional lenses. In: Proceedings of the 26nd 2014 International Symposium on Implementation and Application of Functional Languages - IFL ’14. Online. Boston, MA, USA: ACM Press. 2014. p. 1–11. [Accessed 23 May 2020]. ISBN 978-1-4503-3284-2. DOI 10.1145/2746325.2746333. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Parametric Lenses",
        "story": []
      },
      "date": 1664347649797
    },
    {
      "item": {
        "type": "factory",
        "id": "00bc1267a5133678"
      },
      "id": "00bc1267a5133678",
      "type": "add",
      "date": 1664347664168
    },
    {
      "type": "edit",
      "id": "00bc1267a5133678",
      "item": {
        "type": "paragraph",
        "id": "00bc1267a5133678",
        "text": "\nDOMOSZLAI, László, LIJNSE, Bas and PLASMEIJER, Rinus, 2014. Parametric lenses: change notification for bidirectional lenses. In: Proceedings of the 26nd 2014 International Symposium on Implementation and Application of Functional Languages - IFL ’14. Online. Boston, MA, USA: ACM Press. 2014. p. 1–11. [Accessed 23 May 2020]. ISBN 978-1-4503-3284-2. DOI 10.1145/2746325.2746333. \n"
      },
      "date": 1664347666917
    },
    {
      "item": {
        "type": "factory",
        "id": "77f8a3233498ed16"
      },
      "id": "77f8a3233498ed16",
      "type": "add",
      "after": "00bc1267a5133678",
      "date": 1664347690377
    },
    {
      "id": "77f8a3233498ed16",
      "type": "move",
      "order": [
        "77f8a3233498ed16",
        "00bc1267a5133678"
      ],
      "date": 1664347691886
    },
    {
      "type": "edit",
      "id": "77f8a3233498ed16",
      "item": {
        "type": "paragraph",
        "id": "77f8a3233498ed16",
        "text": "Most complex applications inevitably need to maintain dependencies between subsystems based on some shared data. The dependent parts must be informed that the shared information is changed. As every actual notification has some communication cost, and every triggered task has associated computation cost, it is crucial for the overall performance of the application to reduce the number of notifications as much as possible. To achieve this, one must be able to define, with arbitrary precision, which party is depending on which data. In this paper we offer a general solution to this general problem. The solution is based on an extension to bidirectional lenses, called parametric lenses. With the help of parametric lenses one can define compositional parametric views in a declarative way to access some shared data. Parametric views, besides providing read/write access to the shared data, also enable to observe changes of some parts, given by an explicit parameter, the focus domain. The focus domain can be specified as a type-based query language defined over one or more resources using predefined combinators of parametric views."
      },
      "date": 1664347693252
    },
    {
      "item": {
        "type": "factory",
        "id": "119594a3310a6f90"
      },
      "id": "119594a3310a6f90",
      "type": "add",
      "after": "00bc1267a5133678",
      "date": 1664347695678
    },
    {
      "id": "119594a3310a6f90",
      "type": "move",
      "order": [
        "77f8a3233498ed16",
        "119594a3310a6f90",
        "00bc1267a5133678"
      ],
      "date": 1664347698686
    },
    {
      "type": "edit",
      "id": "119594a3310a6f90",
      "item": {
        "type": "pagefold",
        "id": "119594a3310a6f90",
        "text": "~"
      },
      "date": 1664347701383
    }
  ]
}