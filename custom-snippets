{
  "title": "Custom Snippets",
  "story": [
    {
      "type": "paragraph",
      "id": "58359956087e9898",
      "text": "tudor girba â€” [https://discord.com/channels/729445214812504107/978036401209770034/980194829499772989 discord]\nThe snippets in the image are very concrete examples. There is also documentation for how to create a custom annotation and a custom snippet in the book. "
    },
    {
      "type": "paragraph",
      "id": "690a69c44169233f",
      "text": "tudor girba â€” [https://discord.com/channels/729445214812504107/729445215341117522/976173436068053003 discord]\n[â€¦] An integration of a new language would require a parser, connection to runtime, a custom snippet in Lepiter, a debugger, and eventually a browser"
    },
    {
      "type": "paragraph",
      "id": "c280fd053ff5a3d2",
      "text": "hellerve â€” [https://discord.com/channels/729445214812504107/819329587728613388/964927624482811964 discord]\nfinally took the time to figure out how to take a parser, add a highlighter, and put it all into a custom snippet type. not exactly easy, but about an afternoonâ€™s work"
    },
    {
      "type": "pagefold",
      "id": "c53edbff6dd34d1b",
      "text": "Lepiter Non-textual Annotations"
    },
    {
      "type": "paragraph",
      "id": "90747de044dafe01",
      "text": "botwhytho\n â€” \n[https://discord.com/channels/729445214812504107/737255889517543545/922556865009819740 discord]\nIn your custom annotation, what is the visual styling you would want once you do select a correct value for {{mpPerson:someValueOrObject}} and the annotation markdown disappears? I don't know if it's possible, but a thought could be to allow the annotation with no value, so {{mpPerson}} and that would render a button that would have a dropdown where you can implement your more complex UI. That way is seems you are not limited by any limits the autocomplete might throw at you, considering you want a much more complex interface than just 'simple' textual auto-complete. After you select the value through your UI maybe that can trigger a 're-write' of that value as an argument to your annotation and that may trigger the annotation to render visually in a different way. Not sure if any of this is possible but maybe worth a try."
    },
    {
      "type": "paragraph",
      "id": "65d9b9b7d5b39b0a",
      "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/735949717049049129/941442794348744784 discord]\nAt a high level, what are you doing? Can explore some of your code later if you have a link. Will be exploring in the next couple of days using a custom [[GtPhlowTool]] and adding it to a standard pages tabs in it's composite tool, so that pages that have certain custom snippet types can be displayed in an alternate way, as well as the default way (Page & Inspector tools)"
    },
    {
      "type": "paragraph",
      "id": "139279d94007c26c",
      "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A [[BrFileSelector]] snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit [https://github.com/botwhytho/LepiterBuildingBlocs github]\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet] â‡’ [[LepiterBuildingBlocs]]"
    },
    {
      "type": "pagefold",
      "id": "9ff531b7f77662a2",
      "text": "QuickEdit"
    },
    {
      "type": "markdown",
      "id": "284e49244630f875",
      "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/736333725788274819/985232059075280926 discord]\n@tudor girba  I'm working on extending my QuickEdit (https://github.com/botwhytho/quick-edit) tools to include a custom snippet type where one can quickly modify something like a NeoJSONObject (subclass of Dictionary with potentially nested Dictionaries and Lists) that represent JSON through a GUI. This includes adding/removing elements from nested OrderedCollections/Dictionaries. Any pointers on what's the latest around auto-updating views? Think I want to prototype this with a columnedTree view, as I already have an Edit extension view on collections, and then try to translate that into a GUI one can also use in a custom snippet (with some extra functionality) "
    },
    {
      "type": "pagefold",
      "id": "6da74352dd321f11",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "40089a0e5d19771e",
      "text": "SeanDeNigris â€” [https://discord.com/channels/729445214812504107/735945764597006466/923696056921899028 discord]\nIs there any documentation delving into the specifics of creating a custom Snippet, as touched on by \"Extending Lepiter with Custom Snippets\"? For one thing, I'm trying to figure out what the minimum implementation requirements are. I was using the debugger to implement one method at a time and crashed the image (GT, but Morphic was still responding). I accidentally closed the debugger, but I think it said something about json \n"
    },
    {
      "type": "paragraph",
      "id": "cb78518c6b4e763c",
      "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/851502717472997397/923153184258658314 discord]\nDidn't want to sound negative, but did want to express it's probably non-trivial for a beginner. I was actually pretty close to completion, but then didn't do any coding for many months. I will get back to it at some point just have a specific project I want to get an MVP out to community for feedback. It's more ambiguous in my mind and has bigger scope than a custom annotation, so very easy to do some 'productive procrastinating' on that project by building custom snippets/annotations but those will have to wait for now "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Custom Snippets",
        "story": []
      },
      "date": 1655454562967
    },
    {
      "item": {
        "type": "factory",
        "id": "58359956087e9898"
      },
      "id": "58359956087e9898",
      "type": "add",
      "date": 1655454628619
    },
    {
      "item": {
        "type": "factory",
        "id": "9ff531b7f77662a2"
      },
      "id": "9ff531b7f77662a2",
      "type": "add",
      "after": "58359956087e9898",
      "date": 1655454630141
    },
    {
      "type": "edit",
      "id": "9ff531b7f77662a2",
      "item": {
        "type": "pagefold",
        "id": "9ff531b7f77662a2",
        "text": "QuickEdit"
      },
      "date": 1655454633704
    },
    {
      "item": {
        "type": "factory",
        "id": "284e49244630f875"
      },
      "id": "284e49244630f875",
      "type": "add",
      "after": "9ff531b7f77662a2",
      "date": 1655454642641
    },
    {
      "type": "edit",
      "id": "284e49244630f875",
      "item": {
        "type": "markdown",
        "id": "284e49244630f875",
        "text": "botwhytho â€” 11.06.2022\n@tudor girba  I'm working on extending my QuickEdit (https://github.com/botwhytho/quick-edit) tools to include a custom snippet type where one can quickly modify something like a NeoJSONObject (subclass of Dictionary with potentially nested Dictionaries and Lists) that represent JSON through a GUI. This includes adding/removing elements from nested OrderedCollections/Dictionaries. Any pointers on what's the latest around auto-updating views? Think I want to prototype this with a columnedTree view, as I already have an Edit extension view on collections, and then try to translate that into a GUI one can also use in a custom snippet (with some extra functionality) "
      },
      "date": 1655454645946
    },
    {
      "type": "edit",
      "id": "284e49244630f875",
      "item": {
        "type": "markdown",
        "id": "284e49244630f875",
        "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/736333725788274819/985232059075280926 discord]\n@tudor girba  I'm working on extending my QuickEdit (https://github.com/botwhytho/quick-edit) tools to include a custom snippet type where one can quickly modify something like a NeoJSONObject (subclass of Dictionary with potentially nested Dictionaries and Lists) that represent JSON through a GUI. This includes adding/removing elements from nested OrderedCollections/Dictionaries. Any pointers on what's the latest around auto-updating views? Think I want to prototype this with a columnedTree view, as I already have an Edit extension view on collections, and then try to translate that into a GUI one can also use in a custom snippet (with some extra functionality) "
      },
      "date": 1655454661756
    },
    {
      "type": "edit",
      "id": "58359956087e9898",
      "item": {
        "type": "paragraph",
        "id": "58359956087e9898",
        "text": "tudor girba â€” 28.05.2022\nThe snippets in the image are very concrete examples. There is also documentation for how to create a custom annotation and a custom snippet in the book. \n"
      },
      "date": 1655455338380
    },
    {
      "type": "edit",
      "id": "58359956087e9898",
      "item": {
        "type": "paragraph",
        "id": "58359956087e9898",
        "text": "tudor girba â€” [https://discord.com/channels/729445214812504107/978036401209770034/980194829499772989 discord]\nThe snippets in the image are very concrete examples. There is also documentation for how to create a custom annotation and a custom snippet in the book. \n"
      },
      "date": 1655455355216
    },
    {
      "type": "edit",
      "id": "58359956087e9898",
      "item": {
        "type": "paragraph",
        "id": "58359956087e9898",
        "text": "tudor girba â€” [https://discord.com/channels/729445214812504107/978036401209770034/980194829499772989 discord]\nThe snippets in the image are very concrete examples. There is also documentation for how to create a custom annotation and a custom snippet in the book. "
      },
      "date": 1655455402235
    },
    {
      "type": "add",
      "id": "690a69c44169233f",
      "item": {
        "type": "paragraph",
        "id": "690a69c44169233f",
        "text": "tudor girba â€” 17.05.2022\n[â€¦] An integration of a new language would require a parser, connection to runtime, a custom snippet in Lepiter, a debugger, and eventually a browser"
      },
      "after": "58359956087e9898",
      "date": 1655455411000
    },
    {
      "type": "edit",
      "id": "690a69c44169233f",
      "item": {
        "type": "paragraph",
        "id": "690a69c44169233f",
        "text": "tudor girba â€” [https://discord.com/channels/729445214812504107/729445215341117522/976173436068053003 discord]\n[â€¦] An integration of a new language would require a parser, connection to runtime, a custom snippet in Lepiter, a debugger, and eventually a browser"
      },
      "date": 1655455424445
    },
    {
      "item": {
        "type": "factory",
        "id": "c53edbff6dd34d1b"
      },
      "id": "c53edbff6dd34d1b",
      "type": "add",
      "after": "284e49244630f875",
      "date": 1655456363745
    },
    {
      "type": "edit",
      "id": "c53edbff6dd34d1b",
      "item": {
        "type": "pagefold",
        "id": "c53edbff6dd34d1b",
        "text": "Lepiter Non-textual Annotations"
      },
      "date": 1655456366305
    },
    {
      "id": "c53edbff6dd34d1b",
      "type": "move",
      "order": [
        "58359956087e9898",
        "690a69c44169233f",
        "c53edbff6dd34d1b",
        "9ff531b7f77662a2",
        "284e49244630f875"
      ],
      "date": 1655456371186
    },
    {
      "type": "add",
      "id": "90747de044dafe01",
      "item": {
        "type": "paragraph",
        "id": "90747de044dafe01",
        "text": "botwhytho\n â€” \n20.12.2021\nIn your custom annotation, what is the visual styling you would want once you do select a correct value for {{mpPerson:someValueOrObject}} and the annotation markdown disappears? I don't know if it's possible, but a thought could be to allow the annotation with no value, so {{mpPerson}} and that would render a button that would have a dropdown where you can implement your more complex UI. That way is seems you are not limited by any limits the autocomplete might throw at you, considering you want a much more complex interface than just 'simple' textual auto-complete. After you select the value through your UI maybe that can trigger a 're-write' of that value as an argument to your annotation and that may trigger the annotation to render visually in a different way. Not sure if any of this is possible but maybe worth a try"
      },
      "after": "690a69c44169233f",
      "date": 1655456499542
    },
    {
      "id": "c53edbff6dd34d1b",
      "type": "move",
      "order": [
        "58359956087e9898",
        "690a69c44169233f",
        "c53edbff6dd34d1b",
        "90747de044dafe01",
        "9ff531b7f77662a2",
        "284e49244630f875"
      ],
      "date": 1655456502686
    },
    {
      "type": "edit",
      "id": "90747de044dafe01",
      "item": {
        "type": "paragraph",
        "id": "90747de044dafe01",
        "text": "botwhytho\n â€” \n[https://discord.com/channels/729445214812504107/737255889517543545/922556865009819740 discord]\nIn your custom annotation, what is the visual styling you would want once you do select a correct value for {{mpPerson:someValueOrObject}} and the annotation markdown disappears? I don't know if it's possible, but a thought could be to allow the annotation with no value, so {{mpPerson}} and that would render a button that would have a dropdown where you can implement your more complex UI. That way is seems you are not limited by any limits the autocomplete might throw at you, considering you want a much more complex interface than just 'simple' textual auto-complete. After you select the value through your UI maybe that can trigger a 're-write' of that value as an argument to your annotation and that may trigger the annotation to render visually in a different way. Not sure if any of this is possible but maybe worth a try"
      },
      "date": 1655456537606
    },
    {
      "type": "edit",
      "id": "90747de044dafe01",
      "item": {
        "type": "paragraph",
        "id": "90747de044dafe01",
        "text": "botwhytho\n â€” \n[https://discord.com/channels/729445214812504107/737255889517543545/922556865009819740 discord]\nIn your custom annotation, what is the visual styling you would want once you do select a correct value for {{mpPerson:someValueOrObject}} and the annotation markdown disappears? I don't know if it's possible, but a thought could be to allow the annotation with no value, so {{mpPerson}} and that would render a button that would have a dropdown where you can implement your more complex UI. That way is seems you are not limited by any limits the autocomplete might throw at you, considering you want a much more complex interface than just 'simple' textual auto-complete. After you select the value through your UI maybe that can trigger a 're-write' of that value as an argument to your annotation and that may trigger the annotation to render visually in a different way. Not sure if any of this is possible but maybe worth a try."
      },
      "date": 1655456577880
    },
    {
      "type": "add",
      "id": "c280fd053ff5a3d2",
      "item": {
        "type": "paragraph",
        "id": "c280fd053ff5a3d2",
        "text": "hellerve â€” 16.04.2022\nfinally took the time to figure out how to take a parser, add a highlighter, and put it all into a custom snippet type. not exactly easy, but about an afternoonâ€™s work"
      },
      "after": "690a69c44169233f",
      "date": 1655456632345
    },
    {
      "type": "edit",
      "id": "c280fd053ff5a3d2",
      "item": {
        "type": "paragraph",
        "id": "c280fd053ff5a3d2",
        "text": "hellerve â€” [https://discord.com/channels/729445214812504107/819329587728613388/964927624482811964 discord]\nfinally took the time to figure out how to take a parser, add a highlighter, and put it all into a custom snippet type. not exactly easy, but about an afternoonâ€™s work"
      },
      "date": 1655456646264
    },
    {
      "type": "add",
      "id": "65d9b9b7d5b39b0a",
      "item": {
        "type": "paragraph",
        "id": "65d9b9b7d5b39b0a",
        "text": "botwhytho â€” 10.02.2022\nAt a high level, what are you doing? Can explore some of your code later if you have a link. Will be exploring in the next couple of days using a custom GtPhlowTool and adding it to a standard pages tabs in it's composite tool, so that pages that have certain custom snippet types can be displayed in an alternate way, as well as the default way (Page & Inspector tools)"
      },
      "after": "90747de044dafe01",
      "date": 1655456689581
    },
    {
      "type": "edit",
      "id": "65d9b9b7d5b39b0a",
      "item": {
        "type": "paragraph",
        "id": "65d9b9b7d5b39b0a",
        "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/735949717049049129/941442794348744784 discord]\nAt a high level, what are you doing? Can explore some of your code later if you have a link. Will be exploring in the next couple of days using a custom GtPhlowTool and adding it to a standard pages tabs in it's composite tool, so that pages that have certain custom snippet types can be displayed in an alternate way, as well as the default way (Page & Inspector tools)"
      },
      "date": 1655456702235
    },
    {
      "type": "edit",
      "id": "65d9b9b7d5b39b0a",
      "item": {
        "type": "paragraph",
        "id": "65d9b9b7d5b39b0a",
        "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/735949717049049129/941442794348744784 discord]\nAt a high level, what are you doing? Can explore some of your code later if you have a link. Will be exploring in the next couple of days using a custom [[GtPhlowTool]] and adding it to a standard pages tabs in it's composite tool, so that pages that have certain custom snippet types can be displayed in an alternate way, as well as the default way (Page & Inspector tools)"
      },
      "date": 1655456721715
    },
    {
      "type": "add",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "â€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet]"
      },
      "after": "65d9b9b7d5b39b0a",
      "date": 1655456848147
    },
    {
      "type": "edit",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A BrFileSelector snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit https://github.com/botwhytho/LepiterBuildingBlocsâ€¦\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet]"
      },
      "date": 1655456865662
    },
    {
      "type": "edit",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A [[BrFileSelector]] snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit https://github.com/botwhytho/LepiterBuildingBlocsâ€¦\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet]"
      },
      "date": 1655456878887
    },
    {
      "type": "edit",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A [[BrFileSelector]] snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit [https://github.com/botwhytho/LepiterBuildingBlocs github]\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet]"
      },
      "date": 1655456923947
    },
    {
      "type": "edit",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A [[BrFileSelector]] snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit [https://github.com/botwhytho/LepiterBuildingBlocs github]\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet] â€“ [[LepiterBuildingBlocs]]"
      },
      "date": 1655456942313
    },
    {
      "type": "edit",
      "id": "139279d94007c26c",
      "item": {
        "type": "paragraph",
        "id": "139279d94007c26c",
        "text": "Alberto (Alt-s) ðŸ¤”\n@botwhytho\n.\n@feenkcom\n #LepiterSuperPower #3: A [[BrFileSelector]] snippet that serializes it's selection & binds that to a variable. The 'proper' way to do this is with a custom snippet but a child 'data snippet' is now a viable option for prototyping #Lepiter #GToolkit [https://github.com/botwhytho/LepiterBuildingBlocs github]\nâ€“ [https://twitter.com/botwhytho/status/1491351687290064897?s=20&t=CXkL5Ydoe0P444Faf5PcoQ tweet] â‡’ [[LepiterBuildingBlocs]]"
      },
      "date": 1655456979841
    },
    {
      "item": {
        "type": "factory",
        "id": "639e355c319cde40"
      },
      "id": "639e355c319cde40",
      "type": "add",
      "after": "284e49244630f875",
      "date": 1655457425528
    },
    {
      "type": "remove",
      "id": "639e355c319cde40",
      "date": 1655457428210
    },
    {
      "item": {
        "type": "factory",
        "id": "6da74352dd321f11"
      },
      "id": "6da74352dd321f11",
      "type": "add",
      "after": "284e49244630f875",
      "date": 1655457430867
    },
    {
      "type": "edit",
      "id": "6da74352dd321f11",
      "item": {
        "type": "pagefold",
        "id": "6da74352dd321f11",
        "text": "~"
      },
      "date": 1655457436076
    },
    {
      "item": {
        "type": "factory",
        "id": "40089a0e5d19771e"
      },
      "id": "40089a0e5d19771e",
      "type": "add",
      "after": "6da74352dd321f11",
      "date": 1655457438348
    },
    {
      "type": "edit",
      "id": "40089a0e5d19771e",
      "item": {
        "type": "paragraph",
        "id": "40089a0e5d19771e",
        "text": "SeanDeNigris â€” 23.12.2021\nIs there any documentation delving into the specifics of creating a custom Snippet, as touched on by \"Extending Lepiter with Custom Snippets\"? For one thing, I'm trying to figure out what the minimum implementation requirements are. I was using the debugger to implement one method at a time and crashed the image (GT, but Morphic was still responding). I accidentally closed the debugger, but I think it said something about json \n"
      },
      "date": 1655457442210
    },
    {
      "type": "edit",
      "id": "40089a0e5d19771e",
      "item": {
        "type": "paragraph",
        "id": "40089a0e5d19771e",
        "text": "SeanDeNigris â€” [https://discord.com/channels/729445214812504107/735945764597006466/923696056921899028 discord]\nIs there any documentation delving into the specifics of creating a custom Snippet, as touched on by \"Extending Lepiter with Custom Snippets\"? For one thing, I'm trying to figure out what the minimum implementation requirements are. I was using the debugger to implement one method at a time and crashed the image (GT, but Morphic was still responding). I accidentally closed the debugger, but I think it said something about json \n"
      },
      "date": 1655457461772
    },
    {
      "type": "add",
      "id": "cb78518c6b4e763c",
      "item": {
        "type": "paragraph",
        "id": "cb78518c6b4e763c",
        "text": "botwhytho â€” 22.12.2021\nDidn't want to sound negative, but did want to express it's probably non-trivial for a beginner. I was actually pretty close to completion, but then didn't do any coding for many months. I will get back to it at some point just have a specific project I want to get an MVP out to community for feedback. It's more ambiguous in my mind and has bigger scope than a custom annotation, so very easy to do some 'productive procrastinating' on that project by building custom snippets/annotations but those will have to wait for now "
      },
      "after": "40089a0e5d19771e",
      "date": 1655457520854
    },
    {
      "type": "edit",
      "id": "cb78518c6b4e763c",
      "item": {
        "type": "paragraph",
        "id": "cb78518c6b4e763c",
        "text": "botwhytho â€” [https://discord.com/channels/729445214812504107/851502717472997397/923153184258658314 discord]\nDidn't want to sound negative, but did want to express it's probably non-trivial for a beginner. I was actually pretty close to completion, but then didn't do any coding for many months. I will get back to it at some point just have a specific project I want to get an MVP out to community for feedback. It's more ambiguous in my mind and has bigger scope than a custom annotation, so very easy to do some 'productive procrastinating' on that project by building custom snippets/annotations but those will have to wait for now "
      },
      "date": 1655457545308
    }
  ]
}