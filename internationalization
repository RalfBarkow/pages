{
  "title": "Internationalization",
  "story": [
    {
      "type": "paragraph",
      "id": "400b813daa6cf772",
      "text": "⇒ [[Automation as Team Player]]: DeepL API [https://www.deepl.com/en/docs-api/ docs] and [[DITA-OT Translate Plug-in]] in the context of the \"Internationalisation (i18n) #139\" [https://github.com/fedwiki/wiki/issues/139 issue] ⇒ Internationalization"
    },
    {
      "type": "graphviz",
      "id": "83dd1879b8eff340",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "paragraph",
      "id": "b233a9aa12a2131f",
      "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge [[JSON]] data into/from [[XLIFF]]. See JSON Filter [http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
    },
    {
      "type": "paragraph",
      "id": "7d5eeb5f27ccb52b",
      "text": "Convert JSON to XLIFF without translating #47 [https://github.com/locize/xliff/issues/47 issue]"
    },
    {
      "type": "paragraph",
      "id": "c89d0fec443503a8",
      "text": "xliff2js and js2xliff converter xliff utils [https://github.com/locize/xliff github]"
    },
    {
      "type": "code",
      "id": "915393320d81f5b5",
      "text": "import xliff from 'xliff'\n\nconst js = {\n  \"resources\": {\n    \"namespace1\": {\n      \"key1\": {\n        \"source\": \"Hello\"\n      },\n      \"key2\": {\n        \"source\": \"An application to manipulate and process XLIFF documents\"\n      },\n      \"key.nested\": {\n        \"source\": \"XLIFF Data Manager\"\n      }\n    }\n  },\n  \"sourceLanguage\": \"en-US\"\n}\n\nxliff.js2xliff(js, (err, ret) => {\n  if (err) console.error(err)\n  console.log(ret)\n})\n"
    },
    {
      "type": "paragraph",
      "id": "9162b07ea25c3c89",
      "text": "or createxliff:"
    },
    {
      "type": "code",
      "id": "613a06afd7abfdb3",
      "text": "import xliff from 'xliff'\n\nxliff.createxliff(\n  'en-US',\n  undefined,\n  {\n    \"key1\": \"Hello\",\n    \"key2\": \"An application to manipulate and process XLIFF documents\",\n    \"key.nested\": \"XLIFF Data Manager\"\n  },\n  undefined,\n  'namespace1', (err, ret) => {\n    if (err) console.error(err)\n    console.log(ret)\n  }\n)\n"
    },
    {
      "type": "paragraph",
      "id": "7728334dfcd7b2f4",
      "text": "Add seamless conversion between XLIFF and i18next JSON #33 [https://github.com/locize/xliff/issues/33 issue] ⇒ [[i18next JSON v4]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Internationalization",
        "story": []
      },
      "date": 1675922267827
    },
    {
      "id": "400b813daa6cf772",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "400b813daa6cf772",
        "text": "⇒ Automation as Team Player: DeepL API [https://www.deepl.com/en/docs-api/ docs] and [[DITA-OT Translate Plug-in]] in the context of the \"Internationalisation (i18n) #139\" [https://github.com/fedwiki/wiki/issues/139 issue] ⇒ [[Internationalization]]"
      },
      "attribution": {
        "page": "2023-02-09"
      },
      "date": 1675922272415
    },
    {
      "item": {
        "type": "factory",
        "id": "b233a9aa12a2131f"
      },
      "id": "b233a9aa12a2131f",
      "type": "add",
      "after": "400b813daa6cf772",
      "date": 1675923667528
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi"
      },
      "date": 1675923682274
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]"
      },
      "date": 1675923690039
    },
    {
      "item": {
        "type": "factory",
        "id": "83dd1879b8eff340"
      },
      "id": "83dd1879b8eff340",
      "type": "add",
      "after": "b233a9aa12a2131f",
      "date": 1675923691815
    },
    {
      "type": "edit",
      "id": "83dd1879b8eff340",
      "item": {
        "type": "graphviz",
        "id": "83dd1879b8eff340",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1675923699196
    },
    {
      "type": "edit",
      "id": "400b813daa6cf772",
      "item": {
        "type": "paragraph",
        "id": "400b813daa6cf772",
        "text": "⇒ Automation as Team Player: DeepL API [https://www.deepl.com/en/docs-api/ docs] and [[DITA-OT Translate Plug-in]] in the context of the \"Internationalisation (i18n) #139\" [https://github.com/fedwiki/wiki/issues/139 issue] ⇒ Internationalization"
      },
      "date": 1675923710335
    },
    {
      "id": "b233a9aa12a2131f",
      "type": "move",
      "order": [
        "400b813daa6cf772",
        "83dd1879b8eff340",
        "b233a9aa12a2131f"
      ],
      "date": 1675923721988
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF See http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter and http://www.opentag.com/okapi/wiki/"
      },
      "date": 1675923818318
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF See http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter and http://www.opentag.com/okapi/wiki/ [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923832360
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF See [http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923879189
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF See JSON Filter[http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923895553
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF See JSON Filter [http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923900400
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge JSON data into/from XLIFF. See JSON Filter [http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923927006
    },
    {
      "type": "edit",
      "id": "b233a9aa12a2131f",
      "item": {
        "type": "paragraph",
        "id": "b233a9aa12a2131f",
        "text": "⇒ [[Okapi]]: You can use the Okapi tools' JSON filter to extract/merge [[JSON]] data into/from [[XLIFF]]. See JSON Filter [http://www.opentag.com/okapi/wiki/index.php?title=JSON_Filter page] and [http://www.opentag.com/okapi/wiki/ page] [https://stackoverflow.com/questions/12901834/json-to-xliff-coversion-and-xliff-to-json-conversion-tools stackoverflow.com]"
      },
      "date": 1675923952463
    },
    {
      "type": "edit",
      "id": "400b813daa6cf772",
      "item": {
        "type": "paragraph",
        "id": "400b813daa6cf772",
        "text": "⇒ [[Automation as Team Player]]: DeepL API [https://www.deepl.com/en/docs-api/ docs] and [[DITA-OT Translate Plug-in]] in the context of the \"Internationalisation (i18n) #139\" [https://github.com/fedwiki/wiki/issues/139 issue] ⇒ Internationalization"
      },
      "date": 1675923995685
    },
    {
      "item": {
        "type": "factory",
        "id": "7d5eeb5f27ccb52b"
      },
      "id": "7d5eeb5f27ccb52b",
      "type": "add",
      "after": "b233a9aa12a2131f",
      "date": 1675924214640
    },
    {
      "type": "edit",
      "id": "7d5eeb5f27ccb52b",
      "item": {
        "type": "paragraph",
        "id": "7d5eeb5f27ccb52b",
        "text": "Convert JSON to XLIFF without translating #47"
      },
      "date": 1675924218067
    },
    {
      "type": "edit",
      "id": "7d5eeb5f27ccb52b",
      "item": {
        "type": "paragraph",
        "id": "7d5eeb5f27ccb52b",
        "text": "Convert JSON to XLIFF without translating #47 [https://github.com/locize/xliff/issues/47 issue]"
      },
      "date": 1675924250167
    },
    {
      "item": {
        "type": "factory",
        "id": "c89d0fec443503a8"
      },
      "id": "c89d0fec443503a8",
      "type": "add",
      "after": "7d5eeb5f27ccb52b",
      "date": 1675924346723
    },
    {
      "type": "edit",
      "id": "c89d0fec443503a8",
      "item": {
        "type": "paragraph",
        "id": "c89d0fec443503a8",
        "text": "xliff2js and js2xliff converter xliff utils"
      },
      "date": 1675924350197
    },
    {
      "type": "edit",
      "id": "c89d0fec443503a8",
      "item": {
        "type": "paragraph",
        "id": "c89d0fec443503a8",
        "text": "xliff2js and js2xliff converter xliff utils [https://github.com/locize/xliff GitHub]"
      },
      "date": 1675924371573
    },
    {
      "type": "edit",
      "id": "c89d0fec443503a8",
      "item": {
        "type": "paragraph",
        "id": "c89d0fec443503a8",
        "text": "xliff2js and js2xliff converter xliff utils [https://github.com/locize/xliff github]"
      },
      "date": 1675924381382
    },
    {
      "item": {
        "type": "factory",
        "id": "915393320d81f5b5"
      },
      "id": "915393320d81f5b5",
      "type": "add",
      "after": "c89d0fec443503a8",
      "date": 1675924467749
    },
    {
      "type": "edit",
      "id": "915393320d81f5b5",
      "item": {
        "type": "code",
        "id": "915393320d81f5b5",
        "text": "import xliff from 'xliff'\n\nconst js = {\n  \"resources\": {\n    \"namespace1\": {\n      \"key1\": {\n        \"source\": \"Hello\"\n      },\n      \"key2\": {\n        \"source\": \"An application to manipulate and process XLIFF documents\"\n      },\n      \"key.nested\": {\n        \"source\": \"XLIFF Data Manager\"\n      }\n    }\n  },\n  \"sourceLanguage\": \"en-US\"\n}\n\nxliff.js2xliff(js, (err, ret) => {\n  if (err) console.error(err)\n  console.log(ret)\n})\n"
      },
      "date": 1675924470093
    },
    {
      "item": {
        "type": "factory",
        "id": "9162b07ea25c3c89"
      },
      "id": "9162b07ea25c3c89",
      "type": "add",
      "after": "915393320d81f5b5",
      "date": 1675924492274
    },
    {
      "type": "edit",
      "id": "9162b07ea25c3c89",
      "item": {
        "type": "paragraph",
        "id": "9162b07ea25c3c89",
        "text": "or createxliff:"
      },
      "date": 1675924495509
    },
    {
      "item": {
        "type": "factory",
        "id": "613a06afd7abfdb3"
      },
      "id": "613a06afd7abfdb3",
      "type": "add",
      "after": "9162b07ea25c3c89",
      "date": 1675924500564
    },
    {
      "type": "edit",
      "id": "613a06afd7abfdb3",
      "item": {
        "type": "code",
        "id": "613a06afd7abfdb3",
        "text": "import xliff from 'xliff'\n\nxliff.createxliff(\n  'en-US',\n  undefined,\n  {\n    \"key1\": \"Hello\",\n    \"key2\": \"An application to manipulate and process XLIFF documents\",\n    \"key.nested\": \"XLIFF Data Manager\"\n  },\n  undefined,\n  'namespace1', (err, ret) => {\n    if (err) console.error(err)\n    console.log(ret)\n  }\n)\n"
      },
      "date": 1675924502593
    },
    {
      "item": {
        "type": "factory",
        "id": "7728334dfcd7b2f4"
      },
      "id": "7728334dfcd7b2f4",
      "type": "add",
      "after": "613a06afd7abfdb3",
      "date": 1675924596728
    },
    {
      "type": "edit",
      "id": "7728334dfcd7b2f4",
      "item": {
        "type": "paragraph",
        "id": "7728334dfcd7b2f4",
        "text": "Add seamless conversion between XLIFF and i18next JSON #33"
      },
      "date": 1675924599760
    },
    {
      "type": "edit",
      "id": "7728334dfcd7b2f4",
      "item": {
        "type": "paragraph",
        "id": "7728334dfcd7b2f4",
        "text": "Add seamless conversion between XLIFF and i18next JSON #33 [https://github.com/locize/xliff/issues/33 issue]"
      },
      "date": 1675924615123
    },
    {
      "type": "edit",
      "id": "7728334dfcd7b2f4",
      "item": {
        "type": "paragraph",
        "id": "7728334dfcd7b2f4",
        "text": "Add seamless conversion between XLIFF and i18next JSON #33 [https://github.com/locize/xliff/issues/33 issue] ⇒ [[i18next JSON v4]]"
      },
      "date": 1675924641978
    }
  ]
}