{
  "title": "Render Story",
  "story": [
    {
      "type": "paragraph",
      "id": "24d808d66850fa5c",
      "text": "The renderStory function takes a [[Story]] as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story item. Additionally, it provides informational messages in case of unknown story item types."
    },
    {
      "type": "code",
      "id": "29ddf4b602dbf0e3",
      "text": "renderStory : Story -> Html msg\nrenderStory story =\n    case story of\n        Paragraph paragraph ->\n            case paragraph.type_ of\n                \"paragraph\" ->\n                    Html.p [] [ Html.text paragraph.text ]\n\n                _ ->\n                    Html.text (\"⚠️ INFO Paragraph – Unknown story item type: \" ++ paragraph.type_)\n\n        Future future ->\n            case future.type_ of\n                \"future\" ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Known story item type: \" ++ future.type_) ]\n\n                _ ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Unknown story item type: \" ++ future.type_) ]\n\n        Factory factory ->\n            Html.text \"⚠️ INFO – Factory\"\n\n        EmptyStory ->\n            Html.text \"⚠️ INFO – Empty Story\"\n\n"
    },
    {
      "type": "image",
      "id": "d61d994bbaeb36a4",
      "text": "Side-by-Side Comparison [https://github.com/dreyeck/blog/commit/27ba4048efae557d442773d44f0ba54715f627e6 commit]",
      "size": "wide",
      "width": 419,
      "height": 148,
      "url": "/assets/plugins/image/c5af8b0fa7c0fe03374303b4267aa2d6.jpg"
    },
    {
      "type": "paragraph",
      "id": "b7e235132ef58e4d",
      "text": "We see the same [[Wiki Page JSON]] displayed on one side (left) by the fedwiki reference implementation and on the other side (right) by the elm-pages prototype. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16939825695UUWPO:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "5844461890908459",
      "text": "refactor(renderStory): Move function to [[Wiki Module]]. [https://github.com/dreyeck/blog/commit/c9480f0bc43ea0df14e79ebbf24cb96fe9caa567 commit]"
    },
    {
      "type": "paragraph",
      "id": "f5eba6f30486c76f",
      "text": "⇐ [[Wiki Module]]"
    },
    {
      "type": "pagefold",
      "id": "5f922a0e4cb1b74a",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "f3f1bf5e2c40f366",
      "site": "dev.asia.wiki.org",
      "slug": "render-and-follow-links",
      "title": "Render and Follow Links",
      "text": "Federated wiki collects [[Context]] for links based on sites mentioned on the page. This context is consulted when a link is clicked."
    },
    {
      "type": "reference",
      "id": "ebce5f5bb95fe820",
      "site": "wiki.ralfbarkow.ch",
      "slug": "between-content-and-context",
      "title": "Between Content and Context",
      "text": "The inside of a container supports concurrent transformation of its contents, just like the inside of a theater full of people supports concurrent breathing."
    },
    {
      "type": "reference",
      "id": "4a5524afbb804f21",
      "site": "marc.tries.fed.wiki",
      "slug": "context",
      "title": "Context",
      "text": "Sometimes we hear \"context is everything.\" It may not be everything but it really helps make sense of situations."
    },
    {
      "type": "markdown",
      "id": "52cf512a13cb216b",
      "text": "The FedWiki is programmable and selectable to do [[Computation]]s that involve the content of any open page in your FedWiki. That is an unusual and powerful type of context indeed.\n"
    },
    {
      "type": "reference",
      "id": "66e67da0af71458f",
      "site": "glossary.asia.wiki.org",
      "slug": "lineup",
      "title": "Lineup",
      "text": "The lineup is the list of wiki pages currently displayed within one tab, in order, with duplication possible."
    },
    {
      "type": "markdown",
      "id": "03a03913154825ec",
      "text": "Lots of explanatory material can be left out of a page, because it can be accessed immediately and adjacently as needed. It is rather like having a open dictionary next to an open book. \n"
    },
    {
      "type": "graphviz",
      "id": "b04245396e6ca715",
      "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=1 color=black]\n    edge [style=solid penwidth=1 color=black]\n    BACKLINKS NODE -> HERE\n\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Render Story",
        "story": []
      },
      "date": 1693937487327
    },
    {
      "item": {
        "type": "factory",
        "id": "526751853c6deb70"
      },
      "id": "526751853c6deb70",
      "type": "add",
      "date": 1693937503402
    },
    {
      "type": "edit",
      "id": "526751853c6deb70",
      "item": {
        "type": "paragraph",
        "id": "526751853c6deb70",
        "text": "feat: Add renderStory function for rendering Wiki.Story items to HTML\n\nThis commit introduces a new function `renderStory` that takes a `Wiki.Story`\nand transforms it into an `Html msg` element based on its type. The function\nhandles different story types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "date": 1693937504687
    },
    {
      "type": "edit",
      "id": "526751853c6deb70",
      "item": {
        "type": "paragraph",
        "id": "526751853c6deb70",
        "text": "feat: Add renderStory function for rendering Wiki.Story items to HTML [https://github.com/dreyeck/blog/commit/991721118e80f7cba4af277055fc6413c381e3d2 commit]"
      },
      "date": 1693937570182
    },
    {
      "type": "add",
      "id": "7fa4066f5ca5aeea",
      "item": {
        "type": "paragraph",
        "id": "7fa4066f5ca5aeea",
        "text": "This commit introduces a new function `renderStory` that takes a `Wiki.Story`\nand transforms it into an `Html msg` element based on its type. The function\nhandles different story types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "after": "526751853c6deb70",
      "date": 1693937570847
    },
    {
      "type": "edit",
      "id": "526751853c6deb70",
      "item": {
        "type": "paragraph",
        "id": "526751853c6deb70",
        "text": "feat: Add renderStory function for rendering Wiki.Story items to HTML [https://github.com/dreyeck/blog/commit/991721118e80f7cba4af277055fc6413c381e3d2 commit], [https://github.com/dreyeck/blog/blob/991721118e80f7cba4af277055fc6413c381e3d2/elm-pages-starter-express/app/Route/View/Slug_/SPLAT__.elm#L156-L175 code]"
      },
      "date": 1693937642520
    },
    {
      "item": {
        "type": "factory",
        "id": "29ddf4b602dbf0e3"
      },
      "id": "29ddf4b602dbf0e3",
      "type": "add",
      "after": "7fa4066f5ca5aeea",
      "date": 1693937678204
    },
    {
      "type": "edit",
      "id": "29ddf4b602dbf0e3",
      "item": {
        "type": "code",
        "id": "29ddf4b602dbf0e3",
        "text": "renderStory : Wiki.Story -> Html msg\nrenderStory story =\n    case story of\n        Paragraph paragraph ->\n            case paragraph.type_ of\n                \"paragraph\" ->\n                    Html.div [] [ Html.text paragraph.text ]\n\n                _ ->\n                    Html.text \"Unknown story type\"\n\n        Future future ->\n            Html.div [] [ Html.text \"Future: \" ]\n\n        Factory factory ->\n            Html.div [] [ Html.text \"Factory: \" ]\n\n        EmptyStory ->\n            Html.text \"Empty Story\"\n\n"
      },
      "date": 1693937679738
    },
    {
      "type": "edit",
      "id": "7fa4066f5ca5aeea",
      "item": {
        "type": "paragraph",
        "id": "7fa4066f5ca5aeea",
        "text": "This commit introduces a new function `renderStory` that takes a `Wiki.Story`\nand transforms it into an `Html msg` element based on its type. The function\nhandles different story item types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "date": 1693937725061
    },
    {
      "type": "edit",
      "id": "7fa4066f5ca5aeea",
      "item": {
        "type": "paragraph",
        "id": "7fa4066f5ca5aeea",
        "text": "This commit introduces a new function `renderStory` that takes a `Wiki.Story`\nand transforms it into an `Html msg` element based on its type. The function\nhandles different story [[Item]] types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "date": 1693937776943
    },
    {
      "type": "edit",
      "id": "526751853c6deb70",
      "item": {
        "type": "paragraph",
        "id": "526751853c6deb70",
        "text": "feat: Add renderStory function for rendering Wiki.Story items to HTML. [https://github.com/dreyeck/blog/commit/991721118e80f7cba4af277055fc6413c381e3d2 commit], [https://github.com/dreyeck/blog/blob/991721118e80f7cba4af277055fc6413c381e3d2/elm-pages-starter-express/app/Route/View/Slug_/SPLAT__.elm#L156-L175 code]"
      },
      "date": 1693937981089
    },
    {
      "type": "edit",
      "id": "7fa4066f5ca5aeea",
      "item": {
        "type": "paragraph",
        "id": "7fa4066f5ca5aeea",
        "text": "This commit introduces a new function `renderStory` that takes a `Wiki.Story`\nand transforms it into an `Html msg` element based on its type. The function\nhandles different story item types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "date": 1693938121678
    },
    {
      "type": "edit",
      "id": "526751853c6deb70",
      "item": {
        "type": "paragraph",
        "id": "526751853c6deb70",
        "text": "feat: Add renderStory function for rendering Wiki.Story [[Item]]s to HTML. [https://github.com/dreyeck/blog/commit/991721118e80f7cba4af277055fc6413c381e3d2 commit], [https://github.com/dreyeck/blog/blob/991721118e80f7cba4af277055fc6413c381e3d2/elm-pages-starter-express/app/Route/View/Slug_/SPLAT__.elm#L156-L175 code]"
      },
      "date": 1693938126835
    },
    {
      "item": {
        "type": "factory",
        "id": "f5eba6f30486c76f"
      },
      "id": "f5eba6f30486c76f",
      "type": "add",
      "after": "29ddf4b602dbf0e3",
      "date": 1693938496158
    },
    {
      "type": "edit",
      "id": "f5eba6f30486c76f",
      "item": {
        "type": "paragraph",
        "id": "f5eba6f30486c76f",
        "text": "⇐[[ Wiki Module]]"
      },
      "date": 1693938509372
    },
    {
      "type": "edit",
      "id": "f5eba6f30486c76f",
      "item": {
        "type": "paragraph",
        "id": "f5eba6f30486c76f",
        "text": "⇐ [[Wiki Module]]"
      },
      "date": 1693938517442
    },
    {
      "type": "edit",
      "id": "7fa4066f5ca5aeea",
      "item": {
        "type": "paragraph",
        "id": "7fa4066f5ca5aeea",
        "text": "This commit introduces a new function `renderStory` that takes a `Wiki.Story` item  and transforms it into an `Html msg` element based on its type. The function handles different story item types, including \"paragraph,\" \"future,\" \"factory,\" and\n\"EmptyStory,\" and produces corresponding HTML representations."
      },
      "date": 1693946026587
    },
    {
      "type": "edit",
      "id": "29ddf4b602dbf0e3",
      "item": {
        "type": "code",
        "id": "29ddf4b602dbf0e3",
        "text": "renderStory : Wiki.Story -> Html msg\nrenderStory story =\n    case story of\n        Paragraph paragraph ->\n            case paragraph.type_ of\n                \"paragraph\" ->\n                    Html.p [] [ Html.text paragraph.text ]\n\n                _ ->\n                    Html.text \"Unknown story type\"\n\n        Future future ->\n            Html.div [] [ Html.text \"Future: \" ]\n\n        Factory factory ->\n            Html.div [] [ Html.text \"Factory: \" ]\n\n        EmptyStory ->\n            Html.text \"Empty Story\"\n\n"
      },
      "date": 1693978933689
    },
    {
      "id": "d61d994bbaeb36a4",
      "type": "add",
      "item": {
        "type": "image",
        "id": "d61d994bbaeb36a4",
        "text": "Side-by-Side Comparison [https://github.com/dreyeck/blog/commit/27ba4048efae557d442773d44f0ba54715f627e6 commit]",
        "size": "wide",
        "width": 419,
        "height": 148,
        "url": "/assets/plugins/image/c5af8b0fa7c0fe03374303b4267aa2d6.jpg"
      },
      "after": "29ddf4b602dbf0e3",
      "attribution": {
        "page": "2023-09-06"
      },
      "date": 1693978956832
    },
    {
      "id": "b7e235132ef58e4d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b7e235132ef58e4d",
        "text": "We see the same [[Wiki Page JSON]] displayed on one side (left) by the fedwiki reference implementation and on the other side (right) by the elm-pages prototype."
      },
      "after": "d61d994bbaeb36a4",
      "attribution": {
        "page": "2023-09-06"
      },
      "date": 1693978961350
    },
    {
      "id": "f5eba6f30486c76f",
      "type": "move",
      "order": [
        "f5eba6f30486c76f",
        "526751853c6deb70",
        "7fa4066f5ca5aeea",
        "29ddf4b602dbf0e3",
        "d61d994bbaeb36a4",
        "b7e235132ef58e4d"
      ],
      "date": 1694077719547
    },
    {
      "id": "5844461890908459",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5844461890908459",
        "text": "refactor(renderStory): Move function to Wiki module. [https://github.com/dreyeck/blog/commit/c9480f0bc43ea0df14e79ebbf24cb96fe9caa567 commit]"
      },
      "after": "b7e235132ef58e4d",
      "attribution": {
        "page": "Wiki Module"
      },
      "date": 1694077749601
    },
    {
      "id": "f5eba6f30486c76f",
      "type": "move",
      "order": [
        "526751853c6deb70",
        "7fa4066f5ca5aeea",
        "29ddf4b602dbf0e3",
        "d61d994bbaeb36a4",
        "b7e235132ef58e4d",
        "5844461890908459",
        "f5eba6f30486c76f"
      ],
      "date": 1694077774935
    },
    {
      "type": "edit",
      "id": "5844461890908459",
      "item": {
        "type": "paragraph",
        "id": "5844461890908459",
        "text": "refactor(renderStory): Move function to [[Wiki Module]]. [https://github.com/dreyeck/blog/commit/c9480f0bc43ea0df14e79ebbf24cb96fe9caa567 commit]"
      },
      "date": 1694077790028
    },
    {
      "type": "edit",
      "id": "b7e235132ef58e4d",
      "item": {
        "type": "paragraph",
        "id": "b7e235132ef58e4d",
        "text": "We see the same [[Wiki Page JSON]] displayed on one side (left) by the fedwiki reference implementation and on the other side (right) by the elm-pages prototype. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16939825695UUWPO:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1694079076302
    },
    {
      "item": {
        "type": "factory",
        "id": "5f922a0e4cb1b74a"
      },
      "id": "5f922a0e4cb1b74a",
      "type": "add",
      "after": "f5eba6f30486c76f",
      "date": 1694105888172
    },
    {
      "type": "edit",
      "id": "5f922a0e4cb1b74a",
      "item": {
        "type": "pagefold",
        "id": "5f922a0e4cb1b74a",
        "text": "~"
      },
      "date": 1694105891080
    },
    {
      "item": {
        "type": "factory",
        "id": "f3f1bf5e2c40f366"
      },
      "id": "f3f1bf5e2c40f366",
      "type": "add",
      "after": "5f922a0e4cb1b74a",
      "date": 1694105892607
    },
    {
      "type": "edit",
      "id": "f3f1bf5e2c40f366",
      "item": {
        "type": "reference",
        "id": "f3f1bf5e2c40f366",
        "site": "dev.asia.wiki.org",
        "slug": "render-and-follow-links",
        "title": "Render and Follow Links",
        "text": "Federated wiki collects context for links based on sites mentioned on the page. This context is consulted when a link is clicked."
      },
      "date": 1694105901998
    },
    {
      "type": "edit",
      "id": "f3f1bf5e2c40f366",
      "item": {
        "type": "reference",
        "id": "f3f1bf5e2c40f366",
        "site": "dev.asia.wiki.org",
        "slug": "render-and-follow-links",
        "title": "Render and Follow Links",
        "text": "Federated wiki collects [[Context]] for links based on sites mentioned on the page. This context is consulted when a link is clicked."
      },
      "date": 1694105917431
    },
    {
      "item": {
        "type": "factory",
        "id": "ebce5f5bb95fe820"
      },
      "id": "ebce5f5bb95fe820",
      "type": "add",
      "after": "f3f1bf5e2c40f366",
      "date": 1694105931306
    },
    {
      "type": "edit",
      "id": "ebce5f5bb95fe820",
      "item": {
        "type": "reference",
        "id": "ebce5f5bb95fe820",
        "site": "wiki.ralfbarkow.ch",
        "slug": "between-content-and-context",
        "title": "Between Content and Context",
        "text": "The inside of a container supports concurrent transformation of its contents, just like the inside of a theater full of people supports concurrent breathing."
      },
      "date": 1694105934164
    },
    {
      "item": {
        "type": "factory",
        "id": "4a5524afbb804f21"
      },
      "id": "4a5524afbb804f21",
      "type": "add",
      "after": "ebce5f5bb95fe820",
      "date": 1694106334034
    },
    {
      "type": "edit",
      "id": "4a5524afbb804f21",
      "item": {
        "type": "reference",
        "id": "4a5524afbb804f21",
        "site": "marc.tries.fed.wiki",
        "slug": "context",
        "title": "Context",
        "text": "Sometimes we hear \"context is everything.\" It may not be everything but it really helps make sense of situations."
      },
      "date": 1694106337782
    },
    {
      "item": {
        "type": "factory",
        "id": "66e67da0af71458f"
      },
      "id": "66e67da0af71458f",
      "type": "add",
      "after": "4a5524afbb804f21",
      "date": 1694106415967
    },
    {
      "type": "edit",
      "id": "66e67da0af71458f",
      "item": {
        "type": "reference",
        "id": "66e67da0af71458f",
        "site": "glossary.asia.wiki.org",
        "slug": "lineup",
        "title": "Lineup",
        "text": "The lineup is the list of wiki pages currently displayed within one tab, in order, with duplication possible."
      },
      "date": 1694106431872
    },
    {
      "id": "03a03913154825ec",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "03a03913154825ec",
        "text": "Lots of explanatory material can be left out of a page, because it can be accessed immediately and adjacently as needed. It is rather like having a open dictionary next to an open book. \n"
      },
      "after": "66e67da0af71458f",
      "attribution": {
        "page": "Context",
        "site": "marc.tries.fed.wiki"
      },
      "date": 1694106436999
    },
    {
      "id": "52cf512a13cb216b",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "52cf512a13cb216b",
        "text": "The FedWiki is programmable and selectable to do [[computation]]s that involve the content of any open page in your FedWiki. That is an unusual and powerful type of context indeed.\n"
      },
      "after": "4a5524afbb804f21",
      "attribution": {
        "page": "Context",
        "site": "marc.tries.fed.wiki"
      },
      "date": 1694106556798
    },
    {
      "type": "edit",
      "id": "52cf512a13cb216b",
      "item": {
        "type": "markdown",
        "id": "52cf512a13cb216b",
        "text": "The FedWiki is programmable and selectable to do [[Computation]]s that involve the content of any open page in your FedWiki. That is an unusual and powerful type of context indeed.\n"
      },
      "date": 1694106570693
    },
    {
      "item": {
        "type": "factory",
        "id": "b04245396e6ca715"
      },
      "id": "b04245396e6ca715",
      "type": "add",
      "after": "03a03913154825ec",
      "date": 1694106603432
    },
    {
      "type": "edit",
      "id": "b04245396e6ca715",
      "item": {
        "type": "graphviz",
        "id": "b04245396e6ca715",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=1 color=black]\n    edge [style=solid penwidth=1 color=black]\n    BACKLINKS NODE -> HERE\n\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
      },
      "date": 1694106605865
    },
    {
      "type": "edit",
      "id": "29ddf4b602dbf0e3",
      "item": {
        "type": "code",
        "id": "29ddf4b602dbf0e3",
        "text": "renderStory : Story -> Html msg\nrenderStory story =\n    case story of\n        Paragraph paragraph ->\n            case paragraph.type_ of\n                \"paragraph\" ->\n                    Html.p [] [ Html.text paragraph.text ]\n\n                _ ->\n                    Html.text (\"⚠️ INFO Paragraph – Unknown story type: \" ++ paragraph.type_)\n\n        Future future ->\n            case future.type_ of\n                \"future\" ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Known story type: \" ++ future.type_) ]\n\n                _ ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Unknown story type: \" ++ future.type_) ]\n\n        Factory factory ->\n            Html.text \"⚠️ INFO – Factory\"\n\n        EmptyStory ->\n            Html.text \"⚠️ INFO – Empty Story\"\n\n"
      },
      "date": 1694257658614
    },
    {
      "id": "24d808d66850fa5c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "24d808d66850fa5c",
        "text": "The renderStory function takes a Story as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story. Additionally, it provides informational messages in case of unknown or known story types."
      },
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694257974957
    },
    {
      "type": "remove",
      "id": "526751853c6deb70",
      "date": 1694257977226
    },
    {
      "type": "remove",
      "id": "7fa4066f5ca5aeea",
      "date": 1694257978865
    },
    {
      "type": "edit",
      "id": "24d808d66850fa5c",
      "item": {
        "type": "paragraph",
        "id": "24d808d66850fa5c",
        "text": "The renderStory function takes a [[Story]] as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story. Additionally, it provides informational messages in case of unknown or known story types."
      },
      "date": 1694257997844
    },
    {
      "type": "edit",
      "id": "24d808d66850fa5c",
      "item": {
        "type": "paragraph",
        "id": "24d808d66850fa5c",
        "text": "The renderStory function takes a [[Story]] as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story. Additionally, it provides informational messages in case of unknown types."
      },
      "date": 1694258044704
    },
    {
      "type": "edit",
      "id": "24d808d66850fa5c",
      "item": {
        "type": "paragraph",
        "id": "24d808d66850fa5c",
        "text": "The renderStory function takes a [[Story]] as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story item. Additionally, it provides informational messages in case of unknown types."
      },
      "date": 1694258785890
    },
    {
      "type": "edit",
      "id": "24d808d66850fa5c",
      "item": {
        "type": "paragraph",
        "id": "24d808d66850fa5c",
        "text": "The renderStory function takes a [[Story]] as input and generates an HTML element based on the type of the story. Depending on whether the story is a Paragraph, Future, Factory, or EmptyStory, it will create different HTML elements to represent the story item. Additionally, it provides informational messages in case of unknown story item types."
      },
      "date": 1694264963682
    },
    {
      "type": "edit",
      "id": "29ddf4b602dbf0e3",
      "item": {
        "type": "code",
        "id": "29ddf4b602dbf0e3",
        "text": "renderStory : Story -> Html msg\nrenderStory story =\n    case story of\n        Paragraph paragraph ->\n            case paragraph.type_ of\n                \"paragraph\" ->\n                    Html.p [] [ Html.text paragraph.text ]\n\n                _ ->\n                    Html.text (\"⚠️ INFO Paragraph – Unknown story item type: \" ++ paragraph.type_)\n\n        Future future ->\n            case future.type_ of\n                \"future\" ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Known story item type: \" ++ future.type_) ]\n\n                _ ->\n                    Html.div [] [ Html.text (\"⚠️ INFO Future – Unknown story item type: \" ++ future.type_) ]\n\n        Factory factory ->\n            Html.text \"⚠️ INFO – Factory\"\n\n        EmptyStory ->\n            Html.text \"⚠️ INFO – Empty Story\"\n\n"
      },
      "date": 1694265069662
    }
  ]
}