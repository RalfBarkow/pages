{
  "title": "0000000010…",
  "story": [
    {
      "type": "paragraph",
      "id": "7a6a7394ec9b19c6",
      "text": "How to achieve persistence of a 2D coordinate system representing connexions? This post explains it in a bottom-up approach. [https://ralfbarkow.wordpress.com/2006/11/29/0000000010/#more-141 post]"
    },
    {
      "type": "paragraph",
      "id": "9da3e61c3d661881",
      "text": "Let the binary string 0000000010… be an object description, a description of a coordinate system with two dimensions. Obviously there is some information ‚in‘ the binary string. At position 9 we perceive a difference between this position and the positions before (and after): the binary digit 1 instead of all the other 0’s."
    },
    {
      "type": "paragraph",
      "id": "37ad0a4fc83a37aa",
      "text": "If we hand over this (marked by the binary digit 1 at position #9) to an inverse pairing function called split, we get two coordinates: split 9 = (0, 3)."
    },
    {
      "type": "paragraph",
      "id": "89fdcdb798c0aa6f",
      "text": "Before proceeding, please find the Haskell code for the pairing function and its inverse:"
    },
    {
      "type": "code",
      "id": "117d4fbc7ce43a78",
      "text": "{{{\n\n  -- fusion\n\nf :: (Fractional a) => a -> a -> a\n\nf x y = (1/2) * (x + y) * (x + y + 1) + y\n\n  -- split\n\ns :: (RealFrac a, Floating a) => a -> (a, a)\n\ns z = (x, y) where\n\n    j = getJ z\n\n    y = z - (auxF j)\n\n    x = j - y\n\n -- auxiliary functions\n\nauxF :: (Fractional a) => a -> a\n\nauxF j = (1/2) * j * ( j + 1 )\n\ngetJ :: (Num a1, RealFrac a, Floating a) => a -> a1\n\ngetJ z = w where\n\n    q = (-1/2) + sqrt(1/4 + 2 * z)\n\n    w = fromInteger (truncate q )\n\n\n  -- End of Haskell script\n\n}}}"
    },
    {
      "type": "paragraph",
      "id": "199950565693ce43",
      "text": "Let’s visualize the configuration which we’ve got so far at position #9:"
    },
    {
      "type": "html",
      "id": "f2c1292cf7857092",
      "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/11/configurationpileobjectx0y3.png?w=660\"\n>"
    },
    {
      "type": "paragraph",
      "id": "f54bdfa9f27f4482",
      "text": "y = 3 ‚is‘ the z of another such configuration and x = 0 looks like a dead end, cause split 0 = (0, 0) yields no difference anymore."
    },
    {
      "type": "html",
      "id": "8fce528d57fc9ffc",
      "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/11/configurationpileobjectx0y3z.png?w=660\"\n>"
    },
    {
      "type": "paragraph",
      "id": "471bf2cfbed015d0",
      "text": "Moving from the configuration at position #9 to another such configuration (along the orange arrow), the z of the second configuration is now 3 as well: z = 3. The value 3 ‚is‘ the same as the connexion (x, y) — beneath the dotted line — i.e. the relation between x and y (at another position than #9)."
    },
    {
      "type": "paragraph",
      "id": "3e2e0aa1b5acda3d",
      "text": "Any such configuration consists of 4 elements: [x, y, f x y, z] with the pairing function f x y, called fusion, to give us the position which we mark by means of the binary digit 1 in the persistent binary string above."
    },
    {
      "type": "paragraph",
      "id": "722b8a0d3d4d3c06",
      "text": "Once more the configuration [x, y, z] represents a value f x y which is all of the values x, y, and z at once. "
    },
    {
      "type": "markdown",
      "id": "d54e4846dd508a72",
      "text": "(Cf. *Monads as containers* [https://wiki.haskell.org/Monads_as_containers page] for the list monad and such nondeterministic computations)"
    },
    {
      "type": "paragraph",
      "id": "c0ede4d666ed0e53",
      "text": "Okay?! But… where does the z come from? To be continued."
    },
    {
      "type": "paragraph",
      "id": "91f2b6193fbfd644",
      "text": "⇒ [[Two Concepts Of The Symbolic]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "0000000010…",
        "story": []
      },
      "date": 1660399857467
    },
    {
      "item": {
        "type": "factory",
        "id": "7a6a7394ec9b19c6"
      },
      "id": "7a6a7394ec9b19c6",
      "type": "add",
      "date": 1660399859346
    },
    {
      "type": "edit",
      "id": "7a6a7394ec9b19c6",
      "item": {
        "type": "paragraph",
        "id": "7a6a7394ec9b19c6",
        "text": "How to achieve persistence of a 2D coordinate system representing connexions? This post explains it in a bottom-up approach. "
      },
      "date": 1660399861567
    },
    {
      "type": "edit",
      "id": "7a6a7394ec9b19c6",
      "item": {
        "type": "paragraph",
        "id": "7a6a7394ec9b19c6",
        "text": "How to achieve persistence of a 2D coordinate system representing connexions? This post explains it in a bottom-up approach. [https://ralfbarkow.wordpress.com/2006/11/29/0000000010/#more-141 post]"
      },
      "date": 1660399875868
    },
    {
      "type": "add",
      "id": "c0ede4d666ed0e53",
      "item": {
        "type": "paragraph",
        "id": "c0ede4d666ed0e53",
        "text": "[…]"
      },
      "after": "7a6a7394ec9b19c6",
      "date": 1660399878272
    },
    {
      "type": "add",
      "id": "9da3e61c3d661881",
      "item": {
        "type": "paragraph",
        "id": "9da3e61c3d661881",
        "text": "Let the binary string 0000000010… be an object description, a description of a coordinate system with two dimensions. Obviously there is some information ‚in‘ the binary string. At position 9 we perceive a difference between this position and the positions before (and after): the binary digit 1 instead of all the other 0’s."
      },
      "after": "7a6a7394ec9b19c6",
      "date": 1660399899262
    },
    {
      "type": "add",
      "id": "37ad0a4fc83a37aa",
      "item": {
        "type": "paragraph",
        "id": "37ad0a4fc83a37aa",
        "text": "If we hand over this (marked by the binary digit 1 at position #9) to an inverse pairing function called split, we get two coordinates: split 9 = (0, 3)."
      },
      "after": "9da3e61c3d661881",
      "date": 1660399934598
    },
    {
      "type": "add",
      "id": "89fdcdb798c0aa6f",
      "item": {
        "type": "paragraph",
        "id": "89fdcdb798c0aa6f",
        "text": "Before proceeding, please find the Haskell code for the pairing function and its inverse:"
      },
      "after": "37ad0a4fc83a37aa",
      "date": 1660399952962
    },
    {
      "item": {
        "type": "factory",
        "id": "117d4fbc7ce43a78"
      },
      "id": "117d4fbc7ce43a78",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660399971086
    },
    {
      "id": "117d4fbc7ce43a78",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "c0ede4d666ed0e53"
      ],
      "date": 1660399973943
    },
    {
      "type": "edit",
      "id": "117d4fbc7ce43a78",
      "item": {
        "type": "code",
        "id": "117d4fbc7ce43a78",
        "text": "{{{\n\n  -- fusion\n\nf :: (Fractional a) => a -> a -> a\n\nf x y = (1/2) * (x + y) * (x + y + 1) + y\n\n  -- split\n\ns :: (RealFrac a, Floating a) => a -> (a, a)\n\ns z = (x, y) where\n\n    j = getJ z\n\n    y = z - (auxF j)\n\n    x = j - y\n\n -- auxiliary functions\n\nauxF :: (Fractional a) => a -> a\n\nauxF j = (1/2) * j * ( j + 1 )\n\ngetJ :: (Num a1, RealFrac a, Floating a) => a -> a1\n\ngetJ z = w where\n\n    q = (-1/2) + sqrt(1/4 + 2 * z)\n\n    w = fromInteger (truncate q )\n\n\n  -- End of Haskell script\n\n}}}"
      },
      "date": 1660399976133
    },
    {
      "item": {
        "type": "factory",
        "id": "199950565693ce43"
      },
      "id": "199950565693ce43",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660399999971
    },
    {
      "id": "199950565693ce43",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "199950565693ce43",
        "c0ede4d666ed0e53"
      ],
      "date": 1660400003245
    },
    {
      "type": "edit",
      "id": "199950565693ce43",
      "item": {
        "type": "paragraph",
        "id": "199950565693ce43",
        "text": "Let’s visualize the configuration which we’ve got so far at position #9:"
      },
      "date": 1660400007515
    },
    {
      "item": {
        "type": "factory",
        "id": "f2c1292cf7857092"
      },
      "id": "f2c1292cf7857092",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660400013923
    },
    {
      "id": "f2c1292cf7857092",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "199950565693ce43",
        "f2c1292cf7857092",
        "c0ede4d666ed0e53"
      ],
      "date": 1660400015923
    },
    {
      "type": "edit",
      "id": "f2c1292cf7857092",
      "item": {
        "type": "html",
        "id": "f2c1292cf7857092",
        "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/11/configurationpileobjectx0y3.png?w=660\"\n>"
      },
      "date": 1660400032508
    },
    {
      "item": {
        "type": "factory",
        "id": "f54bdfa9f27f4482"
      },
      "id": "f54bdfa9f27f4482",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660400051503
    },
    {
      "id": "f54bdfa9f27f4482",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "199950565693ce43",
        "f2c1292cf7857092",
        "f54bdfa9f27f4482",
        "c0ede4d666ed0e53"
      ],
      "date": 1660400053220
    },
    {
      "type": "edit",
      "id": "f54bdfa9f27f4482",
      "item": {
        "type": "paragraph",
        "id": "f54bdfa9f27f4482",
        "text": "y = 3 ‚is‘ the z of another such configuration and x = 0 looks like a dead end, cause split 0 = (0, 0) yields no difference anymore."
      },
      "date": 1660400054711
    },
    {
      "item": {
        "type": "factory",
        "id": "8fce528d57fc9ffc"
      },
      "id": "8fce528d57fc9ffc",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660400092269
    },
    {
      "id": "8fce528d57fc9ffc",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "199950565693ce43",
        "f2c1292cf7857092",
        "f54bdfa9f27f4482",
        "8fce528d57fc9ffc",
        "c0ede4d666ed0e53"
      ],
      "date": 1660400094613
    },
    {
      "type": "edit",
      "id": "8fce528d57fc9ffc",
      "item": {
        "type": "html",
        "id": "8fce528d57fc9ffc",
        "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/11/configurationpileobjectx0y3z.png?w=660\"\n>"
      },
      "date": 1660400110904
    },
    {
      "item": {
        "type": "factory",
        "id": "471bf2cfbed015d0"
      },
      "id": "471bf2cfbed015d0",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660400131788
    },
    {
      "id": "471bf2cfbed015d0",
      "type": "move",
      "order": [
        "7a6a7394ec9b19c6",
        "9da3e61c3d661881",
        "37ad0a4fc83a37aa",
        "89fdcdb798c0aa6f",
        "117d4fbc7ce43a78",
        "199950565693ce43",
        "f2c1292cf7857092",
        "f54bdfa9f27f4482",
        "8fce528d57fc9ffc",
        "471bf2cfbed015d0",
        "c0ede4d666ed0e53"
      ],
      "date": 1660400133709
    },
    {
      "type": "edit",
      "id": "471bf2cfbed015d0",
      "item": {
        "type": "paragraph",
        "id": "471bf2cfbed015d0",
        "text": "Moving from the configuration at position #9 to another such configuration (along the orange arrow), the z of the second configuration is now 3 as well: z = 3. The value 3 ‚is‘ the same as the connexion (x, y) — beneath the dotted line — i.e. the relation between x and y (at another position than #9)."
      },
      "date": 1660400135202
    },
    {
      "type": "add",
      "id": "3e2e0aa1b5acda3d",
      "item": {
        "type": "paragraph",
        "id": "3e2e0aa1b5acda3d",
        "text": "Any such configuration consists of 4 elements: [x, y, f x y, z] with the pairing function f x y, called fusion, to give us the position which we mark by means of the binary digit 1 in the persistent binary string above."
      },
      "after": "471bf2cfbed015d0",
      "date": 1660400194422
    },
    {
      "type": "add",
      "id": "722b8a0d3d4d3c06",
      "item": {
        "type": "paragraph",
        "id": "722b8a0d3d4d3c06",
        "text": "Once more the configuration [x, y, z] represents a value f x y which is all of the values x, y, and z at once. "
      },
      "after": "3e2e0aa1b5acda3d",
      "date": 1660400220549
    },
    {
      "type": "add",
      "id": "d54e4846dd508a72",
      "item": {
        "type": "paragraph",
        "id": "d54e4846dd508a72",
        "text": "(Cf. Monads as containers for the list monad and such nondeterministic computations)"
      },
      "after": "722b8a0d3d4d3c06",
      "date": 1660400246209
    },
    {
      "type": "edit",
      "id": "c0ede4d666ed0e53",
      "item": {
        "type": "paragraph",
        "id": "c0ede4d666ed0e53",
        "text": "Okay?! But… where does the z come from? To be continued."
      },
      "date": 1660400257479
    },
    {
      "type": "edit",
      "id": "d54e4846dd508a72",
      "item": {
        "type": "paragraph",
        "id": "d54e4846dd508a72",
        "text": "(Cf. *Monads as containers* [https://wiki.haskell.org/Monads_as_containers page] for the list monad and such nondeterministic computations)"
      },
      "date": 1660400285793
    },
    {
      "type": "edit",
      "id": "d54e4846dd508a72",
      "item": {
        "type": "markdown",
        "id": "d54e4846dd508a72",
        "text": "(Cf. *Monads as containers* [https://wiki.haskell.org/Monads_as_containers page] for the list monad and such nondeterministic computations)"
      },
      "date": 1660400288055
    },
    {
      "item": {
        "type": "factory",
        "id": "91f2b6193fbfd644"
      },
      "id": "91f2b6193fbfd644",
      "type": "add",
      "after": "c0ede4d666ed0e53",
      "date": 1660400380978
    },
    {
      "type": "edit",
      "id": "91f2b6193fbfd644",
      "item": {
        "type": "paragraph",
        "id": "91f2b6193fbfd644",
        "text": "– [[Two Concepts Of The Symbolic]]"
      },
      "date": 1660400391761
    },
    {
      "type": "edit",
      "id": "91f2b6193fbfd644",
      "item": {
        "type": "paragraph",
        "id": "91f2b6193fbfd644",
        "text": "⇒ [[Two Concepts Of The Symbolic]]"
      },
      "date": 1660400399358
    }
  ]
}