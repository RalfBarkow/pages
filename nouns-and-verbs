{
  "title": "Nouns And Verbs",
  "story": [
    {
      "type": "html",
      "text": "Things exist while action happens.",
      "id": "9e42a00e8d28cbcf684b0bb101ee8f57"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "<b>Therefore (for GUIs)</b>:",
      "id": "a75c0190c638d2e6bd52ff81311ce42a"
    },
    {
      "type": "html",
      "text": " Put lists of things (nouns) in a list pane (one of [[Few Panes]]) which persists through interactions.",
      "id": "1b3e2a6d28edde8015f41cc8eb67cb81"
    },
    {
      "type": "html",
      "text": " Put actions (verbs) in [[Short Menus]] which pop-up and then disappear as the action commences.",
      "id": "32449dc9091d8b38a9eae0de44d606d6"
    },
    {
      "type": "html",
      "text": "<b>For example:</b>",
      "id": "0c3107139991d2e362547b031a0af046"
    },
    {
      "type": "html",
      "text": "\nThe one time our domain specialists had trouble satisfying this pattern was for a menu they thought should include...",
      "id": "98ea81efdf9f9a636716ca6e3bb8ff8a"
    },
    {
      "type": "html",
      "text": " Decimal",
      "id": "965e551d9661e80582b02b4f0d344753"
    },
    {
      "type": "html",
      "text": " Octal",
      "id": "df650f5bdfccde08fa3366321a3d84ad"
    },
    {
      "type": "html",
      "text": " Hex",
      "id": "ac388fd09ae916a73ea8ebd1c7d281ff"
    },
    {
      "type": "html",
      "text": "\nWe recognized that they were in fact thinking of the menu options as actions and suggested that they rename them...",
      "id": "9c9f1750b5bd739886c1aaaf60ee352b"
    },
    {
      "type": "html",
      "text": " Be Decimal",
      "id": "4f2519cb81bef05e517d47c5da0c2f4a"
    },
    {
      "type": "html",
      "text": " Be Octal",
      "id": "c7331db493b223300d2066737b61a8f1"
    },
    {
      "type": "html",
      "text": " Be Hex",
      "id": "b48fec9b6e51a3f4e54d8eb0bf781edf"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "<b>Therefore (for [[Object Oriented Programming]])</b>:",
      "id": "17048b08959fa023c2c4b94550b0c1c1"
    },
    {
      "type": "html",
      "text": " Give classes \"noun\" names.",
      "id": "cfc5cd8ef29bd84753e007a947f020f3"
    },
    {
      "type": "html",
      "text": " Base classes should have general, simple names. E.g.:",
      "id": "fd14499910a496b38928f9ff61300a6f"
    },
    {
      "type": "html",
      "text": " \"List\"",
      "id": "1012afad212a7627e7feadd7d654109e"
    },
    {
      "type": "html",
      "text": " \"Stream\"",
      "id": "65328c8c477da006bac6af5255f3193d"
    },
    {
      "type": "html",
      "text": " \"Web\"",
      "id": "6dde9321e72e173b6449ec296f5d51c7"
    },
    {
      "type": "html",
      "text": " Subclasses should have specific, adjective-noun names. E.g.:",
      "id": "12a98afa59162bc29b4593661ed70950"
    },
    {
      "type": "html",
      "text": " \"Sorted<b></b>List\"",
      "id": "53f5932e57f6d403fd010eb72dc65ca0"
    },
    {
      "type": "html",
      "text": " \"File<b></b>Stream\", \"Network<b></b>Stream\", etc.",
      "id": "36aa619cf0e46d4ac34d423f9ca7323d"
    },
    {
      "type": "html",
      "text": " \"Intranet<b></b>Web\"",
      "id": "f510e86cda0c9d7b40a7518d0e25cd1d"
    },
    {
      "type": "html",
      "text": " Give methods \"verb\" names. (\"isHappy\", \"becomeHappy\", ...)",
      "id": "56dbeea838e59d6398f8f792f7f04acd"
    },
    {
      "type": "html",
      "text": "(See [[Smalltalk Best Practice Patterns]] for more details.)",
      "id": "b0b435175a034bb0078243b2da77037b"
    },
    {
      "type": "html",
      "text": "<b>Exceptions to this rule:</b>",
      "id": "556f7e899eaa6b9ab568424bb0b09b0b"
    },
    {
      "type": "html",
      "text": "<i>(I can't think of any that justify the inconsistency. Can you?)</i>",
      "id": "a46eac84c6defaa1d6f6533899249972"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "\nIn the menu example at top, wouldn't the options Dec, Oct, Hex actually be a radio-button group that \"just happens\" to be nested in a menu?",
      "id": "88eb50223820addf7cce4bfbf0a5e3bb"
    },
    {
      "type": "html",
      "text": "\nIf this were the case (as in several calculator apps I've seen), Decimal, Octal, Hex would be nouns that the user chooses from a list.",
      "id": "90fd8e43a061c2645d944272e6ef642b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "\nTrying to combine the thoughts above... if the choices displayed as radio buttons were prefaced by a verb, I think that would satisfy all requirements. For example, \"Display as:\" followed by radio buttons labeled as Decimal, Octal, and Hex.",
      "id": "e6d5591948c138bc83b70fe04217fd24"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "I think the first paragraph so badly misstates the noun-verb/object-message relationship to menus that I'd like to try a different wording here, and then encourage others to replace the original if they agree.",
      "id": "56c79933d1bccf3a87940d841439a0b2"
    },
    {
      "type": "html",
      "text": "<b>Therefore (for GUIs)</b>:",
      "id": "a75c0190c638d2e6bd52ff81311ce42a"
    },
    {
      "type": "html",
      "text": " Put things (nouns) on the desktop and allow them to be \"selected\".",
      "id": "25279a198b07445be4814d89595d6fb5"
    },
    {
      "type": "html",
      "text": " Put actions (verbs) that apply to the selected item(s) in [[Short Menus]] that pop-up and then disappear as the action commences.",
      "id": "04a5c0b1baf6c7a58bd808f03ad9b035"
    },
    {
      "type": "html",
      "text": " Sort the [[Short Menus]] from left to right in a [[Menu Bar]] from most-stable to most-dynamic. This usually corresponds to most-general to most-specific.",
      "id": "80311ef5f7ff598de7b7c8454d1b8e02"
    },
    {
      "type": "html",
      "text": " If a button, mnemonic, keyboard shortcut, and so on, is available, be sure it corresponds to exactly one currently-visible menu selection. If the menu selection is disabled, so should its alternative be.",
      "id": "7a549ca8fd9c6f353a38400d2e1dc29c"
    },
    {
      "type": "html",
      "text": "\nPlease note that this approach (shamelessly stolen from the Macintosh user interface guidelines of 1984) moots the Decimal/Octal/Hex example; every menu item should be a verb, applied to whatever the selection (noun) is.",
      "id": "dc0ad570f9b721e5bdc48515ccfb6bf4"
    },
    {
      "type": "html",
      "text": "\nThe \"Decimal/Octal/Hex\" menu is generally presented as a \"Format\" menu, with the three choices listed and a checkmark placed next to the most-recently selected choice. The radio-button logic can be used to turn the checkmark on and off. A \"Format menu\" is a good example of a menu that changes dynamically; it should always appear as \"Format\" in its menu bar, but the \"Decimal/Octal/Hex\" choices only appear when the <b>selection</b> is a number for which they make sense. A non-numeric selection would end up with totally different choices.",
      "id": "16d017ef22a4416a8da34c7a904e0dcc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "10183b5f8427c99e65f96d819026db63"
    },
    {
      "type": "html",
      "text": "[[Category Pattern]] [[Category Gui]]",
      "id": "3ac6767712330547fec8eb447ae80e4b"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?NounsAndVerbs c2.com]",
      "id": "b22a32654df85a13ddeea2895017face"
    }
  ],
  "journal": [
    {
      "date": 1370499052000,
      "id": "83b9ff188fa6187d1e7f7cbedac2b1fa",
      "type": "create",
      "item": {
        "title": "Nouns And Verbs",
        "story": [
          {
            "type": "html",
            "text": "Things exist while action happens.",
            "id": "9e42a00e8d28cbcf684b0bb101ee8f57"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "<b>Therefore (for GUIs)</b>:",
            "id": "a75c0190c638d2e6bd52ff81311ce42a"
          },
          {
            "type": "html",
            "text": " Put lists of things (nouns) in a list pane (one of [[Few Panes]]) which persists through interactions.",
            "id": "1b3e2a6d28edde8015f41cc8eb67cb81"
          },
          {
            "type": "html",
            "text": " Put actions (verbs) in [[Short Menus]] which pop-up and then disappear as the action commences.",
            "id": "32449dc9091d8b38a9eae0de44d606d6"
          },
          {
            "type": "html",
            "text": "<b>For example:</b>",
            "id": "0c3107139991d2e362547b031a0af046"
          },
          {
            "type": "html",
            "text": "\nThe one time our domain specialists had trouble satisfying this pattern was for a menu they thought should include...",
            "id": "98ea81efdf9f9a636716ca6e3bb8ff8a"
          },
          {
            "type": "html",
            "text": " Decimal",
            "id": "965e551d9661e80582b02b4f0d344753"
          },
          {
            "type": "html",
            "text": " Octal",
            "id": "df650f5bdfccde08fa3366321a3d84ad"
          },
          {
            "type": "html",
            "text": " Hex",
            "id": "ac388fd09ae916a73ea8ebd1c7d281ff"
          },
          {
            "type": "html",
            "text": "\nWe recognized that they were in fact thinking of the menu options as actions and suggested that they rename them...",
            "id": "9c9f1750b5bd739886c1aaaf60ee352b"
          },
          {
            "type": "html",
            "text": " Be Decimal",
            "id": "4f2519cb81bef05e517d47c5da0c2f4a"
          },
          {
            "type": "html",
            "text": " Be Octal",
            "id": "c7331db493b223300d2066737b61a8f1"
          },
          {
            "type": "html",
            "text": " Be Hex",
            "id": "b48fec9b6e51a3f4e54d8eb0bf781edf"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "<b>Therefore (for [[Object Oriented Programming]])</b>:",
            "id": "17048b08959fa023c2c4b94550b0c1c1"
          },
          {
            "type": "html",
            "text": " Give classes \"noun\" names.",
            "id": "cfc5cd8ef29bd84753e007a947f020f3"
          },
          {
            "type": "html",
            "text": " Base classes should have general, simple names. E.g.:",
            "id": "fd14499910a496b38928f9ff61300a6f"
          },
          {
            "type": "html",
            "text": " \"List\"",
            "id": "1012afad212a7627e7feadd7d654109e"
          },
          {
            "type": "html",
            "text": " \"Stream\"",
            "id": "65328c8c477da006bac6af5255f3193d"
          },
          {
            "type": "html",
            "text": " \"Web\"",
            "id": "6dde9321e72e173b6449ec296f5d51c7"
          },
          {
            "type": "html",
            "text": " Subclasses should have specific, adjective-noun names. E.g.:",
            "id": "12a98afa59162bc29b4593661ed70950"
          },
          {
            "type": "html",
            "text": " \"Sorted<b></b>List\"",
            "id": "53f5932e57f6d403fd010eb72dc65ca0"
          },
          {
            "type": "html",
            "text": " \"File<b></b>Stream\", \"Network<b></b>Stream\", etc.",
            "id": "36aa619cf0e46d4ac34d423f9ca7323d"
          },
          {
            "type": "html",
            "text": " \"Intranet<b></b>Web\"",
            "id": "f510e86cda0c9d7b40a7518d0e25cd1d"
          },
          {
            "type": "html",
            "text": " Give methods \"verb\" names. (\"isHappy\", \"becomeHappy\", ...)",
            "id": "56dbeea838e59d6398f8f792f7f04acd"
          },
          {
            "type": "html",
            "text": "(See [[Smalltalk Best Practice Patterns]] for more details.)",
            "id": "b0b435175a034bb0078243b2da77037b"
          },
          {
            "type": "html",
            "text": "<b>Exceptions to this rule:</b>",
            "id": "556f7e899eaa6b9ab568424bb0b09b0b"
          },
          {
            "type": "html",
            "text": "<i>(I can't think of any that justify the inconsistency. Can you?)</i>",
            "id": "a46eac84c6defaa1d6f6533899249972"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "\nIn the menu example at top, wouldn't the options Dec, Oct, Hex actually be a radio-button group that \"just happens\" to be nested in a menu?",
            "id": "88eb50223820addf7cce4bfbf0a5e3bb"
          },
          {
            "type": "html",
            "text": "\nIf this were the case (as in several calculator apps I've seen), Decimal, Octal, Hex would be nouns that the user chooses from a list.",
            "id": "90fd8e43a061c2645d944272e6ef642b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "\nTrying to combine the thoughts above... if the choices displayed as radio buttons were prefaced by a verb, I think that would satisfy all requirements. For example, \"Display as:\" followed by radio buttons labeled as Decimal, Octal, and Hex.",
            "id": "e6d5591948c138bc83b70fe04217fd24"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "I think the first paragraph so badly misstates the noun-verb/object-message relationship to menus that I'd like to try a different wording here, and then encourage others to replace the original if they agree.",
            "id": "56c79933d1bccf3a87940d841439a0b2"
          },
          {
            "type": "html",
            "text": "<b>Therefore (for GUIs)</b>:",
            "id": "a75c0190c638d2e6bd52ff81311ce42a"
          },
          {
            "type": "html",
            "text": " Put things (nouns) on the desktop and allow them to be \"selected\".",
            "id": "25279a198b07445be4814d89595d6fb5"
          },
          {
            "type": "html",
            "text": " Put actions (verbs) that apply to the selected item(s) in [[Short Menus]] that pop-up and then disappear as the action commences.",
            "id": "04a5c0b1baf6c7a58bd808f03ad9b035"
          },
          {
            "type": "html",
            "text": " Sort the [[Short Menus]] from left to right in a [[Menu Bar]] from most-stable to most-dynamic. This usually corresponds to most-general to most-specific.",
            "id": "80311ef5f7ff598de7b7c8454d1b8e02"
          },
          {
            "type": "html",
            "text": " If a button, mnemonic, keyboard shortcut, and so on, is available, be sure it corresponds to exactly one currently-visible menu selection. If the menu selection is disabled, so should its alternative be.",
            "id": "7a549ca8fd9c6f353a38400d2e1dc29c"
          },
          {
            "type": "html",
            "text": "\nPlease note that this approach (shamelessly stolen from the Macintosh user interface guidelines of 1984) moots the Decimal/Octal/Hex example; every menu item should be a verb, applied to whatever the selection (noun) is.",
            "id": "dc0ad570f9b721e5bdc48515ccfb6bf4"
          },
          {
            "type": "html",
            "text": "\nThe \"Decimal/Octal/Hex\" menu is generally presented as a \"Format\" menu, with the three choices listed and a checkmark placed next to the most-recently selected choice. The radio-button logic can be used to turn the checkmark on and off. A \"Format menu\" is a good example of a menu that changes dynamically; it should always appear as \"Format\" in its menu bar, but the \"Decimal/Octal/Hex\" choices only appear when the <b>selection</b> is a number for which they make sense. A non-numeric selection would end up with totally different choices.",
            "id": "16d017ef22a4416a8da34c7a904e0dcc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "10183b5f8427c99e65f96d819026db63"
          },
          {
            "type": "html",
            "text": "[[Category Pattern]] [[Category Gui]]",
            "id": "3ac6767712330547fec8eb447ae80e4b"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?NounsAndVerbs c2.com]",
            "id": "b22a32654df85a13ddeea2895017face"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1667489202356
    }
  ]
}