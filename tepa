{
  "title": "TEPA",
  "story": [
    {
      "type": "paragraph",
      "id": "e6a59124ae35cf87",
      "text": "Framework for building robust, user-centric Web applications. [https://package.elm-lang.org/packages/arowM/tepa/latest/ package], [https://github.com/arowM/tepa/tree/1.3.0 github], [https://elmlang.slack.com/archives/C0KF0B9SS/p1695543281608419 slack]"
    },
    {
      "type": "paragraph",
      "id": "71938ced4419ac58",
      "text": "TEPA Sample App [https://github.com/arowM/tepa-sample github]"
    },
    {
      "type": "paragraph",
      "id": "0764597b6a1ddeaf",
      "text": "I ([[Kadzuya Okamoto]]) am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"[[Experience]],\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded. [https://package.elm-lang.org/packages/arowM/tepa/1.3.0/ page] > Stateless, but Contextful"
    },
    {
      "type": "paragraph",
      "id": "7dba8fb1ddd9cfbd",
      "text": "The concept of stateless, which is so valued in application development these days, is an idea to reduce bugs by successfully isolating various states, such as the current time, that surround the application. On the other hand, if we isolate the context as well as states, it is hard to develop user-centric applications."
    },
    {
      "type": "paragraph",
      "id": "2abee325ae71de5e",
      "text": "TEPA is stateless, but contextful. Applications can be developed by following the flow of the user's actions."
    },
    {
      "type": "code",
      "id": "e713fb9def3498c6",
      "text": "tutorial =\n    Tepa.sequence\n        [ showWelcomeMessage\n        , awaitUserReactionToWelcomMessage <| \\response ->\n            case response of\n                PoliteUserReaction ->\n                    priseUser\n                EvilUserReaction ->\n                    punishUser\n        ]\n"
    },
    {
      "type": "paragraph",
      "id": "dac088b226728a58",
      "text": "TEPA uses an exception-free language called [[Elm]]. With Elm, you are forced by the compiler to handle all unexpected things on the fly. It may seem rigid and depressing at first. But one day you will be grateful for this nagging compiler. Elm is a kind of DSL (domain specific language) for the web front end. The language specification is small, so the you can learn quickly, and risky features such as exceptions have been stripped away, so a certain level of quality can be guaranteed no matter who writes it."
    },
    {
      "type": "paragraph",
      "id": "95e201e8eb8bbd2c",
      "text": "TEPA provides a function for creating use case scenarios, which is a written description of how a user thinks and operates, and how the system responds to that thinking and operation. The scenario can be turned directly into a lightweight test. (See Tepa.Scenario [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario page])"
    },
    {
      "type": "paragraph",
      "id": "05d5724aca4841b7",
      "text": "Key Concepts of TEPA [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa page]"
    },
    {
      "type": "paragraph",
      "id": "a04dfb31a9726c26",
      "text": "Procedure"
    },
    {
      "type": "paragraph",
      "id": "37320f19a4430c51",
      "text": "In TEPA, you describe application behaviour as Procedure, the time sequence of proccessing."
    },
    {
      "type": "paragraph",
      "id": "21226f0b3c599f2a",
      "text": "Promise"
    },
    {
      "type": "paragraph",
      "id": "1142b915feb237ca",
      "text": "To build your procedure, you combine some Promises that represent the eventual completion of an operation and its resulting value. Similar to Promise in JavaScript. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise mdn]"
    },
    {
      "type": "code",
      "id": "717bb5ce4bf1796f",
      "text": "type alias Promise memory result =\n    Promise memory result"
    },
    {
      "type": "paragraph",
      "id": "1ba65c0c6a018f64",
      "text": "The main difference with Promise in JavaScript is that Promise is not rejected in TEPA.  When you represent rejected state, just return Result value as its result. The rejection of JavaScript Promise is a sort of Exception, which drops context."
    },
    {
      "type": "paragraph",
      "id": "7feaeb70fb03cc3b",
      "text": "Expectations [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario#expectMemory page]"
    },
    {
      "type": "code",
      "id": "0b4ba7a61ac83b39",
      "text": "expectMemory :\n    Session\n    -> Markup\n    -> { layer : Layer m -> Maybe (Layer m1)\n       , expectation : m1 -> Expectation\n       }\n    -> Scenario m"
    },
    {
      "type": "paragraph",
      "id": "05f354b33e4c9cc7",
      "text": "Describe your expectations for the application memory state at the point."
    },
    {
      "type": "paragraph",
      "id": "4ba39e441fa8686a",
      "text": "You use [[Expect]] module to describe your [[Expectation]]. [https://package.elm-lang.org/packages/elm-explorations/test/latest/Expect package]"
    },
    {
      "type": "pagefold",
      "id": "462ba0dbebf46ba9",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "002d84effed49491",
      "text": "elm-markdown-ast [https://package.elm-lang.org/packages/arowM/elm-markdown-ast/latest/ package]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "TEPA",
        "story": []
      },
      "date": 1696319217904
    },
    {
      "item": {
        "type": "factory",
        "id": "71938ced4419ac58"
      },
      "id": "71938ced4419ac58",
      "type": "add",
      "date": 1696319219395
    },
    {
      "type": "edit",
      "id": "71938ced4419ac58",
      "item": {
        "type": "paragraph",
        "id": "71938ced4419ac58",
        "text": "TEPA Sample App"
      },
      "date": 1696319222436
    },
    {
      "type": "edit",
      "id": "71938ced4419ac58",
      "item": {
        "type": "paragraph",
        "id": "71938ced4419ac58",
        "text": "TEPA Sample App [https://github.com/arowM/tepa-sample github]"
      },
      "date": 1696319236248
    },
    {
      "type": "edit",
      "id": "71938ced4419ac58",
      "item": {
        "type": "paragraph",
        "id": "71938ced4419ac58",
        "text": "TEPA Sample App [https://github.com/arowM/tepa-sample github], [https://package.elm-lang.org/packages/arowM/tepa/latest/ package]"
      },
      "date": 1696319268916
    },
    {
      "item": {
        "type": "factory",
        "id": "e6a59124ae35cf87"
      },
      "id": "e6a59124ae35cf87",
      "type": "add",
      "after": "71938ced4419ac58",
      "date": 1696320797624
    },
    {
      "type": "edit",
      "id": "e6a59124ae35cf87",
      "item": {
        "type": "paragraph",
        "id": "e6a59124ae35cf87",
        "text": "Framework for building robust, user-centric Web applications. "
      },
      "date": 1696320799521
    },
    {
      "id": "e6a59124ae35cf87",
      "type": "move",
      "order": [
        "e6a59124ae35cf87",
        "71938ced4419ac58"
      ],
      "date": 1696320801690
    },
    {
      "type": "edit",
      "id": "71938ced4419ac58",
      "item": {
        "type": "paragraph",
        "id": "71938ced4419ac58",
        "text": "TEPA Sample App [https://github.com/arowM/tepa-sample github]"
      },
      "date": 1696320809842
    },
    {
      "type": "edit",
      "id": "e6a59124ae35cf87",
      "item": {
        "type": "paragraph",
        "id": "e6a59124ae35cf87",
        "text": "Framework for building robust, user-centric Web applications. [https://package.elm-lang.org/packages/arowM/tepa/latest/ package]"
      },
      "date": 1696320810959
    },
    {
      "type": "edit",
      "id": "e6a59124ae35cf87",
      "item": {
        "type": "paragraph",
        "id": "e6a59124ae35cf87",
        "text": "Framework for building robust, user-centric Web applications. [https://package.elm-lang.org/packages/arowM/tepa/latest/ package], [https://github.com/arowM/tepa/tree/1.3.0 github]"
      },
      "date": 1696320848661
    },
    {
      "type": "edit",
      "id": "e6a59124ae35cf87",
      "item": {
        "type": "paragraph",
        "id": "e6a59124ae35cf87",
        "text": "Framework for building robust, user-centric Web applications. [https://package.elm-lang.org/packages/arowM/tepa/latest/ package], [https://github.com/arowM/tepa/tree/1.3.0 github], [https://elmlang.slack.com/archives/C0KF0B9SS/p1695543281608419 slack]"
      },
      "date": 1696322278634
    },
    {
      "item": {
        "type": "factory",
        "id": "0764597b6a1ddeaf"
      },
      "id": "0764597b6a1ddeaf",
      "type": "add",
      "after": "71938ced4419ac58",
      "date": 1696322614709
    },
    {
      "type": "edit",
      "id": "0764597b6a1ddeaf",
      "item": {
        "type": "paragraph",
        "id": "0764597b6a1ddeaf",
        "text": "I am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"experience,\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded."
      },
      "date": 1696322617959
    },
    {
      "type": "edit",
      "id": "0764597b6a1ddeaf",
      "item": {
        "type": "paragraph",
        "id": "0764597b6a1ddeaf",
        "text": "I ([[Kadzuya Okamoto]]) am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"experience,\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded."
      },
      "date": 1696322640257
    },
    {
      "type": "edit",
      "id": "0764597b6a1ddeaf",
      "item": {
        "type": "paragraph",
        "id": "0764597b6a1ddeaf",
        "text": "I ([[Kadzuya Okamoto]]) am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"experience,\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded. [https://package.elm-lang.org/packages/arowM/tepa/1.3.0/ page] > "
      },
      "date": 1696322665126
    },
    {
      "type": "edit",
      "id": "0764597b6a1ddeaf",
      "item": {
        "type": "paragraph",
        "id": "0764597b6a1ddeaf",
        "text": "I ([[Kadzuya Okamoto]]) am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"experience,\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded. [https://package.elm-lang.org/packages/arowM/tepa/1.3.0/ page] > Stateless, but Contextful"
      },
      "date": 1696322670473
    },
    {
      "type": "edit",
      "id": "0764597b6a1ddeaf",
      "item": {
        "type": "paragraph",
        "id": "0764597b6a1ddeaf",
        "text": "I ([[Kadzuya Okamoto]]) am sure that 95% of people would recognize the term \"UX\" as a cool way of saying UI, but in fact it means \"user experience\". Since it is an \"[[Experience]],\" it is based on the accumulated experiences of users. Ideally, to think about UX, you should go back to the kind of family he or she grew up in, the kind of community he or she was exposed to, and the kind of education he or she received in school. However, in today's application development, it is not easy to analyze even the context in which the user operates the application after it is loaded. [https://package.elm-lang.org/packages/arowM/tepa/1.3.0/ page] > Stateless, but Contextful"
      },
      "date": 1696322751026
    },
    {
      "item": {
        "type": "factory",
        "id": "7dba8fb1ddd9cfbd"
      },
      "id": "7dba8fb1ddd9cfbd",
      "type": "add",
      "after": "0764597b6a1ddeaf",
      "date": 1696322800101
    },
    {
      "type": "edit",
      "id": "7dba8fb1ddd9cfbd",
      "item": {
        "type": "paragraph",
        "id": "7dba8fb1ddd9cfbd",
        "text": "The concept of stateless, which is so valued in application development these days, is an idea to reduce bugs by successfully isolating various states, such as the current time, that surround the application. On the other hand, if we isolate the context as well as states, it is hard to develop user-centric applications."
      },
      "date": 1696322802048
    },
    {
      "item": {
        "type": "factory",
        "id": "2abee325ae71de5e"
      },
      "id": "2abee325ae71de5e",
      "type": "add",
      "after": "7dba8fb1ddd9cfbd",
      "date": 1696322826002
    },
    {
      "type": "edit",
      "id": "2abee325ae71de5e",
      "item": {
        "type": "paragraph",
        "id": "2abee325ae71de5e",
        "text": "TEPA is stateless, but contextful. Applications can be developed by following the flow of the user's actions."
      },
      "date": 1696322827852
    },
    {
      "item": {
        "type": "factory",
        "id": "e713fb9def3498c6"
      },
      "id": "e713fb9def3498c6",
      "type": "add",
      "after": "2abee325ae71de5e",
      "date": 1696322832883
    },
    {
      "type": "edit",
      "id": "e713fb9def3498c6",
      "item": {
        "type": "code",
        "id": "e713fb9def3498c6",
        "text": "tutorial =\n    Tepa.sequence\n        [ showWelcomeMessage\n        , awaitUserReactionToWelcomMessage <| \\response ->\n            case response of\n                PoliteUserReaction ->\n                    priseUser\n                EvilUserReaction ->\n                    punishUser\n        ]\n"
      },
      "date": 1696322834589
    },
    {
      "item": {
        "type": "factory",
        "id": "dac088b226728a58"
      },
      "id": "dac088b226728a58",
      "type": "add",
      "after": "e713fb9def3498c6",
      "date": 1696322916837
    },
    {
      "type": "edit",
      "id": "dac088b226728a58",
      "item": {
        "type": "paragraph",
        "id": "dac088b226728a58",
        "text": "TEPA uses an exception-free language called [[Elm]]. With Elm, you are forced by the compiler to handle all unexpected things on the fly. It may seem rigid and depressing at first. But one day you will be grateful for this nagging compiler. Elm is a kind of DSL (domain specific language) for the web front end. The language specification is small, so the you can learn quickly, and risky features such as exceptions have been stripped away, so a certain level of quality can be guaranteed no matter who writes it."
      },
      "date": 1696322926096
    },
    {
      "item": {
        "type": "factory",
        "id": "95e201e8eb8bbd2c"
      },
      "id": "95e201e8eb8bbd2c",
      "type": "add",
      "after": "dac088b226728a58",
      "date": 1696322972093
    },
    {
      "type": "edit",
      "id": "95e201e8eb8bbd2c",
      "item": {
        "type": "paragraph",
        "id": "95e201e8eb8bbd2c",
        "text": "TEPA provides a function for creating use case scenarios, which is a written description of how a user thinks and operates, and how the system responds to that thinking and operation."
      },
      "date": 1696322973401
    },
    {
      "type": "edit",
      "id": "95e201e8eb8bbd2c",
      "item": {
        "type": "paragraph",
        "id": "95e201e8eb8bbd2c",
        "text": "TEPA provides a function for creating use case scenarios, which is a written description of how a user thinks and operates, and how the system responds to that thinking and operation. The scenario can be turned directly into a lightweight test."
      },
      "date": 1696323205572
    },
    {
      "type": "add",
      "id": "05d5724aca4841b7",
      "item": {
        "type": "paragraph",
        "id": "05d5724aca4841b7",
        "text": "Key Concepts of TEPA"
      },
      "after": "95e201e8eb8bbd2c",
      "date": 1696323298205
    },
    {
      "type": "edit",
      "id": "05d5724aca4841b7",
      "item": {
        "type": "paragraph",
        "id": "05d5724aca4841b7",
        "text": "Key Concepts of TEPA [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa page]"
      },
      "date": 1696323305531
    },
    {
      "type": "add",
      "id": "a04dfb31a9726c26",
      "item": {
        "type": "paragraph",
        "id": "a04dfb31a9726c26",
        "text": "Procedure"
      },
      "after": "05d5724aca4841b7",
      "date": 1696323371891
    },
    {
      "item": {
        "type": "factory",
        "id": "37320f19a4430c51"
      },
      "id": "37320f19a4430c51",
      "type": "add",
      "after": "a04dfb31a9726c26",
      "date": 1696323382173
    },
    {
      "type": "edit",
      "id": "37320f19a4430c51",
      "item": {
        "type": "paragraph",
        "id": "37320f19a4430c51",
        "text": "In TEPA, you describe application behaviour as Procedure, the time sequence of proccessing."
      },
      "date": 1696323383688
    },
    {
      "type": "add",
      "id": "21226f0b3c599f2a",
      "item": {
        "type": "paragraph",
        "id": "21226f0b3c599f2a",
        "text": "Promise"
      },
      "after": "37320f19a4430c51",
      "date": 1696323399168
    },
    {
      "type": "add",
      "id": "1142b915feb237ca",
      "item": {
        "type": "paragraph",
        "id": "1142b915feb237ca",
        "text": "To build your procedure, you combine some Promises that represent the eventual completion of an operation and its resulting value. Similar to Promise in JavaScript."
      },
      "after": "21226f0b3c599f2a",
      "date": 1696323412959
    },
    {
      "type": "edit",
      "id": "1142b915feb237ca",
      "item": {
        "type": "paragraph",
        "id": "1142b915feb237ca",
        "text": "To build your procedure, you combine some Promises that represent the eventual completion of an operation and its resulting value. Similar to Promise in JavaScript. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise mdn]"
      },
      "date": 1696323425648
    },
    {
      "item": {
        "type": "factory",
        "id": "717bb5ce4bf1796f"
      },
      "id": "717bb5ce4bf1796f",
      "type": "add",
      "after": "1142b915feb237ca",
      "date": 1696323461768
    },
    {
      "type": "edit",
      "id": "717bb5ce4bf1796f",
      "item": {
        "type": "code",
        "id": "717bb5ce4bf1796f",
        "text": "type alias Promise memory result =\n    Promise memory result"
      },
      "date": 1696323463819
    },
    {
      "item": {
        "type": "factory",
        "id": "1ba65c0c6a018f64"
      },
      "id": "1ba65c0c6a018f64",
      "type": "add",
      "after": "717bb5ce4bf1796f",
      "date": 1696323478930
    },
    {
      "type": "edit",
      "id": "1ba65c0c6a018f64",
      "item": {
        "type": "paragraph",
        "id": "1ba65c0c6a018f64",
        "text": "The main difference from Promise in JavaScript is that Promise in TEPA does not be rejected. When you represent rejected state, just return Result value as its result. The rejection of JavaScript Promise is a sort of Exception, which drops context."
      },
      "date": 1696323480380
    },
    {
      "type": "edit",
      "id": "1ba65c0c6a018f64",
      "item": {
        "type": "paragraph",
        "id": "1ba65c0c6a018f64",
        "text": "The main difference with Promise in JavaScript is that Promise is not rejected in TEPA.  When you represent rejected state, just return Result value as its result. The rejection of JavaScript Promise is a sort of Exception, which drops context."
      },
      "date": 1696323518919
    },
    {
      "type": "edit",
      "id": "95e201e8eb8bbd2c",
      "item": {
        "type": "paragraph",
        "id": "95e201e8eb8bbd2c",
        "text": "TEPA provides a function for creating use case scenarios, which is a written description of how a user thinks and operates, and how the system responds to that thinking and operation. The scenario can be turned directly into a lightweight test. (See [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario page]"
      },
      "date": 1696323654627
    },
    {
      "type": "edit",
      "id": "95e201e8eb8bbd2c",
      "item": {
        "type": "paragraph",
        "id": "95e201e8eb8bbd2c",
        "text": "TEPA provides a function for creating use case scenarios, which is a written description of how a user thinks and operates, and how the system responds to that thinking and operation. The scenario can be turned directly into a lightweight test. (See Tepa.Scenario [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario page])"
      },
      "date": 1696323666098
    },
    {
      "item": {
        "type": "factory",
        "id": "462ba0dbebf46ba9"
      },
      "id": "462ba0dbebf46ba9",
      "type": "add",
      "after": "1ba65c0c6a018f64",
      "date": 1696323826094
    },
    {
      "type": "edit",
      "id": "462ba0dbebf46ba9",
      "item": {
        "type": "pagefold",
        "id": "462ba0dbebf46ba9",
        "text": "~"
      },
      "date": 1696323828745
    },
    {
      "item": {
        "type": "factory",
        "id": "002d84effed49491"
      },
      "id": "002d84effed49491",
      "type": "add",
      "after": "462ba0dbebf46ba9",
      "date": 1696323830010
    },
    {
      "type": "edit",
      "id": "002d84effed49491",
      "item": {
        "type": "paragraph",
        "id": "002d84effed49491",
        "text": "elm-markdown-ast"
      },
      "date": 1696323832460
    },
    {
      "type": "edit",
      "id": "002d84effed49491",
      "item": {
        "type": "paragraph",
        "id": "002d84effed49491",
        "text": "elm-markdown-ast [https://package.elm-lang.org/packages/arowM/elm-markdown-ast/latest/ package]"
      },
      "date": 1696323843053
    },
    {
      "type": "add",
      "id": "7feaeb70fb03cc3b",
      "item": {
        "type": "paragraph",
        "id": "7feaeb70fb03cc3b",
        "text": "Expectations"
      },
      "after": "1ba65c0c6a018f64",
      "date": 1696323884071
    },
    {
      "type": "edit",
      "id": "7feaeb70fb03cc3b",
      "item": {
        "type": "paragraph",
        "id": "7feaeb70fb03cc3b",
        "text": "Expectations [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario page]"
      },
      "date": 1696323891103
    },
    {
      "type": "edit",
      "id": "7feaeb70fb03cc3b",
      "item": {
        "type": "paragraph",
        "id": "7feaeb70fb03cc3b",
        "text": "Expectations https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario#expectMemory page]"
      },
      "date": 1696323906484
    },
    {
      "type": "edit",
      "id": "7feaeb70fb03cc3b",
      "item": {
        "type": "paragraph",
        "id": "7feaeb70fb03cc3b",
        "text": "Expectations [https://package.elm-lang.org/packages/arowM/tepa/latest/Tepa-Scenario#expectMemory page]"
      },
      "date": 1696323910519
    },
    {
      "item": {
        "type": "factory",
        "id": "0b4ba7a61ac83b39"
      },
      "id": "0b4ba7a61ac83b39",
      "type": "add",
      "after": "002d84effed49491",
      "date": 1696323922745
    },
    {
      "id": "0b4ba7a61ac83b39",
      "type": "move",
      "order": [
        "e6a59124ae35cf87",
        "71938ced4419ac58",
        "0764597b6a1ddeaf",
        "7dba8fb1ddd9cfbd",
        "2abee325ae71de5e",
        "e713fb9def3498c6",
        "dac088b226728a58",
        "95e201e8eb8bbd2c",
        "05d5724aca4841b7",
        "a04dfb31a9726c26",
        "37320f19a4430c51",
        "21226f0b3c599f2a",
        "1142b915feb237ca",
        "717bb5ce4bf1796f",
        "1ba65c0c6a018f64",
        "7feaeb70fb03cc3b",
        "0b4ba7a61ac83b39",
        "462ba0dbebf46ba9",
        "002d84effed49491"
      ],
      "date": 1696323924140
    },
    {
      "type": "edit",
      "id": "0b4ba7a61ac83b39",
      "item": {
        "type": "code",
        "id": "0b4ba7a61ac83b39",
        "text": "expectMemory :\n    Session\n    -> Markup\n    -> { layer : Layer m -> Maybe (Layer m1)\n       , expectation : m1 -> Expectation\n       }\n    -> Scenario m"
      },
      "date": 1696323926738
    },
    {
      "item": {
        "type": "factory",
        "id": "05f354b33e4c9cc7"
      },
      "id": "05f354b33e4c9cc7",
      "type": "add",
      "after": "002d84effed49491",
      "date": 1696323934710
    },
    {
      "id": "05f354b33e4c9cc7",
      "type": "move",
      "order": [
        "e6a59124ae35cf87",
        "71938ced4419ac58",
        "0764597b6a1ddeaf",
        "7dba8fb1ddd9cfbd",
        "2abee325ae71de5e",
        "e713fb9def3498c6",
        "dac088b226728a58",
        "95e201e8eb8bbd2c",
        "05d5724aca4841b7",
        "a04dfb31a9726c26",
        "37320f19a4430c51",
        "21226f0b3c599f2a",
        "1142b915feb237ca",
        "717bb5ce4bf1796f",
        "1ba65c0c6a018f64",
        "7feaeb70fb03cc3b",
        "0b4ba7a61ac83b39",
        "05f354b33e4c9cc7",
        "462ba0dbebf46ba9",
        "002d84effed49491"
      ],
      "date": 1696323936124
    },
    {
      "type": "edit",
      "id": "05f354b33e4c9cc7",
      "item": {
        "type": "paragraph",
        "id": "05f354b33e4c9cc7",
        "text": "Describe your expectations for the application memory state at the point."
      },
      "date": 1696323937322
    },
    {
      "type": "add",
      "id": "4ba39e441fa8686a",
      "item": {
        "type": "paragraph",
        "id": "4ba39e441fa8686a",
        "text": "You use Expect module to describe your expectation."
      },
      "after": "05f354b33e4c9cc7",
      "date": 1696323974026
    },
    {
      "type": "edit",
      "id": "4ba39e441fa8686a",
      "item": {
        "type": "paragraph",
        "id": "4ba39e441fa8686a",
        "text": "You use Expect module to describe your expectation. [https://package.elm-lang.org/packages/elm-explorations/test/latest/Expect package]"
      },
      "date": 1696323991065
    },
    {
      "type": "edit",
      "id": "4ba39e441fa8686a",
      "item": {
        "type": "paragraph",
        "id": "4ba39e441fa8686a",
        "text": "You use Expect module to describe your [[Expectation]]. [https://package.elm-lang.org/packages/elm-explorations/test/latest/Expect package]"
      },
      "date": 1696324007655
    },
    {
      "type": "edit",
      "id": "4ba39e441fa8686a",
      "item": {
        "type": "paragraph",
        "id": "4ba39e441fa8686a",
        "text": "You use [[Expect]] module to describe your [[Expectation]]. [https://package.elm-lang.org/packages/elm-explorations/test/latest/Expect package]"
      },
      "date": 1696324022252
    }
  ]
}