{
  "title": "Smalltalk Object Notation (STON)",
  "story": [
    {
      "type": "markdown",
      "id": "3610d6af6829474b",
      "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] – [[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
    },
    {
      "type": "markdown",
      "id": "56b4d43e1da72b82",
      "text": "STON implements serialization and materialization using the Smalltalk Object Notation format.\n\n> I am a class side facade offering a high level API to write and read objects using STON."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Smalltalk Object Notation (STON)",
        "story": []
      },
      "date": 1628757200140
    },
    {
      "item": {
        "type": "factory",
        "id": "3610d6af6829474b"
      },
      "id": "3610d6af6829474b",
      "type": "add",
      "date": 1628757209062
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub]"
      },
      "date": 1628757222348
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] – is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on JSON (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
      },
      "date": 1628757249707
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] – STON is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on JSON (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
      },
      "date": 1628757260247
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] – STON is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
      },
      "date": 1628758146002
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] – [[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
      },
      "date": 1628789867299
    },
    {
      "type": "add",
      "id": "56b4d43e1da72b82",
      "item": {
        "type": "markdown",
        "id": "56b4d43e1da72b82",
        "text": "STON implements serialization and materialization using the Smalltalk Object Notation format.\n\nI am a class side facade offering a high level API to write and read objects using STON."
      },
      "after": "3610d6af6829474b",
      "date": 1631814202353
    },
    {
      "type": "edit",
      "id": "56b4d43e1da72b82",
      "item": {
        "type": "markdown",
        "id": "56b4d43e1da72b82",
        "text": "STON implements serialization and materialization using the Smalltalk Object Notation format.\n\n> I am a class side facade offering a high level API to write and read objects using STON."
      },
      "date": 1631814227098
    }
  ]
}