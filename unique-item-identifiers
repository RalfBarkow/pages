{
  "title": "Unique Item Identifiers",
  "story": [
    {
      "type": "markdown",
      "id": "713aeb6019b6ac5e",
      "text": "Wiki tries to mark every item created with a unique identifier. We can think of each item in [[The Federation]] as a database record, and we can refer to it with this unique id however it might move through the federation, and whatever its contents.\n"
    },
    {
      "type": "markdown",
      "id": "a8d3efb7bfcff3b4",
      "text": "# [[Fluid Not Permanent]]\n"
    },
    {
      "type": "markdown",
      "id": "674ebb3b81b57496",
      "text": "This is different from the [[Permanent Web]], in that we are not trying to refer to the content – rather the intent of the author. \n"
    },
    {
      "type": "markdown",
      "id": "c43b747d3479ee9e",
      "text": "This paragraph is intended to explain how a wiki-item can be \"fluid\", what it means to be fluid, and how this is different from \"permanent\". This is not easy to explain, I may not be good at explaining the concept – but that is my intent. I may therefore seek to improve this content, without changing the way I refer to it. \n"
    },
    {
      "type": "markdown",
      "id": "2a5a9c0b6e19f202",
      "text": "# Universal Intent\n"
    },
    {
      "type": "markdown",
      "id": "74028ce7b58cf53c",
      "text": "However even though we do not use content addressable references (ie mulithash-based) – we do want these references to be universal. Our software will break if our ids are not unique, and we seek to preserve content across time, and with the participation of any number of future authors.\n"
    },
    {
      "type": "markdown",
      "id": "2e90bc8dbd8b4ad9",
      "text": "# Permanent Snapshots\n"
    },
    {
      "type": "markdown",
      "id": "ebb6dbb05fe7e827",
      "text": "We look to archive the federation, or parts of the federation on the [[Permanent Web]]. We seek to translate wiki into a flat-file storage format which can stand the test of time.\n"
    },
    {
      "type": "markdown",
      "id": "2b4bd308a155c7d3",
      "text": "This in not wiki, this is [[Dead Wiki]], that is a moment of wiki's life frozen in time. We aim to provide tools that an author can use to create a permanent snapshot of their part of the federation.\n"
    },
    {
      "type": "markdown",
      "id": "e41f4def270adb42",
      "text": "To this end we need page-items to be robustly unique. We seek to avoid name clashes over [[The Long Now]]. The current wiki implementation uses an improvised item id of non-standard origin. We propose moving over to uuid version 4."
    },
    {
      "type": "markdown",
      "id": "9f7e2b663c61a4d2",
      "text": "# Livecode implementation\n"
    },
    {
      "type": "markdown",
      "id": "c77eea7d0f8edfc3",
      "text": "The [[Mediawiki Transport]] and other [[LiveCode]] based [[Transporters]] have been creating wiki-pages for a while now using version 4 (random) UUID's  The C++ library that creates the UUID uses a cryptographic quality pseudo-random number generator is used to generate the randomness.\n"
    },
    {
      "type": "markdown",
      "id": "81df8cf23ae6cc17",
      "text": "We can change the type of [[UUID]] for any new items created to any version needed (this is only one line of code to change), but we recommend the use of uuid version 4 for this purpose.\n"
    },
    {
      "type": "markdown",
      "id": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
      "text": "# Suggested Node.js implementation\n"
    },
    {
      "type": "markdown",
      "id": "973aca4cc5e19111",
      "text": "To use [[UUID]]s in [[node.js]] - [https://stackoverflow.com/questions/23327010/how-to-generate-unique-id-with-node-js stackoverflow]\n"
    },
    {
      "type": "code",
      "id": "f78361699745788a",
      "text": "npm install uuid\nvar uuid = require('uuid');\nThen create some ids ...\n\nconst uuidv1 = require('uuid/v1');uuidv1(); \n// -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a' \n\nconst uuidv4 = require('uuid/v4');uuidv4(); \n// -> '110ec58a-a0f2-4ac4-8393-c866d813b8d1' "
    },
    {
      "type": "markdown",
      "id": "2154782869012b33",
      "text": "- https://github.com/broofa/node-uuid\n- https://www.npmjs.com/package/uuid\n"
    },
    {
      "type": "markdown",
      "id": "6e248b052a14f6e6",
      "text": "# See also\n"
    },
    {
      "type": "markdown",
      "id": "082d7dbdb2057f5a",
      "text": "- [[Universally unique identifier]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Unique Item Identifiers",
        "story": []
      },
      "date": 1547823911571
    },
    {
      "item": {
        "type": "factory",
        "id": "713aeb6019b6ac5e"
      },
      "id": "713aeb6019b6ac5e",
      "type": "add",
      "date": 1547823912892
    },
    {
      "type": "edit",
      "id": "713aeb6019b6ac5e",
      "item": {
        "type": "markdown",
        "id": "713aeb6019b6ac5e",
        "text": "Wiki tries to mark every item created with a unique identifier.\n"
      },
      "date": 1547823951258
    },
    {
      "type": "add",
      "id": "6e248b052a14f6e6",
      "item": {
        "type": "markdown",
        "id": "6e248b052a14f6e6",
        "text": "# See also\n"
      },
      "after": "713aeb6019b6ac5e",
      "date": 1547823955625
    },
    {
      "type": "add",
      "id": "082d7dbdb2057f5a",
      "item": {
        "type": "markdown",
        "id": "082d7dbdb2057f5a",
        "text": "- [[Universally unique identifier]]"
      },
      "after": "6e248b052a14f6e6",
      "date": 1547823959257
    },
    {
      "item": {
        "type": "factory",
        "id": "9f7e2b663c61a4d2"
      },
      "id": "9f7e2b663c61a4d2",
      "type": "add",
      "after": "082d7dbdb2057f5a",
      "date": 1547823981576
    },
    {
      "type": "move",
      "order": [
        "713aeb6019b6ac5e",
        "9f7e2b663c61a4d2",
        "6e248b052a14f6e6",
        "082d7dbdb2057f5a"
      ],
      "id": "9f7e2b663c61a4d2",
      "date": 1547823984982
    },
    {
      "type": "edit",
      "id": "9f7e2b663c61a4d2",
      "item": {
        "type": "markdown",
        "id": "9f7e2b663c61a4d2",
        "text": "# Livecode implementation\n"
      },
      "date": 1547823998179
    },
    {
      "type": "add",
      "id": "c77eea7d0f8edfc3",
      "item": {
        "type": "markdown",
        "id": "c77eea7d0f8edfc3",
        "text": "If the uuidType is empty or \"random\" a version 4 (random) UUID is returned. A cryptographic quality pseudo-random number generator is used to generate the randomness."
      },
      "after": "9f7e2b663c61a4d2",
      "date": 1547823999608
    },
    {
      "type": "edit",
      "id": "713aeb6019b6ac5e",
      "item": {
        "type": "markdown",
        "id": "713aeb6019b6ac5e",
        "text": "Wiki tries to mark every item created with a unique identifier. We can think of each item in [[the federation]] as a database record, and we can refer to it with this unique id however it moves through the federation, and whatever it's contents.\n"
      },
      "date": 1547824680096
    },
    {
      "type": "add",
      "id": "a8d3efb7bfcff3b4",
      "item": {
        "type": "markdown",
        "id": "a8d3efb7bfcff3b4",
        "text": "# Not permanent - fluid\n"
      },
      "after": "713aeb6019b6ac5e",
      "date": 1547824693681
    },
    {
      "type": "add",
      "id": "674ebb3b81b57496",
      "item": {
        "type": "markdown",
        "id": "674ebb3b81b57496",
        "text": "This is different from the [[permanent web]], in that we are not trying to refer to the content - rather the intent of the author."
      },
      "after": "a8d3efb7bfcff3b4",
      "date": 1547824732251
    },
    {
      "type": "edit",
      "id": "a8d3efb7bfcff3b4",
      "item": {
        "type": "markdown",
        "id": "a8d3efb7bfcff3b4",
        "text": "# Fluid not permanent\n"
      },
      "date": 1547824759231
    },
    {
      "type": "edit",
      "id": "674ebb3b81b57496",
      "item": {
        "type": "markdown",
        "id": "674ebb3b81b57496",
        "text": "This is different from the [[permanent web]], in that we are not trying to refer to the content - rather the intent of the author. \n"
      },
      "date": 1547824785492
    },
    {
      "type": "add",
      "id": "c43b747d3479ee9e",
      "item": {
        "type": "markdown",
        "id": "c43b747d3479ee9e",
        "text": "This paragraph is intended to explain how a wiki-item can be \"fluid\", what it means to be fluid, and how this is different from \"permanent\". This is not easy to explain, I may not be good at explaining the concept - but that is my intent.\n"
      },
      "after": "674ebb3b81b57496",
      "date": 1547824879606
    },
    {
      "type": "edit",
      "id": "713aeb6019b6ac5e",
      "item": {
        "type": "markdown",
        "id": "713aeb6019b6ac5e",
        "text": "Wiki tries to mark every item created with a unique identifier. We can think of each item in [[the federation]] as a database record, and we can refer to it with this unique id however it might move through the federation, and whatever its contents.\n"
      },
      "date": 1547824939525
    },
    {
      "type": "add",
      "id": "2a5a9c0b6e19f202",
      "item": {
        "type": "markdown",
        "id": "2a5a9c0b6e19f202",
        "text": "# Universal intent\n"
      },
      "after": "c43b747d3479ee9e",
      "date": 1547825010054
    },
    {
      "type": "add",
      "id": "74028ce7b58cf53c",
      "item": {
        "type": "markdown",
        "id": "74028ce7b58cf53c",
        "text": "However even though we do not use content addressable references (ie mulithash-based) - we do want these references to be universal. Our software will break if our ids are not unique, and we seek to preserve content across time, and with the participation of any number of future authors."
      },
      "after": "2a5a9c0b6e19f202",
      "date": 1547825160073
    },
    {
      "type": "edit",
      "id": "2a5a9c0b6e19f202",
      "item": {
        "type": "markdown",
        "id": "2a5a9c0b6e19f202",
        "text": "# Universal Intent\n"
      },
      "date": 1547825199343
    },
    {
      "type": "edit",
      "id": "74028ce7b58cf53c",
      "item": {
        "type": "markdown",
        "id": "74028ce7b58cf53c",
        "text": "However even though we do not use content addressable references (ie mulithash-based) - we do want these references to be universal. Our software will break if our ids are not unique, and we seek to preserve content across time, and with the participation of any number of future authors.\n"
      },
      "date": 1547825205546
    },
    {
      "type": "add",
      "id": "2e90bc8dbd8b4ad9",
      "item": {
        "type": "markdown",
        "id": "2e90bc8dbd8b4ad9",
        "text": "# Permanent Snapshots"
      },
      "after": "74028ce7b58cf53c",
      "date": 1547825216896
    },
    {
      "type": "edit",
      "id": "2e90bc8dbd8b4ad9",
      "item": {
        "type": "markdown",
        "id": "2e90bc8dbd8b4ad9",
        "text": "# Permanent Snapshots\n"
      },
      "date": 1547825226912
    },
    {
      "type": "add",
      "id": "ebb6dbb05fe7e827",
      "item": {
        "type": "markdown",
        "id": "ebb6dbb05fe7e827",
        "text": "We look to archive the federation, or parts of the federation on the [[permanent web]]. We seek to translate wiki into a flat-file storage format which can stand the test of time.\n"
      },
      "after": "2e90bc8dbd8b4ad9",
      "date": 1547825283746
    },
    {
      "type": "add",
      "id": "2b4bd308a155c7d3",
      "item": {
        "type": "markdown",
        "id": "2b4bd308a155c7d3",
        "text": "This in not wiki, this is [[Dead Wiki]], that is a moment of wiki's life frozen in time. We aim to provide tools that an author can use to create a permanent snapshot of their part of the federation."
      },
      "after": "ebb6dbb05fe7e827",
      "date": 1547825348193
    },
    {
      "type": "edit",
      "id": "2b4bd308a155c7d3",
      "item": {
        "type": "markdown",
        "id": "2b4bd308a155c7d3",
        "text": "This in not wiki, this is [[dead wiki]], that is a moment of wiki's life frozen in time. We aim to provide tools that an author can use to create a permanent snapshot of their part of the federation."
      },
      "date": 1547827333018
    },
    {
      "type": "edit",
      "id": "2b4bd308a155c7d3",
      "item": {
        "type": "markdown",
        "id": "2b4bd308a155c7d3",
        "text": "This in not wiki, this is [[dead wiki]], that is a moment of wiki's life frozen in time. We aim to provide tools that an author can use to create a permanent snapshot of their part of the federation.\n"
      },
      "date": 1547827457793
    },
    {
      "type": "add",
      "id": "e41f4def270adb42",
      "item": {
        "type": "markdown",
        "id": "e41f4def270adb42",
        "text": "To this end we need page-items to be robustly unique. We seek to avoid name clashes over the [[Long Now]]."
      },
      "after": "2b4bd308a155c7d3",
      "date": 1547827510429
    },
    {
      "type": "edit",
      "id": "e41f4def270adb42",
      "item": {
        "type": "markdown",
        "id": "e41f4def270adb42",
        "text": "To this end we need page-items to be robustly unique. We seek to avoid name clashes over the [[long now]]. The current wiki implementation uses an improvised item id of non-standard origin. We propose moving over to uuid version 4."
      },
      "date": 1547827623250
    },
    {
      "type": "edit",
      "id": "c77eea7d0f8edfc3",
      "item": {
        "type": "markdown",
        "id": "c77eea7d0f8edfc3",
        "text": "The [[mediawiki transport]] and other [[Livecode]] based [[transporters]] have been creating wiki-pages for a while now using version 4 (random) UUID's  The C++ library that creates the UUID uses a cryptographic quality pseudo-random number generator is used to generate the randomness.\n"
      },
      "date": 1547827747223
    },
    {
      "type": "add",
      "id": "81df8cf23ae6cc17",
      "item": {
        "type": "markdown",
        "id": "81df8cf23ae6cc17",
        "text": "We can change the type of [[uuid]] for any new items created to any version needed (this is only one line of code to change), but we recommend the use of uuid version 4 for this purpose."
      },
      "after": "c77eea7d0f8edfc3",
      "date": 1547827832360
    },
    {
      "type": "edit",
      "id": "81df8cf23ae6cc17",
      "item": {
        "type": "markdown",
        "id": "81df8cf23ae6cc17",
        "text": "We can change the type of [[uuid]] for any new items created to any version needed (this is only one line of code to change), but we recommend the use of uuid version 4 for this purpose.\n"
      },
      "date": 1547827852200
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
        "text": "# Node.js\n"
      },
      "after": "81df8cf23ae6cc17",
      "id": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
      "date": 1547827859750
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "973aca4cc5e19111",
        "text": "To use [[uuid]]s in [[node.js]] - [https://stackoverflow.com/questions/23327010/how-to-generate-unique-id-with-node-js stackoverflow]\n"
      },
      "after": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
      "id": "973aca4cc5e19111",
      "date": 1547827862390
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "f78361699745788a",
        "text": "npm install uuid\nvar uuid = require('uuid');\nThen create some ids ...\n\nconst uuidv1 = require('uuid/v1');uuidv1(); \n// -> '6c84fb90-12c4-11e1-840d-7b25c5ee775a' \n\nconst uuidv4 = require('uuid/v4');uuidv4(); \n// -> '110ec58a-a0f2-4ac4-8393-c866d813b8d1' "
      },
      "after": "973aca4cc5e19111",
      "id": "f78361699745788a",
      "date": 1547827866101
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2154782869012b33",
        "text": "- https://github.com/broofa/node-uuid\n- https://www.npmjs.com/package/uuid\n"
      },
      "after": "f78361699745788a",
      "id": "2154782869012b33",
      "date": 1547827868053
    },
    {
      "type": "edit",
      "id": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
      "item": {
        "type": "markdown",
        "id": "d66d641e-9824-4397-b3ff-dcfa8fac0a80",
        "text": "# Suggested Node.js implementation\n"
      },
      "date": 1547827880574
    },
    {
      "type": "edit",
      "id": "c43b747d3479ee9e",
      "item": {
        "type": "markdown",
        "id": "c43b747d3479ee9e",
        "text": "This paragraph is intended to explain how a wiki-item can be \"fluid\", what it means to be fluid, and how this is different from \"permanent\". This is not easy to explain, I may not be good at explaining the concept - but that is my intent. I may therefore seek to improve this content, without changing the way I refer to it. \n"
      },
      "date": 1547827986053
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1547984003004
    },
    {
      "type": "fork",
      "site": "fedwiki.org",
      "date": 1628807643841
    },
    {
      "type": "edit",
      "id": "713aeb6019b6ac5e",
      "item": {
        "type": "markdown",
        "id": "713aeb6019b6ac5e",
        "text": "Wiki tries to mark every item created with a unique identifier. We can think of each item in [[The Federation]] as a database record, and we can refer to it with this unique id however it might move through the federation, and whatever its contents.\n"
      },
      "date": 1703829355349
    },
    {
      "type": "edit",
      "id": "674ebb3b81b57496",
      "item": {
        "type": "markdown",
        "id": "674ebb3b81b57496",
        "text": "This is different from the [[permanent web]], in that we are not trying to refer to the content – rather the intent of the author. \n"
      },
      "date": 1703848832039
    },
    {
      "type": "edit",
      "id": "c43b747d3479ee9e",
      "item": {
        "type": "markdown",
        "id": "c43b747d3479ee9e",
        "text": "This paragraph is intended to explain how a wiki-item can be \"fluid\", what it means to be fluid, and how this is different from \"permanent\". This is not easy to explain, I may not be good at explaining the concept – but that is my intent. I may therefore seek to improve this content, without changing the way I refer to it. \n"
      },
      "date": 1703848855860
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1703849368694
    },
    {
      "type": "edit",
      "id": "674ebb3b81b57496",
      "item": {
        "type": "markdown",
        "id": "674ebb3b81b57496",
        "text": "This is different from the [[Permanent Web]], in that we are not trying to refer to the content – rather the intent of the author. \n"
      },
      "date": 1703849573897
    },
    {
      "type": "edit",
      "id": "74028ce7b58cf53c",
      "item": {
        "type": "markdown",
        "id": "74028ce7b58cf53c",
        "text": "However even though we do not use content addressable references (ie mulithash-based) – we do want these references to be universal. Our software will break if our ids are not unique, and we seek to preserve content across time, and with the participation of any number of future authors.\n"
      },
      "date": 1703849641944
    },
    {
      "type": "edit",
      "id": "ebb6dbb05fe7e827",
      "item": {
        "type": "markdown",
        "id": "ebb6dbb05fe7e827",
        "text": "We look to archive the federation, or parts of the federation on the [[Permanent Web]]. We seek to translate wiki into a flat-file storage format which can stand the test of time.\n"
      },
      "date": 1703849670845
    },
    {
      "type": "edit",
      "id": "2b4bd308a155c7d3",
      "item": {
        "type": "markdown",
        "id": "2b4bd308a155c7d3",
        "text": "This in not wiki, this is [[Dead Wiki]], that is a moment of wiki's life frozen in time. We aim to provide tools that an author can use to create a permanent snapshot of their part of the federation.\n"
      },
      "date": 1703849684498
    },
    {
      "type": "edit",
      "id": "e41f4def270adb42",
      "item": {
        "type": "markdown",
        "id": "e41f4def270adb42",
        "text": "To this end we need page-items to be robustly unique. We seek to avoid name clashes over [[The Long Now]]. The current wiki implementation uses an improvised item id of non-standard origin. We propose moving over to uuid version 4."
      },
      "date": 1703849781882
    },
    {
      "type": "edit",
      "id": "c77eea7d0f8edfc3",
      "item": {
        "type": "markdown",
        "id": "c77eea7d0f8edfc3",
        "text": "The [[Mediawiki Transport]] and other [[Livecode]] based [[transporters]] have been creating wiki-pages for a while now using version 4 (random) UUID's  The C++ library that creates the UUID uses a cryptographic quality pseudo-random number generator is used to generate the randomness.\n"
      },
      "date": 1703849834914
    },
    {
      "type": "edit",
      "id": "c77eea7d0f8edfc3",
      "item": {
        "type": "markdown",
        "id": "c77eea7d0f8edfc3",
        "text": "The [[Mediawiki Transport]] and other [[LiveCode]] based [[Transporters]] have been creating wiki-pages for a while now using version 4 (random) UUID's  The C++ library that creates the UUID uses a cryptographic quality pseudo-random number generator is used to generate the randomness.\n"
      },
      "date": 1703849848356
    },
    {
      "type": "edit",
      "id": "81df8cf23ae6cc17",
      "item": {
        "type": "markdown",
        "id": "81df8cf23ae6cc17",
        "text": "We can change the type of [[UUID]] for any new items created to any version needed (this is only one line of code to change), but we recommend the use of uuid version 4 for this purpose.\n"
      },
      "date": 1703849882792
    },
    {
      "type": "edit",
      "id": "973aca4cc5e19111",
      "item": {
        "type": "markdown",
        "id": "973aca4cc5e19111",
        "text": "To use [[UUID]]s in [[node.js]] - [https://stackoverflow.com/questions/23327010/how-to-generate-unique-id-with-node-js stackoverflow]\n"
      },
      "date": 1703849904768
    },
    {
      "type": "edit",
      "id": "a8d3efb7bfcff3b4",
      "item": {
        "type": "markdown",
        "id": "a8d3efb7bfcff3b4",
        "text": "# Fluid Not Permanent\n"
      },
      "date": 1703851039705
    },
    {
      "type": "edit",
      "id": "a8d3efb7bfcff3b4",
      "item": {
        "type": "markdown",
        "id": "a8d3efb7bfcff3b4",
        "text": "# [[Fluid Not Permanent]]\n"
      },
      "date": 1703852254319
    }
  ]
}