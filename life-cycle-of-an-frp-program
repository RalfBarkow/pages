{
  "title": "Life Cycle of an FRP Program",
  "story": [
    {
      "type": "paragraph",
      "id": "701dfd9f64c03471",
      "text": "[…] the mechanics of how FRP code is executed. In most FRP systems, this all happens at application runtime. There are two stages:"
    },
    {
      "type": "paragraph",
      "id": "b1c848b02556172c",
      "text": "Stage 1: Initialization—Typically during program startup, FRP code statements are converted into a [[Directed Graph]] in memory."
    },
    {
      "type": "image",
      "id": "896f6f7ad4a1adc7",
      "text": "The stages of execution of an FRP program (Blackheath/Jones 2016, p. 13.)",
      "size": "wide",
      "width": 430,
      "height": 342,
      "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
    },
    {
      "type": "paragraph",
      "id": "0543264c2ca6f46f",
      "text": "Stage 2: Running—For the rest of the program execution you feed in values and turn the crank handle, and the FRP engine produces output."
    },
    {
      "type": "pagefold",
      "id": "0732824a318459ac",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "41db401da01d40d9",
      "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Manning Publications. ISBN 978-1-63343-010-5, p. 13."
    },
    {
      "type": "paragraph",
      "id": "d4d064621dec8a23",
      "text": "Functional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language."
    },
    {
      "type": "paragraph",
      "id": "2b6b051e85a4a856",
      "text": "About the Technology. Today’s software is shifting to more asynchronous, event-based solutions. For decades, the [[Observer Pattern]] has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code."
    },
    {
      "type": "paragraph",
      "id": "078e71a4812d066a",
      "text": "About the Book. Functional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems."
    },
    {
      "type": "paragraph",
      "id": "8541675adde1b3bb",
      "text": "What’s Inside. Think differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
    },
    {
      "type": "reference",
      "id": "1137fb97907dab69",
      "site": "sfw.c2.com",
      "slug": "directed-graph",
      "title": "Directed Graph",
      "text": "A directed graph is a [[Data Structure]] containing a vertex set <i>V</i> and an <i>arc</i> set <i>A</i>, where each arc (or <i>edge</i>, or <i>link</i>) is an ordered pair of vertices (or <i>nodes</i>, or <i>sommets</i>). The arcs may be thought of as arrows, each one starting at one vertex and pointing at precisely one other."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Life Cycle of an FRP Program",
        "story": []
      },
      "date": 1710054241798
    },
    {
      "item": {
        "type": "factory",
        "id": "701dfd9f64c03471"
      },
      "id": "701dfd9f64c03471",
      "type": "add",
      "date": 1710054243094
    },
    {
      "type": "edit",
      "id": "701dfd9f64c03471",
      "item": {
        "type": "paragraph",
        "id": "701dfd9f64c03471",
        "text": "[…] the mechanics of how FRP code is executed. In most FRP systems, this all happens at application runtime. There are two stages:"
      },
      "date": 1710054247266
    },
    {
      "item": {
        "type": "factory",
        "id": "b1c848b02556172c"
      },
      "id": "b1c848b02556172c",
      "type": "add",
      "after": "701dfd9f64c03471",
      "date": 1710054254340
    },
    {
      "type": "edit",
      "id": "b1c848b02556172c",
      "item": {
        "type": "paragraph",
        "id": "b1c848b02556172c",
        "text": "Stage 1: Initialization—Typically during program startup, FRP code statements are converted into a directed graph in memory."
      },
      "date": 1710054255918
    },
    {
      "item": {
        "type": "factory",
        "id": "0543264c2ca6f46f"
      },
      "id": "0543264c2ca6f46f",
      "type": "add",
      "after": "b1c848b02556172c",
      "date": 1710054264038
    },
    {
      "type": "edit",
      "id": "0543264c2ca6f46f",
      "item": {
        "type": "paragraph",
        "id": "0543264c2ca6f46f",
        "text": "Stage 2: Running—For the rest of the program execution you feed in values and turn the crank handle, and the FRP engine produces output."
      },
      "date": 1710054265493
    },
    {
      "item": {
        "type": "factory",
        "id": "0732824a318459ac"
      },
      "id": "0732824a318459ac",
      "type": "add",
      "after": "0543264c2ca6f46f",
      "date": 1710054275840
    },
    {
      "type": "edit",
      "id": "0732824a318459ac",
      "item": {
        "type": "pagefold",
        "id": "0732824a318459ac",
        "text": "~"
      },
      "date": 1710054278734
    },
    {
      "item": {
        "type": "factory",
        "id": "41db401da01d40d9"
      },
      "id": "41db401da01d40d9",
      "type": "add",
      "after": "0732824a318459ac",
      "date": 1710054280404
    },
    {
      "type": "edit",
      "id": "41db401da01d40d9",
      "item": {
        "type": "paragraph",
        "id": "41db401da01d40d9",
        "text": "\nBLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Online. Manning Publications. ISBN 978-1-63343-010-5. Available from: https://proquest.safaribooksonline.com/book/programming/9781633430105 [Accessed 20 November 2020]. \nSummaryFunctional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language.About the TechnologyToday’s software is shifting to more asynchronous, event-based solutions. For decades, the Observer pattern has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages.\n"
      },
      "date": 1710054282227
    },
    {
      "type": "edit",
      "id": "41db401da01d40d9",
      "item": {
        "type": "paragraph",
        "id": "41db401da01d40d9",
        "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Online. Manning Publications. ISBN 978-1-63343-010-5. [https://proquest.safaribooksonline.com/book/programming/9781633430105 page] [Accessed 20 November 2020]. \nSummaryFunctional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language.About the TechnologyToday’s software is shifting to more asynchronous, event-based solutions. For decades, the Observer pattern has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages.\n"
      },
      "date": 1710054315619
    },
    {
      "type": "edit",
      "id": "41db401da01d40d9",
      "item": {
        "type": "paragraph",
        "id": "41db401da01d40d9",
        "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Online. Manning Publications. ISBN 978-1-63343-010-5, p. [Accessed 20 November 2020]. \nSummaryFunctional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language.About the TechnologyToday’s software is shifting to more asynchronous, event-based solutions. For decades, the Observer pattern has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages.\n"
      },
      "date": 1710054370120
    },
    {
      "type": "edit",
      "id": "41db401da01d40d9",
      "item": {
        "type": "paragraph",
        "id": "41db401da01d40d9",
        "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Online. Manning Publications. ISBN 978-1-63343-010-5, p. 13."
      },
      "date": 1710054395294
    },
    {
      "type": "add",
      "id": "d4d064621dec8a23",
      "item": {
        "type": "paragraph",
        "id": "d4d064621dec8a23",
        "text": "Functional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language.About the TechnologyToday’s software is shifting to more asynchronous, event-based solutions. For decades, the Observer pattern has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
      },
      "after": "41db401da01d40d9",
      "date": 1710054409887
    },
    {
      "type": "edit",
      "id": "d4d064621dec8a23",
      "item": {
        "type": "paragraph",
        "id": "d4d064621dec8a23",
        "text": "Functional Reactive Programming teaches the concepts and applications of FRP. It offers a careful walk-through of core FRP operations and introduces the concepts and techniques you’ll need to use FRP in any language."
      },
      "date": 1710054428026
    },
    {
      "type": "add",
      "id": "2b6b051e85a4a856",
      "item": {
        "type": "paragraph",
        "id": "2b6b051e85a4a856",
        "text": "About the Technology. Today’s software is shifting to more asynchronous, event-based solutions. For decades, the Observer pattern has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
      },
      "after": "d4d064621dec8a23",
      "date": 1710054432285
    },
    {
      "type": "edit",
      "id": "2b6b051e85a4a856",
      "item": {
        "type": "paragraph",
        "id": "2b6b051e85a4a856",
        "text": "About the Technology. Today’s software is shifting to more asynchronous, event-based solutions. For decades, the [[Observer Pattern]] has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code.About the BookFunctional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
      },
      "date": 1710054451120
    },
    {
      "type": "edit",
      "id": "2b6b051e85a4a856",
      "item": {
        "type": "paragraph",
        "id": "2b6b051e85a4a856",
        "text": "About the Technology. Today’s software is shifting to more asynchronous, event-based solutions. For decades, the [[Observer Pattern]] has been the go-to event infrastructure, but it is known to be bug-prone. Functional reactive programming (FRP) replaces Observer, radically improving the quality of event-based code."
      },
      "date": 1710054476598
    },
    {
      "type": "add",
      "id": "078e71a4812d066a",
      "item": {
        "type": "paragraph",
        "id": "078e71a4812d066a",
        "text": "About the Book. Functional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems.What’s InsideThink differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
      },
      "after": "2b6b051e85a4a856",
      "date": 1710054485621
    },
    {
      "type": "edit",
      "id": "078e71a4812d066a",
      "item": {
        "type": "paragraph",
        "id": "078e71a4812d066a",
        "text": "About the Book. Functional Reactive Programming teaches you how FRP works and how to use it. You’ll begin by gaining an understanding of what FRP is and why it’s so powerful. Then, you’ll work through greenfield and legacy code as you learn to apply FRP to practical use cases. You’ll find examples in this book from many application domains using both Java and JavaScript. When you’re finished, you’ll be able to use the FRP approach in the systems you build and spend less time fixing problems."
      },
      "date": 1710054514883
    },
    {
      "type": "add",
      "id": "8541675adde1b3bb",
      "item": {
        "type": "paragraph",
        "id": "8541675adde1b3bb",
        "text": "What’s Inside. Think differently about data and eventsFRP techniques for Java and JavaScriptEliminate Observer one listener at a timeExplore Sodium, RxJS, and Kefir.js FRP systemsAbout the ReaderReaders need intermediate Java or JavaScript skills. No experience with functional programming or FRP required.About the AuthorsStephen Blackheath and Anthony Jones are experienced software developers and the creators of the Sodium FRP library for multiple languages."
      },
      "after": "078e71a4812d066a",
      "date": 1710054519187
    },
    {
      "type": "edit",
      "id": "b1c848b02556172c",
      "item": {
        "type": "paragraph",
        "id": "b1c848b02556172c",
        "text": "Stage 1: Initialization—Typically during program startup, FRP code statements are converted into a [[directed graph]] in memory."
      },
      "date": 1710054583381
    },
    {
      "type": "edit",
      "id": "b1c848b02556172c",
      "item": {
        "type": "paragraph",
        "id": "b1c848b02556172c",
        "text": "Stage 1: Initialization—Typically during program startup, FRP code statements are converted into a [[Directed Graph]] in memory."
      },
      "date": 1710054599695
    },
    {
      "item": {
        "type": "factory",
        "id": "1137fb97907dab69"
      },
      "id": "1137fb97907dab69",
      "type": "add",
      "after": "8541675adde1b3bb",
      "date": 1710054637638
    },
    {
      "type": "edit",
      "id": "1137fb97907dab69",
      "item": {
        "type": "reference",
        "id": "1137fb97907dab69",
        "site": "sfw.c2.com",
        "slug": "directed-graph",
        "title": "Directed Graph",
        "text": "A directed graph is a [[Data Structure]] containing a vertex set <i>V</i> and an <i>arc</i> set <i>A</i>, where each arc (or <i>edge</i>, or <i>link</i>) is an ordered pair of vertices (or <i>nodes</i>, or <i>sommets</i>). The arcs may be thought of as arrows, each one starting at one vertex and pointing at precisely one other."
      },
      "date": 1710054641335
    },
    {
      "id": "896f6f7ad4a1adc7",
      "type": "add",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "after": "701dfd9f64c03471",
      "attribution": {
        "page": "scratch"
      },
      "date": 1710054768560
    },
    {
      "type": "edit",
      "id": "41db401da01d40d9",
      "item": {
        "type": "paragraph",
        "id": "41db401da01d40d9",
        "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Manning Publications. ISBN 978-1-63343-010-5, p. 13."
      },
      "date": 1710054795509
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Manning Publications. ISBN 978-1-63343-010-5, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054799329
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (BLACKHEATH, Stephen and JONES, Anthony, 2016, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054851564
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (BLACKHEATH / JONES, Anthony, 2016, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054872084
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (BLACKHEATH / JONES 2016, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054880794
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (BLACKHEATH/JONES 2016, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054906505
    },
    {
      "type": "edit",
      "id": "896f6f7ad4a1adc7",
      "item": {
        "type": "image",
        "id": "896f6f7ad4a1adc7",
        "text": "The stages of execution of an FRP program (Blackheath/Jones 2016, p. 13.)",
        "size": "wide",
        "width": 430,
        "height": 342,
        "url": "/assets/plugins/image/0073f3c90f6f58a926c9f9934ba53687.jpg"
      },
      "date": 1710054938467
    },
    {
      "id": "b1c848b02556172c",
      "type": "move",
      "order": [
        "701dfd9f64c03471",
        "b1c848b02556172c",
        "896f6f7ad4a1adc7",
        "0543264c2ca6f46f",
        "0732824a318459ac",
        "41db401da01d40d9",
        "d4d064621dec8a23",
        "2b6b051e85a4a856",
        "078e71a4812d066a",
        "8541675adde1b3bb",
        "1137fb97907dab69"
      ],
      "date": 1710054963991
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1710055204077
    }
  ]
}