{
  "title": "Principle 1 - The fundamental law of scaling: unnecessary scaling hurts.",
  "story": [
    {
      "type": "paragraph",
      "id": "44d87bedd6a3c3d8",
      "text": "Scaling unnecessarily amplifies the bad and makes the good more difficult ([[Giovanni Asproni, 2019]]). \n\nWhen scaling, anything that was not working well will most likely get worse and the effect of any bottlenecks will be amplified. E.g., the negative consequences of a lack of resources (e.g., test environments), inefficient communication (e.g., distributed teams with inadequate tooling for video-conferencing) will become more significant. On the other hand, anything that was working well will tend to degrade - e.g., communication efficiency and effectiveness will decrease with the increase in the number of people, test environments can become bottlenecks, etc.\n"
    },
    {
      "type": "pagefold",
      "id": "62ed476e4d365b8d",
      "text": "Discussions"
    },
    {
      "type": "markdown",
      "id": "fb2a271a118230d6",
      "text": "# Comments & Questions & Answers"
    },
    {
      "type": "paragraph",
      "id": "888bae5fc51f7527",
      "text": "Add your comments and questions and answers and discuss with other Complexity practitioners here."
    },
    {
      "type": "paragraph",
      "id": "42791f6e2b292243",
      "text": "For the instructions, see [[How to Post your First Comment]]."
    },
    {
      "type": "markdown",
      "id": "0bb7aa349fa5f93a",
      "text": "# Comments from Agile Cambridge 2022"
    },
    {
      "type": "paragraph",
      "id": "c70ffa28ae8d41e2",
      "text": "The resilience that comes with scale is often not appreciated."
    },
    {
      "type": "markdown",
      "id": "0b84f0f44e5f4333",
      "text": "# Comments from SPA 2021\n"
    },
    {
      "type": "markdown",
      "id": "322da84934169aa6",
      "text": "Y E S !!!\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n\nIn general, scaling makes existing bottlenecks more obvious (and painful to deal with)."
    },
    {
      "type": "markdown",
      "id": "37009b01ab87598e",
      "text": "  \nA common reason for scaling agile by throwing a large number of people at the problem is tight deadlines. But we have observed that going larger to go faster doesn't work.\n\nOther things we have observed getting worse with the scale are disempowered team members and the problem of too many chefs in the kitchen AKA top-heavy structure.\n\nOn the later see for example Chap. 5.1.1 Changes in organizational structure in the case study by the Chalmers University Of Technology titled _The role of the first line manager in a Scaled Agile organization A Case Study at Volvo Cars Corporation_ available here: https://odr.chalmers.se/handle/20.500.12380/257373\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Principle 1 - The fundamental law of scaling: unnecessary scaling hurts.",
        "story": []
      },
      "date": 1616945356513
    },
    {
      "id": "44d87bedd6a3c3d8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "44d87bedd6a3c3d8",
        "text": "Scaling unnecessarily amplifies the bad and makes the good more difficult (Giovanni Asproni, 2019). \n\nWhen scaling, anything that was not working well will most likely get worse and the effect of any bottlenecks will be amplified. E.g., the negative consequences of a lack of resources (e.g., test environments), inefficient communication (e.g., distributed teams with inadequate tooling for video-conferencing) will become more significant. On the other hand, anything that was working well will tend to degrade - e.g., communication efficiency and effectiveness will decrease with the increase in the number of people, test environments can become bottlenecks, etc.\n"
      },
      "date": 1616945359273
    },
    {
      "id": "62ed476e4d365b8d",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "62ed476e4d365b8d",
        "text": "Discussions"
      },
      "after": "44d87bedd6a3c3d8",
      "date": 1616953592369
    },
    {
      "id": "fb2a271a118230d6",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "fb2a271a118230d6",
        "text": "# Comments & Questions & Answers"
      },
      "after": "62ed476e4d365b8d",
      "date": 1616953595576
    },
    {
      "id": "888bae5fc51f7527",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "888bae5fc51f7527",
        "text": "Add your comments and questions and answers and discuss with other Complexity practitioners here."
      },
      "after": "fb2a271a118230d6",
      "date": 1616953598725
    },
    {
      "type": "edit",
      "id": "44d87bedd6a3c3d8",
      "item": {
        "type": "paragraph",
        "id": "44d87bedd6a3c3d8",
        "text": "Scaling unnecessarily amplifies the bad and makes the good more difficult ([[Giovanni Asproni, 2019]]). \n\nWhen scaling, anything that was not working well will most likely get worse and the effect of any bottlenecks will be amplified. E.g., the negative consequences of a lack of resources (e.g., test environments), inefficient communication (e.g., distributed teams with inadequate tooling for video-conferencing) will become more significant. On the other hand, anything that was working well will tend to degrade - e.g., communication efficiency and effectiveness will decrease with the increase in the number of people, test environments can become bottlenecks, etc.\n"
      },
      "date": 1616954173979
    },
    {
      "id": "42791f6e2b292243",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "42791f6e2b292243",
        "text": "For the instructions, see [[How to Post your First Comment]]."
      },
      "after": "888bae5fc51f7527",
      "date": 1627743374500
    },
    {
      "id": "0b84f0f44e5f4333",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n  \nA common reason for scaling agile by throwing a large number of people at the problem is tight deadlines. But we have observed that going larger to go faster doesn't work.\n\nOther things we have observed getting worse with the scale are disempowered team members and the problem of too many chefs in the kitchen AKA top-heavy structure.\n"
      },
      "after": "42791f6e2b292243",
      "date": 1640534647255
    },
    {
      "type": "edit",
      "id": "0b84f0f44e5f4333",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n  \nA common reason for scaling agile by throwing a large number of people at the problem is tight deadlines. But we have observed that going larger to go faster doesn't work.\n\nOther things we have observed getting worse with the scale are disempowered team members and the problem of too many chefs in the kitchen AKA top-heavy structure.\nOn the later see for example Chap. 5.1.1 Changes in organizational structure in the case study by the Chalmers University Of Technology titled _The role of the first line manager in a Scaled Agile organization A Case Study at Volvo Cars Corporation_ available here: https://odr.chalmers.se/handle/20.500.12380/257373\n"
      },
      "date": 1640535622771
    },
    {
      "type": "edit",
      "id": "0b84f0f44e5f4333",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n"
      },
      "date": 1640535775554
    },
    {
      "type": "add",
      "id": "37009b01ab87598e",
      "item": {
        "type": "markdown",
        "id": "37009b01ab87598e",
        "text": "  \nA common reason for scaling agile by throwing a large number of people at the problem is tight deadlines. But we have observed that going larger to go faster doesn't work.\n\nOther things we have observed getting worse with the scale are disempowered team members and the problem of too many chefs in the kitchen AKA top-heavy structure.\nOn the later see for example Chap. 5.1.1 Changes in organizational structure in the case study by the Chalmers University Of Technology titled _The role of the first line manager in a Scaled Agile organization A Case Study at Volvo Cars Corporation_ available here: https://odr.chalmers.se/handle/20.500.12380/257373\n"
      },
      "after": "0b84f0f44e5f4333",
      "date": 1640535776976
    },
    {
      "type": "edit",
      "id": "0b84f0f44e5f4333",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n\nIn general, scaling makes existing bottlenecks more obvious (and painful to deal with)."
      },
      "date": 1640535799101
    },
    {
      "type": "edit",
      "id": "37009b01ab87598e",
      "item": {
        "type": "markdown",
        "id": "37009b01ab87598e",
        "text": "  \nA common reason for scaling agile by throwing a large number of people at the problem is tight deadlines. But we have observed that going larger to go faster doesn't work.\n\nOther things we have observed getting worse with the scale are disempowered team members and the problem of too many chefs in the kitchen AKA top-heavy structure.\n\nOn the later see for example Chap. 5.1.1 Changes in organizational structure in the case study by the Chalmers University Of Technology titled _The role of the first line manager in a Scaled Agile organization A Case Study at Volvo Cars Corporation_ available here: https://odr.chalmers.se/handle/20.500.12380/257373\n"
      },
      "date": 1640535809206
    },
    {
      "id": "0bb7aa349fa5f93a",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0bb7aa349fa5f93a",
        "text": "# Comments from Agile Cambridge 2022"
      },
      "after": "42791f6e2b292243",
      "date": 1657291443347
    },
    {
      "id": "c70ffa28ae8d41e2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c70ffa28ae8d41e2",
        "text": "The resilience that comes with scale is often not appreciated."
      },
      "after": "0bb7aa349fa5f93a",
      "date": 1657291446795
    },
    {
      "type": "edit",
      "id": "0b84f0f44e5f4333",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n\nY E S !!!\n"
      },
      "date": 1657296078084
    },
    {
      "type": "add",
      "id": "322da84934169aa6",
      "item": {
        "type": "markdown",
        "id": "322da84934169aa6",
        "text": "Y E S !!!\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n\nIn general, scaling makes existing bottlenecks more obvious (and painful to deal with)."
      },
      "after": "0b84f0f44e5f4333",
      "date": 1657296090074
    },
    {
      "type": "edit",
      "id": "0b84f0f44e5f4333",
      "item": {
        "type": "markdown",
        "id": "0b84f0f44e5f4333",
        "text": "# Comments from SPA 2021\n"
      },
      "date": 1657296095159
    },
    {
      "type": "edit",
      "id": "322da84934169aa6",
      "item": {
        "type": "markdown",
        "id": "322da84934169aa6",
        "text": "Y E S !!!\n\nThe scale adds constraints around communication between teams. We have found that interdependencies between teams cause a lot of bottlenecks: e.g. how do you determine the optimal protocols for APIs between components from different teams.\n\nIn general, scaling makes existing bottlenecks more obvious (and painful to deal with)."
      },
      "date": 1657296102726
    },
    {
      "type": "fork",
      "site": "p2.fed.wiki",
      "date": 1657374125658
    }
  ]
}