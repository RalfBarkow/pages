{
  "title": "Croquet Developers Questions",
  "story": [
    {
      "type": "markdown",
      "id": "a3e61e3a29981712",
      "text": "sebcrozet\n â€” \n[https://discord.com/channels/694586717247635488/966071402526543924/984092441185509436 discord]\nThe key is to only rely on whatâ€™s part of the [[IEEE 754-2008]] standard. Then, all platforms that implement this standard (which includes all the modern CPUs. Compliance to IEEE 754-2008 is also part of the WASM spec) will yield the same results for float operations. This makes fixed point math unnecessary.\nFunctions like transcendental are not part of the standard so they have to be re-implemented (otherwise relying on libm result in platform-specific results).\nThen you need to be a bit careful about serialization/deserialization to make sure that restarting the simulation from two different snapshots at different times will yield the same simulations.\nFinally, you need to make sure that all the user inputs are run in the exact same order:â€¯Croquet takes care of it. \n"
    },
    {
      "type": "pagefold",
      "id": "cceabac559a78e96",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "7fb43b67da083242",
      "text": "Where does the data go when we drag (upload) glb or images in the scene? We see that there is a files.us.croquet.io in the network connection, how are the data managed? Can we host our own upload server?"
    },
    {
      "type": "markdown",
      "id": "8f709e9500a8c539",
      "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989545661970153472 discord]\nThe file is encrypted with a random key, hashed, and uploaded to our file servers. The handle (which includes the hash and password) is stored in the session model. Since session data is encrypted with the session password whenever it leaves the client this means everything is fully end-to-end encrypted. Even if someone had access to our file servers all they see is encrypted data, and even if they hack us, we donâ€™t have the key. \n\nThat being said there is a way to override our file servers but we havenâ€™t tested that in a while. You also would have to implement your own authentication scheme. Ours is based on your API key which you can restrict to certain URLs. Also, since we use Google buckets our upload bandwidth is practically unlimited, you would have to design your servers that way. \n\nWhatâ€™s your use case? "
    },
    {
      "type": "pagefold",
      "id": "3e9f2543bfb3699c",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b9d4b48fd5ed4006",
      "text": "Some of our customers require us to store data on EU servers, others are even stricter and don't let us process the data at all."
    },
    {
      "type": "markdown",
      "id": "110af2f1ae86e159",
      "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989548329052565517 discord]\nAh, EU law makes sense. If you contact our support we can switch an API key over to our EU servers. We just donâ€™t have a self service UI for that yet. \nAnd if you have a client who is willing to pay for an enterprise plan we can make custom file servers work too."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Croquet Developers Questions",
        "story": []
      },
      "date": 1654865921699
    },
    {
      "id": "a3e61e3a29981712",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "a3e61e3a29981712",
        "text": "sebcrozet\n â€” \n[https://discord.com/channels/694586717247635488/966071402526543924/984092441185509436 discord]\nThe key is to only rely on whatâ€™s part of the [[IEEE 754-2008]] standard. Then, all platforms that implement this standard (which includes all the modern CPUs. Compliance to IEEE 754-2008 is also part of the WASM spec) will yield the same results for float operations. This makes fixed point math unnecessary.\nFunctions like transcendental are not part of the standard so they have to be re-implemented (otherwise relying on libm result in platform-specific results).\nThen you need to be a bit careful about serialization/deserialization to make sure that restarting the simulation from two different snapshots at different times will yield the same simulations.\nFinally, you need to make sure that all the user inputs are run in the exact same order:â€¯Croquet takes care of it. \n"
      },
      "date": 1654865989462
    },
    {
      "item": {
        "type": "factory",
        "id": "cceabac559a78e96"
      },
      "id": "cceabac559a78e96",
      "type": "add",
      "after": "a3e61e3a29981712",
      "date": 1655997622793
    },
    {
      "type": "edit",
      "id": "cceabac559a78e96",
      "item": {
        "type": "pagefold",
        "id": "cceabac559a78e96",
        "text": "~"
      },
      "date": 1655997625907
    },
    {
      "item": {
        "type": "factory",
        "id": "7fb43b67da083242"
      },
      "id": "7fb43b67da083242",
      "type": "add",
      "after": "cceabac559a78e96",
      "date": 1655997634584
    },
    {
      "type": "edit",
      "id": "7fb43b67da083242",
      "item": {
        "type": "paragraph",
        "id": "7fb43b67da083242",
        "text": "Where does the data go when we drag (upload) glb or images in the scene? We see that there is a files.us.croquet.io in the network connection, how are the data managed? Can we host our own upload server?"
      },
      "date": 1655997668496
    },
    {
      "item": {
        "type": "factory",
        "id": "8f709e9500a8c539"
      },
      "id": "8f709e9500a8c539",
      "type": "add",
      "after": "7fb43b67da083242",
      "date": 1655997675444
    },
    {
      "type": "edit",
      "id": "8f709e9500a8c539",
      "item": {
        "type": "markdown",
        "id": "8f709e9500a8c539",
        "text": "codefrau ðŸ¦© â€” heute um 17:01 Uhr\nThe file is encrypted with a random key, hashed, and uploaded to our file servers. The handle (which includes the hash and password) is stored in the session model. Since session data is encrypted with the session password whenever it leaves the client this means everything is fully end-to-end encrypted. Even if someone had access to our file servers all they see is encrypted data, and even if they hack us, we donâ€™t have the key. \n\nThat being said there is a way to override our file servers but we havenâ€™t tested that in a while. You also would have to implement your own authentication scheme. Ours is based on your API key which you can restrict to certain URLs. Also, since we use Google buckets our upload bandwidth is practically unlimited, you would have to design your servers that way. \n\nWhatâ€™s your use case? "
      },
      "date": 1655997677902
    },
    {
      "type": "edit",
      "id": "8f709e9500a8c539",
      "item": {
        "type": "markdown",
        "id": "8f709e9500a8c539",
        "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989545661970153472 discord]\nThe file is encrypted with a random key, hashed, and uploaded to our file servers. The handle (which includes the hash and password) is stored in the session model. Since session data is encrypted with the session password whenever it leaves the client this means everything is fully end-to-end encrypted. Even if someone had access to our file servers all they see is encrypted data, and even if they hack us, we donâ€™t have the key. \n\nThat being said there is a way to override our file servers but we havenâ€™t tested that in a while. You also would have to implement your own authentication scheme. Ours is based on your API key which you can restrict to certain URLs. Also, since we use Google buckets our upload bandwidth is practically unlimited, you would have to design your servers that way. \n\nWhatâ€™s your use case? "
      },
      "date": 1655997700883
    },
    {
      "item": {
        "type": "factory",
        "id": "b9d4b48fd5ed4006"
      },
      "id": "b9d4b48fd5ed4006",
      "type": "add",
      "after": "8f709e9500a8c539",
      "date": 1655997750284
    },
    {
      "type": "edit",
      "id": "b9d4b48fd5ed4006",
      "item": {
        "type": "paragraph",
        "id": "b9d4b48fd5ed4006",
        "text": "Some of our customers require us to store data on EU servers, others are even stricter and don't let us process the data at all."
      },
      "date": 1655997751894
    },
    {
      "item": {
        "type": "factory",
        "id": "3e9f2543bfb3699c"
      },
      "id": "3e9f2543bfb3699c",
      "type": "add",
      "after": "b9d4b48fd5ed4006",
      "date": 1655997755940
    },
    {
      "type": "edit",
      "id": "3e9f2543bfb3699c",
      "item": {
        "type": "pagefold",
        "id": "3e9f2543bfb3699c",
        "text": "~"
      },
      "date": 1655997759182
    },
    {
      "id": "3e9f2543bfb3699c",
      "type": "move",
      "order": [
        "a3e61e3a29981712",
        "cceabac559a78e96",
        "7fb43b67da083242",
        "8f709e9500a8c539",
        "3e9f2543bfb3699c",
        "b9d4b48fd5ed4006"
      ],
      "date": 1655997761187
    },
    {
      "item": {
        "type": "factory",
        "id": "110af2f1ae86e159"
      },
      "id": "110af2f1ae86e159",
      "type": "add",
      "after": "b9d4b48fd5ed4006",
      "date": 1655997781928
    },
    {
      "type": "edit",
      "id": "110af2f1ae86e159",
      "item": {
        "type": "markdown",
        "id": "110af2f1ae86e159",
        "text": "codefrau ðŸ¦© â€” heute um 17:11 Uhr\nAh, EU law makes sense. If you contact our support we can switch an API key over to our EU servers. We just donâ€™t have a self service UI for that yet. \nAnd if you have a client who is willing to pay for an enterprise plan we can make custom file servers work too."
      },
      "date": 1655997784814
    },
    {
      "type": "edit",
      "id": "110af2f1ae86e159",
      "item": {
        "type": "markdown",
        "id": "110af2f1ae86e159",
        "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989548329052565517 discord]\nAh, EU law makes sense. If you contact our support we can switch an API key over to our EU servers. We just donâ€™t have a self service UI for that yet. \nAnd if you have a client who is willing to pay for an enterprise plan we can make custom file servers work too."
      },
      "date": 1655997805498
    }
  ]
}