{
  "title": "Hammurabi Markup",
  "story": [
    {
      "type": "paragraph",
      "id": "54a39b1ea079b8c4",
      "text": "We examine the markup and capture digits for the expected keywords. Should report unmatched lines somehow."
    },
    {
      "type": "code",
      "id": "5dc271d5092f2782",
      "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/BUY (\\d+)$/))\n      result.buy = m[1]\n    if (m = line.match(/SELL (\\d+)$/))\n      result.buy = -m[1]\n    if (m = line.match(/FEED (\\d+)$/))\n      result.feed = m[1]\n    if (m = line.match(/PLANT (\\d+)$/))\n      result.plant = m[1]\n  }\n  return result\n}"
    },
    {
      "type": "code",
      "id": "c8963fb39e7da82f",
      "text": "parse (`\n  FEED 2000\n  PLANT 1000\n  SELL 20`)"
    },
    {
      "type": "frame",
      "id": "777ff878d8f1cc7e",
      "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Hammurabi Markup",
        "story": [
          {
            "type": "paragraph",
            "id": "54a39b1ea079b8c4",
            "text": "Explain what this code does."
          },
          {
            "type": "code",
            "id": "c8963fb39e7da82f",
            "text": "2 + 3"
          },
          {
            "type": "frame",
            "id": "777ff878d8f1cc7e",
            "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
          }
        ]
      },
      "date": 1615772820355
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "let text = '\n  BUY 20\n  FEED 2000"
      },
      "date": 1615772937172
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "let text = '\n  FEED 2000\n  PLANT 1000\n  BUY 20'"
      },
      "date": 1615773239603
    },
    {
      "item": {
        "type": "factory",
        "id": "5dc271d5092f2782"
      },
      "id": "5dc271d5092f2782",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1615773283929
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m = null\n  for (line of text.split(/\\n/) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615773684616
    },
    {
      "id": "5dc271d5092f2782",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "5dc271d5092f2782",
        "c8963fb39e7da82f",
        "777ff878d8f1cc7e"
      ],
      "date": 1615773690552
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "parse (\n 'FEED 2000\n  PLANT 1000\n  BUY 20')"
      },
      "date": 1615773728829
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m = null\n  for (line of text.split(/\\n/)\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615773755409
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m = null\n  for (line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615773779764
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m = null\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615773803570
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}\n  let m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615773830259
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We examine the markup and capture digits for the expected keywords. Should report unmatched lines somehow."
      },
      "date": 1615773945667
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "parse (\n 'FEED 2000\n  PLANT 1000\n  SELL 20')"
      },
      "date": 1615773971782
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "parse ('\n  FEED 2000\n  PLANT 1000\n  SELL 20')"
      },
      "date": 1615773992325
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}\n  let m\n  for (let line in text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774005527
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}\n  let m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774013326
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/)\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/)\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/)\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/)\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774025909
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "parse (`\n  FEED 2000\n  PLANT 1000\n  SELL 20`)"
      },
      "date": 1615774054039
    },
    {
      "type": "fork",
      "date": 1615774232855
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/))\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/))\n      result.buy = -m[1]\n    if (m = line.match(/^FEED {\\d+)$/))\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/))\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774258616
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/^BUY (\\d+)$/))\n      result.buy = m[1]\n    if (m = line.match(/^SELL (\\d+)$/))\n      result.buy = -m[1]\n    if (m = line.match(/^FEED (\\d+)$/))\n      result.feed = m[1]\n    if (m = line.match(/^PLANT (\\d+)$/))\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774286095
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/BUY (\\d+)$/))\n      result.buy = m[1]\n    if (m = line.match(/SELL (\\d+)$/))\n      result.buy = -m[1]\n    if (m = line.match(/FEED (\\d+)$/))\n      result.feed = m[1]\n    if (m = line.match(/PLANT (\\d+)$/))\n      result=plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774313994
    },
    {
      "type": "edit",
      "id": "5dc271d5092f2782",
      "item": {
        "type": "code",
        "id": "5dc271d5092f2782",
        "text": "function parse (text) {\n  let result = {}, m\n  for (let line of text.split(/\\n/)) {\n    if (m = line.match(/BUY (\\d+)$/))\n      result.buy = m[1]\n    if (m = line.match(/SELL (\\d+)$/))\n      result.buy = -m[1]\n    if (m = line.match(/FEED (\\d+)$/))\n      result.feed = m[1]\n    if (m = line.match(/PLANT (\\d+)$/))\n      result.plant = m[1]\n  }\n  return result\n}"
      },
      "date": 1615774328074
    },
    {
      "type": "fork",
      "date": 1617987425152
    },
    {
      "type": "fork",
      "site": "js.ward.asia.wiki.org",
      "date": 1626867600369
    }
  ]
}