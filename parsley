{
  "title": "Parsley",
  "story": [
    {
      "type": "paragraph",
      "id": "5f1306a05613295b",
      "text": "is a parsing library for people who find parsers scary or annoying. [https://pypi.org/project/Parsley/ page], [https://pym.readthedocs.io/en/latest/parsley.html docs]"
    },
    {
      "type": "paragraph",
      "id": "194848d6b27ed91d",
      "text": "I ([[Allen Short]]) wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules."
    },
    {
      "type": "paragraph",
      "id": "bdb5167fa90430d3",
      "text": "The PEG syntax used by Parsley is slightly different from Ford’s definitions, for example the use of = instead of ← in the definition of grammar rules, and Parsley’s syntax will be used in this thesis. (J. Veldthuis, „Detection of Cheating in Multiplayer Online Games with Knowledge Representation and Inference“, p. 35)"
    },
    {
      "type": "pagefold",
      "id": "e58f0b2824cbcba6",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "53396bf7d56e578f",
      "text": "VELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference. Master Thesis. Groningen: Faculty of Science and Engineering. [https://fse.studenttheses.ub.rug.nl/14562/ page]"
    },
    {
      "type": "reference",
      "id": "4790c8fde73d4979",
      "site": "wiki.ralfbarkow.ch",
      "slug": "parsing-expression-grammars",
      "title": "Parsing Expression Grammars",
      "text": "For decades we have been using Chomsky’s generative system of grammars, particularly context-free grammars (CFGs) and regular expressions (REs), to express the syntax of programming languages and protocols. The power of generative grammars to express ambiguity is crucial to their original purpose of modelling natural languages, but this very power makes it unnecessarily difficult both to express and to parse machine-oriented languages using CFGs. Parsing Expression Grammars (PEGs) provide an alternative, recognition-based formal foundation for describing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Parsley",
        "story": []
      },
      "date": 1696451786794
    },
    {
      "item": {
        "type": "factory",
        "id": "5f1306a05613295b"
      },
      "id": "5f1306a05613295b",
      "type": "add",
      "date": 1696451787750
    },
    {
      "type": "edit",
      "id": "5f1306a05613295b",
      "item": {
        "type": "paragraph",
        "id": "5f1306a05613295b",
        "text": "is a parsing library for people who find parsers scary or annoying. I wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules."
      },
      "date": 1696451790398
    },
    {
      "type": "edit",
      "id": "5f1306a05613295b",
      "item": {
        "type": "paragraph",
        "id": "5f1306a05613295b",
        "text": "is a parsing library for people who find parsers scary or annoying. I wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules. [https://pypi.org/project/Parsley/ page]"
      },
      "date": 1696451799258
    },
    {
      "type": "edit",
      "id": "5f1306a05613295b",
      "item": {
        "type": "paragraph",
        "id": "5f1306a05613295b",
        "text": "is a parsing library for people who find parsers scary or annoying."
      },
      "date": 1696451874851
    },
    {
      "type": "add",
      "id": "194848d6b27ed91d",
      "item": {
        "type": "paragraph",
        "id": "194848d6b27ed91d",
        "text": "I wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules. [https://pypi.org/project/Parsley/ page]"
      },
      "after": "5f1306a05613295b",
      "date": 1696451876625
    },
    {
      "type": "edit",
      "id": "194848d6b27ed91d",
      "item": {
        "type": "paragraph",
        "id": "194848d6b27ed91d",
        "text": "I wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules. "
      },
      "date": 1696452128375
    },
    {
      "type": "edit",
      "id": "5f1306a05613295b",
      "item": {
        "type": "paragraph",
        "id": "5f1306a05613295b",
        "text": "is a parsing library for people who find parsers scary or annoying. [https://pypi.org/project/Parsley/ page]"
      },
      "date": 1696452131545
    },
    {
      "type": "edit",
      "id": "194848d6b27ed91d",
      "item": {
        "type": "paragraph",
        "id": "194848d6b27ed91d",
        "text": "I wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules."
      },
      "date": 1696452135455
    },
    {
      "type": "edit",
      "id": "194848d6b27ed91d",
      "item": {
        "type": "paragraph",
        "id": "194848d6b27ed91d",
        "text": "I ([[Allen Short]]) wrote it because I wanted to parse a programming language, and tools like PLY or ANTLR or Bison were very hard to understand and integrate into my Python code. Most parser generators are based on LL or LR parsing algorithms that compile to big state machine tables. It was like I had to wake up a different section of my brain to understand or work on grammar rules."
      },
      "date": 1696452331360
    },
    {
      "type": "edit",
      "id": "5f1306a05613295b",
      "item": {
        "type": "paragraph",
        "id": "5f1306a05613295b",
        "text": "is a parsing library for people who find parsers scary or annoying. [https://pypi.org/project/Parsley/ page], [https://pym.readthedocs.io/en/latest/parsley.html docs]"
      },
      "date": 1696452498913
    },
    {
      "item": {
        "type": "factory",
        "id": "bdb5167fa90430d3"
      },
      "id": "bdb5167fa90430d3",
      "type": "add",
      "after": "194848d6b27ed91d",
      "date": 1696452713350
    },
    {
      "type": "edit",
      "id": "bdb5167fa90430d3",
      "item": {
        "type": "paragraph",
        "id": "bdb5167fa90430d3",
        "text": "The PEG syntax used by Parsley is slightly different from Ford’s definitions, for example the use of = instead of ← in the definition of grammar rules, and Parsley’s syntax will be used in this thesis."
      },
      "date": 1696452722007
    },
    {
      "type": "edit",
      "id": "bdb5167fa90430d3",
      "item": {
        "type": "paragraph",
        "id": "bdb5167fa90430d3",
        "text": "The PEG syntax used by Parsley is slightly different from Ford’s definitions, for example the use of = instead of ← in the definition of grammar rules, and Parsley’s syntax will be used in this thesis. (J. Veldthuis, „Detection of Cheating in Multiplayer Online Games with Knowledge Representation and Inference“ (master, Groningen, Faculty of Science and Engineering, 2016), https://fse.studenttheses.ub.rug.nl/14562/.)"
      },
      "date": 1696452733996
    },
    {
      "item": {
        "type": "factory",
        "id": "e58f0b2824cbcba6"
      },
      "id": "e58f0b2824cbcba6",
      "type": "add",
      "after": "bdb5167fa90430d3",
      "date": 1696452747983
    },
    {
      "type": "edit",
      "id": "e58f0b2824cbcba6",
      "item": {
        "type": "pagefold",
        "id": "e58f0b2824cbcba6",
        "text": "~"
      },
      "date": 1696452751907
    },
    {
      "item": {
        "type": "factory",
        "id": "53396bf7d56e578f"
      },
      "id": "53396bf7d56e578f",
      "type": "add",
      "after": "e58f0b2824cbcba6",
      "date": 1696452753039
    },
    {
      "type": "edit",
      "id": "53396bf7d56e578f",
      "item": {
        "type": "paragraph",
        "id": "53396bf7d56e578f",
        "text": "\nVELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference.  Online. master. Groningen: Faculty of Science and Engineering. [Accessed 4 October 2023]. Available from: https://fse.studenttheses.ub.rug.nl/14562/In many multiplayer online video games, players compete against each other to gain the highest score. This competitiveness drives some players to obtain an artificial advantage: using cheating tools to boost their skill However this is seen as unfair by honest players, and may discourage honest players from buying the game. Some examples of cheats are “aimbots”, which allow the cheater to aim with perfect accuracy, and “extra-sensory perception”, which allows the cheater to see their enemies through solid walls.\n\nThis work introduces a cheating detection method based on the formal specification of a cheat called a “cheat signature”. A complete tool chain is implemented for the detection of cheating in the video game Unreal Tournament, to create data sets from matches played in Unreal Tournament, and categorize players from those data sets into cheaters and honest players. By combining the results of multiple signatures a higher accuracy is achieved.\n"
      },
      "date": 1696452756768
    },
    {
      "type": "edit",
      "id": "53396bf7d56e578f",
      "item": {
        "type": "paragraph",
        "id": "53396bf7d56e578f",
        "text": "VELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference.  Online. master. Groningen: Faculty of Science and Engineering. [Accessed 4 October 2023]. Available from: https://fse.studenttheses.ub.rug.nl/14562/"
      },
      "date": 1696452772254
    },
    {
      "type": "edit",
      "id": "bdb5167fa90430d3",
      "item": {
        "type": "paragraph",
        "id": "bdb5167fa90430d3",
        "text": "The PEG syntax used by Parsley is slightly different from Ford’s definitions, for example the use of = instead of ← in the definition of grammar rules, and Parsley’s syntax will be used in this thesis. (J. Veldthuis, „Detection of Cheating in Multiplayer Online Games with Knowledge Representation and Inference“, p. )"
      },
      "date": 1696452793677
    },
    {
      "type": "edit",
      "id": "bdb5167fa90430d3",
      "item": {
        "type": "paragraph",
        "id": "bdb5167fa90430d3",
        "text": "The PEG syntax used by Parsley is slightly different from Ford’s definitions, for example the use of = instead of ← in the definition of grammar rules, and Parsley’s syntax will be used in this thesis. (J. Veldthuis, „Detection of Cheating in Multiplayer Online Games with Knowledge Representation and Inference“, p. 35)"
      },
      "date": 1696452834576
    },
    {
      "type": "edit",
      "id": "53396bf7d56e578f",
      "item": {
        "type": "paragraph",
        "id": "53396bf7d56e578f",
        "text": "VELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference. Master thesis. Groningen: Faculty of Science and Engineering. [Accessed 4 October 2023]. Available from: https://fse.studenttheses.ub.rug.nl/14562/"
      },
      "date": 1696452913003
    },
    {
      "type": "edit",
      "id": "53396bf7d56e578f",
      "item": {
        "type": "paragraph",
        "id": "53396bf7d56e578f",
        "text": "VELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference. Master thesis. Groningen: Faculty of Science and Engineering. [https://fse.studenttheses.ub.rug.nl/14562/ page]"
      },
      "date": 1696452941938
    },
    {
      "item": {
        "type": "factory",
        "id": "4790c8fde73d4979"
      },
      "id": "4790c8fde73d4979",
      "type": "add",
      "after": "53396bf7d56e578f",
      "date": 1696453059612
    },
    {
      "type": "edit",
      "id": "4790c8fde73d4979",
      "item": {
        "type": "reference",
        "id": "4790c8fde73d4979",
        "site": "wiki.ralfbarkow.ch",
        "slug": "parsing-expression-grammars",
        "title": "Parsing Expression Grammars",
        "text": "For decades we have been using Chomsky’s generative system of grammars, particularly context-free grammars (CFGs) and regular expressions (REs), to express the syntax of programming languages and protocols. The power of generative grammars to express ambiguity is crucial to their original purpose of modelling natural languages, but this very power makes it unnecessarily difficult both to express and to parse machine-oriented languages using CFGs. Parsing Expression Grammars (PEGs) provide an alternative, recognition-based formal foundation for describing"
      },
      "date": 1696453062169
    },
    {
      "type": "edit",
      "id": "53396bf7d56e578f",
      "item": {
        "type": "paragraph",
        "id": "53396bf7d56e578f",
        "text": "VELDTHUIS, J., 2016. Detection of cheating in Multiplayer Online Games with knowledge representation and inference. Master Thesis. Groningen: Faculty of Science and Engineering. [https://fse.studenttheses.ub.rug.nl/14562/ page]"
      },
      "date": 1696453698113
    }
  ]
}