{
  "title": "Stock and Flow Simulator",
  "story": [
    {
      "type": "paragraph",
      "id": "7cc6a28c7ef7af22",
      "text": "Here we assemble [[Stock and Flow]] segments to build a computational model that we evaluate below. [https://github.com/WardCunningham/assets/blob/master/pages/mock-graph-data/flow-sim.html github]"
    },
    {
      "type": "frame",
      "id": "db8a533f48bbd07a",
      "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/composite.html\nHEIGHT 300"
    },
    {
      "type": "paragraph",
      "id": "75904c42720d4fd4",
      "text": "We can turn on and off parts of a large simulation by merging their parts into the composite graph we feed into the simulator."
    },
    {
      "type": "assets",
      "id": "c74497cf7e195cd4",
      "text": "pages/stock-and-flow-simulator"
    },
    {
      "type": "paragraph",
      "id": "023ccf9947a745a0",
      "text": "We run 90 steps, thinking of them as days in a quarter. Then reset to initial conditions and run again."
    },
    {
      "type": "frame",
      "id": "4040f30cc5ef7bdf",
      "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/flow-sim.html"
    },
    {
      "type": "paragraph",
      "id": "01b386b58f3d4071",
      "text": "We'll speed this up and plot each run fast enough that you can get a good sense of how the controls interact."
    },
    {
      "type": "reference",
      "id": "1a0110757efb6a0d",
      "site": "js.ward.asia.wiki.org",
      "slug": "add-new-data-to-svg-line",
      "title": "Add New Data to SVG Line",
      "text": "We want to plot a timeseries where the data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
    },
    {
      "type": "paragraph",
      "id": "c2aacf47b39b2e09",
      "text": "See [[World Modeled]] upon which we might test our own notions of modularity."
    },
    {
      "type": "paragraph",
      "id": "d9ca6f8bd070b144",
      "text": "Tom Fiddaman's model library. [https://metasd.com/model-library/ site]"
    },
    {
      "type": "paragraph",
      "id": "0bb342754178c76d",
      "text": "Comparison of system dynamics software. [https://en.wikipedia.org/wiki/Comparison_of_system_dynamics_software wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "df3f8895f9491380",
      "text": "The Euler method is a first-order numerical procedure for solving ordinary differential equations with a given initial value. [https://en.wikipedia.org/wiki/Euler_method wikipedia]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Stock and Flow Simulator",
        "story": []
      },
      "date": 1649192696316
    },
    {
      "item": {
        "type": "factory",
        "id": "7cc6a28c7ef7af22"
      },
      "id": "7cc6a28c7ef7af22",
      "type": "add",
      "date": 1649192714141
    },
    {
      "type": "edit",
      "id": "7cc6a28c7ef7af22",
      "item": {
        "type": "paragraph",
        "id": "7cc6a28c7ef7af22",
        "text": "Here we assemble [[Stock and Flow]] segments to build computational models."
      },
      "date": 1649192778305
    },
    {
      "id": "db8a533f48bbd07a",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "db8a533f48bbd07a",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/composite.html\nHEIGHT 400"
      },
      "after": "7cc6a28c7ef7af22",
      "date": 1649193413400
    },
    {
      "item": {
        "type": "factory",
        "id": "c74497cf7e195cd4"
      },
      "id": "c74497cf7e195cd4",
      "type": "add",
      "after": "db8a533f48bbd07a",
      "date": 1649193645044
    },
    {
      "type": "edit",
      "id": "c74497cf7e195cd4",
      "item": {
        "type": "assets",
        "id": "c74497cf7e195cd4",
        "text": "pages/stock-and-flow-simulator"
      },
      "date": 1649193652231
    },
    {
      "type": "edit",
      "id": "db8a533f48bbd07a",
      "item": {
        "type": "frame",
        "id": "db8a533f48bbd07a",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/composite.html\nHEIGHT 100"
      },
      "date": 1649193666629
    },
    {
      "type": "edit",
      "id": "db8a533f48bbd07a",
      "item": {
        "type": "frame",
        "id": "db8a533f48bbd07a",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/composite.html\nHEIGHT 200"
      },
      "date": 1649193674875
    },
    {
      "type": "edit",
      "id": "db8a533f48bbd07a",
      "item": {
        "type": "frame",
        "id": "db8a533f48bbd07a",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/composite.html\nHEIGHT 300"
      },
      "date": 1649193693438
    },
    {
      "item": {
        "type": "factory",
        "id": "4040f30cc5ef7bdf"
      },
      "id": "4040f30cc5ef7bdf",
      "type": "add",
      "after": "c74497cf7e195cd4",
      "date": 1649193889222
    },
    {
      "type": "edit",
      "id": "4040f30cc5ef7bdf",
      "item": {
        "type": "frame",
        "id": "4040f30cc5ef7bdf",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/flow-sim.html"
      },
      "date": 1649195432106
    },
    {
      "item": {
        "type": "factory",
        "id": "01b386b58f3d4071"
      },
      "id": "01b386b58f3d4071",
      "type": "add",
      "after": "4040f30cc5ef7bdf",
      "date": 1649204174951
    },
    {
      "type": "edit",
      "id": "01b386b58f3d4071",
      "item": {
        "type": "paragraph",
        "id": "01b386b58f3d4071",
        "text": "We'll speed this up and plot each run fast enough that you can get a good sense of how the controls interact."
      },
      "date": 1649204275086
    },
    {
      "item": {
        "type": "factory",
        "id": "1a0110757efb6a0d"
      },
      "id": "1a0110757efb6a0d",
      "type": "add",
      "after": "01b386b58f3d4071",
      "date": 1649204279012
    },
    {
      "type": "edit",
      "id": "1a0110757efb6a0d",
      "item": {
        "type": "reference",
        "id": "1a0110757efb6a0d",
        "site": "js.ward.asia.wiki.org",
        "slug": "add-new-data-to-svg-line",
        "title": "Add New Data to SVG Line",
        "text": "We want to plot a timeseries where the data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1649204303639
    },
    {
      "type": "add",
      "id": "75904c42720d4fd4",
      "item": {
        "type": "paragraph",
        "id": "75904c42720d4fd4",
        "text": "We can turn on and off parts of a large simulation by merging their parts into the composite graph we feed into the simulator."
      },
      "after": "01b386b58f3d4071",
      "date": 1649204415609
    },
    {
      "id": "75904c42720d4fd4",
      "type": "move",
      "order": [
        "7cc6a28c7ef7af22",
        "db8a533f48bbd07a",
        "75904c42720d4fd4",
        "c74497cf7e195cd4",
        "4040f30cc5ef7bdf",
        "01b386b58f3d4071",
        "1a0110757efb6a0d"
      ],
      "date": 1649204418008
    },
    {
      "type": "add",
      "id": "023ccf9947a745a0",
      "item": {
        "type": "paragraph",
        "id": "023ccf9947a745a0",
        "text": "We run 90 steps, thinking of them as days in a quarter. Then reset to initial conditions and run again with new input."
      },
      "after": "75904c42720d4fd4",
      "date": 1649204997743
    },
    {
      "type": "edit",
      "id": "023ccf9947a745a0",
      "item": {
        "type": "paragraph",
        "id": "023ccf9947a745a0",
        "text": "We run 90 steps, thinking of them as days in a quarter. Then reset to initial conditions and run again."
      },
      "date": 1649205004607
    },
    {
      "id": "023ccf9947a745a0",
      "type": "move",
      "order": [
        "7cc6a28c7ef7af22",
        "db8a533f48bbd07a",
        "75904c42720d4fd4",
        "c74497cf7e195cd4",
        "023ccf9947a745a0",
        "4040f30cc5ef7bdf",
        "01b386b58f3d4071",
        "1a0110757efb6a0d"
      ],
      "date": 1649205007653
    },
    {
      "type": "edit",
      "id": "7cc6a28c7ef7af22",
      "item": {
        "type": "paragraph",
        "id": "7cc6a28c7ef7af22",
        "text": "Here we assemble [[Stock and Flow]] segments to build computational models. [https://github.com/WardCunningham/assets/blob/master/pages/mock-graph-data/flow-sim.html github]"
      },
      "date": 1649207900546
    },
    {
      "type": "edit",
      "id": "7cc6a28c7ef7af22",
      "item": {
        "type": "paragraph",
        "id": "7cc6a28c7ef7af22",
        "text": "Here we assemble [[Stock and Flow]] segments to build a computational model that we evaluate below. [https://github.com/WardCunningham/assets/blob/master/pages/mock-graph-data/flow-sim.html github]"
      },
      "date": 1649207961001
    },
    {
      "item": {
        "type": "factory",
        "id": "c2aacf47b39b2e09"
      },
      "id": "c2aacf47b39b2e09",
      "type": "add",
      "after": "1a0110757efb6a0d",
      "date": 1649342331731
    },
    {
      "type": "edit",
      "id": "c2aacf47b39b2e09",
      "item": {
        "type": "paragraph",
        "id": "c2aacf47b39b2e09",
        "text": "See [[World Modeled]] upon which we might test our own notions of modularity."
      },
      "date": 1649342409894
    },
    {
      "type": "add",
      "id": "df3f8895f9491380",
      "item": {
        "type": "paragraph",
        "id": "df3f8895f9491380",
        "text": "The Euler method is a first-order numerical procedure for solving ordinary differential equations with a given initial value."
      },
      "after": "c2aacf47b39b2e09",
      "date": 1649354283914
    },
    {
      "type": "edit",
      "id": "df3f8895f9491380",
      "item": {
        "type": "paragraph",
        "id": "df3f8895f9491380",
        "text": "The Euler method is a first-order numerical procedure for solving ordinary differential equations with a given initial value. [https://en.wikipedia.org/wiki/Euler_method wikipedia]"
      },
      "date": 1649354336199
    },
    {
      "id": "d9ca6f8bd070b144",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d9ca6f8bd070b144",
        "text": "Tom Fiddaman's model library. [https://metasd.com/model-library/ site]"
      },
      "after": "df3f8895f9491380",
      "date": 1649462382663
    },
    {
      "type": "add",
      "id": "0bb342754178c76d",
      "item": {
        "type": "paragraph",
        "id": "0bb342754178c76d",
        "text": "Comparison of system dynamics software."
      },
      "after": "d9ca6f8bd070b144",
      "date": 1649469477773
    },
    {
      "type": "edit",
      "id": "0bb342754178c76d",
      "item": {
        "type": "paragraph",
        "id": "0bb342754178c76d",
        "text": "Comparison of system dynamics software. [https://en.wikipedia.org/wiki/Comparison_of_system_dynamics_software wikipedia]"
      },
      "date": 1649469498631
    },
    {
      "id": "d9ca6f8bd070b144",
      "type": "move",
      "order": [
        "7cc6a28c7ef7af22",
        "db8a533f48bbd07a",
        "75904c42720d4fd4",
        "c74497cf7e195cd4",
        "023ccf9947a745a0",
        "4040f30cc5ef7bdf",
        "01b386b58f3d4071",
        "1a0110757efb6a0d",
        "c2aacf47b39b2e09",
        "d9ca6f8bd070b144",
        "df3f8895f9491380",
        "0bb342754178c76d"
      ],
      "date": 1649469511621
    },
    {
      "id": "0bb342754178c76d",
      "type": "move",
      "order": [
        "7cc6a28c7ef7af22",
        "db8a533f48bbd07a",
        "75904c42720d4fd4",
        "c74497cf7e195cd4",
        "023ccf9947a745a0",
        "4040f30cc5ef7bdf",
        "01b386b58f3d4071",
        "1a0110757efb6a0d",
        "c2aacf47b39b2e09",
        "d9ca6f8bd070b144",
        "0bb342754178c76d",
        "df3f8895f9491380"
      ],
      "date": 1649469516431
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1649768931716
    },
    {
      "type": "edit",
      "id": "db8a533f48bbd07a",
      "item": {
        "type": "frame",
        "id": "db8a533f48bbd07a",
        "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/composite.html\nHEIGHT 300"
      },
      "date": 1651076699442
    },
    {
      "type": "edit",
      "id": "4040f30cc5ef7bdf",
      "item": {
        "type": "frame",
        "id": "4040f30cc5ef7bdf",
        "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/flow-sim.html"
      },
      "date": 1651076718513
    }
  ]
}