{
  "title": "Dave Harris",
  "story": [
    {
      "type": "html",
      "text": "I'm UK-based,  37 years old, male programmer. Most of my practical experience is in BCPL, C and C++, but I've also used Java and Smalltalk. I admire Eiffel and the Lisps, and [[Cecil Language]].",
      "id": "332609171b17067713da02f986aa43cc"
    },
    {
      "type": "html",
      "text": "\nSee  [http://www.bhresearch.co.uk/ www.bhresearch.co.uk] for more info about me (and a free Java applet). Send email to  mailto:brangdon@cix.co.uk. My Usenet posting are From: scorp@btinternet.com.",
      "id": "71beb2e0716a4e0b98fdc4ee97361962"
    },
    {
      "type": "image",
      "url": "http://www.bhresearch.co.uk/Art/DrhFeed.jpg",
      "text": "www.bhresearch.co.uk",
      "id": "070ddf27dc367d1e6442d480d0daa721"
    },
    {
      "type": "html",
      "text": "\n",
      "id": "35165594e151c6ea3fee6e6204456e8e"
    },
    {
      "type": "html",
      "text": "\nI was one of the [[Visitors In Ninety Seven]].",
      "id": "745910a6b172d7db8e2ba144a9aae6ea"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "494dc155ad76248ba193896718024d1d"
    },
    {
      "type": "html",
      "text": "I no longer visit this Wiki very often, so I may miss comments on other pages or even on this page.",
      "id": "dd83f6f6b6731fe774d610814f78d0ba"
    },
    {
      "type": "html",
      "text": "\nThe reason is not so much the signal to noise ratio as the sheer volume. There is too much for me to keep up. Keep up with what? Conversations, I suppose. It's more complex than just blaming thread mode, though. I believe any community technology has an ideal size and the Wiki community has got too big for the way it was working a few years back.",
      "id": "e230d6b9fad9ec5a8c277ef941aae8fa"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "494dc155ad76248ba193896718024d1d"
    },
    {
      "type": "code",
      "text": " \"Weave a circle round him thrice,\n And close your eyes with holy dread,\n For he on honey dew hath fed\n And drunk the milk of Paradise.\"",
      "id": "97bead8ecab0ed54bbf1f28502c889a5"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "494dc155ad76248ba193896718024d1d"
    },
    {
      "type": "html",
      "text": "[[Category Home Page]]",
      "id": "2063f5d0fa7b257db507c3463d397774"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "494dc155ad76248ba193896718024d1d"
    },
    {
      "type": "html",
      "text": "(Archived text from [[Mis Using Multiple Inheritance]])",
      "id": "827e1af11ba087385b4f6d320e39986c"
    },
    {
      "type": "html",
      "text": "\nShape abstract class, abstract (pure virtual, for C++ folks) method bounce(), with subclasses Sphere, Cube, Pyramid.  Obviously for each one the bounce() method does something slightly different.",
      "id": "3971b78f5b2caaa50ef5eb003d1606e8"
    },
    {
      "type": "html",
      "text": "\nTexture abstract class, again, abstract method bounce(),\nwith subclasses Rubbery, Sticky, Fuzzy, again, clearly different implementations of bounce().",
      "id": "5ede5c2e40acf140d94f905aa456cd29"
    },
    {
      "type": "html",
      "text": "\nSo now I want each kind of shape with each kind of texture:",
      "id": "057bc6970cf99ca333c312b72a9f52e8"
    },
    {
      "type": "code",
      "text": " Rubbery''''''Sphere\n Sticky''''''Sphere\n Fuzzy''''''Sphere",
      "id": "4852a399363c0b0237706c4e0b109bf5"
    },
    {
      "type": "code",
      "text": " Rubbery''''''Cube\n Sticky''''''Cube\n Fuzzy''''''Cube",
      "id": "f5dd6507c4186ac2d602088ca0a75bbc"
    },
    {
      "type": "code",
      "text": " Rubbery''''''Pyramid\n Sticky''''''Pyramid\n Fuzzy''''''Pyramid",
      "id": "ae049fc900264b3a634ee69b3f833240"
    },
    {
      "type": "html",
      "text": "I'm sure you can see where this is going....",
      "id": "617185b5acb423a7f2f0dc8143f23525"
    },
    {
      "type": "html",
      "text": "-- [[Steven Newton]]",
      "id": "14d46ebda0208aae5202cb1fb250e370"
    },
    {
      "type": "html",
      "text": "\nNo, not really. You have to rename bounce along one or both paths, of course, but a decent language (eg Eiffel) will let you do that without changing either base class's source code. If this kind of thing is what's bothering you, perhaps you've never used a language with decent support for multiple inheritance? -- ",
      "id": "5716869d88b1c068a603b85cd6a8db47"
    },
    {
      "type": "html",
      "text": "\nRenaming methods is not a huge difficulty.  The problem illustrated with the design above is the rapidly growing number of classes as new shapes and textures are added to the system.  It would be better to model shapes and textures separately and relate them by association, rather than inheritance.  E.g. \"a shape <i>has</i> a texture\" instead of ",
      "id": "bb6722a8b414962dea0def789847c2b6"
    },
    {
      "type": "html",
      "text": "\"a shape <i>is</i> textured\". --",
      "id": "739120927eec68b722c25d6fa29d6ea1"
    },
    {
      "type": "html",
      "text": "\nSteven mentioned \"bounce\", and I think renaming was his point. Your point seems to be that the example is contrived, which he conceded in advance. It seems to me we could get rid of both inheritance axis and say a graphical object <i>has</i> a shape and <i>has</i> a texture. In other words, multiple inheritance is bad in the same ways that single inheritance is bad. --",
      "id": "5c9a8100c41595b7c05a77a735684961"
    },
    {
      "type": "html",
      "text": "<i>My point was that naive multiple inheritance leads to a rapidly growing number of classes (as [[Steven Newton]] also states below).  I am also </i>\nnot",
      "id": "e721330d9b07477d914fcb757b9395ed"
    },
    {
      "type": "html",
      "text": "<i> saying that multiple inheritance is bad, or misused in the same ways as single inheritance. The problem with naive uses of multiple inheritance is that inheritance is used to combine</i>\nbehaviours",
      "id": "af9bd06e6176d0e48272d6f942ecd265"
    },
    {
      "type": "html",
      "text": "<i>rather than</i>\ninterfaces.",
      "id": "77fb69974f82255bdcfa056685d89363"
    },
    {
      "type": "html",
      "text": "<i> If behaviours are combined using delegation, the problem outlined does not raise its head.</i>",
      "id": "9c8f7fa18d0d567983c5fd8e0137603e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "494dc155ad76248ba193896718024d1d"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?DaveHarris c2.com]",
      "id": "03ff03219c32c664a131220b8697a904"
    }
  ],
  "journal": [
    {
      "date": 1416437937000,
      "id": "357be2252c2dd0c6e54017481126a98e",
      "type": "create",
      "item": {
        "title": "Dave Harris",
        "story": [
          {
            "type": "html",
            "text": "I'm UK-based,  37 years old, male programmer. Most of my practical experience is in BCPL, C and C++, but I've also used Java and Smalltalk. I admire Eiffel and the Lisps, and [[Cecil Language]].",
            "id": "332609171b17067713da02f986aa43cc"
          },
          {
            "type": "html",
            "text": "\nSee  [http://www.bhresearch.co.uk/ www.bhresearch.co.uk] for more info about me (and a free Java applet). Send email to  mailto:brangdon@cix.co.uk. My Usenet posting are From: scorp@btinternet.com.",
            "id": "71beb2e0716a4e0b98fdc4ee97361962"
          },
          {
            "type": "image",
            "url": "http://www.bhresearch.co.uk/Art/DrhFeed.jpg",
            "text": "www.bhresearch.co.uk",
            "id": "070ddf27dc367d1e6442d480d0daa721"
          },
          {
            "type": "html",
            "text": "\n",
            "id": "35165594e151c6ea3fee6e6204456e8e"
          },
          {
            "type": "html",
            "text": "\nI was one of the [[Visitors In Ninety Seven]].",
            "id": "745910a6b172d7db8e2ba144a9aae6ea"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "494dc155ad76248ba193896718024d1d"
          },
          {
            "type": "html",
            "text": "I no longer visit this Wiki very often, so I may miss comments on other pages or even on this page.",
            "id": "dd83f6f6b6731fe774d610814f78d0ba"
          },
          {
            "type": "html",
            "text": "\nThe reason is not so much the signal to noise ratio as the sheer volume. There is too much for me to keep up. Keep up with what? Conversations, I suppose. It's more complex than just blaming thread mode, though. I believe any community technology has an ideal size and the Wiki community has got too big for the way it was working a few years back.",
            "id": "e230d6b9fad9ec5a8c277ef941aae8fa"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "494dc155ad76248ba193896718024d1d"
          },
          {
            "type": "code",
            "text": " \"Weave a circle round him thrice,\n And close your eyes with holy dread,\n For he on honey dew hath fed\n And drunk the milk of Paradise.\"",
            "id": "97bead8ecab0ed54bbf1f28502c889a5"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "494dc155ad76248ba193896718024d1d"
          },
          {
            "type": "html",
            "text": "[[Category Home Page]]",
            "id": "2063f5d0fa7b257db507c3463d397774"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "494dc155ad76248ba193896718024d1d"
          },
          {
            "type": "html",
            "text": "(Archived text from [[Mis Using Multiple Inheritance]])",
            "id": "827e1af11ba087385b4f6d320e39986c"
          },
          {
            "type": "html",
            "text": "\nShape abstract class, abstract (pure virtual, for C++ folks) method bounce(), with subclasses Sphere, Cube, Pyramid.  Obviously for each one the bounce() method does something slightly different.",
            "id": "3971b78f5b2caaa50ef5eb003d1606e8"
          },
          {
            "type": "html",
            "text": "\nTexture abstract class, again, abstract method bounce(),\nwith subclasses Rubbery, Sticky, Fuzzy, again, clearly different implementations of bounce().",
            "id": "5ede5c2e40acf140d94f905aa456cd29"
          },
          {
            "type": "html",
            "text": "\nSo now I want each kind of shape with each kind of texture:",
            "id": "057bc6970cf99ca333c312b72a9f52e8"
          },
          {
            "type": "code",
            "text": " Rubbery''''''Sphere\n Sticky''''''Sphere\n Fuzzy''''''Sphere",
            "id": "4852a399363c0b0237706c4e0b109bf5"
          },
          {
            "type": "code",
            "text": " Rubbery''''''Cube\n Sticky''''''Cube\n Fuzzy''''''Cube",
            "id": "f5dd6507c4186ac2d602088ca0a75bbc"
          },
          {
            "type": "code",
            "text": " Rubbery''''''Pyramid\n Sticky''''''Pyramid\n Fuzzy''''''Pyramid",
            "id": "ae049fc900264b3a634ee69b3f833240"
          },
          {
            "type": "html",
            "text": "I'm sure you can see where this is going....",
            "id": "617185b5acb423a7f2f0dc8143f23525"
          },
          {
            "type": "html",
            "text": "-- [[Steven Newton]]",
            "id": "14d46ebda0208aae5202cb1fb250e370"
          },
          {
            "type": "html",
            "text": "\nNo, not really. You have to rename bounce along one or both paths, of course, but a decent language (eg Eiffel) will let you do that without changing either base class's source code. If this kind of thing is what's bothering you, perhaps you've never used a language with decent support for multiple inheritance? -- ",
            "id": "5716869d88b1c068a603b85cd6a8db47"
          },
          {
            "type": "html",
            "text": "\nRenaming methods is not a huge difficulty.  The problem illustrated with the design above is the rapidly growing number of classes as new shapes and textures are added to the system.  It would be better to model shapes and textures separately and relate them by association, rather than inheritance.  E.g. \"a shape <i>has</i> a texture\" instead of ",
            "id": "bb6722a8b414962dea0def789847c2b6"
          },
          {
            "type": "html",
            "text": "\"a shape <i>is</i> textured\". --",
            "id": "739120927eec68b722c25d6fa29d6ea1"
          },
          {
            "type": "html",
            "text": "\nSteven mentioned \"bounce\", and I think renaming was his point. Your point seems to be that the example is contrived, which he conceded in advance. It seems to me we could get rid of both inheritance axis and say a graphical object <i>has</i> a shape and <i>has</i> a texture. In other words, multiple inheritance is bad in the same ways that single inheritance is bad. --",
            "id": "5c9a8100c41595b7c05a77a735684961"
          },
          {
            "type": "html",
            "text": "<i>My point was that naive multiple inheritance leads to a rapidly growing number of classes (as [[Steven Newton]] also states below).  I am also </i>\nnot",
            "id": "e721330d9b07477d914fcb757b9395ed"
          },
          {
            "type": "html",
            "text": "<i> saying that multiple inheritance is bad, or misused in the same ways as single inheritance. The problem with naive uses of multiple inheritance is that inheritance is used to combine</i>\nbehaviours",
            "id": "af9bd06e6176d0e48272d6f942ecd265"
          },
          {
            "type": "html",
            "text": "<i>rather than</i>\ninterfaces.",
            "id": "77fb69974f82255bdcfa056685d89363"
          },
          {
            "type": "html",
            "text": "<i> If behaviours are combined using delegation, the problem outlined does not raise its head.</i>",
            "id": "9c8f7fa18d0d567983c5fd8e0137603e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "494dc155ad76248ba193896718024d1d"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?DaveHarris c2.com]",
            "id": "03ff03219c32c664a131220b8697a904"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1626998244635
    }
  ]
}