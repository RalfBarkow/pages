{
  "title": "Cubemap",
  "story": [
    {
      "type": "paragraph",
      "id": "5af9164a658efe82",
      "text": "In computer graphics, cube mapping is a method of environment mapping that uses the six faces of a cube as the map shape. The environment is projected onto the sides of a cube and stored as six square textures, or unfolded into six regions of a single texture. The cube map is generated by first rendering the scene six times from a viewpoint, with the views defined by a 90 degree view frustum representing each cube face. [https://en.wikipedia.org/wiki/Cube_mapping wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "8546ecf707d579fb",
      "text": "Dynamic reflection"
    },
    {
      "type": "paragraph",
      "id": "32d470cb0f383cae",
      "text": "Basic environment mapping uses a static cube map - although the object can be moved and distorted, the reflected environment stays consistent. However, a cube map texture can be consistently updated to represent a dynamically changing environment (for example, trees swaying in the wind). A simple yet costly way to generate dynamic reflections, involves building the cube maps at runtime for every frame. Although this is far less efficient than static mapping because of additional rendering steps, it can still be performed at interactive rates.\n\n"
    },
    {
      "type": "paragraph",
      "id": "737ee106fa44a221",
      "text": "Unfortunately, this technique does not scale well when multiple reflective objects are present. A unique dynamic environment map is usually required for each reflective object. Also, further complications are added if reflective objects can reflect each other - dynamic cube maps can be recursively generated approximating the effects normally generated using raytracing. "
    },
    {
      "type": "html",
      "id": "8d094a8e466d16f0",
      "text": "<img\n  src=\"https://learnopengl.com/img/advanced/cubemaps_sampling.png\"\n  width=\"100%\"\n>"
    },
    {
      "type": "paragraph",
      "id": "e8402a3c6129ca59",
      "text": "Dynamic environment mapping in OpenGL [https://gamedev.stackexchange.com/questions/148666/dynamic-environment-mapping-in-opengl stackexchange], [https://learnopengl.com/Advanced-OpenGL/Cubemaps page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Cubemap",
        "story": []
      },
      "date": 1675823695769
    },
    {
      "item": {
        "type": "factory",
        "id": "5af9164a658efe82"
      },
      "id": "5af9164a658efe82",
      "type": "add",
      "date": 1675824244198
    },
    {
      "type": "edit",
      "id": "5af9164a658efe82",
      "item": {
        "type": "paragraph",
        "id": "5af9164a658efe82",
        "text": "In computer graphics, cube mapping is a method of environment mapping that uses the six faces of a cube as the map shape. The environment is projected onto the sides of a cube and stored as six square textures, or unfolded into six regions of a single texture. The cube map is generated by first rendering the scene six times from a viewpoint, with the views defined by a 90 degree view frustum representing each cube face."
      },
      "date": 1675824245734
    },
    {
      "type": "edit",
      "id": "5af9164a658efe82",
      "item": {
        "type": "paragraph",
        "id": "5af9164a658efe82",
        "text": "In computer graphics, cube mapping is a method of environment mapping that uses the six faces of a cube as the map shape. The environment is projected onto the sides of a cube and stored as six square textures, or unfolded into six regions of a single texture. The cube map is generated by first rendering the scene six times from a viewpoint, with the views defined by a 90 degree view frustum representing each cube face. [https://en.wikipedia.org/wiki/Cube_mapping wikipedia]"
      },
      "date": 1675824278088
    },
    {
      "item": {
        "type": "factory",
        "id": "8546ecf707d579fb"
      },
      "id": "8546ecf707d579fb",
      "type": "add",
      "after": "5af9164a658efe82",
      "date": 1675824348416
    },
    {
      "type": "edit",
      "id": "8546ecf707d579fb",
      "item": {
        "type": "paragraph",
        "id": "8546ecf707d579fb",
        "text": "Dynamic reflection\nCube-mapped reflections in action\n\nBasic environment mapping uses a static cube map - although the object can be moved and distorted, the reflected environment stays consistent. However, a cube map texture can be consistently updated to represent a dynamically changing environment (for example, trees swaying in the wind). A simple yet costly way to generate dynamic reflections, involves building the cube maps at runtime for every frame. Although this is far less efficient than static mapping because of additional rendering steps, it can still be performed at interactive rates.\n\nUnfortunately, this technique does not scale well when multiple reflective objects are present. A unique dynamic environment map is usually required for each reflective object. Also, further complications are added if reflective objects can reflect each other - dynamic cube maps can be recursively generated approximating the effects normally generated using raytracing. "
      },
      "date": 1675824357200
    },
    {
      "type": "edit",
      "id": "8546ecf707d579fb",
      "item": {
        "type": "paragraph",
        "id": "8546ecf707d579fb",
        "text": "Dynamic reflection"
      },
      "date": 1675824369945
    },
    {
      "type": "add",
      "id": "32d470cb0f383cae",
      "item": {
        "type": "paragraph",
        "id": "32d470cb0f383cae",
        "text": "Basic environment mapping uses a static cube map - although the object can be moved and distorted, the reflected environment stays consistent. However, a cube map texture can be consistently updated to represent a dynamically changing environment (for example, trees swaying in the wind). A simple yet costly way to generate dynamic reflections, involves building the cube maps at runtime for every frame. Although this is far less efficient than static mapping because of additional rendering steps, it can still be performed at interactive rates.\n\nUnfortunately, this technique does not scale well when multiple reflective objects are present. A unique dynamic environment map is usually required for each reflective object. Also, further complications are added if reflective objects can reflect each other - dynamic cube maps can be recursively generated approximating the effects normally generated using raytracing. "
      },
      "after": "8546ecf707d579fb",
      "date": 1675824371654
    },
    {
      "type": "edit",
      "id": "32d470cb0f383cae",
      "item": {
        "type": "paragraph",
        "id": "32d470cb0f383cae",
        "text": "Basic environment mapping uses a static cube map - although the object can be moved and distorted, the reflected environment stays consistent. However, a cube map texture can be consistently updated to represent a dynamically changing environment (for example, trees swaying in the wind). A simple yet costly way to generate dynamic reflections, involves building the cube maps at runtime for every frame. Although this is far less efficient than static mapping because of additional rendering steps, it can still be performed at interactive rates.\n\n"
      },
      "date": 1675824690812
    },
    {
      "type": "add",
      "id": "737ee106fa44a221",
      "item": {
        "type": "paragraph",
        "id": "737ee106fa44a221",
        "text": "Unfortunately, this technique does not scale well when multiple reflective objects are present. A unique dynamic environment map is usually required for each reflective object. Also, further complications are added if reflective objects can reflect each other - dynamic cube maps can be recursively generated approximating the effects normally generated using raytracing. "
      },
      "after": "32d470cb0f383cae",
      "date": 1675824697485
    },
    {
      "item": {
        "type": "factory",
        "id": "e8402a3c6129ca59"
      },
      "id": "e8402a3c6129ca59",
      "type": "add",
      "after": "737ee106fa44a221",
      "date": 1675825339393
    },
    {
      "type": "edit",
      "id": "e8402a3c6129ca59",
      "item": {
        "type": "paragraph",
        "id": "e8402a3c6129ca59",
        "text": "Dynamic environment mapping in OpenGL"
      },
      "date": 1675825343247
    },
    {
      "type": "edit",
      "id": "e8402a3c6129ca59",
      "item": {
        "type": "paragraph",
        "id": "e8402a3c6129ca59",
        "text": "Dynamic environment mapping in OpenGL [https://gamedev.stackexchange.com/questions/148666/dynamic-environment-mapping-in-opengl stackexchange]"
      },
      "date": 1675825356313
    },
    {
      "type": "edit",
      "id": "e8402a3c6129ca59",
      "item": {
        "type": "paragraph",
        "id": "e8402a3c6129ca59",
        "text": "Dynamic environment mapping in OpenGL [https://gamedev.stackexchange.com/questions/148666/dynamic-environment-mapping-in-opengl stackexchange], [https://learnopengl.com/Advanced-OpenGL/Cubemaps page]"
      },
      "date": 1675825390728
    },
    {
      "item": {
        "type": "factory",
        "id": "8d094a8e466d16f0"
      },
      "id": "8d094a8e466d16f0",
      "type": "add",
      "after": "e8402a3c6129ca59",
      "date": 1675825398718
    },
    {
      "type": "edit",
      "id": "8d094a8e466d16f0",
      "item": {
        "type": "html",
        "id": "8d094a8e466d16f0",
        "text": "<img\n  src=\"https://learnopengl.com/img/advanced/cubemaps_sampling.png\"\n  width=\"100%\"\n>"
      },
      "date": 1675825416464
    },
    {
      "id": "8d094a8e466d16f0",
      "type": "move",
      "order": [
        "5af9164a658efe82",
        "8546ecf707d579fb",
        "32d470cb0f383cae",
        "737ee106fa44a221",
        "8d094a8e466d16f0",
        "e8402a3c6129ca59"
      ],
      "date": 1675825421196
    }
  ]
}