{
  "title": "Federated Wiki : Social Security Plugin",
  "story": [
    {
      "type": "paragraph",
      "id": "eb25b6fc35cf54dc",
      "text": "GET /security/security.js"
    },
    {
      "type": "image",
      "id": "01ae7dbcaaa2d21f",
      "text": "Federated Wiki : Social Security Plugin",
      "size": "wide",
      "width": 419,
      "height": 262,
      "url": "/assets/plugins/image/77e23110a56dcd93005eec9cf1cab269.jpg"
    },
    {
      "type": "paragraph",
      "id": "d74558ab13836385",
      "text": "The entire code is wrapped in an [[IIFE]]. This is a common pattern in JavaScript to create a private scope for variables, preventing them from polluting the global scope."
    },
    {
      "type": "markdown",
      "id": "aca80cd654de9cfb",
      "text": "# Function Definitions\n\n#### `update_footer(ownerName, isAuthenticated)`\n\nThis function updates the footer of the Federated Wiki page based on the owner's name and authentication state.\n\n- If `ownerName` is provided, it updates the site owner in the footer.\n- It dynamically changes the content of the footer based on whether the user is authenticated or not.\n- It includes login and logout buttons with appropriate event listeners.\n- It fetches data from the server using the Fetch API to handle login and logout operations.\n\n#### `setup(user)`\n\nThis function initializes the security plugin. It sets up stylesheets if they are not already loaded, creates a reclaim dialog, and updates the footer based on the provided user information.\n"
    },
    {
      "type": "markdown",
      "id": "c32d5b5f6a1b5446",
      "text": "# Dialog Creation\n\nThe code dynamically creates a dialog element (`reclaimDialog`) for [[reclaim]]ing a wiki."
    },
    {
      "type": "markdown",
      "id": "f56eee58a43acf43",
      "text": "#  Event Listeners\n\nThe code attaches event listeners to various elements within the dialogs, such as the reclaim dialog and its buttons."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Federated Wiki : Social Security Plugin",
        "story": []
      },
      "date": 1700392352629
    },
    {
      "id": "01ae7dbcaaa2d21f",
      "type": "add",
      "item": {
        "type": "image",
        "id": "01ae7dbcaaa2d21f",
        "text": "Federated Wiki : Social Security Plugin",
        "size": "wide",
        "width": 419,
        "height": 262,
        "url": "/assets/plugins/image/77e23110a56dcd93005eec9cf1cab269.jpg"
      },
      "attribution": {
        "page": "2023-11-19"
      },
      "date": 1700392355986
    },
    {
      "item": {
        "type": "factory",
        "id": "eb25b6fc35cf54dc"
      },
      "id": "eb25b6fc35cf54dc",
      "type": "add",
      "after": "01ae7dbcaaa2d21f",
      "date": 1700393132912
    },
    {
      "id": "eb25b6fc35cf54dc",
      "type": "move",
      "order": [
        "eb25b6fc35cf54dc",
        "01ae7dbcaaa2d21f"
      ],
      "date": 1700393137871
    },
    {
      "item": {
        "type": "factory",
        "id": "d74558ab13836385"
      },
      "id": "d74558ab13836385",
      "type": "add",
      "after": "01ae7dbcaaa2d21f",
      "date": 1700393158641
    },
    {
      "type": "edit",
      "id": "d74558ab13836385",
      "item": {
        "type": "paragraph",
        "id": "d74558ab13836385",
        "text": "â‡’ [[IIFE]]"
      },
      "date": 1700393166725
    },
    {
      "item": {
        "type": "factory",
        "id": "aca80cd654de9cfb"
      },
      "id": "aca80cd654de9cfb",
      "type": "add",
      "after": "d74558ab13836385",
      "date": 1700393338856
    },
    {
      "type": "edit",
      "id": "aca80cd654de9cfb",
      "item": {
        "type": "markdown",
        "id": "aca80cd654de9cfb",
        "text": "Function Definitions\n\n#### `update_footer(ownerName, isAuthenticated)`\n\nThis function updates the footer of the Federated Wiki page based on the owner's name and authentication state.\n\n- If `ownerName` is provided, it updates the site owner in the footer.\n- It dynamically changes the content of the footer based on whether the user is authenticated or not.\n- It includes login and logout buttons with appropriate event listeners.\n- It fetches data from the server using the Fetch API to handle login and logout operations.\n\n#### `setup(user)`\n\nThis function initializes the security plugin. It sets up stylesheets if they are not already loaded, creates a reclaim dialog, and updates the footer based on the provided user information.\n"
      },
      "date": 1700393344336
    },
    {
      "type": "edit",
      "id": "aca80cd654de9cfb",
      "item": {
        "type": "markdown",
        "id": "aca80cd654de9cfb",
        "text": "# Function Definitions\n\n#### `update_footer(ownerName, isAuthenticated)`\n\nThis function updates the footer of the Federated Wiki page based on the owner's name and authentication state.\n\n- If `ownerName` is provided, it updates the site owner in the footer.\n- It dynamically changes the content of the footer based on whether the user is authenticated or not.\n- It includes login and logout buttons with appropriate event listeners.\n- It fetches data from the server using the Fetch API to handle login and logout operations.\n\n#### `setup(user)`\n\nThis function initializes the security plugin. It sets up stylesheets if they are not already loaded, creates a reclaim dialog, and updates the footer based on the provided user information.\n"
      },
      "date": 1700393389035
    },
    {
      "item": {
        "type": "factory",
        "id": "c32d5b5f6a1b5446"
      },
      "id": "c32d5b5f6a1b5446",
      "type": "add",
      "after": "aca80cd654de9cfb",
      "date": 1700393453296
    },
    {
      "type": "edit",
      "id": "c32d5b5f6a1b5446",
      "item": {
        "type": "markdown",
        "id": "c32d5b5f6a1b5446",
        "text": "# Dialog Creation\n\nThe code dynamically creates a dialog element (`reclaimDialog`) for reclaiming a wiki."
      },
      "date": 1700393459698
    },
    {
      "type": "edit",
      "id": "c32d5b5f6a1b5446",
      "item": {
        "type": "markdown",
        "id": "c32d5b5f6a1b5446",
        "text": "# Dialog Creation\n\nThe code dynamically creates a dialog element (`reclaimDialog`) for [[reclaim]]ing a wiki."
      },
      "date": 1700393484220
    },
    {
      "type": "edit",
      "id": "d74558ab13836385",
      "item": {
        "type": "paragraph",
        "id": "d74558ab13836385",
        "text": "The entire code is wrapped in an [[IIFE]]. This is a common pattern in JavaScript to create a private scope for variables, preventing them from polluting the global scope."
      },
      "date": 1700393536392
    },
    {
      "item": {
        "type": "factory",
        "id": "f56eee58a43acf43"
      },
      "id": "f56eee58a43acf43",
      "type": "add",
      "after": "c32d5b5f6a1b5446",
      "date": 1700393646390
    },
    {
      "type": "edit",
      "id": "f56eee58a43acf43",
      "item": {
        "type": "markdown",
        "id": "f56eee58a43acf43",
        "text": "#  Event Listeners\n\nThe code attaches event listeners to various elements within the dialogs, such as the reclaim dialog and its buttons."
      },
      "date": 1700393650698
    },
    {
      "type": "edit",
      "id": "eb25b6fc35cf54dc",
      "item": {
        "type": "paragraph",
        "id": "eb25b6fc35cf54dc",
        "text": "GET /security/security.js"
      },
      "date": 1700394106148
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1700544675950
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1700547630854
    }
  ]
}