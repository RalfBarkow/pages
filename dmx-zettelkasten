{
  "title": "dmx-zettelkasten",
  "story": [
    {
      "type": "paragraph",
      "id": "87e7be242996395d",
      "text": "The plugin’s source code demonstrates a couple of crucial [[DMX]] plugin concepts: [https://github.com/RalfBarkow/dmx-zettelkasten?tab=readme-ov-file#what-the-zettelkasten-plugin-does github]"
    },
    {
      "type": "markdown",
      "id": "e9280a9ae516b3c1",
      "text": "* Mounting [[Vue.js]] components into the [[DMX Webclient]]\n\n* Registering a Vuex store module for managing the plugin’s state\n\n* Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n* Dispatching Webclient actions (e.g. revealTopic)"
    },
    {
      "type": "image",
      "id": "26307d172a5ee71a",
      "text": "Plugin and Topic Type \"Zettel\"",
      "size": "wide",
      "width": 418,
      "height": 253,
      "url": "/assets/plugins/image/5a8850754ada88d73410f4788ed6a7dc.jpg"
    },
    {
      "type": "paragraph",
      "id": "982e155944f97c26",
      "text": "Every DMX plugin which extends the standard Webclient has a src/main/js/plugin.js file. The plugin.js file declares the various assets your plugin provides (e.g. Vue.js components, Vuex store module). Start your inspection there."
    },
    {
      "type": "code",
      "id": "b8aa0ef239f27de7",
      "text": "// Every DMX plugin which extends the DMX Webclient has a `src/main/js/plugin.js` file.\n// This file exports a DMX plugin configuration object or a function which returns such an object.\n// The function receives a \"dependencies\" object with 4 properties: 'store', 'dm5', 'axios', and 'Vue'.\n// 'store' is the DMX Webclient's Vuex store object.\nexport default ({store, dmx, axios, Vue}) => ({\n\n  // A DMX plugin can provide its own Vuex store module.\n  // This plugin's state is accessible as 'store.state.greeting' (according to the 'name' property).\n  storeModule: {\n    name: 'greeting',\n    module: require('./greeting').default\n  },\n\n  // A DMX plugin can statically add Vue components to the DMX Webclient.\n  // 3 mount points are supported: 'webclient', 'toolbar-left', and 'toolbar-right'\n  components: [{\n    comp: require('./components/Greeting').default,\n    mount: 'toolbar-left'\n  }]\n\n  // A DMX plugin can do more things at the client-side (not demonstrated here):\n  // - declare Vuex store watchers\n  // - provide type-specific detail renderers\n  // - provide additional topicmap types and renderers\n  // - add special items to the Webclient's Create menu\n\n  // Learn more about DMX plugin development with the DMX Developer Guide:\n  // https://dmx.readthedocs.io/en/latest/devel.html\n})\n"
    },
    {
      "type": "paragraph",
      "id": "6b23e5bbbee75fe0",
      "text": "During development, the result of any change you make is immediately visible in the browser thanks to Hot Module Replacement."
    },
    {
      "type": "paragraph",
      "id": "3988ac2ebaf77398",
      "text": "BTW:"
    },
    {
      "type": "markdown",
      "id": "8cf926c5a99d78a9",
      "text": "> DMX-Zettelkasten is an intriguing concept, blending the methodology of a Zettelkasten system with the ideas of the late rapper DMX. (ChatGPT 3.5)"
    },
    {
      "type": "paragraph",
      "id": "97938e3d57153102",
      "text": "Note: ChatGPT can make mistakes. Consider checking important information."
    },
    {
      "type": "paragraph",
      "id": "5825f437d7a3c342",
      "text": "See the rapper DMX [https://en.wikipedia.org/wiki/DMX wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "99da1245656e67f9",
      "text": "See [[dmx-platform]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "dmx-zettelkasten",
        "story": []
      },
      "date": 1712900596548
    },
    {
      "id": "87e7be242996395d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "87e7be242996395d",
        "text": " the plugin’s source code demonstrates a couple of crucial plugin concepts:\n\n    Mounting Vue.js components into the DMX Webclient\n\n    Registering a Vuex store module for managing the plugin’s state\n\n    Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n    Dispatching Webclient actions (e.g. revealTopic)\n\n"
      },
      "attribution": {
        "page": "2024-04-12"
      },
      "date": 1712900602055
    },
    {
      "type": "edit",
      "id": "87e7be242996395d",
      "item": {
        "type": "paragraph",
        "id": "87e7be242996395d",
        "text": " the plugin’s source code demonstrates a couple of crucial plugin concepts: [https://github.com/RalfBarkow/dmx-zettelkasten?tab=readme-ov-file#what-the-zettelkasten-plugin-does github]\n\n    Mounting Vue.js components into the DMX Webclient\n\n    Registering a Vuex store module for managing the plugin’s state\n\n    Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n    Dispatching Webclient actions (e.g. revealTopic)\n\n"
      },
      "date": 1712900643075
    },
    {
      "type": "edit",
      "id": "87e7be242996395d",
      "item": {
        "type": "paragraph",
        "id": "87e7be242996395d",
        "text": "The plugin’s source code demonstrates a couple of crucial plugin concepts: [https://github.com/RalfBarkow/dmx-zettelkasten?tab=readme-ov-file#what-the-zettelkasten-plugin-does github]\n\n    Mounting Vue.js components into the DMX Webclient\n\n    Registering a Vuex store module for managing the plugin’s state\n\n    Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n    Dispatching Webclient actions (e.g. revealTopic)\n\n"
      },
      "date": 1712900665530
    },
    {
      "type": "edit",
      "id": "87e7be242996395d",
      "item": {
        "type": "paragraph",
        "id": "87e7be242996395d",
        "text": "The plugin’s source code demonstrates a couple of crucial plugin concepts: [https://github.com/RalfBarkow/dmx-zettelkasten?tab=readme-ov-file#what-the-zettelkasten-plugin-does github]"
      },
      "date": 1712900691584
    },
    {
      "type": "add",
      "id": "e9280a9ae516b3c1",
      "item": {
        "type": "paragraph",
        "id": "e9280a9ae516b3c1",
        "text": "* Mounting Vue.js components into the DMX Webclient\n\n* Registering a Vuex store module for managing the plugin’s state\n\n* Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n* Dispatching Webclient actions (e.g. revealTopic)"
      },
      "after": "87e7be242996395d",
      "date": 1712900723567
    },
    {
      "type": "edit",
      "id": "e9280a9ae516b3c1",
      "item": {
        "type": "markdown",
        "id": "e9280a9ae516b3c1",
        "text": "* Mounting Vue.js components into the DMX Webclient\n\n* Registering a Vuex store module for managing the plugin’s state\n\n* Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n* Dispatching Webclient actions (e.g. revealTopic)"
      },
      "date": 1712900725062
    },
    {
      "type": "edit",
      "id": "87e7be242996395d",
      "item": {
        "type": "paragraph",
        "id": "87e7be242996395d",
        "text": "The plugin’s source code demonstrates a couple of crucial [[DMX]] plugin concepts: [https://github.com/RalfBarkow/dmx-zettelkasten?tab=readme-ov-file#what-the-zettelkasten-plugin-does github]"
      },
      "date": 1712900776150
    },
    {
      "type": "edit",
      "id": "e9280a9ae516b3c1",
      "item": {
        "type": "markdown",
        "id": "e9280a9ae516b3c1",
        "text": "* Mounting [[Vue.js]] components into the [[DMX Webclient]]\n\n* Registering a Vuex store module for managing the plugin’s state\n\n* Injecting Webclient dependencies (e.g. dmx-api) into components and store module\n\n* Dispatching Webclient actions (e.g. revealTopic)"
      },
      "date": 1712900798693
    },
    {
      "item": {
        "type": "factory",
        "id": "982e155944f97c26"
      },
      "id": "982e155944f97c26",
      "type": "add",
      "after": "e9280a9ae516b3c1",
      "date": 1712900877664
    },
    {
      "type": "edit",
      "id": "982e155944f97c26",
      "item": {
        "type": "paragraph",
        "id": "982e155944f97c26",
        "text": "Every DMX plugin which extends the standard Webclient has a src/main/js/plugin.js file. The plugin.js file declares the various assets your plugin provides (e.g. Vue.js components, Vuex store module). Start your inspection there.\n\nDuring development, the result of any change you make is immediately visible in the browser thanks to Hot Module Replacement.\n"
      },
      "date": 1712900879766
    },
    {
      "item": {
        "type": "factory",
        "id": "b8aa0ef239f27de7"
      },
      "id": "b8aa0ef239f27de7",
      "type": "add",
      "after": "982e155944f97c26",
      "date": 1712900910224
    },
    {
      "type": "edit",
      "id": "b8aa0ef239f27de7",
      "item": {
        "type": "code",
        "id": "b8aa0ef239f27de7",
        "text": "// Every DMX plugin which extends the DMX Webclient has a `src/main/js/plugin.js` file.\n// This file exports a DMX plugin configuration object or a function which returns such an object.\n// The function receives a \"dependencies\" object with 4 properties: 'store', 'dm5', 'axios', and 'Vue'.\n// 'store' is the DMX Webclient's Vuex store object.\nexport default ({store, dmx, axios, Vue}) => ({\n\n  // A DMX plugin can provide its own Vuex store module.\n  // This plugin's state is accessible as 'store.state.greeting' (according to the 'name' property).\n  storeModule: {\n    name: 'greeting',\n    module: require('./greeting').default\n  },\n\n  // A DMX plugin can statically add Vue components to the DMX Webclient.\n  // 3 mount points are supported: 'webclient', 'toolbar-left', and 'toolbar-right'\n  components: [{\n    comp: require('./components/Greeting').default,\n    mount: 'toolbar-left'\n  }]\n\n  // A DMX plugin can do more things at the client-side (not demonstrated here):\n  // - declare Vuex store watchers\n  // - provide type-specific detail renderers\n  // - provide additional topicmap types and renderers\n  // - add special items to the Webclient's Create menu\n\n  // Learn more about DMX plugin development with the DMX Developer Guide:\n  // https://dmx.readthedocs.io/en/latest/devel.html\n})\n"
      },
      "date": 1712900912637
    },
    {
      "type": "edit",
      "id": "982e155944f97c26",
      "item": {
        "type": "paragraph",
        "id": "982e155944f97c26",
        "text": "Every DMX plugin which extends the standard Webclient has a src/main/js/plugin.js file. The plugin.js file declares the various assets your plugin provides (e.g. Vue.js components, Vuex store module). Start your inspection there."
      },
      "date": 1712900930542
    },
    {
      "type": "add",
      "id": "6b23e5bbbee75fe0",
      "item": {
        "type": "paragraph",
        "id": "6b23e5bbbee75fe0",
        "text": "During development, the result of any change you make is immediately visible in the browser thanks to Hot Module Replacement."
      },
      "after": "982e155944f97c26",
      "date": 1712900933347
    },
    {
      "id": "b8aa0ef239f27de7",
      "type": "move",
      "order": [
        "87e7be242996395d",
        "e9280a9ae516b3c1",
        "982e155944f97c26",
        "b8aa0ef239f27de7",
        "6b23e5bbbee75fe0"
      ],
      "date": 1712900935739
    },
    {
      "item": {
        "type": "factory",
        "id": "3988ac2ebaf77398"
      },
      "id": "3988ac2ebaf77398",
      "type": "add",
      "after": "6b23e5bbbee75fe0",
      "date": 1712901053960
    },
    {
      "type": "edit",
      "id": "3988ac2ebaf77398",
      "item": {
        "type": "paragraph",
        "id": "3988ac2ebaf77398",
        "text": "BTW:"
      },
      "date": 1712901059938
    },
    {
      "type": "add",
      "id": "8cf926c5a99d78a9",
      "item": {
        "type": "paragraph",
        "id": "8cf926c5a99d78a9",
        "text": "> DMX-Zettelkasten is an intriguing concept, blending the methodology of a Zettelkasten system with the ideas of the late rapper DMX. (ChatGPT 3.5)"
      },
      "after": "3988ac2ebaf77398",
      "date": 1712901081108
    },
    {
      "type": "edit",
      "id": "8cf926c5a99d78a9",
      "item": {
        "type": "markdown",
        "id": "8cf926c5a99d78a9",
        "text": "> DMX-Zettelkasten is an intriguing concept, blending the methodology of a Zettelkasten system with the ideas of the late rapper DMX. (ChatGPT 3.5)"
      },
      "date": 1712901082333
    },
    {
      "item": {
        "type": "factory",
        "id": "97938e3d57153102"
      },
      "id": "97938e3d57153102",
      "type": "add",
      "after": "8cf926c5a99d78a9",
      "date": 1712901115308
    },
    {
      "type": "edit",
      "id": "97938e3d57153102",
      "item": {
        "type": "paragraph",
        "id": "97938e3d57153102",
        "text": "Note: ChatGPT can make mistakes. Consider checking important information."
      },
      "date": 1712901121661
    },
    {
      "type": "add",
      "id": "5825f437d7a3c342",
      "item": {
        "type": "paragraph",
        "id": "5825f437d7a3c342",
        "text": "See the rapper DMX [https://en.wikipedia.org/wiki/DMX wikipedia]"
      },
      "after": "97938e3d57153102",
      "date": 1712901233549
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1712913331756
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713021451751
    },
    {
      "id": "26307d172a5ee71a",
      "type": "add",
      "item": {
        "type": "image",
        "id": "26307d172a5ee71a",
        "text": "Plugin and Topic Type \"Zettel\"",
        "size": "wide",
        "width": 418,
        "height": 253,
        "url": "/assets/plugins/image/5a8850754ada88d73410f4788ed6a7dc.jpg"
      },
      "after": "e9280a9ae516b3c1",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713021464232
    },
    {
      "item": {
        "type": "factory",
        "id": "20dab683b400eb3c"
      },
      "id": "20dab683b400eb3c",
      "type": "add",
      "after": "5825f437d7a3c342",
      "date": 1713025289328
    },
    {
      "type": "edit",
      "id": "20dab683b400eb3c",
      "item": {
        "type": "paragraph",
        "id": "20dab683b400eb3c",
        "text": "See"
      },
      "date": 1713025292088
    },
    {
      "type": "remove",
      "id": "20dab683b400eb3c",
      "date": 1713025300538
    },
    {
      "type": "add",
      "id": "99da1245656e67f9",
      "item": {
        "type": "paragraph",
        "id": "99da1245656e67f9",
        "text": "See [[dmx-platform]]"
      },
      "after": "5825f437d7a3c342",
      "date": 1713025311398
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713037861895
    }
  ]
}