{
  "title": "Channel Messaging and BroadcastChannel APIs",
  "story": [
    {
      "type": "paragraph",
      "id": "fc7412a568f53c3c",
      "text": "The [[Channel Messaging API]] and the BroadcastChannel API are two ways to communicate between window contexts and Workers. [https://webplatformcourse.com/bonus/messaging/ page]"
    },
    {
      "type": "paragraph",
      "id": "79618cb6d206ffe8",
      "text": "This page began as an attempt to reconstruct that lesson by [[Flavio Copes]]. See the index.html file in the assets folder below."
    },
    {
      "type": "paragraph",
      "id": "6a8a756307a52118",
      "text": "See also the Channel messaging demo within the \"Code examples that accompany various MDN DOM and Web API documentation pages\" [https://github.com/mdn/dom-examples/tree/main?tab=readme-ov-file github] â‡’ [[Channel Messaging Basic]]"
    },
    {
      "type": "code",
      "id": "13ff8c7ec153d63e",
      "text": "const channel = new MessageChannel();"
    },
    {
      "type": "code",
      "id": "c4dfa4c8d98731dd",
      "text": "const iframe = document.querySelector('iframe');\n\nwindow.addEventListener('load', () => {\n\t\t\t\twindow.contentWindow.postMessage('Hey', '*', [channel.port2]);\n\t\t\t});"
    },
    {
      "type": "code",
      "id": "399cc3aeb4c6348e",
      "text": "channel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
    },
    {
      "type": "paragraph",
      "id": "313907154e6512d9",
      "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <p id=\"display\">I am the display paragraph.</p>\n</body>`;\nconst display = document.getElementById(\"display\");\n}\n"
    },
    {
      "type": "paragraph",
      "id": "f50d8bf303fcced5",
      "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
    },
    {
      "type": "code",
      "id": "86b33666cf5f5ba4",
      "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n",
      "alias": "5eb6b67568179aa3"
    },
    {
      "type": "code",
      "id": "d260d2641ba0cb99",
      "text": "}"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame"
    },
    {
      "type": "frame",
      "id": "2987d4a8592a5a11",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "markdown",
      "id": "dd0dcb744c43752f",
      "text": "# Assets"
    },
    {
      "type": "assets",
      "id": "82acfb4bbe930ac7",
      "text": "pages/channel-messaging-and-broadcastchannel-apis"
    },
    {
      "type": "html",
      "id": "65035bebb10e004d",
      "text": "<body>\n  <iframe src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html></iframe>\n</body>"
    },
    {
      "type": "paragraph",
      "id": "8748773bc4e44c1e",
      "text": "iframe.html"
    },
    {
      "type": "frame",
      "id": "8161a36a431c4594",
      "text": "http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html"
    },
    {
      "type": "markdown",
      "id": "033c03b7373a6fdd",
      "text": "# Event listener"
    },
    {
      "type": "code",
      "id": "8f875986430b7928",
      "text": "window.addEventListener('message', function(event) {\n    const message = event.data;\n    \n    // Check if the message is intended for this frame and contains paragraph data\n    if (message.action === 'paragraphStream') {\n        // Handle the paragraph data\n        handleParaStream(message);\n    } else if (message.action === 'graphStream') {\n        // Handle the graph data\n        handleGraphStream(message, graphPromise); \n    }\n});\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Channel Messaging and BroadcastChannel APIs",
        "story": []
      },
      "date": 1711214228016
    },
    {
      "item": {
        "type": "factory",
        "id": "fc7412a568f53c3c"
      },
      "id": "fc7412a568f53c3c",
      "type": "add",
      "date": 1711214310470
    },
    {
      "type": "edit",
      "id": "fc7412a568f53c3c",
      "item": {
        "type": "paragraph",
        "id": "fc7412a568f53c3c",
        "text": "The Channel Messaging API and the BroadcastChannel API are two ways to communicate between window contexts and Workers"
      },
      "date": 1711214312651
    },
    {
      "type": "edit",
      "id": "fc7412a568f53c3c",
      "item": {
        "type": "paragraph",
        "id": "fc7412a568f53c3c",
        "text": "The Channel Messaging API and the BroadcastChannel API are two ways to communicate between window contexts and Workers. [https://webplatformcourse.com/bonus/messaging/ page]"
      },
      "date": 1711214321754
    },
    {
      "type": "edit",
      "id": "fc7412a568f53c3c",
      "item": {
        "type": "paragraph",
        "id": "fc7412a568f53c3c",
        "text": "The [[Channel Messaging API]] and the BroadcastChannel API are two ways to communicate between window contexts and Workers. [https://webplatformcourse.com/bonus/messaging/ page]"
      },
      "date": 1711214338535
    },
    {
      "item": {
        "type": "factory",
        "id": "2987d4a8592a5a11"
      },
      "id": "2987d4a8592a5a11",
      "type": "add",
      "after": "fc7412a568f53c3c",
      "date": 1711214374916
    },
    {
      "type": "edit",
      "id": "2987d4a8592a5a11",
      "item": {
        "type": "frame",
        "id": "2987d4a8592a5a11",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1711214378109
    },
    {
      "id": "13ff8c7ec153d63e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "window.addEventListener('DOMContentLoaded', () => {\n\twindow.addEventListener('message', event => {\n\tdocument.querySelector('p'),innerHTML = 'Message from index.html: ${$event.data}'\n\tevent.ports[0].postMessage('Ho!')\n\t})\n})"
      },
      "after": "fc7412a568f53c3c",
      "attribution": {
        "page": "2024-03-23"
      },
      "date": 1711214389908
    },
    {
      "id": "313907154e6512d9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
      },
      "after": "13ff8c7ec153d63e",
      "attribution": {
        "page": "HTML Test"
      },
      "date": 1711214413836
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <simple-greeting/>\n</body>`;\n}\n"
      },
      "after": "313907154e6512d9",
      "attribution": {
        "page": "HTML Test"
      },
      "date": 1711214417590
    },
    {
      "id": "f50d8bf303fcced5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "after": "5eb6b67568179aa3",
      "attribution": {
        "page": "HTML Test"
      },
      "date": 1711214423364
    },
    {
      "id": "86b33666cf5f5ba4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "86b33666cf5f5ba4",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n}",
        "alias": "5eb6b67568179aa3"
      },
      "after": "f50d8bf303fcced5",
      "attribution": {
        "page": "HTML Test"
      },
      "date": 1711214430137
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame (esm) with simple-greeting"
      },
      "after": "86b33666cf5f5ba4",
      "attribution": {
        "page": "HTML Test"
      },
      "date": 1711214433217
    },
    {
      "type": "edit",
      "id": "00f76ff348892888",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame"
      },
      "date": 1711214437127
    },
    {
      "item": {
        "type": "factory",
        "id": "82acfb4bbe930ac7"
      },
      "id": "82acfb4bbe930ac7",
      "type": "add",
      "after": "2987d4a8592a5a11",
      "date": 1711214663388
    },
    {
      "type": "edit",
      "id": "82acfb4bbe930ac7",
      "item": {
        "type": "assets",
        "id": "82acfb4bbe930ac7",
        "text": "pages/channel-messaging-and-broadcastchannel-apis"
      },
      "date": 1711214672619
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe src=\"./iframe.html\"></iframe>\n</body>`;\n}\n"
      },
      "date": 1711214860209
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html></iframe>\n</body>`;\n}\n"
      },
      "date": 1711214892100
    },
    {
      "item": {
        "type": "factory",
        "id": "65035bebb10e004d"
      },
      "id": "65035bebb10e004d",
      "type": "add",
      "after": "82acfb4bbe930ac7",
      "date": 1711215394456
    },
    {
      "type": "edit",
      "id": "65035bebb10e004d",
      "item": {
        "type": "html",
        "id": "65035bebb10e004d",
        "text": "<body>\n  <iframe src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html></iframe>\n</body>"
      },
      "date": 1711215400026
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n</body>`;\n}\n"
      },
      "date": 1711217225210
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p></p>\n</body>`;\n}\n"
      },
      "date": 1711273437059
    },
    {
      "item": {
        "type": "frame",
        "id": "922127d5f1dc6b28",
        "text": "http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html"
      },
      "id": "922127d5f1dc6b28",
      "type": "add",
      "after": "65035bebb10e004d",
      "date": 1711274259796
    },
    {
      "type": "edit",
      "id": "922127d5f1dc6b28",
      "item": {
        "type": "frame",
        "id": "922127d5f1dc6b28",
        "text": "http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html"
      },
      "date": 1711274263370
    },
    {
      "item": {
        "type": "paragraph",
        "id": "55d593688ff6e68c",
        "text": "iframe.html"
      },
      "id": "55d593688ff6e68c",
      "type": "add",
      "after": "922127d5f1dc6b28",
      "date": 1711274289069
    },
    {
      "id": "55d593688ff6e68c",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d",
        "55d593688ff6e68c",
        "922127d5f1dc6b28"
      ],
      "date": 1711274291924
    },
    {
      "type": "edit",
      "id": "55d593688ff6e68c",
      "item": {
        "type": "paragraph",
        "id": "55d593688ff6e68c",
        "text": "iframe.html"
      },
      "date": 1711274297418,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "type": "fork",
      "date": 1711274339638
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "window.addEventListener('DOMContentLoaded', () => {\n    \tconst channel = new MessageChannel();\n    \tconst display = document.querySelector('p');\n\n\t\tconst iframe = document.querySelector('iframe');\n\n\t\tiframe.addEventListener('load', () => {\n\t\t\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n\t\t});\n\n\t\tchannel.port1.onmessage = event => {\n\t\t\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n\t\t};\n\n\t});"
      },
      "date": 1711274619443
    },
    {
      "type": "remove",
      "id": "922127d5f1dc6b28",
      "date": 1711275107843
    },
    {
      "type": "remove",
      "id": "55d593688ff6e68c",
      "date": 1711275111779
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.querySelector('p');\n\nconst iframe = document.querySelector('iframe');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711275189344
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p></p>\n</body>`;\n}\n"
      },
      "date": 1711275384470
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.querySelector('p');\n\nconst iframe = document.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711275398446
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p id=\"p-within-el\"></p>\n</body>`;\n}\n"
      },
      "date": 1711275583999
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById('p-within-el');\n\nconst iframe = document.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711275597502
    },
    {
      "item": {
        "type": "factory",
        "id": "0a175c076440f968"
      },
      "id": "0a175c076440f968",
      "type": "add",
      "after": "65035bebb10e004d",
      "date": 1711275786718
    },
    {
      "type": "edit",
      "id": "0a175c076440f968",
      "item": {
        "type": "html",
        "id": "0a175c076440f968",
        "text": "<p>p in HTML snippet</p>"
      },
      "date": 1711275807423
    },
    {
      "id": "0a175c076440f968",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "0a175c076440f968",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711275814097
    },
    {
      "id": "0a175c076440f968",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "0a175c076440f968",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711275820998
    },
    {
      "type": "edit",
      "id": "0a175c076440f968",
      "item": {
        "type": "html",
        "id": "0a175c076440f968",
        "text": "<p id=\"display\">p in HTML snippet</p>"
      },
      "date": 1711275836615
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById('p-display');\n\nconst iframe = document.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711275845504
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById('display');\n\nconst iframe = document.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711275945872
    },
    {
      "id": "0a175c076440f968",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "0a175c076440f968",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711275996168
    },
    {
      "type": "edit",
      "id": "0a175c076440f968",
      "item": {
        "type": "html",
        "id": "0a175c076440f968",
        "text": "<p id=\"display\">p with id=\"display\" in HTML snippet</p>"
      },
      "date": 1711276020155
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById('display');\n\nconst iframe = window.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711276035582
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = window.getElementById('display');\n\nconst iframe = window.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711276047252
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById('display');\n\nconst iframe = document.getElementById('iframe-within-el');\n\niframe.addEventListener('load', () => {\n\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n});\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711276125699
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p id=\"display\"></p>\n</body>`;\n}\n"
      },
      "date": 1711276186086
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711276232242
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\n\nchannel.port1.onmessage = event => {\n\tel.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711276249640
    },
    {
      "id": "4c392825c5f7693e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "4c392825c5f7693e",
        "text": "const display = document.getElementById(\"demo\");"
      },
      "after": "0a175c076440f968",
      "attribution": {
        "page": "scratch"
      },
      "date": 1711277236212
    },
    {
      "type": "edit",
      "id": "4c392825c5f7693e",
      "item": {
        "type": "code",
        "id": "4c392825c5f7693e",
        "text": "const display = document.getElementById(\"display\");"
      },
      "date": 1711277245522
    },
    {
      "id": "d260d2641ba0cb99",
      "type": "add",
      "item": {
        "type": "code",
        "id": "d260d2641ba0cb99",
        "text": "}"
      },
      "after": "86b33666cf5f5ba4",
      "attribution": {
        "page": "scratch"
      },
      "date": 1711277399268
    },
    {
      "type": "edit",
      "id": "86b33666cf5f5ba4",
      "item": {
        "type": "code",
        "id": "86b33666cf5f5ba4",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n",
        "alias": "5eb6b67568179aa3"
      },
      "date": 1711277402737
    },
    {
      "type": "remove",
      "id": "0a175c076440f968",
      "date": 1711277410428
    },
    {
      "id": "4c392825c5f7693e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "4c392825c5f7693e",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711277417334
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711277440963
    },
    {
      "id": "13ff8c7ec153d63e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "4c392825c5f7693e",
        "13ff8c7ec153d63e",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711277445415
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p id=\"display\">I'm the display para.</p>\n</body>`;\n}\n"
      },
      "date": 1711277676569
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\n\nchannel.port1.onmessage = event => {\n\tdocument.getElementById(\"display\").innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711278285374
    },
    {
      "type": "remove",
      "id": "4c392825c5f7693e",
      "date": 1711278286897
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById(\"display\");\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711348819938
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p id=\"display\">I'm the display para within \"frame-within-el\".</p>\n</body>`;\n}\n"
      },
      "date": 1711349148731
    },
    {
      "type": "fork",
      "date": 1711350150542
    },
    {
      "id": "13ff8c7ec153d63e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711350158049
    },
    {
      "id": "399cc3aeb4c6348e",
      "type": "add",
      "item": {
        "type": "factory",
        "id": "399cc3aeb4c6348e"
      },
      "after": "f50d8bf303fcced5",
      "attribution": {
        "page": "scratch"
      },
      "date": 1711350272400
    },
    {
      "id": "399cc3aeb4c6348e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "399cc3aeb4c6348e",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d"
      ],
      "date": 1711350283396
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();"
      },
      "date": 1711350295465
    },
    {
      "type": "edit",
      "id": "399cc3aeb4c6348e",
      "item": {
        "type": "code",
        "id": "399cc3aeb4c6348e",
        "text": "const display = document.getElementById(\"display\");\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711350301578
    },
    {
      "type": "edit",
      "id": "399cc3aeb4c6348e",
      "item": {
        "type": "code",
        "id": "399cc3aeb4c6348e",
        "text": "\n\nchannel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711350602677
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <iframe id=\"frame-within-el\" src=\"http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html\"></iframe>\n  <p id=\"display\">I'm the display para within \"frame-within-el\".</p>\n</body>`;\nconst display = document.getElementById(\"display\");\n}\n"
      },
      "date": 1711350641642
    },
    {
      "type": "edit",
      "id": "399cc3aeb4c6348e",
      "item": {
        "type": "code",
        "id": "399cc3aeb4c6348e",
        "text": "channel.port1.onmessage = event => {\n\tdisplay.innerHTML = `Message back from the iframe: ${event.data}`;\n};"
      },
      "date": 1711350646490
    },
    {
      "item": {
        "type": "factory",
        "id": "8161a36a431c4594"
      },
      "id": "8161a36a431c4594",
      "type": "add",
      "after": "65035bebb10e004d",
      "date": 1711350953990
    },
    {
      "type": "edit",
      "id": "8161a36a431c4594",
      "item": {
        "type": "frame",
        "id": "8161a36a431c4594",
        "text": "http://localhost:3000/assets/pages/channel-messaging-and-broadcastchannel-apis/iframe.html"
      },
      "date": 1711350958221
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <p id=\"display\">I'm the display para.</p>\n</body>`;\nconst display = document.getElementById(\"display\");\n}\n"
      },
      "date": 1711351005237
    },
    {
      "id": "399cc3aeb4c6348e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "399cc3aeb4c6348e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d",
        "8161a36a431c4594"
      ],
      "date": 1711352147050
    },
    {
      "item": {
        "type": "factory",
        "id": "8748773bc4e44c1e"
      },
      "id": "8748773bc4e44c1e",
      "type": "add",
      "after": "8161a36a431c4594",
      "date": 1711352205704
    },
    {
      "type": "edit",
      "id": "8748773bc4e44c1e",
      "item": {
        "type": "paragraph",
        "id": "8748773bc4e44c1e",
        "text": "iframe.html"
      },
      "date": 1711352209671
    },
    {
      "id": "8748773bc4e44c1e",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "13ff8c7ec153d63e",
        "399cc3aeb4c6348e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d",
        "8748773bc4e44c1e",
        "8161a36a431c4594"
      ],
      "date": 1711352211854
    },
    {
      "id": "c4dfa4c8d98731dd",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c4dfa4c8d98731dd",
        "text": "const iframe = document.querySelector('iframe');"
      },
      "after": "13ff8c7ec153d63e",
      "attribution": {
        "page": "scratch"
      },
      "date": 1711352279437
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();\nconst display = document.getElementById(\"display\");"
      },
      "date": 1711352562047
    },
    {
      "type": "edit",
      "id": "c4dfa4c8d98731dd",
      "item": {
        "type": "code",
        "id": "c4dfa4c8d98731dd",
        "text": "const iframe = document.querySelector('iframe');\n\niframe.addEventListener('load', () => {\n\t\t\t\tiframe.contentWindow.postMessage('Hey', '*', [channel.port2]);\n\t\t\t});"
      },
      "date": 1711352699541
    },
    {
      "id": "033c03b7373a6fdd",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "033c03b7373a6fdd",
        "text": "# Event listener"
      },
      "after": "8161a36a431c4594",
      "attribution": {
        "page": "Paragraph Recommendation Viewer",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711352812696
    },
    {
      "id": "8f875986430b7928",
      "type": "add",
      "item": {
        "type": "code",
        "id": "8f875986430b7928",
        "text": "window.addEventListener('message', function(event) {\n    const message = event.data;\n    \n    // Check if the message is intended for this frame and contains paragraph data\n    if (message.action === 'paragraphStream') {\n        // Handle the paragraph data\n        handleParaStream(message);\n    } else if (message.action === 'graphStream') {\n        // Handle the graph data\n        handleGraphStream(message, graphPromise); \n    }\n});\n"
      },
      "after": "033c03b7373a6fdd",
      "attribution": {
        "page": "Paragraph Recommendation Viewer",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1711352831866
    },
    {
      "type": "edit",
      "id": "c4dfa4c8d98731dd",
      "item": {
        "type": "code",
        "id": "c4dfa4c8d98731dd",
        "text": "const iframe = document.querySelector('iframe');\n\nwindow.addEventListener('load', () => {\n\t\t\t\twindow.contentWindow.postMessage('Hey', '*', [channel.port2]);\n\t\t\t});"
      },
      "date": 1711352875384
    },
    {
      "item": {
        "type": "factory",
        "id": "c6384a54c2977e22"
      },
      "id": "c6384a54c2977e22",
      "type": "add",
      "after": "8f875986430b7928",
      "date": 1711352981508
    },
    {
      "type": "edit",
      "id": "c6384a54c2977e22",
      "item": {
        "type": "html",
        "id": "c6384a54c2977e22",
        "text": "<body>\n  <p id=\"display\">I am the display paragraph.</p>\n</body>"
      },
      "date": 1711353020687
    },
    {
      "id": "c6384a54c2977e22",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "c6384a54c2977e22",
        "13ff8c7ec153d63e",
        "c4dfa4c8d98731dd",
        "399cc3aeb4c6348e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "82acfb4bbe930ac7",
        "65035bebb10e004d",
        "8748773bc4e44c1e",
        "8161a36a431c4594",
        "033c03b7373a6fdd",
        "8f875986430b7928"
      ],
      "date": 1711353030385
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <p>I'm the el para.</p>\n</body>`;\nconst display = document.getElementById(\"display\");\n}\n"
      },
      "date": 1711353176131
    },
    {
      "type": "edit",
      "id": "13ff8c7ec153d63e",
      "item": {
        "type": "code",
        "id": "13ff8c7ec153d63e",
        "text": "const channel = new MessageChannel();"
      },
      "date": 1711353244889
    },
    {
      "type": "remove",
      "id": "c6384a54c2977e22",
      "date": 1711353275195
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function emit(el) {\n  el.innerHTML = `\n<body>\n  <p id=\"display\">I am the display paragraph.</p>\n</body>`;\nconst display = document.getElementById(\"display\");\n}\n"
      },
      "date": 1711353283459
    },
    {
      "type": "add",
      "id": "6a8a756307a52118",
      "item": {
        "type": "paragraph",
        "id": "6a8a756307a52118",
        "text": "See \"Code examples that accompany various MDN DOM and Web API documentation pages\""
      },
      "after": "fc7412a568f53c3c",
      "date": 1711353708130
    },
    {
      "type": "edit",
      "id": "6a8a756307a52118",
      "item": {
        "type": "paragraph",
        "id": "6a8a756307a52118",
        "text": "See also \"Code examples that accompany various MDN DOM and Web API documentation pages\" [https://github.com/mdn/dom-examples/tree/main?tab=readme-ov-file github]"
      },
      "date": 1711353728895
    },
    {
      "type": "add",
      "id": "79618cb6d206ffe8",
      "item": {
        "type": "paragraph",
        "id": "79618cb6d206ffe8",
        "text": "This page began as an attempt to reconstruct an example by Flavio Copes."
      },
      "after": "fc7412a568f53c3c",
      "date": 1711359109156
    },
    {
      "type": "edit",
      "id": "79618cb6d206ffe8",
      "item": {
        "type": "paragraph",
        "id": "79618cb6d206ffe8",
        "text": "This page began as an attempt to reconstruct that lesson example by Flavio Copes."
      },
      "date": 1711359135828
    },
    {
      "type": "edit",
      "id": "79618cb6d206ffe8",
      "item": {
        "type": "paragraph",
        "id": "79618cb6d206ffe8",
        "text": "This page began as an attempt to reconstruct that lesson by [[Flavio Copes]]."
      },
      "date": 1711359153297
    },
    {
      "item": {
        "type": "factory",
        "id": "dd0dcb744c43752f"
      },
      "id": "dd0dcb744c43752f",
      "type": "add",
      "after": "8f875986430b7928",
      "date": 1711359200684
    },
    {
      "id": "dd0dcb744c43752f",
      "type": "move",
      "order": [
        "fc7412a568f53c3c",
        "79618cb6d206ffe8",
        "6a8a756307a52118",
        "13ff8c7ec153d63e",
        "c4dfa4c8d98731dd",
        "399cc3aeb4c6348e",
        "313907154e6512d9",
        "5eb6b67568179aa3",
        "f50d8bf303fcced5",
        "86b33666cf5f5ba4",
        "d260d2641ba0cb99",
        "00f76ff348892888",
        "2987d4a8592a5a11",
        "dd0dcb744c43752f",
        "82acfb4bbe930ac7",
        "65035bebb10e004d",
        "8748773bc4e44c1e",
        "8161a36a431c4594",
        "033c03b7373a6fdd",
        "8f875986430b7928"
      ],
      "date": 1711359209745
    },
    {
      "type": "edit",
      "id": "dd0dcb744c43752f",
      "item": {
        "type": "markdown",
        "id": "dd0dcb744c43752f",
        "text": "# Assets"
      },
      "date": 1711359219133
    },
    {
      "type": "edit",
      "id": "79618cb6d206ffe8",
      "item": {
        "type": "paragraph",
        "id": "79618cb6d206ffe8",
        "text": "This page began as an attempt to reconstruct that lesson by [[Flavio Copes]]. See the index.html file in the assets folder below."
      },
      "date": 1711359238788
    },
    {
      "type": "edit",
      "id": "6a8a756307a52118",
      "item": {
        "type": "paragraph",
        "id": "6a8a756307a52118",
        "text": "See also the Channel messaging demo within \"Code examples that accompany various MDN DOM and Web API documentation pages\" [https://github.com/mdn/dom-examples/tree/main?tab=readme-ov-file github]"
      },
      "date": 1711359307080
    },
    {
      "type": "edit",
      "id": "6a8a756307a52118",
      "item": {
        "type": "paragraph",
        "id": "6a8a756307a52118",
        "text": "See also the Channel messaging demo within the \"Code examples that accompany various MDN DOM and Web API documentation pages\" [https://github.com/mdn/dom-examples/tree/main?tab=readme-ov-file github]"
      },
      "date": 1711359314154
    },
    {
      "type": "edit",
      "id": "6a8a756307a52118",
      "item": {
        "type": "paragraph",
        "id": "6a8a756307a52118",
        "text": "See also the Channel messaging demo within the \"Code examples that accompany various MDN DOM and Web API documentation pages\" [https://github.com/mdn/dom-examples/tree/main?tab=readme-ov-file github] â‡’ [[Channel Messaging Basic]]"
      },
      "date": 1711359442116
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711469038680
    }
  ]
}