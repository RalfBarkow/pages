{
  "title": "Emfrp",
  "story": [
    {
      "type": "paragraph",
      "id": "c0761dcb1314d2a2",
      "text": "In this paper, we introduce a new [[Functional Reactive Programming]] ([[FRP]]) language Emfrp designed to support small-scale embedded systems. An Emfrp program defines a system as a fixed directed graph whose nodes correspond to the time-varying values in the system. The language equips a simple mechanism that enables each node to refer the past values of arbitrary nodes. Using this mechanism, Emfrp provides simplicity and flexibility for describing complex time-dependent reactive behaviors without space and time leaks. Our Emfrp compiler produces platform-independent ANSIC code that can run on multiple processors including resource constrained microcontrollers. To demonstrate the capabilities of the language, we show a simple but non-trivial example application."
    },
    {
      "type": "pagefold",
      "id": "b2277616b2c4b5f3",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "8c1fc5c3c04e6993",
      "text": "SAWADA, Kensuke and WATANABE, Takuo, 2016. Emfrp: a functional reactive programming language for small-scale embedded systems. In: Companion Proceedings of the 15th International Conference on Modularity. Málaga Spain: ACM. 14 March 2016. p. 36–44. ISBN 978-1-4503-4033-5. DOI 10.1145/2892664.2892670. [Accessed 30 March 2024]. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Emfrp",
        "story": []
      },
      "date": 1711882298249
    },
    {
      "item": {
        "type": "factory",
        "id": "8c1fc5c3c04e6993"
      },
      "id": "8c1fc5c3c04e6993",
      "type": "add",
      "date": 1711882299578
    },
    {
      "type": "edit",
      "id": "8c1fc5c3c04e6993",
      "item": {
        "type": "paragraph",
        "id": "8c1fc5c3c04e6993",
        "text": "\nSAWADA, Kensuke and WATANABE, Takuo, 2016. Emfrp: a functional reactive programming language for small-scale embedded systems. In: Companion Proceedings of the 15th International Conference on Modularity. Málaga Spain: ACM. 14 March 2016. p. 36–44. ISBN 978-1-4503-4033-5. DOI 10.1145/2892664.2892670. [Accessed 30 March 2024]. \n"
      },
      "date": 1711882307294
    },
    {
      "type": "edit",
      "id": "8c1fc5c3c04e6993",
      "item": {
        "type": "paragraph",
        "id": "8c1fc5c3c04e6993",
        "text": "SAWADA, Kensuke and WATANABE, Takuo, 2016. Emfrp: a functional reactive programming language for small-scale embedded systems. In: Companion Proceedings of the 15th International Conference on Modularity. Málaga Spain: ACM. 14 March 2016. p. 36–44. ISBN 978-1-4503-4033-5. DOI 10.1145/2892664.2892670. [Accessed 30 March 2024]. \n"
      },
      "date": 1711882314771
    },
    {
      "item": {
        "type": "factory",
        "id": "c0761dcb1314d2a2"
      },
      "id": "c0761dcb1314d2a2",
      "type": "add",
      "after": "8c1fc5c3c04e6993",
      "date": 1711882340195
    },
    {
      "type": "edit",
      "id": "c0761dcb1314d2a2",
      "item": {
        "type": "paragraph",
        "id": "c0761dcb1314d2a2",
        "text": "In this paper, we introduce a new functional reactive programming (FRP) language Emfrp designed to support small-scale embedded systems. An Emfrp program defines a system as a fixed directed graph whose nodes correspond to the time-varying values in the system. The language equips a simple mechanism that enables each node to refer the past values of arbitrary nodes. Using this mechanism, Emfrp provides simplicity and flexibility for describing complex time-dependent reactive behaviors without space and time leaks. Our Emfrp compiler produces platform-independent ANSIC code that can run on multiple processors including resource constrained microcontrollers. To demonstrate the capabilities of the language, we show a simple but non-trivial example application."
      },
      "date": 1711882344573
    },
    {
      "id": "c0761dcb1314d2a2",
      "type": "move",
      "order": [
        "c0761dcb1314d2a2",
        "8c1fc5c3c04e6993"
      ],
      "date": 1711882351913
    },
    {
      "item": {
        "type": "factory",
        "id": "b2277616b2c4b5f3"
      },
      "id": "b2277616b2c4b5f3",
      "type": "add",
      "after": "8c1fc5c3c04e6993",
      "date": 1711882357144
    },
    {
      "id": "b2277616b2c4b5f3",
      "type": "move",
      "order": [
        "c0761dcb1314d2a2",
        "b2277616b2c4b5f3",
        "8c1fc5c3c04e6993"
      ],
      "date": 1711882359001
    },
    {
      "type": "edit",
      "id": "b2277616b2c4b5f3",
      "item": {
        "type": "pagefold",
        "id": "b2277616b2c4b5f3",
        "text": "~"
      },
      "date": 1711882364155
    },
    {
      "type": "edit",
      "id": "c0761dcb1314d2a2",
      "item": {
        "type": "paragraph",
        "id": "c0761dcb1314d2a2",
        "text": "In this paper, we introduce a new functional reactive programming ([[FRP]]) language Emfrp designed to support small-scale embedded systems. An Emfrp program defines a system as a fixed directed graph whose nodes correspond to the time-varying values in the system. The language equips a simple mechanism that enables each node to refer the past values of arbitrary nodes. Using this mechanism, Emfrp provides simplicity and flexibility for describing complex time-dependent reactive behaviors without space and time leaks. Our Emfrp compiler produces platform-independent ANSIC code that can run on multiple processors including resource constrained microcontrollers. To demonstrate the capabilities of the language, we show a simple but non-trivial example application."
      },
      "date": 1711882381203
    },
    {
      "type": "edit",
      "id": "c0761dcb1314d2a2",
      "item": {
        "type": "paragraph",
        "id": "c0761dcb1314d2a2",
        "text": "In this paper, we introduce a new [[Functional Reactive Programming]] ([[FRP]]) language Emfrp designed to support small-scale embedded systems. An Emfrp program defines a system as a fixed directed graph whose nodes correspond to the time-varying values in the system. The language equips a simple mechanism that enables each node to refer the past values of arbitrary nodes. Using this mechanism, Emfrp provides simplicity and flexibility for describing complex time-dependent reactive behaviors without space and time leaks. Our Emfrp compiler produces platform-independent ANSIC code that can run on multiple processors including resource constrained microcontrollers. To demonstrate the capabilities of the language, we show a simple but non-trivial example application."
      },
      "date": 1711882656443
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1712070340979
    }
  ]
}