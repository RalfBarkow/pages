{
  "title": "Java Script",
  "story": [
    {
      "type": "html",
      "text": "[[Java Script]] is a scripting language created by [[Brendan Eich]] at Netscape that supports [[Prototype Based Programming]], Object [[Oriented Programming]], and [[Functional Programming]]. It was originally called [[Live Script]], but the name was changed to [[Java Script]] for marketing reasons. Microsoft calls their version JScript. There is now a standardized version, [[Ecma Script]] [[http://www.ecma-international.org/ www.ecma-international.org]].",
      "id": "e1b1f9af226bf09cc8c5b893e1e57ce8"
    },
    {
      "type": "html",
      "text": "\nSome have claimed it is Lisp in C's clothing - [http://lambda-the-ultimate.org/classic/message8778.html lambda-the-ultimate.org] - but being a dynamically-typed functional language is not enough to make something Lisp. [[Java Script]] lacks many features that are crucial to Lisp; macros perhaps being at the top of the list. (Are macros crucial to Lisp? Or, just a great CLOS feature? (Macros *are not* a CLOS feature, they have little to do with CLOS, and actually, the other way round, quite a lot of CLOS would usually be expressed in terms of various macros.)) Perhaps [[Java Script]] is a \"dialect of Lisp\" in Java's clothing. Or, [[Java Script]] is Scheme in Java's clothing.",
      "id": "1b984a6c8a0bac862d3590e59f7a96db"
    },
    {
      "type": "html",
      "text": "\n[[Java Script]] is commonly found in [[Web Browser]]s and servers. It can be embedded in HTML for both client-side and server-side processing. Recently, [[Java Script]] has gained renewed interest for its RPC capabilities. See [[Ajax Web Applications]].",
      "id": "23cde16352ece64fd10849cebcf743e0"
    },
    {
      "type": "html",
      "text": "\nOn Windows systems, it can be used (along with VBScript) with the Microsoft [[Windows Scripting Host]] as a system scripting language.",
      "id": "257b8a091d7a87a0638e4660a12bcd02"
    },
    {
      "type": "html",
      "text": "\nOn Macs, it can be used as an [[Open Scripting Architecture]] language alongside [[Apple Script]] through the use of a plug-in (based on [[Spider Monkey]], see below).",
      "id": "d2b93a557c75c24270ffc89320f0aed1"
    },
    {
      "type": "html",
      "text": "\nMozilla.org has two open-source implementations of [[Java Script]] engines, one in Java ([[Rhino Interpreter]], see [http://www.mozilla.org/rhino www.mozilla.org]) and one in C ([[Spider Monkey]], see [http://www.mozilla.org/js/spidermonkey www.mozilla.org]). Both engines are embedded in a lot of products and also available for the command line.",
      "id": "2b8ce1d2a66699412afc731bd6bbdd59"
    },
    {
      "type": "html",
      "text": "\nIt's also the basis for [[Dyna Script]], the server-side scripting language for Sybase Dynamo (their answer to ASP).",
      "id": "2273e95c2d2e2cff71028728a7d63525"
    },
    {
      "type": "html",
      "text": "<b>Language Features</b>",
      "id": "004a0164d6e82112fb63c5041cfacbda"
    },
    {
      "type": "html",
      "text": "\nUnlike Java's inheritance model, [[Java Script]] is prototype and slot based - sorta like [[Newton Script]] and [[Self Language]]. It is really quite neat! -- [[Anonymous Donor]]",
      "id": "dce6c5d3c748c03014806d8419cdcaf0"
    },
    {
      "type": "html",
      "text": " <i>Unfortunately, this is going to change with the forthcoming version 2.0, where [[Java Script]] will have a more traditional class-based approach.</i>",
      "id": "75da8fa3bd3a183bab0a1492548f03af"
    },
    {
      "type": "html",
      "text": " (Oh thank you Jesus! -- [[Paul Murray]])",
      "id": "5eacc83cecf782df96e5dfcf25d190bb"
    },
    {
      "type": "html",
      "text": " <i>um.. Paul, that's not a good thing, the class based approach is less powerful and less dynamic. Prototypes give you everything classes do and more.</i>",
      "id": "60c6fa40efd61c7743f58b2dda89f85b"
    },
    {
      "type": "html",
      "text": " Fortunately for us, prototypes aren't going away.  You still can have prototypes.  Classes, as it turns out, are just a way of writing constructors, a feature which prototype-languages typically lack.",
      "id": "c9938bf2dce73e9d4cdda640d54817ff"
    },
    {
      "type": "html",
      "text": "\nI think some definitions of \"object-oriented\" are limited due to the nature of popular OO languages. I haven't used [[Java Script]] directly, but I have used a prototypical language. The prototype is really just a delegate, which from a certain perspective is all that inheritance is, except that delegation is a run-time association between objects, while inheritance is compile time, therefore delegation is more flexible. Polymorphism can exist without inheritance. As a matter of fact, delegation promotes composition, which in turn promotes polymorphism. -- [[Greg Vaughn]]",
      "id": "834d4ddf76fe4e1d73ad9e4003650d43"
    },
    {
      "type": "html",
      "text": "\nI haven't tried this in [[Java Script]], but if it's truly Self-like, then you don't need to do name-mangling to accomplish inheritance. Instead, you adopt a Smalltalk-style metastructure as a matter of convention, including a process and method execution model. Then, by convention, every \"prototype\" delegates every method to its \"class\", which looks in its metaclass to see how to interpret it. Since delegation *is* inheritance, you'll get what you want.",
      "id": "95a625d92ebfd1a841688c2542b5df95"
    },
    {
      "type": "html",
      "text": "[[Java Script]] supports true [[Lexical Closure]]s via function literals. A closure (also known as [[Lambda Expression]]s after LISP - where they probably originated) is simply an anonymous sub-routine that closes over the namespace of lexical variables within the scope of the block that defines the function body.",
      "id": "e619b54705a26473d1f07baf7e5389f8"
    },
    {
      "type": "html",
      "text": "\nFor some interesting use of closure-like behavior for [[Java Script]] event callbacks, see BeyondJS [[http://w3future.com/html/stories/callbacks.xml w3future.com]].",
      "id": "3dea9c9026f8479a84e41dc81467c712"
    },
    {
      "type": "html",
      "text": "\n[[Java Script]] is an interesting language. Arrays, objects, maps ([[Associative Array]]) are all unified. Members seem to be rather like slots in the [[Self Language]]. The way objects can inherit from one another is very dynamic. I think you could do quite a slick UI framework for [[Java Script]]. <i>Yes, you could, and you might end up with something like [[Mozilla Xul]].</i>",
      "id": "f5894255babc49b126ffdafb70a0a541"
    },
    {
      "type": "html",
      "text": "\n[[Micro Soft]] are working on adding [[Static Type Safety]] support: [http://msdn.microsoft.com/workshop/languages/clinic/scripting07142000.asp msdn.microsoft.com]",
      "id": "f3af38d07a1fe80aedada06ea62c4233"
    },
    {
      "type": "html",
      "text": "<b>Testimonials</b>",
      "id": "9271ac26b84c06797e13dfea87756500"
    },
    {
      "type": "html",
      "text": "\nMy friend [[Nick Simons]] has got surprisingly passionate in favour of [[Java Script]] as a pretty good object language in recent months. -- [[Richard Drake]]",
      "id": "2fc58ec73bc0028af5ae148be95287b4"
    },
    {
      "type": "html",
      "text": "<b>Cross-platform compatibility</b>",
      "id": "a49c485681095c5e64e4fe49ef8341e1"
    },
    {
      "type": "html",
      "text": "\nThe [[Achilles Heel]] of [[Java Script]] is its inconsistent behavior across the various platform/browser combinations. As a result, it is virtually impossible to use it to do anything robust on the client side. -- [[Tom Stambaugh]]",
      "id": "77f5723fa69daac414d7611726c608fc"
    },
    {
      "type": "html",
      "text": "\nYes, a big problem with writing [[Java Script]] for the browser is the inconsistencies of its implementation across the various browsers. Take a look at my [[Js Unit]]. It's a unit testing framework for running [[Java Script]] [[Unit Test]]s inside the target browser. A nice side-effect of this is that you could run your tests in your target browsers. -- [[Edward Hieatt]]",
      "id": "a94ac3054bf50e155b46588b74ca11a9"
    },
    {
      "type": "html",
      "text": "\nSorry, I can't agree at all. Ok, due to differences between the Explorer and Netscape versions there is some confusion. But I always try to write in unicode: one single version of a homepage for both. Period. Try looking at my page on French verbs conjugations - [http://verbes.eduinfo.com verbes.eduinfo.com] -- [[Pieter Jansegers]]",
      "id": "5610ffd258cdbd550d2dda521e6be37f"
    },
    {
      "type": "html",
      "text": "\nI disagree with the points about inconsistencies in implementation. If you say that about [[Java Script]] then you must say the same thing about HTML. Netscape provides very good documentation on its [[Dev Edge]] website and if you follow their guidelines then you will be able to write script that works in version 3 & 4 browsers ([[Java Script]] 1.2) and version 5 browsers ([[Java Script]] 1.5) with very very few problems.",
      "id": "32b6a4431ac81ebc4c0e800edb800d97"
    },
    {
      "type": "html",
      "text": "\nThe inconsistency problem manifests itself significantly in implementation of DHTML and DOM - particularly in version 4 browsers - but this can be overcome by writing an abstract API that either uses switching or the [[Bridge Pattern]]. [[Java Script]] is actually a lot more flexible than is commonly believed. -- [[Walter Rumsby]]",
      "id": "d53c03df748550e22a11fcaf886e3d24"
    },
    {
      "type": "html",
      "text": "\nIt is quite possible to write compatible code as long as you do not use the [[Document Object Model]] (which is not part of the language definition anyway). Take a look at my [[Js Unit]], which is available for a big number of environments as long as their engine is based on the ECMA standard. -- Jörg Schaible",
      "id": "e5f9839eebea5f221ab5719051c2ba62"
    },
    {
      "type": "html",
      "text": "\nIn short, [[Java Script]] suffers from a [[Tightly Coupled Reputation]] problem ([[Java Script Sucks In Browsers]]).",
      "id": "59d92114a4a9ca9065d8c0a154a5cba2"
    },
    {
      "type": "html",
      "text": "<b>[[Java Script]] and Wiki</b>",
      "id": "17ce104e6fa833f311d037005fb84c24"
    },
    {
      "type": "html",
      "text": "\nIs there some [[Java Script Enabled Wiki]]? -- [[Fridemar Pache]]",
      "id": "e467370347ec00e663ef87cd72bc37d0"
    },
    {
      "type": "html",
      "text": "\nYes, check out Jeremy Ruston's [[Tiddly Wiki]] ([http://www.tiddlywiki.com/ www.tiddlywiki.com]) - the original is stand-alone HTML with all logic implemented in JS. There're now several spin-offs using PHP/MySQL... -- [[Karsten Schmidt]]",
      "id": "2457660c4a7d337ef9dff606ef77f391"
    },
    {
      "type": "html",
      "text": "\nDoes anyone knows of any library (or way) that allows to write [[Java Script]] CGIs? I'm planning on writing a [[Wiki Wiki Web]] in [[Java Script]], I've found a really neat interpreter/byte-code compiler and it's a great way to learn the programming language (not the DOM/browser stuff)... Thanks! -- [[David De Lis]]",
      "id": "eb95c6ea5ece5037202c3511ceb6cff5"
    },
    {
      "type": "html",
      "text": "\nI may have misunderstood the question here, but if you use ASP you can use JScript to write server side code. -- [[Tobin Harris]]",
      "id": "5d897da873e2158bbfe3fa8fde8aa48f"
    },
    {
      "type": "html",
      "text": "<i>No, I meant [[Java Script]] as an application building language, like C++ or Java, not as server-side stuff. I've written a small CGI library that allows me to access the query_string variables, but it's pretty weak, I'd prefer to work with one already done. Anyway...</i> -- [[David De Lis]]",
      "id": "d71f800b7bfad9d4c9e5f0fdba515823"
    },
    {
      "type": "html",
      "text": " The [[Spider Monkey]] project generates a standalone executable as a reference implementation.",
      "id": "f6670ee2a912957363f798741a8f56bc"
    },
    {
      "type": "html",
      "text": "\nI am interested in using [[Java Script]] and Wiki as a way of building a [[Filesystem Based Wiki]] or a [[Wiki For Literate Programming]]. -- [[Andy Glew]]",
      "id": "977ece46aa77a4ccc3d507a314a3104b"
    },
    {
      "type": "html",
      "text": "<b>Future</b>",
      "id": "44a58827fc48cd3c9ec39d86dba51d9a"
    },
    {
      "type": "html",
      "text": "\nHave you looked at the proposal of [[Java Script]] 2.0? The ECMA TC39 group is working with the proposed draft at [http://www.mozilla.org/js/language/js20/index.html www.mozilla.org] .#23You can find a lot of resources on [[Java Script]] on the Mozilla project page [http://www.mozilla.org/js/language/ www.mozilla.org] as well...",
      "id": "07d8b48ac7a8b37522ed897a4e61b9d1"
    },
    {
      "type": "html",
      "text": "\nTwo compilers that translate [[Java Script]] 2.0 to [[Java Script]] 1.X are Jangaroo ([http://www.jangaroo.net/ www.jangaroo.net]) and Mascara ([http://ecmascript4.com/ ecmascript4.com]).",
      "id": "45846a8aaa65845dc73c2176512e5705"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\nDon't forget the Netscape [[Java Script]] console - type javascript: into the URL field - better than dosument.write or alert() for tracing variables, etc. -- [[Dave Everitt]]",
      "id": "6106899d69bfd5e801c8955831f018da"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\nIf used appropriately, [[Java Script]] is an easy and effective tool for creating dynamic Web-based interfaces for proprietary Intranet applications.",
      "id": "e139275edbf5f671f951530c8b30f986"
    },
    {
      "type": "html",
      "text": "<i>As long as you have some form of defence against [[Cross Site Scripting Exposure]], attacks from people outside who know what you're using inside.</i>",
      "id": "f350d2babf3293c0af3235ed72d0a688"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\nI only found out about Wiki yesterday, but I have been using a guestbook which stores the updates in [[Java Script]] function calls. My Web pages include these and I provide the code to be called.",
      "id": "ffc86a6a5f8d43c023ec416db911ea64"
    },
    {
      "type": "html",
      "text": "\nThis makes [[Java Script]] really useful, as you can update the data on a page.",
      "id": "1e43ef2da98080ef3ba0dfb904cc8031"
    },
    {
      "type": "html",
      "text": "\nHave a look at [http://www.btinternet.com/~doug.h.rice/gbbook www.btinternet.com] (broken link: unhosted) and [http://www.dougrice.plus.com/gbbook/ www.dougrice.plus.com].",
      "id": "c8aea9f5912cae9a94cf89e32493d0d9"
    },
    {
      "type": "html",
      "text": "\nI hoped that BTOpenworld would provide the guestbook script that saves [[Java Script]] Function Calls along side their normal guestbook script, but I need help in working out how it would make them money.",
      "id": "b15ff5b2e00e296b2c5cadc8bc11a7e4"
    },
    {
      "type": "html",
      "text": "\nIt allows me to knock together simple applications quickly, and avoid a lot of the complications of server side programming.",
      "id": "93114928ce9b4fbd7e8a78baab254c02"
    },
    {
      "type": "html",
      "text": "\nFrom my limited knowledge of the PHP/MySQL solution, your database query gives you an array of the data from the database search. My idea gives you an array of data, it's just all the data that the guestbook users post in the order that they post the data.",
      "id": "8d33d8ac5bedb75fead868c7d77cbe4c"
    },
    {
      "type": "html",
      "text": "\nIt is similar to Wiki.",
      "id": "558f0ee3cb3461a27fe85ee756e380f4"
    },
    {
      "type": "html",
      "text": "-- [[Doug Rice]]",
      "id": "585e9001f134378fc12155e0d0dd238d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\nA nice feature of [[Java Script]] is its treatment of functions as first class objects, which allows Closures and [[Higher Order Function]]s.",
      "id": "3aea23b8a7dde5de3b3aa011d5ae26f9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "<b>For more information on [[Java Script]] see:</b>",
      "id": "9326155b6d82a9292668800555f5410f"
    },
    {
      "type": "html",
      "text": " [http://en.wikipedia.org/w/wiki.phtml?search=JavaScript en.wikipedia.org]",
      "id": "7606f16d196937476d59a3b02d3fe399"
    },
    {
      "type": "html",
      "text": " [http://c2.com/cgi/wiki?search=JavaScript c2.com]",
      "id": "77c9e81e566cf62b6148c5f4050e4114"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "<b>Some [[Java Script]] Tutorials</b>",
      "id": "9467bb32bf3bf2c837f5c3374f58223b"
    },
    {
      "type": "html",
      "text": " [http://www.afterhoursprogramming.com/tutorial/JavaScript/Introduction/ www.afterhoursprogramming.com]",
      "id": "ace2de514a6c789aca86efe5bb491135"
    },
    {
      "type": "html",
      "text": " [http://www.geocities.com/binnyva/code/javascript/basic_tutorial/index.html www.geocities.com]",
      "id": "127c87327e1799763029f1215831477b"
    },
    {
      "type": "html",
      "text": " [http://www.geocities.com/SiliconValley/Station/4320/ www.geocities.com]",
      "id": "d466d914754cd131a2bb91dd7b17190c"
    },
    {
      "type": "html",
      "text": " [http://www.yourhtmlsource.com/javascript/basicjavascript.html www.yourhtmlsource.com]",
      "id": "909519b0303a2f9a3f0d8b9641563910"
    },
    {
      "type": "html",
      "text": " [http://hologuides.com/JavaScript/ hologuides.com]",
      "id": "d07b3734470b4b5839b1a120812b6d24"
    },
    {
      "type": "html",
      "text": " [http://eloquentjavascript.net/ eloquentjavascript.net]",
      "id": "5fc411356ce61550efb2a4b1b7d97bba"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "<b>Presentation</b>",
      "id": "d7e7e34fb61610995fbe2040072c87f4"
    },
    {
      "type": "html",
      "text": "\n[[Java Script]] is a [[Scripting Language]]. See the definition at: [http://en.wikipedia.org/w/wiki.phtml?search=scripting+language en.wikipedia.org]",
      "id": "d3bc3a2297322737112e3660e49aa213"
    },
    {
      "type": "html",
      "text": "\n[[Java Script]] enables you to write fixed menus easily and quickly--pull-down menus, windows, menus for the right click of the mouse and other things (given the right environment).",
      "id": "7444d41d092f1cfe459dda3fdf50901d"
    },
    {
      "type": "html",
      "text": "\nA non-programmer thinks, \"For those who can't put together 3 lines of code in any language, javascript is god-send!\" It's actually a product of Netscape and subsequent contributors and is [[Just Another Programming Language]], though one shaped by its birth within the framework of a [[Web Browser]].",
      "id": "8b8c0f5301e187bb05446d99e998f688"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "Paste the following as js.html in a local text file and open in your browser you can edit and run simple [[Java Script]] code in the text field without refreshing (the button calls the eval() function). A simple ide for learning.",
      "id": "4008c4e98ac1e15f1264400c5ac04191"
    },
    {
      "type": "code",
      "text": " <html>\n  <head><title>Eval()</title>\n  <script language=\"JavaScript\">\n  <!--\n    function evaluate()\n    {\n      //document.forms[0].out.value = \n        eval(document.forms[0].field.value);\n    }\n  -->\n  </script>\n  </head>\n  <body>\n    <form>\n      <input type=\"button\" name=\"go\" value=\"go\" onClick=\"evaluate()\"><p>\n      <textarea rows=\"20\" cols=\"40\" name=\"field\">\n //start code   ",
      "id": "3fd3a75bdb36cf2a18ad8af749a48e89"
    },
    {
      "type": "code",
      "text": " init();\n o.m1(1);",
      "id": "6d9005c5f8e5e2725bfde75b4a78b98f"
    },
    {
      "type": "code",
      "text": " function init()\n {\n  o = new Object();\n  o.a1 = 0;",
      "id": "0297018299511bc6ea7e30374891e664"
    },
    {
      "type": "code",
      "text": "  o.m1 = function(x)\n  {\n    alert(\"before:\"+this.a1);\n    this.a1 = x;\n    alert(\"after:\"+this.a1);\n  }\n }",
      "id": "6c788cf6ce4826d632a14534902e9df6"
    },
    {
      "type": "code",
      "text": " //end code\n      </textarea>\n      <textarea rows=\"20\" cols=\"40\" name=\"out\">\n      </textarea>\n    </form>\n  </body>\n </html>",
      "id": "30fe0ab1440b7b5d2891e47bbcfa7d87"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\nSome [[Java Script]] oddities and bugaboos:",
      "id": "f74f4dcd87a201d21bb8ccba136e6f1e"
    },
    {
      "type": "html",
      "text": " Variable declarations are optional (much like [[Basic Language]]); though if you read an undeclared variable before writing to it you'll get an error. (Writing to an undeclared variable declares it - <i>in the global scope</i>.)",
      "id": "c67f09cdb9d4e14c5eb772c9929e4810"
    },
    {
      "type": "html",
      "text": " Language is [[Weakly Typed]], and the automatic coercions that it does can produce surprising results. \"2\" + \"3\" is \"23\" (+, when applied to two strings, performs concatenation); \"2\" * \"3\" is 6. (Multiplication not defined for strings; so the language tries converting them to numerals, succeeds, and multiplies those). This can be surprising. <i>Is it? It's the same behaviour as other languages, e.g. python. -- Greg Bowyer</i> Nope. Python says \"2\"+\"3\" is \"23\", \"2\" * 3 is \"222\", and \"2\" * \"3\" and \"2\"+3 are type errors.",
      "id": "32121770eca999503ffb8ac816942317"
    },
    {
      "type": "html",
      "text": " Rather annoying gotcha in array constructor. new Array() returns a newly created empty array; new Array(2,3) returns a newly-created array with 2 and 3 as its two elements. new Array(5) does <i>not</i> return a newly-created array with 5 as its single element; instead, it returns a 5-element array! <i>Use new Array(length) to create a sized array, use var myArray = [2, 3, 4, 5] to define an array</i>",
      "id": "5050c667159b731555ed956ffac40fd2"
    },
    {
      "type": "html",
      "text": " Whereas most languages have one universal singular value (null/nil/Void/whatever); [[Java Script]] has two - \"null\" and \"undefined\". With somewhat interesting and irregular semantics.",
      "id": "3e0f8b6220cdc50bdbfdaafcd837393d"
    },
    {
      "type": "html",
      "text": " No integral types - the only numeric type supported is an IEEE754 double-precision float. For a scripting language, this limitation is probably less obnoxious than it would be elsewhere.",
      "id": "a9cfa024f820d83078a40e2e41d449c6"
    },
    {
      "type": "html",
      "text": " Language has [[Lexical Scoping]], but with an interesting twist. Unlike [[Java Script]]s brethen C/C++/Java/C#/etc, where variables introduced in an anonymous block within a function are only valid within that block; in [[Java Script]] such variables are valid for the entire function. In other words:",
      "id": "52cf48fa17b55d6dff74bcbef5076eb8"
    },
    {
      "type": "code",
      "text": " if (a == b)\n {\n     var c = \"Equal!\";\n }",
      "id": "fcfe01fb18139aa45a03881561a88cc4"
    },
    {
      "type": "code",
      "text": " if (c == \"Equal!\") {\n     // do something\n }",
      "id": "99ec0f8a9580e696ba4e70e1be19dc84"
    },
    {
      "type": "html",
      "text": "is legal [[Java Script]]. If the first condition is not true, c will evaluate to \"undefined\". ",
      "id": "15b421bbc069e4a26c43701a4a183c4d"
    },
    {
      "type": "html",
      "text": " Semicolons are optional in [[Java Script]]; if the parser sees a line break, it will try and interpret the two lines as separate statements (if it can't, it then tries to interpret them as a single statement). This too can produce surprising results.",
      "id": "018688fee9eb798cebc005cec823d9ce"
    },
    {
      "type": "html",
      "text": " It is not precisely true that semicolons are optional. The syntax actually requires them, and the rules for inserting them automatically are almost the exact opposite (it is only tried if it is a syntax error without one and if other additional conditions are met). There are plenty of situations where a newline is not sufficient, semicolon insertion won't take place, and it won't do what you expect. For this reason pretty much every serious javascript programmer considers it a misfeature.",
      "id": "c9c1d08cde4fc56319dd0324fb433520"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "Some of the claims here may overstate the power of [[Java Script]]. While the language itself may, given an ideal engine in an ideal environment, provide everything mentioned, there are still important shortcomings that need to be addressed before a [[Java Script Ide]] can be competitive with Smalltalk (my benchmark).",
      "id": "b41db7f63b145a8f139871d2ecc3da65"
    },
    {
      "type": "html",
      "text": "\nIn particular, what if any execution model is implied by the language, and how much of that model can be surfaced in the environment? Can I get at things comparable to stack frames, activation records, and so on? Is there a real process model (real in the sense that I can do multi-threaded things)?",
      "id": "cf9f3e42f2b0b4ac7a63f97881d76b2a"
    },
    {
      "type": "html",
      "text": "\nHow hard would it be to support a basic Smalltalk-style debugger/inspector? I note, for example, that the [[Venkman Debugger]] cuts several corners, and appears to dramatically slow the execution while running. Is Venkman the best there is? Is Venkman itself written in [[Java Script]], so that I can change it on the fly?",
      "id": "77b3ea918b018136e045f1bf3bdff077"
    },
    {
      "type": "html",
      "text": "[The short answer is no. The [[Ecma Script]] language standard itself is minimal and doesn't specify anything about threading or processes or even an execution model. It is intended to be extended, though, so an implementation of [[Java Script]] with these features certainly would be possible. Venkman, as with all XUL applications, is implemented in [[Java Script]] but I believe the JS engine that powers the application is separate from the JS engine that executes the code Venkman looks at (and the JS code that runs on web pages).]",
      "id": "27b3d057e1611022a6ffa9ea97d607ce"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "\n[[Douglas Crockford]] has articles about how to use [[Java Script]] in an object-oriented fashion at [http://www.crockford.com www.crockford.com]. He also has an article called <i>[[Java Script]]: The World's Most Misunderstood Programming Language</i> that I like a lot. -- [[Chad Skeeters]]",
      "id": "5d0fa8837ab44fe5bdcf71fa8942d276"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "<b>[[Java Script]] [[Quick Questions]]</b>",
      "id": "129935ddab3bb02bc2ad7b3641c8863b"
    },
    {
      "type": "html",
      "text": "<b>Q</b> Serverside Javascripts on Microsoft IIS. Any benefits to using it instead of [[Vb Script]]?",
      "id": "e9af274be53d78f2e2f75755135c1bc0"
    },
    {
      "type": "html",
      "text": "<b>Answer:</b> Yes, you can share function and code snippets that can be used on both the server and client side, like form validation, error checking (but not handling), or other more complex algorithms, like regex's.",
      "id": "1d218c1e04368b5bd881182b5425e6b1"
    },
    {
      "type": "html",
      "text": "\nThat, and [[Vb Script]] sucks in comparison. It doesn't have exception handling, anonymous functions, prototypes, or a good culture in general.",
      "id": "53a19807c826e41aab13936c545720b4"
    },
    {
      "type": "html",
      "text": "<b>Question:</b> Any recomendations on books? Something like [[Java Script For Programmers]], not [[Java Script For Total Morons]], please.",
      "id": "06c982f6f89b2937ce8d27e5f73e2727"
    },
    {
      "type": "html",
      "text": "<b>Answer:</b> Check out the book list on [[Iwanna Learn Java Script]].",
      "id": "bfa6e4853b72bc79b61af561849c1878"
    },
    {
      "type": "html",
      "text": "<b>Question:</b> Is there any mechanism for [[Java Script]] to communicate information between frames and windows in a browser? (e.g. like 'cookies' for [[Java Script]], but NOT delivered as part of the HTTP request header? - i.e. kept purely client-side?)",
      "id": "46b719f7c2352e4c08ee9da2e8734a6b"
    },
    {
      "type": "html",
      "text": "<b>Answer:</b> Yes. When a frame named frame1 wants to access a frame named frame2, it can do so via parent.frame2. See, e.g., the \"Writing to Other Frames and Windows\" section of <i>[[Dynamic Html The Definitive Reference]]</i> from [[Oreilly And Associates]].",
      "id": "a9887583a804e9835940d2fd994bb854"
    },
    {
      "type": "html",
      "text": "<b>Question:</b> That does not seem very cookie-like, since the communication requires knowing ahead of time (by name) <i>exactly</i> which other frames and windows will be involved in the communication. Is there a way to do this Can one do it <i>without</i> knowing the 'names' of these other windows and frames? (My goal is [[Hmac User Authentication]] for [[Wiki Ide]], and this would just make it <i>convenient</i> by automatically logging in on all pages by entering username and password on one page.)",
      "id": "64505bd5e83efad68ccb1ef495ecf19f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "See [[Ecma Script]], [[Java Script Rocks]], [[Java Script Sucks]], [[Java Script Coding Standard]], [[Open Source Java Script]], [[Java Script Enabled Wiki]], [[Wiki With Programmable Content]], [[Visual Java Script]], [[Java Script Object Notation]](JSON)",
      "id": "df136973801d35145ca4cc4b4c518fde"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "25b0a800773abae8eb57a15f69958a8f"
    },
    {
      "type": "html",
      "text": "[[Category Programming Language]] [[Category Java Script]] [[Category Web Design]] [[Category Prototype Programming]]",
      "id": "f11253465727a17b63a4e3442aba8a28"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?JavaScript c2.com]",
      "id": "8f35de6498c37c4cf9c0e47d243066aa"
    }
  ],
  "journal": [
    {
      "date": 1399480785000,
      "id": "22df9dbb56caf3a71a57dc3b88abc2b9",
      "type": "create",
      "item": {
        "title": "Java Script",
        "story": [
          {
            "type": "html",
            "text": "[[Java Script]] is a scripting language created by [[Brendan Eich]] at Netscape that supports [[Prototype Based Programming]], Object [[Oriented Programming]], and [[Functional Programming]]. It was originally called [[Live Script]], but the name was changed to [[Java Script]] for marketing reasons. Microsoft calls their version JScript. There is now a standardized version, [[Ecma Script]] [[http://www.ecma-international.org/ www.ecma-international.org]].",
            "id": "e1b1f9af226bf09cc8c5b893e1e57ce8"
          },
          {
            "type": "html",
            "text": "\nSome have claimed it is Lisp in C's clothing - [http://lambda-the-ultimate.org/classic/message8778.html lambda-the-ultimate.org] - but being a dynamically-typed functional language is not enough to make something Lisp. [[Java Script]] lacks many features that are crucial to Lisp; macros perhaps being at the top of the list. (Are macros crucial to Lisp? Or, just a great CLOS feature? (Macros *are not* a CLOS feature, they have little to do with CLOS, and actually, the other way round, quite a lot of CLOS would usually be expressed in terms of various macros.)) Perhaps [[Java Script]] is a \"dialect of Lisp\" in Java's clothing. Or, [[Java Script]] is Scheme in Java's clothing.",
            "id": "1b984a6c8a0bac862d3590e59f7a96db"
          },
          {
            "type": "html",
            "text": "\n[[Java Script]] is commonly found in [[Web Browser]]s and servers. It can be embedded in HTML for both client-side and server-side processing. Recently, [[Java Script]] has gained renewed interest for its RPC capabilities. See [[Ajax Web Applications]].",
            "id": "23cde16352ece64fd10849cebcf743e0"
          },
          {
            "type": "html",
            "text": "\nOn Windows systems, it can be used (along with VBScript) with the Microsoft [[Windows Scripting Host]] as a system scripting language.",
            "id": "257b8a091d7a87a0638e4660a12bcd02"
          },
          {
            "type": "html",
            "text": "\nOn Macs, it can be used as an [[Open Scripting Architecture]] language alongside [[Apple Script]] through the use of a plug-in (based on [[Spider Monkey]], see below).",
            "id": "d2b93a557c75c24270ffc89320f0aed1"
          },
          {
            "type": "html",
            "text": "\nMozilla.org has two open-source implementations of [[Java Script]] engines, one in Java ([[Rhino Interpreter]], see [http://www.mozilla.org/rhino www.mozilla.org]) and one in C ([[Spider Monkey]], see [http://www.mozilla.org/js/spidermonkey www.mozilla.org]). Both engines are embedded in a lot of products and also available for the command line.",
            "id": "2b8ce1d2a66699412afc731bd6bbdd59"
          },
          {
            "type": "html",
            "text": "\nIt's also the basis for [[Dyna Script]], the server-side scripting language for Sybase Dynamo (their answer to ASP).",
            "id": "2273e95c2d2e2cff71028728a7d63525"
          },
          {
            "type": "html",
            "text": "<b>Language Features</b>",
            "id": "004a0164d6e82112fb63c5041cfacbda"
          },
          {
            "type": "html",
            "text": "\nUnlike Java's inheritance model, [[Java Script]] is prototype and slot based - sorta like [[Newton Script]] and [[Self Language]]. It is really quite neat! -- [[Anonymous Donor]]",
            "id": "dce6c5d3c748c03014806d8419cdcaf0"
          },
          {
            "type": "html",
            "text": " <i>Unfortunately, this is going to change with the forthcoming version 2.0, where [[Java Script]] will have a more traditional class-based approach.</i>",
            "id": "75da8fa3bd3a183bab0a1492548f03af"
          },
          {
            "type": "html",
            "text": " (Oh thank you Jesus! -- [[Paul Murray]])",
            "id": "5eacc83cecf782df96e5dfcf25d190bb"
          },
          {
            "type": "html",
            "text": " <i>um.. Paul, that's not a good thing, the class based approach is less powerful and less dynamic. Prototypes give you everything classes do and more.</i>",
            "id": "60c6fa40efd61c7743f58b2dda89f85b"
          },
          {
            "type": "html",
            "text": " Fortunately for us, prototypes aren't going away.  You still can have prototypes.  Classes, as it turns out, are just a way of writing constructors, a feature which prototype-languages typically lack.",
            "id": "c9938bf2dce73e9d4cdda640d54817ff"
          },
          {
            "type": "html",
            "text": "\nI think some definitions of \"object-oriented\" are limited due to the nature of popular OO languages. I haven't used [[Java Script]] directly, but I have used a prototypical language. The prototype is really just a delegate, which from a certain perspective is all that inheritance is, except that delegation is a run-time association between objects, while inheritance is compile time, therefore delegation is more flexible. Polymorphism can exist without inheritance. As a matter of fact, delegation promotes composition, which in turn promotes polymorphism. -- [[Greg Vaughn]]",
            "id": "834d4ddf76fe4e1d73ad9e4003650d43"
          },
          {
            "type": "html",
            "text": "\nI haven't tried this in [[Java Script]], but if it's truly Self-like, then you don't need to do name-mangling to accomplish inheritance. Instead, you adopt a Smalltalk-style metastructure as a matter of convention, including a process and method execution model. Then, by convention, every \"prototype\" delegates every method to its \"class\", which looks in its metaclass to see how to interpret it. Since delegation *is* inheritance, you'll get what you want.",
            "id": "95a625d92ebfd1a841688c2542b5df95"
          },
          {
            "type": "html",
            "text": "[[Java Script]] supports true [[Lexical Closure]]s via function literals. A closure (also known as [[Lambda Expression]]s after LISP - where they probably originated) is simply an anonymous sub-routine that closes over the namespace of lexical variables within the scope of the block that defines the function body.",
            "id": "e619b54705a26473d1f07baf7e5389f8"
          },
          {
            "type": "html",
            "text": "\nFor some interesting use of closure-like behavior for [[Java Script]] event callbacks, see BeyondJS [[http://w3future.com/html/stories/callbacks.xml w3future.com]].",
            "id": "3dea9c9026f8479a84e41dc81467c712"
          },
          {
            "type": "html",
            "text": "\n[[Java Script]] is an interesting language. Arrays, objects, maps ([[Associative Array]]) are all unified. Members seem to be rather like slots in the [[Self Language]]. The way objects can inherit from one another is very dynamic. I think you could do quite a slick UI framework for [[Java Script]]. <i>Yes, you could, and you might end up with something like [[Mozilla Xul]].</i>",
            "id": "f5894255babc49b126ffdafb70a0a541"
          },
          {
            "type": "html",
            "text": "\n[[Micro Soft]] are working on adding [[Static Type Safety]] support: [http://msdn.microsoft.com/workshop/languages/clinic/scripting07142000.asp msdn.microsoft.com]",
            "id": "f3af38d07a1fe80aedada06ea62c4233"
          },
          {
            "type": "html",
            "text": "<b>Testimonials</b>",
            "id": "9271ac26b84c06797e13dfea87756500"
          },
          {
            "type": "html",
            "text": "\nMy friend [[Nick Simons]] has got surprisingly passionate in favour of [[Java Script]] as a pretty good object language in recent months. -- [[Richard Drake]]",
            "id": "2fc58ec73bc0028af5ae148be95287b4"
          },
          {
            "type": "html",
            "text": "<b>Cross-platform compatibility</b>",
            "id": "a49c485681095c5e64e4fe49ef8341e1"
          },
          {
            "type": "html",
            "text": "\nThe [[Achilles Heel]] of [[Java Script]] is its inconsistent behavior across the various platform/browser combinations. As a result, it is virtually impossible to use it to do anything robust on the client side. -- [[Tom Stambaugh]]",
            "id": "77f5723fa69daac414d7611726c608fc"
          },
          {
            "type": "html",
            "text": "\nYes, a big problem with writing [[Java Script]] for the browser is the inconsistencies of its implementation across the various browsers. Take a look at my [[Js Unit]]. It's a unit testing framework for running [[Java Script]] [[Unit Test]]s inside the target browser. A nice side-effect of this is that you could run your tests in your target browsers. -- [[Edward Hieatt]]",
            "id": "a94ac3054bf50e155b46588b74ca11a9"
          },
          {
            "type": "html",
            "text": "\nSorry, I can't agree at all. Ok, due to differences between the Explorer and Netscape versions there is some confusion. But I always try to write in unicode: one single version of a homepage for both. Period. Try looking at my page on French verbs conjugations - [http://verbes.eduinfo.com verbes.eduinfo.com] -- [[Pieter Jansegers]]",
            "id": "5610ffd258cdbd550d2dda521e6be37f"
          },
          {
            "type": "html",
            "text": "\nI disagree with the points about inconsistencies in implementation. If you say that about [[Java Script]] then you must say the same thing about HTML. Netscape provides very good documentation on its [[Dev Edge]] website and if you follow their guidelines then you will be able to write script that works in version 3 & 4 browsers ([[Java Script]] 1.2) and version 5 browsers ([[Java Script]] 1.5) with very very few problems.",
            "id": "32b6a4431ac81ebc4c0e800edb800d97"
          },
          {
            "type": "html",
            "text": "\nThe inconsistency problem manifests itself significantly in implementation of DHTML and DOM - particularly in version 4 browsers - but this can be overcome by writing an abstract API that either uses switching or the [[Bridge Pattern]]. [[Java Script]] is actually a lot more flexible than is commonly believed. -- [[Walter Rumsby]]",
            "id": "d53c03df748550e22a11fcaf886e3d24"
          },
          {
            "type": "html",
            "text": "\nIt is quite possible to write compatible code as long as you do not use the [[Document Object Model]] (which is not part of the language definition anyway). Take a look at my [[Js Unit]], which is available for a big number of environments as long as their engine is based on the ECMA standard. -- Jörg Schaible",
            "id": "e5f9839eebea5f221ab5719051c2ba62"
          },
          {
            "type": "html",
            "text": "\nIn short, [[Java Script]] suffers from a [[Tightly Coupled Reputation]] problem ([[Java Script Sucks In Browsers]]).",
            "id": "59d92114a4a9ca9065d8c0a154a5cba2"
          },
          {
            "type": "html",
            "text": "<b>[[Java Script]] and Wiki</b>",
            "id": "17ce104e6fa833f311d037005fb84c24"
          },
          {
            "type": "html",
            "text": "\nIs there some [[Java Script Enabled Wiki]]? -- [[Fridemar Pache]]",
            "id": "e467370347ec00e663ef87cd72bc37d0"
          },
          {
            "type": "html",
            "text": "\nYes, check out Jeremy Ruston's [[Tiddly Wiki]] ([http://www.tiddlywiki.com/ www.tiddlywiki.com]) - the original is stand-alone HTML with all logic implemented in JS. There're now several spin-offs using PHP/MySQL... -- [[Karsten Schmidt]]",
            "id": "2457660c4a7d337ef9dff606ef77f391"
          },
          {
            "type": "html",
            "text": "\nDoes anyone knows of any library (or way) that allows to write [[Java Script]] CGIs? I'm planning on writing a [[Wiki Wiki Web]] in [[Java Script]], I've found a really neat interpreter/byte-code compiler and it's a great way to learn the programming language (not the DOM/browser stuff)... Thanks! -- [[David De Lis]]",
            "id": "eb95c6ea5ece5037202c3511ceb6cff5"
          },
          {
            "type": "html",
            "text": "\nI may have misunderstood the question here, but if you use ASP you can use JScript to write server side code. -- [[Tobin Harris]]",
            "id": "5d897da873e2158bbfe3fa8fde8aa48f"
          },
          {
            "type": "html",
            "text": "<i>No, I meant [[Java Script]] as an application building language, like C++ or Java, not as server-side stuff. I've written a small CGI library that allows me to access the query_string variables, but it's pretty weak, I'd prefer to work with one already done. Anyway...</i> -- [[David De Lis]]",
            "id": "d71f800b7bfad9d4c9e5f0fdba515823"
          },
          {
            "type": "html",
            "text": " The [[Spider Monkey]] project generates a standalone executable as a reference implementation.",
            "id": "f6670ee2a912957363f798741a8f56bc"
          },
          {
            "type": "html",
            "text": "\nI am interested in using [[Java Script]] and Wiki as a way of building a [[Filesystem Based Wiki]] or a [[Wiki For Literate Programming]]. -- [[Andy Glew]]",
            "id": "977ece46aa77a4ccc3d507a314a3104b"
          },
          {
            "type": "html",
            "text": "<b>Future</b>",
            "id": "44a58827fc48cd3c9ec39d86dba51d9a"
          },
          {
            "type": "html",
            "text": "\nHave you looked at the proposal of [[Java Script]] 2.0? The ECMA TC39 group is working with the proposed draft at [http://www.mozilla.org/js/language/js20/index.html www.mozilla.org] .#23You can find a lot of resources on [[Java Script]] on the Mozilla project page [http://www.mozilla.org/js/language/ www.mozilla.org] as well...",
            "id": "07d8b48ac7a8b37522ed897a4e61b9d1"
          },
          {
            "type": "html",
            "text": "\nTwo compilers that translate [[Java Script]] 2.0 to [[Java Script]] 1.X are Jangaroo ([http://www.jangaroo.net/ www.jangaroo.net]) and Mascara ([http://ecmascript4.com/ ecmascript4.com]).",
            "id": "45846a8aaa65845dc73c2176512e5705"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\nDon't forget the Netscape [[Java Script]] console - type javascript: into the URL field - better than dosument.write or alert() for tracing variables, etc. -- [[Dave Everitt]]",
            "id": "6106899d69bfd5e801c8955831f018da"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\nIf used appropriately, [[Java Script]] is an easy and effective tool for creating dynamic Web-based interfaces for proprietary Intranet applications.",
            "id": "e139275edbf5f671f951530c8b30f986"
          },
          {
            "type": "html",
            "text": "<i>As long as you have some form of defence against [[Cross Site Scripting Exposure]], attacks from people outside who know what you're using inside.</i>",
            "id": "f350d2babf3293c0af3235ed72d0a688"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\nI only found out about Wiki yesterday, but I have been using a guestbook which stores the updates in [[Java Script]] function calls. My Web pages include these and I provide the code to be called.",
            "id": "ffc86a6a5f8d43c023ec416db911ea64"
          },
          {
            "type": "html",
            "text": "\nThis makes [[Java Script]] really useful, as you can update the data on a page.",
            "id": "1e43ef2da98080ef3ba0dfb904cc8031"
          },
          {
            "type": "html",
            "text": "\nHave a look at [http://www.btinternet.com/~doug.h.rice/gbbook www.btinternet.com] (broken link: unhosted) and [http://www.dougrice.plus.com/gbbook/ www.dougrice.plus.com].",
            "id": "c8aea9f5912cae9a94cf89e32493d0d9"
          },
          {
            "type": "html",
            "text": "\nI hoped that BTOpenworld would provide the guestbook script that saves [[Java Script]] Function Calls along side their normal guestbook script, but I need help in working out how it would make them money.",
            "id": "b15ff5b2e00e296b2c5cadc8bc11a7e4"
          },
          {
            "type": "html",
            "text": "\nIt allows me to knock together simple applications quickly, and avoid a lot of the complications of server side programming.",
            "id": "93114928ce9b4fbd7e8a78baab254c02"
          },
          {
            "type": "html",
            "text": "\nFrom my limited knowledge of the PHP/MySQL solution, your database query gives you an array of the data from the database search. My idea gives you an array of data, it's just all the data that the guestbook users post in the order that they post the data.",
            "id": "8d33d8ac5bedb75fead868c7d77cbe4c"
          },
          {
            "type": "html",
            "text": "\nIt is similar to Wiki.",
            "id": "558f0ee3cb3461a27fe85ee756e380f4"
          },
          {
            "type": "html",
            "text": "-- [[Doug Rice]]",
            "id": "585e9001f134378fc12155e0d0dd238d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\nA nice feature of [[Java Script]] is its treatment of functions as first class objects, which allows Closures and [[Higher Order Function]]s.",
            "id": "3aea23b8a7dde5de3b3aa011d5ae26f9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "<b>For more information on [[Java Script]] see:</b>",
            "id": "9326155b6d82a9292668800555f5410f"
          },
          {
            "type": "html",
            "text": " [http://en.wikipedia.org/w/wiki.phtml?search=JavaScript en.wikipedia.org]",
            "id": "7606f16d196937476d59a3b02d3fe399"
          },
          {
            "type": "html",
            "text": " [http://c2.com/cgi/wiki?search=JavaScript c2.com]",
            "id": "77c9e81e566cf62b6148c5f4050e4114"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "<b>Some [[Java Script]] Tutorials</b>",
            "id": "9467bb32bf3bf2c837f5c3374f58223b"
          },
          {
            "type": "html",
            "text": " [http://www.afterhoursprogramming.com/tutorial/JavaScript/Introduction/ www.afterhoursprogramming.com]",
            "id": "ace2de514a6c789aca86efe5bb491135"
          },
          {
            "type": "html",
            "text": " [http://www.geocities.com/binnyva/code/javascript/basic_tutorial/index.html www.geocities.com]",
            "id": "127c87327e1799763029f1215831477b"
          },
          {
            "type": "html",
            "text": " [http://www.geocities.com/SiliconValley/Station/4320/ www.geocities.com]",
            "id": "d466d914754cd131a2bb91dd7b17190c"
          },
          {
            "type": "html",
            "text": " [http://www.yourhtmlsource.com/javascript/basicjavascript.html www.yourhtmlsource.com]",
            "id": "909519b0303a2f9a3f0d8b9641563910"
          },
          {
            "type": "html",
            "text": " [http://hologuides.com/JavaScript/ hologuides.com]",
            "id": "d07b3734470b4b5839b1a120812b6d24"
          },
          {
            "type": "html",
            "text": " [http://eloquentjavascript.net/ eloquentjavascript.net]",
            "id": "5fc411356ce61550efb2a4b1b7d97bba"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "<b>Presentation</b>",
            "id": "d7e7e34fb61610995fbe2040072c87f4"
          },
          {
            "type": "html",
            "text": "\n[[Java Script]] is a [[Scripting Language]]. See the definition at: [http://en.wikipedia.org/w/wiki.phtml?search=scripting+language en.wikipedia.org]",
            "id": "d3bc3a2297322737112e3660e49aa213"
          },
          {
            "type": "html",
            "text": "\n[[Java Script]] enables you to write fixed menus easily and quickly--pull-down menus, windows, menus for the right click of the mouse and other things (given the right environment).",
            "id": "7444d41d092f1cfe459dda3fdf50901d"
          },
          {
            "type": "html",
            "text": "\nA non-programmer thinks, \"For those who can't put together 3 lines of code in any language, javascript is god-send!\" It's actually a product of Netscape and subsequent contributors and is [[Just Another Programming Language]], though one shaped by its birth within the framework of a [[Web Browser]].",
            "id": "8b8c0f5301e187bb05446d99e998f688"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "Paste the following as js.html in a local text file and open in your browser you can edit and run simple [[Java Script]] code in the text field without refreshing (the button calls the eval() function). A simple ide for learning.",
            "id": "4008c4e98ac1e15f1264400c5ac04191"
          },
          {
            "type": "code",
            "text": " <html>\n  <head><title>Eval()</title>\n  <script language=\"JavaScript\">\n  <!--\n    function evaluate()\n    {\n      //document.forms[0].out.value = \n        eval(document.forms[0].field.value);\n    }\n  -->\n  </script>\n  </head>\n  <body>\n    <form>\n      <input type=\"button\" name=\"go\" value=\"go\" onClick=\"evaluate()\"><p>\n      <textarea rows=\"20\" cols=\"40\" name=\"field\">\n //start code   ",
            "id": "3fd3a75bdb36cf2a18ad8af749a48e89"
          },
          {
            "type": "code",
            "text": " init();\n o.m1(1);",
            "id": "6d9005c5f8e5e2725bfde75b4a78b98f"
          },
          {
            "type": "code",
            "text": " function init()\n {\n  o = new Object();\n  o.a1 = 0;",
            "id": "0297018299511bc6ea7e30374891e664"
          },
          {
            "type": "code",
            "text": "  o.m1 = function(x)\n  {\n    alert(\"before:\"+this.a1);\n    this.a1 = x;\n    alert(\"after:\"+this.a1);\n  }\n }",
            "id": "6c788cf6ce4826d632a14534902e9df6"
          },
          {
            "type": "code",
            "text": " //end code\n      </textarea>\n      <textarea rows=\"20\" cols=\"40\" name=\"out\">\n      </textarea>\n    </form>\n  </body>\n </html>",
            "id": "30fe0ab1440b7b5d2891e47bbcfa7d87"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\nSome [[Java Script]] oddities and bugaboos:",
            "id": "f74f4dcd87a201d21bb8ccba136e6f1e"
          },
          {
            "type": "html",
            "text": " Variable declarations are optional (much like [[Basic Language]]); though if you read an undeclared variable before writing to it you'll get an error. (Writing to an undeclared variable declares it - <i>in the global scope</i>.)",
            "id": "c67f09cdb9d4e14c5eb772c9929e4810"
          },
          {
            "type": "html",
            "text": " Language is [[Weakly Typed]], and the automatic coercions that it does can produce surprising results. \"2\" + \"3\" is \"23\" (+, when applied to two strings, performs concatenation); \"2\" * \"3\" is 6. (Multiplication not defined for strings; so the language tries converting them to numerals, succeeds, and multiplies those). This can be surprising. <i>Is it? It's the same behaviour as other languages, e.g. python. -- Greg Bowyer</i> Nope. Python says \"2\"+\"3\" is \"23\", \"2\" * 3 is \"222\", and \"2\" * \"3\" and \"2\"+3 are type errors.",
            "id": "32121770eca999503ffb8ac816942317"
          },
          {
            "type": "html",
            "text": " Rather annoying gotcha in array constructor. new Array() returns a newly created empty array; new Array(2,3) returns a newly-created array with 2 and 3 as its two elements. new Array(5) does <i>not</i> return a newly-created array with 5 as its single element; instead, it returns a 5-element array! <i>Use new Array(length) to create a sized array, use var myArray = [2, 3, 4, 5] to define an array</i>",
            "id": "5050c667159b731555ed956ffac40fd2"
          },
          {
            "type": "html",
            "text": " Whereas most languages have one universal singular value (null/nil/Void/whatever); [[Java Script]] has two - \"null\" and \"undefined\". With somewhat interesting and irregular semantics.",
            "id": "3e0f8b6220cdc50bdbfdaafcd837393d"
          },
          {
            "type": "html",
            "text": " No integral types - the only numeric type supported is an IEEE754 double-precision float. For a scripting language, this limitation is probably less obnoxious than it would be elsewhere.",
            "id": "a9cfa024f820d83078a40e2e41d449c6"
          },
          {
            "type": "html",
            "text": " Language has [[Lexical Scoping]], but with an interesting twist. Unlike [[Java Script]]s brethen C/C++/Java/C#/etc, where variables introduced in an anonymous block within a function are only valid within that block; in [[Java Script]] such variables are valid for the entire function. In other words:",
            "id": "52cf48fa17b55d6dff74bcbef5076eb8"
          },
          {
            "type": "code",
            "text": " if (a == b)\n {\n     var c = \"Equal!\";\n }",
            "id": "fcfe01fb18139aa45a03881561a88cc4"
          },
          {
            "type": "code",
            "text": " if (c == \"Equal!\") {\n     // do something\n }",
            "id": "99ec0f8a9580e696ba4e70e1be19dc84"
          },
          {
            "type": "html",
            "text": "is legal [[Java Script]]. If the first condition is not true, c will evaluate to \"undefined\". ",
            "id": "15b421bbc069e4a26c43701a4a183c4d"
          },
          {
            "type": "html",
            "text": " Semicolons are optional in [[Java Script]]; if the parser sees a line break, it will try and interpret the two lines as separate statements (if it can't, it then tries to interpret them as a single statement). This too can produce surprising results.",
            "id": "018688fee9eb798cebc005cec823d9ce"
          },
          {
            "type": "html",
            "text": " It is not precisely true that semicolons are optional. The syntax actually requires them, and the rules for inserting them automatically are almost the exact opposite (it is only tried if it is a syntax error without one and if other additional conditions are met). There are plenty of situations where a newline is not sufficient, semicolon insertion won't take place, and it won't do what you expect. For this reason pretty much every serious javascript programmer considers it a misfeature.",
            "id": "c9c1d08cde4fc56319dd0324fb433520"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "Some of the claims here may overstate the power of [[Java Script]]. While the language itself may, given an ideal engine in an ideal environment, provide everything mentioned, there are still important shortcomings that need to be addressed before a [[Java Script Ide]] can be competitive with Smalltalk (my benchmark).",
            "id": "b41db7f63b145a8f139871d2ecc3da65"
          },
          {
            "type": "html",
            "text": "\nIn particular, what if any execution model is implied by the language, and how much of that model can be surfaced in the environment? Can I get at things comparable to stack frames, activation records, and so on? Is there a real process model (real in the sense that I can do multi-threaded things)?",
            "id": "cf9f3e42f2b0b4ac7a63f97881d76b2a"
          },
          {
            "type": "html",
            "text": "\nHow hard would it be to support a basic Smalltalk-style debugger/inspector? I note, for example, that the [[Venkman Debugger]] cuts several corners, and appears to dramatically slow the execution while running. Is Venkman the best there is? Is Venkman itself written in [[Java Script]], so that I can change it on the fly?",
            "id": "77b3ea918b018136e045f1bf3bdff077"
          },
          {
            "type": "html",
            "text": "[The short answer is no. The [[Ecma Script]] language standard itself is minimal and doesn't specify anything about threading or processes or even an execution model. It is intended to be extended, though, so an implementation of [[Java Script]] with these features certainly would be possible. Venkman, as with all XUL applications, is implemented in [[Java Script]] but I believe the JS engine that powers the application is separate from the JS engine that executes the code Venkman looks at (and the JS code that runs on web pages).]",
            "id": "27b3d057e1611022a6ffa9ea97d607ce"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "\n[[Douglas Crockford]] has articles about how to use [[Java Script]] in an object-oriented fashion at [http://www.crockford.com www.crockford.com]. He also has an article called <i>[[Java Script]]: The World's Most Misunderstood Programming Language</i> that I like a lot. -- [[Chad Skeeters]]",
            "id": "5d0fa8837ab44fe5bdcf71fa8942d276"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "<b>[[Java Script]] [[Quick Questions]]</b>",
            "id": "129935ddab3bb02bc2ad7b3641c8863b"
          },
          {
            "type": "html",
            "text": "<b>Q</b> Serverside Javascripts on Microsoft IIS. Any benefits to using it instead of [[Vb Script]]?",
            "id": "e9af274be53d78f2e2f75755135c1bc0"
          },
          {
            "type": "html",
            "text": "<b>Answer:</b> Yes, you can share function and code snippets that can be used on both the server and client side, like form validation, error checking (but not handling), or other more complex algorithms, like regex's.",
            "id": "1d218c1e04368b5bd881182b5425e6b1"
          },
          {
            "type": "html",
            "text": "\nThat, and [[Vb Script]] sucks in comparison. It doesn't have exception handling, anonymous functions, prototypes, or a good culture in general.",
            "id": "53a19807c826e41aab13936c545720b4"
          },
          {
            "type": "html",
            "text": "<b>Question:</b> Any recomendations on books? Something like [[Java Script For Programmers]], not [[Java Script For Total Morons]], please.",
            "id": "06c982f6f89b2937ce8d27e5f73e2727"
          },
          {
            "type": "html",
            "text": "<b>Answer:</b> Check out the book list on [[Iwanna Learn Java Script]].",
            "id": "bfa6e4853b72bc79b61af561849c1878"
          },
          {
            "type": "html",
            "text": "<b>Question:</b> Is there any mechanism for [[Java Script]] to communicate information between frames and windows in a browser? (e.g. like 'cookies' for [[Java Script]], but NOT delivered as part of the HTTP request header? - i.e. kept purely client-side?)",
            "id": "46b719f7c2352e4c08ee9da2e8734a6b"
          },
          {
            "type": "html",
            "text": "<b>Answer:</b> Yes. When a frame named frame1 wants to access a frame named frame2, it can do so via parent.frame2. See, e.g., the \"Writing to Other Frames and Windows\" section of <i>[[Dynamic Html The Definitive Reference]]</i> from [[Oreilly And Associates]].",
            "id": "a9887583a804e9835940d2fd994bb854"
          },
          {
            "type": "html",
            "text": "<b>Question:</b> That does not seem very cookie-like, since the communication requires knowing ahead of time (by name) <i>exactly</i> which other frames and windows will be involved in the communication. Is there a way to do this Can one do it <i>without</i> knowing the 'names' of these other windows and frames? (My goal is [[Hmac User Authentication]] for [[Wiki Ide]], and this would just make it <i>convenient</i> by automatically logging in on all pages by entering username and password on one page.)",
            "id": "64505bd5e83efad68ccb1ef495ecf19f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "See [[Ecma Script]], [[Java Script Rocks]], [[Java Script Sucks]], [[Java Script Coding Standard]], [[Open Source Java Script]], [[Java Script Enabled Wiki]], [[Wiki With Programmable Content]], [[Visual Java Script]], [[Java Script Object Notation]](JSON)",
            "id": "df136973801d35145ca4cc4b4c518fde"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "25b0a800773abae8eb57a15f69958a8f"
          },
          {
            "type": "html",
            "text": "[[Category Programming Language]] [[Category Java Script]] [[Category Web Design]] [[Category Prototype Programming]]",
            "id": "f11253465727a17b63a4e3442aba8a28"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?JavaScript c2.com]",
            "id": "8f35de6498c37c4cf9c0e47d243066aa"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1674055900475
    }
  ]
}