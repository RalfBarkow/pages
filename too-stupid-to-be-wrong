{
  "title": "Too Stupid to be Wrong",
  "story": [
    {
      "type": "paragraph",
      "id": "eaf2f6e9e8ba8ca2",
      "text": "The original wiki was collaboration software that knew little about collaboration. This left lots of room for its users to invent new ways to work. [[Federated Wiki]] extends this tradition with pluggable [[Algorithm]]s that need not be complex to be valuable."
    },
    {
      "type": "paragraph",
      "id": "b62c299a7d5755d8",
      "text": "The tradition in [[Automation]] has been to make the computer work better than the people it replaced. We hope to save a place for ourselves among the artificial  super-intelligences by relegating them to assistive technology. I suggest we have the opportunity now by making our programs too stupid to be wrong."
    },
    {
      "type": "markdown",
      "id": "e1510a8399b7e9cf",
      "text": "# Markup"
    },
    {
      "type": "paragraph",
      "id": "3e6ac22125be5a39",
      "text": "Wiki offered the opportunity to share [[Hypertext]] through the same interface one used to read, the browser. The hypertext markup language, html, was already too complex for casual writing so wiki used its own conventions specific to every site."
    },
    {
      "type": "paragraph",
      "id": "90b8cca3c2991fa9",
      "text": "Within the federation we promote interchangeability by offering a suite of simple markups each with their own strengths. We extend this further with pluggable interpreters for work specific markups which have only to be useful enough to be used."
    },
    {
      "type": "markdown",
      "id": "9821e2f5838dac25",
      "text": "# Talk"
    },
    {
      "type": "paragraph",
      "id": "73c9f0a3662f8e79",
      "text": "We consider first how we talk about the work we will do. What words do we use in a given task? If a plugin knew only a couple of these could it be useful? Yes, probably."
    },
    {
      "type": "paragraph",
      "id": "b965c5be8f09c97f",
      "text": "A plugin need address only a given task and then only the parts that aren't yet served well by the existing plugins. What new need for words does the task bring?"
    },
    {
      "type": "paragraph",
      "id": "93fc92236de1a8f1",
      "text": "A telegraph operator brings dots and dashes."
    },
    {
      "type": "paragraph",
      "id": "37c83796b514d9a9",
      "text": "A chess player brings kings and queens."
    },
    {
      "type": "paragraph",
      "id": "a0a77f30a74d0d45",
      "text": "We will look at these two examples though there are many more among the catalog of plugins."
    },
    {
      "type": "paragraph",
      "id": "afc13f3f73eff0e5",
      "text": "Notice that all of these plugins are more interesting that a similarly limited desktop application because of the persistence, revision history and sharing provided by wiki."
    },
    {
      "type": "markdown",
      "id": "179d4a36f96c9946",
      "text": "# Morse"
    },
    {
      "type": "paragraph",
      "id": "0d8fe1d192cf08d3",
      "text": "Radio telegraphers talk with the sounds of dots and dashes. To learn, one must hear these sounds over and over until they are perceived as letters or even words. Our MorseTeacher plugin knows that \".\" means a short sound and \"-\" means a longer one. From this we explain an alphabet."
    },
    {
      "type": "code",
      "id": "400c202ed4bfd58b",
      "text": "a .-\nb -...\nc -.-.\nd -.."
    },
    {
      "type": "paragraph",
      "id": "c131919b88953f65",
      "text": "Telegraphers use abbreviations that are easily heard as words. They would send cq as short for I \"seek you\". If you learn the sounds of c and q then you will recognize this in most every radio conversation. Here is a plugin configured to teach you this."
    },
    {
      "type": "code",
      "id": "e38d77494b726659",
      "text": "c -.-.\nq --.-"
    },
    {
      "type": "morseteacher",
      "id": "37510e55428cad3a",
      "text": "c -.-. 50\nq --.- 50"
    },
    {
      "type": "markdown",
      "id": "4a937fea94849042",
      "text": "# Chess"
    },
    {
      "type": "paragraph",
      "id": "60b596cd260334de",
      "text": "Chess is played six kinds of pieces a checkerboard with rows numbered 1 to 8 and columns a to f. Different speakers use different languages to name the pieces but unicode offers universal glyphs for all in two colors."
    },
    {
      "type": "paragraph",
      "id": "6fcd25149fddb23f",
      "text": "♛ ♚ ♝ ♞ ♜ ♟ black"
    },
    {
      "type": "paragraph",
      "id": "a7c4528bba77e1df",
      "text": "♕ ♔ ♗ ♘ ♖ ♙ white"
    },
    {
      "type": "paragraph",
      "id": "4f2963f1ec6e4cad",
      "text": "Here we markup the starting board positions using the \"algebraic\" notation of piece-column-row. Our markup gets positions from the letters, not the placement in text."
    },
    {
      "type": "code",
      "id": "2a5fe11e81ab7d14",
      "text": "♙a2 ♙b2 ♙c2 ♙d2 ♙e2 ♙f2 ♙g2 ♙h2\n♖a1 ♘b1 ♗c1 ♕d1 ♔e1 ♗f1 ♘g1 ♖h1"
    },
    {
      "type": "paragraph",
      "id": "4b6a1945245dda98",
      "text": "We could as easily put checkers on the board or hearts and spades or any other element unicode offers. Here we use only white queens to solve the eight queens puzzle."
    },
    {
      "type": "code",
      "id": "5d583fe7237b483d",
      "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕g6 ♕h4"
    },
    {
      "type": "chess",
      "id": "1e0879c1c8f77884",
      "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕g6 ♕h4"
    },
    {
      "type": "markdown",
      "id": "b5c7068cf92af98d",
      "text": "# Initialization"
    },
    {
      "type": "paragraph",
      "id": "d074738f0e8993cd",
      "text": "We've shown examples of two programs that could have been made more complete by adding, say, knowledge of the Morse alphabet, or, enforcing the movement rules of chess. We've stopped short leaving that to be captured in markup or in how real collaborators choose to use it. This leaves us free to express the nonconforming examples we've shown here."
    },
    {
      "type": "paragraph",
      "id": "ec76404f9ef8f60f",
      "text": "One may be surprised when calling up MorseTeacher or a Chess board that they don't automatically come initialized. Instead we provide ready-to-use examples on the About pages accessible from the editor with cmd/alt-i."
    },
    {
      "type": "paragraph",
      "id": "019fb1b00dff9fd9",
      "text": "See [[About MorseTeacher Plugin]] for a good order to learn."
    },
    {
      "type": "paragraph",
      "id": "1d24e0a1b84e7209",
      "text": "See [[About Chess Plugin]] for starting positions."
    },
    {
      "type": "paragraph",
      "id": "f6e803da7d9f0151",
      "text": "We've also suggested that a search of morse or chess should find these pages but they don't but might soon."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Too Stupid to be Wrong",
        "story": []
      },
      "date": 1488136258736
    },
    {
      "item": {
        "type": "factory",
        "id": "eaf2f6e9e8ba8ca2"
      },
      "id": "eaf2f6e9e8ba8ca2",
      "type": "add",
      "date": 1488136349596
    },
    {
      "type": "edit",
      "id": "eaf2f6e9e8ba8ca2",
      "item": {
        "type": "paragraph",
        "id": "eaf2f6e9e8ba8ca2",
        "text": "The original wiki was collaboration software that knew little about collaboration. This left lots of room for its users to invent new ways to work. Federated wiki extends this tradition with pluggable algorithms that need not be complex to be valuable."
      },
      "date": 1488136627996
    },
    {
      "type": "add",
      "id": "b62c299a7d5755d8",
      "item": {
        "type": "paragraph",
        "id": "b62c299a7d5755d8",
        "text": "The tradition in automation has been to make the computer work better than the people it replaced. "
      },
      "after": "eaf2f6e9e8ba8ca2",
      "date": 1488136983856
    },
    {
      "type": "edit",
      "id": "b62c299a7d5755d8",
      "item": {
        "type": "paragraph",
        "id": "b62c299a7d5755d8",
        "text": "The tradition in automation has been to make the computer work better than the people it replaced. Even in AI there is the wish that the super-intelligence cooperates with mortals as assistive technology. I suggest there is an opportunity for the opposite, software too stupid to be wrong."
      },
      "date": 1488137126041
    },
    {
      "type": "edit",
      "id": "b62c299a7d5755d8",
      "item": {
        "type": "paragraph",
        "id": "b62c299a7d5755d8",
        "text": "The tradition in automation has been to make the computer work better than the people it replaced. Even in AI there is the wish that the super-intelligence cooperates with mortals as assistive technology. I suggest there is an opportunity for the opposite, too stupid to be wrong."
      },
      "date": 1488137148784
    },
    {
      "type": "add",
      "id": "e1510a8399b7e9cf",
      "item": {
        "type": "paragraph",
        "id": "e1510a8399b7e9cf",
        "text": "# Markup"
      },
      "after": "b62c299a7d5755d8",
      "date": 1488137255695
    },
    {
      "type": "add",
      "id": "3e6ac22125be5a39",
      "item": {
        "type": "paragraph",
        "id": "3e6ac22125be5a39",
        "text": "Wiki offered the opportunity to share hypertext through the same interface one used to read, the browser. The hypertext markup language, html, was already too complex for casual writing so wiki used its own conventions specific to every site."
      },
      "after": "e1510a8399b7e9cf",
      "date": 1488137512000
    },
    {
      "type": "add",
      "id": "90b8cca3c2991fa9",
      "item": {
        "type": "paragraph",
        "id": "90b8cca3c2991fa9",
        "text": "Within the federation we promote interchangeability by offering a suite of simple markups each with their own strengths. We extend this further with pluggable interpreters for work specific markups which have only to be useful enough to be used."
      },
      "after": "3e6ac22125be5a39",
      "date": 1488138007652
    },
    {
      "type": "add",
      "id": "9821e2f5838dac25",
      "item": {
        "type": "paragraph",
        "id": "9821e2f5838dac25",
        "text": "# Talk"
      },
      "after": "90b8cca3c2991fa9",
      "date": 1488138051750
    },
    {
      "type": "add",
      "id": "73c9f0a3662f8e79",
      "item": {
        "type": "paragraph",
        "id": "73c9f0a3662f8e79",
        "text": "We consider first how we talk about the work we will do. What words do we use in a given task? If a plugin knew only a couple of these could it be useful? Yes, probably so."
      },
      "after": "9821e2f5838dac25",
      "date": 1488138188527
    },
    {
      "type": "edit",
      "id": "73c9f0a3662f8e79",
      "item": {
        "type": "paragraph",
        "id": "73c9f0a3662f8e79",
        "text": "We consider first how we talk about the work we will do. What words do we use in a given task? If a plugin knew only a couple of these could it be useful? Yes, probably."
      },
      "date": 1488138196844
    },
    {
      "type": "add",
      "id": "b965c5be8f09c97f",
      "item": {
        "type": "paragraph",
        "id": "b965c5be8f09c97f",
        "text": "A plugin need address only a given task and then only the parts that aren't yet served well by the existing plugins. What new need for words does the task bring?"
      },
      "after": "73c9f0a3662f8e79",
      "date": 1488138473944
    },
    {
      "type": "add",
      "id": "93fc92236de1a8f1",
      "item": {
        "type": "paragraph",
        "id": "93fc92236de1a8f1",
        "text": "A telegraph operator brings dots and dashes."
      },
      "after": "b965c5be8f09c97f",
      "date": 1488138494465
    },
    {
      "type": "add",
      "id": "37c83796b514d9a9",
      "item": {
        "type": "paragraph",
        "id": "37c83796b514d9a9",
        "text": "A chess player brings kings and queens."
      },
      "after": "93fc92236de1a8f1",
      "date": 1488138532703
    },
    {
      "type": "add",
      "id": "a0a77f30a74d0d45",
      "item": {
        "type": "paragraph",
        "id": "a0a77f30a74d0d45",
        "text": "We will look at these two examples though there are many more among the catalog of plugins."
      },
      "after": "37c83796b514d9a9",
      "date": 1488138651921
    },
    {
      "type": "add",
      "id": "179d4a36f96c9946",
      "item": {
        "type": "paragraph",
        "id": "179d4a36f96c9946",
        "text": "# Morse"
      },
      "after": "a0a77f30a74d0d45",
      "date": 1488138665377
    },
    {
      "type": "add",
      "id": "0d8fe1d192cf08d3",
      "item": {
        "type": "paragraph",
        "id": "0d8fe1d192cf08d3",
        "text": "Radio telegraphers talk with the sounds of dots and dashes. To learn, one must hear these sounds over and over until they are perceived as letters or even words. Our MorseTeacher plugin knows that \".\" means a short sound and \"-\" means a longer one. From this we explain an alphabet."
      },
      "after": "179d4a36f96c9946",
      "date": 1488139110152
    },
    {
      "item": {
        "type": "factory",
        "id": "400c202ed4bfd58b"
      },
      "id": "400c202ed4bfd58b",
      "type": "add",
      "after": "0d8fe1d192cf08d3",
      "date": 1488139114929
    },
    {
      "type": "edit",
      "id": "400c202ed4bfd58b",
      "item": {
        "type": "code",
        "id": "400c202ed4bfd58b",
        "text": "a .-\nb -...\nc -.-.\nd -.."
      },
      "date": 1488139177073
    },
    {
      "item": {
        "type": "factory",
        "id": "c131919b88953f65"
      },
      "id": "c131919b88953f65",
      "type": "add",
      "after": "400c202ed4bfd58b",
      "date": 1488139213477
    },
    {
      "type": "edit",
      "id": "c131919b88953f65",
      "item": {
        "type": "paragraph",
        "id": "c131919b88953f65",
        "text": "Telegraphers use abbreviations that are easily heard as words. They would send cq as short for I \"seek you\". If you learn the sounds of c and q then you will recognize this in most every radio conversation. Here is a plugin configured to teach you this."
      },
      "date": 1488139366679
    },
    {
      "item": {
        "type": "factory",
        "id": "e38d77494b726659"
      },
      "id": "e38d77494b726659",
      "type": "add",
      "after": "c131919b88953f65",
      "date": 1488139371958
    },
    {
      "type": "edit",
      "id": "e38d77494b726659",
      "item": {
        "type": "code",
        "id": "e38d77494b726659",
        "text": "c -.-.\nq --.-"
      },
      "date": 1488139402691
    },
    {
      "item": {
        "type": "factory",
        "id": "37510e55428cad3a"
      },
      "id": "37510e55428cad3a",
      "type": "add",
      "after": "e38d77494b726659",
      "date": 1488139411781
    },
    {
      "type": "edit",
      "id": "37510e55428cad3a",
      "item": {
        "type": "morseteacher",
        "id": "37510e55428cad3a",
        "text": "c -.-. 50\nq --.- 50"
      },
      "date": 1488139436447
    },
    {
      "type": "edit",
      "id": "e1510a8399b7e9cf",
      "item": {
        "type": "markdown",
        "id": "e1510a8399b7e9cf",
        "text": "# Markup"
      },
      "date": 1488139462074
    },
    {
      "type": "edit",
      "id": "9821e2f5838dac25",
      "item": {
        "type": "markdown",
        "id": "9821e2f5838dac25",
        "text": "# Talk"
      },
      "date": 1488139464701
    },
    {
      "type": "edit",
      "id": "179d4a36f96c9946",
      "item": {
        "type": "markdown",
        "id": "179d4a36f96c9946",
        "text": "# Morse"
      },
      "date": 1488139467365
    },
    {
      "item": {
        "type": "factory",
        "id": "4a937fea94849042"
      },
      "id": "4a937fea94849042",
      "type": "add",
      "after": "37510e55428cad3a",
      "date": 1488140671452
    },
    {
      "type": "edit",
      "id": "4a937fea94849042",
      "item": {
        "type": "paragraph",
        "id": "4a937fea94849042",
        "text": "# Chess"
      },
      "date": 1488140680456
    },
    {
      "type": "add",
      "id": "60b596cd260334de",
      "item": {
        "type": "paragraph",
        "id": "60b596cd260334de",
        "text": "Chess is played six kinds of pieces a checkerboard with rows numbered 1 to 8 and columns a to f. Different speakers use different languages to name the pieces but unicode offers universal glyphs for all pieces in two colors."
      },
      "after": "4a937fea94849042",
      "date": 1488142481778
    },
    {
      "type": "add",
      "id": "6fcd25149fddb23f",
      "item": {
        "type": "paragraph",
        "id": "6fcd25149fddb23f",
        "text": "♛ ♚ ♝ ♞ ♜ ♟ black"
      },
      "after": "60b596cd260334de",
      "date": 1488142618579
    },
    {
      "type": "add",
      "id": "a7c4528bba77e1df",
      "item": {
        "type": "paragraph",
        "id": "a7c4528bba77e1df",
        "text": "♕ ♔ ♗ ♘ ♖ ♙ white"
      },
      "after": "6fcd25149fddb23f",
      "date": 1488142624619
    },
    {
      "type": "edit",
      "id": "4a937fea94849042",
      "item": {
        "type": "markdown",
        "id": "4a937fea94849042",
        "text": "# Chess"
      },
      "date": 1488142659654
    },
    {
      "type": "add",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "We markup the initial board positions using the 'algebraic' notation of piece-column-row."
      },
      "after": "a7c4528bba77e1df",
      "date": 1488142823023
    },
    {
      "type": "edit",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "We markup the initial board positions using the \"algebraic\" notation of piece-column-row."
      },
      "date": 1488142837889
    },
    {
      "type": "edit",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "We markup the starting board positions using the \"algebraic\" notation of piece-column-row. Our markup looks at the letters but not where they are placed."
      },
      "date": 1488142873050
    },
    {
      "type": "edit",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "We markup the starting board positions using the \"algebraic\" notation of piece-column-row. Our markup looks at the letters for positions, not were they appear in the text."
      },
      "date": 1488142909906
    },
    {
      "type": "edit",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "We markup the starting board positions using the \"algebraic\" notation of piece-column-row. Our markup gets positions from the letters, not the placement in text."
      },
      "date": 1488142954390
    },
    {
      "item": {
        "type": "factory",
        "id": "2a5fe11e81ab7d14"
      },
      "id": "2a5fe11e81ab7d14",
      "type": "add",
      "after": "4f2963f1ec6e4cad",
      "date": 1488143012916
    },
    {
      "type": "edit",
      "id": "2a5fe11e81ab7d14",
      "item": {
        "type": "code",
        "id": "2a5fe11e81ab7d14",
        "text": "♙a2 ♙b2 ♙c2 ♙d2 ♙e2 ♙f2 ♙g2 ♙h2\n♖a1 ♘b1 ♗c1 ♕d1 ♔e1 ♗f1 ♘g1 ♖h1"
      },
      "date": 1488143017695
    },
    {
      "item": {
        "type": "factory",
        "id": "4b6a1945245dda98"
      },
      "id": "4b6a1945245dda98",
      "type": "add",
      "after": "2a5fe11e81ab7d14",
      "date": 1488143107365
    },
    {
      "type": "edit",
      "id": "4b6a1945245dda98",
      "item": {
        "type": "paragraph",
        "id": "4b6a1945245dda98",
        "text": "We could as easily put checkers on the board or hearts and spades or any other element unicode offers. Here we use only white queens to solve the eight-queens problem."
      },
      "date": 1488143209851
    },
    {
      "item": {
        "type": "factory",
        "id": "5d583fe7237b483d"
      },
      "id": "5d583fe7237b483d",
      "type": "add",
      "after": "4b6a1945245dda98",
      "date": 1488143332445
    },
    {
      "type": "edit",
      "id": "5d583fe7237b483d",
      "item": {
        "type": "code",
        "id": "5d583fe7237b483d",
        "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕h4"
      },
      "date": 1488143336681
    },
    {
      "item": {
        "type": "factory",
        "id": "1e0879c1c8f77884"
      },
      "id": "1e0879c1c8f77884",
      "type": "add",
      "after": "5d583fe7237b483d",
      "date": 1488143341058
    },
    {
      "type": "edit",
      "id": "1e0879c1c8f77884",
      "item": {
        "type": "chess",
        "id": "1e0879c1c8f77884",
        "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕h4"
      },
      "date": 1488143420048,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1488143432167
    },
    {
      "type": "edit",
      "id": "4b6a1945245dda98",
      "item": {
        "type": "paragraph",
        "id": "4b6a1945245dda98",
        "text": "We could as easily put checkers on the board or hearts and spades or any other element unicode offers. Here we use only white queens to solve the eight-queens puzzle."
      },
      "date": 1488143449473
    },
    {
      "type": "edit",
      "id": "4b6a1945245dda98",
      "item": {
        "type": "paragraph",
        "id": "4b6a1945245dda98",
        "text": "We could as easily put checkers on the board or hearts and spades or any other element unicode offers. Here we use only white queens to solve the eight queens puzzle."
      },
      "date": 1488143463247
    },
    {
      "type": "edit",
      "id": "5d583fe7237b483d",
      "item": {
        "type": "code",
        "id": "5d583fe7237b483d",
        "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕g6 ♕h4"
      },
      "date": 1488143604220
    },
    {
      "item": {
        "type": "factory",
        "id": "b5c7068cf92af98d"
      },
      "id": "b5c7068cf92af98d",
      "type": "add",
      "after": "1e0879c1c8f77884",
      "date": 1488143607711
    },
    {
      "type": "edit",
      "id": "1e0879c1c8f77884",
      "item": {
        "type": "chess",
        "id": "1e0879c1c8f77884",
        "text": "♕a5 ♕b3 ♕c1 ♕d7 ♕e2 ♕f8 ♕g6 ♕h4"
      },
      "date": 1488143612249
    },
    {
      "type": "edit",
      "id": "b62c299a7d5755d8",
      "item": {
        "type": "paragraph",
        "id": "b62c299a7d5755d8",
        "text": "The tradition in automation has been to make the computer work better than the people it replaced. We hope to save a place for ourselves among the artificial  super-intelligences by relegating them to assistive technology. I suggest we have the opportunity now by making our programs too stupid to be wrong."
      },
      "date": 1488143934401
    },
    {
      "type": "edit",
      "id": "60b596cd260334de",
      "item": {
        "type": "paragraph",
        "id": "60b596cd260334de",
        "text": "Chess is played six kinds of pieces a checkerboard with rows numbered 1 to 8 and columns a to f. Different speakers use different languages to name the pieces but unicode offers universal glyphs for all in two colors."
      },
      "date": 1488144080012
    },
    {
      "type": "edit",
      "id": "4f2963f1ec6e4cad",
      "item": {
        "type": "paragraph",
        "id": "4f2963f1ec6e4cad",
        "text": "Here we markup the starting board positions using the \"algebraic\" notation of piece-column-row. Our markup gets positions from the letters, not the placement in text."
      },
      "date": 1488144119292
    },
    {
      "type": "edit",
      "id": "b5c7068cf92af98d",
      "item": {
        "type": "paragraph",
        "id": "b5c7068cf92af98d",
        "text": "# Initialization"
      },
      "date": 1488144271355
    },
    {
      "type": "add",
      "id": "d074738f0e8993cd",
      "item": {
        "type": "paragraph",
        "id": "d074738f0e8993cd",
        "text": "We've shown examples of two programs that could have been made more complete by adding, say, knowledge of the Morse alphabet, or, enforcing the movement rules of chess pieces. We've stopped short leaving that to be captured in markup or in how real collaborators choose to use it."
      },
      "after": "b5c7068cf92af98d",
      "date": 1488144477489
    },
    {
      "type": "edit",
      "id": "d074738f0e8993cd",
      "item": {
        "type": "paragraph",
        "id": "d074738f0e8993cd",
        "text": "We've shown examples of two programs that could have been made more complete by adding, say, knowledge of the Morse alphabet, or, enforcing the movement rules of chess pieces. We've stopped short leaving that to be captured in markup or in how real collaborators choose to use it. This leaves us free for the specialized examples we've shown here."
      },
      "date": 1488144507080
    },
    {
      "type": "edit",
      "id": "d074738f0e8993cd",
      "item": {
        "type": "paragraph",
        "id": "d074738f0e8993cd",
        "text": "We've shown examples of two programs that could have been made more complete by adding, say, knowledge of the Morse alphabet, or, enforcing the movement rules of chess pieces. We've stopped short leaving that to be captured in markup or in how real collaborators choose to use it. This leaves us free to express the nonconforming examples we've shown here."
      },
      "date": 1488144552510
    },
    {
      "type": "edit",
      "id": "d074738f0e8993cd",
      "item": {
        "type": "paragraph",
        "id": "d074738f0e8993cd",
        "text": "We've shown examples of two programs that could have been made more complete by adding, say, knowledge of the Morse alphabet, or, enforcing the movement rules of chess. We've stopped short leaving that to be captured in markup or in how real collaborators choose to use it. This leaves us free to express the nonconforming examples we've shown here."
      },
      "date": 1488144624969
    },
    {
      "type": "add",
      "id": "ec76404f9ef8f60f",
      "item": {
        "type": "paragraph",
        "id": "ec76404f9ef8f60f",
        "text": "One may be surprised when calling up MorseTeacher or a Chess board that they don't automatically come initialized. Instead we provide ready-to-use examples on the about pages."
      },
      "after": "d074738f0e8993cd",
      "date": 1488144794969
    },
    {
      "type": "edit",
      "id": "ec76404f9ef8f60f",
      "item": {
        "type": "paragraph",
        "id": "ec76404f9ef8f60f",
        "text": "One may be surprised when calling up MorseTeacher or a Chess board that they don't automatically come initialized. Instead we provide ready-to-use examples on the about pages accessible with cmd/alt-i."
      },
      "date": 1488144859274
    },
    {
      "type": "edit",
      "id": "ec76404f9ef8f60f",
      "item": {
        "type": "paragraph",
        "id": "ec76404f9ef8f60f",
        "text": "One may be surprised when calling up MorseTeacher or a Chess board that they don't automatically come initialized. Instead we provide ready-to-use examples on the About pages accessible from the editor with cmd/alt-i."
      },
      "date": 1488144882539
    },
    {
      "type": "add",
      "id": "019fb1b00dff9fd9",
      "item": {
        "type": "paragraph",
        "id": "019fb1b00dff9fd9",
        "text": "See [[About Morse Teacher]] for a good order to learn."
      },
      "after": "ec76404f9ef8f60f",
      "date": 1488144929576
    },
    {
      "type": "add",
      "id": "1d24e0a1b84e7209",
      "item": {
        "type": "paragraph",
        "id": "1d24e0a1b84e7209",
        "text": "See [[About Chess Plugin]] for starting positions."
      },
      "after": "019fb1b00dff9fd9",
      "date": 1488144989494
    },
    {
      "type": "edit",
      "id": "019fb1b00dff9fd9",
      "item": {
        "type": "paragraph",
        "id": "019fb1b00dff9fd9",
        "text": "See [[About MorseTeacher Plugin]] for a good order to learn."
      },
      "date": 1488144997287
    },
    {
      "type": "edit",
      "id": "b5c7068cf92af98d",
      "item": {
        "type": "markdown",
        "id": "b5c7068cf92af98d",
        "text": "# Initialization"
      },
      "date": 1488145333593
    },
    {
      "type": "add",
      "id": "f6e803da7d9f0151",
      "item": {
        "type": "paragraph",
        "id": "f6e803da7d9f0151",
        "text": "We've also suggested that a search of morse or chess should find these pages but they don't but might soon."
      },
      "after": "1d24e0a1b84e7209",
      "date": 1488145416752
    },
    {
      "type": "add",
      "id": "afc13f3f73eff0e5",
      "item": {
        "type": "paragraph",
        "id": "afc13f3f73eff0e5",
        "text": "Notice that all of these plugins are more interesting that a similarly limited desktop application because of the persistence and sharing provided by wiki."
      },
      "after": "a0a77f30a74d0d45",
      "date": 1488149603884
    },
    {
      "type": "edit",
      "id": "afc13f3f73eff0e5",
      "item": {
        "type": "paragraph",
        "id": "afc13f3f73eff0e5",
        "text": "Notice that all of these plugins are more interesting that a similarly limited desktop application because of the persistence, revision history and sharing provided by wiki."
      },
      "date": 1488149639471
    },
    {
      "type": "fork",
      "site": "ward.bay.wiki.org",
      "date": 1676891529355
    },
    {
      "type": "edit",
      "id": "eaf2f6e9e8ba8ca2",
      "item": {
        "type": "paragraph",
        "id": "eaf2f6e9e8ba8ca2",
        "text": "The original wiki was collaboration software that knew little about collaboration. This left lots of room for its users to invent new ways to work. [[Federated wiki]] extends this tradition with pluggable algorithms that need not be complex to be valuable."
      },
      "date": 1676932145598
    },
    {
      "type": "edit",
      "id": "eaf2f6e9e8ba8ca2",
      "item": {
        "type": "paragraph",
        "id": "eaf2f6e9e8ba8ca2",
        "text": "The original wiki was collaboration software that knew little about collaboration. This left lots of room for its users to invent new ways to work. [[Federated Wiki]] extends this tradition with pluggable algorithms that need not be complex to be valuable."
      },
      "date": 1676932151930
    },
    {
      "type": "edit",
      "id": "eaf2f6e9e8ba8ca2",
      "item": {
        "type": "paragraph",
        "id": "eaf2f6e9e8ba8ca2",
        "text": "The original wiki was collaboration software that knew little about collaboration. This left lots of room for its users to invent new ways to work. [[Federated Wiki]] extends this tradition with pluggable [[Algorithm]]s that need not be complex to be valuable."
      },
      "date": 1676953971174
    },
    {
      "type": "edit",
      "id": "b62c299a7d5755d8",
      "item": {
        "type": "paragraph",
        "id": "b62c299a7d5755d8",
        "text": "The tradition in [[Automation]] has been to make the computer work better than the people it replaced. We hope to save a place for ourselves among the artificial  super-intelligences by relegating them to assistive technology. I suggest we have the opportunity now by making our programs too stupid to be wrong."
      },
      "date": 1676953987528
    },
    {
      "type": "edit",
      "id": "3e6ac22125be5a39",
      "item": {
        "type": "paragraph",
        "id": "3e6ac22125be5a39",
        "text": "Wiki offered the opportunity to share [[Hypertext]] through the same interface one used to read, the browser. The hypertext markup language, html, was already too complex for casual writing so wiki used its own conventions specific to every site."
      },
      "date": 1676954080933
    }
  ]
}