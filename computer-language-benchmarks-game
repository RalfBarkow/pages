{
  "title": "Computer Language Benchmarks Game",
  "story": [
    {
      "type": "html",
      "text": "The [[Computer Language Benchmarks Game]] compares measurements of programs written in different programming languages - the measurements are CPU time used, elapsed time used, memory used, and gzip source code used. There are 4 sets of up-to-date measurements - 4 different OS/machine combinations.",
      "id": "11ac971bc8bdc623aa45c41871c42475"
    },
    {
      "type": "html",
      "text": "\nAnyone can contribute new programs that implement some of the dozen tiny tasks shown on the benchmarks game website. About 2500 programs have been contributed. Programs are re-measured as and when new versions of the language implementations become available, and between new programs and new language versions there have been new measurements most every week.",
      "id": "e0c53c412a90a34728eaad7810d10080"
    },
    {
      "type": "html",
      "text": "\nThe Help page provides basic information and FAQ answers",
      "id": "296cd98c7995e440c63b66607b04c913"
    },
    {
      "type": "html",
      "text": "\n[http://benchmarksgame.alioth.debian.org/help.php benchmarksgame.alioth.debian.org]",
      "id": "8d6d4e00133e7373a4616a7f624e7610"
    },
    {
      "type": "html",
      "text": "\nAlthough the website is mostly bare facts about particular programs, categorised by programming language, there is one page of editorial comment",
      "id": "99cf0781aea7c2cbc02c97ec54c64aa0"
    },
    {
      "type": "html",
      "text": "\n[http://benchmarksgame.alioth.debian.org/dont-jump-to-conclusions.php benchmarksgame.alioth.debian.org]",
      "id": "4e8a1dafad59710292bf6a52ab060c8a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7e2b75e43fc3b5aab581da8fd52ec199"
    },
    {
      "type": "html",
      "text": "\nQuite unexpectedly, some of the tiny tasks shown on the benchmarks game website have become a resource for programming language researchers. For example - ",
      "id": "079e0b8b7e44bbee1963f9f0bc95357f"
    },
    {
      "type": "html",
      "text": " Phaser Accumulators: a New Reduction Construct for Dynamic Parallelism [http://www.cs.rice.edu/~vsarkar/PDF/ipdps09-accumulators-final-submission.pdf www.cs.rice.edu]",
      "id": "057e4871f3248afbc394cb96ae075e29"
    },
    {
      "type": "html",
      "text": " Dynamic Interpretation for Dynamic Scripting Languages [http://www.scss.tcd.ie/publications/tech-reports/reports.09/TCD-CS-2009-37.pdf www.scss.tcd.ie]",
      "id": "13598ef66448a372c54cd7098a1a4d05"
    },
    {
      "type": "html",
      "text": " Race-free and Memory-safe Multithreading: Design and Implementation in Cyclone [http://www.softlab.ntua.gr/research/techrep/CSD-SW-TR-8-09.pdf www.softlab.ntua.gr]",
      "id": "48ddef4c9e8e3023c3af022c6d717388"
    },
    {
      "type": "html",
      "text": " Integrating Typed and Untyped Code in a Scripting Language [http://moscova.inria.fr/~zappa/projects/liketypes/paper.pdf moscova.inria.fr]",
      "id": "42dbf5a94d5dc3c5aff029f0e5a972f2"
    },
    {
      "type": "html",
      "text": " Inline Caching Meets Quickening [http://www.springerlink.com/index/P4U0851W34180N74.pdf www.springerlink.com]",
      "id": "e5c5df9a703a0ae476d84dde74780404"
    },
    {
      "type": "html",
      "text": "\nHaving a collection of programs that implement the same tasks in different programming languages is <i>at least</i> convenient. In Simon Peyton-Jones' pithy phrase - \"flawed, but available\".",
      "id": "3bde82c44f97d30b4a7353b5f9d531c6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7e2b75e43fc3b5aab581da8fd52ec199"
    },
    {
      "type": "html",
      "text": "Just as unexpectedly, the Go programming language distribution includes Go programs for the tiny tasks shown on the benchmarks game website, and those programs are compiled during install -",
      "id": "76873180b13f3ab86e64c037842ec95f"
    },
    {
      "type": "code",
      "text": "    --- cd ../test/bench\n    fasta\n    reverse-complement\n    nbody\n    binary-tree\n    binary-tree-freelist\n    fannkuch\n    fannkuch-parallel\n    regex-dna\n    regex-dna-parallel\n    spectral-norm\n    k-nucleotide\n    k-nucleotide-parallel\n    mandelbrot\n    meteor-contest\n    pidigits\n    threadring\n    chameneosredux",
      "id": "f3bb78f61f9fa0e074a4cbe15387bee1"
    },
    {
      "type": "html",
      "text": "\nSimilarly, the Scala project \"automatically run a quick and dirty benchmarking suite over all our code revisions, in order to detect sudden changes in performance as a result of changes to the code\" [http://www.scala-lang.org/node/360 www.scala-lang.org]",
      "id": "f8b71478843342dab0cfa00a953fe22a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7e2b75e43fc3b5aab581da8fd52ec199"
    },
    {
      "type": "html",
      "text": "Several of the tiny tasks had already been used as benchmarks and were adopted almost unchanged for the benchmarks game, for example - fannkuch (now fannkuch-redux) and binary-trees. ",
      "id": "cb595dc4379137e0658c0f09db771466"
    },
    {
      "type": "html",
      "text": "\nSimilarly, many of the tiny tasks from the benchmarks game have been adopted by other projects - notably 10 of the 26 [[Web Kit]] [[Sun Spider]] [[Java Script]] tests. ",
      "id": "9106b4347ea225587a22c5103b55dd1b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7e2b75e43fc3b5aab581da8fd52ec199"
    },
    {
      "type": "html",
      "text": "<i>The benchmarks game sometimes seems a little like a Rorschach test for programmers - how they respond can be more interesting than the measurements.</i> -- [[Isaac Gouy]]",
      "id": "f44d9d632a93890d8c43cc757f9c7e18"
    },
    {
      "type": "html",
      "text": "\"It has been said that Ruby is slow. The benchmarks from the Computer Language Benchmarks Game shows the various ruby implementations as ranking close to last. Benchmarks only tell a partial truth. The reality of the situation is that for the vast majority of situations the ruby interpreter is fast enough. Slow code is most likely your fault. In this article, I’ll be showing you a process by which you can take your slow ruby code and tune it to become as fast as it can be.\" \np32 Carl Lerche, Write Fast Ruby: It’s All About the Science.",
      "id": "4c5f01d79543c2874c2c88dd9ecc9e56"
    },
    {
      "type": "html",
      "text": "\n[http://2009.gogaruco.com/downloads/Wrap2009.pdf 2009.gogaruco.com]",
      "id": "70d47e368f0ead266e7882375857e8dc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7e2b75e43fc3b5aab581da8fd52ec199"
    },
    {
      "type": "html",
      "text": "[[Category Programming Language]], [[Category Metrics]]",
      "id": "35cfeca8acc6269adaf57845d0b55d89"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ComputerLanguageBenchmarksGame c2.com]",
      "id": "954da6ade82532dfac41cea0b6225be5"
    }
  ],
  "journal": [
    {
      "date": 1356719586000,
      "id": "54d92d1c249ff140f236552eb452c20e",
      "type": "create",
      "item": {
        "title": "Computer Language Benchmarks Game",
        "story": [
          {
            "type": "html",
            "text": "The [[Computer Language Benchmarks Game]] compares measurements of programs written in different programming languages - the measurements are CPU time used, elapsed time used, memory used, and gzip source code used. There are 4 sets of up-to-date measurements - 4 different OS/machine combinations.",
            "id": "11ac971bc8bdc623aa45c41871c42475"
          },
          {
            "type": "html",
            "text": "\nAnyone can contribute new programs that implement some of the dozen tiny tasks shown on the benchmarks game website. About 2500 programs have been contributed. Programs are re-measured as and when new versions of the language implementations become available, and between new programs and new language versions there have been new measurements most every week.",
            "id": "e0c53c412a90a34728eaad7810d10080"
          },
          {
            "type": "html",
            "text": "\nThe Help page provides basic information and FAQ answers",
            "id": "296cd98c7995e440c63b66607b04c913"
          },
          {
            "type": "html",
            "text": "\n[http://benchmarksgame.alioth.debian.org/help.php benchmarksgame.alioth.debian.org]",
            "id": "8d6d4e00133e7373a4616a7f624e7610"
          },
          {
            "type": "html",
            "text": "\nAlthough the website is mostly bare facts about particular programs, categorised by programming language, there is one page of editorial comment",
            "id": "99cf0781aea7c2cbc02c97ec54c64aa0"
          },
          {
            "type": "html",
            "text": "\n[http://benchmarksgame.alioth.debian.org/dont-jump-to-conclusions.php benchmarksgame.alioth.debian.org]",
            "id": "4e8a1dafad59710292bf6a52ab060c8a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7e2b75e43fc3b5aab581da8fd52ec199"
          },
          {
            "type": "html",
            "text": "\nQuite unexpectedly, some of the tiny tasks shown on the benchmarks game website have become a resource for programming language researchers. For example - ",
            "id": "079e0b8b7e44bbee1963f9f0bc95357f"
          },
          {
            "type": "html",
            "text": " Phaser Accumulators: a New Reduction Construct for Dynamic Parallelism [http://www.cs.rice.edu/~vsarkar/PDF/ipdps09-accumulators-final-submission.pdf www.cs.rice.edu]",
            "id": "057e4871f3248afbc394cb96ae075e29"
          },
          {
            "type": "html",
            "text": " Dynamic Interpretation for Dynamic Scripting Languages [http://www.scss.tcd.ie/publications/tech-reports/reports.09/TCD-CS-2009-37.pdf www.scss.tcd.ie]",
            "id": "13598ef66448a372c54cd7098a1a4d05"
          },
          {
            "type": "html",
            "text": " Race-free and Memory-safe Multithreading: Design and Implementation in Cyclone [http://www.softlab.ntua.gr/research/techrep/CSD-SW-TR-8-09.pdf www.softlab.ntua.gr]",
            "id": "48ddef4c9e8e3023c3af022c6d717388"
          },
          {
            "type": "html",
            "text": " Integrating Typed and Untyped Code in a Scripting Language [http://moscova.inria.fr/~zappa/projects/liketypes/paper.pdf moscova.inria.fr]",
            "id": "42dbf5a94d5dc3c5aff029f0e5a972f2"
          },
          {
            "type": "html",
            "text": " Inline Caching Meets Quickening [http://www.springerlink.com/index/P4U0851W34180N74.pdf www.springerlink.com]",
            "id": "e5c5df9a703a0ae476d84dde74780404"
          },
          {
            "type": "html",
            "text": "\nHaving a collection of programs that implement the same tasks in different programming languages is <i>at least</i> convenient. In Simon Peyton-Jones' pithy phrase - \"flawed, but available\".",
            "id": "3bde82c44f97d30b4a7353b5f9d531c6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7e2b75e43fc3b5aab581da8fd52ec199"
          },
          {
            "type": "html",
            "text": "Just as unexpectedly, the Go programming language distribution includes Go programs for the tiny tasks shown on the benchmarks game website, and those programs are compiled during install -",
            "id": "76873180b13f3ab86e64c037842ec95f"
          },
          {
            "type": "code",
            "text": "    --- cd ../test/bench\n    fasta\n    reverse-complement\n    nbody\n    binary-tree\n    binary-tree-freelist\n    fannkuch\n    fannkuch-parallel\n    regex-dna\n    regex-dna-parallel\n    spectral-norm\n    k-nucleotide\n    k-nucleotide-parallel\n    mandelbrot\n    meteor-contest\n    pidigits\n    threadring\n    chameneosredux",
            "id": "f3bb78f61f9fa0e074a4cbe15387bee1"
          },
          {
            "type": "html",
            "text": "\nSimilarly, the Scala project \"automatically run a quick and dirty benchmarking suite over all our code revisions, in order to detect sudden changes in performance as a result of changes to the code\" [http://www.scala-lang.org/node/360 www.scala-lang.org]",
            "id": "f8b71478843342dab0cfa00a953fe22a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7e2b75e43fc3b5aab581da8fd52ec199"
          },
          {
            "type": "html",
            "text": "Several of the tiny tasks had already been used as benchmarks and were adopted almost unchanged for the benchmarks game, for example - fannkuch (now fannkuch-redux) and binary-trees. ",
            "id": "cb595dc4379137e0658c0f09db771466"
          },
          {
            "type": "html",
            "text": "\nSimilarly, many of the tiny tasks from the benchmarks game have been adopted by other projects - notably 10 of the 26 [[Web Kit]] [[Sun Spider]] [[Java Script]] tests. ",
            "id": "9106b4347ea225587a22c5103b55dd1b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7e2b75e43fc3b5aab581da8fd52ec199"
          },
          {
            "type": "html",
            "text": "<i>The benchmarks game sometimes seems a little like a Rorschach test for programmers - how they respond can be more interesting than the measurements.</i> -- [[Isaac Gouy]]",
            "id": "f44d9d632a93890d8c43cc757f9c7e18"
          },
          {
            "type": "html",
            "text": "\"It has been said that Ruby is slow. The benchmarks from the Computer Language Benchmarks Game shows the various ruby implementations as ranking close to last. Benchmarks only tell a partial truth. The reality of the situation is that for the vast majority of situations the ruby interpreter is fast enough. Slow code is most likely your fault. In this article, I’ll be showing you a process by which you can take your slow ruby code and tune it to become as fast as it can be.\" \np32 Carl Lerche, Write Fast Ruby: It’s All About the Science.",
            "id": "4c5f01d79543c2874c2c88dd9ecc9e56"
          },
          {
            "type": "html",
            "text": "\n[http://2009.gogaruco.com/downloads/Wrap2009.pdf 2009.gogaruco.com]",
            "id": "70d47e368f0ead266e7882375857e8dc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7e2b75e43fc3b5aab581da8fd52ec199"
          },
          {
            "type": "html",
            "text": "[[Category Programming Language]], [[Category Metrics]]",
            "id": "35cfeca8acc6269adaf57845d0b55d89"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ComputerLanguageBenchmarksGame c2.com]",
            "id": "954da6ade82532dfac41cea0b6225be5"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1708205621679
    }
  ]
}