{
  "title": "Trait Composition Mechanism",
  "story": [
    {
      "type": "reference",
      "id": "3d204d5c302fb669",
      "site": "wiki.ralfbarkow.ch",
      "slug": "traits",
      "title": "Traits",
      "text": "are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait [[Composition Mechanism]] is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
    },
    {
      "type": "paragraph",
      "id": "6c7b284d2ea433f1",
      "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup] ⇒ [[Slot]]"
    },
    {
      "type": "paragraph",
      "id": "27c98976c0178ceb",
      "text": "How we can dynamically create new slots of Smalltalk/JavaScript classes? Slots that 'are' traits. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Trait Composition Mechanism",
        "story": []
      },
      "date": 1673880819033
    },
    {
      "item": {
        "type": "factory",
        "id": "6c7b284d2ea433f1"
      },
      "id": "6c7b284d2ea433f1",
      "type": "add",
      "date": 1673880844393
    },
    {
      "type": "edit",
      "id": "6c7b284d2ea433f1",
      "item": {
        "type": "paragraph",
        "id": "6c7b284d2ea433f1",
        "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup]"
      },
      "date": 1673880849293
    },
    {
      "item": {
        "type": "factory",
        "id": "5099960608db6e81"
      },
      "id": "5099960608db6e81",
      "type": "add",
      "after": "6c7b284d2ea433f1",
      "date": 1673880871185
    },
    {
      "type": "edit",
      "id": "6c7b284d2ea433f1",
      "item": {
        "type": "paragraph",
        "id": "6c7b284d2ea433f1",
        "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup] ⇒ [[Slot]]"
      },
      "date": 1673880882552
    },
    {
      "type": "remove",
      "id": "5099960608db6e81",
      "date": 1673880886159
    },
    {
      "id": "3d204d5c302fb669",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait composition mechanism is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "after": "6c7b284d2ea433f1",
      "date": 1673880895005
    },
    {
      "id": "3d204d5c302fb669",
      "type": "move",
      "order": [
        "3d204d5c302fb669",
        "6c7b284d2ea433f1"
      ],
      "date": 1673880918724
    },
    {
      "item": {
        "type": "factory",
        "id": "27c98976c0178ceb"
      },
      "id": "27c98976c0178ceb",
      "type": "add",
      "after": "6c7b284d2ea433f1",
      "date": 1673880971830
    },
    {
      "type": "edit",
      "id": "27c98976c0178ceb",
      "item": {
        "type": "paragraph",
        "id": "27c98976c0178ceb",
        "text": "How we can dynamically a new slots to Smalltalk classes? Slots that 'are' traits. "
      },
      "date": 1673881012750
    },
    {
      "type": "edit",
      "id": "27c98976c0178ceb",
      "item": {
        "type": "paragraph",
        "id": "27c98976c0178ceb",
        "text": "How we can dynamically create new slots of Smalltalk classes? Slots that 'are' traits. "
      },
      "date": 1673881699853
    },
    {
      "type": "edit",
      "id": "27c98976c0178ceb",
      "item": {
        "type": "paragraph",
        "id": "27c98976c0178ceb",
        "text": "How we can dynamically create new slots of Smalltalk/JavaScript classes? Slots that 'are' traits. "
      },
      "date": 1673881772790
    },
    {
      "type": "edit",
      "id": "3d204d5c302fb669",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait [[Composition Mechanism]] is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "date": 1673882088645
    },
    {
      "type": "edit",
      "id": "3d204d5c302fb669",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait [[Composition Mechanism]] is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "date": 1702449717634
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702500622181
    }
  ]
}