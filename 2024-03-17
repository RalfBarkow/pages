{
  "title": "2024-03-17",
  "story": [
    {
      "type": "paragraph",
      "id": "72ca477cc2522a1b",
      "text": "eric via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$171063287728654SjiEc:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nMade some progress today on Exploratory Parsing in Frames. This offers an example of frames on two pages sending messages to each other through the lineup. The DOT Subscriber is intended to be somewhat general purpose. It will listen for dotStream events and draw the DOT you send it. When a reader clicks on nodes or edges in that graph, it publishes those clicks back to the lineup as a dotLabelClick event with details drawn from the SVG that graphviz drew. In this demonstration, the Exploratory Parsing in Frames page is now instrumented to notice those clicks and display the fragments that matched that edge of the parse tree.\n\nThis gets pretty close to Ward's previous work. This does not sample from the matches, but displays all of the matches. That'll be too much data if the parsed data is especially large (like Ward's previous examples of parsing a Wikipedia-sized data set).\nhttps://wiki.dbbs.co/view/exploratory-parsing-in-frames/view/dot-subscriber"
    },
    {
      "type": "reference",
      "id": "81bb3bb4bd5ef4f2",
      "site": "wiki.dbbs.co",
      "slug": "exploratory-parsing-in-frames",
      "title": "Exploratory Parsing in Frames",
      "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with several hours, some federated collaboration, the Frame Plugin and our esm.html script."
    },
    {
      "type": "reference",
      "id": "eaf9e66cc985c7ae",
      "site": "wiki.dbbs.co",
      "slug": "dot-subscriber",
      "title": "DOT Subscriber",
      "text": "This experiment might support [[Exploratory Parsing in Frames]]. See also [[DOT Publisher]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-03-17",
        "story": []
      },
      "date": 1710726955829
    },
    {
      "item": {
        "type": "factory",
        "id": "72ca477cc2522a1b"
      },
      "id": "72ca477cc2522a1b",
      "type": "add",
      "date": 1710726957519
    },
    {
      "type": "edit",
      "id": "72ca477cc2522a1b",
      "item": {
        "type": "paragraph",
        "id": "72ca477cc2522a1b",
        "text": "eric via [matrix]\nMade some progress today on Exploratory Parsing in Frames. This offers an example of frames on two pages sending messages to each other through the lineup. The DOT Subscriber is intended to be somewhat general purpose. It will listen for dotStream events and draw the DOT you send it. When a reader clicks on nodes or edges in that graph, it publishes those clicks back to the lineup as a dotLabelClick event with details drawn from the SVG that graphviz drew. In this demonstration, the Exploratory Parsing in Frames page is now instrumented to notice those clicks and display the fragments that matched that edge of the parse tree.\n\nThis gets pretty close to Ward's previous work. This does not sample from the matches, but displays all of the matches. That'll be too much data if the parsed data is especially large (like Ward's previous examples of parsing a Wikipedia-sized data set).\nhttps://wiki.dbbs.co/view/exploratory-parsing-in-frames/view/dot-subscriber"
      },
      "date": 1710726966197
    },
    {
      "type": "edit",
      "id": "72ca477cc2522a1b",
      "item": {
        "type": "paragraph",
        "id": "72ca477cc2522a1b",
        "text": "eric via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$171063287728654SjiEc:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nMade some progress today on Exploratory Parsing in Frames. This offers an example of frames on two pages sending messages to each other through the lineup. The DOT Subscriber is intended to be somewhat general purpose. It will listen for dotStream events and draw the DOT you send it. When a reader clicks on nodes or edges in that graph, it publishes those clicks back to the lineup as a dotLabelClick event with details drawn from the SVG that graphviz drew. In this demonstration, the Exploratory Parsing in Frames page is now instrumented to notice those clicks and display the fragments that matched that edge of the parse tree.\n\nThis gets pretty close to Ward's previous work. This does not sample from the matches, but displays all of the matches. That'll be too much data if the parsed data is especially large (like Ward's previous examples of parsing a Wikipedia-sized data set).\nhttps://wiki.dbbs.co/view/exploratory-parsing-in-frames/view/dot-subscriber"
      },
      "date": 1710726977453
    },
    {
      "item": {
        "type": "factory",
        "id": "81bb3bb4bd5ef4f2"
      },
      "id": "81bb3bb4bd5ef4f2",
      "type": "add",
      "after": "72ca477cc2522a1b",
      "date": 1710726992391
    },
    {
      "type": "edit",
      "id": "81bb3bb4bd5ef4f2",
      "item": {
        "type": "reference",
        "id": "81bb3bb4bd5ef4f2",
        "site": "wiki.dbbs.co",
        "slug": "exploratory-parsing-in-frames",
        "title": "Exploratory Parsing in Frames",
        "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with several hours, some federated collaboration, the Frame Plugin and our esm.html script."
      },
      "date": 1710727006797
    },
    {
      "item": {
        "type": "factory",
        "id": "eaf9e66cc985c7ae"
      },
      "id": "eaf9e66cc985c7ae",
      "type": "add",
      "after": "81bb3bb4bd5ef4f2",
      "date": 1710727009112
    },
    {
      "type": "edit",
      "id": "eaf9e66cc985c7ae",
      "item": {
        "type": "reference",
        "id": "eaf9e66cc985c7ae",
        "site": "wiki.dbbs.co",
        "slug": "dot-subscriber",
        "title": "DOT Subscriber",
        "text": "This experiment might support [[Exploratory Parsing in Frames]]. See also [[DOT Publisher]]."
      },
      "date": 1710727021615
    }
  ]
}