{
  "title": "MiniLatex",
  "story": [
    {
      "type": "paragraph",
      "id": "e7d883f999e07c1a",
      "text": "a Parser-Renderer for a Subset of [[LaTeX]] [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf], [https://github.com/jxxcarlson/miniLaTeX#minilatex github]"
    },
    {
      "type": "paragraph",
      "id": "e7f5cb1baaf0fc41",
      "text": "Thanks to the pioneering work of [[Donald Knuth]] in creating [[TeX]], the subsequent development\nof [[LaTeX]] by [[Leslie Lamport]], and the continued contributions of an active community of\ndevelopers, those who rely on LaTeX to publish in print or as PDF have superb document creation\ntools."
    },
    {
      "type": "paragraph",
      "id": "7a9058c1f3e1b971",
      "text": "For publishing documents with mathematical content on the web, there are a number of options. Most widely used is [[MathJax]], which provides high-quality rendering of math-mode TeX-LaTeX for HTML pages. There are also a number of command-line tools, e.g., [[Pandoc]], for converting LaTeX documents to HTML using embedded images for the mathematical text."
    },
    {
      "type": "paragraph",
      "id": "e3e68cdce1545516",
      "text": "Of particular note is [[Daan Leijen]]’s [[Madoko]], which is perhaps closest in spirit to this project.\nMadoko uses Koka, a typed functional language to parse and render a markdown-like language that\nhandles mathematical formulas written in LaTeX and which can export documents to LaTeX."
    },
    {
      "type": "paragraph",
      "id": "8252ed0889dcf8a4",
      "text": "The gap that MiniLatex aims to fill is to provide a tool for live-rendering both text-mode and math-mode\nLaTeX."
    },
    {
      "type": "paragraph",
      "id": "3a503a42ff3d1280",
      "text": "MiniLatex Demo [https://jxxcarlson.github.io/app/miniLatexLive/index.html page]"
    },
    {
      "type": "paragraph",
      "id": "df00fe135216fdd6",
      "text": "The MiniLaTex Project [https://minilatex.io/ site]"
    },
    {
      "type": "pagefold",
      "id": "e29e4cf78bce525d",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "55b8df6c4dbd475c",
      "site": "goals.pod.rodwell.me",
      "slug": "items-based-on-content-type",
      "title": "Items based on Content Type",
      "text": "Creating different page item types, and plugins, based on how an item is edited rather what the content is, is the road to needless complexity. To maintain simplicity a better approach would for different content editing mark-up to be supported by making the editor into a pluggable component."
    },
    {
      "type": "markdown",
      "id": "a91034609ba52dc4",
      "text": "> For text items it would be better to have a single item type – the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor. "
    },
    {
      "type": "paragraph",
      "id": "adaa70b1cbf6ea3b",
      "text": "Cf. the Parser-Renderer for a Subset of [[LaTeX]] above. [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "1b6f7ef895d948bb",
      "text": "Towards LaTeX in the Browser [https://hackernoon.com/towards-latex-in-the-browser-2ff4d94a0c08 hackernoon]"
    },
    {
      "type": "video",
      "id": "1994ae9cdd516187",
      "text": "YOUTUBE dmDA7iziSgs\n\"Making a LaTeX-to-Html parser in elm\" by [[James Carlson]] (2018)"
    },
    {
      "type": "image",
      "id": "663a2580be6eeb4e",
      "text": "[[Parser Pipelines]]. [https://youtu.be/dmDA7iziSgs?t=1134 video]",
      "size": "wide",
      "width": 430,
      "height": 242,
      "url": "/assets/plugins/image/9fca40b1d9cd9479755e9f4f21fdd760.jpg"
    },
    {
      "type": "code",
      "id": "910db7157cf9fffb",
      "text": "{-| THE MAIN RENDERING FUNCTION\n-}\nrender : LatexState -> LatexExpression -> String\nrender latexState latexExpression =\n    case latexExpression of\n        Comment str ->\n            renderComment str\n\n        Macro name optArgs args ->\n            renderMacro latexState name optArgs args\n\n        SMacro name optArgs args le ->\n            renderSMacro latexState name optArgs args le\n\n        Item level latexExpression ->\n            renderItem latexState level latexExpression\n\n        InlineMath str ->\n            \"\\\\(\" ++ str ++ \"\\\\)\"\n\n        DisplayMath str ->\n            \"\\\\[\" ++ str ++ \"\\\\]\"\n\n        Environment name args body ->\n            renderEnvironment latexState name args body\n\n        LatexList args ->\n            renderLatexList latexState args\n\n        LXString str ->\n            str\n\n        LXError error ->\n            ErrorMessages.renderError error\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MiniLatex",
        "story": []
      },
      "date": 1694511287801
    },
    {
      "id": "e7d883f999e07c1a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e7d883f999e07c1a",
        "text": "MiniLatex: a Parser-Renderer for a Subset of LaTeX [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf]"
      },
      "attribution": {
        "page": "2023-09-12"
      },
      "date": 1694511294684
    },
    {
      "type": "edit",
      "id": "e7d883f999e07c1a",
      "item": {
        "type": "paragraph",
        "id": "e7d883f999e07c1a",
        "text": "a Parser-Renderer for a Subset of LaTeX [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf]"
      },
      "date": 1694511317061
    },
    {
      "type": "edit",
      "id": "e7d883f999e07c1a",
      "item": {
        "type": "paragraph",
        "id": "e7d883f999e07c1a",
        "text": "a Parser-Renderer for a Subset of [[LaTeX]] [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf]"
      },
      "date": 1694511341072
    },
    {
      "id": "e7f5cb1baaf0fc41",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e7f5cb1baaf0fc41",
        "text": "Thanks to the pioneering work of [[Donald Knuth]] in creating [[TeX]], the subsequent development\nof [[LaTeX]] by [[Leslie Lamport]], and the continued contributions of an active community of\ndevelopers, those who rely on LaTeX to publish in print or as PDF have superb document creation\ntools."
      },
      "after": "e7d883f999e07c1a",
      "attribution": {
        "page": "2023-09-12"
      },
      "date": 1694511345534
    },
    {
      "id": "7a9058c1f3e1b971",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7a9058c1f3e1b971",
        "text": "For publishing documents with mathematical content on the web, there are a number of options. Most widely used is [[MathJax]], which provides high-quality rendering of math-mode TeX-LaTeX for HTML pages. There are also a number of command-line tools, e.g., [[Pandoc]], for converting LaTeX documents to HTML using embedded images for the mathematical text."
      },
      "after": "e7f5cb1baaf0fc41",
      "attribution": {
        "page": "2023-09-12"
      },
      "date": 1694511347802
    },
    {
      "id": "e3e68cdce1545516",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e3e68cdce1545516",
        "text": "Of particular note is [[Daan Leijen]]’s [[Madoko]], which is perhaps closest in spirit to this project.\nMadoko uses Koka, a typed functional language to parse and render a markdown-like language that\nhandles mathematical formulas written in LaTeX and which can export documents to LaTeX."
      },
      "after": "7a9058c1f3e1b971",
      "attribution": {
        "page": "2023-09-12"
      },
      "date": 1694511349885
    },
    {
      "id": "8252ed0889dcf8a4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8252ed0889dcf8a4",
        "text": "The gap that [[MiniLatex]] aims to fill is to provide a tool for live-rendering both text-mode and math-mode\nLaTeX."
      },
      "after": "e3e68cdce1545516",
      "attribution": {
        "page": "2023-09-12"
      },
      "date": 1694511352933
    },
    {
      "type": "edit",
      "id": "8252ed0889dcf8a4",
      "item": {
        "type": "paragraph",
        "id": "8252ed0889dcf8a4",
        "text": "The gap that MiniLatex aims to fill is to provide a tool for live-rendering both text-mode and math-mode\nLaTeX."
      },
      "date": 1694511360366
    },
    {
      "type": "fork",
      "date": 1694511462860
    },
    {
      "item": {
        "type": "factory",
        "id": "3a503a42ff3d1280"
      },
      "id": "3a503a42ff3d1280",
      "type": "add",
      "after": "8252ed0889dcf8a4",
      "date": 1694511895728
    },
    {
      "type": "edit",
      "id": "3a503a42ff3d1280",
      "item": {
        "type": "paragraph",
        "id": "3a503a42ff3d1280",
        "text": "MiniLatex Demo"
      },
      "date": 1694511898487
    },
    {
      "type": "edit",
      "id": "3a503a42ff3d1280",
      "item": {
        "type": "paragraph",
        "id": "3a503a42ff3d1280",
        "text": "MiniLatex Demo [https://jxxcarlson.github.io/app/miniLatexLive/index.html page]"
      },
      "date": 1694511912658
    },
    {
      "type": "add",
      "id": "df00fe135216fdd6",
      "item": {
        "type": "paragraph",
        "id": "df00fe135216fdd6",
        "text": "The MiniLaTex Project [site]"
      },
      "after": "3a503a42ff3d1280",
      "date": 1694511963533
    },
    {
      "type": "edit",
      "id": "df00fe135216fdd6",
      "item": {
        "type": "paragraph",
        "id": "df00fe135216fdd6",
        "text": "The MiniLaTex Project [https://minilatex.io/ site]"
      },
      "date": 1694511984922
    },
    {
      "item": {
        "type": "factory",
        "id": "e29e4cf78bce525d"
      },
      "id": "e29e4cf78bce525d",
      "type": "add",
      "after": "df00fe135216fdd6",
      "date": 1694525579393
    },
    {
      "type": "edit",
      "id": "e29e4cf78bce525d",
      "item": {
        "type": "pagefold",
        "id": "e29e4cf78bce525d",
        "text": "~"
      },
      "date": 1694525582968
    },
    {
      "item": {
        "type": "factory",
        "id": "55b8df6c4dbd475c"
      },
      "id": "55b8df6c4dbd475c",
      "type": "add",
      "after": "e29e4cf78bce525d",
      "date": 1694525585266
    },
    {
      "type": "edit",
      "id": "55b8df6c4dbd475c",
      "item": {
        "type": "reference",
        "id": "55b8df6c4dbd475c",
        "site": "goals.pod.rodwell.me",
        "slug": "items-based-on-content-type",
        "title": "Items based on Content Type",
        "text": "Creating different page item types, and plugins, based on how an item is edited rather what the content is, is the road to needless complexity. To maintain simplicity a better approach would for different content editing mark-up to be supported by making the editor into a pluggable component."
      },
      "date": 1694525587852
    },
    {
      "id": "a91034609ba52dc4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a91034609ba52dc4",
        "text": "For text items it would be better to have a single item type - the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor. "
      },
      "after": "55b8df6c4dbd475c",
      "attribution": {
        "page": "Items based on Content Type"
      },
      "date": 1694525630458
    },
    {
      "type": "edit",
      "id": "a91034609ba52dc4",
      "item": {
        "type": "paragraph",
        "id": "a91034609ba52dc4",
        "text": "> For text items it would be better to have a single item type - the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor. "
      },
      "date": 1694525633444
    },
    {
      "type": "edit",
      "id": "a91034609ba52dc4",
      "item": {
        "type": "markdown",
        "id": "a91034609ba52dc4",
        "text": "> For text items it would be better to have a single item type - the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor. "
      },
      "date": 1694525634423
    },
    {
      "item": {
        "type": "factory",
        "id": "adaa70b1cbf6ea3b"
      },
      "id": "adaa70b1cbf6ea3b",
      "type": "add",
      "after": "a91034609ba52dc4",
      "date": 1694525650846
    },
    {
      "type": "edit",
      "id": "adaa70b1cbf6ea3b",
      "item": {
        "type": "paragraph",
        "id": "adaa70b1cbf6ea3b",
        "text": "Cf. subset of [[LaTeX]] above."
      },
      "date": 1694525660237
    },
    {
      "type": "edit",
      "id": "adaa70b1cbf6ea3b",
      "item": {
        "type": "paragraph",
        "id": "adaa70b1cbf6ea3b",
        "text": "Cf. the Parser-Renderer for a Subset of [[LaTeX]] above. [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf]"
      },
      "date": 1694525722275
    },
    {
      "type": "edit",
      "id": "a91034609ba52dc4",
      "item": {
        "type": "markdown",
        "id": "a91034609ba52dc4",
        "text": "> For text items it would be better to have a single item type – the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor. "
      },
      "date": 1694525738115
    },
    {
      "item": {
        "type": "factory",
        "id": "5742506cdb7cb9b2"
      },
      "id": "5742506cdb7cb9b2",
      "type": "add",
      "after": "adaa70b1cbf6ea3b",
      "date": 1694526636850
    },
    {
      "type": "remove",
      "id": "5742506cdb7cb9b2",
      "date": 1694526645188
    },
    {
      "type": "add",
      "id": "4c5cb9d8ede31014",
      "item": {
        "type": "paragraph",
        "id": "4c5cb9d8ede31014",
        "text": "[[Differential Parse-Rendering]]"
      },
      "after": "adaa70b1cbf6ea3b",
      "date": 1694526659062
    },
    {
      "type": "remove",
      "id": "4c5cb9d8ede31014",
      "date": 1694526672205
    },
    {
      "type": "add",
      "id": "1922ca8e83ec69f6",
      "item": {
        "type": "paragraph",
        "id": "1922ca8e83ec69f6",
        "text": "The statement that MiniLatex is a subset of LaTeX needs qualification."
      },
      "after": "adaa70b1cbf6ea3b",
      "date": 1694526970202
    },
    {
      "type": "edit",
      "id": "1922ca8e83ec69f6",
      "item": {
        "type": "paragraph",
        "id": "1922ca8e83ec69f6",
        "text": "The statement that MiniLatex is a subset of LaTeX needs qualification. See section 9."
      },
      "date": 1694526987696
    },
    {
      "item": {
        "type": "factory",
        "id": "7bcfc4af49265132"
      },
      "id": "7bcfc4af49265132",
      "type": "add",
      "after": "1922ca8e83ec69f6",
      "date": 1694527188048
    },
    {
      "type": "edit",
      "id": "7bcfc4af49265132",
      "item": {
        "type": "paragraph",
        "id": "7bcfc4af49265132",
        "text": "~"
      },
      "date": 1694527190382
    },
    {
      "item": {
        "type": "factory",
        "id": "255faad7b20e9b94"
      },
      "id": "255faad7b20e9b94",
      "type": "add",
      "after": "7bcfc4af49265132",
      "date": 1694527193000
    },
    {
      "type": "edit",
      "id": "255faad7b20e9b94",
      "item": {
        "type": "paragraph",
        "id": "255faad7b20e9b94",
        "text": "Daan Leijen. 2016. Rendering Mathematics for the Web using Madoko. In Proceedings of the ACM Symposium on Document Engineering. ACM Press, New York, NY."
      },
      "date": 1694527194659
    },
    {
      "item": {
        "type": "factory",
        "id": "a485af4035b79705"
      },
      "id": "a485af4035b79705",
      "type": "add",
      "after": "255faad7b20e9b94",
      "date": 1694527195752
    },
    {
      "id": "a485af4035b79705",
      "type": "move",
      "order": [
        "e7d883f999e07c1a",
        "e7f5cb1baaf0fc41",
        "7a9058c1f3e1b971",
        "e3e68cdce1545516",
        "8252ed0889dcf8a4",
        "3a503a42ff3d1280",
        "df00fe135216fdd6",
        "e29e4cf78bce525d",
        "55b8df6c4dbd475c",
        "a91034609ba52dc4",
        "adaa70b1cbf6ea3b",
        "1922ca8e83ec69f6",
        "7bcfc4af49265132",
        "a485af4035b79705",
        "255faad7b20e9b94"
      ],
      "date": 1694527198424
    },
    {
      "type": "remove",
      "id": "7bcfc4af49265132",
      "date": 1694527202028
    },
    {
      "type": "edit",
      "id": "a485af4035b79705",
      "item": {
        "type": "pagefold",
        "id": "a485af4035b79705",
        "text": "~"
      },
      "date": 1694527203161
    },
    {
      "item": {
        "type": "factory",
        "id": "1994ae9cdd516187"
      },
      "id": "1994ae9cdd516187",
      "type": "add",
      "after": "adaa70b1cbf6ea3b",
      "date": 1694527981172
    },
    {
      "type": "edit",
      "id": "1994ae9cdd516187",
      "item": {
        "type": "video",
        "id": "1994ae9cdd516187",
        "text": "YOUTUBE dmDA7iziSgs"
      },
      "date": 1694527993176
    },
    {
      "type": "edit",
      "id": "1994ae9cdd516187",
      "item": {
        "type": "video",
        "id": "1994ae9cdd516187",
        "text": "YOUTUBE dmDA7iziSgs\n\"Making a LaTeX-to-Html parser in elm\" by James Carlson"
      },
      "date": 1694528006518
    },
    {
      "type": "edit",
      "id": "1994ae9cdd516187",
      "item": {
        "type": "video",
        "id": "1994ae9cdd516187",
        "text": "YOUTUBE dmDA7iziSgs\n\"Making a LaTeX-to-Html parser in elm\" by [[James Carlson]]"
      },
      "date": 1694528021221
    },
    {
      "type": "edit",
      "id": "e7d883f999e07c1a",
      "item": {
        "type": "paragraph",
        "id": "e7d883f999e07c1a",
        "text": "a Parser-Renderer for a Subset of [[LaTeX]] [https://jxxcarlson.github.io/pdf/minilatex-acm.pdf pdf], [https://github.com/jxxcarlson/miniLaTeX#minilatex github]"
      },
      "date": 1694528525664
    },
    {
      "item": {
        "type": "factory",
        "id": "1b6f7ef895d948bb"
      },
      "id": "1b6f7ef895d948bb",
      "type": "add",
      "after": "1994ae9cdd516187",
      "date": 1694528560256
    },
    {
      "type": "edit",
      "id": "1b6f7ef895d948bb",
      "item": {
        "type": "paragraph",
        "id": "1b6f7ef895d948bb",
        "text": "Towards LaTeX in the Browser"
      },
      "date": 1694528562118
    },
    {
      "type": "edit",
      "id": "1b6f7ef895d948bb",
      "item": {
        "type": "paragraph",
        "id": "1b6f7ef895d948bb",
        "text": "Towards LaTeX in the Browser [https://hackernoon.com/towards-latex-in-the-browser-2ff4d94a0c08 hackernoon]"
      },
      "date": 1694528574293
    },
    {
      "type": "edit",
      "id": "1994ae9cdd516187",
      "item": {
        "type": "video",
        "id": "1994ae9cdd516187",
        "text": "YOUTUBE dmDA7iziSgs\n\"Making a LaTeX-to-Html parser in elm\" by [[James Carlson]] (2018)"
      },
      "date": 1694528744034
    },
    {
      "item": {
        "type": "factory",
        "id": "0ae1b8fb4fb9abde"
      },
      "id": "0ae1b8fb4fb9abde",
      "type": "add",
      "after": "1b6f7ef895d948bb",
      "date": 1694529026100
    },
    {
      "type": "edit",
      "id": "0ae1b8fb4fb9abde",
      "item": {
        "type": "paragraph",
        "id": "0ae1b8fb4fb9abde",
        "text": "https://youtu.be/dmDA7iziSgs?t=1134"
      },
      "date": 1694529028226
    },
    {
      "item": {
        "type": "factory",
        "id": "663a2580be6eeb4e"
      },
      "id": "663a2580be6eeb4e",
      "type": "add",
      "after": "0ae1b8fb4fb9abde",
      "date": 1694529030344
    },
    {
      "type": "edit",
      "id": "663a2580be6eeb4e",
      "item": {
        "type": "image",
        "id": "663a2580be6eeb4e",
        "text": "[https://youtu.be/dmDA7iziSgs?t=1134 video]",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/9fca40b1d9cd9479755e9f4f21fdd760.jpg"
      },
      "date": 1694529062655
    },
    {
      "type": "remove",
      "id": "0ae1b8fb4fb9abde",
      "date": 1694529064205
    },
    {
      "type": "edit",
      "id": "663a2580be6eeb4e",
      "item": {
        "type": "image",
        "id": "663a2580be6eeb4e",
        "text": "Parser Pipeline [https://youtu.be/dmDA7iziSgs?t=1134 video]",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/9fca40b1d9cd9479755e9f4f21fdd760.jpg"
      },
      "date": 1694529120561
    },
    {
      "id": "1b6f7ef895d948bb",
      "type": "move",
      "order": [
        "e7d883f999e07c1a",
        "e7f5cb1baaf0fc41",
        "7a9058c1f3e1b971",
        "e3e68cdce1545516",
        "8252ed0889dcf8a4",
        "3a503a42ff3d1280",
        "df00fe135216fdd6",
        "e29e4cf78bce525d",
        "55b8df6c4dbd475c",
        "a91034609ba52dc4",
        "adaa70b1cbf6ea3b",
        "1b6f7ef895d948bb",
        "1994ae9cdd516187",
        "663a2580be6eeb4e"
      ],
      "date": 1694529228865
    },
    {
      "item": {
        "type": "factory",
        "id": "910db7157cf9fffb"
      },
      "id": "910db7157cf9fffb",
      "type": "add",
      "after": "663a2580be6eeb4e",
      "date": 1694529737415
    },
    {
      "type": "edit",
      "id": "910db7157cf9fffb",
      "item": {
        "type": "code",
        "id": "910db7157cf9fffb",
        "text": "{-| THE MAIN RENDERING FUNCTION\n-}\nrender : LatexState -> LatexExpression -> String\nrender latexState latexExpression =\n    case latexExpression of\n        Comment str ->\n            renderComment str\n\n        Macro name optArgs args ->\n            renderMacro latexState name optArgs args\n\n        SMacro name optArgs args le ->\n            renderSMacro latexState name optArgs args le\n\n        Item level latexExpression ->\n            renderItem latexState level latexExpression\n\n        InlineMath str ->\n            \"\\\\(\" ++ str ++ \"\\\\)\"\n\n        DisplayMath str ->\n            \"\\\\[\" ++ str ++ \"\\\\]\"\n\n        Environment name args body ->\n            renderEnvironment latexState name args body\n\n        LatexList args ->\n            renderLatexList latexState args\n\n        LXString str ->\n            str\n\n        LXError error ->\n            ErrorMessages.renderError error\n"
      },
      "date": 1694529739912
    },
    {
      "type": "edit",
      "id": "663a2580be6eeb4e",
      "item": {
        "type": "image",
        "id": "663a2580be6eeb4e",
        "text": "[[Parser Pipeline]]. [https://youtu.be/dmDA7iziSgs?t=1134 video]",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/9fca40b1d9cd9479755e9f4f21fdd760.jpg"
      },
      "date": 1694533205340
    },
    {
      "type": "edit",
      "id": "663a2580be6eeb4e",
      "item": {
        "type": "image",
        "id": "663a2580be6eeb4e",
        "text": "[[Parser Pipelines]]. [https://youtu.be/dmDA7iziSgs?t=1134 video]",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/9fca40b1d9cd9479755e9f4f21fdd760.jpg"
      },
      "date": 1694533368022
    }
  ]
}