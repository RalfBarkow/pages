{
  "title": "Material",
  "story": [
    {
      "type": "paragraph",
      "id": "1851c880b6a28f7e",
      "text": "Materials are used to organize draw calls into passes. They hold configuration information about how meshes should be rendered.\n"
    },
    {
      "type": "code",
      "id": "cc52088ac85d64ae",
      "text": "export class Material {\n\n    constructor() {\n        this.pass = 'opaque';\n        this.texture = new Texture();\n        this.texture.loadFromByteArray(1,1, new Uint8Array([255, 255, 255, 255]));\n        this.decal = new Texture();\n        this.decal.loadFromByteArray(1,1, new Uint8Array([0, 0, 0, 0]));\n        this.zOffset = 1;\n    }\n\n    destroy() {\n        this.texture.destroy();\n        this.decal.destroy();\n    }\n\n    apply() {\n        gl.polygonOffset(this.zOffset, 0);\n        this.texture.apply(0);\n        this.decal.apply(1);\n    }\n\n}"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Material",
        "story": []
      },
      "date": 1655152595593
    },
    {
      "item": {
        "type": "factory",
        "id": "1851c880b6a28f7e"
      },
      "id": "1851c880b6a28f7e",
      "type": "add",
      "date": 1655152614973
    },
    {
      "type": "edit",
      "id": "1851c880b6a28f7e",
      "item": {
        "type": "paragraph",
        "id": "1851c880b6a28f7e",
        "text": "Materials are used to organize draw calls into passes. They hold configuration information about how meshes should be rendered.\n"
      },
      "date": 1655152621993
    },
    {
      "item": {
        "type": "factory",
        "id": "cc52088ac85d64ae"
      },
      "id": "cc52088ac85d64ae",
      "type": "add",
      "after": "1851c880b6a28f7e",
      "date": 1655152635343
    },
    {
      "type": "edit",
      "id": "cc52088ac85d64ae",
      "item": {
        "type": "code",
        "id": "cc52088ac85d64ae",
        "text": "export class Material {\n\n    constructor() {\n        this.pass = 'opaque';\n        this.texture = new Texture();\n        this.texture.loadFromByteArray(1,1, new Uint8Array([255, 255, 255, 255]));\n        this.decal = new Texture();\n        this.decal.loadFromByteArray(1,1, new Uint8Array([0, 0, 0, 0]));\n        this.zOffset = 1;\n    }\n\n    destroy() {\n        this.texture.destroy();\n        this.decal.destroy();\n    }\n\n    apply() {\n        gl.polygonOffset(this.zOffset, 0);\n        this.texture.apply(0);\n        this.decal.apply(1);\n    }\n\n}"
      },
      "date": 1655152637555
    },
    {
      "type": "fork",
      "date": 1655153487889
    },
    {
      "type": "fork",
      "date": 1655153505689
    }
  ]
}