{
  "title": "Fluent Interface",
  "story": [
    {
      "type": "paragraph",
      "id": "2f3cfbb277c0b78a",
      "text": "In software engineering, a fluent interface is an object-oriented API whose design relies extensively on [[Method Chaining]]. Its goal is to increase code legibility by creating a domain-specific language (DSL). The term was coined in 2005 by Eric Evans and Martin Fowler. [https://en.wikipedia.org/wiki/Fluent_interface wikipedia] "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Fluent Interface",
        "story": []
      },
      "date": 1652346386970
    },
    {
      "item": {
        "type": "factory",
        "id": "2f3cfbb277c0b78a"
      },
      "id": "2f3cfbb277c0b78a",
      "type": "add",
      "date": 1652346399555
    },
    {
      "type": "edit",
      "id": "2f3cfbb277c0b78a",
      "item": {
        "type": "paragraph",
        "id": "2f3cfbb277c0b78a",
        "text": "\n\nIn software engineering, a fluent interface is an object-oriented API whose design relies extensively on method chaining. Its goal is to increase code legibility by creating a domain-specific language (DSL). The term was coined in 2005 by Eric Evans and Martin Fowler.[1] "
      },
      "date": 1652346402253
    },
    {
      "type": "edit",
      "id": "2f3cfbb277c0b78a",
      "item": {
        "type": "paragraph",
        "id": "2f3cfbb277c0b78a",
        "text": "\nIn software engineering, a fluent interface is an object-oriented API whose design relies extensively on method chaining. Its goal is to increase code legibility by creating a domain-specific language (DSL). The term was coined in 2005 by Eric Evans and Martin Fowler. [https://en.wikipedia.org/wiki/Fluent_interface wikipedia] "
      },
      "date": 1652346413907
    },
    {
      "type": "edit",
      "id": "2f3cfbb277c0b78a",
      "item": {
        "type": "paragraph",
        "id": "2f3cfbb277c0b78a",
        "text": "In software engineering, a fluent interface is an object-oriented API whose design relies extensively on [[method chaining]]. Its goal is to increase code legibility by creating a domain-specific language (DSL). The term was coined in 2005 by Eric Evans and Martin Fowler. [https://en.wikipedia.org/wiki/Fluent_interface wikipedia] "
      },
      "date": 1652346428003
    },
    {
      "type": "edit",
      "id": "2f3cfbb277c0b78a",
      "item": {
        "type": "paragraph",
        "id": "2f3cfbb277c0b78a",
        "text": "In software engineering, a fluent interface is an object-oriented API whose design relies extensively on [[Method Chaining]]. Its goal is to increase code legibility by creating a domain-specific language (DSL). The term was coined in 2005 by Eric Evans and Martin Fowler. [https://en.wikipedia.org/wiki/Fluent_interface wikipedia] "
      },
      "date": 1652347802836
    }
  ]
}