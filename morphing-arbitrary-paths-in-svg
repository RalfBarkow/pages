{
  "title": "Morphing Arbitrary Paths in SVG",
  "story": [
    {
      "type": "paragraph",
      "id": "2324c6a49ddcfaf4",
      "text": "Paths in SVG can already be morphed with <animate> for the 'd' attribute. The catch is that the paths need to have exactly the same number of points and the drawing commands need to be of exactly the same type. You can’t morph a line into a curve, for example. [https://minus-ze.ro/posts/morphing-arbitrary-paths-in-svg/ post]"
    },
    {
      "type": "paragraph",
      "id": "78e0c4de8e46409a",
      "text": "I’d argue, however, that the more common use case is having some existing paths that you want to morph. In that case, you don’t really need a big JS library loaded at runtime, and you can just generate the animations beforehand. And in this blog post I want to explain how that can be achieved."
    },
    {
      "type": "frame",
      "id": "040c5f01d858fc79",
      "text": "https://minus-ze.ro/posts/morphing-arbitrary-paths-in-svg/\nHEIGHT 400"
    },
    {
      "type": "paragraph",
      "id": "3e32ba7fb4454f45",
      "text": "You can always look at the code of this post which includes all the important implementation details. [https://minus-ze.ro/svg-morph-code.js javascript]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Morphing Arbitrary Paths in SVG",
        "story": []
      },
      "date": 1719543790324
    },
    {
      "item": {
        "type": "factory",
        "id": "2324c6a49ddcfaf4"
      },
      "id": "2324c6a49ddcfaf4",
      "type": "add",
      "date": 1719543897971
    },
    {
      "type": "fork",
      "date": 1719543911495
    },
    {
      "type": "edit",
      "id": "2324c6a49ddcfaf4",
      "item": {
        "type": "paragraph",
        "id": "2324c6a49ddcfaf4",
        "text": "Paths in SVG can already be morphed with <animate> for the 'd' attribute. The catch is that the paths need to have exactly the same number of points and the drawing commands need to be of exactly the same type. You can’t morph a line into a curve, for example."
      },
      "date": 1719543953751
    },
    {
      "type": "edit",
      "id": "2324c6a49ddcfaf4",
      "item": {
        "type": "paragraph",
        "id": "2324c6a49ddcfaf4",
        "text": "Paths in SVG can already be morphed with <animate> for the 'd' attribute. The catch is that the paths need to have exactly the same number of points and the drawing commands need to be of exactly the same type. You can’t morph a line into a curve, for example. [https://minus-ze.ro/posts/morphing-arbitrary-paths-in-svg/ post]"
      },
      "date": 1719544006261
    },
    {
      "item": {
        "type": "factory",
        "id": "3e32ba7fb4454f45"
      },
      "id": "3e32ba7fb4454f45",
      "type": "add",
      "after": "2324c6a49ddcfaf4",
      "date": 1719544022776
    },
    {
      "type": "edit",
      "id": "3e32ba7fb4454f45",
      "item": {
        "type": "paragraph",
        "id": "3e32ba7fb4454f45",
        "text": "You can always look at the code of this post which includes all the important implementation details. Though I’ll note that it came out a bit uglier than what I would’ve wanted."
      },
      "date": 1719544027637
    },
    {
      "type": "edit",
      "id": "3e32ba7fb4454f45",
      "item": {
        "type": "paragraph",
        "id": "3e32ba7fb4454f45",
        "text": "You can always look at the code of this post which includes all the important implementation details. [https://minus-ze.ro/svg-morph-code.js javascript]"
      },
      "date": 1719544094739
    },
    {
      "item": {
        "type": "factory",
        "id": "040c5f01d858fc79"
      },
      "id": "040c5f01d858fc79",
      "type": "add",
      "after": "3e32ba7fb4454f45",
      "date": 1719544136454
    },
    {
      "type": "edit",
      "id": "040c5f01d858fc79",
      "item": {
        "type": "frame",
        "id": "040c5f01d858fc79",
        "text": "https://minus-ze.ro/posts/morphing-arbitrary-paths-in-svg/"
      },
      "date": 1719544144753
    },
    {
      "type": "edit",
      "id": "040c5f01d858fc79",
      "item": {
        "type": "frame",
        "id": "040c5f01d858fc79",
        "text": "https://minus-ze.ro/posts/morphing-arbitrary-paths-in-svg/\nHEIGHT 400"
      },
      "date": 1719544169168
    },
    {
      "id": "040c5f01d858fc79",
      "type": "move",
      "order": [
        "2324c6a49ddcfaf4",
        "040c5f01d858fc79",
        "3e32ba7fb4454f45"
      ],
      "date": 1719544214836
    },
    {
      "type": "add",
      "id": "78e0c4de8e46409a",
      "item": {
        "type": "paragraph",
        "id": "78e0c4de8e46409a",
        "text": "I’d argue, however, that the more common use case is having some existing paths that you want to morph. In that case, you don’t really need a big JS library loaded at runtime, and you can just generate the animations beforehand. And in this blog post I want to explain how that can be achieved."
      },
      "after": "2324c6a49ddcfaf4",
      "date": 1719544283680
    },
    {
      "type": "fork",
      "site": "found.ward.fed.wiki",
      "date": 1719567044435
    }
  ]
}