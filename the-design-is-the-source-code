{
  "title": "The Design Is The Source Code",
  "story": [
    {
      "type": "html",
      "text": "[refactored from [[Documentation Beyond The Source Code]]]",
      "id": "7d7031729774d69afedb715f59367100"
    },
    {
      "type": "html",
      "text": "\nI think we need to ask [[What Is The Source Code]]?. The opening paragraph of this thread presupposes an unhelpful answer. Let me explain. My experience is that each time I find myself picking up a pencil (or a whiteboard marker), I am experiencing a shortcoming of my development environment. By construction, I have an idea, often an aspect of design, that is difficult enough to express within the system that I feel compelled to jump outside it. And so, to appropriate one of Kent's ideas, the development system is telling me something about itself. The separation of [[Rational Rose]] and all the tools like is that they are viewed, even by themselves and their creators, as separate from the system, when they are not. Perhaps we should listen more attentively to what our development systems tell us about themselves. ",
      "id": "ffabeb411f0f7ab2173311c17d1e52f6"
    },
    {
      "type": "html",
      "text": "\nI'm old enough to remember when compilers were new-fangled, and developers didn't trust them. The only \"real\" code was machine code, or perhaps its assembler-code equivalent. In that era, in the shops where I worked, C and Pascal were viewed as programmer shortcuts to the \"real\" thing, and the resulting assembler-code was archived and versioned. ",
      "id": "754e776ddc221c632c481c3cae6e0a9a"
    },
    {
      "type": "html",
      "text": "\nIt took a long time and hard work for the development community to integrate the compiler into our perception of \"the system\", and to view the compiler input as the \"source\". ",
      "id": "b17478e2ca6b22b46fb4acbe03428dba"
    },
    {
      "type": "html",
      "text": "\nI argue that if we believe that objects are real, that persistent objects are real, and that patterns work, then the design (meaning the expression of the patterns and their combinations that I have modeled the solution with) is the source. So I propose to invert the XP phrase: instead of saying \"[[The Source Code Is The Design]]\", I offer \"[[The Design Is The Source Code]]?\". ",
      "id": "bf3ec6104e0d4fbae6619526f5b6c390"
    },
    {
      "type": "html",
      "text": "\nThe most important decision I, as a designer, make is to model a particular situation with, to choose a trite example, a stack. Once I have made that decision, the \"source code\" binding in a particular language is relatively obvious. The same classes and methods recur each time I apply a stack. ",
      "id": "b8563b0b8481cf4f6f228246463a7969"
    },
    {
      "type": "html",
      "text": "\nTherefore, I propose that a \"good\" development system will let me denote my choice of \"stack\", and will then help me express that choice in a particular language on a particular platform. Yes, I need wormholes to cover tool shortcomings (especially in the early years) just as I need ASM directives in a good compiler if I'm doing time-critical work. I find that certain design \"shapes\" recur over and over; I call these \"patterns\". ",
      "id": "c69db2158ec01d74a75b0b27a70b66bf"
    },
    {
      "type": "html",
      "text": "\nSo my argument is that we should build systems that let us express and version our design choices, in the form of a non-planar directed graph (for example). We can then traverse that graph to collect source code whenever we need it for a particular compiler. Eventually, our need for compilers will evaporate (just as our need for assemblers has disappeared) as our \"source code\" migrates to these directed graphs of persistent objects. ",
      "id": "83c5c307d6ef326a2e2405f80ea30e9c"
    },
    {
      "type": "html",
      "text": "\nNow, [[The Design Is The Source Code]]?. ",
      "id": "e18cc23e718c1f3d37f22166cccda32f"
    },
    {
      "type": "html",
      "text": "-- [[Tom Stambaugh]]",
      "id": "2fb6812e529e2c729d26b4b7669067b9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0765ac5938cac2459af2b94891a84f0c"
    },
    {
      "type": "html",
      "text": "I agree with much of this. For many years I've thought that it is odd that software engineers don't think about the other meanings of the word <b>'code</b>'. Code is something you create when you want to make something hard or impossible to read; when you want to obscure the meaning! So why do we gleefully talk about and fawn over our CODE?!",
      "id": "969b752cf3164ef25fca3453468e3128"
    },
    {
      "type": "html",
      "text": "\nI have always been far more interested in the underlying architecture and design of a given system than the specific \"code\" that happens to implement it. If you offered me a choice of 100,000 lines of code, or a 10 page document with the key design, business rules, and algorithms, I'll take the latter. (This assumes I don't have to get the payroll done tomorrow; even then, I'd be more interested in the binaries than the code...)  See also [[Thunk Factor]].",
      "id": "c9c97a2e3a2be38d14861d37e130815d"
    },
    {
      "type": "html",
      "text": "-- [[Andy Moore]]",
      "id": "69bc5a9ea5041085639754a29b62d26e"
    },
    {
      "type": "html",
      "text": "<i>Nah, code is for communication. <b>Cryptography</b> is for obfuscation. For instance, Morse code is for communicating when speech is impossible. Coding (programming) is for communicating with the computer.</i>",
      "id": "7f42f74dc1e8006f3c4759ba2259edaf"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "0765ac5938cac2459af2b94891a84f0c"
    },
    {
      "type": "html",
      "text": "The last things that we edit before processing into a product are the places that accumulate our intents. (comments, changes to the original design, etc). This is what I'd label the source -- it doesn't have to be a text file (or a 'non-planar directed graph' for that matter) to qualify.",
      "id": "966aa9fad44456493ddcb9357b31a179"
    },
    {
      "type": "html",
      "text": "\nDesign artifacts (produced by CASE tools or not) often require further editing, and thus further accumulation of intent, before the final set of tools are used to produce your product. This kind of thing ends up <i>not</i> containing your design because the intent is carried in the later edits. OTOH, some CASE tools produce things which are self contained. I would consider the 'saved state' which lets the CASE tool do this to be source as well, since they meet the criteria of being <i>the last place we recorded our intentions</i>. Hence, [[The Source Code Is The Design]]. ",
      "id": "201238cd99e51493ce647179737398bf"
    },
    {
      "type": "html",
      "text": "\nThis meandering is why I expressed a preference on [[Automated Code Generation]] for the 'Compiling' style of code generator. -- [[Brian Ewins]] (who feels we are straying back to [[Intentional Programming]] again)",
      "id": "5c82bc1ef97af133cccb9c6ab8519ab6"
    },
    {
      "type": "html",
      "text": "\nWait a second... did you say the <i>last</i> place we edit before making a product is where we <b>signify our intent?!?</b> That seems so totally wrong-headed that I can barely respond! Changes to the design happen <i>long</i> before code is generated. The program code is the <i>result</i> of our intent to do something different. Is it not so?",
      "id": "1e19b3fbc52ff1ad51c83ad39c6ca57a"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?TheDesignIsTheSourceCode c2.com]",
      "id": "3ae7d885f5e58d414588202d20868342"
    }
  ],
  "journal": [
    {
      "date": 1373700412000,
      "id": "201a41f9cb89442e795f8545f3ff525d",
      "type": "create",
      "item": {
        "title": "The Design Is The Source Code",
        "story": [
          {
            "type": "html",
            "text": "[refactored from [[Documentation Beyond The Source Code]]]",
            "id": "7d7031729774d69afedb715f59367100"
          },
          {
            "type": "html",
            "text": "\nI think we need to ask [[What Is The Source Code]]?. The opening paragraph of this thread presupposes an unhelpful answer. Let me explain. My experience is that each time I find myself picking up a pencil (or a whiteboard marker), I am experiencing a shortcoming of my development environment. By construction, I have an idea, often an aspect of design, that is difficult enough to express within the system that I feel compelled to jump outside it. And so, to appropriate one of Kent's ideas, the development system is telling me something about itself. The separation of [[Rational Rose]] and all the tools like is that they are viewed, even by themselves and their creators, as separate from the system, when they are not. Perhaps we should listen more attentively to what our development systems tell us about themselves. ",
            "id": "ffabeb411f0f7ab2173311c17d1e52f6"
          },
          {
            "type": "html",
            "text": "\nI'm old enough to remember when compilers were new-fangled, and developers didn't trust them. The only \"real\" code was machine code, or perhaps its assembler-code equivalent. In that era, in the shops where I worked, C and Pascal were viewed as programmer shortcuts to the \"real\" thing, and the resulting assembler-code was archived and versioned. ",
            "id": "754e776ddc221c632c481c3cae6e0a9a"
          },
          {
            "type": "html",
            "text": "\nIt took a long time and hard work for the development community to integrate the compiler into our perception of \"the system\", and to view the compiler input as the \"source\". ",
            "id": "b17478e2ca6b22b46fb4acbe03428dba"
          },
          {
            "type": "html",
            "text": "\nI argue that if we believe that objects are real, that persistent objects are real, and that patterns work, then the design (meaning the expression of the patterns and their combinations that I have modeled the solution with) is the source. So I propose to invert the XP phrase: instead of saying \"[[The Source Code Is The Design]]\", I offer \"[[The Design Is The Source Code]]?\". ",
            "id": "bf3ec6104e0d4fbae6619526f5b6c390"
          },
          {
            "type": "html",
            "text": "\nThe most important decision I, as a designer, make is to model a particular situation with, to choose a trite example, a stack. Once I have made that decision, the \"source code\" binding in a particular language is relatively obvious. The same classes and methods recur each time I apply a stack. ",
            "id": "b8563b0b8481cf4f6f228246463a7969"
          },
          {
            "type": "html",
            "text": "\nTherefore, I propose that a \"good\" development system will let me denote my choice of \"stack\", and will then help me express that choice in a particular language on a particular platform. Yes, I need wormholes to cover tool shortcomings (especially in the early years) just as I need ASM directives in a good compiler if I'm doing time-critical work. I find that certain design \"shapes\" recur over and over; I call these \"patterns\". ",
            "id": "c69db2158ec01d74a75b0b27a70b66bf"
          },
          {
            "type": "html",
            "text": "\nSo my argument is that we should build systems that let us express and version our design choices, in the form of a non-planar directed graph (for example). We can then traverse that graph to collect source code whenever we need it for a particular compiler. Eventually, our need for compilers will evaporate (just as our need for assemblers has disappeared) as our \"source code\" migrates to these directed graphs of persistent objects. ",
            "id": "83c5c307d6ef326a2e2405f80ea30e9c"
          },
          {
            "type": "html",
            "text": "\nNow, [[The Design Is The Source Code]]?. ",
            "id": "e18cc23e718c1f3d37f22166cccda32f"
          },
          {
            "type": "html",
            "text": "-- [[Tom Stambaugh]]",
            "id": "2fb6812e529e2c729d26b4b7669067b9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0765ac5938cac2459af2b94891a84f0c"
          },
          {
            "type": "html",
            "text": "I agree with much of this. For many years I've thought that it is odd that software engineers don't think about the other meanings of the word <b>'code</b>'. Code is something you create when you want to make something hard or impossible to read; when you want to obscure the meaning! So why do we gleefully talk about and fawn over our CODE?!",
            "id": "969b752cf3164ef25fca3453468e3128"
          },
          {
            "type": "html",
            "text": "\nI have always been far more interested in the underlying architecture and design of a given system than the specific \"code\" that happens to implement it. If you offered me a choice of 100,000 lines of code, or a 10 page document with the key design, business rules, and algorithms, I'll take the latter. (This assumes I don't have to get the payroll done tomorrow; even then, I'd be more interested in the binaries than the code...)  See also [[Thunk Factor]].",
            "id": "c9c97a2e3a2be38d14861d37e130815d"
          },
          {
            "type": "html",
            "text": "-- [[Andy Moore]]",
            "id": "69bc5a9ea5041085639754a29b62d26e"
          },
          {
            "type": "html",
            "text": "<i>Nah, code is for communication. <b>Cryptography</b> is for obfuscation. For instance, Morse code is for communicating when speech is impossible. Coding (programming) is for communicating with the computer.</i>",
            "id": "7f42f74dc1e8006f3c4759ba2259edaf"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "0765ac5938cac2459af2b94891a84f0c"
          },
          {
            "type": "html",
            "text": "The last things that we edit before processing into a product are the places that accumulate our intents. (comments, changes to the original design, etc). This is what I'd label the source -- it doesn't have to be a text file (or a 'non-planar directed graph' for that matter) to qualify.",
            "id": "966aa9fad44456493ddcb9357b31a179"
          },
          {
            "type": "html",
            "text": "\nDesign artifacts (produced by CASE tools or not) often require further editing, and thus further accumulation of intent, before the final set of tools are used to produce your product. This kind of thing ends up <i>not</i> containing your design because the intent is carried in the later edits. OTOH, some CASE tools produce things which are self contained. I would consider the 'saved state' which lets the CASE tool do this to be source as well, since they meet the criteria of being <i>the last place we recorded our intentions</i>. Hence, [[The Source Code Is The Design]]. ",
            "id": "201238cd99e51493ce647179737398bf"
          },
          {
            "type": "html",
            "text": "\nThis meandering is why I expressed a preference on [[Automated Code Generation]] for the 'Compiling' style of code generator. -- [[Brian Ewins]] (who feels we are straying back to [[Intentional Programming]] again)",
            "id": "5c82bc1ef97af133cccb9c6ab8519ab6"
          },
          {
            "type": "html",
            "text": "\nWait a second... did you say the <i>last</i> place we edit before making a product is where we <b>signify our intent?!?</b> That seems so totally wrong-headed that I can barely respond! Changes to the design happen <i>long</i> before code is generated. The program code is the <i>result</i> of our intent to do something different. Is it not so?",
            "id": "1e19b3fbc52ff1ad51c83ad39c6ca57a"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?TheDesignIsTheSourceCode c2.com]",
            "id": "3ae7d885f5e58d414588202d20868342"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "code.sfw.c2.com",
      "date": 1676891516252
    }
  ]
}