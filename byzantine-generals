{
  "title": "Byzantine Generals",
  "story": [
    {
      "type": "paragraph",
      "id": "c0e961d52ebfbb0f",
      "text": "eric via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169773799315313fotAu:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nA conversation about how hard distributed systems are came up. One co-worker pointed to this paper which claims to prove that asynchronous distributed consensus is impossible. I read the abstract but have not confirmed to the proof rigorously—but I will say the claim aligns perfectly with my experience. I share it here because I think a big piece of the genius in federated wiki is the exploration of what kind of computing it nevertheless possible and even powerful when you give up on an illusion of [[Consensus]]. https://dl.acm.org/doi/pdf/10.1145/3149.214121  Compare the paper to Ward's discussion of [[Folk Memory]]. http://splash.fed.wiki.org/folk-memory.html"
    },
    {
      "type": "pagefold",
      "id": "9dfa43b935603966",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "11e4032a2b672eb4",
      "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
    },
    {
      "type": "reference",
      "id": "f7aeb8727d5e4790",
      "site": "splash.fed.wiki.org",
      "slug": "folk-memory",
      "title": "Folk Memory",
      "text": "This memo describes an adaptive architecture for federating peer object servers. Both the architecture and its implementations are called Folk Memory. This term alludes to the social process by which folk tales or folk songs are remembered and propagated within a culture. [http://c2.com/doc/FolkMemory.pdf pdf]"
    },
    {
      "type": "reference",
      "id": "67082affb2e6bf98",
      "site": "wiki.ralfbarkow.ch",
      "slug": "byzantine-fault",
      "title": "Byzantine Fault",
      "text": "(also Byzantine Generals problem, interactive consistency, source congruency, error avalanche, Byzantine agreement problem, and Byzantine failure) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the \"Byzantine generals problem\", developed to describe a situation in which, to avoid catastrophic failure of the system, the system's actors must agree on a concerted strategy, but …"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Byzantine Generals",
        "story": []
      },
      "date": 1697782979832
    },
    {
      "item": {
        "type": "factory",
        "id": "67082affb2e6bf98"
      },
      "id": "67082affb2e6bf98",
      "type": "add",
      "date": 1697782981846
    },
    {
      "type": "edit",
      "id": "67082affb2e6bf98",
      "item": {
        "type": "reference",
        "id": "67082affb2e6bf98",
        "site": "wiki.ralfbarkow.ch",
        "slug": "byzantine-fault",
        "title": "Byzantine Fault",
        "text": "(also [[Byzantine Generals]] problem, interactive consistency, source congruency, error avalanche, Byzantine agreement problem, and Byzantine failure[1]) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the \"Byzantine generals problem\",[2] developed to describe a situation in which, to avoid catastrophic failure of the system, the system's actors must agree on a concerted strategy, but s"
      },
      "date": 1697782984380
    },
    {
      "type": "edit",
      "id": "67082affb2e6bf98",
      "item": {
        "type": "reference",
        "id": "67082affb2e6bf98",
        "site": "wiki.ralfbarkow.ch",
        "slug": "byzantine-fault",
        "title": "Byzantine Fault",
        "text": "(also Byzantine Generals problem, interactive consistency, source congruency, error avalanche, Byzantine agreement problem, and Byzantine failure) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the \"Byzantine generals problem\",[2] developed to describe a situation in which, to avoid catastrophic failure of the system, the system's actors must agree on a concerted strategy, but s"
      },
      "date": 1697782997502
    },
    {
      "type": "edit",
      "id": "67082affb2e6bf98",
      "item": {
        "type": "reference",
        "id": "67082affb2e6bf98",
        "site": "wiki.ralfbarkow.ch",
        "slug": "byzantine-fault",
        "title": "Byzantine Fault",
        "text": "(also Byzantine Generals problem, interactive consistency, source congruency, error avalanche, Byzantine agreement problem, and Byzantine failure) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the \"Byzantine generals problem\", developed to describe a situation in which, to avoid catastrophic failure of the system, the system's actors must agree on a concerted strategy, but s"
      },
      "date": 1697783016707
    },
    {
      "type": "edit",
      "id": "67082affb2e6bf98",
      "item": {
        "type": "reference",
        "id": "67082affb2e6bf98",
        "site": "wiki.ralfbarkow.ch",
        "slug": "byzantine-fault",
        "title": "Byzantine Fault",
        "text": "(also Byzantine Generals problem, interactive consistency, source congruency, error avalanche, Byzantine agreement problem, and Byzantine failure) is a condition of a computer system, particularly distributed computing systems, where components may fail and there is imperfect information on whether a component has failed. The term takes its name from an allegory, the \"Byzantine generals problem\", developed to describe a situation in which, to avoid catastrophic failure of the system, the system's actors must agree on a concerted strategy, but …"
      },
      "date": 1697783032831
    },
    {
      "item": {
        "type": "factory",
        "id": "9dfa43b935603966"
      },
      "id": "9dfa43b935603966",
      "type": "add",
      "after": "67082affb2e6bf98",
      "date": 1697783870096
    },
    {
      "type": "edit",
      "id": "9dfa43b935603966",
      "item": {
        "type": "pagefold",
        "id": "9dfa43b935603966",
        "text": "~"
      },
      "date": 1697783873460
    },
    {
      "id": "9dfa43b935603966",
      "type": "move",
      "order": [
        "9dfa43b935603966",
        "67082affb2e6bf98"
      ],
      "date": 1697783875581
    },
    {
      "id": "c0e961d52ebfbb0f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c0e961d52ebfbb0f",
        "text": "eric via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169773799315313fotAu:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nA conversation about how hard distributed systems are came up. One co-worker pointed to this paper which claims to prove that asynchronous distributed consensus is impossible. I read the abstract but have not confirmed to the proof rigorously—but I will say the claim aligns perfectly with my experience. I share it here because I think a big piece of the genius in federated wiki is the exploration of what kind of computing it nevertheless possible and even powerful when you give up on an illusion of consensus. https://dl.acm.org/doi/pdf/10.1145/3149.214121  Compare the paper to Ward's discussion of [[Folk Memory]]. http://splash.fed.wiki.org/folk-memory.html"
      },
      "attribution": {
        "page": "2023-10-19"
      },
      "date": 1697783879397
    },
    {
      "id": "11e4032a2b672eb4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "11e4032a2b672eb4",
        "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensusproblem involves an asynchronous system of processes,some of which may be unreliable. The problem is for the reliable processesto agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
      },
      "after": "9dfa43b935603966",
      "attribution": {
        "page": "2023-10-19"
      },
      "date": 1697783888314
    },
    {
      "type": "edit",
      "id": "c0e961d52ebfbb0f",
      "item": {
        "type": "paragraph",
        "id": "c0e961d52ebfbb0f",
        "text": "eric via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169773799315313fotAu:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nA conversation about how hard distributed systems are came up. One co-worker pointed to this paper which claims to prove that asynchronous distributed consensus is impossible. I read the abstract but have not confirmed to the proof rigorously—but I will say the claim aligns perfectly with my experience. I share it here because I think a big piece of the genius in federated wiki is the exploration of what kind of computing it nevertheless possible and even powerful when you give up on an illusion of [[Consensus]]. https://dl.acm.org/doi/pdf/10.1145/3149.214121  Compare the paper to Ward's discussion of [[Folk Memory]]. http://splash.fed.wiki.org/folk-memory.html"
      },
      "date": 1697783946098
    },
    {
      "item": {
        "type": "factory",
        "id": "f7aeb8727d5e4790"
      },
      "id": "f7aeb8727d5e4790",
      "type": "add",
      "after": "67082affb2e6bf98",
      "date": 1697784044120
    },
    {
      "id": "f7aeb8727d5e4790",
      "type": "move",
      "order": [
        "c0e961d52ebfbb0f",
        "9dfa43b935603966",
        "f7aeb8727d5e4790",
        "11e4032a2b672eb4",
        "67082affb2e6bf98"
      ],
      "date": 1697784054267
    },
    {
      "type": "edit",
      "id": "f7aeb8727d5e4790",
      "item": {
        "type": "reference",
        "id": "f7aeb8727d5e4790",
        "site": "splash.fed.wiki.org",
        "slug": "folk-memory",
        "title": "Folk Memory",
        "text": "This memo describes an adaptive architecture for federating peer object servers. Both the architecture and its implementations are called Folk Memory. This term alludes to the social process by which folk tales or folk songs are remembered and propagated within a culture. [http://c2.com/doc/FolkMemory.pdf pdf]"
      },
      "date": 1697784073471
    },
    {
      "id": "11e4032a2b672eb4",
      "type": "move",
      "order": [
        "c0e961d52ebfbb0f",
        "9dfa43b935603966",
        "11e4032a2b672eb4",
        "f7aeb8727d5e4790",
        "67082affb2e6bf98"
      ],
      "date": 1697784098156
    },
    {
      "type": "edit",
      "id": "11e4032a2b672eb4",
      "item": {
        "type": "paragraph",
        "id": "11e4032a2b672eb4",
        "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensus problem involves an asynchronous system of processes,some of which may be unreliable. The problem is for the reliable processesto agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
      },
      "date": 1697784128290
    },
    {
      "type": "edit",
      "id": "11e4032a2b672eb4",
      "item": {
        "type": "paragraph",
        "id": "11e4032a2b672eb4",
        "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processesto agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
      },
      "date": 1697784136278
    },
    {
      "type": "edit",
      "id": "11e4032a2b672eb4",
      "item": {
        "type": "paragraph",
        "id": "11e4032a2b672eb4",
        "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
      },
      "date": 1697784151496
    },
    {
      "id": "11e4032a2b672eb4",
      "type": "remove",
      "removedTo": {
        "page": "Agree on a Binary Value"
      },
      "date": 1697784256105
    },
    {
      "id": "11e4032a2b672eb4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "11e4032a2b672eb4",
        "text": "FISCHER, J and LYNCH, A, 1985. Impossibility of distributed consensus with one faulty process. 1985. Vol. 32, no. 2, p. 374–382. The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.\n"
      },
      "after": "9dfa43b935603966",
      "attribution": {
        "page": "Agree on a Binary Value"
      },
      "date": 1697784270590
    }
  ]
}