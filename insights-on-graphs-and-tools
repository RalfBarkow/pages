{
  "title": "Insights on Graphs and Tools",
  "story": [
    {
      "id": "4c512000",
      "type": "paragraph",
      "text": "We notice a pattern in a diverse collection of software tools that help humans wrestle with difficult problem spaces. They have a few ingredients in common including connected graphs, an endless stream of changes, and groups of people trying to make it easier for other groups of people to make sense of their tangled messes."
    },
    {
      "id": "1e6e9000",
      "type": "paragraph",
      "text": "Ward on [[Guiding Emergent Structure]]. He built a graph database to query and visualize the relationships between sociotechnical components of an internet-scale distributed system. For the past few years, he's been experimenting to bring similar tools and approaches to federated wiki. [http://gd.fed.wiki/view/guiding-emergent-structure/view/visualizing-high-order-graphs/view/graph-a-structure-with-graphviz/view/dump-a-structure-into-graphviz/view/el-dorado lineup]"
    },
    {
      "id": "6fbe8800",
      "type": "paragraph",
      "text": "[[Netflix Engineering]] bragging about visualizing real-time distributed tracing data from a sprawling microservices architecture. Designing the machine to leverage and empower human perception. 2015. [https://netflixtechblog.com/flux-a-new-approach-to-system-intuition-cf428b7316ec page]"
    },
    {
      "id": "3b5c0000",
      "type": "paragraph",
      "text": "[[Steampipe]] brought to our attention by [[Jon Udell]]. Clever customization of PostgreSQL for consuming and composing APIs. This introductory page explains the benefits of reducing the context switching to empower a journey from exploration to understanding to sharing and explaining to others. 2021. [https://steampipe.io/blog/introducing-steampipe page]"
    },
    {
      "id": "62264000",
      "type": "paragraph",
      "text": "[[Netflix Engineering]] bragging about tools to search a sprawling federated GraphQL API. Getting all the APIs into a federated GraphQL space is the beginning of the problem. Once you have All The Things in one place, you discover there is too much for anyone to understand. Immediately you need to filter, sift, rearrange, and join those things into smaller pieces to make sense of any of it. 2022. [https://netflixtechblog.com/how-netflix-content-engineering-makes-a-federated-graph-searchable-5c0c1c7d7eaf page]"
    },
    {
      "id": "4160f000",
      "type": "paragraph",
      "text": "[[Netflix Engineering]] bragging about a SQL-like DSL for consuming and composing streams of event data. If you are going to search a pile of federated data, you need to build indexes. The graph can help organize the indexes. 2023. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Insights on Graphs and Tools",
        "story": [
          {
            "id": "4c512000",
            "type": "paragraph",
            "text": "Conversations about graphing in wiki have provoked a flurry of foraging for insights. We collect some links to inform the conversation."
          },
          {
            "id": "1e6e9000",
            "type": "paragraph",
            "text": "Ward on Guiding Emergent Structure. [http://gd.fed.wiki/view/guiding-emergent-structure/view/visualizing-high-order-graphs/view/graph-a-structure-with-graphviz/view/dump-a-structure-into-graphviz/view/el-dorado lineup]"
          },
          {
            "id": "3b5c0000",
            "type": "paragraph",
            "text": "Steampipe brought to our attention by Jon Udell. Clever customization of PostgreSQL for consuming and composing APIs. [https://steampipe.io/blog/introducing-steampipe page]"
          },
          {
            "id": "4160f000",
            "type": "paragraph",
            "text": "Netflix Engineering bragging about a SQL-like DSL for consuming and composing streams of event data. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
          },
          {
            "id": "62264000",
            "type": "paragraph",
            "text": "Netflix Engineering bragging about tools to search a sprawling federated GraphQL API. [https://netflixtechblog.com/how-netflix-content-engineering-makes-a-federated-graph-searchable-5c0c1c7d7eaf page]"
          },
          {
            "id": "6fbe8800",
            "type": "paragraph",
            "text": "Netflix Engineering bragging about visualizing real-time distributed tracing data from a sprawling microservices architecture. [https://netflixtechblog.com/flux-a-new-approach-to-system-intuition-cf428b7316ec page]"
          }
        ]
      },
      "date": 1701028886679
    },
    {
      "type": "fork",
      "date": 1701028888973
    },
    {
      "type": "edit",
      "id": "1e6e9000",
      "item": {
        "id": "1e6e9000",
        "type": "paragraph",
        "text": "Ward on Guiding Emergent Structure. He built a graph database to query and visualize the relationships between sociotechnical components of an internet-scale distributed system. For the past few years, he's been experimenting to bring similar tools and approaches to federated wiki. [http://gd.fed.wiki/view/guiding-emergent-structure/view/visualizing-high-order-graphs/view/graph-a-structure-with-graphviz/view/dump-a-structure-into-graphviz/view/el-dorado lineup]"
      },
      "date": 1701036479342
    },
    {
      "type": "edit",
      "id": "3b5c0000",
      "item": {
        "id": "3b5c0000",
        "type": "paragraph",
        "text": "Steampipe brought to our attention by Jon Udell. Clever customization of PostgreSQL for consuming and composing APIs. This introductory page explains the benefits of reducing the context switching to empower a journey from exploration to understanding to sharing and explaining to others. [https://steampipe.io/blog/introducing-steampipe page]"
      },
      "date": 1701036564125
    },
    {
      "type": "edit",
      "id": "4c512000",
      "item": {
        "id": "4c512000",
        "type": "paragraph",
        "text": "We notice a pattern in a diverse collection of software tools that help humans wrestle with difficult problem spaces. They have a few ingredients in common including connected graphs, an endless stream of changes, and groups of people trying to make it easier for other groups of people to make sense of their tangled messes."
      },
      "date": 1701036865278
    },
    {
      "type": "edit",
      "id": "4160f000",
      "item": {
        "id": "4160f000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about a SQL-like DSL for consuming and composing streams of event data. Getting all the APIs into a federated GraphQL space is the beginning of the problem. Once you have All The Things in one place, you discover there is too much for anyone to understand. Immediately you need to filter, sift, rearrange, and join those things into smaller pieces to make sense of any of it. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
      },
      "date": 1701037075448
    },
    {
      "type": "edit",
      "id": "4160f000",
      "item": {
        "id": "4160f000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about a SQL-like DSL for consuming and composing streams of event data. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
      },
      "date": 1701037135752
    },
    {
      "type": "edit",
      "id": "62264000",
      "item": {
        "id": "62264000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about tools to search a sprawling federated GraphQL API. Getting all the APIs into a federated GraphQL space is the beginning of the problem. Once you have All The Things in one place, you discover there is too much for anyone to understand. Immediately you need to filter, sift, rearrange, and join those things into smaller pieces to make sense of any of it. [https://netflixtechblog.com/how-netflix-content-engineering-makes-a-federated-graph-searchable-5c0c1c7d7eaf page]"
      },
      "date": 1701037144674
    },
    {
      "id": "4160f000",
      "type": "move",
      "order": [
        "4c512000",
        "1e6e9000",
        "3b5c0000",
        "62264000",
        "4160f000",
        "6fbe8800"
      ],
      "date": 1701037184395
    },
    {
      "type": "edit",
      "id": "4160f000",
      "item": {
        "id": "4160f000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about a SQL-like DSL for consuming and composing streams of event data. If you are going to search a pile of federated data, you need to build indexes. The graph can help organize the indexes. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
      },
      "date": 1701037350545
    },
    {
      "id": "6fbe8800",
      "type": "move",
      "order": [
        "4c512000",
        "1e6e9000",
        "6fbe8800",
        "3b5c0000",
        "62264000",
        "4160f000"
      ],
      "date": 1701037383482
    },
    {
      "type": "edit",
      "id": "6fbe8800",
      "item": {
        "id": "6fbe8800",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about visualizing real-time distributed tracing data from a sprawling microservices architecture. 2015. [https://netflixtechblog.com/flux-a-new-approach-to-system-intuition-cf428b7316ec page]"
      },
      "date": 1701037402216
    },
    {
      "type": "edit",
      "id": "6fbe8800",
      "item": {
        "id": "6fbe8800",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about visualizing real-time distributed tracing data from a sprawling microservices architecture. Designing the machine to leverage and empower human perception. 2015. [https://netflixtechblog.com/flux-a-new-approach-to-system-intuition-cf428b7316ec page]"
      },
      "date": 1701037477412
    },
    {
      "type": "edit",
      "id": "3b5c0000",
      "item": {
        "id": "3b5c0000",
        "type": "paragraph",
        "text": "Steampipe brought to our attention by Jon Udell. Clever customization of PostgreSQL for consuming and composing APIs. This introductory page explains the benefits of reducing the context switching to empower a journey from exploration to understanding to sharing and explaining to others. 2021. [https://steampipe.io/blog/introducing-steampipe page]"
      },
      "date": 1701037506688
    },
    {
      "type": "edit",
      "id": "62264000",
      "item": {
        "id": "62264000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about tools to search a sprawling federated GraphQL API. Getting all the APIs into a federated GraphQL space is the beginning of the problem. Once you have All The Things in one place, you discover there is too much for anyone to understand. Immediately you need to filter, sift, rearrange, and join those things into smaller pieces to make sense of any of it. 2022. [https://netflixtechblog.com/how-netflix-content-engineering-makes-a-federated-graph-searchable-5c0c1c7d7eaf page]"
      },
      "date": 1701037533572
    },
    {
      "type": "edit",
      "id": "4160f000",
      "item": {
        "id": "4160f000",
        "type": "paragraph",
        "text": "Netflix Engineering bragging about a SQL-like DSL for consuming and composing streams of event data. If you are going to search a pile of federated data, you need to build indexes. The graph can help organize the indexes. 2023. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
      },
      "date": 1701037567134
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1701062351170
    },
    {
      "type": "edit",
      "id": "1e6e9000",
      "item": {
        "id": "1e6e9000",
        "type": "paragraph",
        "text": "Ward on [[Guiding Emergent Structure]]. He built a graph database to query and visualize the relationships between sociotechnical components of an internet-scale distributed system. For the past few years, he's been experimenting to bring similar tools and approaches to federated wiki. [http://gd.fed.wiki/view/guiding-emergent-structure/view/visualizing-high-order-graphs/view/graph-a-structure-with-graphviz/view/dump-a-structure-into-graphviz/view/el-dorado lineup]"
      },
      "date": 1701062366538
    },
    {
      "type": "edit",
      "id": "3b5c0000",
      "item": {
        "id": "3b5c0000",
        "type": "paragraph",
        "text": "Steampipe brought to our attention by [[Jon Udell]]. Clever customization of PostgreSQL for consuming and composing APIs. This introductory page explains the benefits of reducing the context switching to empower a journey from exploration to understanding to sharing and explaining to others. 2021. [https://steampipe.io/blog/introducing-steampipe page]"
      },
      "date": 1701062670489
    },
    {
      "type": "edit",
      "id": "6fbe8800",
      "item": {
        "id": "6fbe8800",
        "type": "paragraph",
        "text": "[[Netflix Engineering]] bragging about visualizing real-time distributed tracing data from a sprawling microservices architecture. Designing the machine to leverage and empower human perception. 2015. [https://netflixtechblog.com/flux-a-new-approach-to-system-intuition-cf428b7316ec page]"
      },
      "date": 1701085665209
    },
    {
      "type": "edit",
      "id": "62264000",
      "item": {
        "id": "62264000",
        "type": "paragraph",
        "text": "[[Netflix Engineering]] bragging about tools to search a sprawling federated GraphQL API. Getting all the APIs into a federated GraphQL space is the beginning of the problem. Once you have All The Things in one place, you discover there is too much for anyone to understand. Immediately you need to filter, sift, rearrange, and join those things into smaller pieces to make sense of any of it. 2022. [https://netflixtechblog.com/how-netflix-content-engineering-makes-a-federated-graph-searchable-5c0c1c7d7eaf page]"
      },
      "date": 1701085736070
    },
    {
      "type": "edit",
      "id": "4160f000",
      "item": {
        "id": "4160f000",
        "type": "paragraph",
        "text": "[[Netflix Engineering]] bragging about a SQL-like DSL for consuming and composing streams of event data. If you are going to search a pile of federated data, you need to build indexes. The graph can help organize the indexes. 2023. [https://netflixtechblog.com/streaming-sql-in-data-mesh-0d83f5a00d08 page]"
      },
      "date": 1701085745481
    },
    {
      "type": "edit",
      "id": "3b5c0000",
      "item": {
        "id": "3b5c0000",
        "type": "paragraph",
        "text": "[[Steampipe]] brought to our attention by [[Jon Udell]]. Clever customization of PostgreSQL for consuming and composing APIs. This introductory page explains the benefits of reducing the context switching to empower a journey from exploration to understanding to sharing and explaining to others. 2021. [https://steampipe.io/blog/introducing-steampipe page]"
      },
      "date": 1701085767446
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1701085795671
    }
  ]
}