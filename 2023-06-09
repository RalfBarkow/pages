{
  "title": "2023-06-09",
  "story": [
    {
      "type": "paragraph",
      "id": "27618164a054399a",
      "text": "⇒ [[Decode JSON in Elm]]: Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. [https://www.linkedin.com/posts/ralfbarkow_elm-federatedwiki-zettelkasten-activity-7072829603974656001-IfNp post] ⇒ [[Automation as Team Player]]"
    },
    {
      "type": "paragraph",
      "id": "b381491eb639f746",
      "text": "⇒  refactor(Main): replace Person with Wiki.Page [https://github.com/RalfBarkow/vite-elm-dojo/commit/e681645221cd3c2be3ac048b796525be8a440f2c commit]\n\nWe can now copy a wiki page .json and paste it into the text area of our view. [https://github.com/RalfBarkow/vite-elm-dojo/commit/e681645221cd3c2be3ac048b796525be8a440f2c commit]\n\nWhen we click on the 'Parse JSON' button, we can see the changes in the Elm debugger related to the individual message and the  updated model, as well as the parsing result.\n\n"
    },
    {
      "type": "paragraph",
      "id": "cb36f735ac1389e5",
      "text": "⇒ [[Exploratory Parsing]]: Viewing parsedJson with Elm Debugger as a starting point for further [[Exploration]]."
    },
    {
      "type": "image",
      "id": "2289f726c59c9073",
      "text": "[[Exploratory Parsing]]: Viewing parsedJson with Elm Debugger as a starting point for further [[Exploration]].",
      "size": "wide",
      "width": 419,
      "height": 110,
      "url": "/assets/plugins/image/6423eb59c723dbc884ba67616dc8732d.jpg"
    },
    {
      "type": "paragraph",
      "id": "94532d47c141f756",
      "text": "We see the journal entry number 0, which created the [[WikiSpec Story]] page. "
    },
    {
      "type": "code",
      "id": "32335d5605bf2159",
      "text": "{\n  \"title\": \"WikiSpec Story\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"WikiSpec Story\",\n        \"story\": []\n      },\n      \"date\": 1686168396028\n    }\n  ]\n}"
    },
    {
      "type": "paragraph",
      "id": "abc2b73384109441",
      "text": "Next:"
    },
    {
      "type": "markdown",
      "id": "11f13b8fb10aa3de",
      "text": "- [ ] implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n> Point-in-time recovery: replaying up to a specific message means recovering the backend state as at that point in time [⇒ [[Write-Ahead-Log]]]\n- [ ] try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown. How do we count the remaining UnknownJournal entries?"
    },
    {
      "type": "paragraph",
      "id": "5a107e864b153e29",
      "text": "Test data for the Add Factory case"
    },
    {
      "type": "code",
      "id": "88b0ee195d65447f",
      "text": "{\n  \"title\": \"WikiSpec Story\",\n  \"story\": [\n    {\n      \"type\": \"factory\",\n      \"id\": \"d1493b7d30cfab68\"\n    }\n  ],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"WikiSpec Story\",\n        \"story\": []\n      },\n      \"date\": 1686168396028\n    },\n    {\n      \"item\": {\n        \"type\": \"factory\",\n        \"id\": \"d1493b7d30cfab68\"\n      },\n      \"id\": \"d1493b7d30cfab68\",\n      \"type\": \"add\",\n      \"date\": 1686168405017\n    }\n  ]\n}"
    },
    {
      "type": "paragraph",
      "id": "388cd43571f11962",
      "text": "This brings the following code into focus:"
    },
    {
      "type": "code",
      "id": "9e2eaf73dc60bdf4",
      "text": "storyDecoder : Decode.Decoder Story\nstoryDecoder =\n    Decode.oneOf\n        [ Decode.map Future futureEventDecoder\n        , Decode.map Snippet storySnippetDecoder\n        , Decode.map AddFactory factoryItemDecoder\n        , Decode.map (\\_ -> EmptyStory) (Decode.succeed EmptyStory)\n        ]"
    },
    {
      "type": "paragraph",
      "id": "9c5fd63c6ea59354",
      "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around.Tet"
    },
    {
      "type": "paragraph",
      "id": "00a6d71655b350bb",
      "text": "This is what we can do today, we can have the look ahead [⇒ [[Write-Ahead-Log]]], the regular expression type of thing, and the nesting of the parser generator type of thing all mixed together."
    },
    {
      "type": "paragraph",
      "id": "7ae993791a0ad9eb",
      "text": "⇒ [[Understanding Machines]] ⇒ [[Track Successes and Failures]]"
    },
    {
      "type": "reference",
      "id": "6208da63cdd643f8",
      "site": "fed.wiki",
      "slug": "text-and-video-chats",
      "title": "Text and Video Chats",
      "text": "Federated wiki developers and users meet twice a week by video chat and all day every day by text chat."
    },
    {
      "type": "pagefold",
      "id": "9b42b027ecdc1b96",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "d757e3683ee2ef35",
      "text": "⇒ [[Neuter]]"
    },
    {
      "type": "paragraph",
      "id": "e611299b20de797e",
      "text": "Systemrelevantes Nichtwissen / System-relevant non-knowledge"
    },
    {
      "type": "paragraph",
      "id": "a1755ef9a5f10716",
      "text": "Bedarf an einer anderen Logik / Need for a different logic"
    },
    {
      "type": "markdown",
      "id": "938d77b8ed4532be",
      "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N9)\n* the [[Need for Contradictions]] varies with social changes (z#1682]"
    },
    {
      "type": "paragraph",
      "id": "b7f968c759b44e8b",
      "text": "Berechnung des Modulus einer komplexen Zahl"
    },
    {
      "type": "markdown",
      "id": "d1d4f78845538196",
      "text": "* [[Rechnen mit komplexen Zahlen]] [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page] – Calculating with [[Complex Numbers]] […] ⇒ [[z]] ⇒ [[Pile Systems]]"
    },
    {
      "type": "html",
      "text": "[…] you work with complex numbers to avoid some Calculus. (The Calculus is still there, but it's not in your face.)",
      "id": "7a44228a8d4ed00326959a7edcd16218"
    },
    {
      "type": "html",
      "text": "[…] There is a direct analogy between multiplying complex numbers and doing geometric rotation, and you can exploit this relationship in graphics applications.",
      "id": "6c8f5842ab3a513b4812c808f370e0e4"
    },
    {
      "type": "html",
      "text": "[…] connect algebra and geometry. ",
      "id": "db2c5ff932238b5c7b3c1cb41aa04afd"
    },
    {
      "type": "html",
      "text": "[…] in sinusoidal situations, a capacitor is mathematically just like a resistor, that happens to have an <i>imaginary</i> value. Strange but true. So, we can treat our circuit with the same techniques that we use for two ordinary resistors, which is just algebra, only now one of our resistors is imaginary. The algebra is a little messier, but it's still algebra!  That is the beauty of complex numbers. Poof, the Calculus is out of your face!  ",
      "id": "748eb9b60e45638c33fa13c728601557"
    },
    {
      "type": "paragraph",
      "id": "4e01f4fd894e75de",
      "text": "-- Konjugation einer komplexen Zahl"
    },
    {
      "type": "html",
      "text": "[…] (<i>If you've forgotten tenth grade, you may have forgotten some tricks related to doing algebra with complex numbers, like multiplying by conjugates, etc., but trust me that it doesn't get too hairy.</i>)",
      "id": "5630b4d43590aa16f90d5bebec69f4ae"
    },
    {
      "type": "markdown",
      "id": "6513edc6f0f4f49e",
      "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist.\n* Durch den strukturellen Schaltungsaufbau aus unabhängigen, parallelen Datenpfaden kann ein bestehendes Schaltungskonzept schnell an unterschiedliche Wortbreiten angepasst werden, da es nur um zusätzliche parallele Pfade ergänzt werden muss.\n* […] eine funktionale Beschreibung der zu implementierenden Schaltung durch eine, von der Prozesstechnologie unabhängige, Beschreibungssprache […]. Diese Schaltungsbeschreibung gestattet eine [[Simulation]] der gewünschten Funktion."
    },
    {
      "type": "paragraph",
      "id": "47d62fd9eab017bd",
      "text": "HENKELMANN, Heiko, 2004. Automatisierter Systementwurf in der digitalen Signalverarbeitung auf der Basis von Schaltungsstrukturen der Restklassenarithmetik. Online. 7 January 2004. [Accessed 9 June 2023]. Available from: https://media.suub.uni-bremen.de/handle/elib/1998 Residue number arithmetic is characterized by a non-weighted number system, where long integer numbers are split into several smaller numbers with restricted numerical range. This allows the computation of long words by several smaller words, which use almost identical circuits in a parallel structure. However, the non-weighted number representation complicates sign detection, the comparison of numbers and the division operation."
    },
    {
      "type": "paragraph",
      "id": "f5e9bccd398deca0",
      "text": "In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7."
    },
    {
      "type": "paragraph",
      "id": "89505128310ae547",
      "text": "To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available. Accepted: 2020-03-09T15:05:03Z\n"
    },
    {
      "type": "pagefold",
      "id": "dbbfecebbb6d1905",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "66f6e65ef4c93c3a",
      "text": "In Luhmann's approach, the subject is replaced by the observer and the object by the observed, but it is no longer a passive observer who, like a photographic negative, limits himself to being impressed by the observed object."
    },
    {
      "type": "paragraph",
      "id": "cedf691819ff0414",
      "text": "RODRÍGUEZ, Darío and TORRES N., Javier, 2017. Autopoiesis, die Einheit einer Differenz: Luhmann und Maturana. Online. 2017. [Accessed 9 June 2023]. Available from: https://core.ac.uk/download/pdf/304708857.pdf, p. 80\n"
    },
    {
      "type": "reference",
      "id": "a6daf917861b25ec",
      "site": "wiki.ralfbarkow.ch",
      "slug": "photography",
      "title": "Photography",
      "text": "Towards the middle of the nineteenth century – thus somewhat anticipating the process of dissolution described above – photography was invented. Only four aspects of this momentous invention will be singled out here, because they impressively illustrate the practice of \"neg-anthropology\". –– Flusser, Vilém. Vom Subjekt zum Projekt: Menschwerdung. 1. Aufl Juni 1994. Schriften / Vilém Flusser, 3. Bensheim und Düsseldorf: Bollmann, 1994, p. 18–22"
    },
    {
      "type": "reference",
      "id": "f7ddb0d57e28e901",
      "site": "wiki.ralfbarkow.ch",
      "slug": "simulation",
      "title": "Simulation",
      "text": "is the imitation of the operation of a real-world process or system over time."
    },
    {
      "type": "reference",
      "id": "bce5b923e22bb56a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "automation",
      "title": "Automation",
      "text": "The challenges associated with making automation a 'team player' in a joint human-agent activity are discussed. Joint activity is defined as an extended set of actions that are carried out by an ensemble of people coordinating with each other. To carry out joint activity, each party effectively enters into a Basic Compact, an agreement to facilitate coordination, work toward shared goals, and prevent breakdowns in team coordination. Effective coordination requires establishing and maintaining common ground and an intelligent agent must fulfil the …"
    },
    {
      "type": "paragraph",
      "id": "80eceb8cf7748068",
      "text": "⇒ [[Automation as Team Player]] "
    },
    {
      "type": "roster",
      "id": "2504c77657a204ed",
      "text": "de.dreyeck.ch"
    },
    {
      "type": "reference",
      "id": "49fb4491f09f834e",
      "site": "de.dreyeck.ch",
      "slug": "automation-als-teamplayer",
      "title": "Automation als Teamplayer",
      "text": "The challenges associated with making automation a 'team player' in a joint human-agent activity are discussed."
    },
    {
      "type": "reference",
      "id": "c7b822078023dd29",
      "site": "wiki.ralfbarkow.ch",
      "slug": "sachdominanz-in-sozialstrukturen",
      "title": "Sachdominanz in Sozialstrukturen",
      "text": "LINDE, Hans, 1972. Sachdominanz in Sozialstrukturen. Tübingen: Mohr. Gesellschaft und Wissenschaft, 4. ISBN 978-3-16-533891-1"
    },
    {
      "type": "paragraph",
      "id": "8cce3377200f4770",
      "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie [[Mensch und\nKI]] zu einer gemeinsam\nevolvierenden Einheit\nwerden können. [⇒ [[Humans and AI]]] [https://www.linkedin.com/posts/ralfbarkow_mensch-und-ki-activity-7072819839253262336-LmRu post] ⇒ [[Fabian Kostadinov]]: [https://www.linkedin.com/feed/update/urn:li:activity:7072819839253262336?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7072819839253262336%2C7072829042470572033%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287072829042470572033%2Curn%3Ali%3Aactivity%3A7072819839253262336%29 linkedin]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-06-09",
        "story": []
      },
      "date": 1686285064874
    },
    {
      "item": {
        "type": "factory",
        "id": "b777c798dadfd428"
      },
      "id": "b777c798dadfd428",
      "type": "add",
      "date": 1686285066023
    },
    {
      "type": "edit",
      "id": "b777c798dadfd428",
      "item": {
        "type": "paragraph",
        "id": "b777c798dadfd428",
        "text": "Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. "
      },
      "date": 1686285069101
    },
    {
      "item": {
        "type": "factory",
        "id": "9b42b027ecdc1b96"
      },
      "id": "9b42b027ecdc1b96",
      "type": "add",
      "after": "b777c798dadfd428",
      "date": 1686288714464
    },
    {
      "type": "edit",
      "id": "9b42b027ecdc1b96",
      "item": {
        "type": "pagefold",
        "id": "9b42b027ecdc1b96",
        "text": "~"
      },
      "date": 1686288717600
    },
    {
      "item": {
        "type": "factory",
        "id": "d757e3683ee2ef35"
      },
      "id": "d757e3683ee2ef35",
      "type": "add",
      "after": "9b42b027ecdc1b96",
      "date": 1686288719111
    },
    {
      "type": "edit",
      "id": "d757e3683ee2ef35",
      "item": {
        "type": "paragraph",
        "id": "d757e3683ee2ef35",
        "text": "Systemrelevantes Nichtwissen"
      },
      "date": 1686288728029
    },
    {
      "item": {
        "type": "factory",
        "id": "938d77b8ed4532be"
      },
      "id": "938d77b8ed4532be",
      "type": "add",
      "after": "d757e3683ee2ef35",
      "date": 1686288729784
    },
    {
      "type": "add",
      "id": "48f4e3c265c7b06f",
      "item": {
        "type": "paragraph",
        "id": "48f4e3c265c7b06f",
        "text": "Neuter bedeutet weder das eine noch das andere."
      },
      "after": "d757e3683ee2ef35",
      "date": 1686288762819
    },
    {
      "type": "add",
      "id": "a1755ef9a5f10716",
      "item": {
        "type": "paragraph",
        "id": "a1755ef9a5f10716",
        "text": "Bedarf an einer anderen Logik"
      },
      "after": "48f4e3c265c7b06f",
      "date": 1686288771796
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\""
      },
      "date": 1686288976727
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)"
      },
      "date": 1686288990669
    },
    {
      "type": "edit",
      "id": "a1755ef9a5f10716",
      "item": {
        "type": "paragraph",
        "id": "a1755ef9a5f10716",
        "text": "Bedarf an einer anderen Logik / Need for a different logic"
      },
      "date": 1686289012403
    },
    {
      "type": "edit",
      "id": "48f4e3c265c7b06f",
      "item": {
        "type": "paragraph",
        "id": "48f4e3c265c7b06f",
        "text": "Neuter bedeutet weder das eine noch das andere. / Neuter means neither one nor the other."
      },
      "date": 1686289029363
    },
    {
      "type": "edit",
      "id": "d757e3683ee2ef35",
      "item": {
        "type": "paragraph",
        "id": "d757e3683ee2ef35",
        "text": "Systemrelevantes Nichtwissen / System-relevant non-knowledge"
      },
      "date": 1686289044704
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik"
      },
      "date": 1686289174884
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, "
      },
      "date": 1686289193514
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N"
      },
      "date": 1686289199881
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N9)"
      },
      "date": 1686289204272
    },
    {
      "item": {
        "type": "factory",
        "id": "669fcc83f9ece237"
      },
      "id": "669fcc83f9ece237",
      "type": "add",
      "after": "938d77b8ed4532be",
      "date": 1686289251528
    },
    {
      "type": "remove",
      "id": "669fcc83f9ece237",
      "date": 1686289253047
    },
    {
      "item": {
        "type": "factory",
        "id": "6cb1fa08fda93655"
      },
      "id": "6cb1fa08fda93655",
      "type": "add",
      "after": "938d77b8ed4532be",
      "date": 1686289255314
    },
    {
      "type": "edit",
      "id": "6cb1fa08fda93655",
      "item": {
        "type": "paragraph",
        "id": "6cb1fa08fda93655",
        "text": "Thus, logic does not immediately deal with the eradication of contradictions, but first with formal requirements for the production and recognition of contradictions. Thereby, there are always preliminary performances to be made, which seligize sense references and condense them to a contradiction; but only if these preliminary performances are unified to a form, logical conditioning can take effect, above all the conditioning by a general rule of avoiding contradictions. The form of the contradiction results only from the totality of its uses in logic. It need not be assumed historically invariant, but it can be thought that it varies with the kind of its social use."
      },
      "date": 1686289256507
    },
    {
      "item": {
        "type": "factory",
        "id": "9f37d3f3caf728a0"
      },
      "id": "9f37d3f3caf728a0",
      "type": "add",
      "after": "6cb1fa08fda93655",
      "date": 1686289320970
    },
    {
      "type": "edit",
      "id": "9f37d3f3caf728a0",
      "item": {
        "type": "paragraph",
        "id": "9f37d3f3caf728a0",
        "text": "Here research on the sociology of knowledge of logic can find clues suggested by W. Baldamus, Zur Soziologie der formalen Logik, in: Nico Stehr/Volker Meja (eds.), Wissenssoziologie, Sonderheft 22 der Kölner Zeitschrift für Soziologie und Sozialpsychologie, Opladen 1981, pp. 464-477. The presupposition is that the need for contradictions varies with social changes and that therefore, after the system of modern society was established around 1800, classical logic is no longer sufficient."
      },
      "date": 1686289322381
    },
    {
      "item": {
        "type": "factory",
        "id": "dbbfecebbb6d1905"
      },
      "id": "dbbfecebbb6d1905",
      "type": "add",
      "after": "9f37d3f3caf728a0",
      "date": 1686289596918
    },
    {
      "type": "edit",
      "id": "dbbfecebbb6d1905",
      "item": {
        "type": "pagefold",
        "id": "dbbfecebbb6d1905",
        "text": "~"
      },
      "date": 1686289604629
    },
    {
      "item": {
        "type": "factory",
        "id": "66f6e65ef4c93c3a"
      },
      "id": "66f6e65ef4c93c3a",
      "type": "add",
      "after": "dbbfecebbb6d1905",
      "date": 1686289606348
    },
    {
      "type": "edit",
      "id": "66f6e65ef4c93c3a",
      "item": {
        "type": "paragraph",
        "id": "66f6e65ef4c93c3a",
        "text": "In Luhmann's approach, the subject is replaced by the observer and the object by the observed, but it is no longer a passive observer who, like a photographic negative, limits himself to being impressed by the observed object."
      },
      "date": 1686289608422
    },
    {
      "type": "add",
      "id": "cedf691819ff0414",
      "item": {
        "type": "paragraph",
        "id": "cedf691819ff0414",
        "text": "\nRODRÍGUEZ, Darío and TORRES N., Javier, 2017. Autopoiesis, die Einheit einer Differenz: Luhmann und Maturana. Online. 2017. [Accessed 9 June 2023]. Available from: https://core.ac.uk/download/pdf/304708857.pdf\n"
      },
      "after": "66f6e65ef4c93c3a",
      "date": 1686289872593
    },
    {
      "type": "edit",
      "id": "cedf691819ff0414",
      "item": {
        "type": "paragraph",
        "id": "cedf691819ff0414",
        "text": "RODRÍGUEZ, Darío and TORRES N., Javier, 2017. Autopoiesis, die Einheit einer Differenz: Luhmann und Maturana. Online. 2017. [Accessed 9 June 2023]. Available from: https://core.ac.uk/download/pdf/304708857.pdf, p. 80\n"
      },
      "date": 1686289902264
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N9)\n* the need for contradictions varies with social changes:"
      },
      "date": 1686289930659
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N9)\n* the [[Need for Contradictions]] varies with social changes:"
      },
      "date": 1686289986602
    },
    {
      "id": "6cb1fa08fda93655",
      "type": "remove",
      "removedTo": {
        "page": "Need for Contradictions"
      },
      "date": 1686290002282
    },
    {
      "id": "9f37d3f3caf728a0",
      "type": "remove",
      "removedTo": {
        "page": "Need for Contradictions"
      },
      "date": 1686290212446
    },
    {
      "item": {
        "type": "factory",
        "id": "a6daf917861b25ec"
      },
      "id": "a6daf917861b25ec",
      "type": "add",
      "after": "cedf691819ff0414",
      "date": 1686290390719
    },
    {
      "type": "edit",
      "id": "a6daf917861b25ec",
      "item": {
        "type": "reference",
        "id": "a6daf917861b25ec",
        "site": "wiki.ralfbarkow.ch",
        "slug": "photography",
        "title": "Photography",
        "text": "Towards the middle of the nineteenth century - thus somewhat anticipating the process of dissolution described above - [[photography]] was invented. Only four aspects of this momentous invention will be singled out here, because they impressively illustrate the practice of \"neg-anthropology\". –– Flusser, Vilém. Vom Subjekt zum Projekt: Menschwerdung. 1. Aufl Juni 1994. Schriften / Vilém Flusser, 3. Bensheim und Düsseldorf: Bollmann, 1994, p. 18–22"
      },
      "date": 1686290393738
    },
    {
      "type": "edit",
      "id": "a6daf917861b25ec",
      "item": {
        "type": "reference",
        "id": "a6daf917861b25ec",
        "site": "wiki.ralfbarkow.ch",
        "slug": "photography",
        "title": "Photography",
        "text": "Towards the middle of the nineteenth century – thus somewhat anticipating the process of dissolution described above – photography was invented. Only four aspects of this momentous invention will be singled out here, because they impressively illustrate the practice of \"neg-anthropology\". –– Flusser, Vilém. Vom Subjekt zum Projekt: Menschwerdung. 1. Aufl Juni 1994. Schriften / Vilém Flusser, 3. Bensheim und Düsseldorf: Bollmann, 1994, p. 18–22"
      },
      "date": 1686290424633
    },
    {
      "item": {
        "type": "factory",
        "id": "f7ddb0d57e28e901"
      },
      "id": "f7ddb0d57e28e901",
      "type": "add",
      "after": "a6daf917861b25ec",
      "date": 1686290469607
    },
    {
      "type": "edit",
      "id": "f7ddb0d57e28e901",
      "item": {
        "type": "reference",
        "id": "f7ddb0d57e28e901",
        "site": "wiki.ralfbarkow.ch",
        "slug": "simulation",
        "title": "Simulation",
        "text": "is the imitation of the operation of a real-world process or system over time."
      },
      "date": 1686290471711
    },
    {
      "item": {
        "type": "factory",
        "id": "bce5b923e22bb56a"
      },
      "id": "bce5b923e22bb56a",
      "type": "add",
      "after": "f7ddb0d57e28e901",
      "date": 1686290522630
    },
    {
      "type": "edit",
      "id": "bce5b923e22bb56a",
      "item": {
        "type": "reference",
        "id": "bce5b923e22bb56a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "automation",
        "title": "Automation",
        "text": "The challenges associated with making automation a 'team player' in a joint human-agent activity are discussed. Joint activity is defined as an extended set of actions that are carried out by an ensemble of people coordinating with each other. To carry out joint activity, each party effectively enters into a Basic Compact, an agreement to facilitate coordination, work toward shared goals, and prevent breakdowns in team coordination. Effective coordination requires establishing and maintaining common ground and an intelligent agent must fulfil the require"
      },
      "date": 1686290526035
    },
    {
      "type": "edit",
      "id": "bce5b923e22bb56a",
      "item": {
        "type": "reference",
        "id": "bce5b923e22bb56a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "automation",
        "title": "Automation",
        "text": "The challenges associated with making automation a 'team player' in a joint human-agent activity are discussed. Joint activity is defined as an extended set of actions that are carried out by an ensemble of people coordinating with each other. To carry out joint activity, each party effectively enters into a Basic Compact, an agreement to facilitate coordination, work toward shared goals, and prevent breakdowns in team coordination. Effective coordination requires establishing and maintaining common ground and an intelligent agent must fulfil the …"
      },
      "date": 1686290561517
    },
    {
      "item": {
        "type": "factory",
        "id": "80eceb8cf7748068"
      },
      "id": "80eceb8cf7748068",
      "type": "add",
      "after": "bce5b923e22bb56a",
      "date": 1686290606071
    },
    {
      "type": "edit",
      "id": "80eceb8cf7748068",
      "item": {
        "type": "paragraph",
        "id": "80eceb8cf7748068",
        "text": "⇒ [[Automation as Team Player]]"
      },
      "date": 1686290616180
    },
    {
      "type": "edit",
      "id": "80eceb8cf7748068",
      "item": {
        "type": "paragraph",
        "id": "80eceb8cf7748068",
        "text": "⇒ [[Automation as Team Player]] ([[Automation als Teamplayer]])"
      },
      "date": 1686290665133
    },
    {
      "item": {
        "type": "factory",
        "id": "2504c77657a204ed"
      },
      "id": "2504c77657a204ed",
      "type": "add",
      "after": "80eceb8cf7748068",
      "date": 1686290799536
    },
    {
      "type": "edit",
      "id": "2504c77657a204ed",
      "item": {
        "type": "roster",
        "id": "2504c77657a204ed",
        "text": "de.dreyeck.ch"
      },
      "date": 1686290804654
    },
    {
      "item": {
        "type": "factory",
        "id": "49fb4491f09f834e"
      },
      "id": "49fb4491f09f834e",
      "type": "add",
      "after": "2504c77657a204ed",
      "date": 1686290833924
    },
    {
      "type": "edit",
      "id": "49fb4491f09f834e",
      "item": {
        "type": "reference",
        "id": "49fb4491f09f834e",
        "site": "de.dreyeck.ch",
        "slug": "automation-als-teamplayer",
        "title": "Automation als Teamplayer",
        "text": "The challenges associated with making automation a 'team player' in a joint human-agent activity are discussed."
      },
      "date": 1686290837026
    },
    {
      "type": "edit",
      "id": "80eceb8cf7748068",
      "item": {
        "type": "paragraph",
        "id": "80eceb8cf7748068",
        "text": "⇒ [[Automation as Team Player]] "
      },
      "date": 1686290842620
    },
    {
      "item": {
        "type": "factory",
        "id": "c7b822078023dd29"
      },
      "id": "c7b822078023dd29",
      "type": "add",
      "after": "49fb4491f09f834e",
      "date": 1686290962864
    },
    {
      "type": "edit",
      "id": "c7b822078023dd29",
      "item": {
        "type": "reference",
        "id": "c7b822078023dd29",
        "site": "wiki.ralfbarkow.ch",
        "slug": "sachdominanz-in-sozialstrukturen",
        "title": "Sachdominanz in Sozialstrukturen",
        "text": "LINDE, Hans, 1972. Sachdominanz in Sozialstrukturen. Tübingen: Mohr. Gesellschaft und Wissenschaft, 4. ISBN 978-3-16-533891-1"
      },
      "date": 1686290972237
    },
    {
      "item": {
        "type": "factory",
        "id": "8cce3377200f4770"
      },
      "id": "8cce3377200f4770",
      "type": "add",
      "after": "c7b822078023dd29",
      "date": 1686291183662
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe Paul\nRainey, wie Mensch und\nKI zu einer gemeinsam\nevolvierenden Einheit\nwerden können"
      },
      "date": 1686291187217
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie Mensch und\nKI zu einer gemeinsam\nevolvierenden Einheit\nwerden können"
      },
      "date": 1686291237050
    },
    {
      "item": {
        "type": "factory",
        "id": "2f8d8e440621ef80"
      },
      "id": "2f8d8e440621ef80",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686291258876
    },
    {
      "type": "edit",
      "id": "2f8d8e440621ef80",
      "item": {
        "type": "paragraph",
        "id": "2f8d8e440621ef80",
        "text": "Mensch und KI als evolvierende Einheit?"
      },
      "date": 1686291260344
    },
    {
      "item": {
        "type": "factory",
        "id": "77e725908a574530"
      },
      "id": "77e725908a574530",
      "type": "add",
      "after": "2f8d8e440621ef80",
      "date": 1686291291802
    },
    {
      "type": "edit",
      "id": "77e725908a574530",
      "item": {
        "type": "paragraph",
        "id": "77e725908a574530",
        "text": "Können Menschen und KI-Systeme gemeinsam einen evolutionären Übergang durchlaufen, bei dem eine neue Art der Individualität entsteht? Über diese Möglichkeit schreibt Paul Rainey, Direktor am Max-Planck-Institut für Evolutionsbiologie in Plön. Erschienen ist Raineys Artikel Anfang des Jahres in der Zeitschrift Philosophical Transactions of the Royal Society B (378(1872): 20210408)."
      },
      "date": 1686291298005
    },
    {
      "item": {
        "type": "factory",
        "id": "c359d846957a834e"
      },
      "id": "c359d846957a834e",
      "type": "add",
      "after": "77e725908a574530",
      "date": 1686291303983
    },
    {
      "type": "edit",
      "id": "c359d846957a834e",
      "item": {
        "type": "paragraph",
        "id": "c359d846957a834e",
        "text": "Can humans and AI systems together undergo an evolutionary transition in which a new kind of individuality emerges? Paul Rainey, director at the Max Planck Institute for Evolutionary Biology in Plön, Germany, writes about this possibility. Rainey's article appeared earlier this year in the journal Philosophical Transactions of the Royal Society B (378(1872): 20210408)."
      },
      "date": 1686291305729
    },
    {
      "type": "edit",
      "id": "938d77b8ed4532be",
      "item": {
        "type": "markdown",
        "id": "938d77b8ed4532be",
        "text": "* \"UND\" anstelle des \"ENTWEDER-ODER\" (z#49)\n* Forschungen zur Wissenssoziologie der Logik (Soziale Systeme, 496N9)\n* the [[Need for Contradictions]] varies with social changes (z#1682]"
      },
      "date": 1686292770948
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie [[Mensch und\nKI]] zu einer gemeinsam\nevolvierenden Einheit\nwerden können"
      },
      "date": 1686292826371
    },
    {
      "type": "remove",
      "id": "2f8d8e440621ef80",
      "date": 1686292828595
    },
    {
      "type": "remove",
      "id": "77e725908a574530",
      "date": 1686292892061
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie [[Mensch und\nKI]] zu einer gemeinsam\nevolvierenden Einheit\nwerden können. [⇒ [[Humans and AI]]]"
      },
      "date": 1686292931704
    },
    {
      "id": "c359d846957a834e",
      "type": "remove",
      "removedTo": {
        "page": "Humans and AI"
      },
      "date": 1686292940083
    },
    {
      "type": "add",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "How could we summarize our \"Decode JSON in Elm\" conversation here?"
      },
      "after": "b777c798dadfd428",
      "date": 1686293117439
    },
    {
      "type": "add",
      "id": "cc5e65ec0f5a4955",
      "item": {
        "type": "paragraph",
        "id": "cc5e65ec0f5a4955",
        "text": "During our conversation on \"Decode JSON in Elm,\" we discussed various aspects of decoding JSON data in the Elm programming language. Here's a summary of the key points we covered:"
      },
      "after": "27618164a054399a",
      "date": 1686293127504
    },
    {
      "type": "edit",
      "id": "cc5e65ec0f5a4955",
      "item": {
        "type": "paragraph",
        "id": "cc5e65ec0f5a4955",
        "text": "During our conversation on \"Decode JSON in Elm,\" we discussed various aspects of decoding JSON data in the Elm programming language. Here's a summary of the key points we covered: (ChatGPT May 24 Version)"
      },
      "date": 1686293137575
    },
    {
      "type": "edit",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "How could we summarize our \"[[Decode JSON in Elm]]\" conversation here?"
      },
      "date": 1686293178732
    },
    {
      "id": "b777c798dadfd428",
      "type": "remove",
      "removedTo": {
        "page": "Decode JSON in Elm"
      },
      "date": 1686293190943
    },
    {
      "type": "edit",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "⇒ [[Decode JSON in Elm]]"
      },
      "date": 1686293210451
    },
    {
      "id": "cc5e65ec0f5a4955",
      "type": "remove",
      "removedTo": {
        "page": "Decode JSON in Elm"
      },
      "date": 1686293214793
    },
    {
      "id": "b777c798dadfd428",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b777c798dadfd428",
        "text": "Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. "
      },
      "after": "27618164a054399a",
      "attribution": {
        "page": "Decode JSON in Elm"
      },
      "date": 1686293235760
    },
    {
      "type": "remove",
      "id": "b777c798dadfd428",
      "date": 1686293238394
    },
    {
      "type": "edit",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "⇒ [[Decode JSON in Elm]]: Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. "
      },
      "date": 1686293239772
    },
    {
      "item": {
        "type": "factory",
        "id": "0dbc4928f8a29bff"
      },
      "id": "0dbc4928f8a29bff",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686294079853
    },
    {
      "type": "edit",
      "id": "0dbc4928f8a29bff",
      "item": {
        "type": "pagefold",
        "id": "0dbc4928f8a29bff",
        "text": "~"
      },
      "date": 1686294086937
    },
    {
      "item": {
        "type": "factory",
        "id": "c7d3e965372dcc2e"
      },
      "id": "c7d3e965372dcc2e",
      "type": "add",
      "after": "0dbc4928f8a29bff",
      "date": 1686294088484
    },
    {
      "type": "edit",
      "id": "c7d3e965372dcc2e",
      "item": {
        "type": "paragraph",
        "id": "c7d3e965372dcc2e",
        "text": "https://www.linkedin.com/feed/update/urn:li:activity:7072819839253262336?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7072819839253262336%2C7072829042470572033%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287072829042470572033%2Curn%3Ali%3Aactivity%3A7072819839253262336%29"
      },
      "date": 1686294100986
    },
    {
      "type": "edit",
      "id": "c7d3e965372dcc2e",
      "item": {
        "type": "paragraph",
        "id": "c7d3e965372dcc2e",
        "text": "⇒ [[Fabian Kostadinov]]: [https://www.linkedin.com/feed/update/urn:li:activity:7072819839253262336?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7072819839253262336%2C7072829042470572033%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287072829042470572033%2Curn%3Ali%3Aactivity%3A7072819839253262336%29 linkedin]"
      },
      "date": 1686294139818
    },
    {
      "type": "edit",
      "id": "48f4e3c265c7b06f",
      "item": {
        "type": "paragraph",
        "id": "48f4e3c265c7b06f",
        "text": "⇒ [[Neuter]] bedeutet weder das eine noch das andere. / Neuter means neither one nor the other."
      },
      "date": 1686295995485
    },
    {
      "id": "48f4e3c265c7b06f",
      "type": "remove",
      "removedTo": {
        "page": "Neuter"
      },
      "date": 1686296008298
    },
    {
      "type": "edit",
      "id": "d757e3683ee2ef35",
      "item": {
        "type": "paragraph",
        "id": "d757e3683ee2ef35",
        "text": "⇒ [[Neuter]]"
      },
      "date": 1686298431633
    },
    {
      "type": "add",
      "id": "e611299b20de797e",
      "item": {
        "type": "paragraph",
        "id": "e611299b20de797e",
        "text": "Systemrelevantes Nichtwissen / System-relevant non-knowledge"
      },
      "after": "d757e3683ee2ef35",
      "date": 1686298431964
    },
    {
      "type": "edit",
      "id": "a1755ef9a5f10716",
      "item": {
        "type": "paragraph",
        "id": "a1755ef9a5f10716",
        "text": "Bedarf an einer anderen Logik / Need for a "
      },
      "date": 1686298474036
    },
    {
      "type": "edit",
      "id": "a1755ef9a5f10716",
      "item": {
        "type": "paragraph",
        "id": "a1755ef9a5f10716",
        "text": "Bedarf an einer anderen Logik / Need for a different logic"
      },
      "date": 1686298477404
    },
    {
      "type": "add",
      "id": "b7f968c759b44e8b",
      "item": {
        "type": "paragraph",
        "id": "b7f968c759b44e8b",
        "text": "Berechnung des Modulus einer komplexen Zahl"
      },
      "after": "a1755ef9a5f10716",
      "date": 1686298478525
    },
    {
      "id": "b7f968c759b44e8b",
      "type": "move",
      "order": [
        "27618164a054399a",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770",
        "0dbc4928f8a29bff",
        "c7d3e965372dcc2e"
      ],
      "date": 1686298480474
    },
    {
      "type": "add",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "paragraph",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabh‰ngigen parallelen Pfaden stattfindet, deren Zahlenumfang beschr‰nkt ist."
      },
      "after": "b7f968c759b44e8b",
      "date": 1686298503174
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabh‰ngigen parallelen Pfaden stattfindet, deren Zahlenumfang beschr‰nkt ist."
      },
      "date": 1686298504261
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist."
      },
      "date": 1686298523195
    },
    {
      "type": "add",
      "id": "47d62fd9eab017bd",
      "item": {
        "type": "paragraph",
        "id": "47d62fd9eab017bd",
        "text": "\nHENKELMANN, Heiko, 2004. Automatisierter Systementwurf in der digitalen Signalverarbeitung auf der Basis von Schaltungsstrukturen der Restklassenarithmetik. Online. 7 January 2004. [Accessed 9 June 2023]. Available from: https://media.suub.uni-bremen.de/handle/elib/1998Residue number arithmetic is characterized by a non-weighted number system, where long integer numbers are split into several smaller numbers with restricted numerical range. This allows the computation of long words by several smaller words, which use almost identical circuits in a parallel structure. However, the non-weighted number representation complicates sign detection, the comparison of numbers and the division operation.In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7.To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available.Accepted: 2020-03-09T15:05:03Z\n"
      },
      "after": "b7f968c759b44e8b",
      "date": 1686298537588
    },
    {
      "id": "6513edc6f0f4f49e",
      "type": "move",
      "order": [
        "27618164a054399a",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770",
        "0dbc4928f8a29bff",
        "c7d3e965372dcc2e"
      ],
      "date": 1686298548455
    },
    {
      "type": "edit",
      "id": "47d62fd9eab017bd",
      "item": {
        "type": "paragraph",
        "id": "47d62fd9eab017bd",
        "text": "HENKELMANN, Heiko, 2004. Automatisierter Systementwurf in der digitalen Signalverarbeitung auf der Basis von Schaltungsstrukturen der Restklassenarithmetik. Online. 7 January 2004. [Accessed 9 June 2023]. Available from: https://media.suub.uni-bremen.de/handle/elib/1998 Residue number arithmetic is characterized by a non-weighted number system, where long integer numbers are split into several smaller numbers with restricted numerical range. This allows the computation of long words by several smaller words, which use almost identical circuits in a parallel structure. However, the non-weighted number representation complicates sign detection, the comparison of numbers and the division operation.In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7.To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available.Accepted: 2020-03-09T15:05:03Z\n"
      },
      "date": 1686298564530
    },
    {
      "type": "edit",
      "id": "47d62fd9eab017bd",
      "item": {
        "type": "paragraph",
        "id": "47d62fd9eab017bd",
        "text": "HENKELMANN, Heiko, 2004. Automatisierter Systementwurf in der digitalen Signalverarbeitung auf der Basis von Schaltungsstrukturen der Restklassenarithmetik. Online. 7 January 2004. [Accessed 9 June 2023]. Available from: https://media.suub.uni-bremen.de/handle/elib/1998 Residue number arithmetic is characterized by a non-weighted number system, where long integer numbers are split into several smaller numbers with restricted numerical range. This allows the computation of long words by several smaller words, which use almost identical circuits in a parallel structure. However, the non-weighted number representation complicates sign detection, the comparison of numbers and the division operation."
      },
      "date": 1686298595341
    },
    {
      "type": "add",
      "id": "f5e9bccd398deca0",
      "item": {
        "type": "paragraph",
        "id": "f5e9bccd398deca0",
        "text": "In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7.To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available.Accepted: 2020-03-09T15:05:03Z\n"
      },
      "after": "47d62fd9eab017bd",
      "date": 1686298596348
    },
    {
      "type": "edit",
      "id": "f5e9bccd398deca0",
      "item": {
        "type": "paragraph",
        "id": "f5e9bccd398deca0",
        "text": "In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7."
      },
      "date": 1686298619828
    },
    {
      "type": "add",
      "id": "89505128310ae547",
      "item": {
        "type": "paragraph",
        "id": "89505128310ae547",
        "text": "To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available.Accepted: 2020-03-09T15:05:03Z\n"
      },
      "after": "f5e9bccd398deca0",
      "date": 1686298641037
    },
    {
      "type": "edit",
      "id": "89505128310ae547",
      "item": {
        "type": "paragraph",
        "id": "89505128310ae547",
        "text": "To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available. Accepted: 2020-03-09T15:05:03Z\n"
      },
      "date": 1686298692577
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist.\n* \nHENKELMANN, Heiko, 2004. Automatisierter Systementwurf in der digitalen Signalverarbeitung auf der Basis von Schaltungsstrukturen der Restklassenarithmetik. Online. 7 January 2004. [Accessed 9 June 2023]. Available from: https://media.suub.uni-bremen.de/handle/elib/1998Residue number arithmetic is characterized by a non-weighted number system, where long integer numbers are split into several smaller numbers with restricted numerical range. This allows the computation of long words by several smaller words, which use almost identical circuits in a parallel structure. However, the non-weighted number representation complicates sign detection, the comparison of numbers and the division operation.In this work, circuits are presented to realize sign detection, a comparison of numbers and a division with fixed values. Furthermore, circuits implementing FFT, error correction and number system conversion are shown.The concepts are based on parametrical circuit elements for residue number systems like ABIP, HYBIP and IPSP. The complexity of these three elements is analyzed for a word length in the range of 2 to 7.To carry out an automated system implementation based on circuit structures of residue number arithmetic, a synthesis tool is created. This hardware compiler can be used through a command line or a graphical user interface. The hardware compiler makes complex circuit structures available in parametrical form. Using parameterized modules for the circuit description allows for designs to be easily reused, which allows for more complex circuits. The hardware compiler can simulate and create a VHDL netlist of a circuit. In this manner a link to other synthesis tools is available.Accepted: 2020-03-09T15:05:03Z\n"
      },
      "date": 1686298783227
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist.\n* Durch den strukturellen Schaltungsaufbau aus unabh‰ngigen, parallelen Datenpfaden kann ein bestehendes Schaltungskonzept schnell an unterschiedliche Wortbreiten angepasst werden, da es nur um zus‰tzliche parallele Pfade erg‰nzt werden muss."
      },
      "date": 1686298797719
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist.\n* Durch den strukturellen Schaltungsaufbau aus unabhängigen, parallelen Datenpfaden kann ein bestehendes Schaltungskonzept schnell an unterschiedliche Wortbreiten angepasst werden, da es nur um zusätzliche parallele Pfade ergänzt werden muss."
      },
      "date": 1686298821412
    },
    {
      "type": "edit",
      "id": "6513edc6f0f4f49e",
      "item": {
        "type": "markdown",
        "id": "6513edc6f0f4f49e",
        "text": "* Restklassensysteme unterscheiden sich grundlegend vom Dual- und Dezimalsystem. Es handelt sich um ungewichtete und ̧bertragsfreie Zahlensysteme, bei der die Berechnung auf voneinander unabhängigen parallelen Pfaden stattfindet, deren Zahlenumfang beschränkt ist.\n* Durch den strukturellen Schaltungsaufbau aus unabhängigen, parallelen Datenpfaden kann ein bestehendes Schaltungskonzept schnell an unterschiedliche Wortbreiten angepasst werden, da es nur um zusätzliche parallele Pfade ergänzt werden muss.\n* […] eine funktionale Beschreibung der zu implementierenden Schaltung durch eine, von der Prozesstechnologie unabhängige, Beschreibungssprache […]. Diese Schaltungsbeschreibung gestattet eine [[Simulation]] der gewünschten Funktion."
      },
      "date": 1686298938217
    },
    {
      "type": "add",
      "id": "d1d4f78845538196",
      "item": {
        "type": "paragraph",
        "id": "d1d4f78845538196",
        "text": "* Rechnen mit komplexen Zahlen"
      },
      "after": "b7f968c759b44e8b",
      "date": 1686299094245
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "paragraph",
        "id": "d1d4f78845538196",
        "text": "* Rechnen mit komplexen Zahlen [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page]"
      },
      "date": 1686299104025
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "markdown",
        "id": "d1d4f78845538196",
        "text": "* Rechnen mit komplexen Zahlen [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page]"
      },
      "date": 1686299105482
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "markdown",
        "id": "d1d4f78845538196",
        "text": "* Rechnen mit komplexen Zahlen [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page] – Calculating with complex numbers"
      },
      "date": 1686299134772
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "markdown",
        "id": "d1d4f78845538196",
        "text": "* Rechnen mit komplexen Zahlen [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page] – Calculating with [[Complex Numbers]]"
      },
      "date": 1686299157319
    },
    {
      "id": "7a44228a8d4ed00326959a7edcd16218",
      "type": "add",
      "item": {
        "type": "html",
        "text": "\nComplex numbers have some useful mathematical properties that actually make your life easier when you start modelling systems with sinusoidal inputs. Electric circuits are a good example. Basically, you work with complex numbers to avoid some Calculus. (The Calculus is still there, but it's not in your face.)",
        "id": "7a44228a8d4ed00326959a7edcd16218"
      },
      "after": "d1d4f78845538196",
      "attribution": {
        "page": "Complex Numbers"
      },
      "date": 1686299212548
    },
    {
      "type": "edit",
      "id": "7a44228a8d4ed00326959a7edcd16218",
      "item": {
        "type": "html",
        "text": "[…] you work with complex numbers to avoid some Calculus. (The Calculus is still there, but it's not in your face.)",
        "id": "7a44228a8d4ed00326959a7edcd16218"
      },
      "date": 1686299228043
    },
    {
      "id": "6c8f5842ab3a513b4812c808f370e0e4",
      "type": "add",
      "item": {
        "type": "html",
        "text": "Complex numbers are also useful for geometry applications. Think of the complex plane, and where the points (1,0), (0,i), (-1,0) and (0,-i) are. Now think of what the first four powers of i are. There is a direct analogy between multiplying complex numbers and doing geometric rotation, and you can exploit this relationship in graphics applications.",
        "id": "6c8f5842ab3a513b4812c808f370e0e4"
      },
      "after": "7a44228a8d4ed00326959a7edcd16218",
      "attribution": {
        "page": "Complex Numbers"
      },
      "date": 1686299285976
    },
    {
      "type": "edit",
      "id": "6c8f5842ab3a513b4812c808f370e0e4",
      "item": {
        "type": "html",
        "text": "[…] There is a direct analogy between multiplying complex numbers and doing geometric rotation, and you can exploit this relationship in graphics applications.",
        "id": "6c8f5842ab3a513b4812c808f370e0e4"
      },
      "date": 1686299291678
    },
    {
      "id": "db2c5ff932238b5c7b3c1cb41aa04afd",
      "type": "add",
      "item": {
        "type": "html",
        "text": "which fundamentally connects algebra and geometry. From it, you can derive the beautiful Euler's Identity:",
        "id": "db2c5ff932238b5c7b3c1cb41aa04afd"
      },
      "after": "6c8f5842ab3a513b4812c808f370e0e4",
      "attribution": {
        "page": "Complex Numbers"
      },
      "date": 1686299331787
    },
    {
      "type": "edit",
      "id": "db2c5ff932238b5c7b3c1cb41aa04afd",
      "item": {
        "type": "html",
        "text": "[…] connects algebra and geometry. From it, you can derive the beautiful Euler's Identity:",
        "id": "db2c5ff932238b5c7b3c1cb41aa04afd"
      },
      "date": 1686299342868
    },
    {
      "type": "edit",
      "id": "db2c5ff932238b5c7b3c1cb41aa04afd",
      "item": {
        "type": "html",
        "text": "[…] connect algebra and geometry. ",
        "id": "db2c5ff932238b5c7b3c1cb41aa04afd"
      },
      "date": 1686299353434
    },
    {
      "id": "748eb9b60e45638c33fa13c728601557",
      "type": "add",
      "item": {
        "type": "html",
        "text": "Looks a lot like Ohm's Law!  In effect, in sinusoidal situations, a capacitor is mathematically just like a resistor, that happens to have an <i>imaginary</i> value. Strange but true. So, we can treat our circuit with the same techniques that we use for two ordinary resistors, which is just algebra, only now one of our resistors is imaginary. The algebra is a little messier, but it's still algebra!  That is the beauty of complex numbers. Poof, the Calculus is out of your face!  ",
        "id": "748eb9b60e45638c33fa13c728601557"
      },
      "after": "db2c5ff932238b5c7b3c1cb41aa04afd",
      "attribution": {
        "page": "Complex Numbers"
      },
      "date": 1686299434374
    },
    {
      "type": "edit",
      "id": "748eb9b60e45638c33fa13c728601557",
      "item": {
        "type": "html",
        "text": "[…] in sinusoidal situations, a capacitor is mathematically just like a resistor, that happens to have an <i>imaginary</i> value. Strange but true. So, we can treat our circuit with the same techniques that we use for two ordinary resistors, which is just algebra, only now one of our resistors is imaginary. The algebra is a little messier, but it's still algebra!  That is the beauty of complex numbers. Poof, the Calculus is out of your face!  ",
        "id": "748eb9b60e45638c33fa13c728601557"
      },
      "date": 1686299465010
    },
    {
      "id": "5630b4d43590aa16f90d5bebec69f4ae",
      "type": "add",
      "item": {
        "type": "html",
        "text": "(<i>If you've forgotten tenth grade, you may have forgotten some tricks related to doing algebra with complex numbers, like multiplying by conjugates, etc., but trust me that it doesn't get too hairy.</i>)",
        "id": "5630b4d43590aa16f90d5bebec69f4ae"
      },
      "after": "748eb9b60e45638c33fa13c728601557",
      "attribution": {
        "page": "Complex Numbers"
      },
      "date": 1686299557020
    },
    {
      "type": "edit",
      "id": "5630b4d43590aa16f90d5bebec69f4ae",
      "item": {
        "type": "html",
        "text": "[…] (<i>If you've forgotten tenth grade, you may have forgotten some tricks related to doing algebra with complex numbers, like multiplying by conjugates, etc., but trust me that it doesn't get too hairy.</i>)",
        "id": "5630b4d43590aa16f90d5bebec69f4ae"
      },
      "date": 1686299562359
    },
    {
      "type": "add",
      "id": "4e01f4fd894e75de",
      "item": {
        "type": "paragraph",
        "id": "4e01f4fd894e75de",
        "text": "-- Konjugation einer komplexen Zahl"
      },
      "after": "b7f968c759b44e8b",
      "date": 1686299589150
    },
    {
      "id": "4e01f4fd894e75de",
      "type": "move",
      "order": [
        "27618164a054399a",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "4e01f4fd894e75de",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770",
        "0dbc4928f8a29bff",
        "c7d3e965372dcc2e"
      ],
      "date": 1686299593571
    },
    {
      "id": "4e01f4fd894e75de",
      "type": "move",
      "order": [
        "27618164a054399a",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770",
        "0dbc4928f8a29bff",
        "c7d3e965372dcc2e"
      ],
      "date": 1686299598025
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "markdown",
        "id": "d1d4f78845538196",
        "text": "* [[Rechnen mit komplexen Zahlen]] [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page] – Calculating with [[Complex Numbers]]"
      },
      "date": 1686299879058
    },
    {
      "type": "edit",
      "id": "d1d4f78845538196",
      "item": {
        "type": "markdown",
        "id": "d1d4f78845538196",
        "text": "* [[Rechnen mit komplexen Zahlen]] [https://www.tf.uni-kiel.de/matwis/amat/mw1_ge/kap_2/basics/b2_1_5.html page] – Calculating with [[Complex Numbers]] […] ⇒ [[z]] ⇒ [[Pile Systems]]"
      },
      "date": 1686300330983
    },
    {
      "type": "add",
      "id": "b381491eb639f746",
      "item": {
        "type": "paragraph",
        "id": "b381491eb639f746",
        "text": "⇒  refactor(Main): replace Person with Wiki.Page\n\nWe can now copy a wiki page .json and paste it into the text area of our view.\n\nWhen we click on the 'Parse JSON' button, we can see the changes in the Elm debugger related to the individual message and the  updated model, as well as the parsing result.\n\n"
      },
      "after": "27618164a054399a",
      "date": 1686318075347
    },
    {
      "type": "edit",
      "id": "b381491eb639f746",
      "item": {
        "type": "paragraph",
        "id": "b381491eb639f746",
        "text": "⇒  refactor(Main): replace Person with Wiki.Page\n\nWe can now copy a wiki page .json and paste it into the text area of our view. [https://github.com/RalfBarkow/vite-elm-dojo/commit/e681645221cd3c2be3ac048b796525be8a440f2c commit]\n\nWhen we click on the 'Parse JSON' button, we can see the changes in the Elm debugger related to the individual message and the  updated model, as well as the parsing result.\n\n"
      },
      "date": 1686318087768
    },
    {
      "type": "edit",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "⇒ [[Decode JSON in Elm]]: Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. [https://www.linkedin.com/posts/ralfbarkow_elm-federatedwiki-zettelkasten-activity-7072829603974656001-IfNp post]"
      },
      "date": 1686318169427
    },
    {
      "type": "edit",
      "id": "27618164a054399a",
      "item": {
        "type": "paragraph",
        "id": "27618164a054399a",
        "text": "⇒ [[Decode JSON in Elm]]: Over the last few days, I've been working on serializing and deserializing our wiki pages in terms of JSON data. In other words, how a page stored in a server directory is decoded by a wiki client and re-encoded (serialized) as JSON after changes. [https://www.linkedin.com/posts/ralfbarkow_elm-federatedwiki-zettelkasten-activity-7072829603974656001-IfNp post] ⇒ [[Automation as Team Player]]"
      },
      "date": 1686318377397
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie [[Mensch und\nKI]] zu einer gemeinsam\nevolvierenden Einheit\nwerden können. [⇒ [[Humans and AI]]] [https://www.linkedin.com/posts/ralfbarkow_mensch-und-ki-activity-7072819839253262336-LmRu post]"
      },
      "date": 1686318942807
    },
    {
      "type": "remove",
      "id": "0dbc4928f8a29bff",
      "date": 1686318991034
    },
    {
      "type": "remove",
      "id": "c7d3e965372dcc2e",
      "date": 1686318994367
    },
    {
      "type": "edit",
      "id": "8cce3377200f4770",
      "item": {
        "type": "paragraph",
        "id": "8cce3377200f4770",
        "text": "Im Interview erklärt der\nEvolutionsbiologe [[Paul Rainey]], wie [[Mensch und\nKI]] zu einer gemeinsam\nevolvierenden Einheit\nwerden können. [⇒ [[Humans and AI]]] [https://www.linkedin.com/posts/ralfbarkow_mensch-und-ki-activity-7072819839253262336-LmRu post] ⇒ [[Fabian Kostadinov]]: [https://www.linkedin.com/feed/update/urn:li:activity:7072819839253262336?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7072819839253262336%2C7072829042470572033%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287072829042470572033%2Curn%3Ali%3Aactivity%3A7072819839253262336%29 linkedin]"
      },
      "date": 1686318996783
    },
    {
      "type": "edit",
      "id": "b381491eb639f746",
      "item": {
        "type": "paragraph",
        "id": "b381491eb639f746",
        "text": "⇒  refactor(Main): replace Person with Wiki.Page [https://github.com/RalfBarkow/vite-elm-dojo/commit/e681645221cd3c2be3ac048b796525be8a440f2c commit]\n\nWe can now copy a wiki page .json and paste it into the text area of our view. [https://github.com/RalfBarkow/vite-elm-dojo/commit/e681645221cd3c2be3ac048b796525be8a440f2c commit]\n\nWhen we click on the 'Parse JSON' button, we can see the changes in the Elm debugger related to the individual message and the  updated model, as well as the parsing result.\n\n"
      },
      "date": 1686320218645
    },
    {
      "type": "add",
      "id": "cb36f735ac1389e5",
      "item": {
        "type": "paragraph",
        "id": "cb36f735ac1389e5",
        "text": "⇒ [[Exploratory Parsing]]: Viewing parsedJson with Elm Debugger as a starting point for further [[Exploration]]."
      },
      "after": "b381491eb639f746",
      "date": 1686320680583
    },
    {
      "type": "add",
      "id": "94532d47c141f756",
      "item": {
        "type": "paragraph",
        "id": "94532d47c141f756",
        "text": "We see the journal entry number 0. "
      },
      "after": "cb36f735ac1389e5",
      "date": 1686320752175
    },
    {
      "type": "add",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "paragraph",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement time travel debugging of the journal similar to the Elm debugger."
      },
      "after": "94532d47c141f756",
      "date": 1686320811418
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement time travel debugging of the journal similar to the Elm debugger."
      },
      "date": 1686320812684
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the Elm debugger."
      },
      "date": 1686320884531
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]."
      },
      "date": 1686320964315
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)"
      },
      "date": 1686321534779
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n- [ ] And I would like to try [[Explorative Parsing]]"
      },
      "date": 1686321619398
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n- [ ] And I would like to try [[Explorative Parsing]]. In the example, 184 journal entries are still unknown."
      },
      "date": 1686321789553
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] Next, I would like to implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n- [ ] And I would like to try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown."
      },
      "date": 1686321805751
    },
    {
      "type": "add",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "Ward described to us an\nopen source project\nthat you can use today\nto\nparse\nit's a tool to parse to extract data\nfrom and a methodology for extracting\ndata from semi-structured text so"
      },
      "after": "94532d47c141f756",
      "date": 1686321961106
    },
    {
      "id": "5a107e864b153e29",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "94532d47c141f756",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686321963850
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze the [[Journal]] data. Ward described a parsing tool and methodology for extracting data and iteratively creating a grammar that describes that data."
      },
      "date": 1686322182432
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to parse to extract data\nfrom and a methodology for extracting\ndata from semi-structured text soand iteratively creating a grammar that describes that data."
      },
      "date": 1686322267792
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text soand iteratively creating a grammar that describes that data."
      },
      "date": 1686322394554
    },
    {
      "type": "edit",
      "id": "94532d47c141f756",
      "item": {
        "type": "paragraph",
        "id": "94532d47c141f756",
        "text": "We see the journal entry number 0. Next:"
      },
      "date": 1686322427751
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n- [ ] try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown."
      },
      "date": 1686322439077
    },
    {
      "id": "2289f726c59c9073",
      "type": "add",
      "item": {
        "type": "image",
        "id": "2289f726c59c9073",
        "text": "[[Exploratory Parsing]]: Viewing parsedJson with Elm Debugger as a starting point for further [[Exploration]].",
        "size": "wide",
        "width": 419,
        "height": 110,
        "url": "/assets/plugins/image/6423eb59c723dbc884ba67616dc8732d.jpg"
      },
      "after": "cb36f735ac1389e5",
      "attribution": {
        "page": "Decode JSON in Elm"
      },
      "date": 1686322470268
    },
    {
      "type": "edit",
      "id": "94532d47c141f756",
      "item": {
        "type": "paragraph",
        "id": "94532d47c141f756",
        "text": "We see the journal entry number 0, which created the [[WikiSpec Stroy]] page. Next:"
      },
      "date": 1686322521284
    },
    {
      "type": "edit",
      "id": "94532d47c141f756",
      "item": {
        "type": "paragraph",
        "id": "94532d47c141f756",
        "text": "We see the journal entry number 0, which created the [[WikiSpec Story]] page. Next:"
      },
      "date": 1686322606457
    },
    {
      "item": {
        "type": "factory",
        "id": "32335d5605bf2159"
      },
      "id": "32335d5605bf2159",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686322646573
    },
    {
      "id": "c7b822078023dd29",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "c7b822078023dd29",
        "49fb4491f09f834e",
        "8cce3377200f4770",
        "32335d5605bf2159"
      ],
      "date": 1686322651777
    },
    {
      "id": "c7b822078023dd29",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770",
        "32335d5605bf2159"
      ],
      "date": 1686322671613
    },
    {
      "id": "32335d5605bf2159",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686322694170
    },
    {
      "type": "edit",
      "id": "32335d5605bf2159",
      "item": {
        "type": "code",
        "id": "32335d5605bf2159",
        "text": "{\n  \"title\": \"WikiSpec Story\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"WikiSpec Story\",\n        \"story\": []\n      },\n      \"date\": 1686168396028\n    }\n  ]\n}"
      },
      "date": 1686322698725
    },
    {
      "type": "edit",
      "id": "94532d47c141f756",
      "item": {
        "type": "paragraph",
        "id": "94532d47c141f756",
        "text": "We see the journal entry number 0, which created the [[WikiSpec Story]] page. "
      },
      "date": 1686322700429
    },
    {
      "type": "add",
      "id": "abc2b73384109441",
      "item": {
        "type": "paragraph",
        "id": "abc2b73384109441",
        "text": "Next:"
      },
      "after": "94532d47c141f756",
      "date": 1686322701484
    },
    {
      "id": "abc2b73384109441",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686322704170
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze that unkown [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text soand iteratively creating a grammar that describes that data."
      },
      "date": 1686322804884
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze that unkown [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. soand iteratively creating a grammar that describes that data."
      },
      "date": 1686322827234
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze that unkown [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around - that's new"
      },
      "date": 1686322946267
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze that unknown [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "date": 1686322975887
    },
    {
      "type": "add",
      "id": "00a6d71655b350bb",
      "item": {
        "type": "paragraph",
        "id": "00a6d71655b350bb",
        "text": "This is what we can do today, we can have the look ahead the regular expression type of thing and the nesting of the parser generator type of thing all mixed together."
      },
      "after": "5a107e864b153e29",
      "date": 1686323081293
    },
    {
      "type": "edit",
      "id": "00a6d71655b350bb",
      "item": {
        "type": "paragraph",
        "id": "00a6d71655b350bb",
        "text": "This is what we can do today, we can have the look ahead [⇒ [[Write-Ahead-Log]]], the regular expression type of thing, and the nesting of the parser generator type of thing all mixed together."
      },
      "date": 1686323151574
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n- [ ] try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown. How do we count the remaining UnknownJournal entries?"
      },
      "date": 1686328458559
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around."
      },
      "date": 1686328504304
    },
    {
      "item": {
        "type": "factory",
        "id": "6208da63cdd643f8"
      },
      "id": "6208da63cdd643f8",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686328714546
    },
    {
      "type": "edit",
      "id": "6208da63cdd643f8",
      "item": {
        "type": "reference",
        "id": "6208da63cdd643f8",
        "site": "fed.wiki",
        "slug": "text-and-video-chats",
        "title": "Text and Video Chats",
        "text": "Federated wiki developers and users meet twice a week by video chat and all day every day by text chat."
      },
      "date": 1686328723763
    },
    {
      "id": "6208da63cdd643f8",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "00a6d71655b350bb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686328754621
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n> Point-in-time recovery: replaying up to a specific message means recovering the backend state as at that point in time\n- [ ] try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown. How do we count the remaining UnknownJournal entries?"
      },
      "date": 1686330503307
    },
    {
      "type": "edit",
      "id": "11f13b8fb10aa3de",
      "item": {
        "type": "markdown",
        "id": "11f13b8fb10aa3de",
        "text": "- [ ] implement [[Time Travel Debugging]] of the journal similar to the [[Elm Debugger]]. (Record and Replay)\n> Point-in-time recovery: replaying up to a specific message means recovering the backend state as at that point in time [⇒ [[Write-Ahead-Log]]]\n- [ ] try [[Exploratory Parsing]]. In the example, 184 journal entries are still unknown. How do we count the remaining UnknownJournal entries?"
      },
      "date": 1686330528658
    },
    {
      "type": "add",
      "id": "7ae993791a0ad9eb",
      "item": {
        "type": "paragraph",
        "id": "7ae993791a0ad9eb",
        "text": "⇒ [[ track successes and failures "
      },
      "after": "00a6d71655b350bb",
      "date": 1686330903575
    },
    {
      "type": "edit",
      "id": "7ae993791a0ad9eb",
      "item": {
        "type": "paragraph",
        "id": "7ae993791a0ad9eb",
        "text": "⇒ [[Track Successes and Failures]]"
      },
      "date": 1686330915742
    },
    {
      "type": "edit",
      "id": "7ae993791a0ad9eb",
      "item": {
        "type": "paragraph",
        "id": "7ae993791a0ad9eb",
        "text": "⇒ [[Understanding Machines]] ⇒ [[Track Successes and Failures]]"
      },
      "date": 1686331295073
    },
    {
      "item": {
        "type": "factory",
        "id": "88b0ee195d65447f"
      },
      "id": "88b0ee195d65447f",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686351520327
    },
    {
      "id": "88b0ee195d65447f",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "00a6d71655b350bb",
        "7ae993791a0ad9eb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "88b0ee195d65447f",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686351527068
    },
    {
      "id": "88b0ee195d65447f",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "88b0ee195d65447f",
        "5a107e864b153e29",
        "00a6d71655b350bb",
        "7ae993791a0ad9eb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686351540182
    },
    {
      "type": "edit",
      "id": "88b0ee195d65447f",
      "item": {
        "type": "code",
        "id": "88b0ee195d65447f",
        "text": "{\n  \"title\": \"WikiSpec Story\",\n  \"story\": [\n    {\n      \"type\": \"factory\",\n      \"id\": \"d1493b7d30cfab68\"\n    }\n  ],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"WikiSpec Story\",\n        \"story\": []\n      },\n      \"date\": 1686168396028\n    },\n    {\n      \"item\": {\n        \"type\": \"factory\",\n        \"id\": \"d1493b7d30cfab68\"\n      },\n      \"id\": \"d1493b7d30cfab68\",\n      \"type\": \"add\",\n      \"date\": 1686168405017\n    }\n  ]\n}"
      },
      "date": 1686351543989
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around.Tet"
      },
      "date": 1686351555022
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "Test data"
      },
      "date": 1686351566188
    },
    {
      "type": "add",
      "id": "388cd43571f11962",
      "item": {
        "type": "paragraph",
        "id": "388cd43571f11962",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around.Tet"
      },
      "after": "5a107e864b153e29",
      "date": 1686351576238
    },
    {
      "type": "edit",
      "id": "5a107e864b153e29",
      "item": {
        "type": "paragraph",
        "id": "5a107e864b153e29",
        "text": "Test data for the Add Factory case"
      },
      "date": 1686351620707
    },
    {
      "id": "5a107e864b153e29",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "88b0ee195d65447f",
        "388cd43571f11962",
        "00a6d71655b350bb",
        "7ae993791a0ad9eb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686351624307
    },
    {
      "type": "edit",
      "id": "388cd43571f11962",
      "item": {
        "type": "paragraph",
        "id": "388cd43571f11962",
        "text": "Damit rück folgender Code in den Focus:"
      },
      "date": 1686351711895
    },
    {
      "type": "add",
      "id": "9c5fd63c6ea59354",
      "item": {
        "type": "paragraph",
        "id": "9c5fd63c6ea59354",
        "text": "We want to analyze the [[Journal]] data. Ward described a tool to [[parse]], to extract data\nfrom and a methodology for extracting\ndata from text. This is not the usual kind of computer science you might have learned in a compiler course, because it's the other way around: you have the text first, and then you write the grammar that fits the text, not the other way around.Tet"
      },
      "after": "388cd43571f11962",
      "date": 1686351713260
    },
    {
      "item": {
        "type": "factory",
        "id": "9e2eaf73dc60bdf4"
      },
      "id": "9e2eaf73dc60bdf4",
      "type": "add",
      "after": "8cce3377200f4770",
      "date": 1686351718024
    },
    {
      "id": "9e2eaf73dc60bdf4",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "88b0ee195d65447f",
        "388cd43571f11962",
        "9c5fd63c6ea59354",
        "00a6d71655b350bb",
        "7ae993791a0ad9eb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "9e2eaf73dc60bdf4",
        "8cce3377200f4770"
      ],
      "date": 1686351719933
    },
    {
      "id": "9e2eaf73dc60bdf4",
      "type": "move",
      "order": [
        "27618164a054399a",
        "b381491eb639f746",
        "cb36f735ac1389e5",
        "2289f726c59c9073",
        "94532d47c141f756",
        "32335d5605bf2159",
        "abc2b73384109441",
        "11f13b8fb10aa3de",
        "5a107e864b153e29",
        "88b0ee195d65447f",
        "388cd43571f11962",
        "9e2eaf73dc60bdf4",
        "9c5fd63c6ea59354",
        "00a6d71655b350bb",
        "7ae993791a0ad9eb",
        "6208da63cdd643f8",
        "9b42b027ecdc1b96",
        "d757e3683ee2ef35",
        "e611299b20de797e",
        "a1755ef9a5f10716",
        "938d77b8ed4532be",
        "b7f968c759b44e8b",
        "d1d4f78845538196",
        "7a44228a8d4ed00326959a7edcd16218",
        "6c8f5842ab3a513b4812c808f370e0e4",
        "db2c5ff932238b5c7b3c1cb41aa04afd",
        "748eb9b60e45638c33fa13c728601557",
        "4e01f4fd894e75de",
        "5630b4d43590aa16f90d5bebec69f4ae",
        "6513edc6f0f4f49e",
        "47d62fd9eab017bd",
        "f5e9bccd398deca0",
        "89505128310ae547",
        "dbbfecebbb6d1905",
        "66f6e65ef4c93c3a",
        "cedf691819ff0414",
        "a6daf917861b25ec",
        "f7ddb0d57e28e901",
        "bce5b923e22bb56a",
        "80eceb8cf7748068",
        "2504c77657a204ed",
        "49fb4491f09f834e",
        "c7b822078023dd29",
        "8cce3377200f4770"
      ],
      "date": 1686351736325
    },
    {
      "type": "edit",
      "id": "9e2eaf73dc60bdf4",
      "item": {
        "type": "code",
        "id": "9e2eaf73dc60bdf4",
        "text": "storyDecoder : Decode.Decoder Story\nstoryDecoder =\n    Decode.oneOf\n        [ Decode.map Future futureEventDecoder\n        , Decode.map Snippet storySnippetDecoder\n        , Decode.map AddFactory factoryItemDecoder\n        , Decode.map (\\_ -> EmptyStory) (Decode.succeed EmptyStory)\n        ]"
      },
      "date": 1686351739259
    },
    {
      "type": "edit",
      "id": "388cd43571f11962",
      "item": {
        "type": "paragraph",
        "id": "388cd43571f11962",
        "text": "This brings the following code into focus:"
      },
      "date": 1686351751808
    }
  ]
}