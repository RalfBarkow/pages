{
  "title": "Edit Conflict Resolution",
  "story": [
    {
      "type": "html",
      "text": "If two or more people try to edit a page simultaneously, the first one to save wins and the rest are notified that they can't save. Should you be so notified, try opening a new edit window in a new browser and copying your changes to it. See the techniques below for details on how to do this.",
      "id": "4554c482de0ce7728c88adae17c3a439"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "<b>Merging your changes (technique 1)</b>",
      "id": "be57445c04e07bf2592c547fba509fec"
    },
    {
      "type": "html",
      "text": "\nThis is simpler than technique 2, but risks losing your work: For a\nlittle while, your changes exist only in the clipboard.",
      "id": "2f8647a39d6c8b835f7eacb5fc7b33d8"
    },
    {
      "type": "html",
      "text": " \"back\" your browser to get back to your edit",
      "id": "05c5817508bb935b33630a5263abfb0f"
    },
    {
      "type": "html",
      "text": " copy your edit (under Windows, mark it with the mouse or keyboard and then use control-c to copy it)",
      "id": "212fadad68ea1a85901c9629a2c305af"
    },
    {
      "type": "html",
      "text": " \"back\" your browser again to get back to the page",
      "id": "b9f50a7d46acc47b9c3286a5e69af1ed"
    },
    {
      "type": "html",
      "text": " \"refresh\" the page",
      "id": "adafa8e56cf0eaf0f2c68cfcec63d14d"
    },
    {
      "type": "html",
      "text": " See what changed",
      "id": "d1728051624d77467871b438c3d936eb"
    },
    {
      "type": "html",
      "text": " Click on the \"Edit\" button",
      "id": "14c0c2a44838d4889709321a9ce2b26c"
    },
    {
      "type": "html",
      "text": " Paste your changes into the page (under Windows, control-v)",
      "id": "d1b8e9f561620ea5e1db78f003ef6c3b"
    },
    {
      "type": "html",
      "text": "<b>Merging your changes (technique 2)</b>",
      "id": "7a37d7ad90206a82e6dc9e3a45a43af2"
    },
    {
      "type": "html",
      "text": "\nThis is a little more complex than technique 1, but harder to accidentally lose your work.",
      "id": "9dbbdebcd5018cfb320470c2914fece9"
    },
    {
      "type": "html",
      "text": " \"Back\" your browser to get back to your edit",
      "id": "4f8a61b34f2f27a0344c07a4ed11b396"
    },
    {
      "type": "html",
      "text": " \"New window\" your browser. The new window is a backup copy of your changes.",
      "id": "47e15089f1723f88180e0ac898b459b9"
    },
    {
      "type": "html",
      "text": " Select your old window and perform the remaining steps in it.",
      "id": "5fe7a2108ab22c0c172b9e1725faa5e1"
    },
    {
      "type": "html",
      "text": " back your browser to get back to the page",
      "id": "aa7659b0f957bf2e39f6f705e7d251e6"
    },
    {
      "type": "html",
      "text": " Refresh to pick up the changes made by the other editor.",
      "id": "6d739c0f9d4eb959a940a8eb2ebb430f"
    },
    {
      "type": "html",
      "text": " Click on the \"Edit\" button.",
      "id": "e3367c93d7728ec42c1cb79f8e1a89ab"
    },
    {
      "type": "html",
      "text": " Copy your changes from the backup window you made in step 2, carefully merging them in with the first author's changes.",
      "id": "46564b1537b8933724bd68bcecc489ab"
    },
    {
      "type": "html",
      "text": " Click on the \"Save\" button.",
      "id": "b52a46f3fbff3eadc4a394d827e26cfe"
    },
    {
      "type": "html",
      "text": " Get rid of the backup window.",
      "id": "f2068c530749082f7ab7c002a8c1ec54"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "<b>Discussion about how to handle simultaneous edits</b>",
      "id": "10f81d4e193449f76aabab19b703a00d"
    },
    {
      "type": "html",
      "text": "Wiki used not to refuse the second save. Most of this discussion was written when the last save won.",
      "id": "1202bfbe63316af9ae7734f3321ffc50"
    },
    {
      "type": "html",
      "text": "\nUntil something is implemented, however, it's probably sociable to not spend an excessive time on the edit page, especially on pages that are getting \"lots of discussion on them\" at the time.",
      "id": "20527b13660a98368efa2023faf42bdf"
    },
    {
      "type": "html",
      "text": "\nConsider...",
      "id": "eccd270842094e6585c5d26bb12b8376"
    },
    {
      "type": "html",
      "text": " [[Stepped On My Edit]]",
      "id": "270ee3becf64f076a46bbb1209129e0c"
    },
    {
      "type": "html",
      "text": " [[Cautions While Editing Text]]",
      "id": "49a5796ab642b9d73508b9e815bb8f2c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "<i>Moved from [[Wiki Wiki Bugs]]:</i>",
      "id": "47f7c73b06ab5b532c7e97e92b4bb509"
    },
    {
      "type": "html",
      "text": "\n[[Clifford Adams]] has convinced me that I have to at least detect editing collisions. I warmed up by running a month of old logs through the logic he suggests. And the answer is, yes, pages are getting clobbered, about once a day. The results from my simulation follow. -- [[Ward Cunningham]]",
      "id": "d711ffc2c041dd82817a5b72ddb6b73e"
    },
    {
      "type": "code",
      "text": " 06/Nov 23:11:57 StudentInformationProcessingBoard -- cosrel2.hp.com => ocsp-3.mit.edu\n 06/Nov 23:57:03 EditText -- cosrel1.hp.com => cosrel2.hp.com\n 08/Nov 01:37:30 SelfDocumentingCode -- cr824441-a.rchrd1.on.wave.home.com => zaleriza.owl.co.uk\n 08/Nov 13:18:16 SelfDocumentingCode -- ingenius.on.ca => 198.202.137.64\n 14/Nov 14:12:22 NatureOfOrderDiscussion -- 165.87.14.197 => cr824441-a.rchrd1.on.wave.home.com\n 16/Nov 06:41:54 WhoIsUsingJunit -- red.parallax.co.uk => 206.98.234.163\n 16/Nov 08:42:48 WayneConrad -- emprx7.aexp.com => emprx5.aexp.com\n 17/Nov 08:18:51 HungarianNotation -- emprx6.aexp.com => temagami.carleton.ca\n 18/Nov 07:17:29 WayneConrad -- emprx7.aexp.com => emprx6.aexp.com\n 20/Nov 23:21:10 AcompanyIsProsecutedForBeingAmonopoly -- port-5-221.magma.ca => pm3071.esva.net\n 21/Nov 10:51:12 DoesXpWorkForJava -- c1029014-a.bvrtn1.or.home.com => objectiv.demon.co.uk\n 22/Nov 05:14:11 WikiSuccessCanInhibitNewWriters -- objectiv.demon.co.uk => hil-qbu-ppu-vty63.as.wcom.net\n 22/Nov 21:19:54 XpTrowePrice -- dt101nd7.san.rr.com => abd77b7f.ipt.aol.com\n 23/Nov 06:36:33 VlissidesOnBeck -- ss06.ny.us.ibm.com => pix2-254.ameren.com\n 23/Nov 13:01:46 RecentVisitors -- ss10.ny.us.ibm.com => cygnusx1.meto.gov.uk\n 25/Nov 09:39:20 WikiPages -- sungold2.uk.ibm.com => ppp030.rz.uni-augsburg.de\n 26/Nov 07:37:26 SmalltalkIsaFailure -- pm3-01a2-port16.dundee.net => 193.123.236.130\n 27/Nov 13:32:31 WikiPortal -- d185fda63.rochester.rr.com => dt101nd7.san.rr.com\n 28/Nov 21:30:57 WhoIsUsingJunit -- myeah0.connect.com.au => ext-proxy.capitalone.com\n 28/Nov 21:57:33 WikiPortalStories -- cr824441-a.rchrd1.on.wave.home.com => dt101nd7.san.rr.com\n 28/Nov 21:57:47 WikiPortalStories -- dt101nd7.san.rr.com => cr824441-a.rchrd1.on.wave.home.com",
      "id": "c51b0dd7612c104f9658a16111ee6832"
    },
    {
      "type": "html",
      "text": "\nPage reads can block writes and vice versa due to db level locking. Fortunately, both are fast operations so the condition does not persist. I will have to change db again to improve this. At one time, wiki did hold a read lock on the db while searching and people get locked out while browsing as a result. My new implementation, suggested by [[Dave Smith]], uses an independent index and has no impact on page reads and writes other than competing for system resources. -- [[Ward Cunningham]]",
      "id": "d6d4eea595b662331fa68b5063f78af1"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nOn may 1st I confirmed an odd property I'd noticed before. I can lock myself out of editing. Scenario: I start to edit [[My Favorite Page]] and save it. There is a spelling error. I click \"Back\" and edit the mistook out. I save the new page and get the \"I can't do that Dave\" message. However the mistooken page has been saved so I come back to it later.",
      "id": "6ae212acd43bd46a61342a8b3df6a238"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nOk lets go through this in simple detail.\nThere are two people named player1 and player2. Both player1 and player2 have the edit page open simultaneously.",
      "id": "d605ee89ff6061e6844e26da9604c535"
    },
    {
      "type": "html",
      "text": "\n2 different cases we need to handle:",
      "id": "e97fdddda97a0a613306f131cd71692e"
    },
    {
      "type": "html",
      "text": " One of them hits \"save\". Then later the other one hits \"save\".",
      "id": "162e0b876031b3e98e154e0e26523a67"
    },
    {
      "type": "html",
      "text": " One of them hits \"save\". Then later the other one decides not to make any changes after all, and closes the edit window.",
      "id": "ab0274609f51978af6d29ad03a26763f"
    },
    {
      "type": "html",
      "text": "\nWhat should the wiki do?",
      "id": "4a303827cb9cbd2eafb2874098fdc0ea"
    },
    {
      "type": "html",
      "text": "\nOptions:",
      "id": "a9d4a7307e03f2795cf698bd53d4e2ba"
    },
    {
      "type": "html",
      "text": " <b>Last one wins</b>. This is generally regarded as a bad option, because whoever saves first has no warning that his work has been completely overwritten. \"Whoever saves last is the work that is put onto the page. So if player1 saves his work last, he/she is really erasing what player2 has changed and just putting in his/her work in place of player2's work. It's pretty simple because what player1 and player2 have open will not have the changes or corrections that either one has made, in it's stead they both have separate files that have just what the page previously had (before being edited by either player1 or player2.)\" -- [[Roland Sin]].",
      "id": "82d492ace16cfbd1ff9b88750d98d6fc"
    },
    {
      "type": "html",
      "text": " <b>First one wins</b>. This is better, because it saves the first person's work, and it's possible for the wiki to give some sort of warning message to the 2nd person.",
      "id": "40f00a9ad6b3467d1d8e9d3f924e4e5e"
    },
    {
      "type": "html",
      "text": " some sort of complicated auto-merging thing.",
      "id": "92e14c9b85d32fe5c598506faf7561d1"
    },
    {
      "type": "html",
      "text": " <b>File locking</b> Somehow allows only one person at a time to edit the page. In other words, \"lock\" the page when the first person tries to edit it, \"unlock\" the page when that person is done. Could be done using semaphores in Unix, or by dbm file read/write locking (I don't know how that would work with Perl). When someone tries to edit a locked file, give that person a warning that it is being edited by someone else. (When someone is editing a page, then decides not to make any changes and simply turns off his computer - is there <b>any</b> way for the wiki to realize that person is done and unlock the page ?)",
      "id": "5811f4b1c05e36578f2082f0c0b89697"
    },
    {
      "type": "html",
      "text": "\nIs there any other way for a wiki to act?",
      "id": "88da6125824ec7545d0af1ddd7d01988"
    },
    {
      "type": "html",
      "text": "---",
      "id": "25533be22b920318fb101ace4f68901b"
    },
    {
      "type": "html",
      "text": "\nEven if the transaction has timed out, there's no need to refuse the edit if no one else has tried to edit the page. It's probably only worthwhile checking the timeout when someone tries to edit the page and it's currently locked. That's the time to unlock it and the lock it for the second user, assuming a time greater than the timeout has already passed. - [[George Dinwiddie]]",
      "id": "0930abf078cd30e2cdb952c7a749d670"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nI'm certain Ward knows N ways to fix this: it's a question of whether it's worthwhile. As wiki grows, it's starting to look to me like maybe it is. -- rj",
      "id": "69856d4eabef2b4e8229c71519fe23c6"
    },
    {
      "type": "html",
      "text": "\nI am looking for change-merge heuristics for another application. I want to be able to reconcile changes in the presence of page reorganization. My best strategy so far is to capture editing gestures in the gui, map those to a stream of deltas in a related semantic space (like whole phrases), then concatenate streams in all possible orders and look for differences. If none, I've successfully merged. Any better ideas? -- [[Ward Cunningham]]",
      "id": "3c1fddb1468e4ee5de525a7126194e7d"
    },
    {
      "type": "html",
      "text": "\np.s. This may not seem like the [[Simplest Thing]], but a workable solution simplifies a dozen other parts of the system.",
      "id": "e6a766a47043e96215fa7b4e95b7480c"
    },
    {
      "type": "html",
      "text": "\nProblem with above is that it may often produce something which is slightly wrong in a lot of little separate locations, and then the user needs a way to navigate through all those fixing them up, i.e. something that needs a good refactoring. I'm guessing a common reason for making a lot of little edits is when refactoring a page or three (as you put it, page reorganization.) If two users try to refactor something simultaneously, my gut feel is it's time to give up on the merging! Here's a benchmark for deciding whether an idea is worth following: The closer you get towards wanting the editor to be capable of \"automatic\" merging in such a wide variety of circumstances... the closer we are to talking about something that actually knows how to <i>refactor</i> well! And look at how difficult it is to explain to <i>people</i> how to do that, let alone \"explaining\" it into some software! Much of the content here is about grappling with that little problem. -- [[Daniel Earwicker]]",
      "id": "2af89a17b57707633570798fcb6b0481"
    },
    {
      "type": "html",
      "text": "<i>The merge strategies that I've seen generally do the obvious stuff for you and then leave the rest up to the latest author. Wiki could do this by putting marked up text into the page and dumping the second author back into edit mode. You'd end up with something like:</i>",
      "id": "b8fae7fbece658fccec4764022f2af0f"
    },
    {
      "type": "code",
      "text": "  <The other guys line\n  >Your line",
      "id": "d05c862fb7f6946ca689decdef6a7abd"
    },
    {
      "type": "html",
      "text": "<i>right in the middle of the page. The second author would then have an opportunity to make the page look right and check in.</i>",
      "id": "7dbcfd24d7e972d4cd0203bff17ee01a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nYou don't want to do [[Pessimistic Locking]], because (1) people may go into edit mode and then navigate to another page or kill the browser, and (2) you don't normally want to hold locks during end user \"think time,\" while waiting for user input.",
      "id": "ee739640e7230c13d24c7819a5aab972"
    },
    {
      "type": "html",
      "text": "\nA very commonly used [[Optimistic Locking]] technique is to use a timestamp (or a checksum, or a version number).\nNotice the \"(last edited April 15, 1999)\" text at the end of the page:\nIf this contained the last update time, to the millisecond, as measured by the server, then one could easily detect conflicting changes.\nIt works like this:\nWhen you select [[Edit Text]], the server puts the last edit date/time (or a checksum of the entire page, or the version number) on the edit page in read-only field (perhaps a hidden field).\nWhen you press the Save button, the server compares that read-only field to the date/time (or the checksum or version number) of the record you're about to update.\nIf they're different, you have a conflict - someone else was the first person to submit a change - so the server should refuse the save with a rude message about how slow a thinker the (second) editor must be.\nIf they're the same, there's no conflict - you're the first person to submit a change - so the server should update the page with your new text (also updating its timestamp or incrementing its version number).",
      "id": "7128e6296ae3c1b09a6f83822a9fb844"
    },
    {
      "type": "html",
      "text": "\nThis technique is very common in relational databases.",
      "id": "d5982718d33fd6f7c7ec7afceae41296"
    },
    {
      "type": "html",
      "text": "\nNow for the hard part:\nMerging changes.\nTo [[Do The Simplest Thing That Could Possibly Work]], tell the 2nd saver that their changes conflict, and let them work out the conflicts by hand.\nIf conflicts are rare and simple, this can work well.",
      "id": "f45b16d4be1523915bc16fadd3f2461e"
    },
    {
      "type": "html",
      "text": "\nIf you want to provide automated assistance, I've seen version control systems be quite effective with automated merging based on doing \"diff\"s of the new versions, relative to a common ancestor, and merging the changes.\nIf the two editors made changes to some of the same lines, just put both versions of those lines in the output and ask the humans to resolve it.",
      "id": "03a6b1b78c0ae39bebe5a0dfb857ef37"
    },
    {
      "type": "html",
      "text": "(GNU \"diff\" does automated merging, and has a mode to put #ifdef/#else/#endif C/C++ macros around areas of conflicting changes.)\nThis wouldn't take more than an hour to code up in Perl, I'm sure.",
      "id": "0539cdbb19faccc66129f931dd655d5d"
    },
    {
      "type": "html",
      "text": "\nA special case to consider:\nIn [[Thread Mode]] discussion, it's common for both authors to add text at the end.\nRecognize this as a special case, and just add the 2nd saver's text after the 1st saver's text, and treat this as a \"automatically resolved conflict.\"",
      "id": "aa3ca2735bb1886f4d3aa70c48232459"
    },
    {
      "type": "html",
      "text": "-- [[Jeff Grigg]]",
      "id": "cb7f261e4e09a03dc9208f41a7d6f4c1"
    },
    {
      "type": "html",
      "text": "\nP.S. If I save, and then use the browser to back up a page, the checksum or timestamp won't be right. Probably need some way to deal with that. (<i>I think there's no need to do anything special in this case. If someone is looking at a old version of the page, with an old timestamp, then if that person chooses *not* to make an edit, everything's OK. If that person *does* choose to make changes to this old, obsolete version of the page, the above algorithm gives him a warning - hopefully he soon learns to hit the \"refresh\" button just before editing a page.</i>)",
      "id": "f289e131e955f4b2a8ea97217b0981be"
    },
    {
      "type": "html",
      "text": "<i>How does that substantially differ from what happens with [[Edit Copy]] right now?</i>",
      "id": "d68a5c92a859c8bbd381c2a1b864a2df"
    },
    {
      "type": "html",
      "text": "\n[[Edit Copy]] doesn't stop page smashes. The above approach does.",
      "id": "0b33d2bf00f8b6170b029aa991fadfc1"
    },
    {
      "type": "html",
      "text": "<i>Somehow, I suspect that Ward is beyond just trying to stop page smashes. Most page collisions will be non-conflicting, so being optimistic as well as friendly, the algorithm Ward described will try to give the players the benefit of the doubt and merge their changes. Having gone that far, he can easily detect conflict and generate a (polite) message.</i>",
      "id": "dfc6b6bb3733a0e87607c0e4c60fc2c7"
    },
    {
      "type": "html",
      "text": "\nOn the contrary. Whenever a page smash occurs, the edit of the first person is lost. Unless I'm more stupid than usual, that's the topic of the page.",
      "id": "76812c1be622a926134e7afed632a38c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nYes, I'd humbly suggest that locking isn't an appropriate strategy here. How long should locks stay valid? What's to prevent abuse of the locking? Merging is plainly called for. Probably the easiest way would be to rely on the multiple checkouts/checkin facilities of [[Cyclic Cvs]]:",
      "id": "12b7f10590a13fd74873fcdd3d41bea7"
    },
    {
      "type": "html",
      "text": " Player 1 edits a page.",
      "id": "77db954af117ded43eb8da24b4f8db33"
    },
    {
      "type": "html",
      "text": " Player 2 edits the same page.",
      "id": "7ce69d48ffb31eb00a4cd2ba32d2c8c2"
    },
    {
      "type": "html",
      "text": " player 1 saves their edits - fine, page saved (checked in).",
      "id": "d82d58e428f4504d6faae02f37925267"
    },
    {
      "type": "html",
      "text": " player 2 tries to save their edits. Instead of getting their changes accepted, their deltas are merged with the deltas since the version of the page they tried to edit - use the perl interface to CVS - and they're given a new page showing the diffs/conflicts color coded. Except for the color coding, this is what cvs update does.",
      "id": "eb978056bed117c7127e914358ae384e"
    },
    {
      "type": "html",
      "text": " player 2 can then choose to edit the merged text - to make certain there's a valid copy, send it along in a hidden field in the merge page - or they might forget about their edits.",
      "id": "3351ed8403f341bf4f37a74182b2131b"
    },
    {
      "type": "html",
      "text": " if player 2 saves, then you do a cvs checkin.",
      "id": "a75ae6c4e0dca51867e03742b7bfaa62"
    },
    {
      "type": "html",
      "text": " If player 2 doesn't check in until after someone else - say player 3 - checks in more edits, then just repeat the process. That's to say you always want to merge",
      "id": "c2b65a39ce02f38e0b0af32cbab2ccdc"
    },
    {
      "type": "html",
      "text": " player 2's original page",
      "id": "2d0df012e61c21745ee5b62c2518bbaa"
    },
    {
      "type": "html",
      "text": " player 2's total edits",
      "id": "5d1b5211c77a0acccb8dffce7ecc0222"
    },
    {
      "type": "html",
      "text": " the delta between player 2's original page and the most recent saved version of the page.",
      "id": "58c3d79e8502ab148013168da6290e56"
    },
    {
      "type": "html",
      "text": "\nCVS will do all of this for you except the merge coloring. It's tempting, as per [[Atis Wiki]], to keep and give access to the whole page history too, but I'd suggest that's not actually in the interest of the [[Wiki Nature]] - keeping accessible page histories isn't [[Why Wiki Works]]. -- [[Peter Merel]]",
      "id": "34cab2e2be581d789e43a541411647fb"
    },
    {
      "type": "html",
      "text": "\nWay too complex.\nUnnecessary complexity.\nDo you really want to write a text editor in Java?",
      "id": "8180d406aaf9ec648a2c553bca9f982c"
    },
    {
      "type": "html",
      "text": "<i>(If you did that, you could make it WYSIWYG and people would have an easier time doing bulleted lists, and so on... but I think that would destroy a lot of the character and flavour of the Wiki experience --[[Daniel Earwicker]])</i>",
      "id": "47a46fb81e27d890c194b5758fda79c6"
    },
    {
      "type": "html",
      "text": "\nHow do you handle cut and paste? Things get very complex and nasty very quickly. -- [[Jeff Grigg]]",
      "id": "0d40d9e91a20639b026394a2179b1037"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\n[[Thoughts Weaver]] uses locking. Locking times out after a parameterized time limit (usually set to about an hour). If you try to edit a locked page, you are given a warning. The warning tells you what it can about the site that has the page locked, and about how long it's been locked. If you feel confident that you should go ahead and edit the page anyhow, you are given that option. So, it's a lock to which everyone has a key - it's a lot better than an open door, and better than punitive locking.",
      "id": "0d066f7a72bf4d4b64a3a2f5896201a7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "How about using [[Larry Wall]]'s patch to merge parallel changes to the same file? Whenever this occurs, a diff could be generated between the original and 2nd edited version, and patch used to apply this diff to the 1st edited version. I bet it would work 95% of the time, and the 5% failures could be reported back to the 2nd editor with apologies. Better than the 1st editor having their work lost without a clue. -- [[Scott Johnston]]",
      "id": "c40c2550f62c0aed2b28f086f453fc27"
    },
    {
      "type": "html",
      "text": "\nSee also: [[Willy Wonka Conflict Resolution]]",
      "id": "33322e26b4699f3bce1391892dcb3d6a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nDoes this work? -- Lam",
      "id": "a6a63b97aed0d48771e20a8a27980b1f"
    },
    {
      "type": "html",
      "text": "\nSure it \"works.\"",
      "id": "861dbd26ba316444597e1999e3aa9697"
    },
    {
      "type": "html",
      "text": "<i>And what I mean by that is that the changes made by the last person to save overwrite changes made while they were editing.</i>\nThis is an <b>undesirable outcome,</b>\nbut who's to say it's <i>\"wrong?\"</i>",
      "id": "538c9ec6a32466e9d6e1738101aded93"
    },
    {
      "type": "html",
      "text": "\nThe above comment is wrong, at least if it was referring to the use of [[Larry Wall]]'s patch utility. If successful, changes made by the last person to save are merged with the changes made while they were editing. -- [[Scott Johnston]]",
      "id": "46bff92ff8662f30354b9403ea895817"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "How big of a problem is this? From all the discussion here, it sounds like edit-collisions are happening to people all the time, but I haven't experienced them that much, not nearly enough for me to see an automated solution as desirable.",
      "id": "4c1bde10c725b77c393fd4dfa24340ec"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "May I suggest a solution that avoids the problem of save collisions entirely: implement the wiki so that you can see what the other editor(s) are typing, in real time. Something like a cross between a WYSIWYG text editor and IRC. Imagine seeing a whole lot of other users' cursors running around a busy page, cutting and editing their sections while you were editing. That would be cool and useful. -- Tom",
      "id": "1a49230324532c1a50f59976bfcbaf52"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "This is just what happens when you start EMACS in server mode and connect multiple clients to it.\nBut this has nothing to do with a browser.",
      "id": "4b3f326ba4f711f647df72c863650d71"
    },
    {
      "type": "html",
      "text": "-- Beat",
      "id": "abd28f1451a3eca5a392569d5d86831c"
    },
    {
      "type": "html",
      "text": "\nCool and useful, perhaps. Easy and cross-browser-compatible, no.",
      "id": "734b6baa7d397933bf775ccff7dd3083"
    },
    {
      "type": "html",
      "text": "\nJust 'cos it's hard doesn't mean it shouldn't be tried. Cross browser compatibility... hmmm... would it be worse than a java chat applet, which run on the major browsers? - Tom\nPS, I note the irony that I've been locked out by you during the last two times I tried to update.",
      "id": "023f79a7e30e5dbfb9236cfa840e8591"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "Another method, quite successful, is to use the methods at the top of the page plus -> (save the page textmode)(save the change textmode) then come back again in an hour, to see if your edit made it, if not then do it again. (If you have to do this more than once, just lay off the page, it's to hottohandle. Let it settle for a day, a week or a month) You have as much time as God will grant you to make whatever changes you need to make. If what you want to post will endure the test of time, so should you. -- [[Donald Noyes]]",
      "id": "05fa422bc06233ede3462210faff7f00"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nWhat happens when two people independently edit the same page at the same time?",
      "id": "a3b8329dfbd873d297a6a9caf960ea9e"
    },
    {
      "type": "html",
      "text": "<b>Good question.</b>",
      "id": "75f188baa5487267b0c124369fe1f810"
    },
    {
      "type": "html",
      "text": "\nIn 2000 this wiki's creator, [[Ward Cunningham]], implemented an [[Edit Conflict Resolution]] strategy - namely, first save wins.",
      "id": "03c34f13b606c02c83634931c11eee9b"
    },
    {
      "type": "html",
      "text": "\nSuppose two people start editing a page and one of them saves. If the second person were permitted to save, their changes would wipe out those of the first person. Instead, when the second person tries to save, they get an edit conflict message. This gives them the chance to back up to the edit window, cut their new text from the browser window, then reload the edit page and reapply their changes.",
      "id": "4204dce8b19b68170b44e507b5937e01"
    },
    {
      "type": "html",
      "text": "\nThe system works by checking the timestamp of the original version of the page against the timestamp of the page about to be overwritten. If the timestamps are the same then the page hasn't been changed and the save is allowed. If the timestamps differ then the page has changed and the version about to be overwritten contains new work. Hence the newer version must be loaded and the changes applied to that.",
      "id": "ec333c478e1986480affe4845d2d7eb7"
    },
    {
      "type": "html",
      "text": "\nNote that <b> <i>this check is not made if the two saves are by the same person</i>.</b> If you open two edit windows on a single page, make different changes to each, then save them one after the other, the second save wins. This is because changes made by one person are \"rolled-up\" and considered as a single change.",
      "id": "2f4c3cd14a82f6bc15a8a2ac9cc282a1"
    },
    {
      "type": "html",
      "text": "\nThis isn't really anything special, see [[Optimistic Locking]], but it is needed in a distributed edit environment such as [[Wards Wiki]].",
      "id": "bec096e8f71ebbf1cc6977227a835d37"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nIf two authors edited different parts of a page (in other words, the set of \"diffs\" were disjoint); any possibility of applying them both? ",
      "id": "269d8c4d04060ebac124b5e56b4323be"
    },
    {
      "type": "html",
      "text": "<i>It would be nice, but suppose the changes made by one person at the bottom of the page referred to text at the top that has independently been reworked, or even deleted. In this case there is no guarantee that the page would remain coherent, and since people are notorious for not double-checking it's probably better to do the simplest thing and let people resolve the occasional collision by hand.</i>",
      "id": "af27e03157ebc9a8f780663cc4064265"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nI can't tell you how many times I've written paragraphs of text into a page, only to have it all <b>silently</b> discarded when someone else, editing the same page at the same time, saved after me. This encouraged making small changes and saving often. ... which was, in a sense, a good thing. But it was also <b>very</b> frustrating, at times.",
      "id": "487f6f139ad9895cf92b11f4aaecc9e2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "\nIf you use Netscape instead of [[Internet Explorer]], the text entry box on the \"edit\" page will retain your text when you navigate back to it in the browser - even after this conflict. [[Internet Explorer]], unfortunately, refreshes the text entry box automagically (killing your unsubmitted paragraphs).",
      "id": "84231a5b3b69d2b9e1add2097c45b18d"
    },
    {
      "type": "html",
      "text": "<i>With IE, I simply go back and my text is still there. </i>",
      "id": "87cf8c930184c2115de40951034fb330"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "Every time at dinner, mom used to call the kids to the table and make us eat one at a time. <i>Crikey, at least cook the kids first!!</i>",
      "id": "4869fd31873a2a8276177c62ef2e4ca3"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "Why not take the CVS approach (such as Tortoise supports)? When the second to arrive edit version arrives, either it is easy to incorporate with the first or the second editor (who has not been told that his or her edit was accepted) *OR* the specifics of the text conflict are articulated. The second editor will have the opportunity to make the minimum changes to the co-linear text tract. -- DocM",
      "id": "95182b7cc18014d9cd7ec95fed80dbca"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "Just as the [[Wiki Pedia]] does: if some other user (John, say) edits the page while I am editing it, my changes are not automatically saved - instead, when I click Save, I get to a page where both John's and my version are displayed, and the merging work is left to me. -- [[Anonymous Donor]]",
      "id": "e67caa51e1bb2551a14e77b62ba33129"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "I totally agree, that would probably be the easiest way while also being somewhat convenient. -- Dilligent",
      "id": "8917214ab3b61ea19575b0e1922097b1"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "52da7894cb019be6e7ca8e3b927d3c33"
    },
    {
      "type": "html",
      "text": "[[Category Wiki]] [[Category Wiki Editing]]",
      "id": "6de845c19f221ba34f6718150a030950"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?EditConflictResolution c2.com]",
      "id": "edd41d57d1da02d3582c5ab4d8d6fa48"
    }
  ],
  "journal": [
    {
      "date": 1334097105000,
      "id": "a2bfcfde676cc805354079e201fb2151",
      "type": "create",
      "item": {
        "title": "Edit Conflict Resolution",
        "story": [
          {
            "type": "html",
            "text": "If two or more people try to edit a page simultaneously, the first one to save wins and the rest are notified that they can't save. Should you be so notified, try opening a new edit window in a new browser and copying your changes to it. See the techniques below for details on how to do this.",
            "id": "4554c482de0ce7728c88adae17c3a439"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "<b>Merging your changes (technique 1)</b>",
            "id": "be57445c04e07bf2592c547fba509fec"
          },
          {
            "type": "html",
            "text": "\nThis is simpler than technique 2, but risks losing your work: For a\nlittle while, your changes exist only in the clipboard.",
            "id": "2f8647a39d6c8b835f7eacb5fc7b33d8"
          },
          {
            "type": "html",
            "text": " \"back\" your browser to get back to your edit",
            "id": "05c5817508bb935b33630a5263abfb0f"
          },
          {
            "type": "html",
            "text": " copy your edit (under Windows, mark it with the mouse or keyboard and then use control-c to copy it)",
            "id": "212fadad68ea1a85901c9629a2c305af"
          },
          {
            "type": "html",
            "text": " \"back\" your browser again to get back to the page",
            "id": "b9f50a7d46acc47b9c3286a5e69af1ed"
          },
          {
            "type": "html",
            "text": " \"refresh\" the page",
            "id": "adafa8e56cf0eaf0f2c68cfcec63d14d"
          },
          {
            "type": "html",
            "text": " See what changed",
            "id": "d1728051624d77467871b438c3d936eb"
          },
          {
            "type": "html",
            "text": " Click on the \"Edit\" button",
            "id": "14c0c2a44838d4889709321a9ce2b26c"
          },
          {
            "type": "html",
            "text": " Paste your changes into the page (under Windows, control-v)",
            "id": "d1b8e9f561620ea5e1db78f003ef6c3b"
          },
          {
            "type": "html",
            "text": "<b>Merging your changes (technique 2)</b>",
            "id": "7a37d7ad90206a82e6dc9e3a45a43af2"
          },
          {
            "type": "html",
            "text": "\nThis is a little more complex than technique 1, but harder to accidentally lose your work.",
            "id": "9dbbdebcd5018cfb320470c2914fece9"
          },
          {
            "type": "html",
            "text": " \"Back\" your browser to get back to your edit",
            "id": "4f8a61b34f2f27a0344c07a4ed11b396"
          },
          {
            "type": "html",
            "text": " \"New window\" your browser. The new window is a backup copy of your changes.",
            "id": "47e15089f1723f88180e0ac898b459b9"
          },
          {
            "type": "html",
            "text": " Select your old window and perform the remaining steps in it.",
            "id": "5fe7a2108ab22c0c172b9e1725faa5e1"
          },
          {
            "type": "html",
            "text": " back your browser to get back to the page",
            "id": "aa7659b0f957bf2e39f6f705e7d251e6"
          },
          {
            "type": "html",
            "text": " Refresh to pick up the changes made by the other editor.",
            "id": "6d739c0f9d4eb959a940a8eb2ebb430f"
          },
          {
            "type": "html",
            "text": " Click on the \"Edit\" button.",
            "id": "e3367c93d7728ec42c1cb79f8e1a89ab"
          },
          {
            "type": "html",
            "text": " Copy your changes from the backup window you made in step 2, carefully merging them in with the first author's changes.",
            "id": "46564b1537b8933724bd68bcecc489ab"
          },
          {
            "type": "html",
            "text": " Click on the \"Save\" button.",
            "id": "b52a46f3fbff3eadc4a394d827e26cfe"
          },
          {
            "type": "html",
            "text": " Get rid of the backup window.",
            "id": "f2068c530749082f7ab7c002a8c1ec54"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "<b>Discussion about how to handle simultaneous edits</b>",
            "id": "10f81d4e193449f76aabab19b703a00d"
          },
          {
            "type": "html",
            "text": "Wiki used not to refuse the second save. Most of this discussion was written when the last save won.",
            "id": "1202bfbe63316af9ae7734f3321ffc50"
          },
          {
            "type": "html",
            "text": "\nUntil something is implemented, however, it's probably sociable to not spend an excessive time on the edit page, especially on pages that are getting \"lots of discussion on them\" at the time.",
            "id": "20527b13660a98368efa2023faf42bdf"
          },
          {
            "type": "html",
            "text": "\nConsider...",
            "id": "eccd270842094e6585c5d26bb12b8376"
          },
          {
            "type": "html",
            "text": " [[Stepped On My Edit]]",
            "id": "270ee3becf64f076a46bbb1209129e0c"
          },
          {
            "type": "html",
            "text": " [[Cautions While Editing Text]]",
            "id": "49a5796ab642b9d73508b9e815bb8f2c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "<i>Moved from [[Wiki Wiki Bugs]]:</i>",
            "id": "47f7c73b06ab5b532c7e97e92b4bb509"
          },
          {
            "type": "html",
            "text": "\n[[Clifford Adams]] has convinced me that I have to at least detect editing collisions. I warmed up by running a month of old logs through the logic he suggests. And the answer is, yes, pages are getting clobbered, about once a day. The results from my simulation follow. -- [[Ward Cunningham]]",
            "id": "d711ffc2c041dd82817a5b72ddb6b73e"
          },
          {
            "type": "code",
            "text": " 06/Nov 23:11:57 StudentInformationProcessingBoard -- cosrel2.hp.com => ocsp-3.mit.edu\n 06/Nov 23:57:03 EditText -- cosrel1.hp.com => cosrel2.hp.com\n 08/Nov 01:37:30 SelfDocumentingCode -- cr824441-a.rchrd1.on.wave.home.com => zaleriza.owl.co.uk\n 08/Nov 13:18:16 SelfDocumentingCode -- ingenius.on.ca => 198.202.137.64\n 14/Nov 14:12:22 NatureOfOrderDiscussion -- 165.87.14.197 => cr824441-a.rchrd1.on.wave.home.com\n 16/Nov 06:41:54 WhoIsUsingJunit -- red.parallax.co.uk => 206.98.234.163\n 16/Nov 08:42:48 WayneConrad -- emprx7.aexp.com => emprx5.aexp.com\n 17/Nov 08:18:51 HungarianNotation -- emprx6.aexp.com => temagami.carleton.ca\n 18/Nov 07:17:29 WayneConrad -- emprx7.aexp.com => emprx6.aexp.com\n 20/Nov 23:21:10 AcompanyIsProsecutedForBeingAmonopoly -- port-5-221.magma.ca => pm3071.esva.net\n 21/Nov 10:51:12 DoesXpWorkForJava -- c1029014-a.bvrtn1.or.home.com => objectiv.demon.co.uk\n 22/Nov 05:14:11 WikiSuccessCanInhibitNewWriters -- objectiv.demon.co.uk => hil-qbu-ppu-vty63.as.wcom.net\n 22/Nov 21:19:54 XpTrowePrice -- dt101nd7.san.rr.com => abd77b7f.ipt.aol.com\n 23/Nov 06:36:33 VlissidesOnBeck -- ss06.ny.us.ibm.com => pix2-254.ameren.com\n 23/Nov 13:01:46 RecentVisitors -- ss10.ny.us.ibm.com => cygnusx1.meto.gov.uk\n 25/Nov 09:39:20 WikiPages -- sungold2.uk.ibm.com => ppp030.rz.uni-augsburg.de\n 26/Nov 07:37:26 SmalltalkIsaFailure -- pm3-01a2-port16.dundee.net => 193.123.236.130\n 27/Nov 13:32:31 WikiPortal -- d185fda63.rochester.rr.com => dt101nd7.san.rr.com\n 28/Nov 21:30:57 WhoIsUsingJunit -- myeah0.connect.com.au => ext-proxy.capitalone.com\n 28/Nov 21:57:33 WikiPortalStories -- cr824441-a.rchrd1.on.wave.home.com => dt101nd7.san.rr.com\n 28/Nov 21:57:47 WikiPortalStories -- dt101nd7.san.rr.com => cr824441-a.rchrd1.on.wave.home.com",
            "id": "c51b0dd7612c104f9658a16111ee6832"
          },
          {
            "type": "html",
            "text": "\nPage reads can block writes and vice versa due to db level locking. Fortunately, both are fast operations so the condition does not persist. I will have to change db again to improve this. At one time, wiki did hold a read lock on the db while searching and people get locked out while browsing as a result. My new implementation, suggested by [[Dave Smith]], uses an independent index and has no impact on page reads and writes other than competing for system resources. -- [[Ward Cunningham]]",
            "id": "d6d4eea595b662331fa68b5063f78af1"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nOn may 1st I confirmed an odd property I'd noticed before. I can lock myself out of editing. Scenario: I start to edit [[My Favorite Page]] and save it. There is a spelling error. I click \"Back\" and edit the mistook out. I save the new page and get the \"I can't do that Dave\" message. However the mistooken page has been saved so I come back to it later.",
            "id": "6ae212acd43bd46a61342a8b3df6a238"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nOk lets go through this in simple detail.\nThere are two people named player1 and player2. Both player1 and player2 have the edit page open simultaneously.",
            "id": "d605ee89ff6061e6844e26da9604c535"
          },
          {
            "type": "html",
            "text": "\n2 different cases we need to handle:",
            "id": "e97fdddda97a0a613306f131cd71692e"
          },
          {
            "type": "html",
            "text": " One of them hits \"save\". Then later the other one hits \"save\".",
            "id": "162e0b876031b3e98e154e0e26523a67"
          },
          {
            "type": "html",
            "text": " One of them hits \"save\". Then later the other one decides not to make any changes after all, and closes the edit window.",
            "id": "ab0274609f51978af6d29ad03a26763f"
          },
          {
            "type": "html",
            "text": "\nWhat should the wiki do?",
            "id": "4a303827cb9cbd2eafb2874098fdc0ea"
          },
          {
            "type": "html",
            "text": "\nOptions:",
            "id": "a9d4a7307e03f2795cf698bd53d4e2ba"
          },
          {
            "type": "html",
            "text": " <b>Last one wins</b>. This is generally regarded as a bad option, because whoever saves first has no warning that his work has been completely overwritten. \"Whoever saves last is the work that is put onto the page. So if player1 saves his work last, he/she is really erasing what player2 has changed and just putting in his/her work in place of player2's work. It's pretty simple because what player1 and player2 have open will not have the changes or corrections that either one has made, in it's stead they both have separate files that have just what the page previously had (before being edited by either player1 or player2.)\" -- [[Roland Sin]].",
            "id": "82d492ace16cfbd1ff9b88750d98d6fc"
          },
          {
            "type": "html",
            "text": " <b>First one wins</b>. This is better, because it saves the first person's work, and it's possible for the wiki to give some sort of warning message to the 2nd person.",
            "id": "40f00a9ad6b3467d1d8e9d3f924e4e5e"
          },
          {
            "type": "html",
            "text": " some sort of complicated auto-merging thing.",
            "id": "92e14c9b85d32fe5c598506faf7561d1"
          },
          {
            "type": "html",
            "text": " <b>File locking</b> Somehow allows only one person at a time to edit the page. In other words, \"lock\" the page when the first person tries to edit it, \"unlock\" the page when that person is done. Could be done using semaphores in Unix, or by dbm file read/write locking (I don't know how that would work with Perl). When someone tries to edit a locked file, give that person a warning that it is being edited by someone else. (When someone is editing a page, then decides not to make any changes and simply turns off his computer - is there <b>any</b> way for the wiki to realize that person is done and unlock the page ?)",
            "id": "5811f4b1c05e36578f2082f0c0b89697"
          },
          {
            "type": "html",
            "text": "\nIs there any other way for a wiki to act?",
            "id": "88da6125824ec7545d0af1ddd7d01988"
          },
          {
            "type": "html",
            "text": "---",
            "id": "25533be22b920318fb101ace4f68901b"
          },
          {
            "type": "html",
            "text": "\nEven if the transaction has timed out, there's no need to refuse the edit if no one else has tried to edit the page. It's probably only worthwhile checking the timeout when someone tries to edit the page and it's currently locked. That's the time to unlock it and the lock it for the second user, assuming a time greater than the timeout has already passed. - [[George Dinwiddie]]",
            "id": "0930abf078cd30e2cdb952c7a749d670"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nI'm certain Ward knows N ways to fix this: it's a question of whether it's worthwhile. As wiki grows, it's starting to look to me like maybe it is. -- rj",
            "id": "69856d4eabef2b4e8229c71519fe23c6"
          },
          {
            "type": "html",
            "text": "\nI am looking for change-merge heuristics for another application. I want to be able to reconcile changes in the presence of page reorganization. My best strategy so far is to capture editing gestures in the gui, map those to a stream of deltas in a related semantic space (like whole phrases), then concatenate streams in all possible orders and look for differences. If none, I've successfully merged. Any better ideas? -- [[Ward Cunningham]]",
            "id": "3c1fddb1468e4ee5de525a7126194e7d"
          },
          {
            "type": "html",
            "text": "\np.s. This may not seem like the [[Simplest Thing]], but a workable solution simplifies a dozen other parts of the system.",
            "id": "e6a766a47043e96215fa7b4e95b7480c"
          },
          {
            "type": "html",
            "text": "\nProblem with above is that it may often produce something which is slightly wrong in a lot of little separate locations, and then the user needs a way to navigate through all those fixing them up, i.e. something that needs a good refactoring. I'm guessing a common reason for making a lot of little edits is when refactoring a page or three (as you put it, page reorganization.) If two users try to refactor something simultaneously, my gut feel is it's time to give up on the merging! Here's a benchmark for deciding whether an idea is worth following: The closer you get towards wanting the editor to be capable of \"automatic\" merging in such a wide variety of circumstances... the closer we are to talking about something that actually knows how to <i>refactor</i> well! And look at how difficult it is to explain to <i>people</i> how to do that, let alone \"explaining\" it into some software! Much of the content here is about grappling with that little problem. -- [[Daniel Earwicker]]",
            "id": "2af89a17b57707633570798fcb6b0481"
          },
          {
            "type": "html",
            "text": "<i>The merge strategies that I've seen generally do the obvious stuff for you and then leave the rest up to the latest author. Wiki could do this by putting marked up text into the page and dumping the second author back into edit mode. You'd end up with something like:</i>",
            "id": "b8fae7fbece658fccec4764022f2af0f"
          },
          {
            "type": "code",
            "text": "  <The other guys line\n  >Your line",
            "id": "d05c862fb7f6946ca689decdef6a7abd"
          },
          {
            "type": "html",
            "text": "<i>right in the middle of the page. The second author would then have an opportunity to make the page look right and check in.</i>",
            "id": "7dbcfd24d7e972d4cd0203bff17ee01a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nYou don't want to do [[Pessimistic Locking]], because (1) people may go into edit mode and then navigate to another page or kill the browser, and (2) you don't normally want to hold locks during end user \"think time,\" while waiting for user input.",
            "id": "ee739640e7230c13d24c7819a5aab972"
          },
          {
            "type": "html",
            "text": "\nA very commonly used [[Optimistic Locking]] technique is to use a timestamp (or a checksum, or a version number).\nNotice the \"(last edited April 15, 1999)\" text at the end of the page:\nIf this contained the last update time, to the millisecond, as measured by the server, then one could easily detect conflicting changes.\nIt works like this:\nWhen you select [[Edit Text]], the server puts the last edit date/time (or a checksum of the entire page, or the version number) on the edit page in read-only field (perhaps a hidden field).\nWhen you press the Save button, the server compares that read-only field to the date/time (or the checksum or version number) of the record you're about to update.\nIf they're different, you have a conflict - someone else was the first person to submit a change - so the server should refuse the save with a rude message about how slow a thinker the (second) editor must be.\nIf they're the same, there's no conflict - you're the first person to submit a change - so the server should update the page with your new text (also updating its timestamp or incrementing its version number).",
            "id": "7128e6296ae3c1b09a6f83822a9fb844"
          },
          {
            "type": "html",
            "text": "\nThis technique is very common in relational databases.",
            "id": "d5982718d33fd6f7c7ec7afceae41296"
          },
          {
            "type": "html",
            "text": "\nNow for the hard part:\nMerging changes.\nTo [[Do The Simplest Thing That Could Possibly Work]], tell the 2nd saver that their changes conflict, and let them work out the conflicts by hand.\nIf conflicts are rare and simple, this can work well.",
            "id": "f45b16d4be1523915bc16fadd3f2461e"
          },
          {
            "type": "html",
            "text": "\nIf you want to provide automated assistance, I've seen version control systems be quite effective with automated merging based on doing \"diff\"s of the new versions, relative to a common ancestor, and merging the changes.\nIf the two editors made changes to some of the same lines, just put both versions of those lines in the output and ask the humans to resolve it.",
            "id": "03a6b1b78c0ae39bebe5a0dfb857ef37"
          },
          {
            "type": "html",
            "text": "(GNU \"diff\" does automated merging, and has a mode to put #ifdef/#else/#endif C/C++ macros around areas of conflicting changes.)\nThis wouldn't take more than an hour to code up in Perl, I'm sure.",
            "id": "0539cdbb19faccc66129f931dd655d5d"
          },
          {
            "type": "html",
            "text": "\nA special case to consider:\nIn [[Thread Mode]] discussion, it's common for both authors to add text at the end.\nRecognize this as a special case, and just add the 2nd saver's text after the 1st saver's text, and treat this as a \"automatically resolved conflict.\"",
            "id": "aa3ca2735bb1886f4d3aa70c48232459"
          },
          {
            "type": "html",
            "text": "-- [[Jeff Grigg]]",
            "id": "cb7f261e4e09a03dc9208f41a7d6f4c1"
          },
          {
            "type": "html",
            "text": "\nP.S. If I save, and then use the browser to back up a page, the checksum or timestamp won't be right. Probably need some way to deal with that. (<i>I think there's no need to do anything special in this case. If someone is looking at a old version of the page, with an old timestamp, then if that person chooses *not* to make an edit, everything's OK. If that person *does* choose to make changes to this old, obsolete version of the page, the above algorithm gives him a warning - hopefully he soon learns to hit the \"refresh\" button just before editing a page.</i>)",
            "id": "f289e131e955f4b2a8ea97217b0981be"
          },
          {
            "type": "html",
            "text": "<i>How does that substantially differ from what happens with [[Edit Copy]] right now?</i>",
            "id": "d68a5c92a859c8bbd381c2a1b864a2df"
          },
          {
            "type": "html",
            "text": "\n[[Edit Copy]] doesn't stop page smashes. The above approach does.",
            "id": "0b33d2bf00f8b6170b029aa991fadfc1"
          },
          {
            "type": "html",
            "text": "<i>Somehow, I suspect that Ward is beyond just trying to stop page smashes. Most page collisions will be non-conflicting, so being optimistic as well as friendly, the algorithm Ward described will try to give the players the benefit of the doubt and merge their changes. Having gone that far, he can easily detect conflict and generate a (polite) message.</i>",
            "id": "dfc6b6bb3733a0e87607c0e4c60fc2c7"
          },
          {
            "type": "html",
            "text": "\nOn the contrary. Whenever a page smash occurs, the edit of the first person is lost. Unless I'm more stupid than usual, that's the topic of the page.",
            "id": "76812c1be622a926134e7afed632a38c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nYes, I'd humbly suggest that locking isn't an appropriate strategy here. How long should locks stay valid? What's to prevent abuse of the locking? Merging is plainly called for. Probably the easiest way would be to rely on the multiple checkouts/checkin facilities of [[Cyclic Cvs]]:",
            "id": "12b7f10590a13fd74873fcdd3d41bea7"
          },
          {
            "type": "html",
            "text": " Player 1 edits a page.",
            "id": "77db954af117ded43eb8da24b4f8db33"
          },
          {
            "type": "html",
            "text": " Player 2 edits the same page.",
            "id": "7ce69d48ffb31eb00a4cd2ba32d2c8c2"
          },
          {
            "type": "html",
            "text": " player 1 saves their edits - fine, page saved (checked in).",
            "id": "d82d58e428f4504d6faae02f37925267"
          },
          {
            "type": "html",
            "text": " player 2 tries to save their edits. Instead of getting their changes accepted, their deltas are merged with the deltas since the version of the page they tried to edit - use the perl interface to CVS - and they're given a new page showing the diffs/conflicts color coded. Except for the color coding, this is what cvs update does.",
            "id": "eb978056bed117c7127e914358ae384e"
          },
          {
            "type": "html",
            "text": " player 2 can then choose to edit the merged text - to make certain there's a valid copy, send it along in a hidden field in the merge page - or they might forget about their edits.",
            "id": "3351ed8403f341bf4f37a74182b2131b"
          },
          {
            "type": "html",
            "text": " if player 2 saves, then you do a cvs checkin.",
            "id": "a75ae6c4e0dca51867e03742b7bfaa62"
          },
          {
            "type": "html",
            "text": " If player 2 doesn't check in until after someone else - say player 3 - checks in more edits, then just repeat the process. That's to say you always want to merge",
            "id": "c2b65a39ce02f38e0b0af32cbab2ccdc"
          },
          {
            "type": "html",
            "text": " player 2's original page",
            "id": "2d0df012e61c21745ee5b62c2518bbaa"
          },
          {
            "type": "html",
            "text": " player 2's total edits",
            "id": "5d1b5211c77a0acccb8dffce7ecc0222"
          },
          {
            "type": "html",
            "text": " the delta between player 2's original page and the most recent saved version of the page.",
            "id": "58c3d79e8502ab148013168da6290e56"
          },
          {
            "type": "html",
            "text": "\nCVS will do all of this for you except the merge coloring. It's tempting, as per [[Atis Wiki]], to keep and give access to the whole page history too, but I'd suggest that's not actually in the interest of the [[Wiki Nature]] - keeping accessible page histories isn't [[Why Wiki Works]]. -- [[Peter Merel]]",
            "id": "34cab2e2be581d789e43a541411647fb"
          },
          {
            "type": "html",
            "text": "\nWay too complex.\nUnnecessary complexity.\nDo you really want to write a text editor in Java?",
            "id": "8180d406aaf9ec648a2c553bca9f982c"
          },
          {
            "type": "html",
            "text": "<i>(If you did that, you could make it WYSIWYG and people would have an easier time doing bulleted lists, and so on... but I think that would destroy a lot of the character and flavour of the Wiki experience --[[Daniel Earwicker]])</i>",
            "id": "47a46fb81e27d890c194b5758fda79c6"
          },
          {
            "type": "html",
            "text": "\nHow do you handle cut and paste? Things get very complex and nasty very quickly. -- [[Jeff Grigg]]",
            "id": "0d40d9e91a20639b026394a2179b1037"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\n[[Thoughts Weaver]] uses locking. Locking times out after a parameterized time limit (usually set to about an hour). If you try to edit a locked page, you are given a warning. The warning tells you what it can about the site that has the page locked, and about how long it's been locked. If you feel confident that you should go ahead and edit the page anyhow, you are given that option. So, it's a lock to which everyone has a key - it's a lot better than an open door, and better than punitive locking.",
            "id": "0d066f7a72bf4d4b64a3a2f5896201a7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "How about using [[Larry Wall]]'s patch to merge parallel changes to the same file? Whenever this occurs, a diff could be generated between the original and 2nd edited version, and patch used to apply this diff to the 1st edited version. I bet it would work 95% of the time, and the 5% failures could be reported back to the 2nd editor with apologies. Better than the 1st editor having their work lost without a clue. -- [[Scott Johnston]]",
            "id": "c40c2550f62c0aed2b28f086f453fc27"
          },
          {
            "type": "html",
            "text": "\nSee also: [[Willy Wonka Conflict Resolution]]",
            "id": "33322e26b4699f3bce1391892dcb3d6a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nDoes this work? -- Lam",
            "id": "a6a63b97aed0d48771e20a8a27980b1f"
          },
          {
            "type": "html",
            "text": "\nSure it \"works.\"",
            "id": "861dbd26ba316444597e1999e3aa9697"
          },
          {
            "type": "html",
            "text": "<i>And what I mean by that is that the changes made by the last person to save overwrite changes made while they were editing.</i>\nThis is an <b>undesirable outcome,</b>\nbut who's to say it's <i>\"wrong?\"</i>",
            "id": "538c9ec6a32466e9d6e1738101aded93"
          },
          {
            "type": "html",
            "text": "\nThe above comment is wrong, at least if it was referring to the use of [[Larry Wall]]'s patch utility. If successful, changes made by the last person to save are merged with the changes made while they were editing. -- [[Scott Johnston]]",
            "id": "46bff92ff8662f30354b9403ea895817"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "How big of a problem is this? From all the discussion here, it sounds like edit-collisions are happening to people all the time, but I haven't experienced them that much, not nearly enough for me to see an automated solution as desirable.",
            "id": "4c1bde10c725b77c393fd4dfa24340ec"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "May I suggest a solution that avoids the problem of save collisions entirely: implement the wiki so that you can see what the other editor(s) are typing, in real time. Something like a cross between a WYSIWYG text editor and IRC. Imagine seeing a whole lot of other users' cursors running around a busy page, cutting and editing their sections while you were editing. That would be cool and useful. -- Tom",
            "id": "1a49230324532c1a50f59976bfcbaf52"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "This is just what happens when you start EMACS in server mode and connect multiple clients to it.\nBut this has nothing to do with a browser.",
            "id": "4b3f326ba4f711f647df72c863650d71"
          },
          {
            "type": "html",
            "text": "-- Beat",
            "id": "abd28f1451a3eca5a392569d5d86831c"
          },
          {
            "type": "html",
            "text": "\nCool and useful, perhaps. Easy and cross-browser-compatible, no.",
            "id": "734b6baa7d397933bf775ccff7dd3083"
          },
          {
            "type": "html",
            "text": "\nJust 'cos it's hard doesn't mean it shouldn't be tried. Cross browser compatibility... hmmm... would it be worse than a java chat applet, which run on the major browsers? - Tom\nPS, I note the irony that I've been locked out by you during the last two times I tried to update.",
            "id": "023f79a7e30e5dbfb9236cfa840e8591"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "Another method, quite successful, is to use the methods at the top of the page plus -> (save the page textmode)(save the change textmode) then come back again in an hour, to see if your edit made it, if not then do it again. (If you have to do this more than once, just lay off the page, it's to hottohandle. Let it settle for a day, a week or a month) You have as much time as God will grant you to make whatever changes you need to make. If what you want to post will endure the test of time, so should you. -- [[Donald Noyes]]",
            "id": "05fa422bc06233ede3462210faff7f00"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nWhat happens when two people independently edit the same page at the same time?",
            "id": "a3b8329dfbd873d297a6a9caf960ea9e"
          },
          {
            "type": "html",
            "text": "<b>Good question.</b>",
            "id": "75f188baa5487267b0c124369fe1f810"
          },
          {
            "type": "html",
            "text": "\nIn 2000 this wiki's creator, [[Ward Cunningham]], implemented an [[Edit Conflict Resolution]] strategy - namely, first save wins.",
            "id": "03c34f13b606c02c83634931c11eee9b"
          },
          {
            "type": "html",
            "text": "\nSuppose two people start editing a page and one of them saves. If the second person were permitted to save, their changes would wipe out those of the first person. Instead, when the second person tries to save, they get an edit conflict message. This gives them the chance to back up to the edit window, cut their new text from the browser window, then reload the edit page and reapply their changes.",
            "id": "4204dce8b19b68170b44e507b5937e01"
          },
          {
            "type": "html",
            "text": "\nThe system works by checking the timestamp of the original version of the page against the timestamp of the page about to be overwritten. If the timestamps are the same then the page hasn't been changed and the save is allowed. If the timestamps differ then the page has changed and the version about to be overwritten contains new work. Hence the newer version must be loaded and the changes applied to that.",
            "id": "ec333c478e1986480affe4845d2d7eb7"
          },
          {
            "type": "html",
            "text": "\nNote that <b> <i>this check is not made if the two saves are by the same person</i>.</b> If you open two edit windows on a single page, make different changes to each, then save them one after the other, the second save wins. This is because changes made by one person are \"rolled-up\" and considered as a single change.",
            "id": "2f4c3cd14a82f6bc15a8a2ac9cc282a1"
          },
          {
            "type": "html",
            "text": "\nThis isn't really anything special, see [[Optimistic Locking]], but it is needed in a distributed edit environment such as [[Wards Wiki]].",
            "id": "bec096e8f71ebbf1cc6977227a835d37"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nIf two authors edited different parts of a page (in other words, the set of \"diffs\" were disjoint); any possibility of applying them both? ",
            "id": "269d8c4d04060ebac124b5e56b4323be"
          },
          {
            "type": "html",
            "text": "<i>It would be nice, but suppose the changes made by one person at the bottom of the page referred to text at the top that has independently been reworked, or even deleted. In this case there is no guarantee that the page would remain coherent, and since people are notorious for not double-checking it's probably better to do the simplest thing and let people resolve the occasional collision by hand.</i>",
            "id": "af27e03157ebc9a8f780663cc4064265"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nI can't tell you how many times I've written paragraphs of text into a page, only to have it all <b>silently</b> discarded when someone else, editing the same page at the same time, saved after me. This encouraged making small changes and saving often. ... which was, in a sense, a good thing. But it was also <b>very</b> frustrating, at times.",
            "id": "487f6f139ad9895cf92b11f4aaecc9e2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "\nIf you use Netscape instead of [[Internet Explorer]], the text entry box on the \"edit\" page will retain your text when you navigate back to it in the browser - even after this conflict. [[Internet Explorer]], unfortunately, refreshes the text entry box automagically (killing your unsubmitted paragraphs).",
            "id": "84231a5b3b69d2b9e1add2097c45b18d"
          },
          {
            "type": "html",
            "text": "<i>With IE, I simply go back and my text is still there. </i>",
            "id": "87cf8c930184c2115de40951034fb330"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "Every time at dinner, mom used to call the kids to the table and make us eat one at a time. <i>Crikey, at least cook the kids first!!</i>",
            "id": "4869fd31873a2a8276177c62ef2e4ca3"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "Why not take the CVS approach (such as Tortoise supports)? When the second to arrive edit version arrives, either it is easy to incorporate with the first or the second editor (who has not been told that his or her edit was accepted) *OR* the specifics of the text conflict are articulated. The second editor will have the opportunity to make the minimum changes to the co-linear text tract. -- DocM",
            "id": "95182b7cc18014d9cd7ec95fed80dbca"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "Just as the [[Wiki Pedia]] does: if some other user (John, say) edits the page while I am editing it, my changes are not automatically saved - instead, when I click Save, I get to a page where both John's and my version are displayed, and the merging work is left to me. -- [[Anonymous Donor]]",
            "id": "e67caa51e1bb2551a14e77b62ba33129"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "I totally agree, that would probably be the easiest way while also being somewhat convenient. -- Dilligent",
            "id": "8917214ab3b61ea19575b0e1922097b1"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "52da7894cb019be6e7ca8e3b927d3c33"
          },
          {
            "type": "html",
            "text": "[[Category Wiki]] [[Category Wiki Editing]]",
            "id": "6de845c19f221ba34f6718150a030950"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?EditConflictResolution c2.com]",
            "id": "edd41d57d1da02d3582c5ab4d8d6fa48"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "wiki.sfw.c2.com",
      "date": 1651825549350
    }
  ]
}