{
  "title": "iframe",
  "story": [
    {
      "type": "markdown",
      "id": "037908f39ae3368b",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$163779045572170ViXoY:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\n> I wonder if [[Elm]] would run well in a Frame where inputs and outputs are already established as items on wiki pages?"
    },
    {
      "id": "9fa388fbbd31bf8d",
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "framing-wiki",
      "title": "Framing Wiki",
      "text": "It's a bit rough but it's a start. You can see what it looks like here - [http://livecode.world/iframe.html livecode.world/iframe.html ]"
    },
    {
      "type": "paragraph",
      "id": "7276feb8f94d6f92",
      "text": "UI Composition with Elm & Microservices [https://discourse.elm-lang.org/t/ui-composition-with-elm-microservices/1204/6 discourse] "
    },
    {
      "type": "markdown",
      "id": "584f1d8958f4aa48",
      "text": "> […] have one way to compose your widgets. [[Web Components]] work but maybe <iframe>s are a good solution too? I have used a simple `<script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script>` approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
    },
    {
      "id": "2f215ceddd1fa71a",
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "channel-messaging-api",
      "title": "Channel Messaging API",
      "text": "The Channel Messaging API allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a SharedWorker, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end - [https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API mdn]"
    },
    {
      "id": "b02c9720a77da529",
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "plugin-based-reusable-ui",
      "title": "Plugin-Based Reusable UI",
      "text": "This started as a playground to try elm-ui, but it is here as a proof of concept for a plugin-based reusable UI (for now based on an infamous iframe) and code sample for a question on StackOverflow"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "iframe",
        "story": []
      },
      "date": 1637917356526
    },
    {
      "item": {
        "type": "factory",
        "id": "037908f39ae3368b"
      },
      "id": "037908f39ae3368b",
      "type": "add",
      "date": 1637917373233
    },
    {
      "id": "9fa388fbbd31bf8d",
      "type": "add",
      "item": {
        "id": "9fa388fbbd31bf8d",
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "framing-wiki",
        "title": "Framing Wiki",
        "text": "It's a bit rough but it's a start. You can see what it looks like here - [http://livecode.world/iframe.html livecode.world/iframe.html ]"
      },
      "date": 1637917376593
    },
    {
      "id": "b02c9720a77da529",
      "type": "add",
      "item": {
        "id": "b02c9720a77da529",
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "plugin-based-reusable-ui",
        "title": "Plugin-Based Reusable UI",
        "text": "This started as a playground to try elm-ui, but it is here as a proof of concept for a plugin-based reusable UI (for now based on an infamous iframe) and code sample for a question on StackOverflow"
      },
      "after": "9fa388fbbd31bf8d",
      "date": 1637917380547
    },
    {
      "id": "2f215ceddd1fa71a",
      "type": "add",
      "item": {
        "id": "2f215ceddd1fa71a",
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "channel-messaging-api",
        "title": "Channel Messaging API",
        "text": "The Channel Messaging API allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a SharedWorker, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end - [https://developer.mozilla.org/en-US/docs/Web/API/Channel_Messaging_API mdn]"
      },
      "after": "b02c9720a77da529",
      "date": 1637917419627
    },
    {
      "type": "edit",
      "id": "037908f39ae3368b",
      "item": {
        "type": "paragraph",
        "id": "037908f39ae3368b",
        "text": "[[Ward]] via [matrix]"
      },
      "date": 1637927626457
    },
    {
      "type": "edit",
      "id": "037908f39ae3368b",
      "item": {
        "type": "markdown",
        "id": "037908f39ae3368b",
        "text": "[[Ward]] via [matrix]"
      },
      "date": 1637927631300
    },
    {
      "type": "edit",
      "id": "037908f39ae3368b",
      "item": {
        "type": "markdown",
        "id": "037908f39ae3368b",
        "text": "[[Ward]] via [matrix]\n> I wonder if Elm would run well in a Frame where inputs and outputs are already established as items on wiki pages?"
      },
      "date": 1637927638119
    },
    {
      "type": "edit",
      "id": "037908f39ae3368b",
      "item": {
        "type": "markdown",
        "id": "037908f39ae3368b",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$163779045572170ViXoY:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\n> I wonder if Elm would run well in a Frame where inputs and outputs are already established as items on wiki pages?"
      },
      "date": 1637927655940
    },
    {
      "id": "037908f39ae3368b",
      "type": "move",
      "order": [
        "037908f39ae3368b",
        "9fa388fbbd31bf8d",
        "b02c9720a77da529",
        "2f215ceddd1fa71a"
      ],
      "date": 1637927669664
    },
    {
      "type": "edit",
      "id": "037908f39ae3368b",
      "item": {
        "type": "markdown",
        "id": "037908f39ae3368b",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$163779045572170ViXoY:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\n> I wonder if [[Elm]] would run well in a Frame where inputs and outputs are already established as items on wiki pages?"
      },
      "date": 1637927701444
    },
    {
      "item": {
        "type": "factory",
        "id": "7276feb8f94d6f92"
      },
      "id": "7276feb8f94d6f92",
      "type": "add",
      "after": "2f215ceddd1fa71a",
      "date": 1638225048717
    },
    {
      "type": "edit",
      "id": "7276feb8f94d6f92",
      "item": {
        "type": "paragraph",
        "id": "7276feb8f94d6f92",
        "text": "UI Composition with Elm & Microservices "
      },
      "date": 1638225074153
    },
    {
      "type": "edit",
      "id": "7276feb8f94d6f92",
      "item": {
        "type": "paragraph",
        "id": "7276feb8f94d6f92",
        "text": "UI Composition with Elm & Microservices [https://discourse.elm-lang.org/t/ui-composition-with-elm-microservices/1204/6] discourse"
      },
      "date": 1638225092861
    },
    {
      "type": "edit",
      "id": "7276feb8f94d6f92",
      "item": {
        "type": "paragraph",
        "id": "7276feb8f94d6f92",
        "text": "UI Composition with Elm & Microservices [https://discourse.elm-lang.org/t/ui-composition-with-elm-microservices/1204/6 discourse] "
      },
      "date": 1638225107995
    },
    {
      "id": "7276feb8f94d6f92",
      "type": "move",
      "order": [
        "037908f39ae3368b",
        "9fa388fbbd31bf8d",
        "7276feb8f94d6f92",
        "b02c9720a77da529",
        "2f215ceddd1fa71a"
      ],
      "date": 1638225121498
    },
    {
      "type": "add",
      "id": "584f1d8958f4aa48",
      "item": {
        "type": "paragraph",
        "id": "584f1d8958f4aa48",
        "text": "> have one way to compose your widgets. WebComponents work but maybe <iframe>s are a good solution too? I have used a simple <script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script> approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
      },
      "after": "7276feb8f94d6f92",
      "date": 1638225173175
    },
    {
      "type": "edit",
      "id": "584f1d8958f4aa48",
      "item": {
        "type": "markdown",
        "id": "584f1d8958f4aa48",
        "text": "> have one way to compose your widgets. WebComponents work but maybe <iframe>s are a good solution too? I have used a simple <script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script> approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
      },
      "date": 1638225176234
    },
    {
      "type": "edit",
      "id": "584f1d8958f4aa48",
      "item": {
        "type": "markdown",
        "id": "584f1d8958f4aa48",
        "text": "> […] have one way to compose your widgets. WebComponents work but maybe <iframe>s are a good solution too? I have used a simple <script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script> approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
      },
      "date": 1638225187825
    },
    {
      "type": "edit",
      "id": "584f1d8958f4aa48",
      "item": {
        "type": "markdown",
        "id": "584f1d8958f4aa48",
        "text": "> […] have one way to compose your widgets. [[Web Components]] work but maybe <iframe>s are a good solution too? I have used a simple <script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script> approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
      },
      "date": 1638225212101
    },
    {
      "type": "edit",
      "id": "584f1d8958f4aa48",
      "item": {
        "type": "markdown",
        "id": "584f1d8958f4aa48",
        "text": "> […] have one way to compose your widgets. [[Web Components]] work but maybe <iframe>s are a good solution too? I have used a simple `<script id=\"put-that-widget-here\" src=\"https://team.app.org/fragments/some-widget.js?id=this-widget&where=put-that-widget-here\"></script>` approach with little friction. Depends on what you want to do. Make sure that this is known and agreed upon."
      },
      "date": 1638225244163
    },
    {
      "id": "2f215ceddd1fa71a",
      "type": "move",
      "order": [
        "037908f39ae3368b",
        "9fa388fbbd31bf8d",
        "7276feb8f94d6f92",
        "584f1d8958f4aa48",
        "2f215ceddd1fa71a",
        "b02c9720a77da529"
      ],
      "date": 1638225318819
    }
  ]
}