{
  "title": "Tips for How to Speak",
  "story": [
    {
      "type": "paragraph",
      "id": "cc00fd0d421582fa",
      "text": "Patrick Winston's How to Speak talk has been an MIT tradition for over 40 years. Offered every January, the talk is intended to improve your speaking ability in critical situations by teaching you a few heuristic rules."
    },
    {
      "type": "video",
      "id": "59b69e12cce1eed7",
      "text": "YOUTUBE Unzc731iCUY\nPublished Dec 20, 2019."
    },
    {
      "type": "markdown",
      "id": "9a3a83f9df69eca8",
      "text": "0:16 Introduction\n3:11 Rules of Engagement\n4:15 How to Start\n5:38 Four Sample Heuristics\n10:17 The Tools: Time and Place\n13:24 The Tools: Boards, Props, and Slides\n36:30 Informing: Promise, Inspiration, How To Think\n41:30 Persuading: Oral Exams, Job Talks, Getting Famous\n53:06 How to Stop: Final Slide, Final Words\n56:35 Final Words: Joke, Thank You, Examples"
    },
    {
      "type": "pagefold",
      "id": "71ba1edc49ee9e94",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "dda63e7d8368e742",
      "text": "I studied Winston's Lisp book about the time expert systems were becoming a thing. I especially remember unification from chapter 24. I coded it in Smalltalk and thought it worked out a little better using the Null Object pattern to simplify some edge cases. [https://www.chegg.com/textbooks/lisp-3rd-edition-9780201083194-0201083191 book]"
    },
    {
      "type": "html",
      "id": "10bfc764395d0ff0",
      "text": "<blockquote>24. Symbolic Pattern Matching: Matching Compares Patterns and Datums Element by Element. MATCH Keeps Variable Bindings on an Association List. Matching Is Easily Implemented by a Recursive Procedure. Matching Is Better Implemented Using Procedure Abstraction. Unification Is Generalized Matching.</blockquote>"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Tips for How to Speak",
        "story": []
      },
      "date": 1703183914386
    },
    {
      "item": {
        "type": "factory",
        "id": "cc00fd0d421582fa"
      },
      "id": "cc00fd0d421582fa",
      "type": "add",
      "date": 1703183939655
    },
    {
      "type": "edit",
      "id": "cc00fd0d421582fa",
      "item": {
        "type": "paragraph",
        "id": "cc00fd0d421582fa",
        "text": "Patrick Winston's How to Speak talk has been an MIT tradition for over 40 years. Offered every January, the talk is intended to improve your speaking ability in critical situations by teaching you a few heuristic rules."
      },
      "date": 1703183943420
    },
    {
      "item": {
        "type": "factory",
        "id": "59b69e12cce1eed7"
      },
      "id": "59b69e12cce1eed7",
      "type": "add",
      "after": "cc00fd0d421582fa",
      "date": 1703183947912
    },
    {
      "type": "edit",
      "id": "59b69e12cce1eed7",
      "item": {
        "type": "video",
        "id": "59b69e12cce1eed7",
        "text": "YOUTUBE Unzc731iCUY\n(double-click to edit caption)\n"
      },
      "date": 1703183960671
    },
    {
      "item": {
        "type": "factory",
        "id": "9a3a83f9df69eca8"
      },
      "id": "9a3a83f9df69eca8",
      "type": "add",
      "after": "59b69e12cce1eed7",
      "date": 1703184045265
    },
    {
      "type": "edit",
      "id": "9a3a83f9df69eca8",
      "item": {
        "type": "markdown",
        "id": "9a3a83f9df69eca8",
        "text": "0:16 Introduction\n3:11 Rules of Engagement\n4:15 How to Start\n5:38 Four Sample Heuristics\n10:17 The Tools: Time and Place\n13:24 The Tools: Boards, Props, and Slides\n36:30 Informing: Promise, Inspiration, How To Think\n41:30 Persuading: Oral Exams, Job Talks, Getting Famous\n53:06 How to Stop: Final Slide, Final Words\n56:35 Final Words: Joke, Thank You, Examples"
      },
      "date": 1703184050480
    },
    {
      "type": "edit",
      "id": "59b69e12cce1eed7",
      "item": {
        "type": "video",
        "id": "59b69e12cce1eed7",
        "text": "YOUTUBE Unzc731iCUY\nPublished Dec 20, 2019."
      },
      "date": 1703184089790
    },
    {
      "item": {
        "type": "factory",
        "id": "71ba1edc49ee9e94"
      },
      "id": "71ba1edc49ee9e94",
      "type": "add",
      "after": "9a3a83f9df69eca8",
      "date": 1703199515313
    },
    {
      "type": "edit",
      "id": "71ba1edc49ee9e94",
      "item": {
        "type": "pagefold",
        "id": "71ba1edc49ee9e94",
        "text": "."
      },
      "date": 1703199519988
    },
    {
      "item": {
        "type": "factory",
        "id": "dda63e7d8368e742"
      },
      "id": "dda63e7d8368e742",
      "type": "add",
      "after": "71ba1edc49ee9e94",
      "date": 1703199521902
    },
    {
      "type": "edit",
      "id": "dda63e7d8368e742",
      "item": {
        "type": "paragraph",
        "id": "dda63e7d8368e742",
        "text": "I studied Winston's Lisp book about the time expert systems were becoming a thing. I especially remember unification from chapter 25."
      },
      "date": 1703199615884
    },
    {
      "type": "edit",
      "id": "dda63e7d8368e742",
      "item": {
        "type": "paragraph",
        "id": "dda63e7d8368e742",
        "text": "I studied Winston's Lisp book about the time expert systems were becoming a thing. I especially remember unification from chapter 24. I coded it in Smalltalk and thought it worked out a little better using the Null Object pattern to simplify some edge cases."
      },
      "date": 1703199692498
    },
    {
      "item": {
        "type": "factory",
        "id": "10bfc764395d0ff0"
      },
      "id": "10bfc764395d0ff0",
      "type": "add",
      "after": "dda63e7d8368e742",
      "date": 1703199694470
    },
    {
      "type": "edit",
      "id": "10bfc764395d0ff0",
      "item": {
        "type": "markdown",
        "id": "10bfc764395d0ff0",
        "text": "> 24. Symbolic Pattern Matching: Matching Compares Patterns and Datums Element by Element. MATCH Keeps Variable Bindings on an Association List. Matching Is Easily Implemented by a Recursive Procedure. Matching Is Better Implemented Using Procedure Abstraction. Unification Is Generalized Matching."
      },
      "date": 1703199710311
    },
    {
      "type": "edit",
      "id": "10bfc764395d0ff0",
      "item": {
        "type": "html",
        "id": "10bfc764395d0ff0",
        "text": "<blockquote>24. Symbolic Pattern Matching: Matching Compares Patterns and Datums Element by Element. MATCH Keeps Variable Bindings on an Association List. Matching Is Easily Implemented by a Recursive Procedure. Matching Is Better Implemented Using Procedure Abstraction. Unification Is Generalized Matching.</blockquote>"
      },
      "date": 1703199741196
    },
    {
      "type": "edit",
      "id": "dda63e7d8368e742",
      "item": {
        "type": "paragraph",
        "id": "dda63e7d8368e742",
        "text": "I studied Winston's Lisp book about the time expert systems were becoming a thing. I especially remember unification from chapter 24. I coded it in Smalltalk and thought it worked out a little better using the Null Object pattern to simplify some edge cases. [https://www.chegg.com/textbooks/lisp-3rd-edition-9780201083194-0201083191 book]"
      },
      "date": 1703199885919
    },
    {
      "type": "fork",
      "site": "found.ward.fed.wiki",
      "date": 1704997860378
    }
  ]
}