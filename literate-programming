{
  "title": "Literate programming",
  "journal": [
    {
      "type": "edit",
      "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
      "item": {
        "type": "markdown",
        "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further [[compiler]] or [[executable]], the \"tangled\" code, and another for viewing as formatted [[documentation]], which is said to be \"woven\" from the literate source. While the first generation of literate programming tools were [[computer language]]-specific, the later ones are [[Language-independent specification]] and exist above the programming languages."
      },
      "date": 1550997027030
    },
    {
      "type": "edit",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "item": {
        "type": "markdown",
        "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "text": "- [[Literate Wiki]]\n- [[Tangled Plugin]]\n- [[Expanding the Role of Tools]]\n- [[HyperPerl]]"
      },
      "date": 1550996758329
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "text": "# See also\n\n- [[Tangled Web]]\n- [[Literate Wiki]]\n- [[Tangled Plugin]]\n- [[Expanding the Role of Tools]]\n- [[HyperPerl]]"
      },
      "after": "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "date": 1550996746842
    },
    {
      "type": "fork",
      "date": 1550996741533
    },
    {
      "type": "remove",
      "id": "7167437d-360f-4807-ad9d-3e5f23356a2c",
      "date": 1550996723526
    },
    {
      "date": 1550996783345,
      "type": "create",
      "item": {
        "story": "",
        "title": "Literate programming"
      }
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1550997064339
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "184098f494286c76",
        "text": "- [[Imperative programming]]\n- [[Procedural programming]]\n- [[Object-oriented programming]]\n- [[Declarative programming]]\n- [[Functional programming]]\n- [[Reactive programming]]\n- [[Logic programming]]\n- [[Literate programming]]\n- [[Programming paradigm]]\n\n"
      },
      "after": "f48a4180-5fb7-4ee0-8a4a-ca6be52be4d4",
      "id": "184098f494286c76",
      "date": 1550999423984
    },
    {
      "type": "remove",
      "id": "f48a4180-5fb7-4ee0-8a4a-ca6be52be4d4",
      "date": 1550999426127
    },
    {
      "type": "edit",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "item": {
        "type": "markdown",
        "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "text": "- [[Literate Wiki]]\n- [[Tangled Plugin]]\n- [[Expanding the Role of Tools]]\n- [[HyperPerl]]\n- [[Sweave]]\n- [[Self-documenting code]]"
      },
      "date": 1550999428063
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1550999436850
    },
    {
      "type": "edit",
      "id": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
      "item": {
        "type": "markdown",
        "id": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "text": "The literate [[programming paradigm]], as conceived by Knuth, represents a move away from writing computer program in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. Literate programs are written as an uninterrupted exposition of logic in an [[natural language]], much like the text of an essay, in which [[Macro (computer science)]]s are included to hide abstractions and traditional [[source code]]."
      },
      "date": 1550999494315
    },
    {
      "type": "remove",
      "id": "36999bed-7f53-43d6-b8ab-3c1817637d16",
      "date": 1550999533213
    },
    {
      "type": "edit",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "item": {
        "type": "markdown",
        "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "text": "- [[Literate Wiki]]\n- [[Tangled Web]]\n- [[Expanding the Role of Tools]]\n- [[HyperPerl]]\n- [[Sweave]]\n- [[Self-documenting code]]"
      },
      "date": 1550999568752
    },
    {
      "type": "edit",
      "id": "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
      "item": {
        "type": "markdown",
        "id": "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "text": "__Literate programming__ is a [[programming paradigm]] introduced by [[Donald Knuth]] in which a program is given as an explanation of the program logic in a natural language, interspersed with snippets of macros and traditional source code, from which a compilable source code can be generated - [https://en.wikipedia.org/wiki/Literate_programming wikipedia]"
      },
      "date": 1550999668359
    },
    {
      "type": "edit",
      "id": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
      "item": {
        "type": "markdown",
        "id": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "text": "The literate [[programming paradigm]], represents a move away from writing computer program in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. \n"
      },
      "date": 1550999696884
    },
    {
      "type": "add",
      "id": "6590c4f453cbcad2",
      "item": {
        "type": "markdown",
        "id": "6590c4f453cbcad2",
        "text": "Literate programs are written as an uninterrupted exposition of logic in an [[natural language]], much like the text of an essay, in which macros are included to hide abstractions and traditional [[source code]]."
      },
      "after": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
      "date": 1550999719174
    },
    {
      "type": "edit",
      "id": "6590c4f453cbcad2",
      "item": {
        "type": "markdown",
        "id": "6590c4f453cbcad2",
        "text": "Literate programs are written as an uninterrupted exposition of logic in an [[natural language]], much like the text of an essay, in which elements are included to hide abstractions and traditional [[source code]]."
      },
      "date": 1550999729367
    },
    {
      "type": "edit",
      "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
      "item": {
        "type": "markdown",
        "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further [[compiler]] or [[executable]], the \"tangled\" code, and another for viewing as formatted [[documentation]], which is said to be \"woven\" from the literate source. \n"
      },
      "date": 1550999789412
    },
    {
      "type": "add",
      "id": "342df307d972c75a",
      "item": {
        "type": "markdown",
        "id": "342df307d972c75a",
        "text": "While the first generation of literate programming tools were [[computer language]]-specific, the later ones are [[Language-independent specification]] and exist above the programming languages."
      },
      "after": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
      "date": 1550999795385
    },
    {
      "type": "edit",
      "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
      "item": {
        "type": "markdown",
        "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further [[compiler]] or [[executable]] ([[tangled code]]), and another for viewing as formatted [[documentation]], which is said to be \"woven\" from the literate source. \n"
      },
      "date": 1550999832075
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "text": "# History and philosophy"
      },
      "after": "342df307d972c75a",
      "id": "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
      "date": 1550999885211
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "608fee75-7a9f-49d4-b837-954b68702fc1",
        "text": "Literate programming was first introduced by [[Donald E. Knuth]] in 1984.  The main intention behind this approach was to treat a program as literature understandable to human beings. This approach was implemented at Stanford University as a part of research on algorithms and digital [[typography]]. This implementation was called “[[WEB]]” by Donald Knuth since he believed that it was one of the few three-letter words of English that hadn’t already been applied to computing.  However, it correctly resembles the complicated nature of software delicately pieced together from simple materials - [https://en.wikipedia.org/wiki/Literate_programming#History_and_philosophy wikipedia]"
      },
      "after": "342df307d972c75a",
      "id": "608fee75-7a9f-49d4-b837-954b68702fc1",
      "date": 1550999888167
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "2b80fd3c-59b1-4197-9f28-19e6fb896254",
        "9ca4e638-1568-4808-896b-60b3e26c5a54",
        "00370b5c-589f-4099-9668-8179aab5f697",
        "1f2d9f63-247f-4384-92a1-2400b07661bd",
        "e00ed22f-21b8-474a-b7e9-c7bc51aeb35a",
        "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "184098f494286c76"
      ],
      "id": "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
      "date": 1550999889896
    },
    {
      "type": "edit",
      "id": "608fee75-7a9f-49d4-b837-954b68702fc1",
      "item": {
        "type": "markdown",
        "id": "608fee75-7a9f-49d4-b837-954b68702fc1",
        "text": "Literate programming was first introduced by [[Donald E. Knuth]] in 1984.  The main intention behind this approach was to treat a program as literature understandable to human beings. This approach was implemented at Stanford University as a part of research on algorithms and digital [[typography]]. \n"
      },
      "date": 1550999897942
    },
    {
      "type": "add",
      "id": "270180ae76964ce7",
      "item": {
        "type": "markdown",
        "id": "270180ae76964ce7",
        "text": "This implementation was called “[[WEB]]” by Donald Knuth since he believed that it was one of the few three-letter words of English that hadn’t already been applied to computing.  However, it correctly resembles the complicated nature of software delicately pieced together from simple materials - [https://en.wikipedia.org/wiki/Literate_programming#History_and_philosophy wikipedia]"
      },
      "after": "608fee75-7a9f-49d4-b837-954b68702fc1",
      "date": 1550999900157
    },
    {
      "type": "remove",
      "id": "9ca4e638-1568-4808-896b-60b3e26c5a54",
      "date": 1550999906931
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "text": "# Concept"
      },
      "after": "270180ae76964ce7",
      "id": "3f199bbf-a09a-46df-b8c3-715c4614779d",
      "date": 1550999948224
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "text": "Literate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. Macros in a literate source file are simply title-like or explanatory phrases in a human language that describe human abstractions created while solving the programming problem, and hiding chunks of code or lower-level macros. These macros are similar to the [[algorithm]]s in [[pseudocode]] typically used in teaching [[computer science]]. These arbitrary explanatory phrases become precise new operators, created on the fly by the programmer, forming a ''meta-language'' on top of the underlying programming language - [https://en.wikipedia.org/wiki/Literate_programming#Concept wikipedia]"
      },
      "after": "270180ae76964ce7",
      "id": "ee178f28-0cb6-4275-acb0-fd87b424775f",
      "date": 1550999950406
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "2b80fd3c-59b1-4197-9f28-19e6fb896254",
        "00370b5c-589f-4099-9668-8179aab5f697",
        "1f2d9f63-247f-4384-92a1-2400b07661bd",
        "e00ed22f-21b8-474a-b7e9-c7bc51aeb35a",
        "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "184098f494286c76"
      ],
      "id": "3f199bbf-a09a-46df-b8c3-715c4614779d",
      "date": 1550999951866
    },
    {
      "type": "edit",
      "id": "ee178f28-0cb6-4275-acb0-fd87b424775f",
      "item": {
        "type": "markdown",
        "id": "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "text": "Literate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. Macros in a literate source file are simply title-like or explanatory phrases in a human language that describe human abstractions created while solving the programming problem, and hiding chunks of code or lower-level macros. \n"
      },
      "date": 1550999960509
    },
    {
      "type": "add",
      "id": "84f2c13b3b3d2d16",
      "item": {
        "type": "markdown",
        "id": "84f2c13b3b3d2d16",
        "text": "These macros are similar to the [[algorithm]]s in [[pseudocode]] typically used in teaching [[computer science]]. These arbitrary explanatory phrases become precise new operators, created on the fly by the programmer, forming a ''meta-language'' on top of the underlying programming language - [https://en.wikipedia.org/wiki/Literate_programming#Concept wikipedia]"
      },
      "after": "ee178f28-0cb6-4275-acb0-fd87b424775f",
      "date": 1550999961538
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "text": "A [[preprocessor]] is used to substitute arbitrary hierarchies, or rather \"interconnected 'webs' of macros\", to produce the compilable source code with one command (\"tangle\"), and documentation with another (\"weave\"). The preprocessor also provides an ability to write out the content of the macros and to add to already created macros in any place in the text of the literate program source file, thereby disposing of the need to keep in mind the restrictions imposed by traditional programming languages or to interrupt the flow of thought."
      },
      "after": "84f2c13b3b3d2d16",
      "id": "a9bae0f4-3429-414d-8e15-57664eb26b52",
      "date": 1550999965921
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "text": "# Advantages"
      },
      "after": "a9bae0f4-3429-414d-8e15-57664eb26b52",
      "id": "7767e1c2-48d3-4f1a-8837-44c89a45f826",
      "date": 1550999980629
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "text": "literate programming provides higher-quality programs, since it forces programmers to explicitly state the thoughts behind the program, making poorly thought-out design decisions more obvious. Knuth also claims that literate programming provides a first-rate documentation system, which is not an add-on, but is grown naturally in the process of exposition of one's thoughts during a program's creation. The resulting documentation allows the author to restart his own thought processes at any later time, and allows other programmers to understand the construction of the program more easily. This differs from traditional documentation, in which a programmer is presented with source code that follows a compiler-imposed order, and must decipher the thought process behind the program from the code and its associated comments. The meta-language capabilities of literate programming are also claimed to facilitate thinking, giving a higher \"bird's eye view\" of the code and increasing the number of concepts the mind can successfully retain and process. Applicability of the concept to programming on a large scale, that of commercial-grade programs, is proven by an edition of [[TeX]] code as a literate program."
      },
      "after": "7767e1c2-48d3-4f1a-8837-44c89a45f826",
      "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "date": 1550999984600
    },
    {
      "type": "edit",
      "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "item": {
        "type": "markdown",
        "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "text": "> literate programming provides higher-quality programs, since it forces programmers to explicitly state the thoughts behind the program, making poorly thought-out design decisions more obvious. Knuth also claims that literate programming provides a first-rate documentation system, which is not an add-on, but is grown naturally in the process of exposition of one's thoughts during a program's creation. The resulting documentation allows the author to restart his own thought processes at any later time, and allows other programmers to understand the construction of the program more easily. This differs from traditional documentation, in which a programmer is presented with source code that follows a compiler-imposed order, and must decipher the thought process behind the program from the code and its associated comments. The meta-language capabilities of literate programming are also claimed to facilitate thinking, giving a higher \"bird's eye view\" of the code and increasing the number of concepts the mind can successfully retain and process. Applicability of the concept to programming on a large scale, that of commercial-grade programs, is proven by an edition of [[TeX]] code as a literate program."
      },
      "date": 1550999989117
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "52cc9118-d5aa-486f-a576-def22b563a30",
        "text": "Knuth also claims that Literate Programming can lead to easy porting of software to multiple environments, and even cites the implementation of TeX as an example."
      },
      "after": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "id": "52cc9118-d5aa-486f-a576-def22b563a30",
      "date": 1550999999303
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "text": "According to Knuth, - [https://en.wikipedia.org/wiki/Literate_programming#Advantages wikipedia]"
      },
      "after": "7767e1c2-48d3-4f1a-8837-44c89a45f826",
      "id": "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
      "date": 1551000003618
    },
    {
      "type": "edit",
      "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "item": {
        "type": "markdown",
        "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "text": "> literate programming provides higher-quality programs, since it forces programmers to explicitly state the thoughts behind the program, making poorly thought-out design decisions more obvious. \n"
      },
      "date": 1551000023943
    },
    {
      "type": "add",
      "id": "ea2662b2174e6e90",
      "item": {
        "type": "markdown",
        "id": "ea2662b2174e6e90",
        "text": "Knuth also claims that literate programming provides a first-rate documentation system, which is not an add-on, but is grown naturally in the process of exposition of one's thoughts during a program's creation. The resulting documentation allows the author to restart his own thought processes at any later time, and allows other programmers to understand the construction of the program more easily. \n"
      },
      "after": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "date": 1551000046086
    },
    {
      "type": "add",
      "id": "862c616e7770cb14",
      "item": {
        "type": "markdown",
        "id": "862c616e7770cb14",
        "text": "This differs from traditional documentation, in which a programmer is presented with source code that follows a compiler-imposed order, and must decipher the thought process behind the program from the code and its associated comments. \n"
      },
      "after": "ea2662b2174e6e90",
      "date": 1551000054543
    },
    {
      "type": "add",
      "id": "c655bc5c6de4c5d6",
      "item": {
        "type": "markdown",
        "id": "c655bc5c6de4c5d6",
        "text": "The meta-language capabilities of literate programming are also claimed to facilitate thinking, giving a higher \"bird's eye view\" of the code and increasing the number of concepts the mind can successfully retain and process. Applicability of the concept to programming on a large scale, that of commercial-grade programs, is proven by an edition of [[TeX]] code as a literate program."
      },
      "after": "862c616e7770cb14",
      "date": 1551000066894
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "id": "d1f915c8-d12d-4cef-8f8d-6a3b5f421ab4",
        "text": "<form action='https://rest.livecode.world/mediawiki/importSection'><input name=section_title size=60 value='Contrast with documentation generation'>\n<input name=url type=hidden value='https://en.wikipedia.org/w/index.php?title=Literate programming&action=edit&section=4'>\n<input type=submit value=create></form>"
      },
      "after": "52cc9118-d5aa-486f-a576-def22b563a30",
      "id": "d1f915c8-d12d-4cef-8f8d-6a3b5f421ab4",
      "date": 1551000078382
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "text": "# Contrast with documentation generation"
      },
      "after": "52cc9118-d5aa-486f-a576-def22b563a30",
      "id": "40f1f3ca-b5e8-4596-a3bb-401776a21179",
      "date": 1551000102764
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "text": "Literate programming is very often misunderstood to refer only to formatted documentation produced from a common file with both source code and comments – which is properly called [[documentation generation]] – or to voluminous commentaries included with code. This is backwards: well-documented code or documentation extracted from code follows the structure of the code, with documentation embedded in the code; in literate programming code is embedded in documentation, with the code following the structure of the documentation - [https://en.wikipedia.org/wiki/Literate_programming#Contrast_with_documentation_generation wikipedia]"
      },
      "after": "40f1f3ca-b5e8-4596-a3bb-401776a21179",
      "id": "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
      "date": 1551000105463
    },
    {
      "type": "remove",
      "id": "d1f915c8-d12d-4cef-8f8d-6a3b5f421ab4",
      "date": 1551000108665
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "text": "This misconception has led to claims that comment-extraction tools, such as the [[Perl]] [[Plain Old Documentation]] or [[Java (programming language)]] [[Javadoc]] systems, are \"literate programming tools\". However, because these tools do not implement the \"web of abstract concepts\" hiding behind the system of natural-language macros, or provide an ability to change the order of the source code from a machine-imposed sequence to one convenient to the human mind, they cannot properly be called literate programming tools in the sense intended by Knuth."
      },
      "after": "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
      "id": "87cf6393-cd0a-4e43-9e25-30f924754b84",
      "date": 1551000111277
    },
    {
      "type": "remove",
      "id": "00370b5c-589f-4099-9668-8179aab5f697",
      "date": 1551000117017
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d514c94b-9a0a-443b-b469-38d084a097bd",
        "text": "# Workflow"
      },
      "after": "87cf6393-cd0a-4e43-9e25-30f924754b84",
      "id": "d514c94b-9a0a-443b-b469-38d084a097bd",
      "date": 1551000129256
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "text": "Implementing literate programming consists of two steps - [https://en.wikipedia.org/wiki/Literate_programming#Workflow wikipedia]"
      },
      "after": "87cf6393-cd0a-4e43-9e25-30f924754b84",
      "id": "4183bf4a-dcc3-4666-928a-d88b63a07155",
      "date": 1551000131932
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
        "text": "# Weaving: Generating comprehensive document about program and its maintenance."
      },
      "after": "4183bf4a-dcc3-4666-928a-d88b63a07155",
      "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
      "date": 1551000133774
    },
    {
      "type": "edit",
      "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
      "item": {
        "type": "markdown",
        "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
        "text": "- Weaving: Generating comprehensive document about program and its maintenance."
      },
      "date": 1551000141802
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "text": "# Tangling: Generating machine executable code"
      },
      "after": "14dabc9a-58e9-4544-934b-534351a0ff60",
      "id": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "date": 1551000145164
    },
    {
      "type": "edit",
      "id": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "item": {
        "type": "markdown",
        "id": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "text": "- [[Tangling]]: Generating machine executable code"
      },
      "date": 1551000159537
    },
    {
      "type": "edit",
      "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
      "item": {
        "type": "markdown",
        "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
        "text": "- [[Weaving]]: Generating comprehensive document about program and its maintenance."
      },
      "date": 1551000165784
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "text": "Weaving and tangling are done on the same source so that they are consistent with each other."
      },
      "after": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "id": "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
      "date": 1551000168242
    },
    {
      "type": "remove",
      "id": "1f2d9f63-247f-4384-92a1-2400b07661bd",
      "date": 1551000174535
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "text": "# Example"
      },
      "after": "d514c94b-9a0a-443b-b469-38d084a097bd",
      "id": "d44eeec6-b469-4176-87d0-51ca383b84cd",
      "date": 1551000267845
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "2b80fd3c-59b1-4197-9f28-19e6fb896254",
        "e00ed22f-21b8-474a-b7e9-c7bc51aeb35a",
        "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "184098f494286c76"
      ],
      "id": "d514c94b-9a0a-443b-b469-38d084a097bd",
      "date": 1551000269778
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "text": "A classic example of literate programming is the literate implementation of the standard [[Unix]] <code>[[wc (Unix)]]</code> word counting program. Knuth presented a [[CWEB]] version of this example in Chapter 12 of his ''Literate Programming'' book. The same example was later rewritten for the [[noweb]] literate programming tool. This example provides a good illustration of the basic elements of literate programming - [https://en.wikipedia.org/wiki/Literate_programming#Example wikipedia]"
      },
      "after": "d44eeec6-b469-4176-87d0-51ca383b84cd",
      "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "date": 1551000273562
    },
    {
      "type": "edit",
      "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "item": {
        "type": "markdown",
        "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "text": "A classic example of literate programming is the literate implementation of the standard [[Unix]] <code>[[wc (Unix)]]</code> word counting program. This example provides a good illustration of the basic elements of literate programming - [https://en.wikipedia.org/wiki/Literate_programming#Example wikipedia]"
      },
      "date": 1551000295970
    },
    {
      "type": "remove",
      "id": "e00ed22f-21b8-474a-b7e9-c7bc51aeb35a",
      "date": 1551000314112
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
        "2b80fd3c-59b1-4197-9f28-19e6fb896254",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "184098f494286c76"
      ],
      "id": "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
      "date": 1551000415845
    },
    {
      "type": "remove",
      "id": "2b80fd3c-59b1-4197-9f28-19e6fb896254",
      "date": 1551000423191
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1551000433133
    },
    {
      "type": "fork",
      "site": "c0de.academy",
      "date": 1551000516273
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "abe54042-a2ad-4292-a6bf-e2ad6c6231f7",
        "text": "- [[Bret Victor]] - [[Inventing on Principle]]"
      },
      "after": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "id": "abe54042-a2ad-4292-a6bf-e2ad6c6231f7",
      "date": 1551000519039
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "9561976efac18d41",
        "text": "- [[Literate Wiki]]\n- [[Programming In Wiki]]\n\n",
        "alias": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77"
      },
      "after": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "id": "9561976efac18d41",
      "date": 1551000531364
    },
    {
      "type": "remove",
      "id": "abe54042-a2ad-4292-a6bf-e2ad6c6231f7",
      "date": 1551000535611
    },
    {
      "type": "edit",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "item": {
        "type": "markdown",
        "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "text": "- [[Literate Wiki]]\n- [[Programming In Wiki]]\n- [[Bret Victor]] - [[Inventing on Principle]]"
      },
      "date": 1551000538565
    },
    {
      "type": "add",
      "item": {
        "text": "* My initial essay that started this presentation: http://howardism.org/Technical/Emacs/literate-devops.html\n* Github that contains the demonstration code and results Sprint Page: https://github.com/howardabrams/literate-devops-demo\n* Emacs code used to make this demonstration: http://github.com/howardabrams/demo-it\n* My Emacs configuration files: http://github.com/howardabrams/dot-files",
        "id": "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "type": "markdown"
      },
      "after": "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
      "id": "259a3d3b-9ef6-459a-9f47-273f70b3592a",
      "date": 1551000547633
    },
    {
      "type": "add",
      "item": {
        "text": "YOUTUBE dljNabciEGg\n[[Literate Devops with Emacs]]. Broadcast on 1 Sep 2015.",
        "id": "e605606c-3a67-4908-b16b-d659ebea57dd",
        "type": "video"
      },
      "after": "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
      "id": "e605606c-3a67-4908-b16b-d659ebea57dd",
      "date": 1551000551492
    },
    {
      "type": "add",
      "item": {
        "text": "A demonstration originally given at EmacsConf 2015 that describes how I use org-mode's Babel project and Tramp to configure and work with remote servers in my data center, prior to copying code off into Chef cookbooks and whatnot.",
        "id": "6e88d708-952e-40b2-8996-ef087916d076",
        "type": "paragraph"
      },
      "after": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "id": "6e88d708-952e-40b2-8996-ef087916d076",
      "date": 1551000557110
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "text": "# Literate Devops with Emacs"
      },
      "after": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "id": "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
      "date": 1551000559216
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "text": "# Links\n\n- Literate programming -... - [https://en.wikipedia.org/wiki/Literate_programming wikipedia.org]\n- What Is a Computational... - [https://blog.stephenwolfram.com/2017/11/what-is-a-computational-essay/ stephenwolfram.com]\n- What Is a Computational... - [https://news.ycombinator.com/item?id=15769054 ycombinator.com]\n- Literate Devops with Emacs -... - [https://www.youtube.com/watch?v=dljNabciEGg youtube.com]\n- xkcd: Standards - [https://xkcd.com/927/ xkcd.com]\n- The Scientific Paper Is... - [https://www.theatlantic.com/science/archive/2018/04/the-scientific-paper-is-obsolete/556676/ theatlantic.com]\n- Computational Essay -... - [https://www.uio.no/studier/emner/matnat/fys/FYS1120/h18/beskjeder/computational-essay.html uio.no]\n- brett-victor's super cool... - [https://www.google.com/search?q=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&oq=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&aqs=chrome..69i57.421j0j1&sourceid=chrome&ie=UTF-8 google.com]\n- Bret Victor - Inventing on... - [https://vimeo.com/36579366 vimeo.com]"
      },
      "after": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "id": "3320ad34-32a8-4741-b99c-ed4c41967c9c",
      "date": 1551000565331
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "text": "- [[Literate Tools]]"
      },
      "after": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "id": "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
      "date": 1551000646644
    },
    {
      "type": "edit",
      "id": "d44eeec6-b469-4176-87d0-51ca383b84cd",
      "item": {
        "type": "markdown",
        "id": "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "text": "# Examples and Tools"
      },
      "date": 1551000652773
    },
    {
      "item": {
        "type": "factory",
        "id": "3947d27faae80017"
      },
      "id": "3947d27faae80017",
      "type": "add",
      "after": "184098f494286c76",
      "date": 1551000655346
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "3947d27faae80017",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "9561976efac18d41",
        "184098f494286c76"
      ],
      "id": "3947d27faae80017",
      "date": 1551000659882
    },
    {
      "type": "remove",
      "id": "3947d27faae80017",
      "date": 1551000663374
    },
    {
      "type": "edit",
      "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "item": {
        "type": "markdown",
        "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "text": "A classic example of literate programming is the literate implementation of the standard [[Unix]] [[wc (Unix)]] word counting program. This example provides a good illustration of the basic elements of literate programming - [https://en.wikipedia.org/wiki/Literate_programming#Example wikipedia]"
      },
      "date": 1551000679396
    },
    {
      "type": "edit",
      "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "item": {
        "type": "markdown",
        "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "text": "A classic example of literate programming is the literate implementation of the standard [[wc (Unix)]] word counting program. This example provides a good illustration of the basic elements of literate programming - [https://en.wikipedia.org/wiki/Literate_programming#Example wikipedia]"
      },
      "date": 1551000690344
    },
    {
      "type": "remove",
      "id": "7d474063-f6e8-4f7a-ad24-5a5f525dd727",
      "date": 1551000699639
    },
    {
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "9561976efac18d41",
        "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
        "184098f494286c76"
      ],
      "id": "9561976efac18d41",
      "date": 1551000720218
    },
    {
      "type": "remove",
      "id": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77",
      "date": 1551000723991
    },
    {
      "type": "edit",
      "id": "9561976efac18d41",
      "item": {
        "type": "markdown",
        "id": "9561976efac18d41",
        "text": "- [[Literate Wiki]]\n- [[Programming In Wiki]]\n- [[Bret Victor]] - [[Inventing on Principle]]\n- [[Literate Tools]]",
        "alias": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77"
      },
      "date": 1551000730481
    },
    {
      "type": "fork",
      "site": "literate.wiki",
      "date": 1551348252283
    },
    {
      "type": "fork",
      "site": "future.fedwiki.org",
      "date": 1626101456835
    },
    {
      "type": "edit",
      "id": "3320ad34-32a8-4741-b99c-ed4c41967c9c",
      "item": {
        "type": "markdown",
        "id": "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "text": "# Links\n\n- Literate programming -... - [https://en.wikipedia.org/wiki/Literate_programming wikipedia.org]\n- What Is a Computational... - [https://blog.stephenwolfram.com/2017/11/what-is-a-computational-essay/ stephenwolfram.com]\n- What Is a Computational... - [https://news.ycombinator.com/item?id=15769054 ycombinator.com]\n- [[Literate Devops with Emacs]] -... - [https://www.youtube.com/watch?v=dljNabciEGg youtube.com]\n- xkcd: Standards - [https://xkcd.com/927/ xkcd.com]\n- The Scientific Paper Is... - [https://www.theatlantic.com/science/archive/2018/04/the-scientific-paper-is-obsolete/556676/ theatlantic.com]\n- Computational Essay -... - [https://www.uio.no/studier/emner/matnat/fys/FYS1120/h18/beskjeder/computational-essay.html uio.no]\n- brett-victor's super cool... - [https://www.google.com/search?q=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&oq=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&aqs=chrome..69i57.421j0j1&sourceid=chrome&ie=UTF-8 google.com]\n- Bret Victor - Inventing on... - [https://vimeo.com/36579366 vimeo.com]"
      },
      "date": 1626108096734
    },
    {
      "type": "edit",
      "id": "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
      "item": {
        "type": "markdown",
        "id": "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "text": "__Literate programming__ is a [[programming paradigm]] introduced by [[Donald Knuth]] in which a program is given as an explanation of the program logic in a natural language, interspersed with [[snippets]] of macros and traditional source code, from which a compilable source code can be generated - [https://en.wikipedia.org/wiki/Literate_programming wikipedia]"
      },
      "date": 1626331677383
    },
    {
      "item": {
        "type": "video",
        "id": "bc0d336a1609e48d",
        "text": "YOUTUBE https://youtu.be/EE1R8FYUJm0?t=1511"
      },
      "id": "bc0d336a1609e48d",
      "type": "add",
      "after": "184098f494286c76",
      "date": 1631646552940
    },
    {
      "id": "bc0d336a1609e48d",
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "bc0d336a1609e48d",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "9561976efac18d41",
        "184098f494286c76"
      ],
      "date": 1631646569299
    },
    {
      "type": "edit",
      "id": "bc0d336a1609e48d",
      "item": {
        "type": "video",
        "id": "bc0d336a1609e48d",
        "text": "YOUTUBE https://youtu.be/EE1R8FYUJm0?t=1511"
      },
      "date": 1631646599008
    },
    {
      "type": "fork",
      "date": 1631646614305
    },
    {
      "item": {
        "type": "factory",
        "id": "53fa1e96dfd6d9eb"
      },
      "id": "53fa1e96dfd6d9eb",
      "type": "add",
      "after": "184098f494286c76",
      "date": 1631646616239
    },
    {
      "type": "edit",
      "id": "53fa1e96dfd6d9eb",
      "item": {
        "type": "markdown",
        "id": "53fa1e96dfd6d9eb",
        "text": "https://youtu.be/EE1R8FYUJm0?t=1511"
      },
      "date": 1631646620531
    },
    {
      "id": "53fa1e96dfd6d9eb",
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "bc0d336a1609e48d",
        "53fa1e96dfd6d9eb",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "9561976efac18d41",
        "184098f494286c76"
      ],
      "date": 1631646632041
    },
    {
      "item": {
        "type": "factory",
        "id": "2d11b5ee959e9de9"
      },
      "id": "2d11b5ee959e9de9",
      "type": "add",
      "after": "184098f494286c76",
      "date": 1631646644104
    },
    {
      "type": "edit",
      "id": "2d11b5ee959e9de9",
      "item": {
        "type": "pagefold",
        "id": "2d11b5ee959e9de9",
        "text": "~"
      },
      "date": 1631646651889
    },
    {
      "id": "2d11b5ee959e9de9",
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "2d11b5ee959e9de9",
        "bc0d336a1609e48d",
        "53fa1e96dfd6d9eb",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "9561976efac18d41",
        "184098f494286c76"
      ],
      "date": 1631646663237
    },
    {
      "item": {
        "type": "factory",
        "id": "01526d91ed8bc7b5"
      },
      "id": "01526d91ed8bc7b5",
      "type": "add",
      "after": "184098f494286c76",
      "date": 1631646669668
    },
    {
      "type": "edit",
      "id": "01526d91ed8bc7b5",
      "item": {
        "type": "pagefold",
        "id": "01526d91ed8bc7b5",
        "text": "."
      },
      "date": 1631646682402
    },
    {
      "id": "01526d91ed8bc7b5",
      "type": "move",
      "order": [
        "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
        "2d11b5ee959e9de9",
        "bc0d336a1609e48d",
        "53fa1e96dfd6d9eb",
        "01526d91ed8bc7b5",
        "84113a36-b7d1-4829-9836-eacc42ff9a2a",
        "6590c4f453cbcad2",
        "79ec25be-c7d0-4134-a3c9-3704b3922b58",
        "342df307d972c75a",
        "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
        "608fee75-7a9f-49d4-b837-954b68702fc1",
        "270180ae76964ce7",
        "3f199bbf-a09a-46df-b8c3-715c4614779d",
        "ee178f28-0cb6-4275-acb0-fd87b424775f",
        "84f2c13b3b3d2d16",
        "a9bae0f4-3429-414d-8e15-57664eb26b52",
        "7767e1c2-48d3-4f1a-8837-44c89a45f826",
        "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
        "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
        "ea2662b2174e6e90",
        "862c616e7770cb14",
        "c655bc5c6de4c5d6",
        "52cc9118-d5aa-486f-a576-def22b563a30",
        "40f1f3ca-b5e8-4596-a3bb-401776a21179",
        "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
        "87cf6393-cd0a-4e43-9e25-30f924754b84",
        "d514c94b-9a0a-443b-b469-38d084a097bd",
        "4183bf4a-dcc3-4666-928a-d88b63a07155",
        "14dabc9a-58e9-4544-934b-534351a0ff60",
        "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
        "3320ad34-32a8-4741-b99c-ed4c41967c9c",
        "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
        "6e88d708-952e-40b2-8996-ef087916d076",
        "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
        "e605606c-3a67-4908-b16b-d659ebea57dd",
        "259a3d3b-9ef6-459a-9f47-273f70b3592a",
        "d44eeec6-b469-4176-87d0-51ca383b84cd",
        "693e3fb1-04ff-451c-8a7d-002b85ca86df",
        "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
        "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
        "9561976efac18d41",
        "184098f494286c76"
      ],
      "date": 1631646693021
    },
    {
      "type": "edit",
      "id": "bc0d336a1609e48d",
      "item": {
        "type": "video",
        "id": "bc0d336a1609e48d",
        "text": "YOUTUBE EE1R8FYUJm0"
      },
      "date": 1631646703199
    },
    {
      "type": "edit",
      "id": "bc0d336a1609e48d",
      "item": {
        "type": "video",
        "id": "bc0d336a1609e48d",
        "text": "YOUTUBE EE1R8FYUJm0\nDonald Knuth: Programming, Algorithms, Hard Problems & the Game of Life | Lex Fridman Podcast #219"
      },
      "date": 1631646725495
    },
    {
      "type": "edit",
      "id": "53fa1e96dfd6d9eb",
      "item": {
        "type": "markdown",
        "id": "53fa1e96dfd6d9eb",
        "text": "[https://youtu.be/EE1R8FYUJm0?t=1511 25:11 / 2:21:26] – "
      },
      "date": 1631646769613
    },
    {
      "type": "edit",
      "id": "53fa1e96dfd6d9eb",
      "item": {
        "type": "markdown",
        "id": "53fa1e96dfd6d9eb",
        "text": "[https://youtu.be/EE1R8FYUJm0?t=1511 25:11 / 2:21:26] – Literate programming with a link to "
      },
      "date": 1631646794300
    },
    {
      "type": "edit",
      "id": "53fa1e96dfd6d9eb",
      "item": {
        "type": "markdown",
        "id": "53fa1e96dfd6d9eb",
        "text": "[https://youtu.be/EE1R8FYUJm0?t=1511 25:11 / 2:21:26] – Literate programming with a link to [[Physically Based Rendering]]"
      },
      "date": 1631646800116
    }
  ],
  "story": [
    {
      "type": "markdown",
      "id": "6987cdfb-baaf-40b3-a3d8-c5c0c0fb7400",
      "text": "__Literate programming__ is a [[programming paradigm]] introduced by [[Donald Knuth]] in which a program is given as an explanation of the program logic in a natural language, interspersed with [[snippets]] of macros and traditional source code, from which a compilable source code can be generated - [https://en.wikipedia.org/wiki/Literate_programming wikipedia]"
    },
    {
      "type": "pagefold",
      "id": "2d11b5ee959e9de9",
      "text": "~"
    },
    {
      "type": "video",
      "id": "bc0d336a1609e48d",
      "text": "YOUTUBE EE1R8FYUJm0\nDonald Knuth: Programming, Algorithms, Hard Problems & the Game of Life | Lex Fridman Podcast #219"
    },
    {
      "type": "markdown",
      "id": "53fa1e96dfd6d9eb",
      "text": "[https://youtu.be/EE1R8FYUJm0?t=1511 25:11 / 2:21:26] – Literate programming with a link to [[Physically Based Rendering]]"
    },
    {
      "type": "pagefold",
      "id": "01526d91ed8bc7b5",
      "text": "."
    },
    {
      "type": "markdown",
      "id": "84113a36-b7d1-4829-9836-eacc42ff9a2a",
      "text": "The literate [[programming paradigm]], represents a move away from writing computer program in the manner and order imposed by the computer, and instead enables programmers to develop programs in the order demanded by the logic and flow of their thoughts. \n"
    },
    {
      "type": "markdown",
      "id": "6590c4f453cbcad2",
      "text": "Literate programs are written as an uninterrupted exposition of logic in an [[natural language]], much like the text of an essay, in which elements are included to hide abstractions and traditional [[source code]]."
    },
    {
      "type": "markdown",
      "id": "79ec25be-c7d0-4134-a3c9-3704b3922b58",
      "text": "Literate programming tools are used to obtain two representations from a literate source file: one suitable for further [[compiler]] or [[executable]] ([[tangled code]]), and another for viewing as formatted [[documentation]], which is said to be \"woven\" from the literate source. \n"
    },
    {
      "type": "markdown",
      "id": "342df307d972c75a",
      "text": "While the first generation of literate programming tools were [[computer language]]-specific, the later ones are [[Language-independent specification]] and exist above the programming languages."
    },
    {
      "type": "markdown",
      "id": "0da5bf68-b720-4bc6-95ca-35eb9707d8e1",
      "text": "# History and philosophy"
    },
    {
      "type": "markdown",
      "id": "608fee75-7a9f-49d4-b837-954b68702fc1",
      "text": "Literate programming was first introduced by [[Donald E. Knuth]] in 1984.  The main intention behind this approach was to treat a program as literature understandable to human beings. This approach was implemented at Stanford University as a part of research on algorithms and digital [[typography]]. \n"
    },
    {
      "type": "markdown",
      "id": "270180ae76964ce7",
      "text": "This implementation was called “[[WEB]]” by Donald Knuth since he believed that it was one of the few three-letter words of English that hadn’t already been applied to computing.  However, it correctly resembles the complicated nature of software delicately pieced together from simple materials - [https://en.wikipedia.org/wiki/Literate_programming#History_and_philosophy wikipedia]"
    },
    {
      "type": "markdown",
      "id": "3f199bbf-a09a-46df-b8c3-715c4614779d",
      "text": "# Concept"
    },
    {
      "type": "markdown",
      "id": "ee178f28-0cb6-4275-acb0-fd87b424775f",
      "text": "Literate programming is writing out the program logic in a human language with included (separated by a primitive markup) code snippets and macros. Macros in a literate source file are simply title-like or explanatory phrases in a human language that describe human abstractions created while solving the programming problem, and hiding chunks of code or lower-level macros. \n"
    },
    {
      "type": "markdown",
      "id": "84f2c13b3b3d2d16",
      "text": "These macros are similar to the [[algorithm]]s in [[pseudocode]] typically used in teaching [[computer science]]. These arbitrary explanatory phrases become precise new operators, created on the fly by the programmer, forming a ''meta-language'' on top of the underlying programming language - [https://en.wikipedia.org/wiki/Literate_programming#Concept wikipedia]"
    },
    {
      "type": "markdown",
      "id": "a9bae0f4-3429-414d-8e15-57664eb26b52",
      "text": "A [[preprocessor]] is used to substitute arbitrary hierarchies, or rather \"interconnected 'webs' of macros\", to produce the compilable source code with one command (\"tangle\"), and documentation with another (\"weave\"). The preprocessor also provides an ability to write out the content of the macros and to add to already created macros in any place in the text of the literate program source file, thereby disposing of the need to keep in mind the restrictions imposed by traditional programming languages or to interrupt the flow of thought."
    },
    {
      "type": "markdown",
      "id": "7767e1c2-48d3-4f1a-8837-44c89a45f826",
      "text": "# Advantages"
    },
    {
      "type": "markdown",
      "id": "0d38e119-d4ca-4ee8-b52b-c0db63f5f17f",
      "text": "According to Knuth, - [https://en.wikipedia.org/wiki/Literate_programming#Advantages wikipedia]"
    },
    {
      "type": "markdown",
      "id": "bebf57ed-641b-4117-93a8-0dacd2c2dc34",
      "text": "> literate programming provides higher-quality programs, since it forces programmers to explicitly state the thoughts behind the program, making poorly thought-out design decisions more obvious. \n"
    },
    {
      "type": "markdown",
      "id": "ea2662b2174e6e90",
      "text": "Knuth also claims that literate programming provides a first-rate documentation system, which is not an add-on, but is grown naturally in the process of exposition of one's thoughts during a program's creation. The resulting documentation allows the author to restart his own thought processes at any later time, and allows other programmers to understand the construction of the program more easily. \n"
    },
    {
      "type": "markdown",
      "id": "862c616e7770cb14",
      "text": "This differs from traditional documentation, in which a programmer is presented with source code that follows a compiler-imposed order, and must decipher the thought process behind the program from the code and its associated comments. \n"
    },
    {
      "type": "markdown",
      "id": "c655bc5c6de4c5d6",
      "text": "The meta-language capabilities of literate programming are also claimed to facilitate thinking, giving a higher \"bird's eye view\" of the code and increasing the number of concepts the mind can successfully retain and process. Applicability of the concept to programming on a large scale, that of commercial-grade programs, is proven by an edition of [[TeX]] code as a literate program."
    },
    {
      "type": "markdown",
      "id": "52cc9118-d5aa-486f-a576-def22b563a30",
      "text": "Knuth also claims that Literate Programming can lead to easy porting of software to multiple environments, and even cites the implementation of TeX as an example."
    },
    {
      "type": "markdown",
      "id": "40f1f3ca-b5e8-4596-a3bb-401776a21179",
      "text": "# Contrast with documentation generation"
    },
    {
      "type": "markdown",
      "id": "d2d5d92b-7f55-4d81-9af2-f0511ffd5928",
      "text": "Literate programming is very often misunderstood to refer only to formatted documentation produced from a common file with both source code and comments – which is properly called [[documentation generation]] – or to voluminous commentaries included with code. This is backwards: well-documented code or documentation extracted from code follows the structure of the code, with documentation embedded in the code; in literate programming code is embedded in documentation, with the code following the structure of the documentation - [https://en.wikipedia.org/wiki/Literate_programming#Contrast_with_documentation_generation wikipedia]"
    },
    {
      "type": "markdown",
      "id": "87cf6393-cd0a-4e43-9e25-30f924754b84",
      "text": "This misconception has led to claims that comment-extraction tools, such as the [[Perl]] [[Plain Old Documentation]] or [[Java (programming language)]] [[Javadoc]] systems, are \"literate programming tools\". However, because these tools do not implement the \"web of abstract concepts\" hiding behind the system of natural-language macros, or provide an ability to change the order of the source code from a machine-imposed sequence to one convenient to the human mind, they cannot properly be called literate programming tools in the sense intended by Knuth."
    },
    {
      "type": "markdown",
      "id": "d514c94b-9a0a-443b-b469-38d084a097bd",
      "text": "# Workflow"
    },
    {
      "type": "markdown",
      "id": "4183bf4a-dcc3-4666-928a-d88b63a07155",
      "text": "Implementing literate programming consists of two steps - [https://en.wikipedia.org/wiki/Literate_programming#Workflow wikipedia]"
    },
    {
      "type": "markdown",
      "id": "14dabc9a-58e9-4544-934b-534351a0ff60",
      "text": "- [[Weaving]]: Generating comprehensive document about program and its maintenance."
    },
    {
      "type": "markdown",
      "id": "2367ee6d-e70b-4b5a-9dfa-e1c1b7508d13",
      "text": "- [[Tangling]]: Generating machine executable code"
    },
    {
      "type": "markdown",
      "id": "3320ad34-32a8-4741-b99c-ed4c41967c9c",
      "text": "# Links\n\n- Literate programming -... - [https://en.wikipedia.org/wiki/Literate_programming wikipedia.org]\n- What Is a Computational... - [https://blog.stephenwolfram.com/2017/11/what-is-a-computational-essay/ stephenwolfram.com]\n- What Is a Computational... - [https://news.ycombinator.com/item?id=15769054 ycombinator.com]\n- [[Literate Devops with Emacs]] -... - [https://www.youtube.com/watch?v=dljNabciEGg youtube.com]\n- xkcd: Standards - [https://xkcd.com/927/ xkcd.com]\n- The Scientific Paper Is... - [https://www.theatlantic.com/science/archive/2018/04/the-scientific-paper-is-obsolete/556676/ theatlantic.com]\n- Computational Essay -... - [https://www.uio.no/studier/emner/matnat/fys/FYS1120/h18/beskjeder/computational-essay.html uio.no]\n- brett-victor's super cool... - [https://www.google.com/search?q=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&oq=brett-victor%27s+super+cool+talk+%22inventing+on+principle%22&aqs=chrome..69i57.421j0j1&sourceid=chrome&ie=UTF-8 google.com]\n- Bret Victor - Inventing on... - [https://vimeo.com/36579366 vimeo.com]"
    },
    {
      "type": "markdown",
      "id": "d3aacefc-6d7f-43c6-8997-44e8f537dbfa",
      "text": "# Literate Devops with Emacs"
    },
    {
      "text": "A demonstration originally given at EmacsConf 2015 that describes how I use org-mode's Babel project and Tramp to configure and work with remote servers in my data center, prior to copying code off into Chef cookbooks and whatnot.",
      "id": "6e88d708-952e-40b2-8996-ef087916d076",
      "type": "paragraph"
    },
    {
      "type": "markdown",
      "id": "710f0d0c-f7ca-499e-b15a-52faea8d02b7",
      "text": "Weaving and tangling are done on the same source so that they are consistent with each other."
    },
    {
      "text": "YOUTUBE dljNabciEGg\n[[Literate Devops with Emacs]]. Broadcast on 1 Sep 2015.",
      "id": "e605606c-3a67-4908-b16b-d659ebea57dd",
      "type": "video"
    },
    {
      "text": "* My initial essay that started this presentation: http://howardism.org/Technical/Emacs/literate-devops.html\n* Github that contains the demonstration code and results Sprint Page: https://github.com/howardabrams/literate-devops-demo\n* Emacs code used to make this demonstration: http://github.com/howardabrams/demo-it\n* My Emacs configuration files: http://github.com/howardabrams/dot-files",
      "id": "259a3d3b-9ef6-459a-9f47-273f70b3592a",
      "type": "markdown"
    },
    {
      "type": "markdown",
      "id": "d44eeec6-b469-4176-87d0-51ca383b84cd",
      "text": "# Examples and Tools"
    },
    {
      "type": "markdown",
      "id": "693e3fb1-04ff-451c-8a7d-002b85ca86df",
      "text": "A classic example of literate programming is the literate implementation of the standard [[wc (Unix)]] word counting program. This example provides a good illustration of the basic elements of literate programming - [https://en.wikipedia.org/wiki/Literate_programming#Example wikipedia]"
    },
    {
      "type": "markdown",
      "id": "d35cb3aa-1384-44b5-9447-fcf7601d3a6d",
      "text": "- [[Literate Tools]]"
    },
    {
      "type": "markdown",
      "id": "fdbcfa8f-63b8-46ad-9f7c-7d5d7a153a8a",
      "text": "# See also"
    },
    {
      "type": "markdown",
      "id": "9561976efac18d41",
      "text": "- [[Literate Wiki]]\n- [[Programming In Wiki]]\n- [[Bret Victor]] - [[Inventing on Principle]]\n- [[Literate Tools]]",
      "alias": "648a1faa-c8ba-40bf-bcba-dfc0a8c5bd77"
    },
    {
      "type": "markdown",
      "id": "184098f494286c76",
      "text": "- [[Imperative programming]]\n- [[Procedural programming]]\n- [[Object-oriented programming]]\n- [[Declarative programming]]\n- [[Functional programming]]\n- [[Reactive programming]]\n- [[Logic programming]]\n- [[Literate programming]]\n- [[Programming paradigm]]\n\n"
    }
  ]
}