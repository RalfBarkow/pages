{
  "title": "More Story",
  "story": [
    {
      "type": "assets",
      "id": "2e319e8b5a236ce5",
      "text": "pages/story-telling"
    },
    {
      "type": "markdown",
      "id": "4ae177e370191aac",
      "text": "`more-story.html`:"
    },
    {
      "type": "frame",
      "id": "0d085730d1810faf",
      "text": "//wiki.ralfbarkow.ch/assets/pages/story-telling/more-story.html"
    },
    {
      "type": "markdown",
      "id": "9c6f1bb69d757e02",
      "text": "`print this` ⇒ "
    },
    {
      "type": "code",
      "id": "793866f471489f87",
      "text": "  window.doprint = async function(event) {\n    let html = [prolog]\n    for (let item of instory) {\n      try {\n        let site = item.site\n        let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n        let slug = frame.asSlug(title)\n        let url = new URL(`http://${site}/${slug}.json`)\n        console.log({site,title,slug})\n        let page = await fetch(url).then(res => res.json())\n        html.push(render(site,page).join(\"\\n\"))\n        window.result.innerHTML += ' .'\n      } catch (err) {\n        window.result.innerHTML += ' x'\n        console.error(err)\n      }\n\n    }\n    frame.download(html.join(\"\\n\"),'preprint.html','text/html')\n  }\n"
    },
    {
      "type": "code",
      "id": "7e01a4f384b189df",
      "text": "[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$ git diff\ndiff --git a/pages/story-telling/more-story.html b/pages/story-telling/more-story.html\nindex 6871731..7577c64 100644\n--- a/pages/story-telling/more-story.html\n+++ b/pages/story-telling/more-story.html\n@@ -76,8 +76,9 @@\n         let site = item.site\n         let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n         let slug = frame.asSlug(title)\n+        let url = new URL(`http://${site}/${slug}.json`)\n         console.log({site,title,slug})\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let page = await fetch(url).then(res => res.json())\n         html.push(render(site,page).join(\"\\n\"))\n         window.result.innerHTML += ' .'\n       } catch (err) {\ndiff --git a/pages/story-telling/print-telling.html b/pages/story-telling/print-telling.html\nindex 4e1bfa6..b259d18 100644\n--- a/pages/story-telling/print-telling.html\n+++ b/pages/story-telling/print-telling.html\n@@ -53,7 +53,8 @@\n         let title = link(content.text)\n         let site = content.site\n         let slug = frame.asSlug(title)\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let url = new URL(`http://${site}/${slug}.json`)\n+        let page = await fetch(url).then(res => res.json())\n         html.push(...render(site, page))\n         window.result.innerHTML += ' .'\n       } catch (err) {\n\n[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$"
    },
    {
      "type": "markdown",
      "id": "19c8e1fc971c18bc",
      "text": "Returns a TypeError: Failed to fetch\n    at window.doprint (VM296 more-story.html:81:28)\nwindow.doprint @ VM296 more-story.html:86\nawait in window.doprint (async)\nonclick @ VM300 more-story.html:3\nVM296 more-story.html:80 "
    },
    {
      "type": "paragraph",
      "id": "a3f48b1ee754d42e",
      "text": "Check if a JavaScript string is a URL. [https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url stackoverflow]"
    },
    {
      "type": "code",
      "id": "c381dec98afea39a",
      "text": "function isValidHttpUrl(string) {\n     let url;\n\n     try {\n         url = new URL(string);\n     } catch (_) {\n         return false;\n     }\n\n     return url.protocol === \"http:\" || url.protocol === \"https:\";\n }\n"
    },
    {
      "type": "reference",
      "id": "d51d1f773c77ad16",
      "site": "about.fed.wiki",
      "slug": "mixed-content",
      "title": "Mixed Content",
      "text": "Wiki extends its twenty year old namesake by providing an unbounded complement of markups of which only a few offer specific syntax for formatting text. The remaining markups configure plugins to show or do work we usually associate with applications."
    },
    {
      "type": "markdown",
      "id": "4d294ad763fb1457",
      "text": "> [[Mixed Content]]: The page at '<URL>' was loaded over HTTPS, but requested an insecure resource '<URL>'. This request has been blocked; the content must be served over HTTPS.\nVM175 more-story.html:93 Mixed Content: The page at 'https://wiki.ralfbarkow.ch/view/welcome-visitors/view/2022-05-25/view/find-saved-tellings/view/search-for-tellings/view/more-telling-about-federated-wiki/view/more-more-telling-about-federated-wiki' was loaded over HTTPS, but requested an insecure resource 'http://about.fed.wiki/about-federated-wiki.json'. This request has been blocked; the content must be served over HTTPS."
    },
    {
      "type": "paragraph",
      "id": "8017af6a529e791e",
      "text": "What is Mixed Content Error… [https://cheapsslsecurity.com/blog/mixed-content-error-how-to-disable-it-on-chrome/ post]"
    },
    {
      "type": "paragraph",
      "id": "8712a40c04084c04",
      "text": "Serve http as local https?"
    },
    {
      "type": "markdown",
      "id": "38dcd840d3e3cef2",
      "text": "https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content"
    },
    {
      "type": "paragraph",
      "id": "215306a96c2c13d6",
      "text": "How to access the JSON on HTTP from an HTTPS page? [https://stackoverflow.com/questions/23011707/how-to-access-the-json-on-http-from-an-https-page stackoverflow]"
    },
    {
      "type": "markdown",
      "id": "3c61177c20d4bc49",
      "text": "Do wee need a function `request-insecure-json-resource`? \n"
    },
    {
      "type": "code",
      "id": "97af9b24ecee928a",
      "text": "XHR GET https://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\n[HTTP/2 200 OK 597ms]"
    },
    {
      "type": "markdown",
      "id": "6e7449cf4279d675",
      "text": "⇒ [[XMLHttpRequest]] ⇒ [[CORS]]\nThen search for resource in the sitemap.json ?!\n"
    },
    {
      "type": "reference",
      "id": "924980287b49f987",
      "site": "wiki.ralfbarkow.ch",
      "slug": "proxy-request-for-site-owner",
      "title": "Proxy request for site owner",
      "text": "Part of the work exploring making wiki-client protocol agnostic. When we server the origin over `https` browers restrict access to non-secure resources, so we **must** fetch any remote resources over a secure connection as well."
    },
    {
      "type": "markdown",
      "id": "5d7248617d878f25",
      "text": "https://wiki.ralfbarkow.ch/proxy/jess.reimage.fed.wiki/jesss-story.json"
    },
    {
      "type": "pagefold",
      "id": "df75d1dca0fc0e31",
      "text": "print-telling"
    },
    {
      "type": "frame",
      "id": "2545442a9364cf4e",
      "text": "//wiki.ralfbarkow.ch/assets/pages/story-telling/print-telling.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "More Story",
        "story": []
      },
      "date": 1653476025050
    },
    {
      "item": {
        "type": "factory",
        "id": "2e319e8b5a236ce5"
      },
      "id": "2e319e8b5a236ce5",
      "type": "add",
      "date": 1653476036293
    },
    {
      "type": "edit",
      "id": "2e319e8b5a236ce5",
      "item": {
        "type": "assets",
        "id": "2e319e8b5a236ce5",
        "text": "pages/story-telling"
      },
      "date": 1653476038380
    },
    {
      "item": {
        "type": "factory",
        "id": "0d085730d1810faf"
      },
      "id": "0d085730d1810faf",
      "type": "add",
      "after": "2e319e8b5a236ce5",
      "date": 1653476045650
    },
    {
      "type": "edit",
      "id": "0d085730d1810faf",
      "item": {
        "type": "frame",
        "id": "0d085730d1810faf",
        "text": "//wiki.ralfbarkow.ch/assets/pages/story-telling/more-story.html"
      },
      "date": 1653476052001
    },
    {
      "item": {
        "type": "factory",
        "id": "793866f471489f87"
      },
      "id": "793866f471489f87",
      "type": "add",
      "after": "0d085730d1810faf",
      "date": 1653476619116
    },
    {
      "type": "edit",
      "id": "793866f471489f87",
      "item": {
        "type": "code",
        "id": "793866f471489f87",
        "text": "  window.doprint = async function(event) {\n    let html = [prolog]\n    for (let item of instory) {\n      try {\n        let site = item.site\n        let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n        let slug = frame.asSlug(title)\n        console.log({site,title,slug})\n        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n        html.push(render(site,page).join(\"\\n\"))\n        window.result.innerHTML += ' .'\n      } catch (err) {\n        window.result.innerHTML += ' x'\n        console.error(err)\n      }\n\n    }\n    frame.download(html.join(\"\\n\"),'preprint.html','text/html')\n  }\n"
      },
      "date": 1653476621679
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a3f48b1ee754d42e",
        "text": "Check if a JavaScript string is a URL. [https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url stackoverflow]"
      },
      "id": "a3f48b1ee754d42e",
      "type": "add",
      "after": "793866f471489f87",
      "date": 1653477092321
    },
    {
      "type": "edit",
      "id": "a3f48b1ee754d42e",
      "item": {
        "type": "paragraph",
        "id": "a3f48b1ee754d42e",
        "text": "Check if a JavaScript string is a URL. [https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url stackoverflow]"
      },
      "date": 1653477095391
    },
    {
      "type": "edit",
      "id": "a3f48b1ee754d42e",
      "item": {
        "type": "paragraph",
        "id": "a3f48b1ee754d42e",
        "text": "Check if a JavaScript string is a URL. [https://stackoverflow.com/questions/5717093/check-if-a-javascript-string-is-a-url stackoverflow]"
      },
      "date": 1653477107929
    },
    {
      "type": "edit",
      "id": "793866f471489f87",
      "item": {
        "type": "code",
        "id": "793866f471489f87",
        "text": "  window.doprint = async function(event) {\n    let html = [prolog]\n    for (let item of instory) {\n      try {\n        let site = item.site\n        let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n        let slug = frame.asSlug(title)\n        let url = new URL(`http://${site}/${slug}.json`)\n        console.log({site,title,slug})\n        let page = await fetch(url).then(res => res.json())\n        html.push(render(site,page).join(\"\\n\"))\n        window.result.innerHTML += ' .'\n      } catch (err) {\n        window.result.innerHTML += ' x'\n        console.error(err)\n      }\n\n    }\n    frame.download(html.join(\"\\n\"),'preprint.html','text/html')\n  }\n"
      },
      "date": 1653477125444
    },
    {
      "item": {
        "type": "markdown",
        "id": "19c8e1fc971c18bc",
        "text": "Returns a TypeError: Failed to fetch\n    at window.doprint (VM296 more-story.html:81:28)\nwindow.doprint @ VM296 more-story.html:86\nawait in window.doprint (async)\nonclick @ VM300 more-story.html:3\nVM296 more-story.html:80 "
      },
      "id": "19c8e1fc971c18bc",
      "type": "add",
      "after": "a3f48b1ee754d42e",
      "date": 1653477151951
    },
    {
      "type": "edit",
      "id": "19c8e1fc971c18bc",
      "item": {
        "type": "markdown",
        "id": "19c8e1fc971c18bc",
        "text": "Returns a TypeError: Failed to fetch\n    at window.doprint (VM296 more-story.html:81:28)\nwindow.doprint @ VM296 more-story.html:86\nawait in window.doprint (async)\nonclick @ VM300 more-story.html:3\nVM296 more-story.html:80 "
      },
      "date": 1653477154436
    },
    {
      "id": "19c8e1fc971c18bc",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "0d085730d1810faf",
        "793866f471489f87",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e"
      ],
      "date": 1653477156555
    },
    {
      "type": "edit",
      "id": "19c8e1fc971c18bc",
      "item": {
        "type": "markdown",
        "id": "19c8e1fc971c18bc",
        "text": "Returns a TypeError: Failed to fetch\n    at window.doprint (VM296 more-story.html:81:28)\nwindow.doprint @ VM296 more-story.html:86\nawait in window.doprint (async)\nonclick @ VM300 more-story.html:3\nVM296 more-story.html:80 "
      },
      "date": 1653477171197
    },
    {
      "type": "edit",
      "id": "19c8e1fc971c18bc",
      "item": {
        "type": "markdown",
        "id": "19c8e1fc971c18bc",
        "text": "Returns a TypeError: Failed to fetch\n    at window.doprint (VM296 more-story.html:81:28)\nwindow.doprint @ VM296 more-story.html:86\nawait in window.doprint (async)\nonclick @ VM300 more-story.html:3\nVM296 more-story.html:80 "
      },
      "date": 1653477174932
    },
    {
      "item": {
        "type": "reference",
        "id": "d51d1f773c77ad16",
        "site": "about.fed.wiki",
        "slug": "mixed-content",
        "title": "Mixed Content",
        "text": "Wiki extends its twenty year old namesake by providing an unbounded complement of markups of which only a few offer specific syntax for formatting text. The remaining markups configure plugins to show or do work we usually associate with applications."
      },
      "id": "d51d1f773c77ad16",
      "type": "add",
      "after": "a3f48b1ee754d42e",
      "date": 1653477645504
    },
    {
      "type": "edit",
      "id": "d51d1f773c77ad16",
      "item": {
        "type": "reference",
        "id": "d51d1f773c77ad16",
        "site": "about.fed.wiki",
        "slug": "mixed-content",
        "title": "Mixed Content",
        "text": "Wiki extends its twenty year old namesake by providing an unbounded complement of markups of which only a few offer specific syntax for formatting text. The remaining markups configure plugins to show or do work we usually associate with applications."
      },
      "date": 1653477648629
    },
    {
      "item": {
        "type": "code",
        "id": "9111b23ae4a65390",
        "text": ""
      },
      "id": "9111b23ae4a65390",
      "type": "add",
      "after": "d51d1f773c77ad16",
      "date": 1653477697287
    },
    {
      "type": "edit",
      "id": "9111b23ae4a65390",
      "item": {
        "type": "code",
        "id": "9111b23ae4a65390",
        "text": ""
      },
      "date": 1653477701740
    },
    {
      "item": {
        "type": "markdown",
        "id": "4d294ad763fb1457",
        "text": "> [[Mixed Content]]: The page at '<URL>' was loaded over HTTPS, but requested an insecure resource '<URL>'. This request has been blocked; the content must be served over HTTPS.\nVM175 more-story.html:93 Mixed Content: The page at 'https://wiki.ralfbarkow.ch/view/welcome-visitors/view/2022-05-25/view/find-saved-tellings/view/search-for-tellings/view/more-telling-about-federated-wiki/view/more-more-telling-about-federated-wiki' was loaded over HTTPS, but requested an insecure resource 'http://about.fed.wiki/about-federated-wiki.json'. This request has been blocked; the content must be served over HTTPS."
      },
      "id": "4d294ad763fb1457",
      "type": "add",
      "after": "9111b23ae4a65390",
      "date": 1653477710562
    },
    {
      "type": "remove",
      "id": "9111b23ae4a65390",
      "date": 1653477712329
    },
    {
      "type": "edit",
      "id": "4d294ad763fb1457",
      "item": {
        "type": "markdown",
        "id": "4d294ad763fb1457",
        "text": "> [[Mixed Content]]: The page at '<URL>' was loaded over HTTPS, but requested an insecure resource '<URL>'. This request has been blocked; the content must be served over HTTPS.\nVM175 more-story.html:93 Mixed Content: The page at 'https://wiki.ralfbarkow.ch/view/welcome-visitors/view/2022-05-25/view/find-saved-tellings/view/search-for-tellings/view/more-telling-about-federated-wiki/view/more-more-telling-about-federated-wiki' was loaded over HTTPS, but requested an insecure resource 'http://about.fed.wiki/about-federated-wiki.json'. This request has been blocked; the content must be served over HTTPS."
      },
      "date": 1653477713506
    },
    {
      "type": "edit",
      "id": "4d294ad763fb1457",
      "item": {
        "type": "markdown",
        "id": "4d294ad763fb1457",
        "text": "> [[Mixed Content]]: The page at '<URL>' was loaded over HTTPS, but requested an insecure resource '<URL>'. This request has been blocked; the content must be served over HTTPS.\nVM175 more-story.html:93 Mixed Content: The page at 'https://wiki.ralfbarkow.ch/view/welcome-visitors/view/2022-05-25/view/find-saved-tellings/view/search-for-tellings/view/more-telling-about-federated-wiki/view/more-more-telling-about-federated-wiki' was loaded over HTTPS, but requested an insecure resource 'http://about.fed.wiki/about-federated-wiki.json'. This request has been blocked; the content must be served over HTTPS."
      },
      "date": 1653477728462
    },
    {
      "type": "edit",
      "id": "4d294ad763fb1457",
      "item": {
        "type": "markdown",
        "id": "4d294ad763fb1457",
        "text": "> [[Mixed Content]]: The page at '<URL>' was loaded over HTTPS, but requested an insecure resource '<URL>'. This request has been blocked; the content must be served over HTTPS.\nVM175 more-story.html:93 Mixed Content: The page at 'https://wiki.ralfbarkow.ch/view/welcome-visitors/view/2022-05-25/view/find-saved-tellings/view/search-for-tellings/view/more-telling-about-federated-wiki/view/more-more-telling-about-federated-wiki' was loaded over HTTPS, but requested an insecure resource 'http://about.fed.wiki/about-federated-wiki.json'. This request has been blocked; the content must be served over HTTPS."
      },
      "date": 1653477789559
    },
    {
      "item": {
        "type": "markdown",
        "id": "4ae177e370191aac",
        "text": "`more-story.html`:"
      },
      "id": "4ae177e370191aac",
      "type": "add",
      "after": "4d294ad763fb1457",
      "date": 1653477831558
    },
    {
      "id": "4ae177e370191aac",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "793866f471489f87",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "d51d1f773c77ad16",
        "4d294ad763fb1457"
      ],
      "date": 1653477838331
    },
    {
      "type": "edit",
      "id": "4ae177e370191aac",
      "item": {
        "type": "markdown",
        "id": "4ae177e370191aac",
        "text": "`more-story.html`:"
      },
      "date": 1653477845516
    },
    {
      "type": "edit",
      "id": "4ae177e370191aac",
      "item": {
        "type": "markdown",
        "id": "4ae177e370191aac",
        "text": "`more-story.html`:"
      },
      "date": 1653477847332
    },
    {
      "item": {
        "type": "code",
        "id": "c381dec98afea39a",
        "text": "function isValidHttpUrl(string) {\n     let url;\n\n     try {\n         url = new URL(string);\n     } catch (_) {\n         return false;\n     }\n\n     return url.protocol === \"http:\" || url.protocol === \"https:\";\n }\n"
      },
      "id": "c381dec98afea39a",
      "type": "add",
      "after": "4d294ad763fb1457",
      "date": 1653477886040
    },
    {
      "type": "edit",
      "id": "c381dec98afea39a",
      "item": {
        "type": "code",
        "id": "c381dec98afea39a",
        "text": "function isValidHttpUrl(string) {\n     let url;\n\n     try {\n         url = new URL(string);\n     } catch (_) {\n         return false;\n     }\n\n     return url.protocol === \"http:\" || url.protocol === \"https:\";\n }\n"
      },
      "date": 1653477888464
    },
    {
      "id": "c381dec98afea39a",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "793866f471489f87",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457"
      ],
      "date": 1653477908554
    },
    {
      "item": {
        "type": "paragraph",
        "id": "8017af6a529e791e",
        "text": "What is Mixed Content Error… [https://cheapsslsecurity.com/blog/mixed-content-error-how-to-disable-it-on-chrome/ post]"
      },
      "id": "8017af6a529e791e",
      "type": "add",
      "after": "4d294ad763fb1457",
      "date": 1653478077587
    },
    {
      "type": "edit",
      "id": "8017af6a529e791e",
      "item": {
        "type": "paragraph",
        "id": "8017af6a529e791e",
        "text": "What is Mixed Content Error… [https://cheapsslsecurity.com/blog/mixed-content-error-how-to-disable-it-on-chrome/ post]"
      },
      "date": 1653478086393
    },
    {
      "type": "edit",
      "id": "8017af6a529e791e",
      "item": {
        "type": "paragraph",
        "id": "8017af6a529e791e",
        "text": "What is Mixed Content Error… [https://cheapsslsecurity.com/blog/mixed-content-error-how-to-disable-it-on-chrome/ post]"
      },
      "date": 1653478106263
    },
    {
      "item": {
        "type": "paragraph",
        "id": "8712a40c04084c04",
        "text": "Serve http as local https?"
      },
      "id": "8712a40c04084c04",
      "type": "add",
      "after": "8017af6a529e791e",
      "date": 1653478223929
    },
    {
      "type": "edit",
      "id": "8712a40c04084c04",
      "item": {
        "type": "paragraph",
        "id": "8712a40c04084c04",
        "text": "Serve http as local https?"
      },
      "date": 1653478240731
    },
    {
      "item": {
        "type": "markdown",
        "id": "38dcd840d3e3cef2",
        "text": "https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content"
      },
      "id": "38dcd840d3e3cef2",
      "type": "add",
      "after": "8712a40c04084c04",
      "date": 1653478319894
    },
    {
      "type": "edit",
      "id": "38dcd840d3e3cef2",
      "item": {
        "type": "markdown",
        "id": "38dcd840d3e3cef2",
        "text": "https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content"
      },
      "date": 1653478329159
    },
    {
      "type": "edit",
      "id": "38dcd840d3e3cef2",
      "item": {
        "type": "markdown",
        "id": "38dcd840d3e3cef2",
        "text": "https://developer.mozilla.org/en-US/docs/Web/Security/Mixed_content"
      },
      "date": 1653478331624
    },
    {
      "item": {
        "type": "paragraph",
        "id": "215306a96c2c13d6",
        "text": "How to access the JSON on HTTP from an HTTPS page? [https://stackoverflow.com/questions/23011707/how-to-access-the-json-on-http-from-an-https-page stackoverflow]"
      },
      "id": "215306a96c2c13d6",
      "type": "add",
      "after": "38dcd840d3e3cef2",
      "date": 1653479242610
    },
    {
      "type": "edit",
      "id": "215306a96c2c13d6",
      "item": {
        "type": "paragraph",
        "id": "215306a96c2c13d6",
        "text": "How to access the JSON on HTTP from an HTTPS page? [https://stackoverflow.com/questions/23011707/how-to-access-the-json-on-http-from-an-https-page stackoverflow]"
      },
      "date": 1653479248052
    },
    {
      "type": "edit",
      "id": "215306a96c2c13d6",
      "item": {
        "type": "paragraph",
        "id": "215306a96c2c13d6",
        "text": "How to access the JSON on HTTP from an HTTPS page? [https://stackoverflow.com/questions/23011707/how-to-access-the-json-on-http-from-an-https-page stackoverflow]"
      },
      "date": 1653479266100
    },
    {
      "type": "add",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`?"
      },
      "after": "215306a96c2c13d6",
      "date": 1653479325137
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`?"
      },
      "date": 1653479454649
    },
    {
      "type": "add",
      "id": "d843e1076d16a55c",
      "item": {
        "type": "markdown",
        "id": "d843e1076d16a55c",
        "text": "https://github.com/SpacialCircumstances/Alve.Json"
      },
      "after": "3c61177c20d4bc49",
      "date": 1653479511021
    },
    {
      "type": "edit",
      "id": "d843e1076d16a55c",
      "item": {
        "type": "markdown",
        "id": "d843e1076d16a55c",
        "text": "https://github.com/SpacialCircumstances/Alve.Json"
      },
      "date": 1653479512150
    },
    {
      "item": {
        "type": "code",
        "id": "7e01a4f384b189df",
        "text": "[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$ git diff\ndiff --git a/pages/story-telling/more-story.html b/pages/story-telling/more-story.html\nindex 6871731..7577c64 100644\n--- a/pages/story-telling/more-story.html\n+++ b/pages/story-telling/more-story.html\n@@ -76,8 +76,9 @@\n         let site = item.site\n         let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n         let slug = frame.asSlug(title)\n+        let url = new URL(`http://${site}/${slug}.json`)\n         console.log({site,title,slug})\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let page = await fetch(url).then(res => res.json())\n         html.push(render(site,page).join(\"\\n\"))\n         window.result.innerHTML += ' .'\n       } catch (err) {\ndiff --git a/pages/story-telling/print-telling.html b/pages/story-telling/print-telling.html\nindex 4e1bfa6..b259d18 100644\n--- a/pages/story-telling/print-telling.html\n+++ b/pages/story-telling/print-telling.html\n@@ -53,7 +53,8 @@\n         let title = link(content.text)\n         let site = content.site\n         let slug = frame.asSlug(title)\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let url = new URL(`http://${site}/${slug}.json`)\n+        let page = await fetch(url).then(res => res.json())\n         html.push(...render(site, page))\n         window.result.innerHTML += ' .'\n       } catch (err) {\n\n[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$"
      },
      "id": "7e01a4f384b189df",
      "type": "add",
      "after": "d843e1076d16a55c",
      "date": 1653479591162
    },
    {
      "type": "edit",
      "id": "7e01a4f384b189df",
      "item": {
        "type": "code",
        "id": "7e01a4f384b189df",
        "text": "[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$ git diff\ndiff --git a/pages/story-telling/more-story.html b/pages/story-telling/more-story.html\nindex 6871731..7577c64 100644\n--- a/pages/story-telling/more-story.html\n+++ b/pages/story-telling/more-story.html\n@@ -76,8 +76,9 @@\n         let site = item.site\n         let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n         let slug = frame.asSlug(title)\n+        let url = new URL(`http://${site}/${slug}.json`)\n         console.log({site,title,slug})\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let page = await fetch(url).then(res => res.json())\n         html.push(render(site,page).join(\"\\n\"))\n         window.result.innerHTML += ' .'\n       } catch (err) {\ndiff --git a/pages/story-telling/print-telling.html b/pages/story-telling/print-telling.html\nindex 4e1bfa6..b259d18 100644\n--- a/pages/story-telling/print-telling.html\n+++ b/pages/story-telling/print-telling.html\n@@ -53,7 +53,8 @@\n         let title = link(content.text)\n         let site = content.site\n         let slug = frame.asSlug(title)\n-        let page = await fetch(`//${site}/${slug}.json`).then(res => res.json())\n+        let url = new URL(`http://${site}/${slug}.json`)\n+        let page = await fetch(url).then(res => res.json())\n         html.push(...render(site, page))\n         window.result.innerHTML += ' .'\n       } catch (err) {\n\n[rgb@wiki:~/.wiki/127.0.0.1/assets/pages/story-telling]$"
      },
      "date": 1653479594556
    },
    {
      "id": "7e01a4f384b189df",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "793866f471489f87",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "7e01a4f384b189df",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "d843e1076d16a55c"
      ],
      "date": 1653479603134
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`?"
      },
      "date": 1653479731131
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`?"
      },
      "date": 1653479732428
    },
    {
      "id": "7e01a4f384b189df",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "7e01a4f384b189df",
        "793866f471489f87",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "d843e1076d16a55c"
      ],
      "date": 1653479925038
    },
    {
      "type": "edit",
      "id": "793866f471489f87",
      "item": {
        "type": "code",
        "id": "793866f471489f87",
        "text": "  window.doprint = async function(event) {\n    let html = [prolog]\n    for (let item of instory) {\n      try {\n        let site = item.site\n        let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n        let slug = frame.asSlug(title)\n        let url = new URL(`http://${site}/${slug}.json`)\n        console.log({site,title,slug})\n        let page = await fetch(url).then(res => res.json())\n        html.push(render(site,page).join(\"\\n\"))\n        window.result.innerHTML += ' .'\n      } catch (err) {\n        window.result.innerHTML += ' x'\n        console.error(err)\n      }\n\n    }\n    frame.download(html.join(\"\\n\"),'preprint.html','text/html')\n  }\n"
      },
      "date": 1653479959366
    },
    {
      "id": "793866f471489f87",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "d843e1076d16a55c"
      ],
      "date": 1653479965332
    },
    {
      "type": "edit",
      "id": "793866f471489f87",
      "item": {
        "type": "code",
        "id": "793866f471489f87",
        "text": "  window.doprint = async function(event) {\n    let html = [prolog]\n    for (let item of instory) {\n      try {\n        let site = item.site\n        let title = item.text.split(/\\[\\[|\\]\\]/)[1]\n        let slug = frame.asSlug(title)\n        let url = new URL(`http://${site}/${slug}.json`)\n        console.log({site,title,slug})\n        let page = await fetch(url).then(res => res.json())\n        html.push(render(site,page).join(\"\\n\"))\n        window.result.innerHTML += ' .'\n      } catch (err) {\n        window.result.innerHTML += ' x'\n        console.error(err)\n      }\n\n    }\n    frame.download(html.join(\"\\n\"),'preprint.html','text/html')\n  }\n"
      },
      "date": 1653480092168
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9c6f1bb69d757e02",
        "text": "`print this`"
      },
      "id": "9c6f1bb69d757e02",
      "type": "add",
      "after": "d843e1076d16a55c",
      "date": 1653480107744
    },
    {
      "id": "9c6f1bb69d757e02",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "9c6f1bb69d757e02",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "d843e1076d16a55c"
      ],
      "date": 1653480116528
    },
    {
      "type": "edit",
      "id": "9c6f1bb69d757e02",
      "item": {
        "type": "paragraph",
        "id": "9c6f1bb69d757e02",
        "text": "`print this`"
      },
      "date": 1653480130581,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "type": "fork",
      "date": 1653480194443
    },
    {
      "type": "edit",
      "id": "9c6f1bb69d757e02",
      "item": {
        "type": "paragraph",
        "id": "9c6f1bb69d757e02",
        "text": "`print this` ⇒ "
      },
      "date": 1653480238954
    },
    {
      "type": "edit",
      "id": "9c6f1bb69d757e02",
      "item": {
        "type": "markdown",
        "id": "9c6f1bb69d757e02",
        "text": "`print this` ⇒ "
      },
      "date": 1653480239954
    },
    {
      "item": {
        "type": "factory",
        "id": "df75d1dca0fc0e31"
      },
      "id": "df75d1dca0fc0e31",
      "type": "add",
      "after": "d843e1076d16a55c",
      "date": 1653480467196
    },
    {
      "type": "edit",
      "id": "df75d1dca0fc0e31",
      "item": {
        "type": "pagefold",
        "id": "df75d1dca0fc0e31",
        "text": "print-telling"
      },
      "date": 1653480476977
    },
    {
      "item": {
        "type": "factory",
        "id": "2545442a9364cf4e"
      },
      "id": "2545442a9364cf4e",
      "type": "add",
      "after": "df75d1dca0fc0e31",
      "date": 1653480478658
    },
    {
      "type": "edit",
      "id": "2545442a9364cf4e",
      "item": {
        "type": "frame",
        "id": "2545442a9364cf4e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/story-telling/print-telling.html"
      },
      "date": 1653480484960
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`? "
      },
      "date": 1653480635021
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`? \nXHRGEThttps://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\n[HTTP/2 200 OK 597ms]\n\n\t\nGET\n\thttps://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\nStatus\n200\nOK\nVersionHTTP/2\nÜbertragen12.98 KB (12.66 KB Größe)\nReferrer Policystrict-origin-when-cross-origin\n\n    \t\n    accept-ranges\n    \tbytes\n    access-control-allow-origin\n    \t*\n    cache-control\n    \tpublic, max-age=0\n    content-length\n    \t12966\n    content-type\n    \tapplication/json; charset=UTF-8\n    date\n    \tWed, 25 May 2022 12:08:43 GMT\n    etag\n    \tW/\"32a6-180f1e292e1\"\n    last-modified\n    \tMon, 23 May 2022 17:06:39 GMT\n    server\n    \tnginx\n    X-Firefox-Spdy\n    \th2\n    \t\n    Accept\n    \tapplication/json, text/javascript, */*; q=0.01\n    Accept-Encoding\n    \tgzip, deflate, br\n    Accept-Language\n    \tde,en-US;q=0.7,en;q=0.3\n    Connection\n    \tkeep-alive\n    Cookie\n    \twikiSession=S_gJ3GTphpX8I42hJljAgg.fNgm2a09y1WcrRKt8P-O9irHmwSt9EYgk1cv58Wn3DsAcIMEPK0RJWK3WL83N_TtndvM0Ib6r-ji5UFNWaOM-r_e5WAutr4LyYoEYVfC48jmS8sd5WQ-zFStsLvJnuSo.1653472593904.604800000.tQFgoP-2U9IshZ9I52wk_RjYdcrBLKWtSptIBO7MG1M\n    DNT\n    \t1\n    Host\n    \twiki.ralfbarkow.ch\n    If-Modified-Since\n    \tMon, 23 May 2022 17:06:39 GMT\n    If-None-Match\n    \tW/\"32a6-180f1e292e1\"\n    Referer\n    \thttps://wiki.ralfbarkow.ch/view/more-story\n    Sec-Fetch-Dest\n    \tempty\n    Sec-Fetch-Mode\n    \tcors\n    Sec-Fetch-Site\n    \tsame-origin\n    TE\n    \ttrailers\n    User-Agent\n    \tMozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:100.0) Gecko/20100101 Firefox/100.0\n    X-Requested-With\n    \tXMLHttpRequest"
      },
      "date": 1653480643371
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Json Decoder Elm? Do wee need a function `request-insecure-json-resource`? \n"
      },
      "date": 1653480658601
    },
    {
      "item": {
        "type": "factory",
        "id": "97af9b24ecee928a"
      },
      "id": "97af9b24ecee928a",
      "type": "add",
      "after": "2545442a9364cf4e",
      "date": 1653480661165
    },
    {
      "id": "97af9b24ecee928a",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "9c6f1bb69d757e02",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "97af9b24ecee928a",
        "d843e1076d16a55c",
        "df75d1dca0fc0e31",
        "2545442a9364cf4e"
      ],
      "date": 1653480666027
    },
    {
      "type": "remove",
      "id": "d843e1076d16a55c",
      "date": 1653480680544
    },
    {
      "type": "edit",
      "id": "97af9b24ecee928a",
      "item": {
        "type": "code",
        "id": "97af9b24ecee928a",
        "text": "https://github.com/SpacialCircumstances/Alve.Json"
      },
      "date": 1653480684613
    },
    {
      "type": "edit",
      "id": "97af9b24ecee928a",
      "item": {
        "type": "code",
        "id": "97af9b24ecee928a",
        "text": "XHRGEThttps://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\n[HTTP/2 200 OK 597ms]\n\n\t\nGET\n\thttps://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\nStatus\n200\nOK\nVersionHTTP/2\nÜbertragen12.98 KB (12.66 KB Größe)\nReferrer Policystrict-origin-when-cross-origin\n\n    \t\n    accept-ranges\n    \tbytes\n    access-control-allow-origin\n    \t*\n    cache-control\n    \tpublic, max-age=0\n    content-length\n    \t12966\n    content-type\n    \tapplication/json; charset=UTF-8\n    date\n    \tWed, 25 May 2022 12:08:43 GMT\n    etag\n    \tW/\"32a6-180f1e292e1\"\n    last-modified\n    \tMon, 23 May 2022 17:06:39 GMT\n    server\n    \tnginx\n    X-Firefox-Spdy\n    \th2\n    \t\n    Accept\n    \tapplication/json, text/javascript, */*; q=0.01\n    Accept-Encoding\n    \tgzip, deflate, br\n    Accept-Language\n    \tde,en-US;q=0.7,en;q=0.3\n    Connection\n    \tkeep-alive\n    Cookie\n    \twikiSession=S_gJ3GTphpX8I42hJljAgg.fNgm2a09y1WcrRKt8P-O9irHmwSt9EYgk1cv58Wn3DsAcIMEPK0RJWK3WL83N_TtndvM0Ib6r-ji5UFNWaOM-r_e5WAutr4LyYoEYVfC48jmS8sd5WQ-zFStsLvJnuSo.1653472593904.604800000.tQFgoP-2U9IshZ9I52wk_RjYdcrBLKWtSptIBO7MG1M\n    DNT\n    \t1\n    Host\n    \twiki.ralfbarkow.ch\n    If-Modified-Since\n    \tMon, 23 May 2022 17:06:39 GMT\n    If-None-Match\n    \tW/\"32a6-180f1e292e1\"\n    Referer\n    \thttps://wiki.ralfbarkow.ch/view/more-story\n    Sec-Fetch-Dest\n    \tempty\n    Sec-Fetch-Mode\n    \tcors\n    Sec-Fetch-Site\n    \tsame-origin\n    TE\n    \ttrailers\n    User-Agent\n    \tMozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:100.0) Gecko/20100101 Firefox/100.0\n    X-Requested-With\n    \tXMLHttpRequest"
      },
      "date": 1653480688526
    },
    {
      "type": "edit",
      "id": "97af9b24ecee928a",
      "item": {
        "type": "code",
        "id": "97af9b24ecee928a",
        "text": "XHR GET https://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\n[HTTP/2 200 OK 597ms]\n\n\t\nGET\n\thttps://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\nStatus\n200\nOK\nVersionHTTP/2\nÜbertragen12.98 KB (12.66 KB Größe)\nReferrer Policystrict-origin-when-cross-origin\n\n    \t\n    accept-ranges\n    \tbytes\n    access-control-allow-origin\n    \t*\n    cache-control\n    \tpublic, max-age=0\n    content-length\n    \t12966\n    content-type\n    \tapplication/json; charset=UTF-8\n    date\n    \tWed, 25 May 2022 12:08:43 GMT\n    etag\n    \tW/\"32a6-180f1e292e1\"\n    last-modified\n    \tMon, 23 May 2022 17:06:39 GMT\n    server\n    \tnginx\n    X-Firefox-Spdy\n    \th2\n    \t\n    Accept\n    \tapplication/json, text/javascript, */*; q=0.01\n    Accept-Encoding\n    \tgzip, deflate, br\n    Accept-Language\n    \tde,en-US;q=0.7,en;q=0.3\n    Connection\n    \tkeep-alive\n    Cookie\n    \twikiSession=S_gJ3GTphpX8I42hJljAgg.fNgm2a09y1WcrRKt8P-O9irHmwSt9EYgk1cv58Wn3DsAcIMEPK0RJWK3WL83N_TtndvM0Ib6r-ji5UFNWaOM-r_e5WAutr4LyYoEYVfC48jmS8sd5WQ-zFStsLvJnuSo.1653472593904.604800000.tQFgoP-2U9IshZ9I52wk_RjYdcrBLKWtSptIBO7MG1M\n    DNT\n    \t1\n    Host\n    \twiki.ralfbarkow.ch\n    If-Modified-Since\n    \tMon, 23 May 2022 17:06:39 GMT\n    If-None-Match\n    \tW/\"32a6-180f1e292e1\"\n    Referer\n    \thttps://wiki.ralfbarkow.ch/view/more-story\n    Sec-Fetch-Dest\n    \tempty\n    Sec-Fetch-Mode\n    \tcors\n    Sec-Fetch-Site\n    \tsame-origin\n    TE\n    \ttrailers\n    User-Agent\n    \tMozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:100.0) Gecko/20100101 Firefox/100.0\n    X-Requested-With\n    \tXMLHttpRequest"
      },
      "date": 1653480696165
    },
    {
      "type": "edit",
      "id": "97af9b24ecee928a",
      "item": {
        "type": "code",
        "id": "97af9b24ecee928a",
        "text": "XHR GET https://wiki.ralfbarkow.ch/proxy/about.fed.wiki/system/sitemap.json\n[HTTP/2 200 OK 597ms]"
      },
      "date": 1653480885396
    },
    {
      "type": "add",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "Then search for resource in the sitemap.json"
      },
      "after": "3c61177c20d4bc49",
      "date": 1653480932500
    },
    {
      "id": "6e7449cf4279d675",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "9c6f1bb69d757e02",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "97af9b24ecee928a",
        "6e7449cf4279d675",
        "df75d1dca0fc0e31",
        "2545442a9364cf4e"
      ],
      "date": 1653480934644
    },
    {
      "type": "edit",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "Then search for resource in the sitemap.json ?!"
      },
      "date": 1653480939150
    },
    {
      "type": "edit",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "XMLHttpRequest\nThen search for resource in the sitemap.json ?!"
      },
      "date": 1653481310359
    },
    {
      "type": "edit",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "⇒ [[XMLHttpRequest]]\nThen search for resource in the sitemap.json ?!"
      },
      "date": 1653481332083
    },
    {
      "type": "edit",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "⇒ [[XMLHttpRequest]] ⇒ [[CORS]]\nThen search for resource in the sitemap.json ?!"
      },
      "date": 1653481419189
    },
    {
      "type": "edit",
      "id": "3c61177c20d4bc49",
      "item": {
        "type": "markdown",
        "id": "3c61177c20d4bc49",
        "text": "Do wee need a function `request-insecure-json-resource`? \n"
      },
      "date": 1653482154889
    },
    {
      "item": {
        "type": "factory",
        "id": "924980287b49f987"
      },
      "id": "924980287b49f987",
      "type": "add",
      "after": "2545442a9364cf4e",
      "date": 1653484655493
    },
    {
      "id": "924980287b49f987",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "9c6f1bb69d757e02",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "97af9b24ecee928a",
        "6e7449cf4279d675",
        "924980287b49f987",
        "df75d1dca0fc0e31",
        "2545442a9364cf4e"
      ],
      "date": 1653484657405
    },
    {
      "type": "edit",
      "id": "924980287b49f987",
      "item": {
        "type": "reference",
        "id": "924980287b49f987",
        "site": "wiki.ralfbarkow.ch",
        "slug": "proxy-request-for-site-owner",
        "title": "Proxy request for site owner",
        "text": "Part of the work exploring making wiki-client protocol agnostic. When we server the origin over `https` browers restrict access to non-secure resources, so we **must** fetch any remote resources over a secure connection as well."
      },
      "date": 1653484663245
    },
    {
      "type": "edit",
      "id": "6e7449cf4279d675",
      "item": {
        "type": "markdown",
        "id": "6e7449cf4279d675",
        "text": "⇒ [[XMLHttpRequest]] ⇒ [[CORS]]\nThen search for resource in the sitemap.json ?!\n"
      },
      "date": 1653485950976
    },
    {
      "type": "add",
      "id": "5d7248617d878f25",
      "item": {
        "type": "markdown",
        "id": "5d7248617d878f25",
        "text": "https://wiki.ralfbarkow.ch/proxy/jess.reimage.fed.wiki/jesss-story.json"
      },
      "after": "6e7449cf4279d675",
      "date": 1653485951860
    },
    {
      "id": "924980287b49f987",
      "type": "move",
      "order": [
        "2e319e8b5a236ce5",
        "4ae177e370191aac",
        "0d085730d1810faf",
        "9c6f1bb69d757e02",
        "793866f471489f87",
        "7e01a4f384b189df",
        "19c8e1fc971c18bc",
        "a3f48b1ee754d42e",
        "c381dec98afea39a",
        "d51d1f773c77ad16",
        "4d294ad763fb1457",
        "8017af6a529e791e",
        "8712a40c04084c04",
        "38dcd840d3e3cef2",
        "215306a96c2c13d6",
        "3c61177c20d4bc49",
        "97af9b24ecee928a",
        "6e7449cf4279d675",
        "924980287b49f987",
        "5d7248617d878f25",
        "df75d1dca0fc0e31",
        "2545442a9364cf4e"
      ],
      "date": 1653485981721
    }
  ]
}