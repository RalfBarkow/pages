{
  "title": "Lasagna Code",
  "story": [
    {
      "type": "html",
      "text": "[[Lasagna Code]] is like [[Ravioli Code]], but using several layers of code.",
      "id": "dd5eef5a474b56c7307e955e3ea68916"
    },
    {
      "type": "html",
      "text": "\nYou can't just replace one layer with another, they are are tangled together.",
      "id": "eaa5af375d1ed9dc56474ebfda208eb8"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f2f00116dce017295869d6f9867486a7"
    },
    {
      "type": "html",
      "text": "See [[Three Tier Architecture]], [[Nn Tier Architecture]].",
      "id": "c82ada61c7d9962e5e46b71b8c38cdde"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f2f00116dce017295869d6f9867486a7"
    },
    {
      "type": "html",
      "text": "\nI think one problem with [[Lasagna Code]] is that it often has a handful of completely un-tangled layers (perhaps in which dependency only goes in one direction), but each layer taken individually is a [[Big Ball Of Mud]].  It's as if folks created rules for how layers should interact with each other, and as long as they follow those rules, anything is fair game -- there is little or no [[Information Hiding]] within a single layer.  The result is that it is simple to replace an entire layer, but still difficult to replace individual components within a layer.",
      "id": "2602e69de69274feb132d61302ed6441"
    },
    {
      "type": "html",
      "text": "\nPerhaps a solution is that if you decide you want a layered architecture, then each layer of lasagna should have the characteristics of [[Ravioli Code]].",
      "id": "84af853bd42c57dba450a001f9c27eb0"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f2f00116dce017295869d6f9867486a7"
    },
    {
      "type": "html",
      "text": "[[Joe Celko]] claims to have coined the term \"[[Lasagna Code]]\"; anyone know whether that's true?",
      "id": "17c864d448367e7aff9c207d18d18a97"
    },
    {
      "type": "html",
      "text": "\nHe said: \"I coined the term \"lasagna code\" in my column in Information Systems News (now Information Week) in 1982 for a occurrence that was well-known among people teaching structured methods. In those days, we were worried about \"spaghetti code,\" which referred to programs with indiscriminate GOTO statements that jumped forward and backward in the program. This tangled structure left you with a path of control through the program that looked like a plate of spaghetti.\"",
      "id": "3096cbcbb1ad215dd0b34e067087f04b"
    },
    {
      "type": "html",
      "text": "\"The standard solution was to replace the GOTOs with nested IF-THEN-ELSE statements and switches that were layered so deep and had so much redundancy that you had a path of control that looked like a plate of lasagna instead. When you have a program with complicated logic, you really should make a decision table and code from it.\"",
      "id": "2e332ba93efa58eb3505009376dba4d6"
    },
    {
      "type": "html",
      "text": "\nFrom [http://www.dbmsmag.com/9701d06.html www.dbmsmag.com]",
      "id": "cc2ad7eb3ddf3c1cf8dd28d8cdc43e8b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f2f00116dce017295869d6f9867486a7"
    },
    {
      "type": "html",
      "text": "\nA type of [[Pasta Code]].",
      "id": "f130992b988bb091b81d455abccfb27e"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?LasagnaCode c2.com]",
      "id": "fe56875ef10d1681698abda7db3e7723"
    }
  ],
  "journal": [
    {
      "date": 1177880224000,
      "id": "cd71bbeccdfa807d45b33fa47d60241b",
      "type": "create",
      "item": {
        "title": "Lasagna Code",
        "story": [
          {
            "type": "html",
            "text": "[[Lasagna Code]] is like [[Ravioli Code]], but using several layers of code.",
            "id": "dd5eef5a474b56c7307e955e3ea68916"
          },
          {
            "type": "html",
            "text": "\nYou can't just replace one layer with another, they are are tangled together.",
            "id": "eaa5af375d1ed9dc56474ebfda208eb8"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f2f00116dce017295869d6f9867486a7"
          },
          {
            "type": "html",
            "text": "See [[Three Tier Architecture]], [[Nn Tier Architecture]].",
            "id": "c82ada61c7d9962e5e46b71b8c38cdde"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f2f00116dce017295869d6f9867486a7"
          },
          {
            "type": "html",
            "text": "\nI think one problem with [[Lasagna Code]] is that it often has a handful of completely un-tangled layers (perhaps in which dependency only goes in one direction), but each layer taken individually is a [[Big Ball Of Mud]].  It's as if folks created rules for how layers should interact with each other, and as long as they follow those rules, anything is fair game -- there is little or no [[Information Hiding]] within a single layer.  The result is that it is simple to replace an entire layer, but still difficult to replace individual components within a layer.",
            "id": "2602e69de69274feb132d61302ed6441"
          },
          {
            "type": "html",
            "text": "\nPerhaps a solution is that if you decide you want a layered architecture, then each layer of lasagna should have the characteristics of [[Ravioli Code]].",
            "id": "84af853bd42c57dba450a001f9c27eb0"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f2f00116dce017295869d6f9867486a7"
          },
          {
            "type": "html",
            "text": "[[Joe Celko]] claims to have coined the term \"[[Lasagna Code]]\"; anyone know whether that's true?",
            "id": "17c864d448367e7aff9c207d18d18a97"
          },
          {
            "type": "html",
            "text": "\nHe said: \"I coined the term \"lasagna code\" in my column in Information Systems News (now Information Week) in 1982 for a occurrence that was well-known among people teaching structured methods. In those days, we were worried about \"spaghetti code,\" which referred to programs with indiscriminate GOTO statements that jumped forward and backward in the program. This tangled structure left you with a path of control through the program that looked like a plate of spaghetti.\"",
            "id": "3096cbcbb1ad215dd0b34e067087f04b"
          },
          {
            "type": "html",
            "text": "\"The standard solution was to replace the GOTOs with nested IF-THEN-ELSE statements and switches that were layered so deep and had so much redundancy that you had a path of control that looked like a plate of lasagna instead. When you have a program with complicated logic, you really should make a decision table and code from it.\"",
            "id": "2e332ba93efa58eb3505009376dba4d6"
          },
          {
            "type": "html",
            "text": "\nFrom [http://www.dbmsmag.com/9701d06.html www.dbmsmag.com]",
            "id": "cc2ad7eb3ddf3c1cf8dd28d8cdc43e8b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f2f00116dce017295869d6f9867486a7"
          },
          {
            "type": "html",
            "text": "\nA type of [[Pasta Code]].",
            "id": "f130992b988bb091b81d455abccfb27e"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?LasagnaCode c2.com]",
            "id": "fe56875ef10d1681698abda7db3e7723"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "code.sfw.c2.com",
      "date": 1707800161402
    }
  ]
}