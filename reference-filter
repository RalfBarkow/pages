{
  "title": "Reference Filter",
  "story": [
    {
      "type": "paragraph",
      "id": "adc0529dc29361ae",
      "text": "⇒ [[Hyperlink in Verb]] ⇒ [[Subcategorization Frame]]"
    },
    {
      "type": "reference",
      "id": "0375f50ad6b692c4",
      "site": "marc.tries.fed.wiki",
      "slug": "verb",
      "title": "Verb",
      "text": "[[Hyperlink in Verb]]"
    },
    {
      "type": "reference",
      "id": "cb7dad69b3e4a95d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "subject",
      "title": "Subject",
      "text": "[[Hyperlink in Subject]]"
    },
    {
      "type": "reference",
      "id": "661714cba9e8c711",
      "site": "wiki.ralfbarkow.ch",
      "slug": "object",
      "title": "Object",
      "text": "A [[Container]] is an object from the [[Outside]] and a [[Process]] from the [[Inside]].  (Bricken, [[Iconic Arithmetic]] Volume I, p. 137)"
    },
    {
      "type": "paragraph",
      "id": "f18bb535c935c38f",
      "text": "Filter the page story and create a reference value (array):"
    },
    {
      "type": "frame",
      "id": "01304cc22d6afcb6",
      "text": "//wiki.ralfbarkow.ch/assets/pages/reference-filter/PageStoryFilterReferenceJs.html\nHEIGHT 256"
    },
    {
      "type": "pagefold",
      "id": "04970a96c38a138d",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "7bc1af2a64265092",
      "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787274616834GyHgV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nI wonder, if the Frame plugin were to expose the lineup, what would it offer? Maybe fabricated Reference items as one could construct themselves in one page? Maybe a list of page context as returned for the current page now? Maybe something about sources found in the lineup as read out of the dom and accessible by other Frame request messages? Opinions? \neric"
    },
    {
      "type": "paragraph",
      "id": "27d201eb6cb8f9c9",
      "text": "eric\nI'm imagining a protocol like this (modeled on the example of requestFrameContext): the html script inside the frame would setup a listener to receive the lineup, and then send a message to request that lineup: […] [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787332289597eyPeF:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "reference",
      "id": "8d88c2b160af0d8c",
      "site": "js.ward.asia.wiki.org",
      "slug": "read-context-of-frame",
      "title": "Read Context of Frame",
      "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
    },
    {
      "type": "code",
      "id": "790d6bc34f1da559",
      "text": "window.addEventListener('message', ({data}) => {\n  if (data.action != \"lineup\") {\n    return;\n  }\n  const {lineup} = data;\n  // do something with that lineup\n})\nwindow.parent.postMessage({\n  action: \"sendLineup\"\n}, \"*\")\n"
    },
    {
      "type": "paragraph",
      "id": "329bddddab704c18",
      "text": "And the frame plugin might reply like so:"
    },
    {
      "type": "code",
      "id": "0716d21c410e1c82",
      "text": "lineup = Array.from(document.querySelectorAll('.page'), (el) => structuredClone($(el).data('data')))\n"
    },
    {
      "type": "paragraph",
      "id": "a958571e3cb6aa75",
      "text": "TIL about structuredClone() [https://developer.mozilla.org/en-US/docs/Web/API/structuredClone mdn]"
    },
    {
      "type": "paragraph",
      "id": "dc3611331465ae17",
      "text": "From earlier separate conversation, we might offer a similar protocol for requesting the collection of sitemaps currently in the neighborhood."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reference Filter",
        "story": []
      },
      "date": 1678741211208
    },
    {
      "item": {
        "type": "factory",
        "id": "01304cc22d6afcb6"
      },
      "id": "01304cc22d6afcb6",
      "type": "add",
      "date": 1678741213816
    },
    {
      "type": "edit",
      "id": "01304cc22d6afcb6",
      "item": {
        "type": "frame",
        "id": "01304cc22d6afcb6",
        "text": "ref"
      },
      "date": 1678741224408
    },
    {
      "type": "edit",
      "id": "01304cc22d6afcb6",
      "item": {
        "type": "frame",
        "id": "01304cc22d6afcb6",
        "text": "//wiki.ralfbarkow.ch/assets/pages/reference-filter/importjs.html\nHEIGHT 256"
      },
      "date": 1678741313468
    },
    {
      "item": {
        "type": "factory",
        "id": "adc0529dc29361ae"
      },
      "id": "adc0529dc29361ae",
      "type": "add",
      "after": "01304cc22d6afcb6",
      "date": 1678741315333
    },
    {
      "id": "adc0529dc29361ae",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "01304cc22d6afcb6"
      ],
      "date": 1678741318056
    },
    {
      "type": "edit",
      "id": "adc0529dc29361ae",
      "item": {
        "type": "paragraph",
        "id": "adc0529dc29361ae",
        "text": "[[Hypertext in Verb]]"
      },
      "date": 1678741327806
    },
    {
      "type": "edit",
      "id": "adc0529dc29361ae",
      "item": {
        "type": "paragraph",
        "id": "adc0529dc29361ae",
        "text": "[[Hyperlink in Verb]]"
      },
      "date": 1678741359554
    },
    {
      "item": {
        "type": "factory",
        "id": "cb7dad69b3e4a95d"
      },
      "id": "cb7dad69b3e4a95d",
      "type": "add",
      "after": "01304cc22d6afcb6",
      "date": 1678741378979
    },
    {
      "id": "0375f50ad6b692c4",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "0375f50ad6b692c4",
        "site": "marc.tries.fed.wiki",
        "slug": "verb",
        "title": "Verb",
        "text": "[[Hyperlink in Verb]]"
      },
      "after": "01304cc22d6afcb6",
      "attribution": {
        "page": "Verb"
      },
      "date": 1678741382647
    },
    {
      "type": "edit",
      "id": "cb7dad69b3e4a95d",
      "item": {
        "type": "reference",
        "id": "cb7dad69b3e4a95d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "subject",
        "title": "Subject",
        "text": "[[Hyperlink in Subject]]"
      },
      "date": 1678741415700
    },
    {
      "id": "cb7dad69b3e4a95d",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "01304cc22d6afcb6",
        "cb7dad69b3e4a95d",
        "0375f50ad6b692c4"
      ],
      "date": 1678741418391
    },
    {
      "item": {
        "type": "factory",
        "id": "661714cba9e8c711"
      },
      "id": "661714cba9e8c711",
      "type": "add",
      "after": "0375f50ad6b692c4",
      "date": 1678741423251
    },
    {
      "type": "edit",
      "id": "661714cba9e8c711",
      "item": {
        "type": "reference",
        "id": "661714cba9e8c711",
        "site": "wiki.ralfbarkow.ch",
        "slug": "object",
        "title": "Object",
        "text": "A [[Container]] is an object from the [[Outside]] and a [[Process]] from the [[Inside]].  (Bricken, [[Iconic Arithmetic]] Volume I, p. 137)"
      },
      "date": 1678741426186
    },
    {
      "id": "01304cc22d6afcb6",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "cb7dad69b3e4a95d",
        "0375f50ad6b692c4",
        "661714cba9e8c711",
        "01304cc22d6afcb6"
      ],
      "date": 1678741709072
    },
    {
      "type": "edit",
      "id": "01304cc22d6afcb6",
      "item": {
        "type": "frame",
        "id": "01304cc22d6afcb6",
        "text": "//wiki.ralfbarkow.ch/assets/pages/reference-filter/PageStoryFilterReferenceJs.html\nHEIGHT 256"
      },
      "date": 1678742006608
    },
    {
      "item": {
        "type": "factory",
        "id": "f18bb535c935c38f"
      },
      "id": "f18bb535c935c38f",
      "type": "add",
      "after": "01304cc22d6afcb6",
      "date": 1678742188448
    },
    {
      "type": "edit",
      "id": "f18bb535c935c38f",
      "item": {
        "type": "paragraph",
        "id": "f18bb535c935c38f",
        "text": "Filter the page story and create a "
      },
      "date": 1678742235272
    },
    {
      "type": "edit",
      "id": "f18bb535c935c38f",
      "item": {
        "type": "paragraph",
        "id": "f18bb535c935c38f",
        "text": "Filter the page story and create a reference array"
      },
      "date": 1678742346236
    },
    {
      "item": {
        "type": "factory",
        "id": "04970a96c38a138d"
      },
      "id": "04970a96c38a138d",
      "type": "add",
      "after": "f18bb535c935c38f",
      "date": 1678742510811
    },
    {
      "type": "edit",
      "id": "04970a96c38a138d",
      "item": {
        "type": "pagefold",
        "id": "04970a96c38a138d",
        "text": "~"
      },
      "date": 1678742514424
    },
    {
      "item": {
        "type": "factory",
        "id": "7bc1af2a64265092"
      },
      "id": "7bc1af2a64265092",
      "type": "add",
      "after": "04970a96c38a138d",
      "date": 1678742526918
    },
    {
      "type": "edit",
      "id": "7bc1af2a64265092",
      "item": {
        "type": "paragraph",
        "id": "7bc1af2a64265092",
        "text": "Ward via [matrix]\nI wonder, if the Frame plugin were to expose the lineup, what would it offer? Maybe fabricated Reference items as one could construct themselves in one page? Maybe a list of page context as returned for the current page now? Maybe something about sources found in the lineup as read out of the dom and accessible by other Frame request messages? Opinions? \neric"
      },
      "date": 1678742535651
    },
    {
      "type": "edit",
      "id": "7bc1af2a64265092",
      "item": {
        "type": "paragraph",
        "id": "7bc1af2a64265092",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787274616834GyHgV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nI wonder, if the Frame plugin were to expose the lineup, what would it offer? Maybe fabricated Reference items as one could construct themselves in one page? Maybe a list of page context as returned for the current page now? Maybe something about sources found in the lineup as read out of the dom and accessible by other Frame request messages? Opinions? \neric"
      },
      "date": 1678742551813
    },
    {
      "item": {
        "type": "factory",
        "id": "27d201eb6cb8f9c9"
      },
      "id": "27d201eb6cb8f9c9",
      "type": "add",
      "after": "7bc1af2a64265092",
      "date": 1678742565108
    },
    {
      "type": "edit",
      "id": "27d201eb6cb8f9c9",
      "item": {
        "type": "paragraph",
        "id": "27d201eb6cb8f9c9",
        "text": "eric\nI'm imagining a protocol like this (modeled on the example of requestFrameContext): the html script inside the frame would setup a listener to receive the lineup, and then send a message to request that lineup: […] [matrix]"
      },
      "date": 1678742573424
    },
    {
      "type": "edit",
      "id": "27d201eb6cb8f9c9",
      "item": {
        "type": "paragraph",
        "id": "27d201eb6cb8f9c9",
        "text": "eric\nI'm imagining a protocol like this (modeled on the example of requestFrameContext): the html script inside the frame would setup a listener to receive the lineup, and then send a message to request that lineup: […] [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787332289597eyPeF:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678742585017
    },
    {
      "item": {
        "type": "factory",
        "id": "8d88c2b160af0d8c"
      },
      "id": "8d88c2b160af0d8c",
      "type": "add",
      "after": "27d201eb6cb8f9c9",
      "date": 1678742627899
    },
    {
      "type": "edit",
      "id": "8d88c2b160af0d8c",
      "item": {
        "type": "reference",
        "id": "8d88c2b160af0d8c",
        "site": "js.ward.asia.wiki.org",
        "slug": "read-context-of-frame",
        "title": "Read Context of Frame",
        "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
      },
      "date": 1678742634294
    },
    {
      "type": "edit",
      "id": "f18bb535c935c38f",
      "item": {
        "type": "paragraph",
        "id": "f18bb535c935c38f",
        "text": "Filter the page story and create a reference array."
      },
      "date": 1678742667617
    },
    {
      "id": "f18bb535c935c38f",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "cb7dad69b3e4a95d",
        "0375f50ad6b692c4",
        "661714cba9e8c711",
        "f18bb535c935c38f",
        "01304cc22d6afcb6",
        "04970a96c38a138d",
        "7bc1af2a64265092",
        "27d201eb6cb8f9c9",
        "8d88c2b160af0d8c"
      ],
      "date": 1678742671227
    },
    {
      "type": "edit",
      "id": "f18bb535c935c38f",
      "item": {
        "type": "paragraph",
        "id": "f18bb535c935c38f",
        "text": "Filter the page story and create a reference array:"
      },
      "date": 1678742675014
    },
    {
      "type": "edit",
      "id": "adc0529dc29361ae",
      "item": {
        "type": "paragraph",
        "id": "adc0529dc29361ae",
        "text": "⇒ [[Hyperlink in Verb]]"
      },
      "date": 1678742695583
    },
    {
      "item": {
        "type": "factory",
        "id": "790d6bc34f1da559"
      },
      "id": "790d6bc34f1da559",
      "type": "add",
      "after": "8d88c2b160af0d8c",
      "date": 1678742770761
    },
    {
      "id": "790d6bc34f1da559",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "cb7dad69b3e4a95d",
        "0375f50ad6b692c4",
        "661714cba9e8c711",
        "f18bb535c935c38f",
        "01304cc22d6afcb6",
        "04970a96c38a138d",
        "7bc1af2a64265092",
        "27d201eb6cb8f9c9",
        "790d6bc34f1da559",
        "8d88c2b160af0d8c"
      ],
      "date": 1678742772583
    },
    {
      "type": "edit",
      "id": "790d6bc34f1da559",
      "item": {
        "type": "code",
        "id": "790d6bc34f1da559",
        "text": "window.addEventListener('message', ({data}) => {\n  if (data.action != \"lineup\") {\n    return;\n  }\n  const {lineup} = data;\n  // do something with that lineup\n})\nwindow.parent.postMessage({\n  action: \"sendLineup\"\n}, \"*\")\n"
      },
      "date": 1678742775661
    },
    {
      "item": {
        "type": "factory",
        "id": "329bddddab704c18"
      },
      "id": "329bddddab704c18",
      "type": "add",
      "after": "8d88c2b160af0d8c",
      "date": 1678742809088
    },
    {
      "type": "edit",
      "id": "329bddddab704c18",
      "item": {
        "type": "paragraph",
        "id": "329bddddab704c18",
        "text": "And the frame plugin might reply like so:"
      },
      "date": 1678742812232
    },
    {
      "item": {
        "type": "factory",
        "id": "0716d21c410e1c82"
      },
      "id": "0716d21c410e1c82",
      "type": "add",
      "after": "329bddddab704c18",
      "date": 1678742819958
    },
    {
      "type": "edit",
      "id": "0716d21c410e1c82",
      "item": {
        "type": "code",
        "id": "0716d21c410e1c82",
        "text": "lineup = Array.from(document.querySelectorAll('.page'), (el) => structuredClone($(el).data('data')))\n"
      },
      "date": 1678742821859
    },
    {
      "item": {
        "type": "factory",
        "id": "a958571e3cb6aa75"
      },
      "id": "a958571e3cb6aa75",
      "type": "add",
      "after": "0716d21c410e1c82",
      "date": 1678742829161
    },
    {
      "type": "edit",
      "id": "a958571e3cb6aa75",
      "item": {
        "type": "paragraph",
        "id": "a958571e3cb6aa75",
        "text": "TIL about structuredClone() https://developer.mozilla.org/en-US/docs/Web/API/structuredClone"
      },
      "date": 1678742830687
    },
    {
      "item": {
        "type": "factory",
        "id": "dc3611331465ae17"
      },
      "id": "dc3611331465ae17",
      "type": "add",
      "after": "a958571e3cb6aa75",
      "date": 1678742842715
    },
    {
      "type": "edit",
      "id": "dc3611331465ae17",
      "item": {
        "type": "paragraph",
        "id": "dc3611331465ae17",
        "text": "From earlier separate conversation, we might offer a similar protocol for requesting the collection of sitemaps currently in the neighborhood."
      },
      "date": 1678742844581
    },
    {
      "type": "edit",
      "id": "a958571e3cb6aa75",
      "item": {
        "type": "paragraph",
        "id": "a958571e3cb6aa75",
        "text": "TIL about structuredClone() [https://developer.mozilla.org/en-US/docs/Web/API/structuredClone mdn]"
      },
      "date": 1678742864819
    },
    {
      "id": "8d88c2b160af0d8c",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "cb7dad69b3e4a95d",
        "0375f50ad6b692c4",
        "661714cba9e8c711",
        "f18bb535c935c38f",
        "01304cc22d6afcb6",
        "04970a96c38a138d",
        "7bc1af2a64265092",
        "27d201eb6cb8f9c9",
        "8d88c2b160af0d8c",
        "790d6bc34f1da559",
        "329bddddab704c18",
        "0716d21c410e1c82",
        "a958571e3cb6aa75",
        "dc3611331465ae17"
      ],
      "date": 1678742951529
    },
    {
      "type": "edit",
      "id": "adc0529dc29361ae",
      "item": {
        "type": "paragraph",
        "id": "adc0529dc29361ae",
        "text": "⇒ [[Hyperlink in Verb]] ⇒ [[Subcategorization Frame]]"
      },
      "date": 1678766432435
    },
    {
      "id": "cb7dad69b3e4a95d",
      "type": "move",
      "order": [
        "adc0529dc29361ae",
        "0375f50ad6b692c4",
        "cb7dad69b3e4a95d",
        "661714cba9e8c711",
        "f18bb535c935c38f",
        "01304cc22d6afcb6",
        "04970a96c38a138d",
        "7bc1af2a64265092",
        "27d201eb6cb8f9c9",
        "8d88c2b160af0d8c",
        "790d6bc34f1da559",
        "329bddddab704c18",
        "0716d21c410e1c82",
        "a958571e3cb6aa75",
        "dc3611331465ae17"
      ],
      "date": 1678766572716
    },
    {
      "type": "edit",
      "id": "f18bb535c935c38f",
      "item": {
        "type": "paragraph",
        "id": "f18bb535c935c38f",
        "text": "Filter the page story and create a reference value (array):"
      },
      "date": 1678773697187
    }
  ]
}