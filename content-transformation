{
  "title": "Content Transformation",
  "story": [
    {
      "type": "paragraph",
      "id": "c8a8d84bb7f4c47f",
      "text": "We've written a number of one-off content translators that usually involve adapting old scripts to new circumstances. In a recent conversion we found making two sites useful where the second site records the difficulties and solutions used to produce the first. This replaces console.log with hypertext."
    },
    {
      "type": "paragraph",
      "id": "a509429ca35cb29f",
      "text": "See [[Making Growing Regions Wiki]]"
    },
    {
      "type": "paragraph",
      "id": "4033a00fb5971add",
      "text": "See where I wrote more about this."
    },
    {
      "type": "paragraph",
      "id": "5ea0af4ad54ebceb",
      "text": "We've written many times about various import processes, some real, others imagined, often with shared code."
    },
    {
      "type": "paragraph",
      "id": "9c9a3cab74dc41ae",
      "text": "[[Import Documents]] — earliest examples explained"
    },
    {
      "type": "paragraph",
      "id": "a7a694ef34d58a92",
      "text": "[[Import Annotations]] — provenance of imported data "
    },
    {
      "type": "paragraph",
      "id": "8e56c74b1818d5f3",
      "text": "[[Round Trip Import]] — using hidden item properties"
    },
    {
      "type": "paragraph",
      "id": "cfbadc14cd4414f7",
      "text": "[[Import, Quotation and Reference]] — tracking copyrights"
    },
    {
      "type": "paragraph",
      "id": "94b650e991210215",
      "text": "We chose one specific publication as our test case, a Joshua favorite but now retired blog, Programming in the Twenty-First Century. [https://prog21.dadgum.com/archives.html site]"
    },
    {
      "type": "paragraph",
      "id": "c9b893db1f78f00e",
      "text": "We chose also to work in small increments creating new pages for each experiment. We are looking for a process similar to test-driven design where the history we leave behind remains executable as a supplement to the history we leave in source-code control. [https://github.com/joshuabenuck/seran-prog21 github]"
    },
    {
      "type": "paragraph",
      "id": "9e70a382b9038109",
      "text": "Our source was in html  so we would have to read at least the subset used in the blog, now a static corpus. We begin by separating original content from boilerplate expanded from the blog's template. Div c1 and c2 stand for columns one and two."
    },
    {
      "type": "paragraph",
      "id": "1eaef50c1521c8fd",
      "text": "We wrote a fit-for-purpose html parser that first separated tags from non-tags, then reassembled these into a tree based on distinguishing open from close tags. From this we could search for c1 and then p and pre tags within it."
    },
    {
      "type": "paragraph",
      "id": "61bbf7d0027257c3",
      "text": "See [[Static Types for Parsers]]"
    },
    {
      "type": "paragraph",
      "id": "45752a2b99443659",
      "text": "We created a second metasite using a top-down approach guided by type declarations for the parts we felt we now understood. These we implemented with proven code borrowed from the first site."
    },
    {
      "type": "paragraph",
      "id": "33d717bf8d96f827",
      "text": "One question arose immediately: when would the transformation happen? We chose early, in the init, creating a brief pause each time the server started. "
    },
    {
      "type": "paragraph",
      "id": "08c6a820f342a547",
      "text": "Almost as an after thought we added a table of contents. We were converting pages asynchronously and in no particular order. We extended one type with the post number extracted from the source file name to sequence our list of titles."
    },
    {
      "type": "paragraph",
      "id": "251033cb2b7507fb",
      "text": "The original author's titles read more like headlines which made for a hollow list of contents. We enriched this list by picking the first paragraph from each translated page, the synopsis in wiki lingo, and add up to 160 characters of this to each page title. Now we had a concise blog history."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Content Transformation",
        "story": []
      },
      "date": 1585843583293
    },
    {
      "item": {
        "type": "factory",
        "id": "c8a8d84bb7f4c47f"
      },
      "id": "c8a8d84bb7f4c47f",
      "type": "add",
      "date": 1585844278799
    },
    {
      "type": "edit",
      "id": "c8a8d84bb7f4c47f",
      "item": {
        "type": "paragraph",
        "id": "c8a8d84bb7f4c47f",
        "text": "We've written a number of one-off content translators that usually involve adapting old scripts to new circumstances. In a recent conversion we found making two sites useful where the second site records the difficulties and solutions used to produce the first. This replaces console.log with hypertext."
      },
      "date": 1585844495071
    },
    {
      "type": "add",
      "id": "5ea0af4ad54ebceb",
      "item": {
        "type": "paragraph",
        "id": "5ea0af4ad54ebceb",
        "text": "We've written many times about various import processes, some real, others imagined."
      },
      "after": "c8a8d84bb7f4c47f",
      "date": 1585844548558
    },
    {
      "type": "add",
      "id": "a7a694ef34d58a92",
      "item": {
        "type": "paragraph",
        "id": "a7a694ef34d58a92",
        "text": "[[Import Annotations]]"
      },
      "after": "5ea0af4ad54ebceb",
      "date": 1585844580559
    },
    {
      "type": "add",
      "id": "8e56c74b1818d5f3",
      "item": {
        "type": "paragraph",
        "id": "8e56c74b1818d5f3",
        "text": "[[Round Trip Import]]"
      },
      "after": "a7a694ef34d58a92",
      "date": 1585844598778
    },
    {
      "type": "add",
      "id": "cfbadc14cd4414f7",
      "item": {
        "type": "paragraph",
        "id": "cfbadc14cd4414f7",
        "text": "[[Import, Quotation and Reference]]"
      },
      "after": "8e56c74b1818d5f3",
      "date": 1585844635920
    },
    {
      "type": "add",
      "id": "9c9a3cab74dc41ae",
      "item": {
        "type": "paragraph",
        "id": "9c9a3cab74dc41ae",
        "text": "[[Import Documents]]"
      },
      "after": "cfbadc14cd4414f7",
      "date": 1585844809156
    },
    {
      "type": "add",
      "id": "a509429ca35cb29f",
      "item": {
        "type": "paragraph",
        "id": "a509429ca35cb29f",
        "text": "See [[Making Growing Regions Wiki]]"
      },
      "after": "c8a8d84bb7f4c47f",
      "date": 1585845639135
    },
    {
      "type": "add",
      "id": "94b650e991210215",
      "item": {
        "type": "paragraph",
        "id": "94b650e991210215",
        "text": "We chose one specific publication as our test case, a now retired blog, Programming in the 21st Century. [https://prog21.dadgum.com/archives.html site]"
      },
      "after": "9c9a3cab74dc41ae",
      "date": 1585845879872
    },
    {
      "type": "edit",
      "id": "94b650e991210215",
      "item": {
        "type": "paragraph",
        "id": "94b650e991210215",
        "text": "We chose one specific publication as our test case, a now retired blog, Programming in the Twenty-First Century. [https://prog21.dadgum.com/archives.html site]"
      },
      "date": 1585845915266
    },
    {
      "type": "edit",
      "id": "94b650e991210215",
      "item": {
        "type": "paragraph",
        "id": "94b650e991210215",
        "text": "We chose one specific publication as our test case, a Joshua favorite but now retired blog, Programming in the Twenty-First Century. [https://prog21.dadgum.com/archives.html site]"
      },
      "date": 1585846030106
    },
    {
      "type": "add",
      "id": "c9b893db1f78f00e",
      "item": {
        "type": "paragraph",
        "id": "c9b893db1f78f00e",
        "text": "We chose also to work in small increments creating new pages for each experiment. We are looking for a process similar to test-driven design where the history we leave behind remains executable as a supplement to the history we leave in source-code control."
      },
      "after": "94b650e991210215",
      "date": 1585846181570
    },
    {
      "type": "edit",
      "id": "c9b893db1f78f00e",
      "item": {
        "type": "paragraph",
        "id": "c9b893db1f78f00e",
        "text": "We chose also to work in small increments creating new pages for each experiment. We are looking for a process similar to test-driven design where the history we leave behind remains executable as a supplement to the history we leave in source-code control. [https://github.com/joshuabenuck/seran-prog21 github]"
      },
      "date": 1585846212246
    },
    {
      "type": "add",
      "id": "9e70a382b9038109",
      "item": {
        "type": "paragraph",
        "id": "9e70a382b9038109",
        "text": "Our source was in html  so we would have to read at least the subset used in the blog, now a static corpus. We begin by separating original content from boilerplate expanded from the blog's template. Div c1 and c2 stand for columns one and two."
      },
      "after": "c9b893db1f78f00e",
      "date": 1585846501155
    },
    {
      "type": "add",
      "id": "1eaef50c1521c8fd",
      "item": {
        "type": "paragraph",
        "id": "1eaef50c1521c8fd",
        "text": "We wrote a fit-for-purpose html parser that first separated tags from non-tags, then reassembled these into a tree based on distinguishing open from close tags. From this we could search for c1 and then p and pre tags within it."
      },
      "after": "9e70a382b9038109",
      "date": 1585846724766
    },
    {
      "type": "add",
      "id": "6a3fabd867514c7c",
      "item": {
        "type": "paragraph",
        "id": "6a3fabd867514c7c",
        "text": "We deviated from our intended method by writing the parser using deno to evaluate a script full of console.log, rather than using wiki pages for the same purpose. The typescript type unions of tag|text and tree|text proved challenging. "
      },
      "after": "1eaef50c1521c8fd",
      "date": 1585846889689
    },
    {
      "type": "add",
      "id": "4033a00fb5971add",
      "item": {
        "type": "paragraph",
        "id": "4033a00fb5971add",
        "text": "See where I wrote more about this but can't find it yet"
      },
      "after": "a509429ca35cb29f",
      "date": 1585848354870
    },
    {
      "type": "edit",
      "id": "4033a00fb5971add",
      "item": {
        "type": "paragraph",
        "id": "4033a00fb5971add",
        "text": "See where I wrote more about this."
      },
      "date": 1585848366510
    },
    {
      "type": "edit",
      "id": "5ea0af4ad54ebceb",
      "item": {
        "type": "paragraph",
        "id": "5ea0af4ad54ebceb",
        "text": "We've written many times about various import processes, some real, others imagined, often with shared code."
      },
      "date": 1585848391823
    },
    {
      "type": "add",
      "id": "61bbf7d0027257c3",
      "item": {
        "type": "paragraph",
        "id": "61bbf7d0027257c3",
        "text": "See [[Static Types for Parsers]]"
      },
      "after": "1eaef50c1521c8fd",
      "date": 1585848497321
    },
    {
      "id": "6a3fabd867514c7c",
      "type": "remove",
      "date": 1585848668140
    },
    {
      "id": "9c9a3cab74dc41ae",
      "type": "move",
      "order": [
        "c8a8d84bb7f4c47f",
        "a509429ca35cb29f",
        "4033a00fb5971add",
        "5ea0af4ad54ebceb",
        "9c9a3cab74dc41ae",
        "a7a694ef34d58a92",
        "8e56c74b1818d5f3",
        "cfbadc14cd4414f7",
        "94b650e991210215",
        "c9b893db1f78f00e",
        "9e70a382b9038109",
        "1eaef50c1521c8fd",
        "61bbf7d0027257c3"
      ],
      "date": 1585915242737
    },
    {
      "type": "edit",
      "id": "9c9a3cab74dc41ae",
      "item": {
        "type": "paragraph",
        "id": "9c9a3cab74dc41ae",
        "text": "[[Import Documents]] — our earliest examples"
      },
      "date": 1585915660343
    },
    {
      "type": "edit",
      "id": "a7a694ef34d58a92",
      "item": {
        "type": "paragraph",
        "id": "a7a694ef34d58a92",
        "text": "[[Import Annotations]] — provenance of imported data "
      },
      "date": 1585915766079
    },
    {
      "type": "edit",
      "id": "8e56c74b1818d5f3",
      "item": {
        "type": "paragraph",
        "id": "8e56c74b1818d5f3",
        "text": "[[Round Trip Import]] — using hidden item properties"
      },
      "date": 1585915894363
    },
    {
      "type": "edit",
      "id": "cfbadc14cd4414f7",
      "item": {
        "type": "paragraph",
        "id": "cfbadc14cd4414f7",
        "text": "[[Import, Quotation and Reference]] — tracking copyrights"
      },
      "date": 1585915939232
    },
    {
      "type": "edit",
      "id": "9c9a3cab74dc41ae",
      "item": {
        "type": "paragraph",
        "id": "9c9a3cab74dc41ae",
        "text": "[[Import Documents]] — earliest examples"
      },
      "date": 1585915960779
    },
    {
      "type": "edit",
      "id": "9c9a3cab74dc41ae",
      "item": {
        "type": "paragraph",
        "id": "9c9a3cab74dc41ae",
        "text": "[[Import Documents]] — earliest examples explained"
      },
      "date": 1585915973363
    },
    {
      "type": "add",
      "id": "45752a2b99443659",
      "item": {
        "type": "paragraph",
        "id": "45752a2b99443659",
        "text": "We created a second metasite using a top-down approach guided by type declarations for the parts we felt we now understood and borrowed code from the first site for implementation."
      },
      "after": "61bbf7d0027257c3",
      "date": 1585916588927
    },
    {
      "type": "add",
      "id": "33d717bf8d96f827",
      "item": {
        "type": "paragraph",
        "id": "33d717bf8d96f827",
        "text": "One question arose immediately: when would the transformation happen? We chose early, in the init, creating a brief pause when the server started. "
      },
      "after": "45752a2b99443659",
      "date": 1585916794594
    },
    {
      "type": "add",
      "id": "08c6a820f342a547",
      "item": {
        "type": "paragraph",
        "id": "08c6a820f342a547",
        "text": "Almost as an after thought we added a table of contents. We were converting pages asynchronously and in no particular order. We extended one type with the post number extracted from the source file name to order our list of titles."
      },
      "after": "33d717bf8d96f827",
      "date": 1585917107937
    },
    {
      "type": "edit",
      "id": "08c6a820f342a547",
      "item": {
        "type": "paragraph",
        "id": "08c6a820f342a547",
        "text": "Almost as an after thought we added a table of contents. We were converting pages asynchronously and in no particular order. We extended one type with the post number extracted from the source file name to sequence our list of titles."
      },
      "date": 1585917173818
    },
    {
      "type": "add",
      "id": "251033cb2b7507fb",
      "item": {
        "type": "paragraph",
        "id": "251033cb2b7507fb",
        "text": "The original author's titles read more like headlines which made for a hollow list of contents. We enriched this list by picking the first paragraph from each translated page, the synopsis in wiki lingo, and add up to 160 characters of that to the page titles, outside of the hyperlink, much like our own links above. This gave us a concise whole history of the blog."
      },
      "after": "08c6a820f342a547",
      "date": 1585917745694
    },
    {
      "type": "edit",
      "id": "33d717bf8d96f827",
      "item": {
        "type": "paragraph",
        "id": "33d717bf8d96f827",
        "text": "One question arose immediately: when would the transformation happen? We chose early, in the init, creating a brief pause each time the server started. "
      },
      "date": 1585917783603
    },
    {
      "type": "edit",
      "id": "45752a2b99443659",
      "item": {
        "type": "paragraph",
        "id": "45752a2b99443659",
        "text": "We created a second metasite using a top-down approach guided by type declarations for the parts we felt we now understood. These we implemented with borrowed code from the first site."
      },
      "date": 1585917864808
    },
    {
      "type": "edit",
      "id": "45752a2b99443659",
      "item": {
        "type": "paragraph",
        "id": "45752a2b99443659",
        "text": "We created a second metasite using a top-down approach guided by type declarations for the parts we felt we now understood. These we implemented with code borrowed from the first site."
      },
      "date": 1585917886687
    },
    {
      "type": "edit",
      "id": "45752a2b99443659",
      "item": {
        "type": "paragraph",
        "id": "45752a2b99443659",
        "text": "We created a second metasite using a top-down approach guided by type declarations for the parts we felt we now understood. These we implemented with proven code borrowed from the first site."
      },
      "date": 1585917907306
    },
    {
      "type": "edit",
      "id": "251033cb2b7507fb",
      "item": {
        "type": "paragraph",
        "id": "251033cb2b7507fb",
        "text": "The original author's titles read more like headlines which made for a hollow list of contents. We enriched this list by picking the first paragraph from each translated page, the synopsis in wiki lingo, and add up to 160 characters of this to each page title. Now we had a concise history of the blog."
      },
      "date": 1585918058525
    },
    {
      "type": "edit",
      "id": "251033cb2b7507fb",
      "item": {
        "type": "paragraph",
        "id": "251033cb2b7507fb",
        "text": "The original author's titles read more like headlines which made for a hollow list of contents. We enriched this list by picking the first paragraph from each translated page, the synopsis in wiki lingo, and add up to 160 characters of this to each page title. Now we had a concise blog history."
      },
      "date": 1585918072279
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1631788187727
    }
  ]
}