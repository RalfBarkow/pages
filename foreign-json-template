{
  "title": "Foreign Json Template",
  "story": [
    {
      "type": "paragraph",
      "id": "b5ee79c2ab6e0270",
      "text": "Describe here the diagramming tool to be translated and how one can get a json formatted description out of it."
    },
    {
      "type": "frame",
      "id": "d28867297e3b4f1f",
      "text": "//wiki.ralfbarkow.ch/assets/scripts/import-foreign-json.html\nHEIGHT 240"
    },
    {
      "type": "markdown",
      "id": "dcf63055151a61af",
      "text": "Add code here to extract nodes and relations from _json_ and add them to _graph_. Remember node ids in _nids_."
    },
    {
      "type": "code",
      "id": "c552922cec666ac0",
      "text": "nids.d = graph.addNode('Man',{name:'Pat'})\nnids.m = graph.addNode('Woman',{name:'Jane'})\nnids.c = graph.addNode('Child',{name:'Ward'})"
    },
    {
      "type": "code",
      "id": "525c4b38800ac571",
      "text": "graph.addRel('Mother',nids.m,nids.c)\ngraph.addRel('Father',nids.d,nids.c)"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Foreign Json Template",
        "story": []
      },
      "date": 1667507710485
    },
    {
      "item": {
        "type": "factory",
        "id": "b5ee79c2ab6e0270"
      },
      "id": "b5ee79c2ab6e0270",
      "type": "add",
      "date": 1667507759041
    },
    {
      "type": "edit",
      "id": "b5ee79c2ab6e0270",
      "item": {
        "type": "paragraph",
        "id": "b5ee79c2ab6e0270",
        "text": "Describe here the graph diagramming tool and how one can get a json formatted description out of it."
      },
      "date": 1667507864862
    },
    {
      "id": "d28867297e3b4f1f",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "d28867297e3b4f1f",
        "text": "http://hsc.fed.wiki/assets/scripts/import-foreign-json.html\nHEIGHT 230"
      },
      "after": "b5ee79c2ab6e0270",
      "attribution": {
        "page": "Import Miro Graphs"
      },
      "date": 1667507870002
    },
    {
      "item": {
        "type": "factory",
        "id": "dcf63055151a61af"
      },
      "id": "dcf63055151a61af",
      "type": "add",
      "after": "d28867297e3b4f1f",
      "date": 1667508076642
    },
    {
      "type": "edit",
      "id": "dcf63055151a61af",
      "item": {
        "type": "paragraph",
        "id": "dcf63055151a61af",
        "text": "Add code here to extract nodes and relations from the json and add them to the graph."
      },
      "date": 1667508125511
    },
    {
      "id": "c552922cec666ac0",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "export async function convert(json,graph) {\n\nconst card = e =>\n  ['card','sticky_note'].includes(e.type)\nconst connector = e => \n  e.type == 'connector'\nconst text = t => t ? t\n  .replaceAll(/<.*?>/g,'')\n  .replaceAll(/[^\\w ]/g,'')\n  .slice(0,26) : 'empty'\n\nconst nids = {}\n\njson.filter(card).forEach(e => {\n  const name = text(e.title || e.content)\n  nids[e.id] = graph.addNode(e.type,{name})\n})\n\njson.filter(connector).forEach(c => {\n  const start = c.start?.item\n  const end = c.end?.item\n  if(nids[start]&&nids[end])\n    graph.addRel(' ',nids[start],nids[end])\n})\n\n}"
      },
      "after": "dcf63055151a61af",
      "attribution": {
        "page": "Import Miro Graphs"
      },
      "date": 1667508158609
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "export async function convert(json,graph) {\n\nconst nids = {}\n\n\n\n}"
      },
      "date": 1667508251204
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "export async function convert(json,graph) {\n\nconst nids = {}\nnids.m = graph.addNode('Mom',{name:'Jane'})\nnids.d = graph.addNode('Dad',{name:'Pat'})\nnids.c = graph.addNode('Child',{name:'Ward'})\n\n\n}"
      },
      "date": 1667508427025
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "export async function convert(json,graph) {\n\nconst nids = {}\nnids.m = graph.addNode('Woman',{name:'Jane'})\nnids.d = graph.addNode('Man',{name:'Pat'})\nnids.c = graph.addNode('Child',{name:'Ward'})\n\ngraph.addRel('Mother',nids.m,nids.c)\ngraph.addRel('Father',nids.d,nids.c)\n\n\n}"
      },
      "date": 1667508633229
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "nids.m = graph.addNode('Woman',{name:'Jane'})\nnids.d = graph.addNode('Man',{name:'Pat'})\nnids.c = graph.addNode('Child',{name:'Ward'})\n\ngraph.addRel('Mother',nids.m,nids.c)\ngraph.addRel('Father',nids.d,nids.c)\n"
      },
      "date": 1667509490620
    },
    {
      "type": "edit",
      "id": "dcf63055151a61af",
      "item": {
        "type": "paragraph",
        "id": "dcf63055151a61af",
        "text": "Add code here to extract nodes and relations from the json and add them to the graph. Use nids to remember node ids."
      },
      "date": 1667509580585
    },
    {
      "type": "edit",
      "id": "b5ee79c2ab6e0270",
      "item": {
        "type": "paragraph",
        "id": "b5ee79c2ab6e0270",
        "text": "Describe here the diagramming tool to be translated and how one can get a json formatted description out of it."
      },
      "date": 1667509657034
    },
    {
      "type": "edit",
      "id": "dcf63055151a61af",
      "item": {
        "type": "paragraph",
        "id": "dcf63055151a61af",
        "text": "Add code here to extract nodes and relations from json and add them to graph. Remember node ids in nids."
      },
      "date": 1667509761811
    },
    {
      "type": "edit",
      "id": "dcf63055151a61af",
      "item": {
        "type": "markdown",
        "id": "dcf63055151a61af",
        "text": "Add code here to extract nodes and relations from _json_ and add them to _graph_. Remember node ids in _nids_."
      },
      "date": 1667509805824
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "nids.m = graph.addNode('Woman',{name:'Jane'})\nnids.d = graph.addNode('Man',{name:'Pat'})\nnids.c = graph.addNode('Child',{name:'Ward'})"
      },
      "date": 1667509862297
    },
    {
      "item": {
        "type": "factory",
        "id": "525c4b38800ac571"
      },
      "id": "525c4b38800ac571",
      "type": "add",
      "after": "c552922cec666ac0",
      "date": 1667509864291
    },
    {
      "type": "edit",
      "id": "525c4b38800ac571",
      "item": {
        "type": "code",
        "id": "525c4b38800ac571",
        "text": "graph.addRel('Mother',nids.m,nids.c)\ngraph.addRel('Father',nids.d,nids.c)"
      },
      "date": 1667509874863
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "nids.d = graph.addNode('Man',{name:'Pat'})\nnids.m = graph.addNode('Woman',{name:'Jane'})\nnids.c = graph.addNode('Child',{name:'Ward'})"
      },
      "date": 1667509926904
    },
    {
      "type": "edit",
      "id": "d28867297e3b4f1f",
      "item": {
        "type": "frame",
        "id": "d28867297e3b4f1f",
        "text": "http://hsc.fed.wiki/assets/scripts/import-foreign-json.html\nHEIGHT 240"
      },
      "date": 1667512109123
    },
    {
      "type": "fork",
      "site": "hsc.fed.wiki",
      "date": 1667513718850
    },
    {
      "type": "edit",
      "id": "d28867297e3b4f1f",
      "item": {
        "type": "frame",
        "id": "d28867297e3b4f1f",
        "text": "//wiki.ralfbarkow.ch/assets/scripts/import-foreign-json.html\nHEIGHT 240"
      },
      "date": 1667513732821
    }
  ]
}