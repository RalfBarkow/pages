{
  "title": "equal",
  "story": [
    {
      "type": "markdown",
      "id": "669ef196c8e2ff61",
      "text": "# What, exactly, does `#=` mean?"
    },
    {
      "type": "markdown",
      "id": "b936c6ef0011b234",
      "text": "Anyone know of a book that goes in depth explaining `#=`? [[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean. [https://lists.pharo.org/empathy/thread/KFBNCLHWB45AYQR6NNT4P5MWEK5KMB5U thread]\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
    },
    {
      "type": "pagefold",
      "id": "c699400d5a25042a",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "b8b01ca1cca5f7cb",
      "site": "wiki.ralfbarkow.ch",
      "slug": "overriding-equality",
      "title": "Overriding Equality",
      "text": "Identity is such a fundamental Smalltalk notion that if you override the `==` method Smalltalk ignores your override. By contrast, you can override the `=` method at will. "
    },
    {
      "type": "reference",
      "id": "cfdaa06452fb2e03",
      "site": "wiki.ralfbarkow.ch",
      "slug": "the-equal-sign",
      "title": "The Equal Sign",
      "text": "If we begin with nothing, where does the equal sign = come from?"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "equal",
        "story": []
      },
      "date": 1661326455086
    },
    {
      "id": "b936c6ef0011b234",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`?\n\nI've always wondered what \"[[equal]]\" is supposed to mean.\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326473689
    },
    {
      "item": {
        "type": "factory",
        "id": "b8b01ca1cca5f7cb"
      },
      "id": "b8b01ca1cca5f7cb",
      "type": "add",
      "after": "b936c6ef0011b234",
      "date": 1661326487447
    },
    {
      "type": "edit",
      "id": "b8b01ca1cca5f7cb",
      "item": {
        "type": "reference",
        "id": "b8b01ca1cca5f7cb",
        "site": "wiki.ralfbarkow.ch",
        "slug": "overriding-equality",
        "title": "Overriding Equality",
        "text": "Identity is such a fundamental Smalltalk notion that if you override the `==` method Smalltalk ignores your override. By contrast, you can override the `=` method at will. "
      },
      "date": 1661326489730
    },
    {
      "type": "edit",
      "id": "b936c6ef0011b234",
      "item": {
        "type": "paragraph",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`?\n\n[[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean.\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326535310
    },
    {
      "item": {
        "type": "factory",
        "id": "669ef196c8e2ff61"
      },
      "id": "669ef196c8e2ff61",
      "type": "add",
      "after": "b8b01ca1cca5f7cb",
      "date": 1661326556332
    },
    {
      "id": "669ef196c8e2ff61",
      "type": "move",
      "order": [
        "669ef196c8e2ff61",
        "b936c6ef0011b234",
        "b8b01ca1cca5f7cb"
      ],
      "date": 1661326558287
    },
    {
      "type": "edit",
      "id": "669ef196c8e2ff61",
      "item": {
        "type": "paragraph",
        "id": "669ef196c8e2ff61",
        "text": "# What, exactly, does `#=` mean?"
      },
      "date": 1661326561011
    },
    {
      "type": "edit",
      "id": "669ef196c8e2ff61",
      "item": {
        "type": "markdown",
        "id": "669ef196c8e2ff61",
        "text": "# What, exactly, does `#=` mean?"
      },
      "date": 1661326563545
    },
    {
      "type": "edit",
      "id": "b936c6ef0011b234",
      "item": {
        "type": "markdown",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`?\n\n[[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean.\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326572527
    },
    {
      "type": "edit",
      "id": "b936c6ef0011b234",
      "item": {
        "type": "markdown",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`? [https://lists.pharo.org/empathy/thread/KFBNCLHWB45AYQR6NNT4P5MWEK5KMB5U thread]\n\n[[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean.\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326820889
    },
    {
      "type": "edit",
      "id": "b936c6ef0011b234",
      "item": {
        "type": "markdown",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`? \n\n[[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean. [https://lists.pharo.org/empathy/thread/KFBNCLHWB45AYQR6NNT4P5MWEK5KMB5U thread]\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326859806
    },
    {
      "type": "edit",
      "id": "b936c6ef0011b234",
      "item": {
        "type": "markdown",
        "id": "b936c6ef0011b234",
        "text": "Anyone know of a book that goes in depth explaining `#=`? [[Sean DeNigris]] has always wondered what \"[[equal]]\" is supposed to mean. [https://lists.pharo.org/empathy/thread/KFBNCLHWB45AYQR6NNT4P5MWEK5KMB5U thread]\n\nFor example, if I have two objects representing the same person, but one has their webpage cached as state, they represent the same entity, and are interchangeable in many contexts, but also have a difference that may be important in other contexts.\n\nIs “equal” whatever you say it is in your domain, or is it a Smalltalk object system concept? If the latter, what is the exact expectation?\n"
      },
      "date": 1661326873989
    },
    {
      "item": {
        "type": "factory",
        "id": "c699400d5a25042a"
      },
      "id": "c699400d5a25042a",
      "type": "add",
      "after": "b8b01ca1cca5f7cb",
      "date": 1661326893115
    },
    {
      "id": "c699400d5a25042a",
      "type": "move",
      "order": [
        "669ef196c8e2ff61",
        "b936c6ef0011b234",
        "c699400d5a25042a",
        "b8b01ca1cca5f7cb"
      ],
      "date": 1661326895915
    },
    {
      "type": "edit",
      "id": "c699400d5a25042a",
      "item": {
        "type": "pagefold",
        "id": "c699400d5a25042a",
        "text": "~"
      },
      "date": 1661326899371
    },
    {
      "item": {
        "type": "factory",
        "id": "cfdaa06452fb2e03"
      },
      "id": "cfdaa06452fb2e03",
      "type": "add",
      "after": "b8b01ca1cca5f7cb",
      "date": 1661326907194
    },
    {
      "type": "edit",
      "id": "cfdaa06452fb2e03",
      "item": {
        "type": "reference",
        "id": "cfdaa06452fb2e03",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-equal-sign",
        "title": "The Equal Sign",
        "text": "If we begin with nothing, where does the equal sign = come from?"
      },
      "date": 1661326910207
    }
  ]
}