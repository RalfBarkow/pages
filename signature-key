{
  "title": "Signature Key",
  "story": [
    {
      "type": "markdown",
      "id": "db6c7c9405a09989",
      "text": "For OAuth the [[Signature Key]] is made up of two parts, your consumer secret, and your token secret (for whichever token you are using at the time). \n"
    },
    {
      "type": "code",
      "id": "f434118bc0cdaa06",
      "text": "Key = Consumer Secret + “&” + Token Secret"
    },
    {
      "type": "markdown",
      "id": "b123d0cd18def044",
      "text": "As this is the first stage you have neither, so your token secret is simply an empty string.\n"
    },
    {
      "type": "code",
      "id": "a1ebd8e56c4af621",
      "text": "Signature Key = “1a3c208e172d3edc&”"
    },
    {
      "type": "markdown",
      "id": "ee008bf040b13301",
      "text": "# OAuth Parameter Encoding\nThis is not your normal encoding. Let's call it [[Percent Encoding]]\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Signature Key",
        "story": []
      },
      "date": 1627122240836
    },
    {
      "item": {
        "type": "factory",
        "id": "db6c7c9405a09989"
      },
      "id": "db6c7c9405a09989",
      "type": "add",
      "date": 1627122242693
    },
    {
      "type": "edit",
      "id": "db6c7c9405a09989",
      "item": {
        "type": "markdown",
        "id": "db6c7c9405a09989",
        "text": "For OAuth the [[Signature Key]] is made up of two parts, your consumer secret, and your token secret (for whichever token you are using at the time). As this is the first stage you have neither, so your token secret is simply an empty string.\n"
      },
      "date": 1627122244633
    },
    {
      "id": "f434118bc0cdaa06",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f434118bc0cdaa06",
        "text": "Key = Consumer Secret + “&” + Token Secret\n= “1a3c208e172d3edc&”\n"
      },
      "after": "db6c7c9405a09989",
      "date": 1627122253443
    },
    {
      "type": "edit",
      "id": "db6c7c9405a09989",
      "item": {
        "type": "markdown",
        "id": "db6c7c9405a09989",
        "text": "For OAuth the [[Signature Key]] is made up of two parts, your consumer secret, and your token secret (for whichever token you are using at the time). \n"
      },
      "date": 1627122261719
    },
    {
      "type": "add",
      "id": "b123d0cd18def044",
      "item": {
        "type": "markdown",
        "id": "b123d0cd18def044",
        "text": "As this is the first stage you have neither, so your token secret is simply an empty string.\n"
      },
      "after": "db6c7c9405a09989",
      "date": 1627122263338
    },
    {
      "item": {
        "type": "factory",
        "id": "ee008bf040b13301"
      },
      "id": "ee008bf040b13301",
      "type": "add",
      "after": "f434118bc0cdaa06",
      "date": 1627122475157
    },
    {
      "type": "edit",
      "id": "ee008bf040b13301",
      "item": {
        "type": "markdown",
        "id": "ee008bf040b13301",
        "text": "OAuth Parameter Encoding – Not your normal encoding\nHowever the key to this part is the encoding. OAuth uses an encoding which is very similar to URL encoding (i.e. replacing parts of a URL string with %NN where NN is the hex number for that character). However it is different, in that more things are encoded when using OAuth encoding (e.g. spaces can be encoded as a “+” symbol in URL encoding, but in OAuth must be encoded as “%20”.\n\nOAuth encoding only allows letters, numbers and the following 4 punctuation marks: “_”, “-“, “.” and “~”. All other characters must be encoded.\n\nYou will likely not notice the difference until you come to call methods that include things like title etc, as most parameters will not contain data that is encoded differently with the above compared to standard url encoding.\n\nA little post I found covering some of the differences is here: http://www.marcworrell.com/article-2943-en.html"
      },
      "date": 1627122477353
    },
    {
      "type": "edit",
      "id": "f434118bc0cdaa06",
      "item": {
        "type": "code",
        "id": "f434118bc0cdaa06",
        "text": "Key = Consumer Secret + “&” + Token Secret"
      },
      "date": 1627122514318
    },
    {
      "item": {
        "type": "factory",
        "id": "a1ebd8e56c4af621"
      },
      "id": "a1ebd8e56c4af621",
      "type": "add",
      "after": "ee008bf040b13301",
      "date": 1627122516045
    },
    {
      "type": "edit",
      "id": "a1ebd8e56c4af621",
      "item": {
        "type": "code",
        "id": "a1ebd8e56c4af621",
        "text": "Signature Key = “1a3c208e172d3edc&”"
      },
      "date": 1627122519197
    },
    {
      "id": "a1ebd8e56c4af621",
      "type": "move",
      "order": [
        "db6c7c9405a09989",
        "b123d0cd18def044",
        "f434118bc0cdaa06",
        "a1ebd8e56c4af621",
        "ee008bf040b13301"
      ],
      "date": 1627122523595
    },
    {
      "id": "f434118bc0cdaa06",
      "type": "move",
      "order": [
        "db6c7c9405a09989",
        "f434118bc0cdaa06",
        "b123d0cd18def044",
        "a1ebd8e56c4af621",
        "ee008bf040b13301"
      ],
      "date": 1627122525281
    },
    {
      "type": "edit",
      "id": "ee008bf040b13301",
      "item": {
        "type": "markdown",
        "id": "ee008bf040b13301",
        "text": "# OAuth Parameter Encoding\nThis is not your normal encoding. Let's call it [[Percent Encoding]]\n"
      },
      "date": 1627122579206
    },
    {
      "type": "add",
      "id": "307500ea28779d82",
      "item": {
        "type": "markdown",
        "id": "307500ea28779d82",
        "text": "However the key to this part is the encoding. OAuth uses an encoding which is very similar to URL encoding (i.e. replacing parts of a URL string with %NN where NN is the hex number for that character). However it is different, in that more things are encoded when using OAuth encoding (e.g. spaces can be encoded as a “+” symbol in URL encoding, but in OAuth must be encoded as “%20”.\n\nOAuth encoding only allows letters, numbers and the following 4 punctuation marks: “_”, “-“, “.” and “~”. All other characters must be encoded.\n\nYou will likely not notice the difference until you come to call methods that include things like title etc, as most parameters will not contain data that is encoded differently with the above compared to standard url encoding.\n\nA little post I found covering some of the differences is here: http://www.marcworrell.com/article-2943-en.html"
      },
      "after": "ee008bf040b13301",
      "date": 1627122579767
    },
    {
      "id": "307500ea28779d82",
      "type": "remove",
      "date": 1627122926592
    },
    {
      "item": {
        "type": "factory",
        "id": "826fbdf261bf4435"
      },
      "id": "826fbdf261bf4435",
      "type": "add",
      "after": "ee008bf040b13301",
      "date": 1627123054287
    },
    {
      "id": "826fbdf261bf4435",
      "type": "remove",
      "date": 1627123056341
    },
    {
      "item": {
        "type": "factory",
        "id": "aba61505140c4137"
      },
      "id": "aba61505140c4137",
      "type": "add",
      "after": "ee008bf040b13301",
      "date": 1627123081200
    },
    {
      "id": "aba61505140c4137",
      "type": "remove",
      "date": 1627123083237
    },
    {
      "item": {
        "type": "factory",
        "id": "0f0a3837bc4f03e8"
      },
      "id": "0f0a3837bc4f03e8",
      "type": "add",
      "after": "ee008bf040b13301",
      "date": 1627123130385
    },
    {
      "id": "0f0a3837bc4f03e8",
      "type": "remove",
      "date": 1627123132346
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1629557998280
    }
  ]
}