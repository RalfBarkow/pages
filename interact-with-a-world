{
  "title": "Interact with a World",
  "story": [
    {
      "type": "paragraph",
      "id": "0d25c504743c9713",
      "text": "We cannot directly interact with a world inside a [[Portal]] currently, because of the way iframe event handling works. "
    },
    {
      "type": "paragraph",
      "id": "d102a658c76759dc",
      "text": "We could facilitate it via the outer shell [⇒  [[Meta Shell]]] which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
    },
    {
      "type": "paragraph",
      "id": "eacec0be3e1efe29",
      "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. "
    },
    {
      "type": "paragraph",
      "id": "448ab107144ebc96",
      "text": "From [[Croquet]]'s POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \n"
    },
    {
      "type": "paragraph",
      "id": "d66b527683b7e888",
      "text": "Similarly with messaging between iframes via the shell: by default we will keep that to a minimum.  If worlds were volunteering too much information by default that would create privacy issues, and if the messages they were accepting would be too generic that would open big security holes (worst case scenario would be that one frame could get another frame to execute some arbitrary code, which would completely obliterate the browser's iframe sandboxing guarantees).\n"
    },
    {
      "type": "paragraph",
      "id": "0cddd3d7a14dafbb",
      "text": "Your own source code however will be able to define what messages get sent and processed, the shell should be an impartial message broker, just like our reflectors are impartial. So you could define whatever messaging you need between your own worlds, including implementing \"action at a distance.\" But the base system should be as secure and privacy-conscious as possible, by default. [https://discord.com/channels/694586717247635488/966071402526543924/983772931651948554 discord]"
    },
    {
      "type": "paragraph",
      "id": "50e0e1905a30e8b7",
      "text": "[…] when you walk to a different server it gets a \"canonical\" argument but the shell still runs on the original server. [https://discord.com/channels/694586717247635488/968615641248571422/983423457490522123 discord]"
    },
    {
      "type": "pagefold",
      "id": "c23411cd5e47b233",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "20af32087e147349",
      "text": "⇒  [[iframe]]"
    },
    {
      "type": "paragraph",
      "id": "29ec4aee02373f3f",
      "text": "\"iframe event handling\". [https://duckduckgo.com/?q=%22iframe+event+handling%22&t=ffcm&atb=v342-1&ia=web duckduckgo], [https://www.google.com/search?q=%22iframe+event+handling%22&source=hp&ei=FJeYY_r0EqK-xc8P-q2FqAM&iflsig=AJiK0e8AAAAAY5ilJIxXkDxrJlSdHXc_Yqspljolw-H5&ved=0ahUKEwj6zqa68fb7AhUiX_EDHfpWATUQ4dUDCAc&uact=5&oq=%22iframe+event+handling%22&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHlDRAVjRAWDtBWgBcAB4AIABTogBTpIBATGYAQCgAQKgAQGwAQA&sclient=gws-wiz google]"
    },
    {
      "type": "markdown",
      "id": "ef64b68b4eb5a0f6",
      "text": "* Handling iFrame event in the parent web page. [https://stackoverflow.com/questions/18668541/handling-iframe-event-in-the-parent-web-page stackoverflow]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Interact with a World",
        "story": []
      },
      "date": 1670935866654
    },
    {
      "item": {
        "type": "factory",
        "id": "0d25c504743c9713"
      },
      "id": "0d25c504743c9713",
      "type": "add",
      "date": 1670935868299
    },
    {
      "type": "edit",
      "id": "0d25c504743c9713",
      "item": {
        "type": "paragraph",
        "id": "0d25c504743c9713",
        "text": "We cannot directly interact with a world inside a portal currently, because of the way iframe event handling works. We could facilitate it via the outer shell which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. "
      },
      "date": 1670935897006
    },
    {
      "type": "edit",
      "id": "0d25c504743c9713",
      "item": {
        "type": "paragraph",
        "id": "0d25c504743c9713",
        "text": "We cannot directly interact with a world inside a portal currently, because of the way iframe event handling works. We could facilitate it via the outer shell which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
      },
      "date": 1670935909421
    },
    {
      "item": {
        "type": "factory",
        "id": "eacec0be3e1efe29"
      },
      "id": "eacec0be3e1efe29",
      "type": "add",
      "after": "0d25c504743c9713",
      "date": 1670935935841
    },
    {
      "type": "edit",
      "id": "eacec0be3e1efe29",
      "item": {
        "type": "paragraph",
        "id": "eacec0be3e1efe29",
        "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. From Croquet's POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \nSimilarly with messaging between iframes via the shell: by default we will keep that to a minimum.  If worlds were volunteering too much information by default that would create privacy issues, and if the messages they were accepting would be too generic that would open big security holes (worst case scenario would be that one frame could get another frame to execute some arbitrary code, which would completely obliterate the browser's iframe sandboxing guarantees).\nYour own source code however will be able to define what messages get sent and processed, the shell should be an impartial message broker, just like our reflectors are impartial. So you could define whatever messaging you need between your own worlds, including implementing \"action at a distance.\" But the base system should be as secure and privacy-conscious as possible, by default. "
      },
      "date": 1670935939416
    },
    {
      "type": "edit",
      "id": "eacec0be3e1efe29",
      "item": {
        "type": "paragraph",
        "id": "eacec0be3e1efe29",
        "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. From Croquet's POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \nSimilarly with messaging between iframes via the shell: by default we will keep that to a minimum.  If worlds were volunteering too much information by default that would create privacy issues, and if the messages they were accepting would be too generic that would open big security holes (worst case scenario would be that one frame could get another frame to execute some arbitrary code, which would completely obliterate the browser's iframe sandboxing guarantees).\nYour own source code however will be able to define what messages get sent and processed, the shell should be an impartial message broker, just like our reflectors are impartial. So you could define whatever messaging you need between your own worlds, including implementing \"action at a distance.\" But the base system should be as secure and privacy-conscious as possible, by default. [https://discord.com/channels/694586717247635488/966071402526543924/983772931651948554 discord]"
      },
      "date": 1670935951233
    },
    {
      "item": {
        "type": "factory",
        "id": "50e0e1905a30e8b7"
      },
      "id": "50e0e1905a30e8b7",
      "type": "add",
      "after": "eacec0be3e1efe29",
      "date": 1670936048081
    },
    {
      "type": "edit",
      "id": "50e0e1905a30e8b7",
      "item": {
        "type": "paragraph",
        "id": "50e0e1905a30e8b7",
        "text": "[…] when you walk to a different server it gets a \"canonical\" argument but the shell still runs on the original server. "
      },
      "date": 1670936055620
    },
    {
      "type": "edit",
      "id": "50e0e1905a30e8b7",
      "item": {
        "type": "paragraph",
        "id": "50e0e1905a30e8b7",
        "text": "[…] when you walk to a different server it gets a \"canonical\" argument but the shell still runs on the original server. [https://discord.com/channels/694586717247635488/968615641248571422/983423457490522123 discord]"
      },
      "date": 1670936064819
    },
    {
      "item": {
        "type": "factory",
        "id": "c23411cd5e47b233"
      },
      "id": "c23411cd5e47b233",
      "type": "add",
      "after": "50e0e1905a30e8b7",
      "date": 1670944198423
    },
    {
      "type": "edit",
      "id": "c23411cd5e47b233",
      "item": {
        "type": "pagefold",
        "id": "c23411cd5e47b233",
        "text": "~"
      },
      "date": 1670944205154
    },
    {
      "item": {
        "type": "factory",
        "id": "c645ade310bc1a76"
      },
      "id": "c645ade310bc1a76",
      "type": "add",
      "after": "c23411cd5e47b233",
      "date": 1670944206929
    },
    {
      "type": "remove",
      "id": "c645ade310bc1a76",
      "date": 1670944209344
    },
    {
      "item": {
        "type": "factory",
        "id": "20af32087e147349"
      },
      "id": "20af32087e147349",
      "type": "add",
      "after": "c23411cd5e47b233",
      "date": 1670944395859
    },
    {
      "type": "edit",
      "id": "20af32087e147349",
      "item": {
        "type": "paragraph",
        "id": "20af32087e147349",
        "text": "[[iframe]]"
      },
      "date": 1670944404379
    },
    {
      "type": "edit",
      "id": "20af32087e147349",
      "item": {
        "type": "paragraph",
        "id": "20af32087e147349",
        "text": "⇒  [[iframe]]"
      },
      "date": 1670944413574
    },
    {
      "item": {
        "type": "factory",
        "id": "29ec4aee02373f3f"
      },
      "id": "29ec4aee02373f3f",
      "type": "add",
      "after": "20af32087e147349",
      "date": 1670944481270
    },
    {
      "type": "edit",
      "id": "29ec4aee02373f3f",
      "item": {
        "type": "paragraph",
        "id": "29ec4aee02373f3f",
        "text": "\"iframe event handling\". "
      },
      "date": 1670944489706
    },
    {
      "item": {
        "type": "factory",
        "id": "d6f72f4610e5e358"
      },
      "id": "d6f72f4610e5e358",
      "type": "add",
      "after": "29ec4aee02373f3f",
      "date": 1670944498292
    },
    {
      "type": "edit",
      "id": "29ec4aee02373f3f",
      "item": {
        "type": "paragraph",
        "id": "29ec4aee02373f3f",
        "text": "\"iframe event handling\". [https://duckduckgo.com/?q=%22iframe+event+handling%22&t=ffcm&atb=v342-1&ia=web duckduckgo]"
      },
      "date": 1670944508355
    },
    {
      "type": "edit",
      "id": "29ec4aee02373f3f",
      "item": {
        "type": "paragraph",
        "id": "29ec4aee02373f3f",
        "text": "\"iframe event handling\". [https://duckduckgo.com/?q=%22iframe+event+handling%22&t=ffcm&atb=v342-1&ia=web duckduckgo], [https://www.google.com/search?q=%22iframe+event+handling%22&source=hp&ei=FJeYY_r0EqK-xc8P-q2FqAM&iflsig=AJiK0e8AAAAAY5ilJIxXkDxrJlSdHXc_Yqspljolw-H5&ved=0ahUKEwj6zqa68fb7AhUiX_EDHfpWATUQ4dUDCAc&uact=5&oq=%22iframe+event+handling%22&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHjIGCAAQFhAeMgYIABAWEB4yBggAEBYQHlDRAVjRAWDtBWgBcAB4AIABTogBTpIBATGYAQCgAQKgAQGwAQA&sclient=gws-wiz google]"
      },
      "date": 1670944555538
    },
    {
      "type": "remove",
      "id": "d6f72f4610e5e358",
      "date": 1670944573767
    },
    {
      "item": {
        "type": "factory",
        "id": "ef64b68b4eb5a0f6"
      },
      "id": "ef64b68b4eb5a0f6",
      "type": "add",
      "after": "29ec4aee02373f3f",
      "date": 1670944587973
    },
    {
      "type": "edit",
      "id": "ef64b68b4eb5a0f6",
      "item": {
        "type": "markdown",
        "id": "ef64b68b4eb5a0f6",
        "text": "* Handling iFrame event in the parent web page. "
      },
      "date": 1670944594184
    },
    {
      "type": "edit",
      "id": "ef64b68b4eb5a0f6",
      "item": {
        "type": "markdown",
        "id": "ef64b68b4eb5a0f6",
        "text": "* Handling iFrame event in the parent web page. [https://stackoverflow.com/questions/18668541/handling-iframe-event-in-the-parent-web-page stackoverflow]"
      },
      "date": 1670944607471
    },
    {
      "type": "edit",
      "id": "0d25c504743c9713",
      "item": {
        "type": "paragraph",
        "id": "0d25c504743c9713",
        "text": "We cannot directly interact with a world inside a portal currently, because of the way iframe event handling works. "
      },
      "date": 1670944637951
    },
    {
      "type": "add",
      "id": "d102a658c76759dc",
      "item": {
        "type": "paragraph",
        "id": "d102a658c76759dc",
        "text": "We could facilitate it via the outer shell which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
      },
      "after": "0d25c504743c9713",
      "date": 1670944648724
    },
    {
      "type": "edit",
      "id": "eacec0be3e1efe29",
      "item": {
        "type": "paragraph",
        "id": "eacec0be3e1efe29",
        "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. From Croquet's POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \n"
      },
      "date": 1670944746921
    },
    {
      "type": "add",
      "id": "d66b527683b7e888",
      "item": {
        "type": "paragraph",
        "id": "d66b527683b7e888",
        "text": "Similarly with messaging between iframes via the shell: by default we will keep that to a minimum.  If worlds were volunteering too much information by default that would create privacy issues, and if the messages they were accepting would be too generic that would open big security holes (worst case scenario would be that one frame could get another frame to execute some arbitrary code, which would completely obliterate the browser's iframe sandboxing guarantees).\n"
      },
      "after": "eacec0be3e1efe29",
      "date": 1670944751487
    },
    {
      "type": "add",
      "id": "0cddd3d7a14dafbb",
      "item": {
        "type": "paragraph",
        "id": "0cddd3d7a14dafbb",
        "text": "Your own source code however will be able to define what messages get sent and processed, the shell should be an impartial message broker, just like our reflectors are impartial. So you could define whatever messaging you need between your own worlds, including implementing \"action at a distance.\" But the base system should be as secure and privacy-conscious as possible, by default. [https://discord.com/channels/694586717247635488/966071402526543924/983772931651948554 discord]"
      },
      "after": "d66b527683b7e888",
      "date": 1670944752436
    },
    {
      "type": "edit",
      "id": "eacec0be3e1efe29",
      "item": {
        "type": "paragraph",
        "id": "eacec0be3e1efe29",
        "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. From [[Croquet]]'s POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \n"
      },
      "date": 1670944881922
    },
    {
      "type": "edit",
      "id": "eacec0be3e1efe29",
      "item": {
        "type": "paragraph",
        "id": "eacec0be3e1efe29",
        "text": "Until you enter the world you're a passive observer. To interact you'll have to actively enter the world.\nNote though that that's mostly an implementation choice: the underlying Croquet session for that world is activated as soon as the portal is opened. "
      },
      "date": 1670944920650
    },
    {
      "type": "add",
      "id": "448ab107144ebc96",
      "item": {
        "type": "paragraph",
        "id": "448ab107144ebc96",
        "text": "From [[Croquet]]'s POV there's no difference between actively and passively joining (though we would be able to do some optimizations down the road if that distinction was made known to the system). \n"
      },
      "after": "eacec0be3e1efe29",
      "date": 1670944921284
    },
    {
      "type": "edit",
      "id": "0d25c504743c9713",
      "item": {
        "type": "paragraph",
        "id": "0d25c504743c9713",
        "text": "We cannot directly interact with a world inside a [[Portal]] currently, because of the way iframe event handling works. "
      },
      "date": 1671005913997
    },
    {
      "type": "edit",
      "id": "d102a658c76759dc",
      "item": {
        "type": "paragraph",
        "id": "d102a658c76759dc",
        "text": "We could facilitate it via the outer shell [[[Meta Shell]] which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
      },
      "date": 1671007499443
    },
    {
      "type": "edit",
      "id": "d102a658c76759dc",
      "item": {
        "type": "paragraph",
        "id": "d102a658c76759dc",
        "text": "We could facilitate it via the outer shell [⇒  [[Meta Shell]] which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
      },
      "date": 1671007511192
    },
    {
      "type": "edit",
      "id": "d102a658c76759dc",
      "item": {
        "type": "paragraph",
        "id": "d102a658c76759dc",
        "text": "We could facilitate it via the outer shell [⇒  [[Meta Shell]]] which is able to forward messages between iframes. At the moment we keep this \"meta\" protocol to the absolutely necessary minimum – pretty much the only thing sent from the upper frame to a lower frame is the camera transform. Plus when entering a portal, the avatar data gets transmitted to the new world. [https://discord.com/channels/694586717247635488/966071402526543924/983583843367944222 discord]"
      },
      "date": 1671007517929
    }
  ]
}