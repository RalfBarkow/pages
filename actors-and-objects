{
  "title": "Actors and Objects",
  "story": [
    {
      "type": "paragraph",
      "id": "394814aafeaf7326",
      "text": "Alan Kay answers there is little difference between his own definition of Object-Oriented Programming and Carl Hewitt's Actor Model. [https://www.quora.com/What-is-the-difference-between-Alan-Kays-definition-of-OOP-and-Carl-Hewitts-Actor-Model/answer/Alan-Kay-11 quora]"
    },
    {
      "type": "paragraph",
      "id": "68c45d2c469c7b9b",
      "text": "I had the “[[Dynamic Object as Whole Computer]] ” idea in Nov 66"
    },
    {
      "type": "paragraph",
      "id": "76a45994130b6617",
      "text": "Influences: especially Sketchpad, Simula, the initial designs for the ARPAnet, processes as virtual machines in time-sharing and multiprocessing systems, and analogies from my math and biology backgrounds."
    },
    {
      "type": "paragraph",
      "id": "741d72ea8d632803",
      "text": "I met Seymour Papert in 1968 and this changed my outlook on personal computing."
    },
    {
      "type": "paragraph",
      "id": "52f2aeb342293fcf",
      "text": "I found Carl Hewitt’s PLANNER language at MIT — a very important precursor (and superset) to Prolog."
    },
    {
      "type": "paragraph",
      "id": "eea495dc81c732f8",
      "text": "I gave a talk a MIT in the Fall of 72 to share these ideas [Smalltalk-72—logo-like things, object-like things, PLANNER-like things], and the first Actors paper adapting some of these ideas appeared the next year."
    },
    {
      "type": "paragraph",
      "id": "f2f0def359e77e82",
      "text": "Subsequently, the Actors work remained more true to the original object ideas than our Smalltalk work at Parc."
    },
    {
      "type": "pagefold",
      "id": "d9dd9ee4308ec5bc",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "b342f215d1af82c2",
      "text": "In a conversation between Ralph Johnson and Joe Armstrong, Joe claimed \"Erlang might be the only object-oriented language.\" [https://www.infoq.com/interviews/johnson-armstrong-oop infoq]"
    },
    {
      "type": "paragraph",
      "id": "eebab31529a5b622",
      "text": "Ralph Johnson: The thing about Erlang is that it's in some sense 2 languages, at least you program it 2 levels because one is the functional language that you use to write a single process and then there is what you think about all these processes and how do they interact, one process is sending messages to the other. At a higher level, that Erlang is object oriented, at the lowest level it's a pure functional language and that's how it got advertised for a long time. See also [[Spawn or Not]], and [[BEAMs of Insight]]"
    },
    {
      "type": "paragraph",
      "id": "fee129b072c5f8d9",
      "text": "What does Alan Kay think about that? [https://www.quora.com/What-does-Alan-Kay-think-about-Joe-Armstrong-claiming-that-Erlang-might-be-the-only-object-oriented-language-and-also-his-thesis-supervisor-s-claim-that-Erlang-is-extremely-object-oriented/answer/Alan-Kay-11 quora]"
    },
    {
      "type": "paragraph",
      "id": "78922b8b5968cbb3",
      "text": "I love Joe Armstrong — we lost a great man when he recently left us.\n\nAnd, he might be right. Erlang is much closer to the original ideas I had about “objects” and how to use them.\n\nHowever, another way to look at this is to consider “What Is Actually Needed” (WIAN) and realize that much more is needed beyond what we are programming in today.\n\nJoe would most definitely be more in favor of this idea than worrying about what either one of us did decades ago."
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "68c45d2c469c7b9b",
      "item": {
        "type": "paragraph",
        "id": "68c45d2c469c7b9b",
        "text": "I had the “[[Dynamic Object as Whole Computer]] ” idea in Nov 66"
      },
      "date": 1706601102965
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1706600499419
    },
    {
      "type": "edit",
      "id": "eebab31529a5b622",
      "item": {
        "type": "paragraph",
        "id": "eebab31529a5b622",
        "text": "Ralph Johnson: The thing about Erlang is that it's in some sense 2 languages, at least you program it 2 levels because one is the functional language that you use to write a single process and then there is what you think about all these processes and how do they interact, one process is sending messages to the other. At a higher level, that Erlang is object oriented, at the lowest level it's a pure functional language and that's how it got advertised for a long time. See also [[Spawn or Not]], and [[BEAMs of Insight]]"
      },
      "date": 1611075438202
    },
    {
      "type": "edit",
      "id": "eebab31529a5b622",
      "item": {
        "type": "paragraph",
        "id": "eebab31529a5b622",
        "text": "Ralph Johnson: The thing about Erlang is that it's in some sense 2 languages, at least you program it 2 levels because one is the functional language that you use to write a single process and then there is what you think about all these processes and how do they interact, one process is sending messages to the other. At a higher level, that Erlang is object oriented, at the lowest level it's a pure functional language and that's how it got advertised for a long time. See also [[BEAMs of Insight]]"
      },
      "date": 1611075294601
    },
    {
      "type": "add",
      "id": "eebab31529a5b622",
      "item": {
        "type": "paragraph",
        "id": "eebab31529a5b622",
        "text": "Ralph Johnson: The thing about Erlang is that it's in some sense 2 languages, at least you program it 2 levels because one is the functional language that you use to write a single process and then there is what you think about all these processes and how do they interact, one process is sending messages to the other. At a higher level, that Erlang is object oriented, at the lowest level it's a pure functional language and that's how it got advertised for a long time."
      },
      "after": "b342f215d1af82c2",
      "date": 1611075281630
    },
    {
      "type": "add",
      "id": "78922b8b5968cbb3",
      "item": {
        "type": "paragraph",
        "id": "78922b8b5968cbb3",
        "text": "I love Joe Armstrong — we lost a great man when he recently left us.\n\nAnd, he might be right. Erlang is much closer to the original ideas I had about “objects” and how to use them.\n\nHowever, another way to look at this is to consider “What Is Actually Needed” (WIAN) and realize that much more is needed beyond what we are programming in today.\n\nJoe would most definitely be more in favor of this idea than worrying about what either one of us did decades ago."
      },
      "after": "fee129b072c5f8d9",
      "date": 1611075187460
    },
    {
      "type": "add",
      "id": "fee129b072c5f8d9",
      "item": {
        "type": "paragraph",
        "id": "fee129b072c5f8d9",
        "text": "What does Alan Kay think about that? [https://www.quora.com/What-does-Alan-Kay-think-about-Joe-Armstrong-claiming-that-Erlang-might-be-the-only-object-oriented-language-and-also-his-thesis-supervisor-s-claim-that-Erlang-is-extremely-object-oriented/answer/Alan-Kay-11 quora]"
      },
      "after": "b342f215d1af82c2",
      "date": 1611075149173
    },
    {
      "type": "edit",
      "id": "b342f215d1af82c2",
      "item": {
        "type": "paragraph",
        "id": "b342f215d1af82c2",
        "text": "In a conversation between Ralph Johnson and Joe Armstrong, Joe claimed \"Erlang might be the only object-oriented language.\" [https://www.infoq.com/interviews/johnson-armstrong-oop infoq]"
      },
      "date": 1611075110470
    },
    {
      "item": {
        "type": "factory",
        "id": "b342f215d1af82c2"
      },
      "id": "b342f215d1af82c2",
      "type": "add",
      "after": "d9dd9ee4308ec5bc",
      "date": 1611075016029
    },
    {
      "type": "edit",
      "id": "d9dd9ee4308ec5bc",
      "item": {
        "type": "pagefold",
        "id": "d9dd9ee4308ec5bc",
        "text": "."
      },
      "date": 1611075005302
    },
    {
      "item": {
        "type": "factory",
        "id": "d9dd9ee4308ec5bc"
      },
      "id": "d9dd9ee4308ec5bc",
      "type": "add",
      "after": "f2f0def359e77e82",
      "date": 1611074999300
    },
    {
      "type": "add",
      "id": "f2f0def359e77e82",
      "item": {
        "type": "paragraph",
        "id": "f2f0def359e77e82",
        "text": "Subsequently, the Actors work remained more true to the original object ideas than our Smalltalk work at Parc."
      },
      "after": "eea495dc81c732f8",
      "date": 1611074974364
    },
    {
      "type": "add",
      "id": "eea495dc81c732f8",
      "item": {
        "type": "paragraph",
        "id": "eea495dc81c732f8",
        "text": "I gave a talk a MIT in the Fall of 72 to share these ideas [Smalltalk-72—logo-like things, object-like things, PLANNER-like things], and the first Actors paper adapting some of these ideas appeared the next year."
      },
      "after": "52f2aeb342293fcf",
      "date": 1611074916561
    },
    {
      "type": "add",
      "id": "52f2aeb342293fcf",
      "item": {
        "type": "paragraph",
        "id": "52f2aeb342293fcf",
        "text": "I found Carl Hewitt’s PLANNER language at MIT — a very important precursor (and superset) to Prolog."
      },
      "after": "741d72ea8d632803",
      "date": 1611074814879
    },
    {
      "type": "edit",
      "id": "741d72ea8d632803",
      "item": {
        "type": "paragraph",
        "id": "741d72ea8d632803",
        "text": "I met Seymour Papert in 1968 and this changed my outlook on personal computing."
      },
      "date": 1611074809396
    },
    {
      "type": "add",
      "id": "741d72ea8d632803",
      "item": {
        "type": "paragraph",
        "id": "741d72ea8d632803",
        "text": "I met Seymour Papert in 1968 and this changed my outlook on personal computing"
      },
      "after": "76a45994130b6617",
      "date": 1611074794012
    },
    {
      "type": "edit",
      "id": "76a45994130b6617",
      "item": {
        "type": "paragraph",
        "id": "76a45994130b6617",
        "text": "Influences: especially Sketchpad, Simula, the initial designs for the ARPAnet, processes as virtual machines in time-sharing and multiprocessing systems, and analogies from my math and biology backgrounds."
      },
      "date": 1611074753456
    },
    {
      "type": "add",
      "id": "76a45994130b6617",
      "item": {
        "type": "paragraph",
        "id": "76a45994130b6617",
        "text": "Influences: "
      },
      "after": "68c45d2c469c7b9b",
      "date": 1611074701672
    },
    {
      "type": "add",
      "id": "68c45d2c469c7b9b",
      "item": {
        "type": "paragraph",
        "id": "68c45d2c469c7b9b",
        "text": "I had the “dynamic object as whole computer” idea in Nov 66"
      },
      "after": "394814aafeaf7326",
      "date": 1611074690902
    },
    {
      "type": "edit",
      "id": "394814aafeaf7326",
      "item": {
        "type": "paragraph",
        "id": "394814aafeaf7326",
        "text": "Alan Kay answers there is little difference between his own definition of Object-Oriented Programming and Carl Hewitt's Actor Model. [https://www.quora.com/What-is-the-difference-between-Alan-Kays-definition-of-OOP-and-Carl-Hewitts-Actor-Model/answer/Alan-Kay-11 quora]"
      },
      "date": 1611074653263
    },
    {
      "type": "edit",
      "id": "394814aafeaf7326",
      "item": {
        "type": "paragraph",
        "id": "394814aafeaf7326",
        "text": "[https://www.quora.com/What-is-the-difference-between-Alan-Kays-definition-of-OOP-and-Carl-Hewitts-Actor-Model quora]"
      },
      "date": 1611074519826
    },
    {
      "item": {
        "type": "factory",
        "id": "394814aafeaf7326"
      },
      "id": "394814aafeaf7326",
      "type": "add",
      "date": 1611074476089
    },
    {
      "type": "create",
      "item": {
        "title": "Actors and Objects",
        "story": []
      },
      "date": 1611074464336
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1706603748739
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1706606246518
    }
  ]
}