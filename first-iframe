{
  "title": "First iFrame",
  "story": [
    {
      "type": "paragraph",
      "id": "bc6e27e167ff3b08",
      "text": "One way for iframes to communicate with each other is by using the [[postMessage]] API [https://stackoverflow.com/questions/34552430/communicating-between-iframes stackoverflow]. This allows you to send messages between windows or iframes even if they have different domains [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]. "
    },
    {
      "type": "paragraph",
      "id": "50ffca5821cca190",
      "text": "To send a message from one iframe to another, you can [[dispatch]] an [[Event]] from the first iframe to its parent window that notifies it that the iframe is loaded. The parent window can then listen for this event and reply to the iframe with a message. The second iframe can also listen for this message and act accordingly [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]."
    },
    {
      "type": "paragraph",
      "id": "98ed2697fd4c1a74",
      "text": "The following code – our first iframe – uses [[@thi.ng/rdom]] to return the document [[Location]] as a string, which is rendered in the div#output of our [[Static Import Snippet]] (js-snippet frame)."
    },
    {
      "type": "pagefold",
      "id": "def0df0f74260667",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "1772e1fe3cf506f9",
      "site": "wiki.ralfbarkow.ch",
      "slug": "thingrdom",
      "title": "@thi.ng/rdom",
      "text": "Lightweight, reactive, VDOM-less UI/DOM components with async lifecycle and [[@thi.ng/hiccup]] compatible. [https://github.com/thi-ng/umbrella/blob/8ab2cbfe2f59b7ef672b6e1cf2a43368f8437ddf/packages/rdom/README.md#about github]"
    },
    {
      "type": "pagefold",
      "id": "86694d8e0f5cd412",
      "text": "~"
    },
    {
      "type": "code",
      "id": "10893239e255c334",
      "text": "import { $compile } from \"https://cdn.skypack.dev/@thi.ng/rdom\";"
    },
    {
      "type": "paragraph",
      "id": "d573fcd3a2093c2a",
      "text": "JS-Snippet Frame:"
    },
    {
      "type": "frame",
      "id": "5396a0b4e33715c0",
      "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 128"
    },
    {
      "type": "paragraph",
      "id": "31249c9c589d8ba4",
      "text": "Return the document location as a string (see js-snippet frame above for the output):  "
    },
    {
      "type": "code",
      "id": "115011ad8799cee4",
      "text": "$compile(\n  [\"p\", {}, document.URL]\n).mount(document.getElementById(\"output\"));"
    },
    {
      "type": "paragraph",
      "id": "dd544d7003f9302b",
      "text": "See Document.URL [https://developer.mozilla.org/en-US/docs/Web/API/Document/URL mdn] (docs)"
    },
    {
      "type": "paragraph",
      "id": "000b6c10a33d36d8",
      "text": "Compare the document.URL returned by the js-snippet frame with the watch expression – the document.URL of the [[Lineup]] – in the following screenshot. They differ. Why?"
    },
    {
      "type": "image",
      "id": "440a66e67f0ca361",
      "text": "document.URL",
      "size": "wide",
      "width": 418,
      "height": 272,
      "url": "/assets/plugins/image/581dcee0ad190ab586048e5e32af008e.jpg"
    },
    {
      "type": "paragraph",
      "id": "3f1418d1a98787a1",
      "text": "A [[Plugin]] can access the entire [[Lineup]] while an HTML script in a Frame plugin can only see what the Frame plugin provides. Plugins can announce that they have data ready to be read by adding a “something-source” class to their <div> in the lineup. Most plugins look for this class instead of parsing whole pages. "
    },
    {
      "type": "paragraph",
      "id": "1cdcea7e855acd29",
      "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes [⇒ [[Site Survey Factory]] ⇒ [[Catalog of Survey Probes]]] are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire [[Sitemap]] [⇒ [[Wiki Sitemap]]]. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "762c7c1ac0752692",
      "text": "The [[Graph Plugin]] exposes parent-child relationships by \"graph-source\" annotation. The Frame plugin can see this information because it follows the \"something-source\" convention and makes what it finds available to the html scripts it contains. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546792160726ItGQJ:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "pagefold",
      "id": "53d3bfc2b5d1b388",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "db8706605ce1c0aa",
      "site": "js.ward.asia.wiki.org",
      "slug": "read-context-of-frame",
      "title": "Read Context of Frame",
      "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
    },
    {
      "type": "reference",
      "id": "bfe40fcbe208a72f",
      "site": "js.ward.asia.wiki.org",
      "slug": "frame-plugin-integrations",
      "title": "Frame Plugin Integrations",
      "text": "The Frame plugin renders an html page within a wiki page. More important, it also runs any javascript present within a sandbox where there is little opportunity to do harm. The Frame plugin can interact with the lineup on behalf of sandboxed javascript."
    },
    {
      "type": "reference",
      "id": "61b550495cda8377",
      "site": "js.ward.asia.wiki.org",
      "slug": "read-sources-from-lineup",
      "title": "Read Sources from Lineup",
      "text": "The Frame plugin replies with source data from other plugins in the lineup. In this example we look for \"marker-source\" offered by the Map plugin and a few others."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "First iFrame",
        "story": []
      },
      "date": 1678868201517
    },
    {
      "id": "10893239e255c334",
      "type": "add",
      "item": {
        "type": "code",
        "id": "10893239e255c334",
        "text": "import { $compile } from \"https://cdn.skypack.dev/@thi.ng/rdom\";"
      },
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868204392
    },
    {
      "id": "5396a0b4e33715c0",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 256"
      },
      "after": "10893239e255c334",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868214969
    },
    {
      "id": "31249c9c589d8ba4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "31249c9c589d8ba4",
        "text": "Document.URL [https://developer.mozilla.org/en-US/docs/Web/API/Document/URL mdn] – return the document location as a string:"
      },
      "after": "5396a0b4e33715c0",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868220250
    },
    {
      "id": "115011ad8799cee4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "115011ad8799cee4",
        "text": "$compile(\n  [\"div\", {}, [\"p\", {}, document.URL]]\n).mount(document.getElementById(\"output\"));"
      },
      "after": "31249c9c589d8ba4",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868222607
    },
    {
      "id": "440a66e67f0ca361",
      "type": "add",
      "item": {
        "type": "image",
        "id": "440a66e67f0ca361",
        "text": "document.URL",
        "size": "wide",
        "width": 418,
        "height": 272,
        "url": "/assets/plugins/image/581dcee0ad190ab586048e5e32af008e.jpg"
      },
      "after": "115011ad8799cee4",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868231893
    },
    {
      "item": {
        "type": "pagefold",
        "id": "def0df0f74260667",
        "text": "~"
      },
      "id": "def0df0f74260667",
      "type": "add",
      "after": "440a66e67f0ca361",
      "date": 1678868287767
    },
    {
      "type": "edit",
      "id": "def0df0f74260667",
      "item": {
        "type": "pagefold",
        "id": "def0df0f74260667",
        "text": "~"
      },
      "date": 1678868293676
    },
    {
      "id": "1772e1fe3cf506f9",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "1772e1fe3cf506f9",
        "site": "wiki.ralfbarkow.ch",
        "slug": "thingrdom",
        "title": "@thi.ng/rdom",
        "text": "Lightweight, reactive, VDOM-less UI/DOM components with async lifecycle and [[@thi.ng/hiccup]] compatible. [https://github.com/thi-ng/umbrella/blob/8ab2cbfe2f59b7ef672b6e1cf2a43368f8437ddf/packages/rdom/README.md#about github]"
      },
      "after": "def0df0f74260667",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868297078
    },
    {
      "id": "000b6c10a33d36d8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.ULR returned by the js-snippet frame with the watch expression in the screenshot above. They differ. Why?"
      },
      "after": "440a66e67f0ca361",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868305115
    },
    {
      "id": "3f1418d1a98787a1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3f1418d1a98787a1",
        "text": "A [[Plugin]] can access the entire [[Lineup]] while an HTML script in a Frame plugin can only see what the Frame plugin provides. Plugins can announce that they have data ready to be read by adding a “something-source” class to their <div> in the lineup. Most plugins look for this class instead of parsing whole pages. The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire sitemap. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "000b6c10a33d36d8",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868309203
    },
    {
      "id": "762c7c1ac0752692",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "762c7c1ac0752692",
        "text": "The Graph plugin exposes parent-child relationships by \"graph-source\" annotation. The Frame plugin can see this information because it follows the \"something-source\" convention and makes what it finds available to the html scripts it contains. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546792160726ItGQJ:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "3f1418d1a98787a1",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868311227
    },
    {
      "id": "bc6e27e167ff3b08",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "bc6e27e167ff3b08",
        "text": "One way for iframes to communicate with each other is by using the [[postMessage]] API [https://stackoverflow.com/questions/34552430/communicating-between-iframes stackoverflow]. This allows you to send messages between windows or iframes even if they have different domains [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]. "
      },
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868332914
    },
    {
      "type": "edit",
      "id": "bc6e27e167ff3b08",
      "item": {
        "type": "paragraph",
        "id": "bc6e27e167ff3b08",
        "text": "One way for iframes to communicate with each other is by using the [[postMessage]] API [https://stackoverflow.com/questions/34552430/communicating-between-iframes stackoverflow]. This allows you to send messages between windows or iframes even if they have different domains [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]. "
      },
      "date": 1678868343942
    },
    {
      "type": "edit",
      "id": "bc6e27e167ff3b08",
      "item": {
        "type": "paragraph",
        "id": "bc6e27e167ff3b08",
        "text": "One way for iframes to communicate with each other is by using the [[postMessage]] API [https://stackoverflow.com/questions/34552430/communicating-between-iframes stackoverflow]. This allows you to send messages between windows or iframes even if they have different domains [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]. "
      },
      "date": 1678868361446
    },
    {
      "type": "add",
      "id": "50ffca5821cca190",
      "item": {
        "type": "paragraph",
        "id": "50ffca5821cca190",
        "text": "To send a message from one iframe to another, you can [[dispatch]] an [[Event]] from the first iframe to its parent window that notifies it that the iframe is loaded. The parent window can then listen for this event and reply to the iframe with a message. The second iframe can also listen for this message and act accordingly [https://stackoverflow.com/questions/9153445/how-to-communicate-between-iframe-and-the-parent-site stackoverflow]."
      },
      "after": "bc6e27e167ff3b08",
      "date": 1678868362659
    },
    {
      "id": "def0df0f74260667",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "def0df0f74260667",
        "10893239e255c334",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "440a66e67f0ca361",
        "000b6c10a33d36d8",
        "3f1418d1a98787a1",
        "762c7c1ac0752692",
        "1772e1fe3cf506f9"
      ],
      "date": 1678868384463,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "id": "86694d8e0f5cd412",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "86694d8e0f5cd412",
        "text": "~"
      },
      "after": "1772e1fe3cf506f9",
      "attribution": {
        "page": "2023-03-15"
      },
      "date": 1678868395075
    },
    {
      "type": "fork",
      "date": 1678868398128
    },
    {
      "id": "1772e1fe3cf506f9",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "10893239e255c334",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "440a66e67f0ca361",
        "000b6c10a33d36d8",
        "3f1418d1a98787a1",
        "762c7c1ac0752692",
        "86694d8e0f5cd412"
      ],
      "date": 1678868463108
    },
    {
      "id": "86694d8e0f5cd412",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "440a66e67f0ca361",
        "000b6c10a33d36d8",
        "3f1418d1a98787a1",
        "762c7c1ac0752692"
      ],
      "date": 1678868470268
    },
    {
      "type": "add",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The code below uses [[@thi.ng/rdom]] to return the document location."
      },
      "after": "50ffca5821cca190",
      "date": 1678868557863
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The code below – our first iframe – uses [[@thi.ng/rdom]] to return the document location."
      },
      "date": 1678868600350
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The code below – our first iframe – uses [[@thi.ng/rdom]] to return the document location as a string, which is rendered in the div#output."
      },
      "date": 1678868798032
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The code below – our first iframe – uses [[@thi.ng/rdom]] to return the document location as a string, which is rendered in the div#output of our [[Static Import Snippet]]."
      },
      "date": 1678868909128
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The following code – our first iframe – uses [[@thi.ng/rdom]] to return the document location as a string, which is rendered in the div#output of our [[Static Import Snippet]]."
      },
      "date": 1678868948744
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The following code – our first iframe – uses [[@thi.ng/rdom]] to return the document [[Location]] as a string, which is rendered in the div#output of our [[Static Import Snippet]]."
      },
      "date": 1678868977670
    },
    {
      "type": "edit",
      "id": "000b6c10a33d36d8",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.ULR returned by the js-snippet frame with the watch expression ([[Lineup]]) in the screenshot above. They differ. Why?"
      },
      "date": 1678869132679
    },
    {
      "type": "edit",
      "id": "000b6c10a33d36d8",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.ULR returned by the js-snippet frame with the watch expression – the document.ULR of the [[Lineup]] – in the screenshot above. They differ. Why?"
      },
      "date": 1678869162456
    },
    {
      "type": "edit",
      "id": "98ed2697fd4c1a74",
      "item": {
        "type": "paragraph",
        "id": "98ed2697fd4c1a74",
        "text": "The following code – our first iframe – uses [[@thi.ng/rdom]] to return the document [[Location]] as a string, which is rendered in the div#output of our [[Static Import Snippet]] (js-snippet frame)."
      },
      "date": 1678869200140
    },
    {
      "type": "add",
      "id": "d573fcd3a2093c2a",
      "item": {
        "type": "paragraph",
        "id": "d573fcd3a2093c2a",
        "text": "Js-Snippet Frame:"
      },
      "after": "98ed2697fd4c1a74",
      "date": 1678869332555
    },
    {
      "id": "d573fcd3a2093c2a",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "440a66e67f0ca361",
        "000b6c10a33d36d8",
        "3f1418d1a98787a1",
        "762c7c1ac0752692"
      ],
      "date": 1678869335765
    },
    {
      "type": "edit",
      "id": "31249c9c589d8ba4",
      "item": {
        "type": "paragraph",
        "id": "31249c9c589d8ba4",
        "text": "Return the document location as a string:"
      },
      "date": 1678869394577
    },
    {
      "type": "add",
      "id": "dd544d7003f9302b",
      "item": {
        "type": "paragraph",
        "id": "dd544d7003f9302b",
        "text": "Document.URL [https://developer.mozilla.org/en-US/docs/Web/API/Document/URL mdn]"
      },
      "after": "31249c9c589d8ba4",
      "date": 1678869402208
    },
    {
      "id": "dd544d7003f9302b",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "dd544d7003f9302b",
        "440a66e67f0ca361",
        "000b6c10a33d36d8",
        "3f1418d1a98787a1",
        "762c7c1ac0752692"
      ],
      "date": 1678869404798
    },
    {
      "type": "edit",
      "id": "31249c9c589d8ba4",
      "item": {
        "type": "paragraph",
        "id": "31249c9c589d8ba4",
        "text": "Return the document location as a string (see js-snippet frame above): "
      },
      "date": 1678869428520
    },
    {
      "type": "edit",
      "id": "31249c9c589d8ba4",
      "item": {
        "type": "paragraph",
        "id": "31249c9c589d8ba4",
        "text": "Return the document location as a string (see js-snippet frame above for output):  "
      },
      "date": 1678869454111
    },
    {
      "type": "edit",
      "id": "31249c9c589d8ba4",
      "item": {
        "type": "paragraph",
        "id": "31249c9c589d8ba4",
        "text": "Return the document location as a string (see js-snippet frame above for the output):  "
      },
      "date": 1678869471718
    },
    {
      "type": "edit",
      "id": "dd544d7003f9302b",
      "item": {
        "type": "paragraph",
        "id": "dd544d7003f9302b",
        "text": "See Document.URL [https://developer.mozilla.org/en-US/docs/Web/API/Document/URL mdn]"
      },
      "date": 1678869524990
    },
    {
      "type": "edit",
      "id": "000b6c10a33d36d8",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.ULR returned by the js-snippet frame with the watch expression – the document.ULR of the [[Lineup]] – in the following screenshot. They differ. Why?"
      },
      "date": 1678869554207
    },
    {
      "id": "000b6c10a33d36d8",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "dd544d7003f9302b",
        "000b6c10a33d36d8",
        "440a66e67f0ca361",
        "3f1418d1a98787a1",
        "762c7c1ac0752692"
      ],
      "date": 1678869556854
    },
    {
      "type": "edit",
      "id": "000b6c10a33d36d8",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.URL returned by the js-snippet frame with the watch expression – the document.ULR of the [[Lineup]] – in the following screenshot. They differ. Why?"
      },
      "date": 1678869569426
    },
    {
      "type": "edit",
      "id": "dd544d7003f9302b",
      "item": {
        "type": "paragraph",
        "id": "dd544d7003f9302b",
        "text": "See Document.URL [https://developer.mozilla.org/en-US/docs/Web/API/Document/URL mdn] (docs)"
      },
      "date": 1678869681067
    },
    {
      "type": "edit",
      "id": "3f1418d1a98787a1",
      "item": {
        "type": "paragraph",
        "id": "3f1418d1a98787a1",
        "text": "A [[Plugin]] can access the entire [[Lineup]] while an HTML script in a Frame plugin can only see what the Frame plugin provides. Plugins can announce that they have data ready to be read by adding a “something-source” class to their <div> in the lineup. Most plugins look for this class instead of parsing whole pages. "
      },
      "date": 1678869826068
    },
    {
      "type": "add",
      "id": "1cdcea7e855acd29",
      "item": {
        "type": "paragraph",
        "id": "1cdcea7e855acd29",
        "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire sitemap. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "3f1418d1a98787a1",
      "date": 1678869826860
    },
    {
      "type": "edit",
      "id": "d573fcd3a2093c2a",
      "item": {
        "type": "paragraph",
        "id": "d573fcd3a2093c2a",
        "text": "JS-Snippet Frame:"
      },
      "date": 1678870183424
    },
    {
      "type": "edit",
      "id": "115011ad8799cee4",
      "item": {
        "type": "code",
        "id": "115011ad8799cee4",
        "text": "$compile(\n  [\"p\", {}, document.URL]\n).mount(document.getElementById(\"output\"));"
      },
      "date": 1678870370032
    },
    {
      "type": "fork",
      "date": 1678870525568
    },
    {
      "type": "edit",
      "id": "1cdcea7e855acd29",
      "item": {
        "type": "paragraph",
        "id": "1cdcea7e855acd29",
        "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes [⇒ [[Site Survey Factory]]] are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire sitemap. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678870735098
    },
    {
      "type": "edit",
      "id": "1cdcea7e855acd29",
      "item": {
        "type": "paragraph",
        "id": "1cdcea7e855acd29",
        "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes [⇒ [[Site Survey Factory]] ⇒ [[Catalog of Survey Probes]]] are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire sitemap. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678870759915
    },
    {
      "type": "edit",
      "id": "762c7c1ac0752692",
      "item": {
        "type": "paragraph",
        "id": "762c7c1ac0752692",
        "text": "The [[Graph Plugin]] exposes parent-child relationships by \"graph-source\" annotation. The Frame plugin can see this information because it follows the \"something-source\" convention and makes what it finds available to the html scripts it contains. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546792160726ItGQJ:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678870848947
    },
    {
      "type": "edit",
      "id": "1cdcea7e855acd29",
      "item": {
        "type": "paragraph",
        "id": "1cdcea7e855acd29",
        "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes [⇒ [[Site Survey Factory]] ⇒ [[Catalog of Survey Probes]]] are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire [[Sitemap]]. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678871294946
    },
    {
      "type": "edit",
      "id": "1cdcea7e855acd29",
      "item": {
        "type": "paragraph",
        "id": "1cdcea7e855acd29",
        "text": "The Grep plugin [⇒ [[About Grep Plugin]] ⇒ [[About Grep Markup]]] and Site Survey Probes [⇒ [[Site Survey Factory]] ⇒ [[Catalog of Survey Probes]]] are exceptions; however, Site Survey Probes cannot see the lineup and must read the entire [[Sitemap]] [⇒ [[Wiki Sitemap]]]. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678546537160618ADyVU:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678871331957
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 128"
      },
      "date": 1678873252330
    },
    {
      "type": "edit",
      "id": "000b6c10a33d36d8",
      "item": {
        "type": "paragraph",
        "id": "000b6c10a33d36d8",
        "text": "Compare the document.URL returned by the js-snippet frame with the watch expression – the document.URL of the [[Lineup]] – in the following screenshot. They differ. Why?"
      },
      "date": 1678873313796
    },
    {
      "item": {
        "type": "factory",
        "id": "61b550495cda8377"
      },
      "id": "61b550495cda8377",
      "type": "add",
      "after": "762c7c1ac0752692",
      "date": 1678893785264
    },
    {
      "type": "edit",
      "id": "61b550495cda8377",
      "item": {
        "type": "reference",
        "id": "61b550495cda8377",
        "site": "js.ward.asia.wiki.org",
        "slug": "read-sources-from-lineup",
        "title": "Read Sources from Lineup",
        "text": "The Frame plugin replies with source data from other plugins in the lineup. In this example we look for \"marker-source\" offered by the Map plugin and a few others."
      },
      "date": 1678893789006
    },
    {
      "item": {
        "type": "factory",
        "id": "db8706605ce1c0aa"
      },
      "id": "db8706605ce1c0aa",
      "type": "add",
      "after": "61b550495cda8377",
      "date": 1678893865350
    },
    {
      "type": "edit",
      "id": "db8706605ce1c0aa",
      "item": {
        "type": "reference",
        "id": "db8706605ce1c0aa",
        "site": "js.ward.asia.wiki.org",
        "slug": "read-context-of-frame",
        "title": "Read Context of Frame",
        "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
      },
      "date": 1678893868315
    },
    {
      "id": "db8706605ce1c0aa",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "dd544d7003f9302b",
        "000b6c10a33d36d8",
        "440a66e67f0ca361",
        "3f1418d1a98787a1",
        "1cdcea7e855acd29",
        "762c7c1ac0752692",
        "db8706605ce1c0aa",
        "61b550495cda8377"
      ],
      "date": 1678893870706
    },
    {
      "item": {
        "type": "factory",
        "id": "53d3bfc2b5d1b388"
      },
      "id": "53d3bfc2b5d1b388",
      "type": "add",
      "after": "61b550495cda8377",
      "date": 1678893879739
    },
    {
      "type": "edit",
      "id": "53d3bfc2b5d1b388",
      "item": {
        "type": "pagefold",
        "id": "53d3bfc2b5d1b388",
        "text": "~"
      },
      "date": 1678893882686
    },
    {
      "id": "53d3bfc2b5d1b388",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "dd544d7003f9302b",
        "000b6c10a33d36d8",
        "440a66e67f0ca361",
        "3f1418d1a98787a1",
        "1cdcea7e855acd29",
        "762c7c1ac0752692",
        "53d3bfc2b5d1b388",
        "db8706605ce1c0aa",
        "61b550495cda8377"
      ],
      "date": 1678893884641
    },
    {
      "item": {
        "type": "factory",
        "id": "bfe40fcbe208a72f"
      },
      "id": "bfe40fcbe208a72f",
      "type": "add",
      "after": "61b550495cda8377",
      "date": 1678893986543
    },
    {
      "type": "edit",
      "id": "bfe40fcbe208a72f",
      "item": {
        "type": "reference",
        "id": "bfe40fcbe208a72f",
        "site": "js.ward.asia.wiki.org",
        "slug": "frame-plugin-integrations",
        "title": "Frame Plugin Integrations",
        "text": "The Frame plugin renders an html page within a wiki page. More important, it also runs any javascript present within a sandbox where there is little opportunity to do harm. The Frame plugin can interact with the lineup on behalf of sandboxed javascript."
      },
      "date": 1678893989180
    },
    {
      "id": "bfe40fcbe208a72f",
      "type": "move",
      "order": [
        "bc6e27e167ff3b08",
        "50ffca5821cca190",
        "98ed2697fd4c1a74",
        "def0df0f74260667",
        "1772e1fe3cf506f9",
        "86694d8e0f5cd412",
        "10893239e255c334",
        "d573fcd3a2093c2a",
        "5396a0b4e33715c0",
        "31249c9c589d8ba4",
        "115011ad8799cee4",
        "dd544d7003f9302b",
        "000b6c10a33d36d8",
        "440a66e67f0ca361",
        "3f1418d1a98787a1",
        "1cdcea7e855acd29",
        "762c7c1ac0752692",
        "53d3bfc2b5d1b388",
        "db8706605ce1c0aa",
        "bfe40fcbe208a72f",
        "61b550495cda8377"
      ],
      "date": 1678894082040
    }
  ]
}