{
  "title": "Creativity Before and After Agile",
  "story": [
    {
      "type": "paragraph",
      "id": "6d1990eb581ddd84",
      "text": "Organisms small and large learn by building a model of the world around them then testing that model against what they see and adjusting accordingly. We'll call this a learning loop. We identify three era in computing based on the nature of this loop and the kind of feedback learning that they support."
    },
    {
      "type": "paragraph",
      "id": "f4a42c5320249d06",
      "text": "• The first era of interest is that of the read-eval-print loop. A big deal on timesharing."
    },
    {
      "type": "paragraph",
      "id": "fe23de3556bbc053",
      "text": "• The second era I'll call the agile era was that of the iterative delivery loop. A big deal on desktop."
    },
    {
      "type": "paragraph",
      "id": "63146cbba3adcf59",
      "text": "• The third era, that which we now study, is dominated by the incident recovery loop. A big deal in SaaS"
    },
    {
      "type": "markdown",
      "id": "c3dc2f306091952e",
      "text": "# Delivery"
    },
    {
      "type": "paragraph",
      "id": "cbe84e3f146b92f5",
      "text": "Agile iterations deliver positive increments of both features and opportunity. If features are delivered while consuming opportunity soon the process breaks down, mired in debt."
    },
    {
      "type": "paragraph",
      "id": "79ea13fc58015d40",
      "text": "Thompson Morrison has applied this loop abstracted into what he calls the agile mindset. For two years we dissected what this might mean and it has lead to this ground-breaking publication. See [[The Dayton Experiment]]"
    },
    {
      "type": "paragraph",
      "id": "bc34defda1bace22",
      "text": "His interest has renewed my own so I have taken the time to chart in detail some of the often overlooked aspects of the agile loop. See [[XP Practice Network]]"
    },
    {
      "type": "markdown",
      "id": "4d3a02231bb3c87d",
      "text": "# Loops"
    },
    {
      "type": "paragraph",
      "id": "b90b55958152c2ff",
      "text": "We learn by doing, over and over. We'll characterize software era by what we do and how much we learn. Karl Friston calls this \"active inference\" where the act is the key. He has shown that this applies over a very large range of systems. See [[Free Energy Principle]]"
    },
    {
      "type": "paragraph",
      "id": "fcaba854d94f914e",
      "text": "Computers have for a long time read input and printed output from whatever computation they were programmed to perform. But the REPL era began when parsing and evaluation of expressions was well enough understood to accept them as an interface through which one would interact with a computer."
    },
    {
      "type": "paragraph",
      "id": "caec7355002f9fec",
      "text": "Lisp pioneered the read-eval-print loop mechanism. APL made the syntax so compact that one line could often be the whole program. The Unix pipeline elevated this to assembling components. Now some form of read-eval-print loop exists in every debugger a programmer is likely to use."
    },
    {
      "type": "paragraph",
      "id": "93b7922baddfe709",
      "text": "Agile's iterative delivery allowed teams to learn from their customer as the customer learned from the team. A jointly held vocabulary allowed both to move through a creative space together. See [[Creative Challenge]]"
    },
    {
      "type": "paragraph",
      "id": "318665fe28b178ea",
      "text": "In order to move relentlessly forward the team must create new opportunity at the same rate they deliver features. They will be effective to the degree they make good decisions regarding code cleanliness. Only shared experience in a particular codebase will lead to consensus. See [[XP and Normative Good]]\n"
    },
    {
      "type": "markdown",
      "id": "0acd20dbf296204d",
      "text": "# Surprise"
    },
    {
      "type": "paragraph",
      "id": "accde9ce02d5a22b",
      "text": "While one still turns to the REPL for questions about computer language and Agile iterations for questions of wants and needs, we now find our compounding of services to defy even the most careful analysis. "
    },
    {
      "type": "paragraph",
      "id": "c256e88a2317fee3",
      "text": "While we may have imagined orderly layers of abstraction we find from experience that we have instead a tangled, layered network that obeys new socio-technical rules. See [[Woods Criteria]]"
    },
    {
      "type": "reference",
      "id": "382309d2b154b9e4",
      "site": "norms.ward.asia.wiki.org",
      "slug": "xp-and-normative-good",
      "title": "XP and Normative Good",
      "text": "We compare this document's layers of process, technique and responsibility to Woods ten theorems and find one missing. See S4, [[Synchronization Required]] "
    },
    {
      "type": "paragraph",
      "id": "61f0006aa81cd119",
      "text": "Woods tells us that there is no omniscient point of view. Friston agrees. Todays systems will always surprise. And with each surprise, each incident, we have an opportunity to know more about what we built than we did yesterday. This is the incident-response loop that dominates our age and that is now being perfected. See [[Learning from Incidents]]"
    },
    {
      "type": "pagefold",
      "id": "6579d1b6c7583757",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "53fa885e505b2e4c",
      "text": "The event was presented at New Relic the week we became full remote and as a consequence the video is pretty good. My part starts at minute 49 of Chapter 4. I just watched it to be sure it was as I remembered. I come off rather folksy but 1.5x playback will fix that. There is a lot of me there and a lot of our future too.\n[https://bluejeans.com/playback/s/AqClCWY6y9gPe3pqwVIVaOWUMwvQKBYzBRIKJx8XKIHsuXfYN0qfXdf8VVPuiwo9 video]"
    },
    {
      "type": "paragraph",
      "id": "e133572458ac69ae",
      "text": "I repeated the presentation through Cutter who has made a zoom recording available.  500MB [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 mp4]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Creativity Before and After Agile",
        "story": []
      },
      "date": 1584401748813
    },
    {
      "item": {
        "type": "factory",
        "id": "6d1990eb581ddd84"
      },
      "id": "6d1990eb581ddd84",
      "type": "add",
      "date": 1584402018102
    },
    {
      "type": "edit",
      "id": "6d1990eb581ddd84",
      "item": {
        "type": "paragraph",
        "id": "6d1990eb581ddd84",
        "text": "Organisms small and large learn by building a model of the world around them then testing that model against what they see and adjusting accordingly. We'll call this a learning loop. We identify three era in computing based on the nature of this loop and the kind of feedback learning that they support."
      },
      "date": 1584402297436
    },
    {
      "id": "f4a42c5320249d06",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f4a42c5320249d06",
        "text": "The first era of interest is that of the read-eval-print loop.\n\n"
      },
      "after": "6d1990eb581ddd84",
      "date": 1584402317077
    },
    {
      "id": "fe23de3556bbc053",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fe23de3556bbc053",
        "text": "The second era I'll call the agile era was that of the iterative delivery loop.\n\n"
      },
      "after": "f4a42c5320249d06",
      "date": 1584402320974
    },
    {
      "id": "63146cbba3adcf59",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "63146cbba3adcf59",
        "text": "The third era, that which we now study, is dominated by the incident recovery loop.\n\n"
      },
      "after": "fe23de3556bbc053",
      "date": 1584402324661
    },
    {
      "type": "edit",
      "id": "63146cbba3adcf59",
      "item": {
        "type": "paragraph",
        "id": "63146cbba3adcf59",
        "text": "The third era, that which we now study, is dominated by the incident recovery loop."
      },
      "date": 1584402393025
    },
    {
      "type": "add",
      "id": "c3dc2f306091952e",
      "item": {
        "type": "paragraph",
        "id": "c3dc2f306091952e",
        "text": "# Delivery"
      },
      "after": "63146cbba3adcf59",
      "date": 1584402409585
    },
    {
      "type": "edit",
      "id": "c3dc2f306091952e",
      "item": {
        "type": "markdown",
        "id": "c3dc2f306091952e",
        "text": "# Delivery"
      },
      "date": 1584402415108
    },
    {
      "item": {
        "type": "factory",
        "id": "cbe84e3f146b92f5"
      },
      "id": "cbe84e3f146b92f5",
      "type": "add",
      "after": "c3dc2f306091952e",
      "date": 1584402416909
    },
    {
      "type": "edit",
      "id": "cbe84e3f146b92f5",
      "item": {
        "type": "paragraph",
        "id": "cbe84e3f146b92f5",
        "text": "Agile iterations deliver positive increments of both features and opportunity. If features are delivered while consuming opportunity soon the process breaks down, mired in debt."
      },
      "date": 1584402743137
    },
    {
      "type": "add",
      "id": "79ea13fc58015d40",
      "item": {
        "type": "paragraph",
        "id": "79ea13fc58015d40",
        "text": "Thompson Morrison has applied this loop abstracted into what he calls the agile mindset. For two years we dissected what this might mean and it has lead to this ground-breaking publication. See [[The Dayton Experiment]]"
      },
      "after": "cbe84e3f146b92f5",
      "date": 1584403015641
    },
    {
      "type": "add",
      "id": "bc34defda1bace22",
      "item": {
        "type": "paragraph",
        "id": "bc34defda1bace22",
        "text": "His interest has renewed my own so I have taken the time to chart in detail some of the often overlooked aspects of the agile loop. "
      },
      "after": "79ea13fc58015d40",
      "date": 1584403195407
    },
    {
      "type": "edit",
      "id": "bc34defda1bace22",
      "item": {
        "type": "paragraph",
        "id": "bc34defda1bace22",
        "text": "His interest has renewed my own so I have taken the time to chart in detail some of the often overlooked aspects of the agile loop. See loop detail."
      },
      "date": 1584403288013
    },
    {
      "type": "edit",
      "id": "bc34defda1bace22",
      "item": {
        "type": "paragraph",
        "id": "bc34defda1bace22",
        "text": "His interest has renewed my own so I have taken the time to chart in detail some of the often overlooked aspects of the agile loop. See [[XP Practice Network]]"
      },
      "date": 1584469469907
    },
    {
      "type": "edit",
      "id": "f4a42c5320249d06",
      "item": {
        "type": "paragraph",
        "id": "f4a42c5320249d06",
        "text": "• The first era of interest is that of the read-eval-print loop."
      },
      "date": 1584469537262
    },
    {
      "type": "edit",
      "id": "fe23de3556bbc053",
      "item": {
        "type": "paragraph",
        "id": "fe23de3556bbc053",
        "text": "• The second era I'll call the agile era was that of the iterative delivery loop.\n\n"
      },
      "date": 1584469545883
    },
    {
      "type": "edit",
      "id": "63146cbba3adcf59",
      "item": {
        "type": "paragraph",
        "id": "63146cbba3adcf59",
        "text": "• The third era, that which we now study, is dominated by the incident recovery loop."
      },
      "date": 1584469553032
    },
    {
      "type": "add",
      "id": "4d3a02231bb3c87d",
      "item": {
        "type": "paragraph",
        "id": "4d3a02231bb3c87d",
        "text": "# Loops"
      },
      "after": "bc34defda1bace22",
      "date": 1584469700140
    },
    {
      "type": "add",
      "id": "b90b55958152c2ff",
      "item": {
        "type": "paragraph",
        "id": "b90b55958152c2ff",
        "text": "We learn by doing, over and over. We'll characterize software learning behavior by what we do and how much we learn each time. "
      },
      "after": "4d3a02231bb3c87d",
      "date": 1584470234148
    },
    {
      "type": "edit",
      "id": "b90b55958152c2ff",
      "item": {
        "type": "paragraph",
        "id": "b90b55958152c2ff",
        "text": "We learn by doing, over and over. We'll characterize software learning behavior by what we do and how much we learn each time. Karl Friston calls this \"active inference\" where the act is the key. He has shown that this applies over a very large range of systems. See [[Free Energy Principle]]"
      },
      "date": 1584470477573
    },
    {
      "type": "edit",
      "id": "4d3a02231bb3c87d",
      "item": {
        "type": "markdown",
        "id": "4d3a02231bb3c87d",
        "text": "# Loops"
      },
      "date": 1584470481438
    },
    {
      "type": "edit",
      "id": "b90b55958152c2ff",
      "item": {
        "type": "paragraph",
        "id": "b90b55958152c2ff",
        "text": "We learn by doing, over and over. We'll characterize software era by what we do and how much we learn. Karl Friston calls this \"active inference\" where the act is the key. He has shown that this applies over a very large range of systems. See [[Free Energy Principle]]"
      },
      "date": 1584470520576
    },
    {
      "type": "add",
      "id": "fcaba854d94f914e",
      "item": {
        "type": "paragraph",
        "id": "fcaba854d94f914e",
        "text": "Computers have for a long time read input and printed output from whatever computation they were programmed to perform. But the REPL era began when parsing and evaluation of expressions was well enough understood to accept them as an interface through which one would interact with a computer. Lisp pioneered this mechanism. APL made the syntax so compact that one line could often be the whole program. The Unix pipeline elevated this to assembling components. Now some form of read-eval-print loop exists in every debugger a programmer is likely to use."
      },
      "after": "b90b55958152c2ff",
      "date": 1584471547947
    },
    {
      "type": "edit",
      "id": "fcaba854d94f914e",
      "item": {
        "type": "paragraph",
        "id": "fcaba854d94f914e",
        "text": "Computers have for a long time read input and printed output from whatever computation they were programmed to perform. But the REPL era began when parsing and evaluation of expressions was well enough understood to accept them as an interface through which one would interact with a computer."
      },
      "date": 1584471554621
    },
    {
      "type": "add",
      "id": "caec7355002f9fec",
      "item": {
        "type": "paragraph",
        "id": "caec7355002f9fec",
        "text": "Lisp pioneered the read-eval-print loop mechanism. APL made the syntax so compact that one line could often be the whole program. The Unix pipeline elevated this to assembling components. Now some form of read-eval-print loop exists in every debugger a programmer is likely to use."
      },
      "after": "fcaba854d94f914e",
      "date": 1584471586476
    },
    {
      "type": "edit",
      "id": "f4a42c5320249d06",
      "item": {
        "type": "paragraph",
        "id": "f4a42c5320249d06",
        "text": "• The first era of interest is that of the read-eval-print loop. A big deal on timesharing."
      },
      "date": 1584486885335
    },
    {
      "type": "edit",
      "id": "fe23de3556bbc053",
      "item": {
        "type": "paragraph",
        "id": "fe23de3556bbc053",
        "text": "• The second era I'll call the agile era was that of the iterative delivery loop. A big deal on desktop workstations."
      },
      "date": 1584486913509
    },
    {
      "type": "edit",
      "id": "63146cbba3adcf59",
      "item": {
        "type": "paragraph",
        "id": "63146cbba3adcf59",
        "text": "• The third era, that which we now study, is dominated by the incident recovery loop. A big deal in the SaaS datacenter."
      },
      "date": 1584486934883
    },
    {
      "type": "edit",
      "id": "fe23de3556bbc053",
      "item": {
        "type": "paragraph",
        "id": "fe23de3556bbc053",
        "text": "• The second era I'll call the agile era was that of the iterative delivery loop. A big deal on desktop."
      },
      "date": 1584486957338
    },
    {
      "type": "edit",
      "id": "63146cbba3adcf59",
      "item": {
        "type": "paragraph",
        "id": "63146cbba3adcf59",
        "text": "• The third era, that which we now study, is dominated by the incident recovery loop. A big deal in SaaS"
      },
      "date": 1584486974016
    },
    {
      "type": "add",
      "id": "93b7922baddfe709",
      "item": {
        "type": "paragraph",
        "id": "93b7922baddfe709",
        "text": "Agile's iterative delivery allowed teams to learn from their customer as the customer learned from the team. A jointly held vocabulary allowed both to move through a creative space together."
      },
      "after": "caec7355002f9fec",
      "date": 1584487704929
    },
    {
      "type": "edit",
      "id": "93b7922baddfe709",
      "item": {
        "type": "paragraph",
        "id": "93b7922baddfe709",
        "text": "Agile's iterative delivery allowed teams to learn from their customer as the customer learned from the team. A jointly held vocabulary allowed both to move through a creative space together. See [[Creative Challenge]]"
      },
      "date": 1584487955397
    },
    {
      "type": "add",
      "id": "318665fe28b178ea",
      "item": {
        "type": "paragraph",
        "id": "318665fe28b178ea",
        "text": "In order to move relentlessly forward the team must create new opportunity at the same rate they deliver features. "
      },
      "after": "93b7922baddfe709",
      "date": 1584491472471
    },
    {
      "type": "edit",
      "id": "318665fe28b178ea",
      "item": {
        "type": "paragraph",
        "id": "318665fe28b178ea",
        "text": "In order to move relentlessly forward the team must create new opportunity at the same rate they deliver features. They will be effective to the degree they make good decisions regarding code cleanliness. "
      },
      "date": 1584491617694
    },
    {
      "type": "edit",
      "id": "318665fe28b178ea",
      "item": {
        "type": "paragraph",
        "id": "318665fe28b178ea",
        "text": "In order to move relentlessly forward the team must create new opportunity at the same rate they deliver features. They will be effective to the degree they make good decisions regarding code cleanliness. Only shared experience in a particular codebase will lead to consensus."
      },
      "date": 1584491637564
    },
    {
      "type": "edit",
      "id": "318665fe28b178ea",
      "item": {
        "type": "paragraph",
        "id": "318665fe28b178ea",
        "text": "In order to move relentlessly forward the team must create new opportunity at the same rate they deliver features. They will be effective to the degree they make good decisions regarding code cleanliness. Only shared experience in a particular codebase will lead to consensus. See [[XP and Normative Good]]\n"
      },
      "date": 1584491670992
    },
    {
      "type": "add",
      "id": "0acd20dbf296204d",
      "item": {
        "type": "paragraph",
        "id": "0acd20dbf296204d",
        "text": "# Suprise"
      },
      "after": "318665fe28b178ea",
      "date": 1584492023560
    },
    {
      "type": "edit",
      "id": "0acd20dbf296204d",
      "item": {
        "type": "paragraph",
        "id": "0acd20dbf296204d",
        "text": "# Surprise"
      },
      "date": 1584492049251
    },
    {
      "type": "add",
      "id": "accde9ce02d5a22b",
      "item": {
        "type": "paragraph",
        "id": "accde9ce02d5a22b",
        "text": "While one still turns to the REPL for questions about computer language and Agile iterations for questions of wants and needs, we now find our compounding of services to defy even the most careful analysis. "
      },
      "after": "0acd20dbf296204d",
      "date": 1584493100535
    },
    {
      "type": "add",
      "id": "c256e88a2317fee3",
      "item": {
        "type": "paragraph",
        "id": "c256e88a2317fee3",
        "text": "While we may have imagined orderly layers of abstraction we find from experience that we have instead a tangled, layered network that obeys new socio-technical rules."
      },
      "after": "accde9ce02d5a22b",
      "date": 1584493371914
    },
    {
      "type": "edit",
      "id": "c256e88a2317fee3",
      "item": {
        "type": "paragraph",
        "id": "c256e88a2317fee3",
        "text": "While we may have imagined orderly layers of abstraction we find from experience that we have instead a tangled, layered network that obeys new socio-technical rules. See [[Woods Criteria]]"
      },
      "date": 1584493472482
    },
    {
      "item": {
        "type": "factory",
        "id": "382309d2b154b9e4"
      },
      "id": "382309d2b154b9e4",
      "type": "add",
      "after": "c256e88a2317fee3",
      "date": 1584493742616
    },
    {
      "type": "edit",
      "id": "382309d2b154b9e4",
      "item": {
        "type": "reference",
        "id": "382309d2b154b9e4",
        "site": "norms.ward.asia.wiki.org",
        "slug": "xp-and-normative-good",
        "title": "XP and Normative Good",
        "text": "Extreme Programming (xp) prescribes a dozen practices that reinforce each other so as to allow teams to make software development decisions. We examine the distribution of responsibilities required for, and means to arrive at, good decisions within this framework."
      },
      "date": 1584493747065
    },
    {
      "type": "edit",
      "id": "382309d2b154b9e4",
      "item": {
        "type": "reference",
        "id": "382309d2b154b9e4",
        "site": "norms.ward.asia.wiki.org",
        "slug": "xp-and-normative-good",
        "title": "XP and Normative Good",
        "text": "We compare this document's layers of process, technique and responsibility to Woods ten theorems and find one missing. See [[Synchronization Required]] "
      },
      "date": 1584494148055
    },
    {
      "type": "edit",
      "id": "0acd20dbf296204d",
      "item": {
        "type": "markdown",
        "id": "0acd20dbf296204d",
        "text": "# Surprise"
      },
      "date": 1584494158189
    },
    {
      "type": "edit",
      "id": "382309d2b154b9e4",
      "item": {
        "type": "reference",
        "id": "382309d2b154b9e4",
        "site": "norms.ward.asia.wiki.org",
        "slug": "xp-and-normative-good",
        "title": "XP and Normative Good",
        "text": "We compare this document's layers of process, technique and responsibility to Woods ten theorems and find one missing. See S4, [[Synchronization Required]] "
      },
      "date": 1584494256006
    },
    {
      "item": {
        "type": "factory",
        "id": "61f0006aa81cd119"
      },
      "id": "61f0006aa81cd119",
      "type": "add",
      "after": "382309d2b154b9e4",
      "date": 1584494540733
    },
    {
      "type": "edit",
      "id": "61f0006aa81cd119",
      "item": {
        "type": "paragraph",
        "id": "61f0006aa81cd119",
        "text": "Woods tells us that there is no omniscient point of view. Friston agrees. Todays systems will always surprise. And with each surprise, each incident, we have an opportunity to know more about what we build than we did yesterday. This is the incident-response loop that dominates our age and that is now being perfected."
      },
      "date": 1584545510192
    },
    {
      "type": "edit",
      "id": "61f0006aa81cd119",
      "item": {
        "type": "paragraph",
        "id": "61f0006aa81cd119",
        "text": "Woods tells us that there is no omniscient point of view. Friston agrees. Todays systems will always surprise. And with each surprise, each incident, we have an opportunity to know more about what we build than we did yesterday. This is the incident-response loop that dominates our age and that is now being perfected. See [[Learning from Incidents]]"
      },
      "date": 1584545559648
    },
    {
      "type": "edit",
      "id": "61f0006aa81cd119",
      "item": {
        "type": "paragraph",
        "id": "61f0006aa81cd119",
        "text": "Woods tells us that there is no omniscient point of view. Friston agrees. Todays systems will always surprise. And with each surprise, each incident, we have an opportunity to know more about what we built than we did yesterday. This is the incident-response loop that dominates our age and that is now being perfected. See [[Learning from Incidents]]"
      },
      "date": 1584559250716
    },
    {
      "item": {
        "type": "factory",
        "id": "6579d1b6c7583757"
      },
      "id": "6579d1b6c7583757",
      "type": "add",
      "after": "61f0006aa81cd119",
      "date": 1586307430639
    },
    {
      "type": "edit",
      "id": "6579d1b6c7583757",
      "item": {
        "type": "pagefold",
        "id": "6579d1b6c7583757",
        "text": "."
      },
      "date": 1586307439826
    },
    {
      "item": {
        "type": "factory",
        "id": "53fa885e505b2e4c"
      },
      "id": "53fa885e505b2e4c",
      "type": "add",
      "after": "6579d1b6c7583757",
      "date": 1586307445031
    },
    {
      "type": "edit",
      "id": "53fa885e505b2e4c",
      "item": {
        "type": "paragraph",
        "id": "53fa885e505b2e4c",
        "text": "The event was presented at New Relic the week we became full remote and as a consequence the video is pretty good. My part starts at minute 49 of Chapter 4. I just watched it to be sure it was as I remembered. I come off rather folksy but 1.5x playback will fix that. There is a lot of me in the talk and a lot of our future in there too.\nhttps://bluejeans.com/playback/s/AqClCWY6y9gPe3pqwVIVaOWUMwvQKBYzBRIKJx8XKIHsuXfYN0qfXdf8VVPuiwo9 (edited) "
      },
      "date": 1586307547322
    },
    {
      "type": "edit",
      "id": "53fa885e505b2e4c",
      "item": {
        "type": "paragraph",
        "id": "53fa885e505b2e4c",
        "text": "The event was presented at New Relic the week we became full remote and as a consequence the video is pretty good. My part starts at minute 49 of Chapter 4. I just watched it to be sure it was as I remembered. I come off rather folksy but 1.5x playback will fix that. There is a lot of me in the talk and a lot of our future in there too.\n[https://bluejeans.com/playback/s/AqClCWY6y9gPe3pqwVIVaOWUMwvQKBYzBRIKJx8XKIHsuXfYN0qfXdf8VVPuiwo9 video]"
      },
      "date": 1586307566287
    },
    {
      "type": "edit",
      "id": "53fa885e505b2e4c",
      "item": {
        "type": "paragraph",
        "id": "53fa885e505b2e4c",
        "text": "The event was presented at New Relic the week we became full remote and as a consequence the video is pretty good. My part starts at minute 49 of Chapter 4. I just watched it to be sure it was as I remembered. I come off rather folksy but 1.5x playback will fix that. There is a lot of me there and a lot of our future too.\n[https://bluejeans.com/playback/s/AqClCWY6y9gPe3pqwVIVaOWUMwvQKBYzBRIKJx8XKIHsuXfYN0qfXdf8VVPuiwo9 video]"
      },
      "date": 1586307593322
    },
    {
      "item": {
        "type": "factory",
        "id": "e133572458ac69ae"
      },
      "id": "e133572458ac69ae",
      "type": "add",
      "after": "53fa885e505b2e4c",
      "date": 1597249290963
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter. [Ward\\ Cunningham\\ -\\ Cutter\\ Webinar.mp4 video]"
      },
      "date": 1597249344820
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter. [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 video]"
      },
      "date": 1597249398659
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter. [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 mp4] 500Mb"
      },
      "date": 1597249524546
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter who has made a zoom recording available. [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 mp4] 500Mb"
      },
      "date": 1597249576742
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter who has made a zoom recording available.  500Mb [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 mp4]"
      },
      "date": 1597249591975
    },
    {
      "type": "edit",
      "id": "e133572458ac69ae",
      "item": {
        "type": "paragraph",
        "id": "e133572458ac69ae",
        "text": "I repeated the presentation through Cutter who has made a zoom recording available.  500MB [http://c2.com/wiki/Ward%20Cunningham%20-%20Cutter%20Webinar.mp4 mp4]"
      },
      "date": 1597249605442
    },
    {
      "type": "fork",
      "site": "code.fed.wiki",
      "date": 1602367667869
    },
    {
      "type": "fork",
      "site": "adler.tries.fed.wiki",
      "date": 1609264855863
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1631674527837
    }
  ]
}