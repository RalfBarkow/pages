{
  "title": "Slot",
  "story": [
    {
      "type": "reference",
      "id": "04559edb50c8dbfa",
      "site": "wiki.ralfbarkow.ch",
      "slug": "computational-scripts",
      "title": "Computational Scripts",
      "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of [[Schema]]s as a [[Basis for Mental Representation]] (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a [[Representation]] for common knowledge that is shared by all instances, and a number of [[Slot]]s […]"
    },
    {
      "type": "reference",
      "id": "086d41eb9b37e1e9",
      "site": "mike.dojo.fed.wiki",
      "slug": "representation",
      "title": "Representation",
      "text": "In this wiki we're concerned with means and practices of integrated plural representation: textual, graphical/iconic and algorithmic. And specifically, with federated wiki as a wonderful way of working across this range."
    },
    {
      "type": "reference",
      "id": "09f32d1ad8ae8a65",
      "site": "wiki.ralfbarkow.ch",
      "slug": "trait",
      "title": "Trait",
      "text": "Traits can be composed in arbitrary order. The composite entity (class or trait) …"
    },
    {
      "type": "reference",
      "id": "3d204d5c302fb669",
      "site": "wiki.ralfbarkow.ch",
      "slug": "traits",
      "title": "Traits",
      "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait composition mechanism is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
    },
    {
      "type": "reference",
      "id": "f13a30584f16d1b4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "trait-composition-mechanism",
      "title": "Trait Composition Mechanism",
      "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup] ⇒ Slot"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Slot",
        "story": []
      },
      "date": 1673876939189
    },
    {
      "id": "04559edb50c8dbfa",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "04559edb50c8dbfa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "computational-scripts",
        "title": "Computational Scripts",
        "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of [[Slot]]s […]"
      },
      "date": 1673876947769
    },
    {
      "type": "edit",
      "id": "04559edb50c8dbfa",
      "item": {
        "type": "reference",
        "id": "04559edb50c8dbfa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "computational-scripts",
        "title": "Computational Scripts",
        "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a [[Basis for Mental Representation]] (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of [[Slot]]s […]"
      },
      "date": 1673876976743
    },
    {
      "type": "edit",
      "id": "04559edb50c8dbfa",
      "item": {
        "type": "reference",
        "id": "04559edb50c8dbfa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "computational-scripts",
        "title": "Computational Scripts",
        "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of [[Schema]]s as a [[Basis for Mental Representation]] (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of [[Slot]]s […]"
      },
      "date": 1673877005269
    },
    {
      "item": {
        "type": "factory",
        "id": "086d41eb9b37e1e9"
      },
      "id": "086d41eb9b37e1e9",
      "type": "add",
      "after": "04559edb50c8dbfa",
      "date": 1673879593330
    },
    {
      "type": "edit",
      "id": "086d41eb9b37e1e9",
      "item": {
        "type": "reference",
        "id": "086d41eb9b37e1e9",
        "site": "mike.dojo.fed.wiki",
        "slug": "representation",
        "title": "Representation",
        "text": "In this wiki we're concerned with means and practices of integrated plural representation: textual, graphical/iconic and algorithmic. And specifically, with federated wiki as a wonderful way of working across this range."
      },
      "date": 1673879603322
    },
    {
      "type": "edit",
      "id": "04559edb50c8dbfa",
      "item": {
        "type": "reference",
        "id": "04559edb50c8dbfa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "computational-scripts",
        "title": "Computational Scripts",
        "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of [[Schema]]s as a [[Basis for Mental Representation]] (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a [[Representation]] for common knowledge that is shared by all instances, and a number of [[Slot]]s […]"
      },
      "date": 1673879646034
    },
    {
      "item": {
        "type": "factory",
        "id": "09f32d1ad8ae8a65"
      },
      "id": "09f32d1ad8ae8a65",
      "type": "add",
      "after": "086d41eb9b37e1e9",
      "date": 1673880627722
    },
    {
      "type": "edit",
      "id": "09f32d1ad8ae8a65",
      "item": {
        "type": "reference",
        "id": "09f32d1ad8ae8a65",
        "site": "wiki.ralfbarkow.ch",
        "slug": "trait",
        "title": "Trait",
        "text": "Traits can be composed in arbitrary order. The composite entity (class or trait)"
      },
      "date": 1673880629883
    },
    {
      "item": {
        "type": "factory",
        "id": "3d204d5c302fb669"
      },
      "id": "3d204d5c302fb669",
      "type": "add",
      "after": "09f32d1ad8ae8a65",
      "date": 1673880640453
    },
    {
      "type": "edit",
      "id": "3d204d5c302fb669",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other **traits**. The trait composition mechanism is an alternative to multiple or mixin inheritance in which **the composer has full control over the trait composition**. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "date": 1673880643723
    },
    {
      "type": "edit",
      "id": "09f32d1ad8ae8a65",
      "item": {
        "type": "reference",
        "id": "09f32d1ad8ae8a65",
        "site": "wiki.ralfbarkow.ch",
        "slug": "trait",
        "title": "Trait",
        "text": "Traits can be composed in arbitrary order. The composite entity (class or trait) …"
      },
      "date": 1673880680840
    },
    {
      "type": "edit",
      "id": "3d204d5c302fb669",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait composition mechanism is an alternative to multiple or mixin inheritance in which **the composer has full control over the trait composition**. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "date": 1673880701777
    },
    {
      "type": "edit",
      "id": "3d204d5c302fb669",
      "item": {
        "type": "reference",
        "id": "3d204d5c302fb669",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits",
        "title": "Traits",
        "text": "Traits are pure units of [[Behavior]] that can be composed to form classes or other traits. The trait composition mechanism is an alternative to multiple or mixin inheritance in which the composer has full control over the trait composition. It enables more reuse than single inheritance without introducing the drawbacks of multiple or mixin inheritance. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Traits.md#traits page]"
      },
      "date": 1673880715098
    },
    {
      "item": {
        "type": "factory",
        "id": "f13a30584f16d1b4"
      },
      "id": "f13a30584f16d1b4",
      "type": "add",
      "after": "3d204d5c302fb669",
      "date": 1673881856233
    },
    {
      "type": "edit",
      "id": "f13a30584f16d1b4",
      "item": {
        "type": "reference",
        "id": "f13a30584f16d1b4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "trait-composition-mechanism",
        "title": "Trait Composition Mechanism",
        "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup] ⇒ [[Slot]]"
      },
      "date": 1673881858964
    },
    {
      "type": "edit",
      "id": "f13a30584f16d1b4",
      "item": {
        "type": "reference",
        "id": "f13a30584f16d1b4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "trait-composition-mechanism",
        "title": "Trait Composition Mechanism",
        "text": "[https://wiki.ralfbarkow.ch/view/properties-of-parallel-distributed-models/view/representation/view/generalization/view/learn/view/slot/view/fact-modeling/view/network/view/code/view/pattern/view/cancel lineup] ⇒ Slot"
      },
      "date": 1673884756472
    }
  ]
}