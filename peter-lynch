{
  "title": "Peter Lynch",
  "story": [
    {
      "type": "html",
      "text": "I am a programmer who has written a few successful commercial applications in payroll/HR, [[Configuration Management]] and Manufacturing.",
      "id": "1efb4d1f8f66289b3c67e098a52a3f59"
    },
    {
      "type": "html",
      "text": "\nI come up as INTP on [[Myers Briggs]], and Idealist (NF) on [http://www.advisorteam.com/temperament_sorter/ www.advisorteam.com].",
      "id": "f26ce53e359d1dd4b0dfacbb69b1e268"
    },
    {
      "type": "html",
      "text": "\nI am interested in the techniques of system's development generally.",
      "id": "23534c6585a5c4fbcb5c4cf14effe769"
    },
    {
      "type": "html",
      "text": "\nI was described once as an iconoclast who considers IBM ante-deluvian. I like that.",
      "id": "0f7a3bc85894c429e07165c83fe2bd45"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "83d9c2d2289590155cb9b5ffb93d84cc"
    },
    {
      "type": "code",
      "text": " I like Revelation. (1)\n I like Open Insight. (1)\n I like Pick. (1)(conceptually)\n I like Adabas DB (1)\n I like Natural \n I like CobolLanguage\n I like Primos CPL. (1)\n I like FortranLanguage\n I like NEAT/3 (AssemblerLanguage)\n I like RSTS Basic Plus. (1)\n I like ISPF/2 and CLIST and PDFs. TSO and its services. (1)(Believe it or not)\n I like DelphiLanguage\n I like TotalDataBase (1)\n I like SupraDataBase (1)\n I like IDMS\n I like VSAM\n I like VMS, RSTS, DOS, CP/M, MASTER, NOS, MVS, UNIX et al,\n I like RebolLanguage (1)\n I like RubyLanguage (1)\n I like WebSphere (1)",
      "id": "29f3940fc554f4c2f59b9dbd6e9d835d"
    },
    {
      "type": "code",
      "text": " There are distinguishing points about each of these.",
      "id": "fe162d02d2b7d7226315470cd98319c2"
    },
    {
      "type": "code",
      "text": " These are all solutions to the same problem - communicating effectively with a computer.\n They are all quite different.\n They must have something in common.",
      "id": "21d42d45be3c550bd60710a629311374"
    },
    {
      "type": "code",
      "text": "   (1) These have the JoyfulSoftwareEthic IMHO",
      "id": "f33e0b108c92f412f19336d47db69764"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "83d9c2d2289590155cb9b5ffb93d84cc"
    },
    {
      "type": "html",
      "text": "\nSaw your remarks in [[Kai Zen]] page some time ago and wonder whether you have more to add there, like whether it is a fad that passed away at the sites you know of? Or better, some success stories that last.",
      "id": "2ca0d353608af9abee2027d94a62d85d"
    },
    {
      "type": "html",
      "text": "<i> I could not write a good summary of the book. What it did for me was cement a belief I held for a while, and this belief was at the time the reason I was succeeding technically. This idea of stopping the entire production line when an exception occurs - effectively, whatever is started will succeed, or all bets are off.</i>",
      "id": "b78e8dc78470889a11875e2ee6f242ad"
    },
    {
      "type": "html",
      "text": "<i> I believed that there should be no error paths in application code. This is the same philosophy - if a process is triggered, it either succeeds in doing what it is supposed to do, or the entire process tree halts - drops into an error state. I had written code to do this in the applications I was building at the time.</i>",
      "id": "a68001811d33fa551fa02a968f16167e"
    },
    {
      "type": "html",
      "text": "<i> Doing this makes a process invocation an assertion - any exception generated within can be handled by an external error processor</i>",
      "id": "e8574bf5efe67e248be5246514e6bb97"
    },
    {
      "type": "html",
      "text": "<i> (I like the refactoring of this page above - thankyou)</i> -- me",
      "id": "e57046f9cf50b1781d9ed1db33ede5ac"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "83d9c2d2289590155cb9b5ffb93d84cc"
    },
    {
      "type": "html",
      "text": "Wiki at [http://sites.google.com/site/argnosis/ sites.google.com]",
      "id": "de4affbf949862f539ec9b454839c419"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "83d9c2d2289590155cb9b5ffb93d84cc"
    },
    {
      "type": "html",
      "text": "[[Category Home Page]]",
      "id": "8e14012ee65166b379f2f4835962a49d"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?PeterLynch c2.com]",
      "id": "6427c71b964a4768ba88e892511102bc"
    }
  ],
  "journal": [
    {
      "date": 1318985960000,
      "id": "d4f9f2d6949aa5e7c0edee8319c7178b",
      "type": "create",
      "item": {
        "title": "Peter Lynch",
        "story": [
          {
            "type": "html",
            "text": "I am a programmer who has written a few successful commercial applications in payroll/HR, [[Configuration Management]] and Manufacturing.",
            "id": "1efb4d1f8f66289b3c67e098a52a3f59"
          },
          {
            "type": "html",
            "text": "\nI come up as INTP on [[Myers Briggs]], and Idealist (NF) on [http://www.advisorteam.com/temperament_sorter/ www.advisorteam.com].",
            "id": "f26ce53e359d1dd4b0dfacbb69b1e268"
          },
          {
            "type": "html",
            "text": "\nI am interested in the techniques of system's development generally.",
            "id": "23534c6585a5c4fbcb5c4cf14effe769"
          },
          {
            "type": "html",
            "text": "\nI was described once as an iconoclast who considers IBM ante-deluvian. I like that.",
            "id": "0f7a3bc85894c429e07165c83fe2bd45"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "83d9c2d2289590155cb9b5ffb93d84cc"
          },
          {
            "type": "code",
            "text": " I like Revelation. (1)\n I like Open Insight. (1)\n I like Pick. (1)(conceptually)\n I like Adabas DB (1)\n I like Natural \n I like CobolLanguage\n I like Primos CPL. (1)\n I like FortranLanguage\n I like NEAT/3 (AssemblerLanguage)\n I like RSTS Basic Plus. (1)\n I like ISPF/2 and CLIST and PDFs. TSO and its services. (1)(Believe it or not)\n I like DelphiLanguage\n I like TotalDataBase (1)\n I like SupraDataBase (1)\n I like IDMS\n I like VSAM\n I like VMS, RSTS, DOS, CP/M, MASTER, NOS, MVS, UNIX et al,\n I like RebolLanguage (1)\n I like RubyLanguage (1)\n I like WebSphere (1)",
            "id": "29f3940fc554f4c2f59b9dbd6e9d835d"
          },
          {
            "type": "code",
            "text": " There are distinguishing points about each of these.",
            "id": "fe162d02d2b7d7226315470cd98319c2"
          },
          {
            "type": "code",
            "text": " These are all solutions to the same problem - communicating effectively with a computer.\n They are all quite different.\n They must have something in common.",
            "id": "21d42d45be3c550bd60710a629311374"
          },
          {
            "type": "code",
            "text": "   (1) These have the JoyfulSoftwareEthic IMHO",
            "id": "f33e0b108c92f412f19336d47db69764"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "83d9c2d2289590155cb9b5ffb93d84cc"
          },
          {
            "type": "html",
            "text": "\nSaw your remarks in [[Kai Zen]] page some time ago and wonder whether you have more to add there, like whether it is a fad that passed away at the sites you know of? Or better, some success stories that last.",
            "id": "2ca0d353608af9abee2027d94a62d85d"
          },
          {
            "type": "html",
            "text": "<i> I could not write a good summary of the book. What it did for me was cement a belief I held for a while, and this belief was at the time the reason I was succeeding technically. This idea of stopping the entire production line when an exception occurs - effectively, whatever is started will succeed, or all bets are off.</i>",
            "id": "b78e8dc78470889a11875e2ee6f242ad"
          },
          {
            "type": "html",
            "text": "<i> I believed that there should be no error paths in application code. This is the same philosophy - if a process is triggered, it either succeeds in doing what it is supposed to do, or the entire process tree halts - drops into an error state. I had written code to do this in the applications I was building at the time.</i>",
            "id": "a68001811d33fa551fa02a968f16167e"
          },
          {
            "type": "html",
            "text": "<i> Doing this makes a process invocation an assertion - any exception generated within can be handled by an external error processor</i>",
            "id": "e8574bf5efe67e248be5246514e6bb97"
          },
          {
            "type": "html",
            "text": "<i> (I like the refactoring of this page above - thankyou)</i> -- me",
            "id": "e57046f9cf50b1781d9ed1db33ede5ac"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "83d9c2d2289590155cb9b5ffb93d84cc"
          },
          {
            "type": "html",
            "text": "Wiki at [http://sites.google.com/site/argnosis/ sites.google.com]",
            "id": "de4affbf949862f539ec9b454839c419"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "83d9c2d2289590155cb9b5ffb93d84cc"
          },
          {
            "type": "html",
            "text": "[[Category Home Page]]",
            "id": "8e14012ee65166b379f2f4835962a49d"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?PeterLynch c2.com]",
            "id": "6427c71b964a4768ba88e892511102bc"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1674056104260
    }
  ]
}