{
  "title": "Deno Versions",
  "story": [
    {
      "type": "paragraph",
      "id": "cd39ea53c82473fd",
      "text": "On this page we reflect on the trade offs associated with the various options for managing the version of Deno used in denowiki."
    },
    {
      "type": "paragraph",
      "id": "b363ce0fe5db713e",
      "text": "Stability"
    },
    {
      "type": "paragraph",
      "id": "03cd47720086949c",
      "text": "Deno's APIs are not yet stable. Some examples are noted."
    },
    {
      "type": "paragraph",
      "id": "45f42c43e1566098",
      "text": "v0.30.0 does not have the encoding/base32 library."
    },
    {
      "type": "paragraph",
      "id": "ed059094355b587d",
      "text": "v0.30.0 does not have the posix library (or its location is different)."
    },
    {
      "type": "paragraph",
      "id": "f207c9c9dcebf059",
      "text": "v0.34.0 references Deno.errors which does not exist in v0.35.0."
    },
    {
      "type": "paragraph",
      "id": "29122c9e8421ddca",
      "text": "v0.35.0 does not have Deno.ErrorKind"
    },
    {
      "type": "paragraph",
      "id": "66ad844ec7214631",
      "text": "Two Problems"
    },
    {
      "type": "paragraph",
      "id": "0dc7fc02014f3678",
      "text": "The lack of API stability complicates development and usage of denowiki as we need to be sure all of our dependencies and all of our users are using the same version of Deno."
    },
    {
      "type": "paragraph",
      "id": "03530c4d78ed686a",
      "text": "This is further complicated by a proliferation of version references in the source code and inconsistencies in which version of Deno is installed using the default installation instructions."
    },
    {
      "type": "paragraph",
      "id": "9caa40b86432a764",
      "text": "We will discuss each in turn."
    },
    {
      "type": "paragraph",
      "id": "7b86e1601a06f29d",
      "text": "Proliferation of references to versions"
    },
    {
      "type": "paragraph",
      "id": "a99a1f83e54dc843",
      "text": "Importing by URLs that include embedded versions results in a large number of files needing to be updated with each Deno version bump."
    },
    {
      "type": "paragraph",
      "id": "eda45005af222752",
      "text": "Static imports require a string literal so a string template cannot be used to reference an imported constant when importing a Deno dependency."
    },
    {
      "type": "paragraph",
      "id": "b19a65d2240a9be4",
      "text": "Switching to the import function everywhere may be a workaround, but does not feel idiomatic to the language."
    },
    {
      "type": "paragraph",
      "id": "f689b5810d7a30d0",
      "text": "Using unversioned URLs avoids the need to update URLs, but at the cost of requiring all developers to be diligent in staying up to date. Otherwise, we risk things working for some contributors and not others depending on when they last refreshed their cached dependencies."
    },
    {
      "type": "paragraph",
      "id": "77c81ee165cc93c7",
      "text": "It also requires that the project stay on the latest version of Deno as the moment a new version is published, it will be used by all new installs or refreshes of existing installs. We lose control of when we upgrade our Deno version."
    },
    {
      "type": "paragraph",
      "id": "4d30882af4df63ef",
      "text": "An alternative here is to vendor our dependencies. This could be done by embedding a copy of the Deno dependencies directly in the project, by hosting a copy ourselves in a location controlled by the project, or by running a URL redirection service pointing to the version we want used."
    },
    {
      "type": "paragraph",
      "id": "7486dcce3474facf",
      "text": "This is far more work for us, but does have the advantage of allowing us to use unversioned URLs whose upgrade pace is controlled by us."
    },
    {
      "type": "paragraph",
      "id": "6ca207b2f48accc9",
      "text": "A lighter weight vendoring approach would be to create a top level file containing the imports of all Deno dependencies. All files in the project would then import the subset they need from this."
    },
    {
      "type": "paragraph",
      "id": "02091bb2b27f6558",
      "text": "This centralizes where the imports are stored, is compatible with the idiomatic form of normal imports, and still allows us to reference a specific version of Deno dependencies without proliferating them over the codebase."
    },
    {
      "type": "paragraph",
      "id": "1b3a9ffa0e3cabd2",
      "text": "The downside is that it requires that all files in the project import this file which is a bit messy and all but eliminates the possibility of being able to write meta-sites and meta-pages without importing anything from the denowiki project."
    },
    {
      "type": "paragraph",
      "id": "0ae7f99d5f24b088",
      "text": "Default Deno Install Instructions"
    },
    {
      "type": "paragraph",
      "id": "1b2ccc3b3a5b40e7",
      "text": "The default Deno install instructions result in different versions being installed on different platforms."
    },
    {
      "type": "paragraph",
      "id": "33ee71522054d73a",
      "text": "At the time of this writing Powershell results in v0.35.0 being installed while brew installs v0.34.0. [https://formulae.brew.sh/formula/deno brew]"
    },
    {
      "type": "paragraph",
      "id": "88217f82cd7c03eb",
      "text": "Options"
    },
    {
      "type": "paragraph",
      "id": "8bdfaa0d276f4236",
      "text": "The majority of users run macOS. When upgrading, it makes sense to only target versions installable by brew (at least while this remains true)."
    },
    {
      "type": "paragraph",
      "id": "57ec2e1e60105fba",
      "text": "Alternatively, we could recommend everyone use a shell / powershell based installation mechanism as it appears to be able to install the latest version of Deno. [https://deno.land/x/install/ web]"
    },
    {
      "type": "paragraph",
      "id": "38da502031ce1d9b",
      "text": "It also reduces the number of distinct packages that need to be updated before a specific version of Deno can be installed across all supported operating systems."
    },
    {
      "type": "paragraph",
      "id": "daf96531596b6ed0",
      "text": "Regardless of the version chosen, our README should name the version required and provide instructions on how to install that version on all supported operating systems (at least until the instructions for installing the latest version of Deno result in the same version being installed across operating systems or the Deno API stabilizes)."
    },
    {
      "type": "paragraph",
      "id": "6e18407c97390c7a",
      "text": "See [[Deno vs NPM]] for a comparison of their approaches to package management."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Deno Versions",
        "story": []
      },
      "date": 1583070685432
    },
    {
      "item": {
        "type": "factory",
        "id": "cd39ea53c82473fd"
      },
      "id": "cd39ea53c82473fd",
      "type": "add",
      "date": 1583070686870
    },
    {
      "type": "edit",
      "id": "cd39ea53c82473fd",
      "item": {
        "type": "paragraph",
        "id": "cd39ea53c82473fd",
        "text": "On this page we reflect on the trade offs associated with the various options for managing the version of Deno used in denowiki."
      },
      "date": 1583070775139
    },
    {
      "type": "add",
      "id": "7b86e1601a06f29d",
      "item": {
        "type": "paragraph",
        "id": "7b86e1601a06f29d",
        "text": "Proliferation of references to versions"
      },
      "after": "cd39ea53c82473fd",
      "date": 1583070788821
    },
    {
      "type": "add",
      "id": "a99a1f83e54dc843",
      "item": {
        "type": "paragraph",
        "id": "a99a1f83e54dc843",
        "text": "Importing by URLs results that include embedded versions results in a large number of files needing to be updated with each Deno version bump."
      },
      "after": "7b86e1601a06f29d",
      "date": 1583070867958
    },
    {
      "type": "add",
      "id": "eda45005af222752",
      "item": {
        "type": "paragraph",
        "id": "eda45005af222752",
        "text": "Static imports require a string literal so a string template cannot be used to reference an imported constant when importing a Deno dependency."
      },
      "after": "a99a1f83e54dc843",
      "date": 1583070931915
    },
    {
      "type": "add",
      "id": "b363ce0fe5db713e",
      "item": {
        "type": "paragraph",
        "id": "b363ce0fe5db713e",
        "text": "Stability"
      },
      "after": "cd39ea53c82473fd",
      "date": 1583070938644
    },
    {
      "type": "add",
      "id": "03cd47720086949c",
      "item": {
        "type": "paragraph",
        "id": "03cd47720086949c",
        "text": "Deno's APIs are not yet stable. Some examples are noted."
      },
      "after": "b363ce0fe5db713e",
      "date": 1583070963508
    },
    {
      "type": "add",
      "id": "45f42c43e1566098",
      "item": {
        "type": "paragraph",
        "id": "45f42c43e1566098",
        "text": "v0.30.0 does not have the encoding/base32 library."
      },
      "after": "03cd47720086949c",
      "date": 1583070984116
    },
    {
      "type": "add",
      "id": "ed059094355b587d",
      "item": {
        "type": "paragraph",
        "id": "ed059094355b587d",
        "text": "v.30.0 does not have the posix library (or its location is different."
      },
      "after": "45f42c43e1566098",
      "date": 1583071007210
    },
    {
      "type": "edit",
      "id": "ed059094355b587d",
      "item": {
        "type": "paragraph",
        "id": "ed059094355b587d",
        "text": "v0.30.0 does not have the posix library (or its location is different."
      },
      "date": 1583071020901
    },
    {
      "type": "add",
      "id": "f207c9c9dcebf059",
      "item": {
        "type": "paragraph",
        "id": "f207c9c9dcebf059",
        "text": "v0.34.0 References"
      },
      "after": "ed059094355b587d",
      "date": 1583071038078
    },
    {
      "type": "edit",
      "id": "f207c9c9dcebf059",
      "item": {
        "type": "paragraph",
        "id": "f207c9c9dcebf059",
        "text": "v0.34.0 references Deno.errors which does not exist in v0.35.0."
      },
      "date": 1583071063600
    },
    {
      "type": "add",
      "id": "29122c9e8421ddca",
      "item": {
        "type": "paragraph",
        "id": "29122c9e8421ddca",
        "text": "v0.35.0 does not have Deno.ErrorKind"
      },
      "after": "f207c9c9dcebf059",
      "date": 1583071083909
    },
    {
      "type": "add",
      "id": "0ae7f99d5f24b088",
      "item": {
        "type": "paragraph",
        "id": "0ae7f99d5f24b088",
        "text": "Default Deno Install Instructions"
      },
      "after": "eda45005af222752",
      "date": 1583071102531
    },
    {
      "type": "add",
      "id": "1b2ccc3b3a5b40e7",
      "item": {
        "type": "paragraph",
        "id": "1b2ccc3b3a5b40e7",
        "text": "The default Deno install instructions result in different versions being installed on different platforms."
      },
      "after": "0ae7f99d5f24b088",
      "date": 1583071132209
    },
    {
      "type": "add",
      "id": "33ee71522054d73a",
      "item": {
        "type": "paragraph",
        "id": "33ee71522054d73a",
        "text": "At the time of this writing Powershell results in v0.35.0 being installed while brew installs v0.34.0."
      },
      "after": "1b2ccc3b3a5b40e7",
      "date": 1583071165726
    },
    {
      "type": "add",
      "id": "b19a65d2240a9be4",
      "item": {
        "type": "paragraph",
        "id": "b19a65d2240a9be4",
        "text": "Switching to the import function everywhere may be a workaround, but does not feel idiomatic to the language."
      },
      "after": "eda45005af222752",
      "date": 1583071202554
    },
    {
      "type": "add",
      "id": "88217f82cd7c03eb",
      "item": {
        "type": "paragraph",
        "id": "88217f82cd7c03eb",
        "text": "Options"
      },
      "after": "33ee71522054d73a",
      "date": 1583071212152
    },
    {
      "type": "add",
      "id": "8bdfaa0d276f4236",
      "item": {
        "type": "paragraph",
        "id": "8bdfaa0d276f4236",
        "text": "The majority of users run macOS. When upgrading, it makes sense to only target versions installable by brew."
      },
      "after": "88217f82cd7c03eb",
      "date": 1583071353700
    },
    {
      "type": "add",
      "id": "daf96531596b6ed0",
      "item": {
        "type": "paragraph",
        "id": "daf96531596b6ed0",
        "text": "Regardless of the version chosen, our README should name the version required and provide instructions on how to install that version on all supported operating systems (at least until the instructions for installing the latest version of Deno result in the same version being installed across operating systems or the Deno API stabilizes)."
      },
      "after": "8bdfaa0d276f4236",
      "date": 1583071463213
    },
    {
      "type": "add",
      "id": "57ec2e1e60105fba",
      "item": {
        "type": "paragraph",
        "id": "57ec2e1e60105fba",
        "text": "Alternatively, we could recommend everyone use a shell / powershell based installation mechanism as it appears to be able to install the latest version of Deno. It also reduces the number of distinct packages that need to be updated before a specific version of Deno can be installed across all supported operating systems."
      },
      "after": "8bdfaa0d276f4236",
      "date": 1583071621441
    },
    {
      "type": "add",
      "id": "f689b5810d7a30d0",
      "item": {
        "type": "paragraph",
        "id": "f689b5810d7a30d0",
        "text": "Using unversioned URLs avoids the need to update URLs, but at the cost of requiring all developers to be diligent in staying up to date. Otherwise, we risk things working for some contributors and not others depending on when they last refreshed their cached dependencies."
      },
      "after": "b19a65d2240a9be4",
      "date": 1583071781675
    },
    {
      "type": "add",
      "id": "77c81ee165cc93c7",
      "item": {
        "type": "paragraph",
        "id": "77c81ee165cc93c7",
        "text": "It also requires that the project stay on the latest version of Deno as the moment a new version is published, it will be used by all new installs or refreshes of existing installs. We lose control of when we upgrade our Deno version."
      },
      "after": "f689b5810d7a30d0",
      "date": 1583071944570
    },
    {
      "type": "add",
      "id": "4d30882af4df63ef",
      "item": {
        "type": "paragraph",
        "id": "4d30882af4df63ef",
        "text": "An alternative here is to vendor our dependencies. This could be done by embedding a copy of the Deno dependencies directly in the project or by hosting a copy ourselves in a location controlled by the project."
      },
      "after": "77c81ee165cc93c7",
      "date": 1583072067004
    },
    {
      "type": "add",
      "id": "7486dcce3474facf",
      "item": {
        "type": "paragraph",
        "id": "7486dcce3474facf",
        "text": "This is far more work for us, but does have the advantage of allowing us to use unversioned URLs whose upgrade pace is controlled by us."
      },
      "after": "4d30882af4df63ef",
      "date": 1583072128865
    },
    {
      "type": "add",
      "id": "66ad844ec7214631",
      "item": {
        "type": "paragraph",
        "id": "66ad844ec7214631",
        "text": "Two Problems"
      },
      "after": "29122c9e8421ddca",
      "date": 1583072150172
    },
    {
      "type": "add",
      "id": "0dc7fc02014f3678",
      "item": {
        "type": "paragraph",
        "id": "0dc7fc02014f3678",
        "text": "The lack of API stability complicates development and usage of denowiki as we need to be sure all of our dependencies and all of our users are using the same version of Deno."
      },
      "after": "66ad844ec7214631",
      "date": 1583072234674
    },
    {
      "type": "add",
      "id": "03530c4d78ed686a",
      "item": {
        "type": "paragraph",
        "id": "03530c4d78ed686a",
        "text": "This is complicated by a proliferation of version references in the source code and inconsistencies in which version of Deno is installed using the default installation instructions."
      },
      "after": "0dc7fc02014f3678",
      "date": 1583072286172
    },
    {
      "type": "add",
      "id": "9caa40b86432a764",
      "item": {
        "type": "paragraph",
        "id": "9caa40b86432a764",
        "text": "We will discuss each in turn."
      },
      "after": "03530c4d78ed686a",
      "date": 1583072301312
    },
    {
      "type": "edit",
      "id": "33ee71522054d73a",
      "item": {
        "type": "paragraph",
        "id": "33ee71522054d73a",
        "text": "At the time of this writing Powershell results in v0.35.0 being installed while brew installs v0.34.0. [https://formulae.brew.sh/formula/deno brew]"
      },
      "date": 1583072455681
    },
    {
      "type": "edit",
      "id": "57ec2e1e60105fba",
      "item": {
        "type": "paragraph",
        "id": "57ec2e1e60105fba",
        "text": "Alternatively, we could recommend everyone use a shell / powershell based installation mechanism as it appears to be able to install the latest version of Deno. [https://deno.land/x/install/ web]"
      },
      "date": 1583072497672
    },
    {
      "type": "add",
      "id": "38da502031ce1d9b",
      "item": {
        "type": "paragraph",
        "id": "38da502031ce1d9b",
        "text": "It also reduces the number of distinct packages that need to be updated before a specific version of Deno can be installed across all supported operating systems."
      },
      "after": "57ec2e1e60105fba",
      "date": 1583072500159
    },
    {
      "type": "add",
      "id": "6e18407c97390c7a",
      "item": {
        "type": "paragraph",
        "id": "6e18407c97390c7a",
        "text": "Comparisons of Deno's Approach with NPM"
      },
      "after": "daf96531596b6ed0",
      "date": 1583072659459
    },
    {
      "type": "edit",
      "id": "6e18407c97390c7a",
      "item": {
        "type": "paragraph",
        "id": "6e18407c97390c7a",
        "text": "See [[Deno vs NPM]] for a comparison of their approaches to package management."
      },
      "date": 1583072753756
    },
    {
      "type": "add",
      "id": "6ca207b2f48accc9",
      "item": {
        "type": "paragraph",
        "id": "6ca207b2f48accc9",
        "text": "A lighter weight vendoring approach would be to create a top level file containing the imports of all deno dependencies. All files in the project would then import the subset they need from this."
      },
      "after": "7486dcce3474facf",
      "date": 1583073861984
    },
    {
      "type": "add",
      "id": "02091bb2b27f6558",
      "item": {
        "type": "paragraph",
        "id": "02091bb2b27f6558",
        "text": "This centralizes where the imports are stored, is compatible with the idiomatic form of normal imports and still allows us to reference a specific version of Deno dependencies without proliferating them over the codebase."
      },
      "after": "6ca207b2f48accc9",
      "date": 1583073863725
    },
    {
      "type": "add",
      "id": "1b3a9ffa0e3cabd2",
      "item": {
        "type": "paragraph",
        "id": "1b3a9ffa0e3cabd2",
        "text": "The downside is that it requires that all files in the project import this file which is a bit messy and all but eliminates the possibility of being able to write meta-sites and meta-pages without importing anything from the denowiki project."
      },
      "after": "02091bb2b27f6558",
      "date": 1583073964825
    },
    {
      "type": "edit",
      "id": "02091bb2b27f6558",
      "item": {
        "type": "paragraph",
        "id": "02091bb2b27f6558",
        "text": "This centralizes where the imports are stored, is compatible with the idiomatic form of normal imports, and still allows us to reference a specific version of Deno dependencies without proliferating them over the codebase."
      },
      "date": 1583074031409
    },
    {
      "type": "edit",
      "id": "ed059094355b587d",
      "item": {
        "type": "paragraph",
        "id": "ed059094355b587d",
        "text": "v0.30.0 does not have the posix library (or its location is different)."
      },
      "date": 1583074145994
    },
    {
      "type": "edit",
      "id": "03530c4d78ed686a",
      "item": {
        "type": "paragraph",
        "id": "03530c4d78ed686a",
        "text": "This is further complicated by a proliferation of version references in the source code and inconsistencies in which version of Deno is installed using the default installation instructions."
      },
      "date": 1583074192700
    },
    {
      "type": "edit",
      "id": "a99a1f83e54dc843",
      "item": {
        "type": "paragraph",
        "id": "a99a1f83e54dc843",
        "text": "Importing by URLs that include embedded versions results in a large number of files needing to be updated with each Deno version bump."
      },
      "date": 1583074213107
    },
    {
      "type": "edit",
      "id": "6ca207b2f48accc9",
      "item": {
        "type": "paragraph",
        "id": "6ca207b2f48accc9",
        "text": "A lighter weight vendoring approach would be to create a top level file containing the imports of all Deno dependencies. All files in the project would then import the subset they need from this."
      },
      "date": 1583074315503
    },
    {
      "type": "edit",
      "id": "8bdfaa0d276f4236",
      "item": {
        "type": "paragraph",
        "id": "8bdfaa0d276f4236",
        "text": "The majority of users run macOS. When upgrading, it makes sense to only target versions installable by brew (at least while this remains true)."
      },
      "date": 1583074391139
    },
    {
      "type": "edit",
      "id": "4d30882af4df63ef",
      "item": {
        "type": "paragraph",
        "id": "4d30882af4df63ef",
        "text": "An alternative here is to vendor our dependencies. This could be done by embedding a copy of the Deno dependencies directly in the project, by hosting a copy ourselves in a location controlled by the project, or by running a URL redirection service pointing to the version we want used."
      },
      "date": 1583075478704
    },
    {
      "type": "fork",
      "site": "fed.wiki.randombits.xyz",
      "date": 1583097197482
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1636549184640
    }
  ]
}