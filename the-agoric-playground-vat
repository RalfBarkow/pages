{
  "title": "The Agoric \"Playground\" Vat",
  "story": [
    {
      "type": "markdown",
      "id": "0ccbc670d59d51b4",
      "text": "This repository contains a proof-of-concept implementation for our distributed smart contracts system. Contracts are written in SES, a secure subset of JavaScript. SES programs are deployed in vats, a runtime that operates consistently across single \"solo\" machines, permissioned/quorum clusters, or public blockchains. This proof-of-concept demonstrates the \"solo\" and \"quorum\" vats executing in independent machines and processes, communicating securely using ocap protocols.\n\n"
    },
    {
      "type": "markdown",
      "id": "adaf6a644ee01fee",
      "text": "The example contracts are taken from Distributed Electronic Rights in JavaScript. The SES runtime is enhanced so that it runs deterministically, and supports replicated [[consensus]] execution, in which a quorum of [[replicas]] must agree upon an order of incoming messages. The secure data connections are implemented using libp2p."
    },
    {
      "type": "markdown",
      "id": "649ff6d75ede51e4",
      "text": "# How to get going \n\n[https://github.com/Agoric/PlaygroundVat/ Playground]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "The Agoric \"Playground\" Vat",
        "story": []
      },
      "date": 1537986652243
    },
    {
      "item": {
        "type": "factory",
        "id": "0ccbc670d59d51b4"
      },
      "id": "0ccbc670d59d51b4",
      "type": "add",
      "date": 1537986654223
    },
    {
      "type": "edit",
      "id": "0ccbc670d59d51b4",
      "item": {
        "type": "markdown",
        "id": "0ccbc670d59d51b4",
        "text": "This repository contains a proof-of-concept implementation for our distributed smart contracts system. Contracts are written in SES, a secure subset of JavaScript. SES programs are deployed in vats, a runtime that operates consistently across single \"solo\" machines, permissioned/quorum clusters, or public blockchains. This proof-of-concept demonstrates the \"solo\" and \"quorum\" vats executing in independent machines and processes, communicating securely using ocap protocols.\n\nThe example contracts are taken from Distributed Electronic Rights in JavaScript. The SES runtime is enhanced so that it runs deterministically, and supports replicated consensus execution, in which a quorum of replicas must agree upon an order of incoming messages. The secure data connections are implemented using libp2p."
      },
      "date": 1537986673727
    },
    {
      "type": "edit",
      "id": "0ccbc670d59d51b4",
      "item": {
        "type": "markdown",
        "id": "0ccbc670d59d51b4",
        "text": "This repository contains a proof-of-concept implementation for our distributed smart contracts system. Contracts are written in SES, a secure subset of JavaScript. SES programs are deployed in vats, a runtime that operates consistently across single \"solo\" machines, permissioned/quorum clusters, or public blockchains. This proof-of-concept demonstrates the \"solo\" and \"quorum\" vats executing in independent machines and processes, communicating securely using ocap protocols.\n\n"
      },
      "date": 1537986697534
    },
    {
      "item": {
        "type": "factory",
        "id": "adaf6a644ee01fee"
      },
      "id": "adaf6a644ee01fee",
      "type": "add",
      "after": "0ccbc670d59d51b4",
      "date": 1537986698749
    },
    {
      "type": "edit",
      "id": "adaf6a644ee01fee",
      "item": {
        "type": "markdown",
        "id": "adaf6a644ee01fee",
        "text": "The example contracts are taken from Distributed Electronic Rights in JavaScript. The SES runtime is enhanced so that it runs deterministically, and supports replicated consensus execution, in which a quorum of replicas must agree upon an order of incoming messages. The secure data connections are implemented using libp2p."
      },
      "date": 1537986704072
    },
    {
      "item": {
        "type": "factory",
        "id": "649ff6d75ede51e4"
      },
      "id": "649ff6d75ede51e4",
      "type": "add",
      "after": "adaf6a644ee01fee",
      "date": 1537986707243
    },
    {
      "type": "edit",
      "id": "649ff6d75ede51e4",
      "item": {
        "type": "markdown",
        "id": "649ff6d75ede51e4",
        "text": "# How to get going "
      },
      "date": 1537986743049
    },
    {
      "type": "edit",
      "id": "649ff6d75ede51e4",
      "item": {
        "type": "markdown",
        "id": "649ff6d75ede51e4",
        "text": "# How to get going []"
      },
      "date": 1537986751003
    },
    {
      "type": "edit",
      "id": "649ff6d75ede51e4",
      "item": {
        "type": "markdown",
        "id": "649ff6d75ede51e4",
        "text": "# How to get going [https://github.com/Agoric/PlaygroundVat/ Playground]"
      },
      "date": 1537986770152
    },
    {
      "type": "edit",
      "id": "649ff6d75ede51e4",
      "item": {
        "type": "markdown",
        "id": "649ff6d75ede51e4",
        "text": "# How to get going \n\n[https://github.com/Agoric/PlaygroundVat/ Playground]"
      },
      "date": 1537986779810
    },
    {
      "type": "fork",
      "site": "clive.tries.fed.wiki",
      "date": 1626534555970
    },
    {
      "type": "edit",
      "id": "adaf6a644ee01fee",
      "item": {
        "type": "markdown",
        "id": "adaf6a644ee01fee",
        "text": "The example contracts are taken from Distributed Electronic Rights in JavaScript. The SES runtime is enhanced so that it runs deterministically, and supports replicated [[consensus]] execution, in which a quorum of replicas must agree upon an order of incoming messages. The secure data connections are implemented using libp2p."
      },
      "date": 1636979901281
    },
    {
      "type": "edit",
      "id": "adaf6a644ee01fee",
      "item": {
        "type": "markdown",
        "id": "adaf6a644ee01fee",
        "text": "The example contracts are taken from Distributed Electronic Rights in JavaScript. The SES runtime is enhanced so that it runs deterministically, and supports replicated [[consensus]] execution, in which a quorum of [[replicas]] must agree upon an order of incoming messages. The secure data connections are implemented using libp2p."
      },
      "date": 1641372225632
    }
  ]
}