{
  "title": "Pascal Language",
  "story": [
    {
      "type": "html",
      "text": "Pascal is the most famous--and arguably the most influential--of the [[Wirth Languages]]. Its initial implementation was completed in 1970, on a CDC 6000-series mainframe at ETH in Zurich, Switzerland, and soon reported by [[Niklaus Wirth]] (1971a).",
      "id": "645cc8f30d98366f30e879414278c0dd"
    },
    {
      "type": "html",
      "text": "\nThe Pascal source code, and a later <i>p-kit</i>, were widely distributed. Wirth (1971b) wrote that his new language, named after the mathematician [[Blaise Pascal]], was designed, in part, \"[t]o gain more insight into the methods of organizing large programs and managing software projects.\" Just a few years later (1975), he had not gained much objectivity about its shortcomings. More than a decade later, Wirth (1982) insisted that Pascal was \"designed as a general-purpose language\", but it was widely used -- perhaps mostly used -- as a [[Language For Teaching]] in the 1980s (i.e., as a tool to introduce students to [[Imperative Programming]]).",
      "id": "25730b857d0b965c1858c4933ebdcdb1"
    },
    {
      "type": "html",
      "text": "\nPascal was originally an [[Imperative Language]] in which the source code for an entire program was expected to be contained in a single file, to allow [[Static Typing]] (i.e.: [[Compile Time]] type-checking).  That was sometimes too restrictive, because in Pascal as originally designed, array <i>dimensions</i> are part of an array's <i>type</i>. Thus, the language did not allow generalized array-handling or character-string-handling <i>functions</i> or <i>procedures</i>. Pascal does allow explicit storage allocation, via the predefined <i>new</i> procedure, and later its reverse by the <i>dispose</i> procedure.",
      "id": "26fb5a95322229a2ab0dbac8d2832473"
    },
    {
      "type": "html",
      "text": "\nBecause of the proven usefulness of [[Static Typing]] for avoiding run-time errors, programmers began increasingly to try to use Pascal for serious programming beyond what was supportable by a [[Language For Teaching]]. A [[Modular Programming]] construct was very high on the list of extensions made to Wirth's Pascal to make it practical for teams of programmers to develop software in Pascal. The [[Ucsd Pascal]] <i>unit</i> was a very usable example of a modularity extension.",
      "id": "3144525db4efa0d6f6950ec1ecd78128"
    },
    {
      "type": "html",
      "text": "\nLater, several extensions for [[Object Oriented Programming]] were developed.",
      "id": "efc78e6fee76e970f5209fff22fc77d9"
    },
    {
      "type": "html",
      "text": " [[Turbo Pascal]] (the [[Object Oriented Programming]] features arrived in version 5.5).",
      "id": "203c14f780787c2b5f631d3ea74f0fee"
    },
    {
      "type": "html",
      "text": " [[Object Pascal]] (1985)",
      "id": "b7e506ee9688c81c3ef56039675ea915"
    },
    {
      "type": "html",
      "text": " [[Delphi Language]]",
      "id": "8870472e4619f0277d6f3c4664f0bc20"
    },
    {
      "type": "html",
      "text": " [[Free Pascal]] ([[Open Source]] support for the Turbo and Delphi object models)",
      "id": "06116bfe4be175c70dbfcc6be4a62661"
    },
    {
      "type": "html",
      "text": "\nPascal has numerous descendants:",
      "id": "6b8dda1dce9ef2db048093849ba9ba5b"
    },
    {
      "type": "html",
      "text": " [[Concurrent Pascal]]: Caltech (1975)",
      "id": "9b9b3ca50a5bf75d373f0d3db4483e43"
    },
    {
      "type": "html",
      "text": " Modula ([[Modula Language]] a.k.a. [[Modula One]]): another of the [[Wirth Languages]] (1975)",
      "id": "7bd42438559231504772a2200e45d3c1"
    },
    {
      "type": "html",
      "text": " Euclid (1978)",
      "id": "2d08e970c5c1074df21b7bbf099b656a"
    },
    {
      "type": "html",
      "text": " Pascal* ([[Pascal Star]]): Stanford University (circa 1980)",
      "id": "db2fc6deb03fc91aca158ffe7912ae60"
    },
    {
      "type": "html",
      "text": " Modula 2 ([[Modula Two]]): yet another of the [[Wirth Languages]] (1982)",
      "id": "1e26691afb5e1cdabf0e6af161fed627"
    },
    {
      "type": "html",
      "text": " Pascal Plus (1984)",
      "id": "ade4d1e5f5374dba2f2ccd7486f4e5ca"
    },
    {
      "type": "html",
      "text": "\nPascal also seemed to provide an almost spiritual heritage for other languages:",
      "id": "d6c7a11c5457995dbc01d8853aeb8275"
    },
    {
      "type": "html",
      "text": " Ada ([[Ada Language]])",
      "id": "5c4f2c4315579fa687aba1d43acd2b8a"
    },
    {
      "type": "html",
      "text": " Mesa ([[Mesa Language]])",
      "id": "e68f5bbc3a70f98e996414ffab473653"
    },
    {
      "type": "html",
      "text": "\nReferences:",
      "id": "45cc5c662faabd47ba0991feba8fe9b4"
    },
    {
      "type": "html",
      "text": " Wirth 1971a: \"The programming language Pascal\". <i>Acta Informatica</i>, vol. 1, p. 35--63",
      "id": "442b22d0eabc05dcfb64ae521dbaf363"
    },
    {
      "type": "html",
      "text": " Wirth 1971b: \"The design of a Pascal compiler\". <i>Software--Practice and Experience</i>, v. 1 num. 4 (Oct.--Dec. 1971), p. 309--333",
      "id": "7d9f18ea1c0b460659a762950162d3ec"
    },
    {
      "type": "html",
      "text": " Wirth 1975: \"An assessment of the programming language Pascal\". <i>IEEE Transactions on Software Engineering</i>, vol. SE-1, num. 2 (June 1975), p. 192--198",
      "id": "5359dfe3fd0408d1b2590c73d45d7d7b"
    },
    {
      "type": "html",
      "text": " Wirth 1982: <i>Programming in Modula-2</i>, Springer-Verlag, p. 3",
      "id": "cd40fae619657f8eb06e49e8d46eb80b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a961789bc4272444296017866dee09e9"
    },
    {
      "type": "html",
      "text": "See also:",
      "id": "8ee1de60afedbd47e0eaa13a0355914d"
    },
    {
      "type": "html",
      "text": " [[Pascal Case]]",
      "id": "829fb3531ede425fbedfa2cabff00d7b"
    },
    {
      "type": "html",
      "text": " Kathleen Jensen and Wirth 1974: <i>Pascal: User Manual and Report</i>. Springer-Verlag 1974; also revised in 1985 and 1991, appending <i>ISO Pascal Standard</i> to its title.",
      "id": "82d863751604eea93c8351f297a206c5"
    },
    {
      "type": "html",
      "text": " Wirth 1996: \"Recollections about the development of Pascal\". In T.J. Bergin and R.G. Gibson (eds.): <i>History of programming languages</i>. Addison-Wesley: Reading, MA (USA)",
      "id": "ea05ced7e2e17f038f07a79912d5118d"
    },
    {
      "type": "html",
      "text": " [[Alternatives To Cee Syntax]] - Borrows some ideas from Pascal.",
      "id": "6d27cfa03b60c75da09e52eb838cc911"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a961789bc4272444296017866dee09e9"
    },
    {
      "type": "html",
      "text": "You can find an out of date Pascal syntax description at\n[http://www.csci.csusb.edu/dick/samples/pascal.syntax.html www.csci.csusb.edu]",
      "id": "52c6e1b322bce7b3ebdd1ff654668292"
    },
    {
      "type": "html",
      "text": "\nThis predates the last revision that added some object-oriented stuff.",
      "id": "2cab133c1c85c572ce6102c26649a7b5"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a961789bc4272444296017866dee09e9"
    },
    {
      "type": "html",
      "text": "One thing I loved about Pascal was sub-functions (sometimes called [[Nested Functions]]). See [[Long Function Heresy]]. They simplified a lot of scope and function name collision issues.",
      "id": "313b8e41ae9f369ce953a51410d2f183"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a961789bc4272444296017866dee09e9"
    },
    {
      "type": "html",
      "text": "One thing I love about Pascal is the order of declarations. It forces programmers to design before coding using a technique known as top-down design/bottom-up implementation.  Code developed using bottom-up techniques is much easier to verify for correctness because it supports \"unit testing,\" which is not supported very well by top-down implementation methods.  Top-down coding requires one to perform \"string testing\" to verify correctness.   String testing is both more labor intensive and less reliable.",
      "id": "b9c49a760eafc43188574af63c31607d"
    },
    {
      "type": "html",
      "text": "<i>This is the result of Pascal using a single-pass compiler.</i>",
      "id": "e99bd980cc0e0cbe111fac32edf9e6aa"
    },
    {
      "type": "html",
      "text": "{I found that feature annoying. I like the \"main\" stuff at the top and the details at the bottom. Just about every other writing technique puts the details toward the bottom, why change that?}",
      "id": "530ce2061e3f269a323648a7859e5846"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "a961789bc4272444296017866dee09e9"
    },
    {
      "type": "html",
      "text": "[[Category Programming Language]] \n[[Category Pascal]]",
      "id": "04a6c74237a5e7596cdfe600e9dfd633"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?PascalLanguage c2.com]",
      "id": "f2c6357180937a070ea5d1a2b2229767"
    }
  ],
  "journal": [
    {
      "date": 1413580303000,
      "id": "629def1e7fa625bf4849c0f92486341c",
      "type": "create",
      "item": {
        "title": "Pascal Language",
        "story": [
          {
            "type": "html",
            "text": "Pascal is the most famous--and arguably the most influential--of the [[Wirth Languages]]. Its initial implementation was completed in 1970, on a CDC 6000-series mainframe at ETH in Zurich, Switzerland, and soon reported by [[Niklaus Wirth]] (1971a).",
            "id": "645cc8f30d98366f30e879414278c0dd"
          },
          {
            "type": "html",
            "text": "\nThe Pascal source code, and a later <i>p-kit</i>, were widely distributed. Wirth (1971b) wrote that his new language, named after the mathematician [[Blaise Pascal]], was designed, in part, \"[t]o gain more insight into the methods of organizing large programs and managing software projects.\" Just a few years later (1975), he had not gained much objectivity about its shortcomings. More than a decade later, Wirth (1982) insisted that Pascal was \"designed as a general-purpose language\", but it was widely used -- perhaps mostly used -- as a [[Language For Teaching]] in the 1980s (i.e., as a tool to introduce students to [[Imperative Programming]]).",
            "id": "25730b857d0b965c1858c4933ebdcdb1"
          },
          {
            "type": "html",
            "text": "\nPascal was originally an [[Imperative Language]] in which the source code for an entire program was expected to be contained in a single file, to allow [[Static Typing]] (i.e.: [[Compile Time]] type-checking).  That was sometimes too restrictive, because in Pascal as originally designed, array <i>dimensions</i> are part of an array's <i>type</i>. Thus, the language did not allow generalized array-handling or character-string-handling <i>functions</i> or <i>procedures</i>. Pascal does allow explicit storage allocation, via the predefined <i>new</i> procedure, and later its reverse by the <i>dispose</i> procedure.",
            "id": "26fb5a95322229a2ab0dbac8d2832473"
          },
          {
            "type": "html",
            "text": "\nBecause of the proven usefulness of [[Static Typing]] for avoiding run-time errors, programmers began increasingly to try to use Pascal for serious programming beyond what was supportable by a [[Language For Teaching]]. A [[Modular Programming]] construct was very high on the list of extensions made to Wirth's Pascal to make it practical for teams of programmers to develop software in Pascal. The [[Ucsd Pascal]] <i>unit</i> was a very usable example of a modularity extension.",
            "id": "3144525db4efa0d6f6950ec1ecd78128"
          },
          {
            "type": "html",
            "text": "\nLater, several extensions for [[Object Oriented Programming]] were developed.",
            "id": "efc78e6fee76e970f5209fff22fc77d9"
          },
          {
            "type": "html",
            "text": " [[Turbo Pascal]] (the [[Object Oriented Programming]] features arrived in version 5.5).",
            "id": "203c14f780787c2b5f631d3ea74f0fee"
          },
          {
            "type": "html",
            "text": " [[Object Pascal]] (1985)",
            "id": "b7e506ee9688c81c3ef56039675ea915"
          },
          {
            "type": "html",
            "text": " [[Delphi Language]]",
            "id": "8870472e4619f0277d6f3c4664f0bc20"
          },
          {
            "type": "html",
            "text": " [[Free Pascal]] ([[Open Source]] support for the Turbo and Delphi object models)",
            "id": "06116bfe4be175c70dbfcc6be4a62661"
          },
          {
            "type": "html",
            "text": "\nPascal has numerous descendants:",
            "id": "6b8dda1dce9ef2db048093849ba9ba5b"
          },
          {
            "type": "html",
            "text": " [[Concurrent Pascal]]: Caltech (1975)",
            "id": "9b9b3ca50a5bf75d373f0d3db4483e43"
          },
          {
            "type": "html",
            "text": " Modula ([[Modula Language]] a.k.a. [[Modula One]]): another of the [[Wirth Languages]] (1975)",
            "id": "7bd42438559231504772a2200e45d3c1"
          },
          {
            "type": "html",
            "text": " Euclid (1978)",
            "id": "2d08e970c5c1074df21b7bbf099b656a"
          },
          {
            "type": "html",
            "text": " Pascal* ([[Pascal Star]]): Stanford University (circa 1980)",
            "id": "db2fc6deb03fc91aca158ffe7912ae60"
          },
          {
            "type": "html",
            "text": " Modula 2 ([[Modula Two]]): yet another of the [[Wirth Languages]] (1982)",
            "id": "1e26691afb5e1cdabf0e6af161fed627"
          },
          {
            "type": "html",
            "text": " Pascal Plus (1984)",
            "id": "ade4d1e5f5374dba2f2ccd7486f4e5ca"
          },
          {
            "type": "html",
            "text": "\nPascal also seemed to provide an almost spiritual heritage for other languages:",
            "id": "d6c7a11c5457995dbc01d8853aeb8275"
          },
          {
            "type": "html",
            "text": " Ada ([[Ada Language]])",
            "id": "5c4f2c4315579fa687aba1d43acd2b8a"
          },
          {
            "type": "html",
            "text": " Mesa ([[Mesa Language]])",
            "id": "e68f5bbc3a70f98e996414ffab473653"
          },
          {
            "type": "html",
            "text": "\nReferences:",
            "id": "45cc5c662faabd47ba0991feba8fe9b4"
          },
          {
            "type": "html",
            "text": " Wirth 1971a: \"The programming language Pascal\". <i>Acta Informatica</i>, vol. 1, p. 35--63",
            "id": "442b22d0eabc05dcfb64ae521dbaf363"
          },
          {
            "type": "html",
            "text": " Wirth 1971b: \"The design of a Pascal compiler\". <i>Software--Practice and Experience</i>, v. 1 num. 4 (Oct.--Dec. 1971), p. 309--333",
            "id": "7d9f18ea1c0b460659a762950162d3ec"
          },
          {
            "type": "html",
            "text": " Wirth 1975: \"An assessment of the programming language Pascal\". <i>IEEE Transactions on Software Engineering</i>, vol. SE-1, num. 2 (June 1975), p. 192--198",
            "id": "5359dfe3fd0408d1b2590c73d45d7d7b"
          },
          {
            "type": "html",
            "text": " Wirth 1982: <i>Programming in Modula-2</i>, Springer-Verlag, p. 3",
            "id": "cd40fae619657f8eb06e49e8d46eb80b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a961789bc4272444296017866dee09e9"
          },
          {
            "type": "html",
            "text": "See also:",
            "id": "8ee1de60afedbd47e0eaa13a0355914d"
          },
          {
            "type": "html",
            "text": " [[Pascal Case]]",
            "id": "829fb3531ede425fbedfa2cabff00d7b"
          },
          {
            "type": "html",
            "text": " Kathleen Jensen and Wirth 1974: <i>Pascal: User Manual and Report</i>. Springer-Verlag 1974; also revised in 1985 and 1991, appending <i>ISO Pascal Standard</i> to its title.",
            "id": "82d863751604eea93c8351f297a206c5"
          },
          {
            "type": "html",
            "text": " Wirth 1996: \"Recollections about the development of Pascal\". In T.J. Bergin and R.G. Gibson (eds.): <i>History of programming languages</i>. Addison-Wesley: Reading, MA (USA)",
            "id": "ea05ced7e2e17f038f07a79912d5118d"
          },
          {
            "type": "html",
            "text": " [[Alternatives To Cee Syntax]] - Borrows some ideas from Pascal.",
            "id": "6d27cfa03b60c75da09e52eb838cc911"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a961789bc4272444296017866dee09e9"
          },
          {
            "type": "html",
            "text": "You can find an out of date Pascal syntax description at\n[http://www.csci.csusb.edu/dick/samples/pascal.syntax.html www.csci.csusb.edu]",
            "id": "52c6e1b322bce7b3ebdd1ff654668292"
          },
          {
            "type": "html",
            "text": "\nThis predates the last revision that added some object-oriented stuff.",
            "id": "2cab133c1c85c572ce6102c26649a7b5"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a961789bc4272444296017866dee09e9"
          },
          {
            "type": "html",
            "text": "One thing I loved about Pascal was sub-functions (sometimes called [[Nested Functions]]). See [[Long Function Heresy]]. They simplified a lot of scope and function name collision issues.",
            "id": "313b8e41ae9f369ce953a51410d2f183"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a961789bc4272444296017866dee09e9"
          },
          {
            "type": "html",
            "text": "One thing I love about Pascal is the order of declarations. It forces programmers to design before coding using a technique known as top-down design/bottom-up implementation.  Code developed using bottom-up techniques is much easier to verify for correctness because it supports \"unit testing,\" which is not supported very well by top-down implementation methods.  Top-down coding requires one to perform \"string testing\" to verify correctness.   String testing is both more labor intensive and less reliable.",
            "id": "b9c49a760eafc43188574af63c31607d"
          },
          {
            "type": "html",
            "text": "<i>This is the result of Pascal using a single-pass compiler.</i>",
            "id": "e99bd980cc0e0cbe111fac32edf9e6aa"
          },
          {
            "type": "html",
            "text": "{I found that feature annoying. I like the \"main\" stuff at the top and the details at the bottom. Just about every other writing technique puts the details toward the bottom, why change that?}",
            "id": "530ce2061e3f269a323648a7859e5846"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "a961789bc4272444296017866dee09e9"
          },
          {
            "type": "html",
            "text": "[[Category Programming Language]] \n[[Category Pascal]]",
            "id": "04a6c74237a5e7596cdfe600e9dfd633"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?PascalLanguage c2.com]",
            "id": "f2c6357180937a070ea5d1a2b2229767"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1671724758899
    }
  ]
}