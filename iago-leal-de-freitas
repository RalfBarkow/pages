{
  "title": "Iago Leal de Freitas",
  "story": [
    {
      "type": "paragraph",
      "id": "b74f319175fc8496",
      "text": "Personal blog [https://iagoleal.com/ site], [https://github.com/iagoleal/iagoleal.github.io github]"
    },
    {
      "type": "reference",
      "id": "dff96f1aee8aedb4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "memoization-via-representables",
      "title": "Memoization via Representables",
      "text": "What is the most basic container type a language can have? Some people may answer vectors, others would go with hash tables, but in this post I am arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: memoization. [https://iagoleal.com/posts/representable-memoize/ post]"
    },
    {
      "type": "reference",
      "id": "eb468e790f1cfca8",
      "site": "wiki.ralfbarkow.ch",
      "slug": "solve-differential-equations",
      "title": "Solve Differential Equations",
      "text": "The Lazy Way to … [https://iagoleal.com/posts/calculus-symbolic-ode/ page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Iago Leal de Freitas",
        "story": []
      },
      "date": 1680002333305
    },
    {
      "id": "b74f319175fc8496",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b74f319175fc8496",
        "text": "[[Iago Leal de Freitas]]' Personal site and blog  [https://github.com/iagoleal/iagoleal.github.io github], [https://iagoleal.com/ site]"
      },
      "attribution": {
        "page": "2023-03-28"
      },
      "date": 1680002337674
    },
    {
      "type": "edit",
      "id": "b74f319175fc8496",
      "item": {
        "type": "paragraph",
        "id": "b74f319175fc8496",
        "text": "Personal site and blog  [https://github.com/iagoleal/iagoleal.github.io github], [https://iagoleal.com/ site]"
      },
      "date": 1680002342433
    },
    {
      "item": {
        "type": "factory",
        "id": "3771c625bc2e4de7"
      },
      "id": "3771c625bc2e4de7",
      "type": "add",
      "after": "b74f319175fc8496",
      "date": 1680002430355
    },
    {
      "type": "edit",
      "id": "3771c625bc2e4de7",
      "item": {
        "type": "paragraph",
        "id": "3771c625bc2e4de7",
        "text": "[[Memoization via Representables]]"
      },
      "date": 1680002434977
    },
    {
      "item": {
        "type": "factory",
        "id": "dff96f1aee8aedb4"
      },
      "id": "dff96f1aee8aedb4",
      "type": "add",
      "after": "3771c625bc2e4de7",
      "date": 1680002521158
    },
    {
      "type": "edit",
      "id": "dff96f1aee8aedb4",
      "item": {
        "type": "reference",
        "id": "dff96f1aee8aedb4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "memoization-via-representables",
        "title": "Memoization via Representables",
        "text": "What is the most basic container type a language can have? Some people may answer vectors, others would go with hash tables, but in this post I am arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: memoization. [https://iagoleal.com/posts/representable-memoize/ post]"
      },
      "date": 1680002522937
    },
    {
      "type": "remove",
      "id": "3771c625bc2e4de7",
      "date": 1680002524902
    },
    {
      "type": "edit",
      "id": "b74f319175fc8496",
      "item": {
        "type": "paragraph",
        "id": "b74f319175fc8496",
        "text": "Personal site and blog [https://iagoleal.com/ site], [https://github.com/iagoleal/iagoleal.github.io github]"
      },
      "date": 1694763998633
    },
    {
      "type": "edit",
      "id": "b74f319175fc8496",
      "item": {
        "type": "paragraph",
        "id": "b74f319175fc8496",
        "text": "Personal blog [https://iagoleal.com/ site], [https://github.com/iagoleal/iagoleal.github.io github]"
      },
      "date": 1694764021243
    },
    {
      "item": {
        "type": "factory",
        "id": "eb468e790f1cfca8"
      },
      "id": "eb468e790f1cfca8",
      "type": "add",
      "after": "dff96f1aee8aedb4",
      "date": 1695193757817
    },
    {
      "type": "edit",
      "id": "eb468e790f1cfca8",
      "item": {
        "type": "reference",
        "id": "eb468e790f1cfca8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "solve-differential-equations",
        "title": "Solve Differential Equations",
        "text": "Calculus with Infinite Lists"
      },
      "date": 1695193760348
    },
    {
      "type": "edit",
      "id": "eb468e790f1cfca8",
      "item": {
        "type": "reference",
        "id": "eb468e790f1cfca8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "solve-differential-equations",
        "title": "Solve Differential Equations",
        "text": "Iago Leal de Freitas"
      },
      "date": 1695193777058
    },
    {
      "type": "edit",
      "id": "eb468e790f1cfca8",
      "item": {
        "type": "reference",
        "id": "eb468e790f1cfca8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "solve-differential-equations",
        "title": "Solve Differential Equations",
        "text": "The Lazy Way to … [https://iagoleal.com/posts/calculus-symbolic-ode/ page]"
      },
      "date": 1695193788834
    }
  ]
}