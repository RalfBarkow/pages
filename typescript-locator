{
  "title": "Typescript Locator",
  "story": [
    {
      "type": "paragraph",
      "id": "032ddbb0ca793316",
      "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. [⇒ [[Conversation as Search]]]"
    },
    {
      "type": "paragraph",
      "id": "2f2e3b2a1737503a",
      "text": "[[String]]s collect and store [[Structure]] that might be information. [⇒ [[Rearrangement of Structure]]]"
    },
    {
      "type": "paragraph",
      "id": "7852e2a6edee6f64",
      "text": "Here we setup a test case and then try automating it with an html script."
    },
    {
      "type": "markdown",
      "id": "54c55099a347c71a",
      "text": "# Challenge"
    },
    {
      "type": "paragraph",
      "id": "bdb7859c04a4f2b6",
      "text": "Tip: Open these two pages in this lineup then shift-hover over the quoted text to scroll to the desired locations."
    },
    {
      "type": "reference",
      "id": "96d2d28323600a00",
      "site": "jeff.dojo.fed.wiki",
      "slug": "typescript-index-2023-09-10",
      "title": "Typescript Index 2023-09-10",
      "text": "Keyword Index. See [[Typescript 2023-09-10]]"
    },
    {
      "type": "paragraph",
      "id": "8e7df93e20d08b93",
      "text": "Here we see in a [[KWIC Index]] mention of an attractor."
    },
    {
      "type": "markdown",
      "text": "10:56:46 you're building an [attractor](/view/10:56:46) to get them\n",
      "id": "58594286130402099200"
    },
    {
      "type": "reference",
      "id": "8bd4c5e78dffa16f",
      "site": "jeff.dojo.fed.wiki",
      "slug": "typescript-2023-09-10",
      "title": "Typescript 2023-09-10",
      "text": "Text extraction. See [[Typescript Archive]]"
    },
    {
      "type": "paragraph",
      "id": "c78ff31bcd5fa2f0",
      "text": "Now how can we find the surrounding conversation?"
    },
    {
      "type": "markdown",
      "text": "10:55:49 From Jeff Miller\nokay here's one\n\"Treasure Island\" as a poster https://cdn.thearthunters.com/wp-content/uploads/2013/01/0815-800x1155.jpg\n\"With every step, you're building an attractor to get them to the next step. You want to get people from the problem to the solution, via drawing them in with a story and art.\"\n",
      "id": "68307093565982015488"
    },
    {
      "type": "markdown",
      "id": "9fdbf97c04e69580",
      "text": "# Solution"
    },
    {
      "type": "paragraph",
      "id": "208dcfa5a439dcfd",
      "text": "Maybe we somehow invoke a [[Script]] with the index timestamp and use that to find the desired text as we have in the example above."
    },
    {
      "type": "code",
      "id": "225e4bc2115c3846",
      "text": "http://ward.dojo.fed.wiki/assets/pages/typescript-archive/scripts/locate.html?ref=jeff.dojo.fed.wiki/typescript-2023-09-10/10:56:46"
    },
    {
      "type": "paragraph",
      "id": "dd71e4842399309b",
      "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page]"
    },
    {
      "type": "paragraph",
      "id": "2f02c37ebc38b6ab",
      "text": "Or [[elm-concurrent-task]], which is heavily inspired by [[elm-pages]]' [[BackendTask]] and intended to be a standalone implementation that can be dropped into any [[Elm]] app. "
    },
    {
      "type": "pagefold",
      "id": "2632c71567fb8714",
      "text": "~"
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "backendtaskcustomrun",
      "title": "BackendTask.Custom.run",
      "text": "⇐ [[BackendTask.Custom]]. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom#run page]",
      "id": "fd2bf1b64af71712"
    },
    {
      "type": "markdown",
      "id": "1857c2a80c9149b6",
      "text": "> With BackendTask.Custom, you send and receive JSON to JavaScript running in [[NodeJS]]. As with any BackendTask, Custom BackendTask's are either run at build-time (for pre-rendered routes) or at request-time (for server-rendered routes). See BackendTask for more about the lifecycle of BackendTask's. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom page], [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
    },
    {
      "type": "roster",
      "id": "5c1cc032bba9c875",
      "text": "ward.dojo.fed.wiki\njeff.dojo.fed.wiki\nwiki.ralfbarkow.ch"
    },
    {
      "type": "reference",
      "id": "3e091341e989a8a3",
      "site": "wiki.ralfbarkow.ch",
      "slug": "handle-hovers",
      "title": "Handle Hovers",
      "text": "Target handles hovers over items and actions. (wiki-client) [https://github.com/fedwiki/wiki-client/blob/b079e3f90863e594e01e520082b7950b2ba62209/lib/target.coffee#L1-L5 code]"
    },
    {
      "type": "reference",
      "id": "4ecb30d410a4b442",
      "site": "wiki.ralfbarkow.ch",
      "slug": "eliminate-what-is-not",
      "title": "Eliminate What Is NOT",
      "text": "This new perspective has evolved into [[Constraint-Based Reasoning]]. Eliminate what is NOT to [[Arrive at What Is Possible]]. Rather than considering a solution, consider all solutions by omitting the non-solutions."
    },
    {
      "type": "reference",
      "id": "73fd5512776261de",
      "site": "wiki.ralfbarkow.ch",
      "slug": "connect-2-letters",
      "title": "Connect 2 Letters",
      "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24169264923510689jYqDB%3Amatrix.org matrix] has posted some usability improvements to Typescript Indexes. The keywords are now brightly colored links. Hover will show the time of posting so the chat sequence can be found in the formatted log."
    },
    {
      "type": "reference",
      "id": "dcd09600b6c8c5c7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "conversation-as-search",
      "title": "Conversation as Search",
      "text": "⇒ [[Thought Vector]] ⇒ [[ChatGPT]]"
    },
    {
      "type": "reference",
      "id": "ecf8866d36da0e73",
      "site": "wiki.ralfbarkow.ch",
      "slug": "rearrangement-of-structure",
      "title": "Rearrangement of Structure",
      "text": "The pernicious NOT of logic allows storage of contradictory information. Structure is converted into information via accumulation, via the construction and retention of more structure."
    },
    {
      "type": "graphviz",
      "id": "b82b1041f1017a01",
      "text": "DOT FROM lambda-browsing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Typescript Locator",
        "story": []
      },
      "date": 1696449961895
    },
    {
      "item": {
        "type": "factory",
        "id": "032ddbb0ca793316"
      },
      "id": "032ddbb0ca793316",
      "type": "add",
      "date": 1696449992284
    },
    {
      "type": "edit",
      "id": "032ddbb0ca793316",
      "item": {
        "type": "paragraph",
        "id": "032ddbb0ca793316",
        "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. Here we setup a test case and then try automating it with an html script."
      },
      "date": 1696450083189
    },
    {
      "item": {
        "type": "factory",
        "id": "8e7df93e20d08b93"
      },
      "id": "8e7df93e20d08b93",
      "type": "add",
      "after": "032ddbb0ca793316",
      "date": 1696450125880
    },
    {
      "type": "edit",
      "id": "8e7df93e20d08b93",
      "item": {
        "type": "paragraph",
        "id": "8e7df93e20d08b93",
        "text": "Here we see in a KWIK index mention of an attractor. Now how can we find the surrounding conversation."
      },
      "date": 1696450185774
    },
    {
      "id": "58594286130402099200",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "you re building an [attractor](/view/10:56:46) to get them\n",
        "id": "58594286130402099200"
      },
      "after": "8e7df93e20d08b93",
      "attribution": {
        "page": "Typescript Index 2023-09-10",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696450191603
    },
    {
      "id": "68307093565982015488",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "10:55:49 From Jeff Miller\nokay here's one\n\"Treasure Island\" as a poster https://cdn.thearthunters.com/wp-content/uploads/2013/01/0815-800x1155.jpg\n\"With every step, you're building an attractor to get them to the next step. You want to get people from the problem to the solution, via drawing them in with a story and art.\"\n",
        "id": "68307093565982015488"
      },
      "after": "58594286130402099200",
      "attribution": {
        "page": "Typescript 2023-09-10",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696450244895
    },
    {
      "type": "edit",
      "id": "58594286130402099200",
      "item": {
        "type": "markdown",
        "text": "10:56:46 you're building an [attractor](/view/10:56:46) to get them\n",
        "id": "58594286130402099200"
      },
      "date": 1696450353578
    },
    {
      "type": "edit",
      "id": "8e7df93e20d08b93",
      "item": {
        "type": "paragraph",
        "id": "8e7df93e20d08b93",
        "text": "Here we see in a KWIK index mention of an attractor."
      },
      "date": 1696450371093
    },
    {
      "type": "add",
      "id": "c78ff31bcd5fa2f0",
      "item": {
        "type": "paragraph",
        "id": "c78ff31bcd5fa2f0",
        "text": "Now how can we find the surrounding conversation."
      },
      "after": "8e7df93e20d08b93",
      "date": 1696450372851
    },
    {
      "id": "c78ff31bcd5fa2f0",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "c78ff31bcd5fa2f0",
        "68307093565982015488"
      ],
      "date": 1696450375314
    },
    {
      "item": {
        "type": "factory",
        "id": "96d2d28323600a00"
      },
      "id": "96d2d28323600a00",
      "type": "add",
      "after": "68307093565982015488",
      "date": 1696450417356
    },
    {
      "item": {
        "type": "factory",
        "id": "8bd4c5e78dffa16f"
      },
      "id": "8bd4c5e78dffa16f",
      "type": "add",
      "after": "96d2d28323600a00",
      "date": 1696450420949
    },
    {
      "type": "edit",
      "id": "8bd4c5e78dffa16f",
      "item": {
        "type": "reference",
        "id": "8bd4c5e78dffa16f",
        "site": "jeff.dojo.fed.wiki",
        "slug": "typescript-2023-09-10",
        "title": "Typescript 2023-09-10",
        "text": "Text extraction. See [[Typescript Archive]]"
      },
      "date": 1696450428006
    },
    {
      "type": "edit",
      "id": "96d2d28323600a00",
      "item": {
        "type": "reference",
        "id": "96d2d28323600a00",
        "site": "jeff.dojo.fed.wiki",
        "slug": "typescript-index-2023-09-10",
        "title": "Typescript Index 2023-09-10",
        "text": "Keyword Index. See [[Typescript 2023-09-10]]"
      },
      "date": 1696450437951
    },
    {
      "id": "96d2d28323600a00",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "8e7df93e20d08b93",
        "96d2d28323600a00",
        "58594286130402099200",
        "c78ff31bcd5fa2f0",
        "68307093565982015488",
        "8bd4c5e78dffa16f"
      ],
      "date": 1696450443087
    },
    {
      "id": "8bd4c5e78dffa16f",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "8e7df93e20d08b93",
        "96d2d28323600a00",
        "58594286130402099200",
        "c78ff31bcd5fa2f0",
        "8bd4c5e78dffa16f",
        "68307093565982015488"
      ],
      "date": 1696450447131
    },
    {
      "id": "96d2d28323600a00",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "c78ff31bcd5fa2f0",
        "8bd4c5e78dffa16f",
        "68307093565982015488"
      ],
      "date": 1696450457998
    },
    {
      "id": "8bd4c5e78dffa16f",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "8bd4c5e78dffa16f",
        "c78ff31bcd5fa2f0",
        "68307093565982015488"
      ],
      "date": 1696450462482
    },
    {
      "type": "edit",
      "id": "c78ff31bcd5fa2f0",
      "item": {
        "type": "paragraph",
        "id": "c78ff31bcd5fa2f0",
        "text": "Now how can we find the surrounding conversation?"
      },
      "date": 1696450479035
    },
    {
      "type": "add",
      "id": "bdb7859c04a4f2b6",
      "item": {
        "type": "paragraph",
        "id": "bdb7859c04a4f2b6",
        "text": "Tip: Open these two pages in this lineup then shift-hover over the quoted text to scroll to the desired locations."
      },
      "after": "032ddbb0ca793316",
      "date": 1696450635465
    },
    {
      "type": "add",
      "id": "54c55099a347c71a",
      "item": {
        "type": "paragraph",
        "id": "54c55099a347c71a",
        "text": "# Challenge"
      },
      "after": "032ddbb0ca793316",
      "date": 1696450662856
    },
    {
      "type": "edit",
      "id": "54c55099a347c71a",
      "item": {
        "type": "markdown",
        "id": "54c55099a347c71a",
        "text": "# Challenge"
      },
      "date": 1696450665776
    },
    {
      "item": {
        "type": "factory",
        "id": "9fdbf97c04e69580"
      },
      "id": "9fdbf97c04e69580",
      "type": "add",
      "after": "68307093565982015488",
      "date": 1696450736135
    },
    {
      "type": "edit",
      "id": "9fdbf97c04e69580",
      "item": {
        "type": "paragraph",
        "id": "9fdbf97c04e69580",
        "text": "# Solution"
      },
      "date": 1696450747793
    },
    {
      "type": "add",
      "id": "208dcfa5a439dcfd",
      "item": {
        "type": "paragraph",
        "id": "208dcfa5a439dcfd",
        "text": "Maybe we somehow invoke a script with the index timestamp and use that to find the desired text as we have in the example above."
      },
      "after": "9fdbf97c04e69580",
      "date": 1696450880854
    },
    {
      "item": {
        "type": "factory",
        "id": "225e4bc2115c3846"
      },
      "id": "225e4bc2115c3846",
      "type": "add",
      "after": "208dcfa5a439dcfd",
      "date": 1696450882690
    },
    {
      "type": "edit",
      "id": "225e4bc2115c3846",
      "item": {
        "type": "code",
        "id": "225e4bc2115c3846",
        "text": "http://ward.dojo.fed.wiki/assets/pages/typescript-archive/scripts/locate.html?ref=jeff.dojo.fed.wiki/typescript-2023-09-10/10:56:46"
      },
      "date": 1696450886331
    },
    {
      "type": "edit",
      "id": "9fdbf97c04e69580",
      "item": {
        "type": "markdown",
        "id": "9fdbf97c04e69580",
        "text": "# Solution"
      },
      "date": 1696450913896
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1696506967847
    },
    {
      "type": "edit",
      "id": "8e7df93e20d08b93",
      "item": {
        "type": "paragraph",
        "id": "8e7df93e20d08b93",
        "text": "Here we see in a [[KWIC Index]] mention of an attractor."
      },
      "date": 1696507437810
    },
    {
      "item": {
        "type": "factory",
        "id": "1e589dfb02d49daf"
      },
      "id": "1e589dfb02d49daf",
      "type": "add",
      "after": "225e4bc2115c3846",
      "date": 1696589150728
    },
    {
      "type": "remove",
      "id": "1e589dfb02d49daf",
      "date": 1696589153908
    },
    {
      "item": {
        "type": "factory",
        "id": "2632c71567fb8714"
      },
      "id": "2632c71567fb8714",
      "type": "add",
      "after": "225e4bc2115c3846",
      "date": 1696589155479
    },
    {
      "type": "edit",
      "id": "2632c71567fb8714",
      "item": {
        "type": "pagefold",
        "id": "2632c71567fb8714",
        "text": "~"
      },
      "date": 1696589160247
    },
    {
      "item": {
        "type": "factory",
        "id": "5c1cc032bba9c875"
      },
      "id": "5c1cc032bba9c875",
      "type": "add",
      "after": "2632c71567fb8714",
      "date": 1696589163576
    },
    {
      "type": "edit",
      "id": "5c1cc032bba9c875",
      "item": {
        "type": "roster",
        "id": "5c1cc032bba9c875",
        "text": "wiki.ralfbarkow.ch\nward.dojo.fed.wiki ward.dojo.fed.wiki\njeff.dojo.fed.wiki jeff.dojo.fed.wiki"
      },
      "date": 1696589169631
    },
    {
      "type": "edit",
      "id": "5c1cc032bba9c875",
      "item": {
        "type": "roster",
        "id": "5c1cc032bba9c875",
        "text": "wiki.ralfbarkow.ch\nward.dojo.fed.wiki\njeff.dojo.fed.wiki"
      },
      "date": 1696589187322
    },
    {
      "type": "edit",
      "id": "5c1cc032bba9c875",
      "item": {
        "type": "roster",
        "id": "5c1cc032bba9c875",
        "text": "ward.dojo.fed.wiki\njeff.dojo.fed.wiki\nwiki.ralfbarkow.ch"
      },
      "date": 1696589207624
    },
    {
      "type": "edit",
      "id": "208dcfa5a439dcfd",
      "item": {
        "type": "paragraph",
        "id": "208dcfa5a439dcfd",
        "text": "Maybe we somehow invoke a [[Script]] with the index timestamp and use that to find the desired text as we have in the example above."
      },
      "date": 1696592087839
    },
    {
      "type": "edit",
      "id": "208dcfa5a439dcfd",
      "item": {
        "type": "paragraph",
        "id": "208dcfa5a439dcfd",
        "text": "Maybe we somehow invoke a [[Script]] with the index timestamp and use that to find the desired text as we have in the example above."
      },
      "date": 1696592103305
    },
    {
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "elm-pages Scripts [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] could be a possible approach."
      },
      "id": "dd71e4842399309b",
      "type": "add",
      "after": "5c1cc032bba9c875",
      "date": 1696592181223
    },
    {
      "id": "dd71e4842399309b",
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "54c55099a347c71a",
        "bdb7859c04a4f2b6",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "8bd4c5e78dffa16f",
        "c78ff31bcd5fa2f0",
        "68307093565982015488",
        "9fdbf97c04e69580",
        "208dcfa5a439dcfd",
        "225e4bc2115c3846",
        "dd71e4842399309b",
        "2632c71567fb8714",
        "5c1cc032bba9c875"
      ],
      "date": 1696592186016
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "elm-pages Scripts [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] could be a possible approach."
      },
      "date": 1696592190588
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "elm-pages Scripts [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] could be a possible approach."
      },
      "date": 1696592213848
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "backendtaskcustomrun",
        "title": "BackendTask.Custom.run",
        "text": "⇐ [[BackendTask.Custom]]. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom#run page]"
      },
      "after": "dd71e4842399309b",
      "date": 1696592288451
    },
    {
      "type": "move",
      "order": [
        "032ddbb0ca793316",
        "54c55099a347c71a",
        "bdb7859c04a4f2b6",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "8bd4c5e78dffa16f",
        "c78ff31bcd5fa2f0",
        "68307093565982015488",
        "9fdbf97c04e69580",
        "208dcfa5a439dcfd",
        "225e4bc2115c3846",
        "dd71e4842399309b",
        "2632c71567fb8714",
        "undefined",
        "5c1cc032bba9c875"
      ],
      "date": 1696592295403,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696592299358
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] could be a possible approach."
      },
      "date": 1696592347257
    },
    {
      "id": "fd2bf1b64af71712",
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "backendtaskcustomrun",
        "title": "BackendTask.Custom.run",
        "text": "⇐ [[BackendTask.Custom]]. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom#run page]",
        "id": "fd2bf1b64af71712"
      },
      "after": "2632c71567fb8714",
      "date": 1696592385437
    },
    {
      "id": "1857c2a80c9149b6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1857c2a80c9149b6",
        "text": "With BackendTask.Custom, you send and receive JSON to JavaScript running in [[NodeJS]]. As with any BackendTask, Custom BackendTask's are either run at build-time (for pre-rendered routes) or at request-time (for server-rendered routes). See BackendTask for more about the lifecycle of BackendTask's. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom page], [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
      },
      "after": "fd2bf1b64af71712",
      "attribution": {
        "page": "BackendTask.Custom"
      },
      "date": 1696592407966
    },
    {
      "type": "edit",
      "id": "1857c2a80c9149b6",
      "item": {
        "type": "paragraph",
        "id": "1857c2a80c9149b6",
        "text": "> With BackendTask.Custom, you send and receive JSON to JavaScript running in [[NodeJS]]. As with any BackendTask, Custom BackendTask's are either run at build-time (for pre-rendered routes) or at request-time (for server-rendered routes). See BackendTask for more about the lifecycle of BackendTask's. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom page], [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
      },
      "date": 1696592414989
    },
    {
      "type": "edit",
      "id": "1857c2a80c9149b6",
      "item": {
        "type": "markdown",
        "id": "1857c2a80c9149b6",
        "text": "> With BackendTask.Custom, you send and receive JSON to JavaScript running in [[NodeJS]]. As with any BackendTask, Custom BackendTask's are either run at build-time (for pre-rendered routes) or at request-time (for server-rendered routes). See BackendTask for more about the lifecycle of BackendTask's. [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask-Custom page], [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
      },
      "date": 1696592415926
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page]"
      },
      "date": 1696593726538
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] Or [[elm-concurrent-task]], which "
      },
      "date": 1696627116263
    },
    {
      "id": "2f02c37ebc38b6ab",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f02c37ebc38b6ab",
        "text": "This package is heavily inspired by [[elm-pages]]' [[BackendTask]] and is intended to be a standalone implementation that can be dropped into any Elm app – big kudos to Dillon [https://github.com/dillonkearns github] for the idea."
      },
      "after": "dd71e4842399309b",
      "attribution": {
        "page": "elm-concurrent-task"
      },
      "date": 1696627122654
    },
    {
      "type": "remove",
      "id": "2f02c37ebc38b6ab",
      "date": 1696627139477
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] Or [[elm-concurrent-task]], which is intended to be a standalone implementation that can be dropped into any Elm app."
      },
      "date": 1696627153456
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page] Or [[elm-concurrent-task]], which is intended to be a standalone implementation that can be dropped into any [[Elm]] app."
      },
      "date": 1696627181707
    },
    {
      "item": {
        "type": "factory",
        "id": "3e091341e989a8a3"
      },
      "id": "3e091341e989a8a3",
      "type": "add",
      "after": "5c1cc032bba9c875",
      "date": 1696627270044
    },
    {
      "type": "edit",
      "id": "3e091341e989a8a3",
      "item": {
        "type": "reference",
        "id": "3e091341e989a8a3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "handle-hovers",
        "title": "Handle Hovers",
        "text": "Target handles hovers over items and actions. (wiki-client) [https://github.com/fedwiki/wiki-client/blob/b079e3f90863e594e01e520082b7950b2ba62209/lib/target.coffee#L1-L5 code]"
      },
      "date": 1696627273856
    },
    {
      "item": {
        "type": "factory",
        "id": "4ecb30d410a4b442"
      },
      "id": "4ecb30d410a4b442",
      "type": "add",
      "after": "3e091341e989a8a3",
      "date": 1696627318542
    },
    {
      "type": "edit",
      "id": "4ecb30d410a4b442",
      "item": {
        "type": "reference",
        "id": "4ecb30d410a4b442",
        "site": "wiki.ralfbarkow.ch",
        "slug": "eliminate-what-is-not",
        "title": "Eliminate What Is NOT",
        "text": "This new perspective has evolved into [[Constraint-Based Reasoning]]. Eliminate what is NOT to [[Arrive at What Is Possible]]. Rather than considering a solution, consider all solutions by omitting the non-solutions."
      },
      "date": 1696627322322
    },
    {
      "item": {
        "type": "factory",
        "id": "73fd5512776261de"
      },
      "id": "73fd5512776261de",
      "type": "add",
      "after": "4ecb30d410a4b442",
      "date": 1696627372410
    },
    {
      "type": "edit",
      "id": "73fd5512776261de",
      "item": {
        "type": "reference",
        "id": "73fd5512776261de",
        "site": "wiki.ralfbarkow.ch",
        "slug": "connect-2-letters",
        "title": "Connect 2 Letters",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%24169264923510689jYqDB%3Amatrix.org matrix] has posted some usability improvements to Typescript Indexes. The keywords are now brightly colored links. Hover will show the time of posting so the chat sequence can be found in the formatted log."
      },
      "date": 1696627375813
    },
    {
      "item": {
        "type": "factory",
        "id": "dcd09600b6c8c5c7"
      },
      "id": "dcd09600b6c8c5c7",
      "type": "add",
      "after": "73fd5512776261de",
      "date": 1696627606772
    },
    {
      "type": "edit",
      "id": "dcd09600b6c8c5c7",
      "item": {
        "type": "reference",
        "id": "dcd09600b6c8c5c7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "conversation-as-search",
        "title": "Conversation as Search",
        "text": "⇒ [[Thought Vector]] ⇒ [[ChatGPT]]"
      },
      "date": 1696627611680
    },
    {
      "item": {
        "type": "factory",
        "id": "5a55400307122262"
      },
      "id": "5a55400307122262",
      "type": "add",
      "after": "dcd09600b6c8c5c7",
      "date": 1696627614117
    },
    {
      "type": "edit",
      "id": "5a55400307122262",
      "item": {
        "type": "graphviz",
        "id": "5a55400307122262",
        "text": "DOT FROM lambda-browsng"
      },
      "date": 1696627623924
    },
    {
      "type": "edit",
      "id": "5a55400307122262",
      "item": {
        "type": "graphviz",
        "id": "5a55400307122262",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1696627634683
    },
    {
      "type": "edit",
      "id": "032ddbb0ca793316",
      "item": {
        "type": "paragraph",
        "id": "032ddbb0ca793316",
        "text": "We'd like to locate conversations based on information extracted into indexes of various kinds."
      },
      "date": 1696627959873
    },
    {
      "id": "2f2e3b2a1737503a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f2e3b2a1737503a",
        "text": "[[String]]s collect and store structure that might be information."
      },
      "after": "032ddbb0ca793316",
      "attribution": {
        "page": "Rearrangement of Structure"
      },
      "date": 1696627965130
    },
    {
      "type": "add",
      "id": "7852e2a6edee6f64",
      "item": {
        "type": "paragraph",
        "id": "7852e2a6edee6f64",
        "text": "Here we setup a test case and then try automating it with an html script."
      },
      "after": "032ddbb0ca793316",
      "date": 1696627974747
    },
    {
      "item": {
        "type": "reference",
        "id": "ecf8866d36da0e73",
        "site": "wiki.ralfbarkow.ch",
        "slug": "rearrangement-of-structure",
        "title": "Rearrangement of Structure",
        "text": "The pernicious NOT of logic allows storage of contradictory information. Structure is converted into information via accumulation, via the construction and retention of more structure."
      },
      "id": "ecf8866d36da0e73",
      "type": "add",
      "after": "5a55400307122262",
      "date": 1696627982514
    },
    {
      "id": "ecf8866d36da0e73",
      "type": "move",
      "order": [
        "undefined",
        "032ddbb0ca793316",
        "2f2e3b2a1737503a",
        "7852e2a6edee6f64",
        "54c55099a347c71a",
        "bdb7859c04a4f2b6",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "8bd4c5e78dffa16f",
        "c78ff31bcd5fa2f0",
        "68307093565982015488",
        "9fdbf97c04e69580",
        "208dcfa5a439dcfd",
        "225e4bc2115c3846",
        "dd71e4842399309b",
        "2632c71567fb8714",
        "fd2bf1b64af71712",
        "1857c2a80c9149b6",
        "5c1cc032bba9c875",
        "3e091341e989a8a3",
        "4ecb30d410a4b442",
        "73fd5512776261de",
        "dcd09600b6c8c5c7",
        "ecf8866d36da0e73",
        "5a55400307122262"
      ],
      "date": 1696627988764,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "ecf8866d36da0e73",
      "item": {
        "type": "reference",
        "id": "ecf8866d36da0e73",
        "site": "wiki.ralfbarkow.ch",
        "slug": "rearrangement-of-structure",
        "title": "Rearrangement of Structure",
        "text": "The pernicious NOT of logic allows storage of contradictory information. Structure is converted into information via accumulation, via the construction and retention of more structure."
      },
      "date": 1696627992638
    },
    {
      "type": "fork",
      "date": 1696627997951
    },
    {
      "type": "remove",
      "id": "5a55400307122262",
      "date": 1696628040620
    },
    {
      "item": {
        "type": "factory",
        "id": "b82b1041f1017a01"
      },
      "id": "b82b1041f1017a01",
      "type": "add",
      "after": "ecf8866d36da0e73",
      "date": 1696628041939
    },
    {
      "type": "edit",
      "id": "dd71e4842399309b",
      "item": {
        "type": "paragraph",
        "id": "dd71e4842399309b",
        "text": "[[elm-pages]] Scripts could be a possible approach. [https://elm-pages-v3.netlify.app/docs/elm-pages-scripts/ page]"
      },
      "date": 1696628134464
    },
    {
      "type": "add",
      "id": "d36d5f0110918130",
      "item": {
        "type": "paragraph",
        "id": "d36d5f0110918130",
        "text": ""
      },
      "after": "dd71e4842399309b",
      "date": 1696628138244
    },
    {
      "id": "2f02c37ebc38b6ab",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f02c37ebc38b6ab",
        "text": "Or [[elm-concurrent-task]], which is heavily inspired by [[elm-pages]]' [[BackendTask]] and intended to be a standalone implementation that can be dropped into any [[Elm]] app. "
      },
      "after": "d36d5f0110918130",
      "attribution": {
        "page": "elm-concurrent-task"
      },
      "date": 1696628140384
    },
    {
      "type": "edit",
      "id": "2f02c37ebc38b6ab",
      "item": {
        "type": "paragraph",
        "id": "2f02c37ebc38b6ab",
        "text": "Or [[elm-concurrent-task]], which is heavily inspired by [[elm-pages]]' [[BackendTask]] and intended to be a standalone implementation that can be dropped into any [[Elm]] app. "
      },
      "date": 1696628215752
    },
    {
      "type": "remove",
      "id": "d36d5f0110918130",
      "date": 1696628244753
    },
    {
      "id": "2f2e3b2a1737503a",
      "type": "move",
      "order": [
        "undefined",
        "032ddbb0ca793316",
        "2f2e3b2a1737503a",
        "7852e2a6edee6f64",
        "54c55099a347c71a",
        "bdb7859c04a4f2b6",
        "96d2d28323600a00",
        "8e7df93e20d08b93",
        "58594286130402099200",
        "8bd4c5e78dffa16f",
        "c78ff31bcd5fa2f0",
        "68307093565982015488",
        "9fdbf97c04e69580",
        "208dcfa5a439dcfd",
        "225e4bc2115c3846",
        "dd71e4842399309b",
        "2f02c37ebc38b6ab",
        "2632c71567fb8714",
        "fd2bf1b64af71712",
        "1857c2a80c9149b6",
        "5c1cc032bba9c875",
        "3e091341e989a8a3",
        "4ecb30d410a4b442",
        "73fd5512776261de",
        "dcd09600b6c8c5c7",
        "ecf8866d36da0e73",
        "b82b1041f1017a01"
      ],
      "date": 1696628367999,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696628378378
    },
    {
      "type": "remove",
      "id": "2f2e3b2a1737503a",
      "date": 1696628409581
    },
    {
      "id": "2f2e3b2a1737503a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2f2e3b2a1737503a",
        "text": "[[String]]s collect and store structure that might be information."
      },
      "after": "032ddbb0ca793316",
      "attribution": {
        "page": "Rearrangement of Structure"
      },
      "date": 1696628414278
    },
    {
      "type": "edit",
      "id": "2f2e3b2a1737503a",
      "item": {
        "type": "paragraph",
        "id": "2f2e3b2a1737503a",
        "text": "[[String]]s collect and store structure that might be information. [⇒ [[Rearrangement of Structure]]]"
      },
      "date": 1696628459724
    },
    {
      "type": "edit",
      "id": "b82b1041f1017a01",
      "item": {
        "type": "graphviz",
        "id": "b82b1041f1017a01",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1696628504241
    },
    {
      "type": "remove",
      "date": 1696628572612
    },
    {
      "type": "edit",
      "id": "032ddbb0ca793316",
      "item": {
        "type": "paragraph",
        "id": "032ddbb0ca793316",
        "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. []"
      },
      "date": 1696628746860
    },
    {
      "type": "edit",
      "id": "032ddbb0ca793316",
      "item": {
        "type": "paragraph",
        "id": "032ddbb0ca793316",
        "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. [⇒ [[Conversation as Search]]]"
      },
      "date": 1696628781725
    },
    {
      "type": "edit",
      "id": "2f2e3b2a1737503a",
      "item": {
        "type": "paragraph",
        "id": "2f2e3b2a1737503a",
        "text": "[[String]]s collect and store [[Structure]] that might be information. [⇒ [[Rearrangement of Structure]]]"
      },
      "date": 1696628855571
    }
  ]
}