{
  "title": "Chat Typescript Formatter",
  "story": [
    {
      "type": "paragraph",
      "id": "d3442f0a6ed6a9cf",
      "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%2416925752922837cuTuJ%3Amatrix.org matrix] has created a zoom chat typescript formatter [https://github.com/WardCunningham/assets/blob/master/pages/typescript-archive/format.html github] that will generate labeled items merging sequences of posts from the same author. Whole results can be saved or individual items added to topic pages by energetic curators. Forks of this page will allow multiple authors to contribute to the archive. \n"
    },
    {
      "type": "reference",
      "id": "975bfdd81c7fd55b",
      "site": "jeff.dojo.fed.wiki",
      "slug": "typescript-archive",
      "title": "Typescript Archive",
      "text": "In theory, we archive zoom transcripts here and use an html script to improve their readability based on our posting habits on our Sunday calls."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Chat Typescript Formatter",
        "story": []
      },
      "date": 1692598441782
    },
    {
      "id": "d3442f0a6ed6a9cf",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d3442f0a6ed6a9cf",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%2416925752922837cuTuJ%3Amatrix.org matrix] I've created a zoom chat typescript formatter that will generate labeled items merging sequences of posts from the same author. Whole results can be saved or individual items added to topic pages by energetic curators. Forks of this page will allow multiple authors to contribute to the archive. \nhttp://ward.dojo.fed.wiki/view/typescript-archive/view/typescript-2023-08-13/view/typescript-2023-08-20"
      },
      "attribution": {
        "page": "2023-08-21"
      },
      "date": 1692598443508
    },
    {
      "type": "edit",
      "id": "d3442f0a6ed6a9cf",
      "item": {
        "type": "paragraph",
        "id": "d3442f0a6ed6a9cf",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%2416925752922837cuTuJ%3Amatrix.org matrix] has created a zoom chat typescript formatter that will generate labeled items merging sequences of posts from the same author. Whole results can be saved or individual items added to topic pages by energetic curators. Forks of this page will allow multiple authors to contribute to the archive. \nhttp://ward.dojo.fed.wiki/view/typescript-archive/view/typescript-2023-08-13/view/typescript-2023-08-20"
      },
      "date": 1692598454252
    },
    {
      "item": {
        "type": "factory",
        "id": "d03dfaea935f9755"
      },
      "id": "d03dfaea935f9755",
      "type": "add",
      "after": "d3442f0a6ed6a9cf",
      "date": 1692598476843
    },
    {
      "type": "edit",
      "id": "d03dfaea935f9755",
      "item": {
        "type": "roster",
        "id": "d03dfaea935f9755",
        "text": "ward.dojo.fed.wiki"
      },
      "date": 1692598480839
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "typescript-archive",
        "title": "Typescript Archive",
        "text": "In theory, we archive zoom transcripts here and use an html script to improve their readability based on our posting habits on our Sunday calls."
      },
      "after": "d03dfaea935f9755",
      "date": 1692598787689
    },
    {
      "item": {
        "type": "factory",
        "id": "975bfdd81c7fd55b"
      },
      "id": "975bfdd81c7fd55b",
      "type": "add",
      "date": 1692598807980
    },
    {
      "type": "edit",
      "id": "975bfdd81c7fd55b",
      "item": {
        "type": "reference",
        "id": "975bfdd81c7fd55b",
        "site": "jeff.dojo.fed.wiki",
        "slug": "typescript-archive",
        "title": "Typescript Archive",
        "text": "In theory, we archive zoom transcripts here and use an html script to improve their readability based on our posting habits on our Sunday calls."
      },
      "date": 1692598811629
    },
    {
      "type": "remove",
      "date": 1692598814267
    },
    {
      "type": "remove",
      "id": "d03dfaea935f9755",
      "date": 1692598816203
    },
    {
      "type": "edit",
      "id": "d3442f0a6ed6a9cf",
      "item": {
        "type": "paragraph",
        "id": "d3442f0a6ed6a9cf",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%2416925752922837cuTuJ%3Amatrix.org matrix] has created a zoom chat typescript formatter that will generate labeled items merging sequences of posts from the same author. Whole results can be saved or individual items added to topic pages by energetic curators. Forks of this page will allow multiple authors to contribute to the archive. \n"
      },
      "date": 1692598832313
    },
    {
      "id": "299a94d7d75fe51a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "299a94d7d75fe51a",
        "text": "\n\n1\n\n<div id=result onclick=dofile(event)>working</div>\n\n2\n\n<script type=module>\n\n3\n\n  import * as frame from 'http://code.fed.wiki/assets/v1/frame.js'\n\n4\n\n  const assets = await frame.assets()\n\n5\n\n  console.log(assets)\n\n6\n\n  const typescripts = assets\n\n7\n\n    .filter(asset => asset.dir == 'pages/typescript-archive')\n\n8\n\n​\n\n9\n\n  window.dofile = async event => {\n\n10\n\n    const file = event.target.innerText\n\n11\n\n    const day = file.replace(/\\.txt/,'')\n\n12\n\n    const asset = assets.find(asset => asset.file == file)\n\n13\n\n    const title = `Typescript ${day}`\n\n14\n\n    const text = await fetch(asset.url).then(res => res.text())\n\n15\n\n    const story = [\n\n16\n\n      {type:'paragraph',text:`Text extraction. See [[Typescript Archive]]`}\n\n17\n\n    ]\n\n18\n\n    let who = ''\n\n19\n\n    let when = 0\n\n20\n\n    let item = null\n\n21\n\n    let m\n\n22\n\n    for (let line of text.split(/\\r?\\n/)) {\n\n23\n\n      if (m = line.match(/^(\\d\\d:\\d\\d:\\d\\d) +From +(.*?) +To +(.*)/i)) {\n\n24\n\n        const now = Date.parse(`${day} ${m[1]}`)\n\n25\n\n        if (m[2] != who || now > when+60000) {\n\n26\n\n          if (now > when+150000) story.push({type:'pagefold',text:m[1]})\n\n27\n\n          when = now\n\n28\n\n          who = m[2]\n\n29\n\n          item = {type:'markdown',text:`${m[1]} From ${m[2]}\\n`}\n\n30\n\n          story.push(item)\n\n31\n\n        }\n\n32\n\n      } else {\n\n33\n\n        item.text += `${line.trim()}\\n`\n\n34\n\n      }\n\n35\n\n    }\n\n36\n\n    frame.open({title,story},event.shiftKey)\n\n37\n\n  }\n\n38\n\n​\n\n39\n\n  window.result.innerHTML = typescripts\n\n40\n\n    .map(typescript => `<span>${typescript.file}</span>`)\n\n41\n\n    .join(\"<br>\")\n\n42\n\n</script>\n\n    data: (unavailable)\n\nhistory: (unavailable)\nwindow: (unavailable)\ndocument: (unavailable)\noutput: (unavailable)\nt: (unavailable)\ncode: (unavailable)\n\n"
      },
      "after": "975bfdd81c7fd55b",
      "attribution": {
        "page": "2023-08-21"
      },
      "date": 1692623451707
    },
    {
      "type": "edit",
      "id": "299a94d7d75fe51a",
      "item": {
        "type": "code",
        "id": "299a94d7d75fe51a",
        "text": "<div id=result onclick=dofile(event)>working</div>\n<script type=module>\n  import * as frame from 'http://code.fed.wiki/assets/v1/frame.js'\n  const assets = await frame.assets()\n  console.log(assets)\n  const typescripts = assets\n    .filter(asset => asset.dir == 'pages/typescript-archive')\n\n  window.dofile = async event => {\n    const file = event.target.innerText\n    const day = file.replace(/\\.txt/,'')\n    const asset = assets.find(asset => asset.file == file)\n    const title = `Typescript ${day}`\n    const text = await fetch(asset.url).then(res => res.text())\n    const story = [\n      {type:'paragraph',text:`Text extraction. See [[Typescript Archive]]`}\n    ]\n    let who = ''\n    let when = 0\n    let item = null\n    let m\n    for (let line of text.split(/\\r?\\n/)) {\n      if (m = line.match(/^(\\d\\d:\\d\\d:\\d\\d) +From +(.*?) +To +(.*)/i)) {\n        const now = Date.parse(`${day} ${m[1]}`)\n        if (m[2] != who || now > when+60000) {\n          if (now > when+150000) story.push({type:'pagefold',text:m[1]})\n          when = now\n          who = m[2]\n          item = {type:'markdown',text:`${m[1]} From ${m[2]}\\n`}\n          story.push(item)\n        }\n      } else {\n        item.text += `${line.trim()}\\n`\n      }\n    }\n    frame.open({title,story},event.shiftKey)\n  }\n\n  window.result.innerHTML = typescripts\n    .map(typescript => `<span>${typescript.file}</span>`)\n    .join(\"<br>\")\n</script>"
      },
      "date": 1692623471971
    },
    {
      "type": "edit",
      "id": "d3442f0a6ed6a9cf",
      "item": {
        "type": "paragraph",
        "id": "d3442f0a6ed6a9cf",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/%2416925752922837cuTuJ%3Amatrix.org matrix] has created a zoom chat typescript formatter [https://github.com/WardCunningham/assets/blob/master/pages/typescript-archive/format.html github] that will generate labeled items merging sequences of posts from the same author. Whole results can be saved or individual items added to topic pages by energetic curators. Forks of this page will allow multiple authors to contribute to the archive. \n"
      },
      "date": 1692624119422
    },
    {
      "id": "299a94d7d75fe51a",
      "type": "remove",
      "removedTo": {
        "page": "2023-08-21"
      },
      "date": 1692624237194
    }
  ]
}