{
  "title": "Will Graph",
  "story": [
    {
      "type": "paragraph",
      "id": "26c8d3cfcfc42e66",
      "text": "Like nineteenth-century mathematics, Kafka's literature, its spatial theory or threshold science, discovered the labyrinth of the line, the line as labyrinth; and besides the various aphoristic formulations for it – \"Yes, the flying arrow rests\" – there can be discerned in it a transcription and notation, as original as it is material, of procrastination and its problem of will, i.e., of the question of how it manifests not only a conditional choice but an undecided choice between choosing and not choosing. Kafka's labyrinthine line is precisely the permanently diverted path. In a short reflection, Kafka established this connection: \"Man has free will, and that in three ways: He was free when he wanted this life, but now he can no longer reverse it, for he is no longer the one who wanted it then, except insofar as he carries out his then will by living. Secondly, he is free by being able to choose the course and the way of this life. Thirdly, he is free in that he, as the one who will be one day, has the will to let himself go through life under any condition and to come to himself in this way and that on a selectable, but in any case on such a labyrinthine way that he leaves no spot of this life untouched This is the threefoldness of free will, but it is also, since it is simultaneous, a monotony and is basically so much monotony that it has no place for a will, neither for a free nor for an unfree one."
    },
    {
      "type": "paragraph",
      "id": "8affcb7be0287423",
      "text": "The argument consists of two parts or halves which are directly related to each other. On the one half it entails the assumption of a radically free will, i.e. of a choosability, that it must apply to every moment of life: first, directed from the beginning to the future; second, retrospectively related to the affirmation of what has been lived; and third, in every point of the course of life, which always confronts anew the choice of choosing. The second half of the argument is the labyrinthine graph. If this \"choosable\" path leaves \"no spot of this life\" untouched, it results not only in an infinitely intertwined line, but in a line that changes direction in each of its sections, fills every \"spot,\" is no longer a line but a scattering of points, indicating that in each of them the orientation and the continuation of the course of life are at stake. The path is thus not only labyrinthine, but \"so labyrinthine\" that there is no recognizable orientation (anymore); a monstrous oscillation. And this in turn reproduces free will as a graph: Only if the graph of will no longer shows individual directions, \"simultaneously\" encloses all and, as it were, draws a hatching, i.e. a dissolution of certain directions into indistinguishability, free will is depicted in it. But it appears in it just neither as free will nor as its opposite, but as \"monotony\": free will, the choice of choosing, shows itself only if it actualizes itself not in this or that course of life, but in all possible courses - and thus in none. Where there is a will, there is not only one way, but there are all possible ways and therefore a labyrinth. And in this respect there is just no way, but only a \"hesitation\"."
    },
    {
      "type": "paragraph",
      "id": "d02648ba445553c4",
      "text": "Only a few years later, Kafka's labyrinthine graph of will was reformulated on a different field of paper with a comparable result, namely formalized as a decision problem. Based on the assertion, with which [[David Hilbert]] occupied mathematics for a long time, namely on the assertion that a general method for the distinction between decidable and non-decidable problems is possible in mathematics, thus based on this decision problem, [[Alain Turing]] in an essay of 1937 started the counter-proof and thus entangled his universal computing machine in an endless dithering. The problem can be stated here, in layman's terms briefly, as follows. Starting point are two different types of machines. One machine works circularly, i.e. it computes a computable sequence and comes to a stop after a finite number of operations. Another machine is called circular, it deals with unpredictable sequences and comes to a hopeless state or to no end. With these machines decidable problems can be distinguished from non-decidable problems. Now, however, a machine is to be conceived, which can distinguish the circular from the circular ones from the set of all machines and thus itself make a decision between decidability and non-decidability. For this purpose, this machine H, which itself is circle-free and runs through a finite computational path, is fed with a set of machines; it marks the machines and distinguishes the circle-free ones from the circular ones. And that means that whenever she comes across a circular machine, it is excluded (N - 1), and H advances to check the next machine (N + 1). It can thus make a list of possible machines and sort out the impossible ones; this results in the list = N - 1. But in order to decide the decidability problem on the example of all machines, the machine H must simulate itself, i.e. include its own decision operation in the set of computable operations. Thus, when checking all machines - at the point where its own description number, its own algorithm appears - it receives the command to check its own operations, and does the whole work again: checks and sorts out the set of machines, sorts out the impossible ones, gets back to its own algorithm, starts the operation again from the beginning, runs through the computational path once more - an infinite nesting, an infinite recursion. The machine has a halting problem. But since this machine H is defined as circular, its operation contradicts the judgment. It is circular and circular-free at the same time, decides and does not decide, so there cannot be such a machine. The question of a decision between decidability and non-decidability cannot be decided; faced with this decision problem, the machine falls into procrastination or into a kind of \"brooding\". And the problem can at best be delegated to a higher authority or machine and gets lost in an endless regress. With its continuous run, Turing's impossible machine rummages through the sufficient ground of all mathematical problems, without result. Like Kafka's labyrinthine graph, the calculation path of this - impossible - machine always ends in itself. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Will Graph",
        "story": []
      },
      "date": 1652731306281
    },
    {
      "item": {
        "type": "factory",
        "id": "26c8d3cfcfc42e66"
      },
      "id": "26c8d3cfcfc42e66",
      "type": "add",
      "date": 1652731366739
    },
    {
      "type": "edit",
      "id": "26c8d3cfcfc42e66",
      "item": {
        "type": "paragraph",
        "id": "26c8d3cfcfc42e66",
        "text": "Like nineteenth-century mathematics, Kafka's literature, its spatial theory or threshold science, discovered the labyrinth of the line, the line as labyrinth; and besides the various aphoristic formulations for it-\"Yes, the flying arrow rests\"-there can be discerned in it a transcription and notation, as original as it is material, of procrastination and its problem of will, i.e., of the question of how it manifests not only a conditional choice but an undecided choice between choosing and not choosing. Kafka's labyrinthine line is precisely the permanently diverted path. In a short reflection, Kafka established this connection: \"Man has free will, and that in three ways: He was free when he wanted this life, but now he can no longer reverse it, for he is no longer the one who wanted it then, except insofar as he carries out his then will by living. Secondly, he is free by being able to choose the course and the way of this life. Thirdly, he is free in that he, as the one who will be one day, has the will to let himself go through life under any condition and to come to himself in this way and that on a selectable, but in any case on such a labyrinthine way that he leaves no spot of this life untouched This is the threefoldness of free will, but it is also, since it is simultaneous, a monotony and is basically so much monotony that it has no place for a will, neither for a free nor for an unfree one."
      },
      "date": 1652731368809
    },
    {
      "type": "edit",
      "id": "26c8d3cfcfc42e66",
      "item": {
        "type": "paragraph",
        "id": "26c8d3cfcfc42e66",
        "text": "Like nineteenth-century mathematics, Kafka's literature, its spatial theory or threshold science, discovered the labyrinth of the line, the line as labyrinth; and besides the various aphoristic formulations for it – \"Yes, the flying arrow rests\" – there can be discerned in it a transcription and notation, as original as it is material, of procrastination and its problem of will, i.e., of the question of how it manifests not only a conditional choice but an undecided choice between choosing and not choosing. Kafka's labyrinthine line is precisely the permanently diverted path. In a short reflection, Kafka established this connection: \"Man has free will, and that in three ways: He was free when he wanted this life, but now he can no longer reverse it, for he is no longer the one who wanted it then, except insofar as he carries out his then will by living. Secondly, he is free by being able to choose the course and the way of this life. Thirdly, he is free in that he, as the one who will be one day, has the will to let himself go through life under any condition and to come to himself in this way and that on a selectable, but in any case on such a labyrinthine way that he leaves no spot of this life untouched This is the threefoldness of free will, but it is also, since it is simultaneous, a monotony and is basically so much monotony that it has no place for a will, neither for a free nor for an unfree one."
      },
      "date": 1652731411613
    },
    {
      "item": {
        "type": "factory",
        "id": "8affcb7be0287423"
      },
      "id": "8affcb7be0287423",
      "type": "add",
      "after": "26c8d3cfcfc42e66",
      "date": 1652731626061
    },
    {
      "type": "edit",
      "id": "8affcb7be0287423",
      "item": {
        "type": "paragraph",
        "id": "8affcb7be0287423",
        "text": "The argument consists of two parts or halves which are directly related to each other. On the one half it entails the assumption of a radically free will, i.e. of a choosability, that it must apply to every moment of life: first, directed from the beginning to the future; second, retrospectively related to the affirmation of what has been lived; and third, in every point of the course of life, which always confronts anew the choice of choosing. The second half of the argument is the labyrinthine graph. If this \"choosable\" path leaves \"no spot of this life\" untouched, it results not only in an infinitely intertwined line, but in a line that changes direction in each of its sections, fills every \"spot,\" is no longer a line but a scattering of points, indicating that in each of them the orientation and the continuation of the course of life are at stake. The path is thus not only labyrinthine, but \"so labyrinthine\" that there is no recognizable orientation (anymore); a monstrous oscillation. And this in turn reproduces free will as a graph: Only if the graph of will no longer shows individual directions, \"simultaneously\" encloses all and, as it were, draws a hatching, i.e. a dissolution of certain directions into indistinguishability, free will is depicted in it. But it appears in it just neither as free will nor as its opposite, but as \"monotony\": free will, the choice of choosing, shows itself only if it actualizes itself not in this or that course of life, but in all possible courses - and thus in none. Where there is a will, there is not only one way, but there are all possible ways and therefore a labyrinth. And in this respect there is just no way, but only a \"hesitation\"."
      },
      "date": 1652731627732
    },
    {
      "item": {
        "type": "factory",
        "id": "d02648ba445553c4"
      },
      "id": "d02648ba445553c4",
      "type": "add",
      "after": "8affcb7be0287423",
      "date": 1652731970068
    },
    {
      "type": "edit",
      "id": "d02648ba445553c4",
      "item": {
        "type": "paragraph",
        "id": "d02648ba445553c4",
        "text": "Only a few years later, Kafka's labyrinthine graph of will was reformulated on a different field of paper with a comparable result, namely formalized as a decision problem. Based on the assertion, with which David Hilbert occupied mathematics for a long time, namely on the assertion that a general method for the distinction between decidable and non-decidable problems is possible in mathematics, thus based on this decision problem, Alain Turing in an essay of 1937 started the counter-proof and thus entangled his universal computing machine in an endless dithering. The problem can be stated here, in layman's terms briefly, as follows. Starting point are two different types of machines. One machine works circularly, i.e. it computes a computable sequence and comes to a stop after a finite number of operations. Another machine is called circular, it deals with unpredictable sequences and comes to a hopeless state or to no end. With these machines decidable problems can be distinguished from non-decidable problems. Now, however, a machine is to be conceived, which can distinguish the circular from the circular ones from the set of all machines and thus itself make a decision between decidability and non-decidability. For this purpose, this machine H, which itself is circle-free and runs through a finite computational path, is fed with a set of machines; it marks the machines and distinguishes the circle-free ones from the circular ones. And that means that whenever she comes across a circular machine, it is excluded (N- 1), and H advances to check the next machine (N +1). It can thus make a list of possible machines and sort out the impossible ones; this results in the list = N- 1. But in order to decide the decidability problem on the example of all machines, the machine H must simulate itself, i.e. include its own decision operation in the set of computable operations. Thus, when checking all machines - at the point where its own description number, its own algorithm appears - it receives the command to check its own operations, and does the whole work again: checks and sorts out the set of machines, sorts out the impossible ones, gets back to its own algorithm, starts the operation again from the beginning, runs through the computational path once more - an infinite nesting, an infinite recursion. The machine has a halting problem. But since this machine H is defined as circular, its operation contradicts the judgment. It is circular and circular-free at the same time, decides and does not decide, so there cannot be such a machine. The question of a decision between decidability and non-decidability cannot be decided; faced with this decision problem, the machine falls into procrastination or into a kind of \"brooding\". And the problem can at best be delegated to a higher authority or machine and gets lost in an endless regress. With its continuous run, Turing's impossible machine rummages through the sufficient ground of all mathematical problems, without result. Like Kafka's labyrinthine graph, the calculation path of this - impossible - machine always ends in itself. "
      },
      "date": 1652731977217
    },
    {
      "type": "edit",
      "id": "d02648ba445553c4",
      "item": {
        "type": "paragraph",
        "id": "d02648ba445553c4",
        "text": "Only a few years later, Kafka's labyrinthine graph of will was reformulated on a different field of paper with a comparable result, namely formalized as a decision problem. Based on the assertion, with which [[David Hilbert]] occupied mathematics for a long time, namely on the assertion that a general method for the distinction between decidable and non-decidable problems is possible in mathematics, thus based on this decision problem, [[Alain Turing]] in an essay of 1937 started the counter-proof and thus entangled his universal computing machine in an endless dithering. The problem can be stated here, in layman's terms briefly, as follows. Starting point are two different types of machines. One machine works circularly, i.e. it computes a computable sequence and comes to a stop after a finite number of operations. Another machine is called circular, it deals with unpredictable sequences and comes to a hopeless state or to no end. With these machines decidable problems can be distinguished from non-decidable problems. Now, however, a machine is to be conceived, which can distinguish the circular from the circular ones from the set of all machines and thus itself make a decision between decidability and non-decidability. For this purpose, this machine H, which itself is circle-free and runs through a finite computational path, is fed with a set of machines; it marks the machines and distinguishes the circle-free ones from the circular ones. And that means that whenever she comes across a circular machine, it is excluded (N- 1), and H advances to check the next machine (N +1). It can thus make a list of possible machines and sort out the impossible ones; this results in the list = N- 1. But in order to decide the decidability problem on the example of all machines, the machine H must simulate itself, i.e. include its own decision operation in the set of computable operations. Thus, when checking all machines - at the point where its own description number, its own algorithm appears - it receives the command to check its own operations, and does the whole work again: checks and sorts out the set of machines, sorts out the impossible ones, gets back to its own algorithm, starts the operation again from the beginning, runs through the computational path once more - an infinite nesting, an infinite recursion. The machine has a halting problem. But since this machine H is defined as circular, its operation contradicts the judgment. It is circular and circular-free at the same time, decides and does not decide, so there cannot be such a machine. The question of a decision between decidability and non-decidability cannot be decided; faced with this decision problem, the machine falls into procrastination or into a kind of \"brooding\". And the problem can at best be delegated to a higher authority or machine and gets lost in an endless regress. With its continuous run, Turing's impossible machine rummages through the sufficient ground of all mathematical problems, without result. Like Kafka's labyrinthine graph, the calculation path of this - impossible - machine always ends in itself. "
      },
      "date": 1652732049548
    },
    {
      "type": "edit",
      "id": "d02648ba445553c4",
      "item": {
        "type": "paragraph",
        "id": "d02648ba445553c4",
        "text": "Only a few years later, Kafka's labyrinthine graph of will was reformulated on a different field of paper with a comparable result, namely formalized as a decision problem. Based on the assertion, with which [[David Hilbert]] occupied mathematics for a long time, namely on the assertion that a general method for the distinction between decidable and non-decidable problems is possible in mathematics, thus based on this decision problem, [[Alain Turing]] in an essay of 1937 started the counter-proof and thus entangled his universal computing machine in an endless dithering. The problem can be stated here, in layman's terms briefly, as follows. Starting point are two different types of machines. One machine works circularly, i.e. it computes a computable sequence and comes to a stop after a finite number of operations. Another machine is called circular, it deals with unpredictable sequences and comes to a hopeless state or to no end. With these machines decidable problems can be distinguished from non-decidable problems. Now, however, a machine is to be conceived, which can distinguish the circular from the circular ones from the set of all machines and thus itself make a decision between decidability and non-decidability. For this purpose, this machine H, which itself is circle-free and runs through a finite computational path, is fed with a set of machines; it marks the machines and distinguishes the circle-free ones from the circular ones. And that means that whenever she comes across a circular machine, it is excluded (N- 1), and H advances to check the next machine (N +1). It can thus make a list of possible machines and sort out the impossible ones; this results in the list = N - 1. But in order to decide the decidability problem on the example of all machines, the machine H must simulate itself, i.e. include its own decision operation in the set of computable operations. Thus, when checking all machines - at the point where its own description number, its own algorithm appears - it receives the command to check its own operations, and does the whole work again: checks and sorts out the set of machines, sorts out the impossible ones, gets back to its own algorithm, starts the operation again from the beginning, runs through the computational path once more - an infinite nesting, an infinite recursion. The machine has a halting problem. But since this machine H is defined as circular, its operation contradicts the judgment. It is circular and circular-free at the same time, decides and does not decide, so there cannot be such a machine. The question of a decision between decidability and non-decidability cannot be decided; faced with this decision problem, the machine falls into procrastination or into a kind of \"brooding\". And the problem can at best be delegated to a higher authority or machine and gets lost in an endless regress. With its continuous run, Turing's impossible machine rummages through the sufficient ground of all mathematical problems, without result. Like Kafka's labyrinthine graph, the calculation path of this - impossible - machine always ends in itself. "
      },
      "date": 1652732145242
    },
    {
      "type": "edit",
      "id": "d02648ba445553c4",
      "item": {
        "type": "paragraph",
        "id": "d02648ba445553c4",
        "text": "Only a few years later, Kafka's labyrinthine graph of will was reformulated on a different field of paper with a comparable result, namely formalized as a decision problem. Based on the assertion, with which [[David Hilbert]] occupied mathematics for a long time, namely on the assertion that a general method for the distinction between decidable and non-decidable problems is possible in mathematics, thus based on this decision problem, [[Alain Turing]] in an essay of 1937 started the counter-proof and thus entangled his universal computing machine in an endless dithering. The problem can be stated here, in layman's terms briefly, as follows. Starting point are two different types of machines. One machine works circularly, i.e. it computes a computable sequence and comes to a stop after a finite number of operations. Another machine is called circular, it deals with unpredictable sequences and comes to a hopeless state or to no end. With these machines decidable problems can be distinguished from non-decidable problems. Now, however, a machine is to be conceived, which can distinguish the circular from the circular ones from the set of all machines and thus itself make a decision between decidability and non-decidability. For this purpose, this machine H, which itself is circle-free and runs through a finite computational path, is fed with a set of machines; it marks the machines and distinguishes the circle-free ones from the circular ones. And that means that whenever she comes across a circular machine, it is excluded (N - 1), and H advances to check the next machine (N + 1). It can thus make a list of possible machines and sort out the impossible ones; this results in the list = N - 1. But in order to decide the decidability problem on the example of all machines, the machine H must simulate itself, i.e. include its own decision operation in the set of computable operations. Thus, when checking all machines - at the point where its own description number, its own algorithm appears - it receives the command to check its own operations, and does the whole work again: checks and sorts out the set of machines, sorts out the impossible ones, gets back to its own algorithm, starts the operation again from the beginning, runs through the computational path once more - an infinite nesting, an infinite recursion. The machine has a halting problem. But since this machine H is defined as circular, its operation contradicts the judgment. It is circular and circular-free at the same time, decides and does not decide, so there cannot be such a machine. The question of a decision between decidability and non-decidability cannot be decided; faced with this decision problem, the machine falls into procrastination or into a kind of \"brooding\". And the problem can at best be delegated to a higher authority or machine and gets lost in an endless regress. With its continuous run, Turing's impossible machine rummages through the sufficient ground of all mathematical problems, without result. Like Kafka's labyrinthine graph, the calculation path of this - impossible - machine always ends in itself. "
      },
      "date": 1652732607063
    }
  ]
}