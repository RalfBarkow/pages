{
  "title": "2024-02-15",
  "story": [
    {
      "type": "paragraph",
      "id": "35f9e5ef892be129",
      "text": "[http://a.dreyeck.ch A] @ dreyeck.ch"
    },
    {
      "type": "reference",
      "id": "237d98402cf34f07",
      "site": "ward.dojo.fed.wiki",
      "slug": "walk-the-neighborhood",
      "title": "Walk the Neighborhood",
      "text": "See [[Speed Bot]], [[Speed Bot Journey]]"
    },
    {
      "type": "image",
      "id": "c84e6b9863a5d57b",
      "text": "Initialize",
      "size": "wide",
      "width": 419,
      "height": 226,
      "url": "/assets/plugins/image/3ba5c3c0f08f515498e09b4de656d98e.jpg"
    },
    {
      "type": "markdown",
      "id": "ed09a4f7c9f80296",
      "text": "The above image is a sort of diff between the version of `walk.html` I looked at yesterday and the version Ward created overnight."
    },
    {
      "type": "paragraph",
      "id": "f09f99769bca4d55",
      "text": "The walk.html code is now pretty close to the organization suggested in original proposal and now copied into the page. There is a section labeled BEHAVIOR where interpreting your writing conventions would go. [https://github.com/WardCunningham/assets/blob/master/pages/walk-the-neighborhood/walk.html github]"
    },
    {
      "type": "code",
      "id": "315c66d7c3b60ac2",
      "text": "// B E H A V I O R\n\n  function links(page) {\n    return Object.keys(info(page).links || {})\n      .map(slug => {\n        const site = resolve(slug)\n        const history = page.history.find(page => page.slug == slug)\n        return {slug,site,history}\n      })\n  }\n\n  function choose() {\n    const at = lineup.length-1\n    const options = links(lineup[at])\n      .filter(link => link.site && !link.history)\n    if (options.length) {\n      const choice = options[Math.floor(Math.random()*options.length)]\n      click(at,choice.site,choice.slug)}\n    else {\n      lineup.pop()\n      choose()}\n  }\n\n  function click(at,site,slug) {\n    const page = {site,slug,history:[]}\n    lineup.splice(at+1,Infinity,page)\n    lineup[at].history.push(page)\n    history.push(page)\n  }\n\n  function resolve(slug) {\n    for (const sitemap of sitemaps)\n      for (const info of sitemap)\n        if (info.slug == slug) return sitemap.site\n    return null\n  }"
    },
    {
      "type": "reference",
      "id": "cfa20e737e61b9ad",
      "site": "a.dreyeck.ch",
      "slug": "a",
      "title": "A",
      "text": "⇒ [[Behavior of Walk]]"
    },
    {
      "type": "image",
      "id": "6ef0ba724cf60495",
      "text": "42",
      "size": "wide",
      "width": 419,
      "height": 570,
      "url": "/assets/plugins/image/d5329b4f39f2336b75b738a029325a01.jpg"
    },
    {
      "type": "pagefold",
      "id": "88c8d91d6543e7fc",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9b2e8a235d3d2bd7",
      "text": "Was spricht für die Wahl einer bestimmten [[Unterscheidung]]?"
    },
    {
      "type": "paragraph",
      "id": "6196fa67ea9ca7bf",
      "text": "We are getting the list of links out of the sitemaps. This is how Paul implements \"what links here\"."
    },
    {
      "type": "paragraph",
      "id": "883f1e4c851b9cf9",
      "text": "Sync problem with NERGİZ und TAŞ - 2021 - Zarf Kavramının Öğretiminde Örnek Ayrıntılama Stra.pdf"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-02-15",
        "story": []
      },
      "date": 1707977087958
    },
    {
      "item": {
        "type": "factory",
        "id": "35f9e5ef892be129"
      },
      "id": "35f9e5ef892be129",
      "type": "add",
      "date": 1707977089707
    },
    {
      "type": "edit",
      "id": "35f9e5ef892be129",
      "item": {
        "type": "paragraph",
        "id": "35f9e5ef892be129",
        "text": "[http://a.dreyeck.ch A]@dreyeck.ch"
      },
      "date": 1707977120653
    },
    {
      "type": "edit",
      "id": "35f9e5ef892be129",
      "item": {
        "type": "paragraph",
        "id": "35f9e5ef892be129",
        "text": "[http://a.dreyeck.ch A] @ dreyeck.ch"
      },
      "date": 1707977126884
    },
    {
      "item": {
        "type": "factory",
        "id": "237d98402cf34f07"
      },
      "id": "237d98402cf34f07",
      "type": "add",
      "after": "35f9e5ef892be129",
      "date": 1707977224389
    },
    {
      "type": "edit",
      "id": "237d98402cf34f07",
      "item": {
        "type": "reference",
        "id": "237d98402cf34f07",
        "site": "ward.dojo.fed.wiki",
        "slug": "walk-the-neighborhood",
        "title": "Walk the Neighborhood",
        "text": "See [[Speed Bot]], [[Speed Bot Journey]]"
      },
      "date": 1707977226765
    },
    {
      "item": {
        "type": "factory",
        "id": "c84e6b9863a5d57b"
      },
      "id": "c84e6b9863a5d57b",
      "type": "add",
      "after": "237d98402cf34f07",
      "date": 1707977587367
    },
    {
      "type": "edit",
      "id": "c84e6b9863a5d57b",
      "item": {
        "type": "image",
        "id": "c84e6b9863a5d57b",
        "text": "Initialize",
        "size": "wide",
        "width": 419,
        "height": 226,
        "url": "/assets/plugins/image/3ba5c3c0f08f515498e09b4de656d98e.jpg"
      },
      "date": 1707977611939
    },
    {
      "item": {
        "type": "factory",
        "id": "ed09a4f7c9f80296"
      },
      "id": "ed09a4f7c9f80296",
      "type": "add",
      "after": "c84e6b9863a5d57b",
      "date": 1707977635870
    },
    {
      "type": "edit",
      "id": "ed09a4f7c9f80296",
      "item": {
        "type": "paragraph",
        "id": "ed09a4f7c9f80296",
        "text": "Die obige Abbildung ist eine Art Diff zwischen der Version von `walk.html`, die ich gestern angeschaut habe, und der Version, die Ward über Nacht erstellt hat."
      },
      "date": 1707977693389
    },
    {
      "type": "edit",
      "id": "ed09a4f7c9f80296",
      "item": {
        "type": "paragraph",
        "id": "ed09a4f7c9f80296",
        "text": "The above image is a sort of diff between the version of `walk.html` I looked at yesterday and the version Ward created overnight."
      },
      "date": 1707977736290
    },
    {
      "item": {
        "type": "factory",
        "id": "f09f99769bca4d55"
      },
      "id": "f09f99769bca4d55",
      "type": "add",
      "after": "ed09a4f7c9f80296",
      "date": 1707977869461
    },
    {
      "type": "edit",
      "id": "f09f99769bca4d55",
      "item": {
        "type": "paragraph",
        "id": "f09f99769bca4d55",
        "text": "The walk.html code is now pretty close to the organization suggested in original proposal and now copied into the page. There is a section labeled BEHAVIOR where interpreting your writing conventions would go. https://github.com/WardCunningham/assets/blob/master/pages/walk-the-neighborhood/walk.html"
      },
      "date": 1707977871055
    },
    {
      "item": {
        "type": "factory",
        "id": "315c66d7c3b60ac2"
      },
      "id": "315c66d7c3b60ac2",
      "type": "add",
      "after": "f09f99769bca4d55",
      "date": 1707977911005
    },
    {
      "type": "edit",
      "id": "315c66d7c3b60ac2",
      "item": {
        "type": "code",
        "id": "315c66d7c3b60ac2",
        "text": "// B E H A V I O R\n\n  function links(page) {\n    return Object.keys(info(page).links || {})\n      .map(slug => {\n        const site = resolve(slug)\n        const history = page.history.find(page => page.slug == slug)\n        return {slug,site,history}\n      })\n  }\n\n  function choose() {\n    const at = lineup.length-1\n    const options = links(lineup[at])\n      .filter(link => link.site && !link.history)\n    if (options.length) {\n      const choice = options[Math.floor(Math.random()*options.length)]\n      click(at,choice.site,choice.slug)}\n    else {\n      lineup.pop()\n      choose()}\n  }\n\n  function click(at,site,slug) {\n    const page = {site,slug,history:[]}\n    lineup.splice(at+1,Infinity,page)\n    lineup[at].history.push(page)\n    history.push(page)\n  }\n\n  function resolve(slug) {\n    for (const sitemap of sitemaps)\n      for (const info of sitemap)\n        if (info.slug == slug) return sitemap.site\n    return null\n  }"
      },
      "date": 1707977914497
    },
    {
      "type": "edit",
      "id": "ed09a4f7c9f80296",
      "item": {
        "type": "markdown",
        "id": "ed09a4f7c9f80296",
        "text": "The above image is a sort of diff between the version of `walk.html` I looked at yesterday and the version Ward created overnight."
      },
      "date": 1707977935083
    },
    {
      "type": "edit",
      "id": "f09f99769bca4d55",
      "item": {
        "type": "paragraph",
        "id": "f09f99769bca4d55",
        "text": "The walk.html code is now pretty close to the organization suggested in original proposal and now copied into the page. There is a section labeled BEHAVIOR where interpreting your writing conventions would go. [https://github.com/WardCunningham/assets/blob/master/pages/walk-the-neighborhood/walk.html github]"
      },
      "date": 1707977958050
    },
    {
      "item": {
        "type": "factory",
        "id": "e5a12c0f2c6c3e9d"
      },
      "id": "e5a12c0f2c6c3e9d",
      "type": "add",
      "after": "315c66d7c3b60ac2",
      "date": 1707978727960
    },
    {
      "type": "edit",
      "id": "e5a12c0f2c6c3e9d",
      "item": {
        "type": "reference",
        "id": "e5a12c0f2c6c3e9d",
        "site": "a.dreyeck.ch",
        "slug": "welcome-visitors",
        "title": "Welcome Visitors",
        "text": "Welcome to this [[Federated Wiki]] site. From this page you can find who we are and what we do. New sites provide this information and then claim the site as their own. You will need your own site to participate."
      },
      "date": 1707978758465
    },
    {
      "item": {
        "type": "factory",
        "id": "cfa20e737e61b9ad"
      },
      "id": "cfa20e737e61b9ad",
      "type": "add",
      "after": "e5a12c0f2c6c3e9d",
      "date": 1707978818288
    },
    {
      "type": "edit",
      "id": "cfa20e737e61b9ad",
      "item": {
        "type": "reference",
        "id": "cfa20e737e61b9ad",
        "site": "a.dreyeck.ch",
        "slug": "a",
        "title": "A",
        "text": "A page with 0 items."
      },
      "date": 1707978822675
    },
    {
      "item": {
        "type": "factory",
        "id": "7d746e51dd81d540"
      },
      "id": "7d746e51dd81d540",
      "type": "add",
      "after": "cfa20e737e61b9ad",
      "date": 1707980330484
    },
    {
      "type": "edit",
      "id": "7d746e51dd81d540",
      "item": {
        "type": "markdown",
        "id": "7d746e51dd81d540",
        "text": "This JavaScript code represents a simple web application that explores wiki pages in a federated wiki system. Let's break down the code into sections and explain each part:\n\n1. **Initialization**:\n   - The script imports the `frame` module from a federated wiki system, which provides functions for interacting with wiki pages.\n   - It initializes some variables like `context`, `neighbors`, `sitemaps`, `lineup`, and `history`.\n   - The `load` function fetches and displays information about neighbors (other wiki sites) and their sitemaps.\n\n2. **Interaction**:\n   - Two functions `start` and `more` are defined as event handlers for the \"start\" and \"more\" buttons respectively.\n   - The `start` function clears the `lineup` and `history`, initiates a click on the starting page, and shows the result.\n   - The `more` function chooses a random link from the current page and initiates a click on it.\n\n3. **Behavior**:\n   - The `links` function retrieves links from a given page.\n   - The `choose` function randomly selects a link from the current page and initiates a click on it.\n   - The `click` function simulates a click action on a link by adding the clicked page to the `lineup` and updating the `history`.\n   - The `resolve` function finds the site corresponding to a given slug.\n\n4. **Rendering**:\n   - The `show` function updates the UI to display the current lineup of pages and opens a frame to visualize the exploration path.\n   - The `dotify` function generates a DOT language representation of the exploration path for visualization.\n\nOverall, this code represents a simple exploration mechanism for browsing wiki pages in a federated wiki system. It allows users to start from a specific page, follow random links, and visualize the exploration path. (ChatGPT 3.5)"
      },
      "date": 1707980333348
    },
    {
      "type": "edit",
      "id": "7d746e51dd81d540",
      "item": {
        "type": "markdown",
        "id": "7d746e51dd81d540",
        "text": "[http://a.dreyeck.ch/assets/pages/walk-the-neighborhood/walk.html This JavaScript code] represents a simple web application that explores wiki pages in a federated wiki system. Let's break down the code into sections and explain each part:\n\n1. **Initialization**:\n   - The script imports the `frame` module from a federated wiki system, which provides functions for interacting with wiki pages.\n   - It initializes some variables like `context`, `neighbors`, `sitemaps`, `lineup`, and `history`.\n   - The `load` function fetches and displays information about neighbors (other wiki sites) and their sitemaps.\n\n2. **Interaction**:\n   - Two functions `start` and `more` are defined as event handlers for the \"start\" and \"more\" buttons respectively.\n   - The `start` function clears the `lineup` and `history`, initiates a click on the starting page, and shows the result.\n   - The `more` function chooses a random link from the current page and initiates a click on it.\n\n3. **Behavior**:\n   - The `links` function retrieves links from a given page.\n   - The `choose` function randomly selects a link from the current page and initiates a click on it.\n   - The `click` function simulates a click action on a link by adding the clicked page to the `lineup` and updating the `history`.\n   - The `resolve` function finds the site corresponding to a given slug.\n\n4. **Rendering**:\n   - The `show` function updates the UI to display the current lineup of pages and opens a frame to visualize the exploration path.\n   - The `dotify` function generates a DOT language representation of the exploration path for visualization.\n\nOverall, this code represents a simple exploration mechanism for browsing wiki pages in a federated wiki system. It allows users to start from a specific page, follow random links, and visualize the exploration path. (ChatGPT 3.5)"
      },
      "date": 1707980374184
    },
    {
      "type": "edit",
      "id": "7d746e51dd81d540",
      "item": {
        "type": "markdown",
        "id": "7d746e51dd81d540",
        "text": "[http://a.dreyeck.ch/assets/pages/walk-the-neighborhood/walk.html This JavaScript code] represents a simple web application that explores wiki pages in a federated wiki system. Let's break down the code into sections and explain each part:\n\n1. **Initialization**:\n   - The script imports the `frame` module from a federated wiki system, which provides functions for interacting with wiki pages.\n   - It initializes some variables like `context`, `neighbors`, `sitemaps`, `lineup`, and `history`.\n   - The `load` function fetches and displays information about neighbors (other wiki sites) and their sitemaps.\n\n2. **Interaction**:\n   - Two functions `start` and `more` are defined as event handlers for the \"start\" and \"more\" buttons respectively.\n   - The `start` function clears the `lineup` and `history`, initiates a click on the starting page, and shows the result.\n   - The `more` function chooses a random link from the current page and initiates a click on it.\n\n3. **[[Behavior of Walk]]**:\n   - The `links` function retrieves links from a given page.\n   - The `choose` function randomly selects a link from the current page and initiates a click on it.\n   - The `click` function simulates a click action on a link by adding the clicked page to the `lineup` and updating the `history`.\n   - The `resolve` function finds the site corresponding to a given slug.\n\n4. **Rendering**:\n   - The `show` function updates the UI to display the current lineup of pages and opens a frame to visualize the exploration path.\n   - The `dotify` function generates a DOT language representation of the exploration path for visualization.\n\nOverall, this code represents a simple exploration mechanism for browsing wiki pages in a federated wiki system. It allows users to start from a specific page, follow random links, and visualize the exploration path. (ChatGPT 3.5)"
      },
      "date": 1707980541411
    },
    {
      "id": "7d746e51dd81d540",
      "type": "remove",
      "removedTo": {
        "page": "Behavior of Walk"
      },
      "date": 1707980585254
    },
    {
      "item": {
        "type": "factory",
        "id": "89f5f70f9aeed984"
      },
      "id": "89f5f70f9aeed984",
      "type": "add",
      "after": "cfa20e737e61b9ad",
      "date": 1707980772660
    },
    {
      "type": "edit",
      "id": "89f5f70f9aeed984",
      "item": {
        "type": "paragraph",
        "id": "89f5f70f9aeed984",
        "text": "⇒ [[Behavior of Walk]]"
      },
      "date": 1707980793131
    },
    {
      "type": "remove",
      "id": "e5a12c0f2c6c3e9d",
      "date": 1707980797491
    },
    {
      "type": "remove",
      "id": "89f5f70f9aeed984",
      "date": 1707980800835
    },
    {
      "type": "edit",
      "id": "cfa20e737e61b9ad",
      "item": {
        "type": "reference",
        "id": "cfa20e737e61b9ad",
        "site": "a.dreyeck.ch",
        "slug": "a",
        "title": "A",
        "text": "⇒ [[Behavior of Walk]]"
      },
      "date": 1707980801846
    },
    {
      "item": {
        "type": "factory",
        "id": "6ef0ba724cf60495"
      },
      "id": "6ef0ba724cf60495",
      "type": "add",
      "after": "cfa20e737e61b9ad",
      "date": 1707983041559
    },
    {
      "type": "edit",
      "id": "6ef0ba724cf60495",
      "item": {
        "type": "image",
        "id": "6ef0ba724cf60495",
        "text": "42",
        "size": "wide",
        "width": 419,
        "height": 570,
        "url": "/assets/plugins/image/d5329b4f39f2336b75b738a029325a01.jpg"
      },
      "date": 1707983058183
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707983114043
    },
    {
      "item": {
        "type": "factory",
        "id": "88c8d91d6543e7fc"
      },
      "id": "88c8d91d6543e7fc",
      "type": "add",
      "after": "6ef0ba724cf60495",
      "date": 1708010655601
    },
    {
      "type": "edit",
      "id": "88c8d91d6543e7fc",
      "item": {
        "type": "pagefold",
        "id": "88c8d91d6543e7fc",
        "text": "~"
      },
      "date": 1708010660897
    },
    {
      "item": {
        "type": "factory",
        "id": "9b2e8a235d3d2bd7"
      },
      "id": "9b2e8a235d3d2bd7",
      "type": "add",
      "after": "88c8d91d6543e7fc",
      "date": 1708010671894
    },
    {
      "type": "edit",
      "id": "9b2e8a235d3d2bd7",
      "item": {
        "type": "paragraph",
        "id": "9b2e8a235d3d2bd7",
        "text": "Was spricht für die Wahl einer bestimmten [[Unterscheidung]]?"
      },
      "date": 1708010685171
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1708017724434
    },
    {
      "item": {
        "type": "factory",
        "id": "6196fa67ea9ca7bf"
      },
      "id": "6196fa67ea9ca7bf",
      "type": "add",
      "after": "9b2e8a235d3d2bd7",
      "date": 1708017727192
    },
    {
      "type": "edit",
      "id": "6196fa67ea9ca7bf",
      "item": {
        "type": "paragraph",
        "id": "6196fa67ea9ca7bf",
        "text": "We are getting the list of links out of the sitemaps. This is how Paul implements \"what links here\"."
      },
      "date": 1708017735135
    },
    {
      "item": {
        "type": "factory",
        "id": "883f1e4c851b9cf9"
      },
      "id": "883f1e4c851b9cf9",
      "type": "add",
      "after": "6196fa67ea9ca7bf",
      "date": 1708021040909
    },
    {
      "type": "edit",
      "id": "883f1e4c851b9cf9",
      "item": {
        "type": "paragraph",
        "id": "883f1e4c851b9cf9",
        "text": "Sync problem with NERGİZ und TAŞ - 2021 - Zarf Kavramının Öğretiminde Örnek Ayrıntılama Stra.pdf"
      },
      "date": 1708021051351
    }
  ]
}