{
  "title": "Elements",
  "story": [
    {
      "type": "paragraph",
      "id": "ce64f6baf48f228d",
      "text": "The element function is part of the Browser module in Elm. [https://package.elm-lang.org/packages/elm/browser/latest/Browser page]"
    },
    {
      "type": "code",
      "id": "d84c701a779bcafb",
      "text": "element :\n    { init : flags -> ( model, Cmd msg )\n    , view : model -> Html msg\n    , update : msg -> model -> ( model, Cmd msg )\n    , subscriptions : model -> Sub msg\n    }\n    -> Program flags model msg"
    },
    {
      "type": "paragraph",
      "id": "d080f6309352530a",
      "text": "Create an HTML element managed by Elm. The resulting elements are easy to embed in larger JavaScript projects, and lots of companies that use Elm started with this approach! Try it out on something small. If it works, great, do more! If not, [[revert]], no big deal."
    },
    {
      "type": "paragraph",
      "id": "ca2243fc0346a30b",
      "text": "Unlike a sandbox, an element can talk to the outside world in a couple ways:"
    },
    {
      "type": "markdown",
      "id": "30a8c72d67bf5655",
      "text": "* Cmd — you can “command” the Elm runtime to do stuff, like HTTP.\n* Sub — you can “subscribe” to event sources, like clock ticks.\n* flags — JavaScript can pass in data when starting the Elm program\n* ports — set up a client-server relationship with JavaScript\n"
    },
    {
      "type": "paragraph",
      "id": "2b58bc5aaa2c00a7",
      "text": "As you read [[The Official Guide]] you will run into a bunch of examples of element in the [[Commands and Subscriptions]] section. You can learn more about flags and ports in the [[JavaScript Interop]] section."
    },
    {
      "type": "paragraph",
      "id": "b4fa5e01337f7789",
      "text": "Elements are building blocks that can be composed together to create more complex HTML structures."
    },
    {
      "type": "paragraph",
      "id": "5673af14484a60b4",
      "text": "So far we have been creating Elm programs with Browser.element, allowing us to take over a single node in a larger application. This is great for introducing Elm at work (as described in [[How to Use Elm at Work]]) but what happens after that? How can we use Elm more extensively? [https://guide.elm-lang.org/webapps/ page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Elements",
        "story": []
      },
      "date": 1685798550262
    },
    {
      "item": {
        "type": "factory",
        "id": "ce64f6baf48f228d"
      },
      "id": "ce64f6baf48f228d",
      "type": "add",
      "date": 1685798551298
    },
    {
      "type": "edit",
      "id": "ce64f6baf48f228d",
      "item": {
        "type": "paragraph",
        "id": "ce64f6baf48f228d",
        "text": "The element function is part of the Html module in Elm. It is used to create individual HTML elements or components. The element function takes a tag name, a list of attributes, and a list of child elements or text content, and returns an Html value representing that element. Elements are building blocks that can be composed together to create more complex HTML structures."
      },
      "date": 1685798552681
    },
    {
      "item": {
        "type": "factory",
        "id": "5673af14484a60b4"
      },
      "id": "5673af14484a60b4",
      "type": "add",
      "after": "ce64f6baf48f228d",
      "date": 1685858725984
    },
    {
      "type": "edit",
      "id": "5673af14484a60b4",
      "item": {
        "type": "paragraph",
        "id": "5673af14484a60b4",
        "text": "So far we have been creating Elm programs with Browser.element, allowing us to take over a single node in a larger application. This is great for introducing Elm at work (as described here) but what happens after that? How can we use Elm more extensively?"
      },
      "date": 1685858727575
    },
    {
      "type": "edit",
      "id": "5673af14484a60b4",
      "item": {
        "type": "paragraph",
        "id": "5673af14484a60b4",
        "text": "So far we have been creating Elm programs with Browser.element, allowing us to take over a single node in a larger application. This is great for introducing Elm at work (as described here) but what happens after that? How can we use Elm more extensively? [https://guide.elm-lang.org/webapps/ page]"
      },
      "date": 1685858758002
    },
    {
      "type": "edit",
      "id": "ce64f6baf48f228d",
      "item": {
        "type": "paragraph",
        "id": "ce64f6baf48f228d",
        "text": "The element function is part of the Browser module in Elm. It is used to create individual HTML elements or components. The element function takes a tag name, a list of attributes, and a list of child elements or text content, and returns an Html value representing that element. Elements are building blocks that can be composed together to create more complex HTML structures."
      },
      "date": 1685858816684
    },
    {
      "type": "edit",
      "id": "ce64f6baf48f228d",
      "item": {
        "type": "paragraph",
        "id": "ce64f6baf48f228d",
        "text": "The element function is part of the Browser module in Elm. [https://package.elm-lang.org/packages/elm/browser/latest/Browser page]"
      },
      "date": 1685858833752
    },
    {
      "type": "add",
      "id": "d080f6309352530a",
      "item": {
        "type": "paragraph",
        "id": "d080f6309352530a",
        "text": "It is used to create individual HTML elements or components. The element function takes a tag name, a list of attributes, and a list of child elements or text content, and returns an Html value representing that element. Elements are building blocks that can be composed together to create more complex HTML structures."
      },
      "after": "ce64f6baf48f228d",
      "date": 1685858834500
    },
    {
      "item": {
        "type": "factory",
        "id": "d84c701a779bcafb"
      },
      "id": "d84c701a779bcafb",
      "type": "add",
      "after": "5673af14484a60b4",
      "date": 1685858906939
    },
    {
      "id": "d84c701a779bcafb",
      "type": "move",
      "order": [
        "ce64f6baf48f228d",
        "d84c701a779bcafb",
        "d080f6309352530a",
        "5673af14484a60b4"
      ],
      "date": 1685858910433
    },
    {
      "type": "edit",
      "id": "d84c701a779bcafb",
      "item": {
        "type": "code",
        "id": "d84c701a779bcafb",
        "text": "element :\n    { init : flags -> ( model, Cmd msg )\n    , view : model -> Html msg\n    , update : msg -> model -> ( model, Cmd msg )\n    , subscriptions : model -> Sub msg\n    }\n    -> Program flags model msg"
      },
      "date": 1685858913132
    },
    {
      "type": "edit",
      "id": "d080f6309352530a",
      "item": {
        "type": "paragraph",
        "id": "d080f6309352530a",
        "text": "It is used to create individual HTML elements or components.  "
      },
      "date": 1685858987326
    },
    {
      "type": "add",
      "id": "b4fa5e01337f7789",
      "item": {
        "type": "paragraph",
        "id": "b4fa5e01337f7789",
        "text": "Elements are building blocks that can be composed together to create more complex HTML structures."
      },
      "after": "d080f6309352530a",
      "date": 1685858988000
    },
    {
      "type": "edit",
      "id": "d080f6309352530a",
      "item": {
        "type": "paragraph",
        "id": "d080f6309352530a",
        "text": "Create an HTML element managed by Elm. The resulting elements are easy to embed in larger JavaScript projects, and lots of companies that use Elm started with this approach! Try it out on something small. If it works, great, do more! If not, revert, no big deal."
      },
      "date": 1685859003095
    },
    {
      "type": "edit",
      "id": "d080f6309352530a",
      "item": {
        "type": "paragraph",
        "id": "d080f6309352530a",
        "text": "Create an HTML element managed by Elm. The resulting elements are easy to embed in larger JavaScript projects, and lots of companies that use Elm started with this approach! Try it out on something small. If it works, great, do more! If not, [[revert]], no big deal."
      },
      "date": 1685859028757
    },
    {
      "type": "add",
      "id": "2dbb9b5f69780f54",
      "item": {
        "type": "paragraph",
        "id": "2dbb9b5f69780f54",
        "text": "[[How to Use Elm at Work]]"
      },
      "after": "5673af14484a60b4",
      "date": 1685859085641
    },
    {
      "type": "remove",
      "id": "2dbb9b5f69780f54",
      "date": 1685859132488
    },
    {
      "type": "edit",
      "id": "5673af14484a60b4",
      "item": {
        "type": "paragraph",
        "id": "5673af14484a60b4",
        "text": "So far we have been creating Elm programs with Browser.element, allowing us to take over a single node in a larger application. This is great for introducing Elm at work (as described in [[How to Use Elm at Work]]) but what happens after that? How can we use Elm more extensively? [https://guide.elm-lang.org/webapps/ page]"
      },
      "date": 1685859137239
    },
    {
      "type": "add",
      "id": "ca2243fc0346a30b",
      "item": {
        "type": "paragraph",
        "id": "ca2243fc0346a30b",
        "text": "Unlike a sandbox, an element can talk to the outside world in a couple ways:"
      },
      "after": "d080f6309352530a",
      "date": 1685864185614
    },
    {
      "type": "add",
      "id": "30a8c72d67bf5655",
      "item": {
        "type": "paragraph",
        "id": "30a8c72d67bf5655",
        "text": "\n* Cmd — you can “command” the Elm runtime to do stuff, like HTTP.\n* Sub — you can “subscribe” to event sources, like clock ticks.\n* flags — JavaScript can pass in data when starting the Elm program\n* ports — set up a client-server relationship with JavaScript\n"
      },
      "after": "ca2243fc0346a30b",
      "date": 1685864217063
    },
    {
      "type": "edit",
      "id": "30a8c72d67bf5655",
      "item": {
        "type": "markdown",
        "id": "30a8c72d67bf5655",
        "text": "\n* Cmd — you can “command” the Elm runtime to do stuff, like HTTP.\n* Sub — you can “subscribe” to event sources, like clock ticks.\n* flags — JavaScript can pass in data when starting the Elm program\n* ports — set up a client-server relationship with JavaScript\n"
      },
      "date": 1685864218345
    },
    {
      "type": "edit",
      "id": "30a8c72d67bf5655",
      "item": {
        "type": "markdown",
        "id": "30a8c72d67bf5655",
        "text": "* Cmd — you can “command” the Elm runtime to do stuff, like HTTP.\n* Sub — you can “subscribe” to event sources, like clock ticks.\n* flags — JavaScript can pass in data when starting the Elm program\n* ports — set up a client-server relationship with JavaScript\n"
      },
      "date": 1685864252780
    },
    {
      "type": "add",
      "id": "2b58bc5aaa2c00a7",
      "item": {
        "type": "paragraph",
        "id": "2b58bc5aaa2c00a7",
        "text": "As you read the guide you will run into a bunch of examples of element in this section. You can learn more about flags and ports in the interop section."
      },
      "after": "ca2243fc0346a30b",
      "date": 1685864255052
    },
    {
      "id": "2b58bc5aaa2c00a7",
      "type": "move",
      "order": [
        "ce64f6baf48f228d",
        "d84c701a779bcafb",
        "d080f6309352530a",
        "ca2243fc0346a30b",
        "30a8c72d67bf5655",
        "2b58bc5aaa2c00a7",
        "b4fa5e01337f7789",
        "5673af14484a60b4"
      ],
      "date": 1685864275693
    },
    {
      "type": "edit",
      "id": "2b58bc5aaa2c00a7",
      "item": {
        "type": "paragraph",
        "id": "2b58bc5aaa2c00a7",
        "text": "As you read [[The Official Guide]] you will run into a bunch of examples of element in this section. You can learn more about flags and ports in the interop section."
      },
      "date": 1685864303496
    },
    {
      "type": "edit",
      "id": "2b58bc5aaa2c00a7",
      "item": {
        "type": "paragraph",
        "id": "2b58bc5aaa2c00a7",
        "text": "As you read [[The Official Guide]] you will run into a bunch of examples of element in the [[Commands and Subscriptions]] section. You can learn more about flags and ports in the interop section."
      },
      "date": 1685864373621
    },
    {
      "type": "edit",
      "id": "2b58bc5aaa2c00a7",
      "item": {
        "type": "paragraph",
        "id": "2b58bc5aaa2c00a7",
        "text": "As you read [[The Official Guide]] you will run into a bunch of examples of element in the [[Commands and Subscriptions]] section. You can learn more about flags and ports in the [[JavaScript Interop]] section."
      },
      "date": 1685864458590
    }
  ]
}