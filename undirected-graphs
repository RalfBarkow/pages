{
  "title": "Undirected Graphs",
  "story": [
    {
      "type": "paragraph",
      "id": "65c035a892823897",
      "text": "Undirected graphs are graphs that do not have a direction between edges. The edge implies a mutual connection between the two nodes without a direction. A real-life example of an undirected graph relationship is friendship. Friendship occurs only if both parties mutually acknowledge the relationship. Values of the edges within a friendship graph may indicate how close the friendship is. Figure 17-8 is a simple undirected graph with five vertices and six nondirectional edges with weights."
    },
    {
      "type": "paragraph",
      "id": "8e2b9d5256e7a1b8",
      "text": "[…] Figure 17-8. Undirected graph with weights"
    },
    {
      "type": "paragraph",
      "id": "0d4f9bd964d0df4c",
      "text": "There are various ways to represent undirected graphs as a data structure class. Two of the most common ways to do this are by using an adjacency matrix or an adjacency list. The adjacency list uses a vertex as the key for nodes with its neighbors stored into a list, whereas an adjacency matrix is a V by V matrix with each element of the matrix indicating a connection between two vertices. Figure 17-9 illustrates the difference between an adjacency list and an adjacency matrix (This book covers only adjacency lists)."
    },
    {
      "type": "html",
      "id": "be022df4b7d598e7",
      "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-23/Bildschirmfoto%202023-01-23%20um%2018.54.52.png\"\n>"
    },
    {
      "type": "paragraph",
      "id": "0f808ab926e6eeda",
      "text": "Figure 17-9. Graph (left), adjacency list (middle), and [[Adjacency Matrix]] (right)"
    },
    {
      "type": "pagefold",
      "id": "ceba2ea907e8597e",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "a9a89c46f25aba46",
      "text": "BAE, Sammie, 2019. JavaScript Data Structures and Algorithms: An Introduction to Understanding and Implementing Core Data Structure and Algorithm Fundamentals. Berkeley, CA: Apress : Imprint: Apress. ISBN 978-1-4842-3988-9, p. 278\n"
    },
    {
      "type": "paragraph",
      "id": "dcf64dbbe734ae8e",
      "text": "⇒ [[Graphs with Weighted Edges]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Undirected Graphs",
        "story": []
      },
      "date": 1674496329895
    },
    {
      "item": {
        "type": "factory",
        "id": "65c035a892823897"
      },
      "id": "65c035a892823897",
      "type": "add",
      "date": 1674496340839
    },
    {
      "type": "edit",
      "id": "65c035a892823897",
      "item": {
        "type": "paragraph",
        "id": "65c035a892823897",
        "text": "Undirected graphs are graphs that do not have a direction between edges. The edge implies a mutual connection between the two nodes without a direction. A real-life example of an undirected graph relationship is friendship. Friendship occurs only if both parties mutually acknowledge the relationship. Values of the edges within a friendship graph may indicate how close the friendship is. Figure 17-8 is a simple undirected graph with five vertices and six nondirectional edges with weights."
      },
      "date": 1674496342806
    },
    {
      "item": {
        "type": "factory",
        "id": "8e2b9d5256e7a1b8"
      },
      "id": "8e2b9d5256e7a1b8",
      "type": "add",
      "after": "65c035a892823897",
      "date": 1674496407972
    },
    {
      "type": "edit",
      "id": "8e2b9d5256e7a1b8",
      "item": {
        "type": "paragraph",
        "id": "8e2b9d5256e7a1b8",
        "text": "[…] Figure 17-8. Undirected graph with weights"
      },
      "date": 1674496413376
    },
    {
      "item": {
        "type": "factory",
        "id": "0d4f9bd964d0df4c"
      },
      "id": "0d4f9bd964d0df4c",
      "type": "add",
      "after": "8e2b9d5256e7a1b8",
      "date": 1674496424371
    },
    {
      "type": "edit",
      "id": "0d4f9bd964d0df4c",
      "item": {
        "type": "paragraph",
        "id": "0d4f9bd964d0df4c",
        "text": "There are various ways to represent undirected graphs as a data structure class. Two of the most common ways to do this are by using an adjacency matrix or an adjacency list. The adjacency list uses a vertex as the key for nodes with its neighbors stored into a list, whereas an adjacency matrix is a V by V matrix with each element of the matrix indicating a connection between two vertices. Figure 17-9 illustrates the difference between an adjacency list and an adjacency matrix (This book covers only adjacency lists)."
      },
      "date": 1674496425975
    },
    {
      "item": {
        "type": "factory",
        "id": "be022df4b7d598e7"
      },
      "id": "be022df4b7d598e7",
      "type": "add",
      "after": "0d4f9bd964d0df4c",
      "date": 1674496648823
    },
    {
      "type": "edit",
      "id": "be022df4b7d598e7",
      "item": {
        "type": "html",
        "id": "be022df4b7d598e7",
        "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-23/Bildschirmfoto%202023-01-23%20um%2018.54.52.png\"\n>"
      },
      "date": 1674496680657
    },
    {
      "item": {
        "type": "factory",
        "id": "0f808ab926e6eeda"
      },
      "id": "0f808ab926e6eeda",
      "type": "add",
      "after": "be022df4b7d598e7",
      "date": 1674496693091
    },
    {
      "type": "edit",
      "id": "0f808ab926e6eeda",
      "item": {
        "type": "paragraph",
        "id": "0f808ab926e6eeda",
        "text": "Figure 17-9. Graph (left), adjacency list (middle), and adjacency matrix (right)"
      },
      "date": 1674496695244
    },
    {
      "id": "ceba2ea907e8597e",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "ceba2ea907e8597e",
        "text": "~"
      },
      "after": "0f808ab926e6eeda",
      "date": 1674496717980
    },
    {
      "id": "a9a89c46f25aba46",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a9a89c46f25aba46",
        "text": "BAE, Sammie, 2019. JavaScript Data Structures and Algorithms: An Introduction to Understanding and Implementing Core Data Structure and Algorithm Fundamentals. Berkeley, CA: Apress : Imprint: Apress. ISBN 978-1-4842-3988-9.\n"
      },
      "after": "0f808ab926e6eeda",
      "date": 1674496733263
    },
    {
      "id": "ceba2ea907e8597e",
      "type": "move",
      "order": [
        "65c035a892823897",
        "8e2b9d5256e7a1b8",
        "0d4f9bd964d0df4c",
        "be022df4b7d598e7",
        "0f808ab926e6eeda",
        "ceba2ea907e8597e",
        "a9a89c46f25aba46"
      ],
      "date": 1674496736554
    },
    {
      "type": "edit",
      "id": "a9a89c46f25aba46",
      "item": {
        "type": "paragraph",
        "id": "a9a89c46f25aba46",
        "text": "BAE, Sammie, 2019. JavaScript Data Structures and Algorithms: An Introduction to Understanding and Implementing Core Data Structure and Algorithm Fundamentals. Berkeley, CA: Apress : Imprint: Apress. ISBN 978-1-4842-3988-9, p. \n"
      },
      "date": 1674496818267
    },
    {
      "type": "edit",
      "id": "a9a89c46f25aba46",
      "item": {
        "type": "paragraph",
        "id": "a9a89c46f25aba46",
        "text": "BAE, Sammie, 2019. JavaScript Data Structures and Algorithms: An Introduction to Understanding and Implementing Core Data Structure and Algorithm Fundamentals. Berkeley, CA: Apress : Imprint: Apress. ISBN 978-1-4842-3988-9, p. 278\n"
      },
      "date": 1674496825761
    },
    {
      "item": {
        "type": "factory",
        "id": "dcf64dbbe734ae8e"
      },
      "id": "dcf64dbbe734ae8e",
      "type": "add",
      "after": "a9a89c46f25aba46",
      "date": 1674496975407
    },
    {
      "type": "edit",
      "id": "dcf64dbbe734ae8e",
      "item": {
        "type": "paragraph",
        "id": "dcf64dbbe734ae8e",
        "text": "⇒ [[Graphs with Weighted Edges]]"
      },
      "date": 1674496986680
    },
    {
      "type": "edit",
      "id": "0f808ab926e6eeda",
      "item": {
        "type": "paragraph",
        "id": "0f808ab926e6eeda",
        "text": "Figure 17-9. Graph (left), adjacency list (middle), and [[adjacency matrix]] (right)"
      },
      "date": 1674498807661
    },
    {
      "type": "edit",
      "id": "0f808ab926e6eeda",
      "item": {
        "type": "paragraph",
        "id": "0f808ab926e6eeda",
        "text": "Figure 17-9. Graph (left), adjacency list (middle), and [[Adjacency Matrix]] (right)"
      },
      "date": 1674498825594
    }
  ]
}