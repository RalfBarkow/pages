{
  "title": "Events and Behaviors",
  "story": [
    {
      "type": "paragraph",
      "id": "ff4b3179de923e0f",
      "text": "[[Events]] are discrete occurrences in time, while [[Behaviors]] are continuously defined values for all points in time."
    },
    {
      "type": "pagefold",
      "id": "00f89f633cb309d5",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "321a6d53fc30d540",
      "text": "KROUSE, Steven, 2018. Explicitly Comprehensible Functional Reactive Programming. REBLS’18, November 2018, Boston, Massachusetts USA. Online. 2018. [Accessed 21 June 2022]. Available from: https://futureofcoding.org/papers/comprehensible-frp/comprehensible-frp.pdf"
    },
    {
      "type": "markdown",
      "id": "a3ce637e2505c406",
      "text": "> Functional Reactive programs written in The Elm Architecture are difficult to comprehend without reading every line of code. A more modular architecture would allow programmers to understand a small piece without reading the entire application. This paper shows how higher-order and cyclic streams, as demonstrated via the Reflex library, can improve comprehensibility.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Events and Behaviors",
        "story": []
      },
      "date": 1655796149606
    },
    {
      "item": {
        "type": "factory",
        "id": "ff4b3179de923e0f"
      },
      "id": "ff4b3179de923e0f",
      "type": "add",
      "date": 1655796151154
    },
    {
      "type": "edit",
      "id": "ff4b3179de923e0f",
      "item": {
        "type": "paragraph",
        "id": "ff4b3179de923e0f",
        "text": "Events are discrete occurrences in time, while Behaviors are continuously defined values for all points in time."
      },
      "date": 1655796161892
    },
    {
      "item": {
        "type": "factory",
        "id": "00f89f633cb309d5"
      },
      "id": "00f89f633cb309d5",
      "type": "add",
      "after": "ff4b3179de923e0f",
      "date": 1655796195120
    },
    {
      "type": "edit",
      "id": "ff4b3179de923e0f",
      "item": {
        "type": "paragraph",
        "id": "ff4b3179de923e0f",
        "text": "[[Events]] are discrete occurrences in time, while [[Behaviors]] are continuously defined values for all points in time."
      },
      "date": 1655796196565
    },
    {
      "type": "edit",
      "id": "00f89f633cb309d5",
      "item": {
        "type": "pagefold",
        "id": "00f89f633cb309d5",
        "text": "~"
      },
      "date": 1655796198476
    },
    {
      "item": {
        "type": "factory",
        "id": "321a6d53fc30d540"
      },
      "id": "321a6d53fc30d540",
      "type": "add",
      "after": "00f89f633cb309d5",
      "date": 1655796208531
    },
    {
      "type": "edit",
      "id": "321a6d53fc30d540",
      "item": {
        "type": "paragraph",
        "id": "321a6d53fc30d540",
        "text": "KROUSE, Steven, 2018. Explicitly Comprehensible Functional Reactive Programming. REBLS’18, November 2018, Boston, Massachusetts USA. Online. 2018. [Accessed 21 June 2022]. Available from: https://futureofcoding.org/papers/comprehensible-frp/comprehensible-frp.pdf"
      },
      "date": 1655796219714
    },
    {
      "type": "add",
      "id": "a3ce637e2505c406",
      "item": {
        "type": "paragraph",
        "id": "a3ce637e2505c406",
        "text": "> Functional Reactive programs written in The Elm Architecture are difficult to comprehend without reading every line of code. A more modular architecture would allow programmers to understand a small piece without reading the entire application. This paper shows how higher-order and cyclic streams, as demonstrated via the Reflex library, can improve comprehensibility.\n"
      },
      "after": "321a6d53fc30d540",
      "date": 1655796221807
    },
    {
      "type": "edit",
      "id": "a3ce637e2505c406",
      "item": {
        "type": "markdown",
        "id": "a3ce637e2505c406",
        "text": "> Functional Reactive programs written in The Elm Architecture are difficult to comprehend without reading every line of code. A more modular architecture would allow programmers to understand a small piece without reading the entire application. This paper shows how higher-order and cyclic streams, as demonstrated via the Reflex library, can improve comprehensibility.\n"
      },
      "date": 1655796222961
    }
  ]
}