{
  "title": "Embrace Event Sourcing",
  "story": [
    {
      "type": "paragraph",
      "id": "eb0e4b688ea0f2b2",
      "text": "I am persuaded by [[John Bywater]] that every domain can be exhaustively described with events. As Whitehead said, \"there's no going behind the events to find something more real.\" See [[Events Software Process Reality]]. [https://github.com/johnbywater/dddeu2019/blob/master/transcript/TRANSCRIPT.md transcript]"
    },
    {
      "type": "paragraph",
      "id": "b18fdc14eace70da",
      "text": "John's talk identifies a pivotal challenge with event sourcing that asks for atomicity of a change and notification of that change."
    },
    {
      "type": "paragraph",
      "id": "0ced7e4e36c27770",
      "text": "Wiki enjoys inherently async notification. Humans must pull the notification of changes to their own browser."
    },
    {
      "type": "paragraph",
      "id": "25c8367fd558bc02",
      "text": "Let the journal be the authoritative data source."
    },
    {
      "type": "paragraph",
      "id": "54d19eedf8a03833",
      "text": "Write edits to browser storage first."
    },
    {
      "type": "paragraph",
      "id": "bfde4ae2a91531c1",
      "text": "Sync the changes in the journal with the server. Built-in offline mode."
    },
    {
      "type": "paragraph",
      "id": "1adae0a87d98a1ca",
      "text": "We gain atomicity here because edits only happen in the browser."
    },
    {
      "type": "pagefold",
      "id": "59e2509545fa35d7",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "ad70b9f15f73b6e9",
      "text": "Perhaps this is powered by a service worker which simulates the live network connection and performs the sync when network becomes available."
    },
    {
      "type": "paragraph",
      "id": "0f5bafae5feadb51",
      "text": "The events which sync with the server might be an opportunity for a base level of [[Journal Optimization]]"
    },
    {
      "type": "paragraph",
      "id": "81a764486cef8f4f",
      "text": "Paul90 shared Paul Frazee's thread: [https://threadreaderapp.com/thread/1309152129366601730.html thread]"
    },
    {
      "type": "paragraph",
      "id": "6b9114ccdd45ccec",
      "text": "See also [[Cryptographic Wiki]] for specific suggestions about authors and public keys."
    },
    {
      "type": "paragraph",
      "id": "36063db169b22a21",
      "text": "If the page journal is something like a merkle tree,  even with or without full public-private keys, it should simplify the sync mechanics, as git demonstrates."
    },
    {
      "type": "paragraph",
      "id": "046029e7e3269a5c",
      "text": "I think the Page would be a DDD Aggregate Root [https://stackoverflow.com/questions/1958621/whats-an-aggregate-root stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "362c70093bf8f87a",
      "text": "We could keep the same granular journal. To display provenance, filter the journal for provenance events (forks of pages, or drags of paragraphs from different authors)"
    },
    {
      "type": "paragraph",
      "id": "fcff88fe67491289",
      "text": "See also [[postMessage Excursion]] for a sampling of javascript prior art for event handling between frames and intersections with functional reactive programming."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Embrace Event Sourcing",
        "story": []
      },
      "date": 1601002867153
    },
    {
      "item": {
        "type": "factory",
        "id": "eb0e4b688ea0f2b2"
      },
      "id": "eb0e4b688ea0f2b2",
      "type": "add",
      "date": 1601003259055
    },
    {
      "type": "edit",
      "id": "eb0e4b688ea0f2b2",
      "item": {
        "type": "paragraph",
        "id": "eb0e4b688ea0f2b2",
        "text": "John Bywater shared his long exploration inquiring if Domain Driven Design and, more specifically, Event Sourcing could adequately model any domain. He chased trails from Lord Alfred Whitehead, via Christopher Alexander, to Ward's EPISODES pattern language, to agile and DDD. He concluded that every domain can be exhaustively described with events. As Whitehead said, \"there's no going behind the events to find something more real.\" [ transcript]"
      },
      "date": 1601003551168
    },
    {
      "type": "edit",
      "id": "eb0e4b688ea0f2b2",
      "item": {
        "type": "paragraph",
        "id": "eb0e4b688ea0f2b2",
        "text": "I am persuaded by John Bywater that every domain can be exhaustively described with events. As Whitehead said, \"there's no going behind the events to find something more real.\" See [[Events Software Process Reality]]"
      },
      "date": 1601003652904
    },
    {
      "type": "edit",
      "id": "eb0e4b688ea0f2b2",
      "item": {
        "type": "paragraph",
        "id": "eb0e4b688ea0f2b2",
        "text": "I am persuaded by John Bywater that every domain can be exhaustively described with events. As Whitehead said, \"there's no going behind the events to find something more real.\" See [[Events Software Process Reality]]. [https://github.com/johnbywater/dddeu2019/blob/master/transcript/TRANSCRIPT.md transcript]"
      },
      "date": 1601003677116
    },
    {
      "item": {
        "type": "factory",
        "id": "6319b5e25aab2ad8"
      },
      "id": "6319b5e25aab2ad8",
      "type": "add",
      "after": "eb0e4b688ea0f2b2",
      "date": 1601003767535
    },
    {
      "type": "edit",
      "id": "6319b5e25aab2ad8",
      "item": {
        "type": "reference",
        "id": "6319b5e25aab2ad8",
        "site": "code.wiki.dbbs.co",
        "slug": "events-software-process-reality",
        "title": "Events Software Process Reality",
        "text": "John Bywater dropped by our wiki hangout to share some thoughts about event sourcing and the nature of reality. He traces a lineage from Whitehead through Alexander to the early patterns community and especially [[Flow of Episodes]]. He presented some of this material in a talk at DDD Europe 2019: Events in Software, Process, and Reality. [https://github.com/johnbywater/dddeu2019/blob/master/transcript/TRANSCRIPT.md transcript] [https://www.youtube.com/watch?v=EX_zRTeowuM youtube]"
      },
      "date": 1601003778423
    },
    {
      "item": {
        "type": "factory",
        "id": "0b456a018654f5a0"
      },
      "id": "0b456a018654f5a0",
      "type": "add",
      "after": "6319b5e25aab2ad8",
      "date": 1601003790670
    },
    {
      "type": "edit",
      "id": "0b456a018654f5a0",
      "item": {
        "type": "pagefold",
        "id": "0b456a018654f5a0",
        "text": "."
      },
      "date": 1601003795009
    },
    {
      "id": "0b456a018654f5a0",
      "type": "move",
      "order": [
        "eb0e4b688ea0f2b2",
        "0b456a018654f5a0",
        "6319b5e25aab2ad8"
      ],
      "date": 1601003803938
    },
    {
      "type": "remove",
      "id": "6319b5e25aab2ad8",
      "date": 1601004508041
    },
    {
      "type": "remove",
      "id": "0b456a018654f5a0",
      "date": 1601004511221
    },
    {
      "type": "add",
      "id": "b18fdc14eace70da",
      "item": {
        "type": "paragraph",
        "id": "b18fdc14eace70da",
        "text": "John's talk identifies a pivotal challenge with event sourcing that asks for atomicity of a change and notification of that change."
      },
      "after": "eb0e4b688ea0f2b2",
      "date": 1601004778119
    },
    {
      "type": "add",
      "id": "25c8367fd558bc02",
      "item": {
        "type": "paragraph",
        "id": "25c8367fd558bc02",
        "text": "Let the journal be authoritative data source. Write edits to browser storage first. We gain atomicity here because we have not yet left the browser."
      },
      "after": "b18fdc14eace70da",
      "date": 1601004896582
    },
    {
      "type": "add",
      "id": "0ced7e4e36c27770",
      "item": {
        "type": "paragraph",
        "id": "0ced7e4e36c27770",
        "text": "Wiki enjoys inherently async notification. Humans must pull the notification of changes to their own browser."
      },
      "after": "25c8367fd558bc02",
      "date": 1601004929836
    },
    {
      "type": "edit",
      "id": "25c8367fd558bc02",
      "item": {
        "type": "paragraph",
        "id": "25c8367fd558bc02",
        "text": "Let the journal be authoritative data source. Write edits to browser storage first. We gain atomicity here because we have not yet left the browser. Sync the changes in the journal with the server."
      },
      "date": 1601004947547
    },
    {
      "type": "edit",
      "id": "25c8367fd558bc02",
      "item": {
        "type": "paragraph",
        "id": "25c8367fd558bc02",
        "text": "Let the journal be the authoritative data source."
      },
      "date": 1601004961632
    },
    {
      "type": "add",
      "id": "54d19eedf8a03833",
      "item": {
        "type": "paragraph",
        "id": "54d19eedf8a03833",
        "text": "Write edits to browser storage first."
      },
      "after": "25c8367fd558bc02",
      "date": 1601004973140
    },
    {
      "type": "add",
      "id": "bfde4ae2a91531c1",
      "item": {
        "type": "paragraph",
        "id": "bfde4ae2a91531c1",
        "text": "Sync the changes in the journal with the server."
      },
      "after": "54d19eedf8a03833",
      "date": 1601004977088
    },
    {
      "type": "add",
      "id": "1adae0a87d98a1ca",
      "item": {
        "type": "paragraph",
        "id": "1adae0a87d98a1ca",
        "text": "We gain atomicity here because we have not yet left the browser."
      },
      "after": "bfde4ae2a91531c1",
      "date": 1601004982376
    },
    {
      "type": "edit",
      "id": "1adae0a87d98a1ca",
      "item": {
        "type": "paragraph",
        "id": "1adae0a87d98a1ca",
        "text": "We gain atomicity here because edits have not yet left the browser."
      },
      "date": 1601005035683
    },
    {
      "type": "edit",
      "id": "bfde4ae2a91531c1",
      "item": {
        "type": "paragraph",
        "id": "bfde4ae2a91531c1",
        "text": "Sync the changes in the journal with the server. Built-in offline mode. Perhaps even powered by a service worker which simulates the live network connection and performs the sync when network becomes available."
      },
      "date": 1601005099926
    },
    {
      "id": "0ced7e4e36c27770",
      "type": "move",
      "order": [
        "eb0e4b688ea0f2b2",
        "b18fdc14eace70da",
        "0ced7e4e36c27770",
        "25c8367fd558bc02",
        "54d19eedf8a03833",
        "bfde4ae2a91531c1",
        "1adae0a87d98a1ca"
      ],
      "date": 1601005142932
    },
    {
      "type": "edit",
      "id": "bfde4ae2a91531c1",
      "item": {
        "type": "paragraph",
        "id": "bfde4ae2a91531c1",
        "text": "Sync the changes in the journal with the server. Built-in offline mode."
      },
      "date": 1601005180307
    },
    {
      "type": "add",
      "id": "ad70b9f15f73b6e9",
      "item": {
        "type": "paragraph",
        "id": "ad70b9f15f73b6e9",
        "text": "Perhaps this is powered by a service worker which simulates the live network connection and performs the sync when network becomes available."
      },
      "after": "bfde4ae2a91531c1",
      "date": 1601005191367
    },
    {
      "type": "edit",
      "id": "1adae0a87d98a1ca",
      "item": {
        "type": "paragraph",
        "id": "1adae0a87d98a1ca",
        "text": "We gain atomicity here because edits only happen in the browser."
      },
      "date": 1601005210978
    },
    {
      "item": {
        "type": "factory",
        "id": "59e2509545fa35d7"
      },
      "id": "59e2509545fa35d7",
      "type": "add",
      "after": "1adae0a87d98a1ca",
      "date": 1601005432467
    },
    {
      "type": "edit",
      "id": "59e2509545fa35d7",
      "item": {
        "type": "pagefold",
        "id": "59e2509545fa35d7",
        "text": "."
      },
      "date": 1601005435520
    },
    {
      "id": "ad70b9f15f73b6e9",
      "type": "move",
      "order": [
        "eb0e4b688ea0f2b2",
        "b18fdc14eace70da",
        "0ced7e4e36c27770",
        "25c8367fd558bc02",
        "54d19eedf8a03833",
        "bfde4ae2a91531c1",
        "1adae0a87d98a1ca",
        "59e2509545fa35d7",
        "ad70b9f15f73b6e9"
      ],
      "date": 1601005442564
    },
    {
      "type": "add",
      "id": "0f5bafae5feadb51",
      "item": {
        "type": "paragraph",
        "id": "0f5bafae5feadb51",
        "text": "The events which sync with the server might be an opportunity for a base level of [[Journal Optimization]]"
      },
      "after": "ad70b9f15f73b6e9",
      "date": 1601005532009
    },
    {
      "type": "add",
      "id": "81a764486cef8f4f",
      "item": {
        "type": "paragraph",
        "id": "81a764486cef8f4f",
        "text": "Paul90 shared Paul Frazee's thread: [https://threadreaderapp.com/thread/1309152129366601730.html thread]"
      },
      "after": "0f5bafae5feadb51",
      "date": 1601005790978
    },
    {
      "type": "add",
      "id": "6b9114ccdd45ccec",
      "item": {
        "type": "paragraph",
        "id": "6b9114ccdd45ccec",
        "text": "See also [[Cryptographic Wiki]] for specific suggestions about authors and public keys."
      },
      "after": "81a764486cef8f4f",
      "date": 1601005864146
    },
    {
      "type": "add",
      "id": "36063db169b22a21",
      "item": {
        "type": "paragraph",
        "id": "36063db169b22a21",
        "text": "If the page journal is something like a merkle tree,  even with or without full public-private keys, it should simplify the sync mechanics, as git demonstrates."
      },
      "after": "6b9114ccdd45ccec",
      "date": 1601007778459
    },
    {
      "type": "add",
      "id": "046029e7e3269a5c",
      "item": {
        "type": "paragraph",
        "id": "046029e7e3269a5c",
        "text": "I think the Page would be a DDD Aggregate Root [https://stackoverflow.com/questions/1958621/whats-an-aggregate-root stackoverflow]"
      },
      "after": "36063db169b22a21",
      "date": 1601008524811
    },
    {
      "type": "add",
      "id": "362c70093bf8f87a",
      "item": {
        "type": "paragraph",
        "id": "362c70093bf8f87a",
        "text": "We could keep the same granular journal. To display provenance, filter the journal for provenance events (forks of pages, or drags of paragraphs from different authors)"
      },
      "after": "046029e7e3269a5c",
      "date": 1601008692084
    },
    {
      "type": "add",
      "id": "fcff88fe67491289",
      "item": {
        "type": "paragraph",
        "id": "fcff88fe67491289",
        "text": "See also [[postMessage Excursion]] for a sampling of javascript prior art for event handling between frames and intersections with functional reactive programming."
      },
      "after": "362c70093bf8f87a",
      "date": 1604879776286
    },
    {
      "type": "fork",
      "site": "goals.pods.wiki.dbbs.co",
      "date": 1626413709637
    },
    {
      "type": "edit",
      "id": "eb0e4b688ea0f2b2",
      "item": {
        "type": "paragraph",
        "id": "eb0e4b688ea0f2b2",
        "text": "I am persuaded by [[John Bywater]] that every domain can be exhaustively described with events. As Whitehead said, \"there's no going behind the events to find something more real.\" See [[Events Software Process Reality]]. [https://github.com/johnbywater/dddeu2019/blob/master/transcript/TRANSCRIPT.md transcript]"
      },
      "date": 1640935792036,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1640935946090
    }
  ]
}