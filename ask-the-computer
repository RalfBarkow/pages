{
  "title": "Ask The Computer",
  "story": [
    {
      "type": "html",
      "text": "Don't reason about what will happen if you do X. Do X and see what happens. Send the [[Message]] and see what it does.",
      "id": "b65647b1f5c4bafff0e2864412910eec"
    },
    {
      "type": "pagefold",
      "id": "8ac03964efd539f0",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "07ed4470883544f3",
      "site": "wiki.ralfbarkow.ch",
      "slug": "only-foresight-matters",
      "title": "Only Foresight Matters",
      "text": "I used to always say that the best quality for a programmer is persistence, but the best quality for a system analyst is [[Foresight]] (see also [[Guerrilla Guide To Interviewing]]).  Of course, if you're stuck developing a whole system by yourself, then it helps to have both.  Foresight is of supreme importance because it keeps you from spending an inordinate amount of effort following [[Anti Pattern]]s down the wrong path."
    },
    {
      "type": "html",
      "text": "Unfortunately, I have found it a rather difficult task to teach somebody to have foresight.  It seems more like an innate human trait, people either have it or they don't.  If you are a person with foresight, then when you are in the middle of a development project and you face a [[Decision]] (a fork in the road, which way should I go from here, what's the right thing to do next?), you connect to yourself (or your clients, or whomever will maintain your software) in the future, and you find out how come they are so happy with what you have done.  This will then guide you to do the right thing in the present (a structure? internal documentation? a methodology or algorithm? formal documentation? a self-contained parameter-driven external procedure?).",
      "id": "0a2f091922f401a97dd975c73b59b15a"
    },
    {
      "type": "paragraph",
      "id": "261f586a68100172",
      "text": "⇒ [[Future Self]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Ask The Computer",
        "story": []
      },
      "date": 1692163162885
    },
    {
      "id": "b65647b1f5c4bafff0e2864412910eec",
      "type": "add",
      "item": {
        "type": "html",
        "text": " <b>[[Ask The Computer]].</b> (Don't reason about what will happen if you do X. Do X and see what happens. Send the message and see what it does.)",
        "id": "b65647b1f5c4bafff0e2864412910eec"
      },
      "attribution": {
        "page": "Pair Programming Markers"
      },
      "date": 1692163166095
    },
    {
      "type": "edit",
      "id": "b65647b1f5c4bafff0e2864412910eec",
      "item": {
        "type": "html",
        "text": "Don't reason about what will happen if you do X. Do X and see what happens. Send the message and see what it does.",
        "id": "b65647b1f5c4bafff0e2864412910eec"
      },
      "date": 1692163174733
    },
    {
      "type": "edit",
      "id": "b65647b1f5c4bafff0e2864412910eec",
      "item": {
        "type": "html",
        "text": "Don't reason about what will happen if you do X. Do X and see what happens. Send the [[Message]] and see what it does.",
        "id": "b65647b1f5c4bafff0e2864412910eec"
      },
      "date": 1692163209968
    },
    {
      "item": {
        "type": "factory",
        "id": "8ac03964efd539f0"
      },
      "id": "8ac03964efd539f0",
      "type": "add",
      "after": "b65647b1f5c4bafff0e2864412910eec",
      "date": 1692163598714
    },
    {
      "type": "edit",
      "id": "8ac03964efd539f0",
      "item": {
        "type": "pagefold",
        "id": "8ac03964efd539f0",
        "text": "~"
      },
      "date": 1692163601933
    },
    {
      "item": {
        "type": "factory",
        "id": "07ed4470883544f3"
      },
      "id": "07ed4470883544f3",
      "type": "add",
      "after": "8ac03964efd539f0",
      "date": 1692163605283
    },
    {
      "type": "edit",
      "id": "07ed4470883544f3",
      "item": {
        "type": "reference",
        "id": "07ed4470883544f3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "only-foresight-matters",
        "title": "Only Foresight Matters",
        "text": "I used to always say that the best quality for a programmer is persistence, but the best quality for a [[System Analyst]] is foresight (see also [[Guerrilla Guide To Interviewing]]).  Of course, if you're stuck developing a whole system by yourself, then it helps to have both.  Foresight is of supreme importance because it keeps you from spending an inordinate amount of effort following [[Anti Pattern]]s down the wrong path."
      },
      "date": 1692163608102
    },
    {
      "item": {
        "type": "factory",
        "id": "261f586a68100172"
      },
      "id": "261f586a68100172",
      "type": "add",
      "after": "07ed4470883544f3",
      "date": 1692163612101
    },
    {
      "type": "edit",
      "id": "261f586a68100172",
      "item": {
        "type": "paragraph",
        "id": "261f586a68100172",
        "text": "⇒ [[Future Self]]"
      },
      "date": 1692163620872
    },
    {
      "id": "0a2f091922f401a97dd975c73b59b15a",
      "type": "add",
      "item": {
        "type": "html",
        "text": "Unfortunately, I have found it a rather difficult task to teach somebody to have foresight.  It seems more like an [[Innate Human Trait]], people either have it or they don't.  If you are a person with foresight, then when you are in the middle of a development project and you face a decision (a fork in the road, which way should I go from here, what's the right thing to do next?), you connect to yourself (or your clients, or whomever will maintain your software) in the future, and you find out how come they are so happy with what you have done.  This will then guide you to do the right thing in the present (a structure? internal documentation? a methodology or algorithm? formal documentation? a self-contained parameter-driven external procedure?).",
        "id": "0a2f091922f401a97dd975c73b59b15a"
      },
      "after": "07ed4470883544f3",
      "attribution": {
        "page": "Only Foresight Matters"
      },
      "date": 1692163634881
    },
    {
      "type": "edit",
      "id": "0a2f091922f401a97dd975c73b59b15a",
      "item": {
        "type": "html",
        "text": "Unfortunately, I have found it a rather difficult task to teach somebody to have foresight.  It seems more like an [[Innate Human Trait]], people either have it or they don't.  If you are a person with foresight, then when you are in the middle of a development project and you face a [[Decision]] (a fork in the road, which way should I go from here, what's the right thing to do next?), you connect to yourself (or your clients, or whomever will maintain your software) in the future, and you find out how come they are so happy with what you have done.  This will then guide you to do the right thing in the present (a structure? internal documentation? a methodology or algorithm? formal documentation? a self-contained parameter-driven external procedure?).",
        "id": "0a2f091922f401a97dd975c73b59b15a"
      },
      "date": 1692163669411
    },
    {
      "type": "edit",
      "id": "07ed4470883544f3",
      "item": {
        "type": "reference",
        "id": "07ed4470883544f3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "only-foresight-matters",
        "title": "Only Foresight Matters",
        "text": "I used to always say that the best quality for a programmer is persistence, but the best quality for a [[System Analyst]] is [[Foresight]] (see also [[Guerrilla Guide To Interviewing]]).  Of course, if you're stuck developing a whole system by yourself, then it helps to have both.  Foresight is of supreme importance because it keeps you from spending an inordinate amount of effort following [[Anti Pattern]]s down the wrong path."
      },
      "date": 1692168120380
    },
    {
      "type": "edit",
      "id": "0a2f091922f401a97dd975c73b59b15a",
      "item": {
        "type": "html",
        "text": "Unfortunately, I have found it a rather difficult task to teach somebody to have foresight.  It seems more like an innate human trait, people either have it or they don't.  If you are a person with foresight, then when you are in the middle of a development project and you face a [[Decision]] (a fork in the road, which way should I go from here, what's the right thing to do next?), you connect to yourself (or your clients, or whomever will maintain your software) in the future, and you find out how come they are so happy with what you have done.  This will then guide you to do the right thing in the present (a structure? internal documentation? a methodology or algorithm? formal documentation? a self-contained parameter-driven external procedure?).",
        "id": "0a2f091922f401a97dd975c73b59b15a"
      },
      "date": 1692168648975
    },
    {
      "type": "edit",
      "id": "07ed4470883544f3",
      "item": {
        "type": "reference",
        "id": "07ed4470883544f3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "only-foresight-matters",
        "title": "Only Foresight Matters",
        "text": "I used to always say that the best quality for a programmer is persistence, but the best quality for a system analyst is [[Foresight]] (see also [[Guerrilla Guide To Interviewing]]).  Of course, if you're stuck developing a whole system by yourself, then it helps to have both.  Foresight is of supreme importance because it keeps you from spending an inordinate amount of effort following [[Anti Pattern]]s down the wrong path."
      },
      "date": 1692168717497
    }
  ]
}