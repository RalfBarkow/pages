{
  "title": "Quest for Beauty in iCal Records",
  "story": [
    {
      "type": "paragraph",
      "id": "8eac1fe749f60a38",
      "text": "The Internet Calendaring and Scheduling Core Object Specification is a media type which allows users to store and exchange this information. Robert suggested these files could be useful in wiki. [https://en.wikipedia.org/wiki/ICalendar wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "b1423ef64355fe8a",
      "text": "See [[Calendar Coordination]]"
    },
    {
      "type": "paragraph",
      "id": "8d053080d4746e4c",
      "text": "We resumed this exploration with the challenge to make sense of the lines we read from two examples with me, Ward, at the keyboard. Noticing nested BEGIN and END lines I suggested a recursive parse."
    },
    {
      "type": "paragraph",
      "id": "b20618d755378efe",
      "text": "Martin suggested I give up on the recursive parse and make something that looked more like a state machine. I was struggling to segment the input lines at the recursive call so a single function seemed attractive."
    },
    {
      "type": "paragraph",
      "id": "f9fbecf9dad3b507",
      "text": "There are four lines to understand for BEGIN, two lines for END, and only one in other cases. [https://github.com/WardCunningham/assets/blob/51ae2c17243ad83ffe8b8dcda5fb6154f7781cf2/pages/calendar-coordination/preview.html#L25-L49 github]"
    },
    {
      "type": "html",
      "id": "24faa3909e0d4568",
      "text": "<img width=100% src=http://ward.dojo.fed.wiki/assets/pages/quest-for-beauty-in-ical-records/image.png>"
    },
    {
      "type": "paragraph",
      "id": "b99367b2f36219f8",
      "text": "We maintain a stack of suspended blocks while working on a nested block. We pop this stack when we encounter the END of the current block. I added line numbers to each line so that you can study how lines end up in the right block in the right order."
    },
    {
      "type": "paragraph",
      "id": "4cbea3bbeefc619f",
      "text": "See [[iCal Blocks as Parsed]]"
    },
    {
      "type": "paragraph",
      "id": "9a0d4c0019295d5b",
      "text": "We were going to write a compiler once. Compiling functions and function calls isn't much different than this. Notice that BEGIN shows up in two places, the first line of the block and in the enclosing block where we were reading when we encountered it."
    },
    {
      "type": "markdown",
      "id": "cbacf9e8ea31e969",
      "text": "Robert asks,\n> When you push an array onto another array, you are able to change the array that you push on after this has been done? "
    },
    {
      "type": "paragraph",
      "id": "d07dea5d3938a5c7",
      "text": "Languages vary in what they consider permissible. Javascript arrays are flexible and retain their identity when flexed. So, yes, we can keep adding lines to the block already pushed to the result."
    },
    {
      "type": "paragraph",
      "id": "cfe4d2f34569bedd",
      "text": "When we first coded the result we added the block to the result when the END was encountered but then the result came out in a scrambled order. I added the line numbers so that I could be sure the order of results were the most sensible."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Quest for Beauty in iCal Records",
        "story": []
      },
      "date": 1643482695772
    },
    {
      "item": {
        "type": "factory",
        "id": "8eac1fe749f60a38"
      },
      "id": "8eac1fe749f60a38",
      "type": "add",
      "date": 1643482699421
    },
    {
      "type": "edit",
      "id": "8eac1fe749f60a38",
      "item": {
        "type": "paragraph",
        "id": "8eac1fe749f60a38",
        "text": "The Internet Calendaring and Scheduling Core Object Specification is a media type which allows users to store and exchange this information. Robert suggested that wiki might be improved by interpreting these objects. "
      },
      "date": 1643482848338
    },
    {
      "type": "edit",
      "id": "8eac1fe749f60a38",
      "item": {
        "type": "paragraph",
        "id": "8eac1fe749f60a38",
        "text": "The Internet Calendaring and Scheduling Core Object Specification is a media type which allows users to store and exchange this information. Robert suggested that wiki might be improved by interpreting these objects. [https://en.wikipedia.org/wiki/ICalendar wikipedia]"
      },
      "date": 1643482922256
    },
    {
      "type": "edit",
      "id": "8eac1fe749f60a38",
      "item": {
        "type": "paragraph",
        "id": "8eac1fe749f60a38",
        "text": "The Internet Calendaring and Scheduling Core Object Specification is a media type which allows users to store and exchange this information. Robert suggested these files could be useful in wiki. [https://en.wikipedia.org/wiki/ICalendar wikipedia]"
      },
      "date": 1643483003815
    },
    {
      "type": "add",
      "id": "b1423ef64355fe8a",
      "item": {
        "type": "paragraph",
        "id": "b1423ef64355fe8a",
        "text": "See [[Calendar Coordination]]"
      },
      "after": "8eac1fe749f60a38",
      "date": 1643483059122
    },
    {
      "type": "add",
      "id": "8d053080d4746e4c",
      "item": {
        "type": "paragraph",
        "id": "8d053080d4746e4c",
        "text": "We have been exploring this potential in the "
      },
      "after": "b1423ef64355fe8a",
      "date": 1643483257392
    },
    {
      "type": "edit",
      "id": "8d053080d4746e4c",
      "item": {
        "type": "paragraph",
        "id": "8d053080d4746e4c",
        "text": "We resumed this exploration with the challenge to make sense of the lines we read from two examples with me, Ward, at the keyboard. Noticing nested BEGIN and E"
      },
      "date": 1643483439374
    },
    {
      "type": "edit",
      "id": "8d053080d4746e4c",
      "item": {
        "type": "paragraph",
        "id": "8d053080d4746e4c",
        "text": "We resumed this exploration with the challenge to make sense of the lines we read from two examples with me, Ward, at the keyboard. Noticing nested BEGIN and END lines I suggested a recursive parse."
      },
      "date": 1643483459193
    },
    {
      "type": "add",
      "id": "b20618d755378efe",
      "item": {
        "type": "paragraph",
        "id": "b20618d755378efe",
        "text": "Martin suggested I give up on the recursive parse and make something that looked more like a state machine. I was struggling to segment the input lines at the recursive call so a single function seemed attractive."
      },
      "after": "8d053080d4746e4c",
      "date": 1643483772089
    },
    {
      "item": {
        "type": "factory",
        "id": "afe94ec30e417612"
      },
      "id": "afe94ec30e417612",
      "type": "add",
      "after": "b20618d755378efe",
      "date": 1643483801087
    },
    {
      "type": "edit",
      "id": "afe94ec30e417612",
      "item": {
        "type": "assets",
        "id": "afe94ec30e417612",
        "text": "pages/quest-for-beauty-in-ical-records"
      },
      "date": 1643483810265
    },
    {
      "item": {
        "type": "factory",
        "id": "24faa3909e0d4568"
      },
      "id": "24faa3909e0d4568",
      "type": "add",
      "after": "afe94ec30e417612",
      "date": 1643483834225
    },
    {
      "type": "edit",
      "id": "24faa3909e0d4568",
      "item": {
        "type": "html",
        "id": "24faa3909e0d4568",
        "text": "<img width=100% src=http://ward.dojo.fed.wiki/assets/pages/quest-for-beauty-in-ical-records/image.png>"
      },
      "date": 1643483866964
    },
    {
      "type": "add",
      "id": "f9fbecf9dad3b507",
      "item": {
        "type": "paragraph",
        "id": "f9fbecf9dad3b507",
        "text": "There are four lines to understand for BEGIN, two lines for END, and only one in other cases."
      },
      "after": "b20618d755378efe",
      "date": 1643483951470
    },
    {
      "id": "f9fbecf9dad3b507",
      "type": "move",
      "order": [
        "8eac1fe749f60a38",
        "b1423ef64355fe8a",
        "8d053080d4746e4c",
        "b20618d755378efe",
        "afe94ec30e417612",
        "f9fbecf9dad3b507",
        "24faa3909e0d4568"
      ],
      "date": 1643483962631
    },
    {
      "item": {
        "type": "factory",
        "id": "b99367b2f36219f8"
      },
      "id": "b99367b2f36219f8",
      "type": "add",
      "after": "24faa3909e0d4568",
      "date": 1643483991973
    },
    {
      "type": "edit",
      "id": "b99367b2f36219f8",
      "item": {
        "type": "paragraph",
        "id": "b99367b2f36219f8",
        "text": "We maintain a stack of suspended blocks while working on a nested block. We pop this stack when we encounter the END of the current block. I added line numbers to each line so that you can study how lines end up in the right block in the right order."
      },
      "date": 1643483998806
    },
    {
      "type": "add",
      "id": "4cbea3bbeefc619f",
      "item": {
        "type": "paragraph",
        "id": "4cbea3bbeefc619f",
        "text": "See [[iCal Blocks as Parsed]]"
      },
      "after": "b99367b2f36219f8",
      "date": 1643484103807
    },
    {
      "type": "add",
      "id": "9a0d4c0019295d5b",
      "item": {
        "type": "paragraph",
        "id": "9a0d4c0019295d5b",
        "text": "We were going to write a compiler once. Compiling functions and function calls isn't much different than this. Notice that BEGIN shows up in two places, the first line of the block and in the enclosing block where we were reading when we encountered it."
      },
      "after": "4cbea3bbeefc619f",
      "date": 1643484554328
    },
    {
      "type": "add",
      "id": "cbacf9e8ea31e969",
      "item": {
        "type": "factory",
        "id": "cbacf9e8ea31e969",
        "text": "Robert asks,"
      },
      "after": "9a0d4c0019295d5b",
      "date": 1643484621361
    },
    {
      "type": "edit",
      "id": "cbacf9e8ea31e969",
      "item": {
        "type": "markdown",
        "id": "cbacf9e8ea31e969",
        "text": "Robert asks,\n> When you push an array onto another array, you are able to change the array that you push on after this has been done? "
      },
      "date": 1643484630539
    },
    {
      "item": {
        "type": "factory",
        "id": "d07dea5d3938a5c7"
      },
      "id": "d07dea5d3938a5c7",
      "type": "add",
      "after": "cbacf9e8ea31e969",
      "date": 1643484698228
    },
    {
      "type": "edit",
      "id": "d07dea5d3938a5c7",
      "item": {
        "type": "paragraph",
        "id": "d07dea5d3938a5c7",
        "text": "Languages vary in what they consider permissible. Javascript arrays are flexible and retain their identity when flexed.\n"
      },
      "date": 1643484705953
    },
    {
      "type": "edit",
      "id": "d07dea5d3938a5c7",
      "item": {
        "type": "paragraph",
        "id": "d07dea5d3938a5c7",
        "text": "Languages vary in what they consider permissible. Javascript arrays are flexible and retain their identity when flexed. So, yes, we can keep adding lines to the block already pushed to the result."
      },
      "date": 1643484779136
    },
    {
      "type": "add",
      "id": "cfe4d2f34569bedd",
      "item": {
        "type": "paragraph",
        "id": "cfe4d2f34569bedd",
        "text": "When we first coded the result we added the block to the result when the END was encountered but then the result came out in a scrambled order. I added the line numbers so that I could be sure the order of results were the most sensible."
      },
      "after": "d07dea5d3938a5c7",
      "date": 1643484820369
    },
    {
      "type": "edit",
      "id": "f9fbecf9dad3b507",
      "item": {
        "type": "paragraph",
        "id": "f9fbecf9dad3b507",
        "text": "There are four lines to understand for BEGIN, two lines for END, and only one in other cases. [https://github.com/WardCunningham/assets/blob/51ae2c17243ad83ffe8b8dcda5fb6154f7781cf2/pages/calendar-coordination/preview.html#L25-L49 github]"
      },
      "date": 1643489952033
    },
    {
      "type": "remove",
      "id": "afe94ec30e417612",
      "date": 1643489961147
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1643501139142
    }
  ]
}