{
  "title": "2023-03-22",
  "story": [
    {
      "type": "paragraph",
      "id": "2050dba2ba73d857",
      "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [[Archimedean Point]] ⇒ [[Influence Event]] ⇒ [[Token-Event Graph]]"
    },
    {
      "type": "reference",
      "id": "9d5fe663a288be1a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "reference-filter",
      "title": "Reference Filter",
      "text": "⇒ [[Hyperlink in Verb]] ⇒ [[Subcategorization Frame]]"
    },
    {
      "type": "paragraph",
      "id": "c0000c4f07042eef",
      "text": "//FIXME (reference-filter/PageStoryFilterReferenceJs.html) unexpected token: identifier"
    },
    {
      "type": "paragraph",
      "id": "a8ca519111deda2f",
      "text": "ChatGPT doesn’t know how to say “no”. [https://news.ycombinator.com/item?id=35256907 hn], [https://softwarecomplexity.com/why-ai-wont-replace-software-engineers page]"
    },
    {
      "type": "markdown",
      "id": "5a542838ef92f8d9",
      "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post] by [[Andrew Rousseau]]\n> […] engineers spend far more time navigating, reading, and comprehending code than they do writing and modifying code.\n* Xia, Bao, Lo, Xing, Hassan, & Li. Measuring Program Comprehension: A Large-Scale Field Study with Professionals in IEEE Transactions on Software Engineering 2017 July, Volume PP, Issue 99, Pages 1-26."
    },
    {
      "type": "paragraph",
      "id": "22df9d89db5ec30f",
      "text": "Ko et al. found that developers usually find the target information by navigating “information scents” [26], e.g., hyperlinks on a web page. Their study leads to a model of program comprehension grounded in the theories of information [[Foraging]]."
    },
    {
      "type": "paragraph",
      "id": "84a0d33651325072",
      "text": "[26] A. J. Ko, B. Myers, M. J. Coblenz, H. H. Aung, et al. An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks. Software Engineering, IEEE Transactions on, 32(12):971–987, 2006."
    },
    {
      "type": "reference",
      "id": "e553a2b426348983",
      "site": "wiki.ralfbarkow.ch",
      "slug": "open-bank-account",
      "title": "Open Bank Account",
      "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting. [https://www.globalization-partners.com/blog/what-is-a-w-8ben page], [https://news.ihk.digital/newsletter/ihk-aschaffenburg/Aussenwirtschaftsnachrichtenonline/Ausgabe92014/USA-Was-hat-es-mit-dem-W-8BEN-Formular-der-US-Steuerbehoerde-auf-sich-1.html ihk.digital]"
    },
    {
      "type": "reference",
      "id": "1da71fc781397088",
      "site": "found.ward.fed.wiki",
      "slug": "circulation-realms",
      "title": "Circulation Realms",
      "text": "Transcript extracted from Discord weekly discussion of A Pattern Language, one pattern at a time. [https://discord.com/channels/1078429526163464233/1085140328761278534 discord]"
    },
    {
      "type": "paragraph",
      "id": "938d10b7ba0b970f",
      "text": "WINN, Tiffany and CALDER, Paul, 2003. A pattern language for pattern language structure. In: Proceedings of the 2002 conference on Pattern languages of programs-Volume 13. 2003. p. 45–58. \n"
    },
    {
      "type": "paragraph",
      "id": "b616db34a8b0176d",
      "text": "For example, [[Circulation Realms]] suggests identifying the nested system of realms, from largest to smallest, that make up a building. Those realms should then be marked in some way, so that people using the building can easily orient themselves inside the building. But Circulation Realms of itself does not give enough of an idea of how to build a building with circulation realms, so the pattern needs to be elaborated with other patterns. The largest entrances of Circulation Realms ought to be Main Gateways, and other groups of entrances should each form a Family of Entrances. A Family of Entrances, though, needs a Main Entrance and its entrances need Entrance Transitions, and so on. Identifying Circulation Realms as a pattern in the language thus implies the addition or existence of many other, finer-grained patterns that make it up. This forces the language to grow incrementally. Circulation Realms must also be evaluated to see whether it fits well with other patterns in the language, particularly those that it ought to lie directly underneath. Adding a pattern to the language is thus a process of piecemeal growth: the change is done incrementally, and its effect on the whole evaluated at each step."
    },
    {
      "type": "paragraph",
      "id": "9ea11d488954b2ea",
      "text": "⇒ [[Philosophy of Layout]] ⇒ [[Circulation Problem]]"
    },
    {
      "type": "paragraph",
      "id": "cf14462729a62a1a",
      "text": "⇒ [[System Maps from Images]] ⇒ [[quick-start-graph]]  ⇒ [[System Graphs from Links]]"
    },
    {
      "type": "roster",
      "id": "cf9c455c866c4d89",
      "text": "rob.wiki.cafe"
    },
    {
      "type": "reference",
      "id": "1588215b83928be1",
      "site": "trails.ward.asia.wiki.org",
      "slug": "leaflet-maps",
      "title": "Leaflet Maps",
      "text": "We want to compose full-page mobile-friendly maps with data from our collection of trails. We will follow the Leaflet quick-start and mobile tutorials. [https://leafletjs.com/examples.html site]"
    },
    {
      "type": "paragraph",
      "id": "5903b0e774adbca4",
      "text": "⇒ [[Situated Software]]: Situated Software Design ⇒ [[Plans and Situated Actions]]"
    },
    {
      "type": "paragraph",
      "id": "0416aa53004f8500",
      "text": "\nANDERSON, Monica, [no date]. Reduction Considered Harmful. Online. [Accessed 22 March 2023]. Available from: https://www.academia.edu/506245/Reduction_Considered_HarmfulThe goal of any science and engineering education is to give the student the ability to “perform Reduction”. Some of you may not be familiar with this term, but you have all done it. It is the most commonly used process in science and engineering and\n"
    },
    {
      "type": "paragraph",
      "id": "a63620c794061b75",
      "text": "[[Monica Anderson]]"
    },
    {
      "type": "paragraph",
      "id": "24c52ac5f6efd1b2",
      "text": "[https://web.archive.org/web/20100127020344/http://videos.syntience.com/index.html archive]"
    },
    {
      "type": "paragraph",
      "id": "2fb9df2e2b42e5ff",
      "text": "[[Bizarre Domains]]"
    },
    {
      "type": "paragraph",
      "id": "46b3332ea5bd9567",
      "text": "⇒ [[Variational Autoencoder]] "
    },
    {
      "type": "video",
      "id": "b3cc912604ec0a29",
      "text": "YOUTUBE 7G4_Y5rsvi8\nAli Ghodsi, Lec : Deep Learning, Generative Adversarial Network, Oct 24 2017"
    },
    {
      "type": "paragraph",
      "id": "00c01539b1c627ab",
      "text": "[…] lecture by Ali Ghodsi of University of Waterloo. He does an excellent job explaining the variational method and deriving the mathematics step by step. But he doesn't get to training and “reparameterization trick”. "
    },
    {
      "type": "html",
      "id": "1506da54470d6737",
      "text": "<img\n  src=\"https://www.siarez.com/assets/images/vae_graph.png\"\n  width=\"100%\"\n>"
    },
    {
      "type": "paragraph",
      "id": "0632c6f5261893ee",
      "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. The “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com], [https://arxiv.org/pdf/1606.05908.pdf pdf], deeplearn [https://www.npmjs.com/package/deeplearn npmjs]"
    },
    {
      "type": "code",
      "id": "19f3dea9f15cbcbe",
      "text": "import * as dl from \"https://cdn.jsdelivr.net/npm/deeplearn@latest\"; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
    },
    {
      "type": "frame",
      "id": "777ff878d8f1cc7e",
      "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
    },
    {
      "type": "paragraph",
      "id": "0f76533a89f17001",
      "text": "⇒ [[Generative Modeling]]"
    },
    {
      "type": "markdown",
      "id": "f0e29a041610ed27",
      "text": "> […] log P(X) can be seen as the total number of bits required to construct a given X under our model using an ideal encoding. (Doersch, Tutorial on Variational Autoencoders)"
    },
    {
      "type": "paragraph",
      "id": "0f4b4df7bda7ee0e",
      "text": "Caffe, Deep learning framework by BAIR [https://caffe.berkeleyvision.org/installation.html page], OS X Installation [https://caffe.berkeleyvision.org/install_osx.html page]"
    }
  ],
  "journal": [
    {
      "item": {
        "type": "reference",
        "id": "9d5fe663a288be1a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "reference-filter",
        "title": "Reference Filter",
        "text": "⇒ [[Hyperlink in Verb]] ⇒ [[Subcategorization Frame]]"
      },
      "id": "9d5fe663a288be1a",
      "type": "add",
      "date": 1679456797589,
      "error": {
        "type": "error",
        "msg": "Not Found",
        "response": "Server Page not found"
      }
    },
    {
      "type": "create",
      "item": {
        "title": "2023-03-22",
        "story": [
          {
            "type": "reference",
            "id": "9d5fe663a288be1a",
            "site": "wiki.ralfbarkow.ch",
            "slug": "reference-filter",
            "title": "Reference Filter",
            "text": "⇒ [[Hyperlink in Verb]] ⇒ [[Subcategorization Frame]]"
          }
        ]
      },
      "date": 1679456796106
    },
    {
      "type": "fork",
      "date": 1679456808250
    },
    {
      "item": {
        "type": "factory",
        "id": "2050dba2ba73d857"
      },
      "id": "2050dba2ba73d857",
      "type": "add",
      "after": "9d5fe663a288be1a",
      "date": 1679456814765
    },
    {
      "id": "2050dba2ba73d857",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a"
      ],
      "date": 1679456816771
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]]"
      },
      "date": 1679456829425
    },
    {
      "item": {
        "type": "factory",
        "id": "c0000c4f07042eef"
      },
      "id": "c0000c4f07042eef",
      "type": "add",
      "after": "9d5fe663a288be1a",
      "date": 1679456868010
    },
    {
      "type": "edit",
      "id": "c0000c4f07042eef",
      "item": {
        "type": "paragraph",
        "id": "c0000c4f07042eef",
        "text": "//FIXME unexpected token: identifier"
      },
      "date": 1679456873683
    },
    {
      "type": "edit",
      "id": "c0000c4f07042eef",
      "item": {
        "type": "paragraph",
        "id": "c0000c4f07042eef",
        "text": "//FIXME (reference-filter/PageStoryFilterReferenceJs.html) unexpected token: identifier"
      },
      "date": 1679456889455
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]]"
      },
      "date": 1679458838151
    },
    {
      "item": {
        "type": "factory",
        "id": "a8ca519111deda2f"
      },
      "id": "a8ca519111deda2f",
      "type": "add",
      "after": "c0000c4f07042eef",
      "date": 1679461021811
    },
    {
      "type": "edit",
      "id": "a8ca519111deda2f",
      "item": {
        "type": "paragraph",
        "id": "a8ca519111deda2f",
        "text": "doesn’t know how to say “no”"
      },
      "date": 1679461024744
    },
    {
      "type": "edit",
      "id": "a8ca519111deda2f",
      "item": {
        "type": "paragraph",
        "id": "a8ca519111deda2f",
        "text": "ChatGPT doesn’t know how to say “no”."
      },
      "date": 1679461142727
    },
    {
      "type": "edit",
      "id": "a8ca519111deda2f",
      "item": {
        "type": "paragraph",
        "id": "a8ca519111deda2f",
        "text": "ChatGPT doesn’t know how to say “no”. [https://news.ycombinator.com/item?id=35256907 hn]"
      },
      "date": 1679461161484
    },
    {
      "type": "edit",
      "id": "a8ca519111deda2f",
      "item": {
        "type": "paragraph",
        "id": "a8ca519111deda2f",
        "text": "ChatGPT doesn’t know how to say “no”. [https://news.ycombinator.com/item?id=35256907 hn], [https://softwarecomplexity.com/why-ai-wont-replace-software-engineers page]"
      },
      "date": 1679461329016
    },
    {
      "item": {
        "type": "factory",
        "id": "5a542838ef92f8d9"
      },
      "id": "5a542838ef92f8d9",
      "type": "add",
      "after": "a8ca519111deda2f",
      "date": 1679461540184
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  "
      },
      "date": 1679461550953
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters"
      },
      "date": 1679461559377
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post]"
      },
      "date": 1679461570762
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post] by [Andrew Rousseau]"
      },
      "date": 1679461668697
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post] by [[Andrew Rousseau]]"
      },
      "date": 1679461676435
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post] by [[Andrew Rousseau]]\n> […] engineers spend far more time navigating, reading, and comprehending code than they do writing and modifying code."
      },
      "date": 1679461727435
    },
    {
      "type": "edit",
      "id": "5a542838ef92f8d9",
      "item": {
        "type": "markdown",
        "id": "5a542838ef92f8d9",
        "text": "*  Why Complexity Matters [https://softwarecomplexity.com/why-complexity-matters post] by [[Andrew Rousseau]]\n> […] engineers spend far more time navigating, reading, and comprehending code than they do writing and modifying code.\n* Xia, Bao, Lo, Xing, Hassan, & Li. Measuring Program Comprehension: A Large-Scale Field Study with Professionals in IEEE Transactions on Software Engineering 2017 July, Volume PP, Issue 99, Pages 1-26."
      },
      "date": 1679461774483
    },
    {
      "item": {
        "type": "factory",
        "id": "22df9d89db5ec30f"
      },
      "id": "22df9d89db5ec30f",
      "type": "add",
      "after": "5a542838ef92f8d9",
      "date": 1679461955019
    },
    {
      "type": "edit",
      "id": "22df9d89db5ec30f",
      "item": {
        "type": "paragraph",
        "id": "22df9d89db5ec30f",
        "text": "Ko et al. found that developers usually find the target information by navigating “information scents” [26], e.g., hyperlinks on a web page. Their study leads to a model of program comprehension grounded in the theories of information foraging."
      },
      "date": 1679461958053
    },
    {
      "type": "edit",
      "id": "22df9d89db5ec30f",
      "item": {
        "type": "paragraph",
        "id": "22df9d89db5ec30f",
        "text": "Ko et al. found that developers usually find the target information by navigating “information scents” [26], e.g., hyperlinks on a web page. Their study leads to a model of program comprehension grounded in the theories of information [[Foraging]]."
      },
      "date": 1679461987810
    },
    {
      "item": {
        "type": "factory",
        "id": "84a0d33651325072"
      },
      "id": "84a0d33651325072",
      "type": "add",
      "after": "22df9d89db5ec30f",
      "date": 1679462124003
    },
    {
      "type": "edit",
      "id": "84a0d33651325072",
      "item": {
        "type": "paragraph",
        "id": "84a0d33651325072",
        "text": "[26] A. J. Ko, B. Myers, M. J. Coblenz, H. H. Aung, et al. An exploratory study of how developers seek, relate, and collect relevant information during software maintenance tasks. Software Engineering, IEEE Transactions on, 32(12):971–987, 2006."
      },
      "date": 1679462128779
    },
    {
      "item": {
        "type": "factory",
        "id": "e553a2b426348983"
      },
      "id": "e553a2b426348983",
      "type": "add",
      "after": "84a0d33651325072",
      "date": 1679466916020
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "Private Individuals and Sole Proprietorships or"
      },
      "date": 1679466920117
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US-Steuerformular"
      },
      "date": 1679466977026
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E"
      },
      "date": 1679467029551
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting (Individuals)."
      },
      "date": 1679467075953
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting (Individuals). [https://www.globalization-partners.com/blog/what-is-a-w-8ben/?hsa_acc=5309498862&hsa_cam=&hsa_grp=&hsa_kw=&hsa_mt=b&hsa_net=adwords&hsa_ver=3&utm_source=Adwords&utm_medium=cpc&utm_campaign=Search_|_Switzerland_-_Dynamic_[en]&utm_term=&network=g&gclid=EAIaIQobChMIsubqnfbu_QIVj-R3Ch3dYArZEAAYASAAEgJD-vD_BwE page]"
      },
      "date": 1679467085499
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting (Individuals). [https://www.globalization-partners.com/blog/what-is-a-w-8ben page]"
      },
      "date": 1679467097932
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting (Individuals). [https://www.globalization-partners.com/blog/what-is-a-w-8ben page], [https://news.ihk.digital/newsletter/ihk-aschaffenburg/Aussenwirtschaftsnachrichtenonline/Ausgabe92014/USA-Was-hat-es-mit-dem-W-8BEN-Formular-der-US-Steuerbehoerde-auf-sich-1.html ihk.digital]"
      },
      "date": 1679467300112
    },
    {
      "type": "edit",
      "id": "e553a2b426348983",
      "item": {
        "type": "reference",
        "id": "e553a2b426348983",
        "site": "wiki.ralfbarkow.ch",
        "slug": "open-bank-account",
        "title": "Open Bank Account",
        "text": "⇒ [[Alternative Bank Schweiz AG]]: US Tax Form W-8BEN-E stands for the Certificate of Foreign Status of Beneficial Owner for United States Tax Withholding and Reporting. [https://www.globalization-partners.com/blog/what-is-a-w-8ben page], [https://news.ihk.digital/newsletter/ihk-aschaffenburg/Aussenwirtschaftsnachrichtenonline/Ausgabe92014/USA-Was-hat-es-mit-dem-W-8BEN-Formular-der-US-Steuerbehoerde-auf-sich-1.html ihk.digital]"
      },
      "date": 1679467522816
    },
    {
      "item": {
        "type": "factory",
        "id": "1da71fc781397088"
      },
      "id": "1da71fc781397088",
      "type": "add",
      "after": "e553a2b426348983",
      "date": 1679468097867
    },
    {
      "type": "edit",
      "id": "1da71fc781397088",
      "item": {
        "type": "reference",
        "id": "1da71fc781397088",
        "site": "found.ward.fed.wiki",
        "slug": "circulation-realms",
        "title": "Circulation Realms",
        "text": "Transcript extracted from Discord weekly discussion of A Pattern Language, one pattern at a time. [https://discord.com/channels/1078429526163464233/1085140328761278534 discord]"
      },
      "date": 1679468105315
    },
    {
      "item": {
        "type": "factory",
        "id": "938d10b7ba0b970f"
      },
      "id": "938d10b7ba0b970f",
      "type": "add",
      "after": "1da71fc781397088",
      "date": 1679468369199
    },
    {
      "type": "edit",
      "id": "938d10b7ba0b970f",
      "item": {
        "type": "paragraph",
        "id": "938d10b7ba0b970f",
        "text": "WINN, Tiffany and CALDER, Paul, 2003. A pattern language for pattern language structure. In: Proceedings of the 2002 conference on Pattern languages of programs-Volume 13. 2003. p. 45–58. \n"
      },
      "date": 1679468379911
    },
    {
      "item": {
        "type": "factory",
        "id": "b616db34a8b0176d"
      },
      "id": "b616db34a8b0176d",
      "type": "add",
      "after": "938d10b7ba0b970f",
      "date": 1679468456937
    },
    {
      "type": "edit",
      "id": "b616db34a8b0176d",
      "item": {
        "type": "paragraph",
        "id": "b616db34a8b0176d",
        "text": "For example, Circulation Realms suggests identifying the nested system of realms, from largest to smallest, that make up a building. Those realms should then be marked in some way, so that people using the building can easily orient themselves inside the building. But Circulation Realms of itself does not give enough of an idea of how to build a building with circulation realms, so the pattern needs to be elaborated with other patterns. The largest entrances of Circulation Realms ought to be Main Gateways, and other groups of entrances should each form a Family of Entrances. A Family of Entrances, though, needs a Main Entrance and its entrances need Entrance Transitions, and so on. Identifying Circulation Realms as a pattern in the language thus implies the addition or existence of many other, finer-grained patterns that make it up. This forces the language to grow incrementally. Circulation Realms must also be evaluated to see whether it fits well with other patterns in the language, particularly those that it ought to lie directly"
      },
      "date": 1679468459061
    },
    {
      "type": "edit",
      "id": "b616db34a8b0176d",
      "item": {
        "type": "paragraph",
        "id": "b616db34a8b0176d",
        "text": "For example, Circulation Realms suggests identifying the nested system of realms, from largest to smallest, that make up a building. Those realms should then be marked in some way, so that people using the building can easily orient themselves inside the building. But Circulation Realms of itself does not give enough of an idea of how to build a building with circulation realms, so the pattern needs to be elaborated with other patterns. The largest entrances of Circulation Realms ought to be Main Gateways, and other groups of entrances should each form a Family of Entrances. A Family of Entrances, though, needs a Main Entrance and its entrances need Entrance Transitions, and so on. Identifying Circulation Realms as a pattern in the language thus implies the addition or existence of many other, finer-grained patterns that make it up. This forces the language to grow incrementally. Circulation Realms must also be evaluated to see whether it fits well with other patterns in the language, particularly those that it ought to lie directly underneath. Adding a pattern to the language is thus a process of piecemeal growth: the change is done incrementally, and its effect on the whole evaluated at each step."
      },
      "date": 1679468474517
    },
    {
      "type": "edit",
      "id": "b616db34a8b0176d",
      "item": {
        "type": "paragraph",
        "id": "b616db34a8b0176d",
        "text": "For example, [[Circulation Realms]] suggests identifying the nested system of realms, from largest to smallest, that make up a building. Those realms should then be marked in some way, so that people using the building can easily orient themselves inside the building. But Circulation Realms of itself does not give enough of an idea of how to build a building with circulation realms, so the pattern needs to be elaborated with other patterns. The largest entrances of Circulation Realms ought to be Main Gateways, and other groups of entrances should each form a Family of Entrances. A Family of Entrances, though, needs a Main Entrance and its entrances need Entrance Transitions, and so on. Identifying Circulation Realms as a pattern in the language thus implies the addition or existence of many other, finer-grained patterns that make it up. This forces the language to grow incrementally. Circulation Realms must also be evaluated to see whether it fits well with other patterns in the language, particularly those that it ought to lie directly underneath. Adding a pattern to the language is thus a process of piecemeal growth: the change is done incrementally, and its effect on the whole evaluated at each step."
      },
      "date": 1679468489035
    },
    {
      "item": {
        "type": "factory",
        "id": "9ea11d488954b2ea"
      },
      "id": "9ea11d488954b2ea",
      "type": "add",
      "after": "b616db34a8b0176d",
      "date": 1679469545206
    },
    {
      "type": "edit",
      "id": "9ea11d488954b2ea",
      "item": {
        "type": "paragraph",
        "id": "9ea11d488954b2ea",
        "text": "⇒ [[Philosophy of Layout]]"
      },
      "date": 1679469554968
    },
    {
      "type": "edit",
      "id": "9ea11d488954b2ea",
      "item": {
        "type": "paragraph",
        "id": "9ea11d488954b2ea",
        "text": "⇒ [[Philosophy of Layout]] ⇒ [[Circulation Problem]]"
      },
      "date": 1679470155681
    },
    {
      "item": {
        "type": "factory",
        "id": "cf14462729a62a1a"
      },
      "id": "cf14462729a62a1a",
      "type": "add",
      "after": "9ea11d488954b2ea",
      "date": 1679471006080
    },
    {
      "type": "edit",
      "id": "cf14462729a62a1a",
      "item": {
        "type": "paragraph",
        "id": "cf14462729a62a1a",
        "text": "[[quick-start-graph]]"
      },
      "date": 1679471009866
    },
    {
      "item": {
        "type": "factory",
        "id": "cf9c455c866c4d89"
      },
      "id": "cf9c455c866c4d89",
      "type": "add",
      "after": "cf14462729a62a1a",
      "date": 1679471077541
    },
    {
      "type": "edit",
      "id": "cf9c455c866c4d89",
      "item": {
        "type": "roster",
        "id": "cf9c455c866c4d89",
        "text": "rob.wiki.cafe"
      },
      "date": 1679471081853
    },
    {
      "type": "edit",
      "id": "cf14462729a62a1a",
      "item": {
        "type": "paragraph",
        "id": "cf14462729a62a1a",
        "text": "[[System Maps from Images [[quick-start-graph]]"
      },
      "date": 1679471197877
    },
    {
      "type": "edit",
      "id": "cf14462729a62a1a",
      "item": {
        "type": "paragraph",
        "id": "cf14462729a62a1a",
        "text": "⇒ [[System Maps from Images]] [[quick-start-graph]]"
      },
      "date": 1679471216113
    },
    {
      "type": "edit",
      "id": "cf14462729a62a1a",
      "item": {
        "type": "paragraph",
        "id": "cf14462729a62a1a",
        "text": "⇒ [[System Maps from Images]] ⇒ [[quick-start-graph]]"
      },
      "date": 1679471224466
    },
    {
      "item": {
        "type": "factory",
        "id": "1588215b83928be1"
      },
      "id": "1588215b83928be1",
      "type": "add",
      "after": "cf9c455c866c4d89",
      "date": 1679471297421
    },
    {
      "type": "edit",
      "id": "1588215b83928be1",
      "item": {
        "type": "reference",
        "id": "1588215b83928be1",
        "site": "trails.ward.asia.wiki.org",
        "slug": "leaflet-maps",
        "title": "Leaflet Maps",
        "text": "We want to compose full-page mobile-friendly maps with data from our collection of trails. We will follow the Leaflet quick-start and mobile tutorials. [https://leafletjs.com/examples.html site]"
      },
      "date": 1679471301038
    },
    {
      "type": "edit",
      "id": "cf14462729a62a1a",
      "item": {
        "type": "paragraph",
        "id": "cf14462729a62a1a",
        "text": "⇒ [[System Maps from Images]] ⇒ [[quick-start-graph]]  ⇒ [[System Graphs from Links]]"
      },
      "date": 1679472458174
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [Archimedean Point]]"
      },
      "date": 1679473555928
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [[Archimedean Point]]"
      },
      "date": 1679473562810
    },
    {
      "item": {
        "type": "factory",
        "id": "5903b0e774adbca4"
      },
      "id": "5903b0e774adbca4",
      "type": "add",
      "after": "1588215b83928be1",
      "date": 1679475372887
    },
    {
      "type": "edit",
      "id": "5903b0e774adbca4",
      "item": {
        "type": "paragraph",
        "id": "5903b0e774adbca4",
        "text": "⇒ [[Situated Software]]"
      },
      "date": 1679475381739
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [[Archimedean Point]] ⇒ [[Influence Event]]"
      },
      "date": 1679477027046
    },
    {
      "type": "add",
      "id": "2738fab62f3ad6ad",
      "item": {
        "type": "paragraph",
        "id": "2738fab62f3ad6ad",
        "text": "[[Token Event Graph||"
      },
      "after": "5903b0e774adbca4",
      "date": 1679477183353
    },
    {
      "type": "edit",
      "id": "2738fab62f3ad6ad",
      "item": {
        "type": "paragraph",
        "id": "2738fab62f3ad6ad",
        "text": "[[Token Event Graph]]"
      },
      "date": 1679477188553
    },
    {
      "type": "remove",
      "id": "2738fab62f3ad6ad",
      "date": 1679477203495
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [[Archimedean Point]] ⇒ [[Influence Event]] ⇒ [[Token Event Graph]]"
      },
      "date": 1679477209647
    },
    {
      "type": "edit",
      "id": "2050dba2ba73d857",
      "item": {
        "type": "paragraph",
        "id": "2050dba2ba73d857",
        "text": "⇒ [[The Human Condition]] ⇒ [[Earth Alienation]] ⇒ [[Archimedean Point]] ⇒ [[Influence Event]] ⇒ [[Token-Event Graph]]"
      },
      "date": 1679477225436
    },
    {
      "type": "edit",
      "id": "5903b0e774adbca4",
      "item": {
        "type": "paragraph",
        "id": "5903b0e774adbca4",
        "text": "⇒ [[Situated Software]]: Situated Software Design"
      },
      "date": 1679478133386
    },
    {
      "item": {
        "type": "factory",
        "id": "6a8b6b5312c5509a"
      },
      "id": "6a8b6b5312c5509a",
      "type": "add",
      "after": "5903b0e774adbca4",
      "date": 1679478403020
    },
    {
      "type": "edit",
      "id": "6a8b6b5312c5509a",
      "item": {
        "type": "paragraph",
        "id": "6a8b6b5312c5509a",
        "text": "\nHOFMANN, Hubert F., PFEIFER, Rolf and VINKHUYZEN, Erik, 1993. Situated Software Design. Technical Report. University of Zurich. \n"
      },
      "date": 1679478406392
    },
    {
      "id": "6a8b6b5312c5509a",
      "type": "remove",
      "removedTo": {
        "page": "Situated Software"
      },
      "date": 1679478437099
    },
    {
      "type": "edit",
      "id": "5903b0e774adbca4",
      "item": {
        "type": "paragraph",
        "id": "5903b0e774adbca4",
        "text": "⇒ [[Situated Software]]: Situated Software Design ⇒ [[Plans and Situated Actions]]"
      },
      "date": 1679479211242
    },
    {
      "item": {
        "type": "factory",
        "id": "0416aa53004f8500"
      },
      "id": "0416aa53004f8500",
      "type": "add",
      "after": "5903b0e774adbca4",
      "date": 1679481019838
    },
    {
      "type": "edit",
      "id": "0416aa53004f8500",
      "item": {
        "type": "paragraph",
        "id": "0416aa53004f8500",
        "text": "\nANDERSON, Monica, [no date]. Reduction Considered Harmful. Online. [Accessed 22 March 2023]. Available from: https://www.academia.edu/506245/Reduction_Considered_HarmfulThe goal of any science and engineering education is to give the student the ability to “perform Reduction”. Some of you may not be familiar with this term, but you have all done it. It is the most commonly used process in science and engineering and\n"
      },
      "date": 1679481026235
    },
    {
      "item": {
        "type": "factory",
        "id": "a63620c794061b75"
      },
      "id": "a63620c794061b75",
      "type": "add",
      "after": "0416aa53004f8500",
      "date": 1679481112169
    },
    {
      "type": "edit",
      "id": "a63620c794061b75",
      "item": {
        "type": "paragraph",
        "id": "a63620c794061b75",
        "text": "[[Monica Anderson]]"
      },
      "date": 1679481120951
    },
    {
      "item": {
        "type": "factory",
        "id": "24c52ac5f6efd1b2"
      },
      "id": "24c52ac5f6efd1b2",
      "type": "add",
      "after": "a63620c794061b75",
      "date": 1679481843296
    },
    {
      "type": "edit",
      "id": "24c52ac5f6efd1b2",
      "item": {
        "type": "paragraph",
        "id": "24c52ac5f6efd1b2",
        "text": "[https://web.archive.org/web/20100127020344/http://videos.syntience.com/index.html archive]"
      },
      "date": 1679481851306
    },
    {
      "item": {
        "type": "factory",
        "id": "2fb9df2e2b42e5ff"
      },
      "id": "2fb9df2e2b42e5ff",
      "type": "add",
      "after": "24c52ac5f6efd1b2",
      "date": 1679481960395
    },
    {
      "type": "edit",
      "id": "2fb9df2e2b42e5ff",
      "item": {
        "type": "paragraph",
        "id": "2fb9df2e2b42e5ff",
        "text": "[[Bizarre Domains]]"
      },
      "date": 1679481964707
    },
    {
      "item": {
        "type": "factory",
        "id": "46b3332ea5bd9567"
      },
      "id": "46b3332ea5bd9567",
      "type": "add",
      "after": "2fb9df2e2b42e5ff",
      "date": 1679483926770
    },
    {
      "type": "edit",
      "id": "46b3332ea5bd9567",
      "item": {
        "type": "paragraph",
        "id": "46b3332ea5bd9567",
        "text": "[[Variational Autoencoder]]"
      },
      "date": 1679483930977
    },
    {
      "type": "edit",
      "id": "46b3332ea5bd9567",
      "item": {
        "type": "paragraph",
        "id": "46b3332ea5bd9567",
        "text": "[[Variational Autoencoder]] [https://www.siarez.com/projects/variational-autoencoder siarez.com]"
      },
      "date": 1679483950214
    },
    {
      "item": {
        "type": "factory",
        "id": "b3cc912604ec0a29"
      },
      "id": "b3cc912604ec0a29",
      "type": "add",
      "after": "46b3332ea5bd9567",
      "date": 1679484617926
    },
    {
      "type": "edit",
      "id": "b3cc912604ec0a29",
      "item": {
        "type": "video",
        "id": "b3cc912604ec0a29",
        "text": "YOUTUBE JLjZ5fYso1Q"
      },
      "date": 1679484628608
    },
    {
      "type": "edit",
      "id": "b3cc912604ec0a29",
      "item": {
        "type": "video",
        "id": "b3cc912604ec0a29",
        "text": "YOUTUBE https://youtu.be/7G4_Y5rsvi8"
      },
      "date": 1679484666826
    },
    {
      "type": "edit",
      "id": "b3cc912604ec0a29",
      "item": {
        "type": "video",
        "id": "b3cc912604ec0a29",
        "text": "YOUTUBE 7G4_Y5rsvi8"
      },
      "date": 1679484674218
    },
    {
      "type": "edit",
      "id": "b3cc912604ec0a29",
      "item": {
        "type": "video",
        "id": "b3cc912604ec0a29",
        "text": "YOUTUBE 7G4_Y5rsvi8\nAli Ghodsi, Lec : Deep Learning, Generative Adversarial Network, Oct 24 2017"
      },
      "date": 1679484692132
    },
    {
      "item": {
        "type": "factory",
        "id": "00c01539b1c627ab"
      },
      "id": "00c01539b1c627ab",
      "type": "add",
      "after": "b3cc912604ec0a29",
      "date": 1679485035821
    },
    {
      "type": "edit",
      "id": "00c01539b1c627ab",
      "item": {
        "type": "paragraph",
        "id": "00c01539b1c627ab",
        "text": "[…] lecture by Ali Ghodsi of University of Waterloo. He does an excellent job explaining the variational method and deriving the mathematics step by step. But he doesn't get to training and “reparameterization trick”. "
      },
      "date": 1679485041767
    },
    {
      "type": "add",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. "
      },
      "after": "00c01539b1c627ab",
      "date": 1679485093384
    },
    {
      "type": "edit",
      "id": "46b3332ea5bd9567",
      "item": {
        "type": "paragraph",
        "id": "46b3332ea5bd9567",
        "text": "[[Variational Autoencoder]] "
      },
      "date": 1679485112288
    },
    {
      "type": "edit",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com]"
      },
      "date": 1679485115164
    },
    {
      "type": "edit",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com], [https://arxiv.org/pdf/1606.05908.pdf pdf]"
      },
      "date": 1679485234333
    },
    {
      "type": "add",
      "id": "0f76533a89f17001",
      "item": {
        "type": "paragraph",
        "id": "0f76533a89f17001",
        "text": "⇒ [[Generative Modeling]]"
      },
      "after": "0632c6f5261893ee",
      "date": 1679485298976
    },
    {
      "item": {
        "type": "factory",
        "id": "0f4b4df7bda7ee0e"
      },
      "id": "0f4b4df7bda7ee0e",
      "type": "add",
      "after": "0f76533a89f17001",
      "date": 1679485786080
    },
    {
      "type": "edit",
      "id": "0f4b4df7bda7ee0e",
      "item": {
        "type": "paragraph",
        "id": "0f4b4df7bda7ee0e",
        "text": "Caffe"
      },
      "date": 1679485788556
    },
    {
      "type": "edit",
      "id": "0f4b4df7bda7ee0e",
      "item": {
        "type": "paragraph",
        "id": "0f4b4df7bda7ee0e",
        "text": "Caffe, Deep learning framework by BAIR"
      },
      "date": 1679485796404
    },
    {
      "type": "edit",
      "id": "0f4b4df7bda7ee0e",
      "item": {
        "type": "paragraph",
        "id": "0f4b4df7bda7ee0e",
        "text": "Caffe, Deep learning framework by BAIR [https://caffe.berkeleyvision.org/installation.html page]"
      },
      "date": 1679485806730
    },
    {
      "type": "edit",
      "id": "0f4b4df7bda7ee0e",
      "item": {
        "type": "paragraph",
        "id": "0f4b4df7bda7ee0e",
        "text": "Caffe, Deep learning framework by BAIR [https://caffe.berkeleyvision.org/installation.html page], OS X Installation"
      },
      "date": 1679485826839
    },
    {
      "type": "edit",
      "id": "0f4b4df7bda7ee0e",
      "item": {
        "type": "paragraph",
        "id": "0f4b4df7bda7ee0e",
        "text": "Caffe, Deep learning framework by BAIR [https://caffe.berkeleyvision.org/installation.html page], OS X Installation [https://caffe.berkeleyvision.org/install_osx.html page]"
      },
      "date": 1679485835053
    },
    {
      "type": "add",
      "id": "f0e29a041610ed27",
      "item": {
        "type": "paragraph",
        "id": "f0e29a041610ed27",
        "text": "> […] log P(X) can be seen as the total number of bits required to construct a given X under our model using an ideal encoding."
      },
      "after": "0f76533a89f17001",
      "date": 1679486013924
    },
    {
      "type": "edit",
      "id": "f0e29a041610ed27",
      "item": {
        "type": "markdown",
        "id": "f0e29a041610ed27",
        "text": "> […] log P(X) can be seen as the total number of bits required to construct a given X under our model using an ideal encoding."
      },
      "date": 1679486014957
    },
    {
      "type": "edit",
      "id": "f0e29a041610ed27",
      "item": {
        "type": "markdown",
        "id": "f0e29a041610ed27",
        "text": "> […] log P(X) can be seen as the total number of bits required to construct a given X under our model using an ideal encoding. (Doersch, Tutorial on Variational Autoencoders)"
      },
      "date": 1679486039865
    },
    {
      "type": "edit",
      "id": "46b3332ea5bd9567",
      "item": {
        "type": "paragraph",
        "id": "46b3332ea5bd9567",
        "text": "⇒ [[Variational Autoencoder]] "
      },
      "date": 1679486073655
    },
    {
      "item": {
        "type": "factory",
        "id": "1506da54470d6737"
      },
      "id": "1506da54470d6737",
      "type": "add",
      "after": "0f4b4df7bda7ee0e",
      "date": 1679486176850
    },
    {
      "id": "1506da54470d6737",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "0f4b4df7bda7ee0e"
      ],
      "date": 1679486180483
    },
    {
      "type": "edit",
      "id": "1506da54470d6737",
      "item": {
        "type": "html",
        "id": "1506da54470d6737",
        "text": "<img\n  src=\"https://www.siarez.com/assets/images/vae_graph.png\"\n  width=\"100%\"\n>"
      },
      "date": 1679486197137
    },
    {
      "type": "edit",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com], [https://arxiv.org/pdf/1606.05908.pdf pdf], deeplearn "
      },
      "date": 1679486578279
    },
    {
      "type": "edit",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com], [https://arxiv.org/pdf/1606.05908.pdf pdf], deeplearn [https://www.npmjs.com/package/deeplearn npmjs]"
      },
      "date": 1679486590397
    },
    {
      "item": {
        "type": "factory",
        "id": "96a45dae90e251fc"
      },
      "id": "96a45dae90e251fc",
      "type": "add",
      "after": "0f4b4df7bda7ee0e",
      "date": 1679486727142
    },
    {
      "item": {
        "type": "factory",
        "id": "19f3dea9f15cbcbe"
      },
      "id": "19f3dea9f15cbcbe",
      "type": "add",
      "after": "0f4b4df7bda7ee0e",
      "date": 1679486730512
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from 'deeplearn'; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679486734175
    },
    {
      "id": "777ff878d8f1cc7e",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 200"
      },
      "after": "19f3dea9f15cbcbe",
      "attribution": {
        "page": "Journal to Graph"
      },
      "date": 1679486793982
    },
    {
      "id": "0f4b4df7bda7ee0e",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "19f3dea9f15cbcbe",
        "0f4b4df7bda7ee0e",
        "777ff878d8f1cc7e",
        "96a45dae90e251fc"
      ],
      "date": 1679486863039
    },
    {
      "id": "96a45dae90e251fc",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "19f3dea9f15cbcbe",
        "96a45dae90e251fc",
        "0f4b4df7bda7ee0e",
        "777ff878d8f1cc7e"
      ],
      "date": 1679486865626
    },
    {
      "id": "777ff878d8f1cc7e",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "19f3dea9f15cbcbe",
        "777ff878d8f1cc7e",
        "96a45dae90e251fc",
        "0f4b4df7bda7ee0e"
      ],
      "date": 1679486870429
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from 'https://unpkg.com/deeplearn@latest\"'; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679486892453
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from 'https://unpkg.com/deeplearn@latest'; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679486955810
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from \"https://unpkg.com/deeplearn@latest\"; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679486981420
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from \"https://unpkg.com/deeplearn@0.5.1/dist/deeplearn.js\"; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679487035449
    },
    {
      "type": "remove",
      "id": "96a45dae90e251fc",
      "date": 1679487053327
    },
    {
      "id": "19f3dea9f15cbcbe",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "19f3dea9f15cbcbe",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "777ff878d8f1cc7e",
        "0f4b4df7bda7ee0e"
      ],
      "date": 1679487061149
    },
    {
      "id": "777ff878d8f1cc7e",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "0632c6f5261893ee",
        "19f3dea9f15cbcbe",
        "777ff878d8f1cc7e",
        "1506da54470d6737",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "0f4b4df7bda7ee0e"
      ],
      "date": 1679487071191
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from \"\"https://cdn.jsdelivr.net/npm/deeplearn@latest\"\"; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679487141641
    },
    {
      "type": "edit",
      "id": "19f3dea9f15cbcbe",
      "item": {
        "type": "code",
        "id": "19f3dea9f15cbcbe",
        "text": "import * as dl from \"https://cdn.jsdelivr.net/npm/deeplearn@latest\"; // If not loading the script as a global\n \nconst a = dl.tensor1d([1, 2, 3]);\nconst b = dl.scalar(2);\n \nconst result = a.add(b); // a is not modified, result is a new tensor\nresult.data().then(data => console.log(data)); // Float32Array([3, 4, 5]\n \n// Alternatively you can use a blocking call to get the data.\n// However this might slow your program down if called repeatedly.\nconsole.log(result.dataSync()); // Float32Array([3, 4, 5]"
      },
      "date": 1679487151294
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/basicjs.html\nHEIGHT 75"
      },
      "date": 1679487283476
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
      },
      "date": 1679487293157
    },
    {
      "id": "1506da54470d6737",
      "type": "move",
      "order": [
        "2050dba2ba73d857",
        "9d5fe663a288be1a",
        "c0000c4f07042eef",
        "a8ca519111deda2f",
        "5a542838ef92f8d9",
        "22df9d89db5ec30f",
        "84a0d33651325072",
        "e553a2b426348983",
        "1da71fc781397088",
        "938d10b7ba0b970f",
        "b616db34a8b0176d",
        "9ea11d488954b2ea",
        "cf14462729a62a1a",
        "cf9c455c866c4d89",
        "1588215b83928be1",
        "5903b0e774adbca4",
        "0416aa53004f8500",
        "a63620c794061b75",
        "24c52ac5f6efd1b2",
        "2fb9df2e2b42e5ff",
        "46b3332ea5bd9567",
        "b3cc912604ec0a29",
        "00c01539b1c627ab",
        "1506da54470d6737",
        "0632c6f5261893ee",
        "19f3dea9f15cbcbe",
        "777ff878d8f1cc7e",
        "0f76533a89f17001",
        "f0e29a041610ed27",
        "0f4b4df7bda7ee0e"
      ],
      "date": 1679487339703
    },
    {
      "type": "edit",
      "id": "0632c6f5261893ee",
      "item": {
        "type": "paragraph",
        "id": "0632c6f5261893ee",
        "text": "Since the network has random sampling at heart, it is at first not obvious how to do error backpropagation. The “reparameterization trick” is a clever way of getting random sampling out of the error backpropagation path. To understand it, just compare the two graphs on the hero image on top of this page, after you've watched Ali Ghodsi's lecture. [https://www.siarez.com/projects/variational-autoencoder siarez.com], [https://arxiv.org/pdf/1606.05908.pdf pdf], deeplearn [https://www.npmjs.com/package/deeplearn npmjs]"
      },
      "date": 1679487358524
    }
  ]
}