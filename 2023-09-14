{
  "title": "2023-09-14",
  "story": [
    {
      "type": "paragraph",
      "id": "65de0ad393316029",
      "text": "⇒ [[The (|>) Pipe]] ⇒ [[oneOf]] ⇒ [[Decode.oneOf]]"
    },
    {
      "type": "paragraph",
      "id": "99c78916b4d80713",
      "text": "⇒ [[Doctrine]] [https://doctrine.wardleymaps.com site]"
    },
    {
      "type": "paragraph",
      "id": "2f2ebcf18509ece7",
      "text": "Listen to your ecosystem"
    },
    {
      "type": "roster",
      "id": "02022f0ffdf342cf",
      "text": "de.dreyeck.ch"
    },
    {
      "type": "paragraph",
      "id": "edf88c558d2ad006",
      "text": "[[Hör auf dein Ökosystem]]"
    },
    {
      "type": "paragraph",
      "id": "64c5621be0e7ea26",
      "text": "⇒ [[Über Technisation]], technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise [https://kusanowsky.wordpress.com/2023/04/11/uber-technisation-technische-intelligenz-der-gesellschaft-und-wege-aus-der-okologischen-krise-2/ page], [https://kusanowsky.files.wordpress.com/2023/04/2.-technisation-technische-intelligenz-der-gesellschaft.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "f7cb3307cbfd79aa",
      "text": "⇒ [[Zum Ewigen Frieden]] – Erzählung von Alfred Testa [https://kusanowsky.wordpress.com/2023/07/21/zum-ewigen-frieden-erzahlung-von-alfred-testa/ page]"
    },
    {
      "type": "audio",
      "id": "19e936a727f1559c",
      "text": "https://cf-hls-media.sndcdn.com/media/159660/9259884/9419544/Gzaw2l3CABON.128.mp3\nForbidden"
    },
    {
      "type": "paragraph",
      "id": "756c18345650d76c",
      "text": "Wir finden die Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibfglbkghjkdmpjkgehcnadcffdl page] nicht mehr."
    },
    {
      "type": "markdown",
      "id": "485d1b2e0d422ad6",
      "text": "> Diese Erweiterung verletzt die Chrome Web Store-Richtlinien."
    },
    {
      "type": "paragraph",
      "id": "204baa30e643a4ce",
      "text": "It's not the only extension that violates their policies:"
    },
    {
      "type": "markdown",
      "id": "80c0f77a49873ee3",
      "text": "> Vue.js devtools\n6.0.0 beta 21\nDiese Erweiterung verletzt die Chrome Web Store-Richtlinien."
    },
    {
      "type": "paragraph",
      "id": "1084f3d3814b2e30",
      "text": "⇒ Jose's Youtube Transcript Extractor [https://transcriptextractor.com/ site], [https://jlhernando.com/ site]"
    },
    {
      "type": "paragraph",
      "id": "0b7052b2440e112d",
      "text": "How to use the newest URL Inspection endpoint from the Google Search Console API with Node.js [https://jlhernando.com/blog/google-url-inspection-api-nodejs/ page], [https://github.com/jlhernando/google-index-inspect-api#google-index-inspection-api github]"
    },
    {
      "type": "markdown",
      "id": "4906f651f4eb4415",
      "text": ">  extract index status data in bulk"
    },
    {
      "type": "paragraph",
      "id": "3044273686f06da4",
      "text": "How to install Node.js and setup your laptop for JavaScript SEO Automation [https://jlhernando.com/blog/how-to-install-node-for-seo/ page]"
    },
    {
      "type": "pagefold",
      "id": "2a338f08c6518767",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "a3ebda0fa222eec8",
      "text": "⇒ [[Journal]] visible when logged in ⇒ [[Reclaim This Wiki]] / Sign-Out"
    },
    {
      "type": "paragraph",
      "id": "fb3a46553cb9fd95",
      "text": "⇒ [[Paragraph Plugin]] ⇒ [[HTML Form]]"
    },
    {
      "type": "paragraph",
      "id": "84470a71e0c5a556",
      "text": "rupertlssmith via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1694514086473059 slack]\n–\nI am trying to parser dotted int notations like \"1\" or \"1.3\" or \"3.1.1.1\" - nested section headings in a document. Does anyone know why this parser does not work?"
    },
    {
      "type": "paragraph",
      "id": "04d36e4301c9fd61",
      "text": "pit via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1693395525105219 slack]\n–\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page], [https://ellie-app.com/gVQsh7PBbzXa1 ellie]"
    },
    {
      "type": "image",
      "id": "247c871c20f5b353",
      "text": "lookAhead parser",
      "size": "wide",
      "width": 430,
      "height": 232,
      "url": "/assets/plugins/image/6bee273ae896f06e853815fbd348676c.jpg"
    },
    {
      "type": "paragraph",
      "id": "090d26861a32418b",
      "text": "feat: lookAhead parser\n\nHow to build interesting parsers [https://discourse.elm-lang.org/t/how-to-build-interesting-parsers/8786 page]\n\nDemystifying an Obscure LookAhead Parser [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page]"
    },
    {
      "type": "paragraph",
      "id": "d120636a738f0944",
      "text": "Commit Hash: cf6dca19eab7ce472c668baec9f0c334755c9344"
    },
    {
      "type": "paragraph",
      "id": "e10fd4e5a7b787d9",
      "text": "dillonkearns via [https://elmlang.slack.com/archives/C0KF0B9SS/p1694028334941269?thread_ts=1693856506.030539&cid=C0KF0B9SS slack]\n–\nelm-pages scripts has an elm-pages bundle-scriptcommand that compiles down to a single executable, and it also has built-in CLI options parsing with https://package.elm-lang.org/packages/dillonkearns/elm-cli-options-parser/latest/ if you use https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/Pages-Script#withCliOptions. It has a lot of functionality for error handling as well. And https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/BackendTask-Custom lets you build whatever bindings to NodeJS code that you want.\nBuilding an NPM wrapper, and printing progress reports would be out of scope for elm-pages scripts. I could see a light wrapper tool building on top of elm-pages scripts to add something like that, though."
    },
    {
      "type": "paragraph",
      "id": "e948dc1fff51d6bf",
      "text": "[[Elm Radio]] Codecs episode [https://elm-radio.com/episode/codecs/ page]"
    },
    {
      "type": "video",
      "id": "1a393003613209df",
      "text": "YOUTUBE J-JZhCWsk3M\nMorphable (listening party, new Sevish album) "
    },
    {
      "type": "paragraph",
      "id": "7aba20453a1a0e26",
      "text": "elm morph [https://dark.elm.dmy.fr/packages/lue-bird/elm-morph/latest/ page], [https://github.com/lue-bird/elm-morph github]"
    },
    {
      "type": "paragraph",
      "id": "541b800d06f489ce",
      "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
    },
    {
      "type": "pagefold",
      "id": "f6e6cd12ae7b0c79",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "37fc54e170a726ea",
      "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
    },
    {
      "type": "paragraph",
      "id": "a55b8d2f4cfc3395",
      "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946372594385RtGxH:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] Took a little to get the script to run on TLS site, but here is a link to the text chat: http://forage.rodwell.me/view/typescript-archive/view/typescript-2023-09-13/view/typescript-index-2023-09-13"
    },
    {
      "type": "paragraph",
      "id": "de53ac3aacab1a98",
      "text": "forage.rodwell.me needs frame and script permissions"
    },
    {
      "type": "reference",
      "id": "b82a424608867b37",
      "site": "forage.rodwell.me",
      "slug": "typescript-archive",
      "title": "Typescript Archive",
      "text": "In theory, we archive zoom transcripts here and use an html script to improve their readability based on our posting habits on our Sunday and Wednesday calls."
    },
    {
      "type": "reference",
      "id": "0836d98b83edff42",
      "site": "forage.rodwell.me",
      "slug": "typescript-2023-09-13",
      "title": "Typescript 2023-09-13",
      "text": "Text extraction. See [[Typescript Archive]]"
    },
    {
      "type": "reference",
      "id": "62ed00d205992cee",
      "site": "forage.rodwell.me",
      "slug": "typescript-index-2023-09-13",
      "title": "Typescript Index 2023-09-13",
      "text": "Keyword Index. See [[Typescript 2023-09-13]]"
    },
    {
      "type": "paragraph",
      "id": "e39004991ca8b31f",
      "text": "⇒ [[Trie]]s"
    },
    {
      "type": "paragraph",
      "id": "8a82d3304e4fdac1",
      "text": "⇒ [[Kumu]]"
    },
    {
      "type": "paragraph",
      "id": "877cc8f6fd503db6",
      "text": "What are the main use cases for Kumu? [https://docs.kumu.io/getting-started/kumu-101#what-are-the-main-use-cases-for-kumu page]"
    },
    {
      "type": "paragraph",
      "id": "bc5d7081bb2d810a",
      "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946982409850OikVK:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@marcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example [https://kumu.io/gardenjane/permaculture-in-ontario page], it can mask the clickable links."
    },
    {
      "type": "reference",
      "id": "8d6bf9a45c266a67",
      "site": "goals.pod.rodwell.me",
      "slug": "enrich-kumu-svg",
      "title": "Enrich Kumu SVG",
      "text": "Using [[Enrich Arrows SVG]] as a starting place, here we offer a workflow to enrich the SVG export from Kumu with wiki internal links."
    },
    {
      "type": "pagefold",
      "id": "13572ddf9a5b8234",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b6e9a68c1c97c50c",
      "text": "⇒ [[Half-Earth Socialism Game]]"
    },
    {
      "type": "image",
      "id": "d3549fa6f2339d91",
      "text": "A Planetary Crisis Planning Game",
      "size": "wide",
      "width": 430,
      "height": 369,
      "url": "/assets/plugins/image/0898dcad3fd8cb04210ae164af75c9da.jpg"
    },
    {
      "type": "pagefold",
      "id": "3b86a9b72435e2d0",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "6fa9c519e2b5e570",
      "text": "[[Be Transparent]] (a bias towards open)"
    },
    {
      "type": "pagefold",
      "id": "f53a9279f168172b",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "f49b90c1d4debbc4",
      "text": "⇒ [[In Situ Error Message]]"
    },
    {
      "type": "paragraph",
      "id": "3f3329b029561e70",
      "text": "a technique for surfacing chart construction errors in situ."
    },
    {
      "type": "paragraph",
      "id": "2b8bd79022ead286",
      "text": "a parser that doesn't consume any input, but can be used to look ahead in the input stream without actually advancing it."
    },
    {
      "type": "paragraph",
      "id": "16ec08db5175c4fa",
      "text": "Elm/parser look ahead without backtrackable [https://discourse.elm-lang.org/t/elm-parser-look-ahead-without-backtrackable/3106/1 page] ([[Yanik Ceulemans]])"
    },
    {
      "type": "paragraph",
      "id": "c2f7c50ea6a7a165",
      "text": "Problem\n\nWhile trying to learn about [[elm/parser]] I decided to try and write a parser for urls. Because a lot of parts of a url are optional, I have to be able to look ahead in the given url to decide whether to go down a path or not. For example a url can start with or without a protocol, and as far as I know the deciding factor is whether or not a // is present."
    },
    {
      "type": "paragraph",
      "id": "68b33d11c9b212be",
      "text": "Background\n\nWhile digging through the documentation I found out about the [[oneOf]] function which I thought could be used for this problem. However, this function will only try other parsers if a previous parser hasn’t chomped any characters. Considering the parser for the “protocol” and the “auth” section of a url are both just strings, it will always pick the parser for the “protocol”."
    },
    {
      "type": "paragraph",
      "id": "bbbe2354683bf968",
      "text": "The docs for the oneOf function also give a link to a document which mentions [[Backtracking]]. This sounds like exactly the thing I need, however that document also mentions that if you shuffle your parsers around, you do not need any backtrackable parsers at all. Which brings me to my question."
    },
    {
      "type": "paragraph",
      "id": "ed5a3813804bc800",
      "text": "Question\n\nHow would one write a parser with signature Parser (Maybe Protocol) without a backtrackable parser?"
    },
    {
      "type": "paragraph",
      "id": "f52703c555ec6b33",
      "text": "[https://ellie-app.com/4FmvZ49qQhGa1 ellie]"
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "f7cb3307cbfd79aa",
      "item": {
        "type": "paragraph",
        "id": "f7cb3307cbfd79aa",
        "text": "⇒ [[Zum Ewigen Frieden]] – Erzählung von Alfred Testa [https://kusanowsky.wordpress.com/2023/07/21/zum-ewigen-frieden-erzahlung-von-alfred-testa/ page]"
      },
      "date": 1694682150704
    },
    {
      "type": "edit",
      "id": "541b800d06f489ce",
      "item": {
        "type": "paragraph",
        "id": "541b800d06f489ce",
        "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
      },
      "date": 1694680939466
    },
    {
      "type": "edit",
      "id": "541b800d06f489ce",
      "item": {
        "type": "paragraph",
        "id": "541b800d06f489ce",
        "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
      },
      "date": 1694680905759
    },
    {
      "type": "edit",
      "id": "541b800d06f489ce",
      "item": {
        "type": "paragraph",
        "id": "541b800d06f489ce",
        "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
      },
      "date": 1694680893818
    },
    {
      "type": "edit",
      "id": "541b800d06f489ce",
      "item": {
        "type": "paragraph",
        "id": "541b800d06f489ce",
        "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
      },
      "date": 1694680837031
    },
    {
      "type": "add",
      "id": "541b800d06f489ce",
      "item": {
        "type": "paragraph",
        "id": "541b800d06f489ce",
        "text": "[https://elm-radio.com/episode/codecs/#00-09-33 00-09-33] If you do code sharing, then you can use a tool like that to ensure that these two data types are in sync."
      },
      "after": "e948dc1fff51d6bf",
      "date": 1694680814024
    },
    {
      "type": "edit",
      "id": "e948dc1fff51d6bf",
      "item": {
        "type": "paragraph",
        "id": "e948dc1fff51d6bf",
        "text": "[[Elm Radio]] Codecs episode [https://elm-radio.com/episode/codecs/ page]"
      },
      "date": 1694680637901
    },
    {
      "type": "edit",
      "id": "e948dc1fff51d6bf",
      "item": {
        "type": "paragraph",
        "id": "e948dc1fff51d6bf",
        "text": "[[Elm Radio]] Codecs episode [https://elm-radio.com/episode/codecs/ page]"
      },
      "date": 1694680626501
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680497477
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680471542
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680457860
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680435624
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680378788
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680359954
    },
    {
      "type": "edit",
      "id": "37fc54e170a726ea",
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "date": 1694680339695
    },
    {
      "item": {
        "type": "paragraph",
        "id": "37fc54e170a726ea",
        "text": "[[Lineup]] [http://simnet.ward.asia.wiki.org/view/welcome-visitors/view/browsing-diagrams/wiki.ralfbarkow.ch/2023-01-20 pages] on Ward's Radio Network Simulator, Browsing Diagrams, and my notes from [[2023-01-20]]."
      },
      "id": "37fc54e170a726ea",
      "type": "add",
      "after": "f6e6cd12ae7b0c79",
      "date": 1694680318477
    },
    {
      "type": "edit",
      "id": "f6e6cd12ae7b0c79",
      "item": {
        "type": "pagefold",
        "id": "f6e6cd12ae7b0c79",
        "text": "~"
      },
      "date": 1694680317057
    },
    {
      "item": {
        "type": "pagefold",
        "id": "f6e6cd12ae7b0c79",
        "text": "~"
      },
      "id": "f6e6cd12ae7b0c79",
      "type": "add",
      "after": "e948dc1fff51d6bf",
      "date": 1694680313738
    },
    {
      "type": "edit",
      "id": "80c0f77a49873ee3",
      "item": {
        "type": "markdown",
        "id": "80c0f77a49873ee3",
        "text": "> Vue.js devtools\n6.0.0 beta 21\nDiese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "date": 1694679969702
    },
    {
      "type": "edit",
      "id": "80c0f77a49873ee3",
      "item": {
        "type": "paragraph",
        "id": "80c0f77a49873ee3",
        "text": "> Vue.js devtools\n6.0.0 beta 21\nDiese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "date": 1694679968371
    },
    {
      "type": "edit",
      "id": "204baa30e643a4ce",
      "item": {
        "type": "paragraph",
        "id": "204baa30e643a4ce",
        "text": "It's not the only extension that violates their policies:"
      },
      "date": 1694679954886
    },
    {
      "type": "add",
      "id": "80c0f77a49873ee3",
      "item": {
        "type": "paragraph",
        "id": "80c0f77a49873ee3",
        "text": "Vue.js devtools\n6.0.0 beta 21\nDiese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "after": "204baa30e643a4ce",
      "date": 1694679933058
    },
    {
      "type": "edit",
      "id": "204baa30e643a4ce",
      "item": {
        "type": "paragraph",
        "id": "204baa30e643a4ce",
        "text": "Es ist nicht die einzige Erweiterung, die deren Richtlinien verletzt:"
      },
      "date": 1694679930554
    },
    {
      "type": "edit",
      "id": "485d1b2e0d422ad6",
      "item": {
        "type": "markdown",
        "id": "485d1b2e0d422ad6",
        "text": "> Diese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "date": 1694679888507
    },
    {
      "type": "add",
      "id": "485d1b2e0d422ad6",
      "item": {
        "type": "paragraph",
        "id": "485d1b2e0d422ad6",
        "text": "> Diese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "after": "756c18345650d76c",
      "date": 1694679883551
    },
    {
      "type": "add",
      "id": "204baa30e643a4ce",
      "item": {
        "type": "paragraph",
        "id": "204baa30e643a4ce",
        "text": "Vue.js devtools\n6.0.0 beta 21\nDiese Erweiterung verletzt die Chrome Web Store-Richtlinien."
      },
      "after": "756c18345650d76c",
      "date": 1694679858381
    },
    {
      "type": "edit",
      "id": "756c18345650d76c",
      "item": {
        "type": "paragraph",
        "id": "756c18345650d76c",
        "text": "Wir finden die Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibfglbkghjkdmpjkgehcnadcffdl page] nicht mehr."
      },
      "date": 1694679075949
    },
    {
      "type": "edit",
      "id": "756c18345650d76c",
      "item": {
        "type": "paragraph",
        "id": "756c18345650d76c",
        "text": "Wir finden die Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibf"
      },
      "date": 1694679068919
    },
    {
      "type": "edit",
      "id": "7aba20453a1a0e26",
      "item": {
        "type": "paragraph",
        "id": "7aba20453a1a0e26",
        "text": "elm morph [https://dark.elm.dmy.fr/packages/lue-bird/elm-morph/latest/ page], [https://github.com/lue-bird/elm-morph github]"
      },
      "date": 1694677467506
    },
    {
      "type": "edit",
      "id": "e948dc1fff51d6bf",
      "item": {
        "type": "paragraph",
        "id": "e948dc1fff51d6bf",
        "text": "Codecs [https://elm-radio.com/episode/codecs/ page]"
      },
      "date": 1694677387519
    },
    {
      "type": "add",
      "id": "e948dc1fff51d6bf",
      "item": {
        "type": "paragraph",
        "id": "e948dc1fff51d6bf",
        "text": "Codecs [page]"
      },
      "after": "7aba20453a1a0e26",
      "date": 1694677380747
    },
    {
      "type": "edit",
      "id": "1a393003613209df",
      "item": {
        "type": "video",
        "id": "1a393003613209df",
        "text": "YOUTUBE J-JZhCWsk3M\nMorphable (listening party, new Sevish album) "
      },
      "date": 1694677197310
    },
    {
      "type": "edit",
      "id": "1a393003613209df",
      "item": {
        "type": "video",
        "id": "1a393003613209df",
        "text": "YOUTUBE J-JZhCWsk3M\nCH\n12:13 / 44:00\nSchleife\nMorphable (listening party, new Sevish album) "
      },
      "date": 1694677189835
    },
    {
      "type": "edit",
      "id": "1a393003613209df",
      "item": {
        "type": "video",
        "id": "1a393003613209df",
        "text": "YOUTUBE J-JZhCWsk3M"
      },
      "date": 1694677175087
    },
    {
      "id": "1a393003613209df",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "f7cb3307cbfd79aa",
        "6a1d85fb940d85e7",
        "6c8ee6837951ea5a",
        "19e936a727f1559c",
        "756c18345650d76c",
        "9cce4a05233c5576",
        "bc8bf4a813aaf4ab",
        "220645062ab3da13",
        "0760239c3191637b",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26"
      ],
      "date": 1694677161784
    },
    {
      "item": {
        "type": "factory",
        "id": "1a393003613209df"
      },
      "id": "1a393003613209df",
      "type": "add",
      "after": "7aba20453a1a0e26",
      "date": 1694677159783
    },
    {
      "type": "edit",
      "id": "7aba20453a1a0e26",
      "item": {
        "type": "paragraph",
        "id": "7aba20453a1a0e26",
        "text": "elm morph [https://dark.elm.dmy.fr/packages/lue-bird/elm-morph/latest/ page]"
      },
      "date": 1694677144211
    },
    {
      "type": "edit",
      "id": "7aba20453a1a0e26",
      "item": {
        "type": "paragraph",
        "id": "7aba20453a1a0e26",
        "text": "elm morph"
      },
      "date": 1694677136920
    },
    {
      "item": {
        "type": "factory",
        "id": "7aba20453a1a0e26"
      },
      "id": "7aba20453a1a0e26",
      "type": "add",
      "after": "e10fd4e5a7b787d9",
      "date": 1694677134158
    },
    {
      "type": "edit",
      "id": "e10fd4e5a7b787d9",
      "item": {
        "type": "paragraph",
        "id": "e10fd4e5a7b787d9",
        "text": "dillonkearns via [https://elmlang.slack.com/archives/C0KF0B9SS/p1694028334941269?thread_ts=1693856506.030539&cid=C0KF0B9SS slack]\n–\nelm-pages scripts has an elm-pages bundle-scriptcommand that compiles down to a single executable, and it also has built-in CLI options parsing with https://package.elm-lang.org/packages/dillonkearns/elm-cli-options-parser/latest/ if you use https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/Pages-Script#withCliOptions. It has a lot of functionality for error handling as well. And https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/BackendTask-Custom lets you build whatever bindings to NodeJS code that you want.\nBuilding an NPM wrapper, and printing progress reports would be out of scope for elm-pages scripts. I could see a light wrapper tool building on top of elm-pages scripts to add something like that, though."
      },
      "date": 1694676534877
    },
    {
      "type": "add",
      "id": "e10fd4e5a7b787d9",
      "item": {
        "type": "paragraph",
        "id": "e10fd4e5a7b787d9",
        "text": "dillonkearns\n 9:25 PM\nelm-pages scripts has an elm-pages bundle-scriptcommand that compiles down to a single executable, and it also has built-in CLI options parsing with https://package.elm-lang.org/packages/dillonkearns/elm-cli-options-parser/latest/ if you use https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/Pages-Script#withCliOptions. It has a lot of functionality for error handling as well. And https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/BackendTask-Custom lets you build whatever bindings to NodeJS code that you want.\nBuilding an NPM wrapper, and printing progress reports would be out of scope for elm-pages scripts. I could see a light wrapper tool building on top of elm-pages scripts to add something like that, though."
      },
      "after": "d120636a738f0944",
      "date": 1694676520036
    },
    {
      "type": "edit",
      "id": "d120636a738f0944",
      "item": {
        "type": "paragraph",
        "id": "d120636a738f0944",
        "text": "Commit Hash: cf6dca19eab7ce472c668baec9f0c334755c9344"
      },
      "date": 1694676331783
    },
    {
      "item": {
        "type": "factory",
        "id": "d120636a738f0944"
      },
      "id": "d120636a738f0944",
      "type": "add",
      "after": "090d26861a32418b",
      "date": 1694676325417
    },
    {
      "type": "edit",
      "id": "090d26861a32418b",
      "item": {
        "type": "paragraph",
        "id": "090d26861a32418b",
        "text": "feat: lookAhead parser\n\nHow to build interesting parsers [https://discourse.elm-lang.org/t/how-to-build-interesting-parsers/8786 page]\n\nDemystifying an Obscure LookAhead Parser [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page]"
      },
      "date": 1694676281436
    },
    {
      "type": "edit",
      "id": "090d26861a32418b",
      "item": {
        "type": "paragraph",
        "id": "090d26861a32418b",
        "text": "feat: lookAhead parser\n\nHow to build interesting parsers [https://discourse.elm-lang.org/t/how-to-build-interesting-parsers/8786 page]\n\nDemystifying an Obscure LookAhead Parser [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295]"
      },
      "date": 1694676270865
    },
    {
      "item": {
        "type": "factory",
        "id": "090d26861a32418b"
      },
      "id": "090d26861a32418b",
      "type": "add",
      "after": "247c871c20f5b353",
      "date": 1694676250772
    },
    {
      "type": "edit",
      "id": "fb3a46553cb9fd95",
      "item": {
        "type": "paragraph",
        "id": "fb3a46553cb9fd95",
        "text": "⇒ [[Paragraph Plugin]] ⇒ [[HTML Form]]"
      },
      "date": 1694675412315
    },
    {
      "type": "edit",
      "id": "fb3a46553cb9fd95",
      "item": {
        "type": "paragraph",
        "id": "fb3a46553cb9fd95",
        "text": "⇒ [[Paragraph Plugin]] [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/paragraph.coffee#L1-L27 code] ⇒ [[HTML Form]]"
      },
      "date": 1694675398231
    },
    {
      "type": "edit",
      "id": "ef2c842844cff7df",
      "item": {
        "type": "image",
        "id": "ef2c842844cff7df",
        "text": "lookAhead parser",
        "size": "wide",
        "width": 430,
        "height": 232
      },
      "date": 1694673711641
    },
    {
      "type": "remove",
      "id": "ef2c842844cff7df",
      "date": 1694673681350
    },
    {
      "type": "edit",
      "id": "247c871c20f5b353",
      "item": {
        "type": "image",
        "id": "247c871c20f5b353",
        "text": "lookAhead parser",
        "size": "wide",
        "width": 430,
        "height": 232,
        "url": "/assets/plugins/image/6bee273ae896f06e853815fbd348676c.jpg"
      },
      "date": 1694673671273
    },
    {
      "item": {
        "type": "factory",
        "id": "247c871c20f5b353"
      },
      "id": "247c871c20f5b353",
      "type": "add",
      "after": "ef2c842844cff7df",
      "date": 1694673654742
    },
    {
      "item": {
        "type": "factory",
        "id": "ef2c842844cff7df"
      },
      "id": "ef2c842844cff7df",
      "type": "add",
      "after": "04d36e4301c9fd61",
      "date": 1694673599396
    },
    {
      "type": "edit",
      "id": "04d36e4301c9fd61",
      "item": {
        "type": "paragraph",
        "id": "04d36e4301c9fd61",
        "text": "pit via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1693395525105219 slack]\n–\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page], [https://ellie-app.com/gVQsh7PBbzXa1 ellie]"
      },
      "date": 1694673529088
    },
    {
      "type": "edit",
      "id": "04d36e4301c9fd61",
      "item": {
        "type": "paragraph",
        "id": "04d36e4301c9fd61",
        "text": "pit via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1693395525105219 slack]\n–\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page]"
      },
      "date": 1694673420446
    },
    {
      "type": "edit",
      "id": "04d36e4301c9fd61",
      "item": {
        "type": "paragraph",
        "id": "04d36e4301c9fd61",
        "text": "pit via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1693395525105219 slack]\n–\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: [https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295 page["
      },
      "date": 1694673415425
    },
    {
      "type": "edit",
      "id": "04d36e4301c9fd61",
      "item": {
        "type": "paragraph",
        "id": "04d36e4301c9fd61",
        "text": "pit via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1693395525105219 slack]\n–\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295"
      },
      "date": 1694673401351
    },
    {
      "type": "add",
      "id": "04d36e4301c9fd61",
      "item": {
        "type": "paragraph",
        "id": "04d36e4301c9fd61",
        "text": "pit\n 1:38 PM\nIn this slack post, \n@danneu\n asked about an obscure lookAhead parser I once wrote. Today I finally managed to publish the promised explanation: https://discourse.elm-lang.org/t/demystifying-an-obscure-lookahead-parser/9295"
      },
      "after": "84470a71e0c5a556",
      "date": 1694673387532
    },
    {
      "type": "edit",
      "id": "84470a71e0c5a556",
      "item": {
        "type": "paragraph",
        "id": "84470a71e0c5a556",
        "text": "rupertlssmith via [https://elmlang.slack.com/archives/C0CJ3SBBM/p1694514086473059 slack]\n–\nI am trying to parser dotted int notations like \"1\" or \"1.3\" or \"3.1.1.1\" - nested section headings in a document. Does anyone know why this parser does not work?"
      },
      "date": 1694673296402
    },
    {
      "type": "edit",
      "id": "84470a71e0c5a556",
      "item": {
        "type": "paragraph",
        "id": "84470a71e0c5a556",
        "text": "rupertlssmith\n 12:21 PM\nI am trying to parser dotted int notations like \"1\" or \"1.3\" or \"3.1.1.1\" - nested section headings in a document. Does anyone know why this parser does not work?"
      },
      "date": 1694673268518
    },
    {
      "item": {
        "type": "factory",
        "id": "84470a71e0c5a556"
      },
      "id": "84470a71e0c5a556",
      "type": "add",
      "after": "fb3a46553cb9fd95",
      "date": 1694673264708
    },
    {
      "id": "2cac9dd490ff70a3",
      "type": "remove",
      "removedTo": {
        "page": "Paragraph Plugin"
      },
      "date": 1694672612879
    },
    {
      "type": "edit",
      "id": "fb3a46553cb9fd95",
      "item": {
        "type": "paragraph",
        "id": "fb3a46553cb9fd95",
        "text": "⇒ [[Paragraph Plugin]] [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/paragraph.coffee#L1-L27 code]"
      },
      "date": 1694672593505
    },
    {
      "type": "edit",
      "id": "2cac9dd490ff70a3",
      "item": {
        "type": "reference",
        "id": "2cac9dd490ff70a3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "replace-me-plugin",
        "title": "Replace Me Plugin",
        "text": "A related plugin or future interface enhancement would be to allow double clicking of the paragraph to reveal an HTML form specified by the HTML added when the plugin was configured."
      },
      "date": 1694672552693
    },
    {
      "item": {
        "type": "factory",
        "id": "2cac9dd490ff70a3"
      },
      "id": "2cac9dd490ff70a3",
      "type": "add",
      "after": "fb3a46553cb9fd95",
      "date": 1694672549775
    },
    {
      "type": "edit",
      "id": "fb3a46553cb9fd95",
      "item": {
        "type": "paragraph",
        "id": "fb3a46553cb9fd95",
        "text": "Paragraph plugin [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/paragraph.coffee#L1-L27 code]"
      },
      "date": 1694672525484
    },
    {
      "type": "edit",
      "id": "fb3a46553cb9fd95",
      "item": {
        "type": "paragraph",
        "id": "fb3a46553cb9fd95",
        "text": "[https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/paragraph.coffee#L1-L27 code]"
      },
      "date": 1694672510757
    },
    {
      "item": {
        "type": "factory",
        "id": "fb3a46553cb9fd95"
      },
      "id": "fb3a46553cb9fd95",
      "type": "add",
      "after": "a3ebda0fa222eec8",
      "date": 1694672502030
    },
    {
      "type": "edit",
      "id": "a3ebda0fa222eec8",
      "item": {
        "type": "paragraph",
        "id": "a3ebda0fa222eec8",
        "text": "⇒ [[Journal]] visible when logged in ⇒ [[Reclaim This Wiki]] / Sign-Out"
      },
      "date": 1694672047013
    },
    {
      "type": "edit",
      "id": "a3ebda0fa222eec8",
      "item": {
        "type": "paragraph",
        "id": "a3ebda0fa222eec8",
        "text": "⇒ [[Journal]] visible when logged in ⇒ [[Reclaim This Wiki]]"
      },
      "date": 1694672022752
    },
    {
      "type": "edit",
      "id": "a3ebda0fa222eec8",
      "item": {
        "type": "paragraph",
        "id": "a3ebda0fa222eec8",
        "text": "⇒ [[Journal]] visible when logged in"
      },
      "date": 1694671991684
    },
    {
      "type": "edit",
      "id": "a3ebda0fa222eec8",
      "item": {
        "type": "paragraph",
        "id": "a3ebda0fa222eec8",
        "text": "Journal visible when logged in"
      },
      "date": 1694671978850
    },
    {
      "item": {
        "type": "factory",
        "id": "a3ebda0fa222eec8"
      },
      "id": "a3ebda0fa222eec8",
      "type": "add",
      "after": "2a338f08c6518767",
      "date": 1694671976947
    },
    {
      "type": "edit",
      "id": "2a338f08c6518767",
      "item": {
        "type": "pagefold",
        "id": "2a338f08c6518767",
        "text": "~"
      },
      "date": 1694671975663
    },
    {
      "item": {
        "type": "factory",
        "id": "2a338f08c6518767"
      },
      "id": "2a338f08c6518767",
      "type": "add",
      "after": "0760239c3191637b",
      "date": 1694671972752
    },
    {
      "type": "edit",
      "id": "0760239c3191637b",
      "item": {
        "type": "paragraph",
        "id": "0760239c3191637b",
        "text": "Youtube Subtitle Download Helper [https://chrome.google.com/webstore/detail/youtube-subtitle-download/dpmmcccjdcgdjnlnicicdbnlmohhpagf?hl=de page]"
      },
      "date": 1694671188081
    },
    {
      "type": "edit",
      "id": "0760239c3191637b",
      "item": {
        "type": "paragraph",
        "id": "0760239c3191637b",
        "text": "Youtube Subtitle Download Helper"
      },
      "date": 1694671170956
    },
    {
      "item": {
        "type": "factory",
        "id": "0760239c3191637b"
      },
      "id": "0760239c3191637b",
      "type": "add",
      "after": "220645062ab3da13",
      "date": 1694671168450
    },
    {
      "type": "edit",
      "id": "220645062ab3da13",
      "item": {
        "type": "markdown",
        "id": "220645062ab3da13",
        "text": "> Created a Free Account To Continue\nLogin with your gmail to unlock unlimited free YouTube transcripts"
      },
      "date": 1694671107094
    },
    {
      "type": "add",
      "id": "220645062ab3da13",
      "item": {
        "type": "paragraph",
        "id": "220645062ab3da13",
        "text": "> Created a Free Account To Continue\nLogin with your gmail to unlock unlimited free YouTube transcripts"
      },
      "after": "bc8bf4a813aaf4ab",
      "date": 1694671104796
    },
    {
      "type": "edit",
      "id": "bc8bf4a813aaf4ab",
      "item": {
        "type": "paragraph",
        "id": "bc8bf4a813aaf4ab",
        "text": "Transcribe YouTube Videos - YTScribe [https://chrome.google.com/webstore/detail/transcribe-youtube-videos/ciomcelfjhlmkhooaifopphccnalmnpk?hl=en-GB page]"
      },
      "date": 1694671017334
    },
    {
      "type": "add",
      "id": "bc8bf4a813aaf4ab",
      "item": {
        "type": "paragraph",
        "id": "bc8bf4a813aaf4ab",
        "text": "Transcribe YouTube Videos - YTScribe"
      },
      "after": "9cce4a05233c5576",
      "date": 1694671008689
    },
    {
      "type": "edit",
      "id": "756c18345650d76c",
      "item": {
        "type": "paragraph",
        "id": "756c18345650d76c",
        "text": "Wir finden die Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibfglbkghjkdmpjkgehcnadcffdl page] nicht mehr."
      },
      "date": 1694670941046
    },
    {
      "type": "edit",
      "id": "9cce4a05233c5576",
      "item": {
        "type": "paragraph",
        "id": "9cce4a05233c5576",
        "text": "Youtube Scripter [https://chrome.google.com/webstore/detail/youtube-scripter/nkenhionmhdegjkgghhigaifcmpioeff page]"
      },
      "date": 1694670923198
    },
    {
      "type": "edit",
      "id": "9cce4a05233c5576",
      "item": {
        "type": "paragraph",
        "id": "9cce4a05233c5576",
        "text": "Youtube Scripter\n3\n"
      },
      "date": 1694670910584
    },
    {
      "item": {
        "type": "factory",
        "id": "9cce4a05233c5576"
      },
      "id": "9cce4a05233c5576",
      "type": "add",
      "after": "756c18345650d76c",
      "date": 1694670907400
    },
    {
      "type": "edit",
      "id": "756c18345650d76c",
      "item": {
        "type": "paragraph",
        "id": "756c18345650d76c",
        "text": "Wir finden den Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibfglbkghjkdmpjkgehcnadcffdl page] nicht mehr."
      },
      "date": 1694670766192
    },
    {
      "id": "756c18345650d76c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "756c18345650d76c",
        "text": "Wir haben den Youtube Transcript Extractor [https://chrome.google.com/webstore/detail/youtube-transcript-extrac/lclpibfglbkghjkdmpjkgehcnadcffdl page] verwendet, um das folgende Transkript zu erstellen."
      },
      "after": "19e936a727f1559c",
      "attribution": {
        "page": "Cyberwelt"
      },
      "date": 1694670652043
    },
    {
      "type": "edit",
      "id": "19e936a727f1559c",
      "item": {
        "type": "audio",
        "id": "19e936a727f1559c",
        "text": "https://cf-hls-media.sndcdn.com/media/159660/9259884/9419544/Gzaw2l3CABON.128.mp3\nForbidden"
      },
      "date": 1694670537514
    },
    {
      "type": "remove",
      "id": "1bfcd3bc8ceb42c5",
      "date": 1694670353282
    },
    {
      "type": "edit",
      "id": "19e936a727f1559c",
      "item": {
        "type": "audio",
        "id": "19e936a727f1559c",
        "text": "https://cf-hls-media.sndcdn.com/media/159660/9259884/9419544/Gzaw2l3CABON.128.mp3"
      },
      "date": 1694670350066
    },
    {
      "item": {
        "type": "factory",
        "id": "19e936a727f1559c"
      },
      "id": "19e936a727f1559c",
      "type": "add",
      "after": "1bfcd3bc8ceb42c5",
      "date": 1694670347898
    },
    {
      "type": "edit",
      "id": "1bfcd3bc8ceb42c5",
      "item": {
        "type": "code",
        "id": "1bfcd3bc8ceb42c5",
        "text": "?Policy=eyJTdGF0ZW1lbnQiOlt7IlJlc291cmNlIjoiKjovL2NmLWhscy1tZWRpYS5zbmRjZG4uY29tL21lZGlhLzE1OTY2MC8qLyovR3phdzJsM0NBQk9OLjEyOC5tcDMiLCJDb25kaXRpb24iOnsiRGF0ZUxlc3NUaGFuIjp7IkFXUzpFcG9jaFRpbWUiOjE2OTQ2NzUwNzV9fX1dfQ__&Signature=GjGAUHG97Ll76wdwgSxHGadpamuvw~9mVL4IGjph6FWzjudwXQRz~-zPa6n-Sacaf6t6glaeiDgtoCSBZq8MTSLjzzJIBQFBOhcbfirzj41uaoDQe61IxGFu8aM-V0g-COrrcl~yItKSWujdQ~zqFcj~z8aR-YzPrEmKPTdREdTu08LyIrUMzBtr~5odIaEd0cO0ddu40Qf2mRjzBxtBP6mmbQqO~o4G6PAaKnV6KIscn69qL-KrDl6qzbjF19cZm7tqM3dreKqK1PzGqpsabTWwjhOn5ukP3str9kh6o9P~Ofj3rZTfcZR7c-D2FFn9MjelcUiM9Wm9EIqBMK4Tzg__&Key-Pair-Id=APKAI6TU7MMXM5DG6EPQ"
      },
      "date": 1694670346156
    },
    {
      "item": {
        "type": "factory",
        "id": "1bfcd3bc8ceb42c5"
      },
      "id": "1bfcd3bc8ceb42c5",
      "type": "add",
      "after": "6c8ee6837951ea5a",
      "date": 1694670329385
    },
    {
      "type": "edit",
      "id": "6c8ee6837951ea5a",
      "item": {
        "type": "paragraph",
        "id": "6c8ee6837951ea5a",
        "text": "In der Chefzentrale der Geheimen Weltregierung herrscht das blanke Entsetzen und alle sind verzweifelt: ein Raumschiff mit Außerirdischen ist gelandet um die Welt zu retten. Die Aktivisten haben sich mit einem Kleber festgeklebt, den man nicht entfernen kann. Das bedeutet, dass der Weltuntergang unvermeidlich erscheint. Es kommt noch schlimmer: alle Versuche, die Welt zu retten, verschärfen nur die Gefährdungssituation. Die Lage ist ausweglos. Zum Glück kommt etwas dazwischen.\n\n„Zum Ewigen Frieden“ heißt diese Erzählung von Alfred Testa. Über den Autor: Der Autor ist nicht die Figur in einer berühmten Erzählung von Stanislaw Lem, sondern die Figur in einem autobiografischen Roman, den er noch nicht geschrieben hat."
      },
      "date": 1694670067242
    },
    {
      "item": {
        "type": "factory",
        "id": "6c8ee6837951ea5a"
      },
      "id": "6c8ee6837951ea5a",
      "type": "add",
      "after": "6a1d85fb940d85e7",
      "date": 1694670065707
    },
    {
      "type": "remove",
      "id": "569578584f0b4776",
      "date": 1694670034479
    },
    {
      "type": "edit",
      "id": "6a1d85fb940d85e7",
      "item": {
        "type": "video",
        "id": "6a1d85fb940d85e7",
        "text": "YOUTUBE QtkiJhfy4Rc"
      },
      "date": 1694670031617
    },
    {
      "type": "edit",
      "id": "6a1d85fb940d85e7",
      "item": {
        "type": "video",
        "id": "6a1d85fb940d85e7",
        "text": "YOUTUBE https://youtu.be/QtkiJhfy4Rc"
      },
      "date": 1694670024983
    },
    {
      "item": {
        "type": "factory",
        "id": "6a1d85fb940d85e7"
      },
      "id": "6a1d85fb940d85e7",
      "type": "add",
      "after": "569578584f0b4776",
      "date": 1694670019326
    },
    {
      "type": "edit",
      "id": "569578584f0b4776",
      "item": {
        "type": "code",
        "id": "569578584f0b4776",
        "text": "https://soundcloud.com/kusanowsky/zum-ewigen-frieden?utm_source=clipboard&utm_campaign=wtshare&utm_medium=widget&utm_content=https%253A%252F%252Fsoundcloud.com%252Fkusanowsky%252Fzum-ewigen-frieden"
      },
      "date": 1694669940610
    },
    {
      "type": "edit",
      "id": "569578584f0b4776",
      "item": {
        "type": "code",
        "id": "569578584f0b4776",
        "text": "https://w.soundcloud.com/player/?visual=true&url=https%3A%2F%2Fapi.soundcloud.com%2Ftracks%2F1571962489&show_artwork=true&maxheight=1000&maxwidth=1200"
      },
      "date": 1694669650694
    },
    {
      "item": {
        "type": "factory",
        "id": "569578584f0b4776"
      },
      "id": "569578584f0b4776",
      "type": "add",
      "after": "f7cb3307cbfd79aa",
      "date": 1694669641935
    },
    {
      "type": "edit",
      "id": "f7cb3307cbfd79aa",
      "item": {
        "type": "paragraph",
        "id": "f7cb3307cbfd79aa",
        "text": "Zum Ewigen Frieden – Erzählung von Alfred Testa [https://kusanowsky.wordpress.com/2023/07/21/zum-ewigen-frieden-erzahlung-von-alfred-testa/ page]"
      },
      "date": 1694669621623
    },
    {
      "type": "edit",
      "id": "f7cb3307cbfd79aa",
      "item": {
        "type": "paragraph",
        "id": "f7cb3307cbfd79aa",
        "text": "Zum Ewigen Frieden – Erzählung von Alfred Testa"
      },
      "date": 1694669612791
    },
    {
      "item": {
        "type": "factory",
        "id": "f7cb3307cbfd79aa"
      },
      "id": "f7cb3307cbfd79aa",
      "type": "add",
      "after": "65de0ad393316029",
      "date": 1694669609086
    },
    {
      "type": "remove",
      "id": "5431391a6e809220",
      "date": 1694669596586
    },
    {
      "type": "edit",
      "id": "65de0ad393316029",
      "item": {
        "type": "paragraph",
        "id": "65de0ad393316029",
        "text": "⇒ [[The (|>) Pipe]] ⇒ [[oneOf]]"
      },
      "date": 1694669592858
    },
    {
      "item": {
        "type": "factory",
        "id": "5431391a6e809220"
      },
      "id": "5431391a6e809220",
      "type": "add",
      "after": "65de0ad393316029",
      "date": 1694669569319
    },
    {
      "id": "65de0ad393316029",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "65de0ad393316029",
        "text": "⇒ [[The (|>) Pipe]]"
      },
      "attribution": {
        "page": "2023-09-13"
      },
      "date": 1694669543387
    },
    {
      "type": "create",
      "item": {
        "title": "2023-09-14",
        "story": []
      },
      "date": 1694669537680
    },
    {
      "type": "remove",
      "id": "9cce4a05233c5576",
      "date": 1694682212250
    },
    {
      "type": "remove",
      "id": "bc8bf4a813aaf4ab",
      "date": 1694682213775
    },
    {
      "type": "remove",
      "id": "220645062ab3da13",
      "date": 1694682215264
    },
    {
      "type": "remove",
      "id": "0760239c3191637b",
      "date": 1694682216708
    },
    {
      "id": "1084f3d3814b2e30",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1084f3d3814b2e30",
        "text": "⇒ Jose's Youtube Transcript Extractor [https://transcriptextractor.com/ site], [https://jlhernando.com/ site]"
      },
      "after": "80c0f77a49873ee3",
      "attribution": {
        "page": "Zum Ewigen Frieden"
      },
      "date": 1694682222466
    },
    {
      "type": "edit",
      "id": "1084f3d3814b2e30",
      "item": {
        "type": "paragraph",
        "id": "1084f3d3814b2e30",
        "text": "⇒ Jose's Youtube Transcript Extractor [https://transcriptextractor.com/ site], [https://jlhernando.com/ site]"
      },
      "date": 1694682230213
    },
    {
      "type": "edit",
      "id": "1084f3d3814b2e30",
      "item": {
        "type": "paragraph",
        "id": "1084f3d3814b2e30",
        "text": "⇒ Jose's Youtube Transcript Extractor [https://transcriptextractor.com/ site], [https://jlhernando.com/ site]"
      },
      "date": 1694682255542
    },
    {
      "type": "edit",
      "id": "1084f3d3814b2e30",
      "item": {
        "type": "paragraph",
        "id": "1084f3d3814b2e30",
        "text": "⇒ Jose's Youtube Transcript Extractor [https://transcriptextractor.com/ site], [https://jlhernando.com/ site]"
      },
      "date": 1694682267218
    },
    {
      "type": "edit",
      "id": "f7cb3307cbfd79aa",
      "item": {
        "type": "paragraph",
        "id": "f7cb3307cbfd79aa",
        "text": "⇒ [[Zum Ewigen Frieden]] – Erzählung von Alfred Testa [https://kusanowsky.wordpress.com/2023/07/21/zum-ewigen-frieden-erzahlung-von-alfred-testa/ page]"
      },
      "date": 1694682459531
    },
    {
      "type": "edit",
      "id": "6a1d85fb940d85e7",
      "item": {
        "type": "video",
        "id": "6a1d85fb940d85e7",
        "text": "YOUTUBE QtkiJhfy4Rc\nZum Ewigen Frieden von Alfred Testa"
      },
      "date": 1694682494950
    },
    {
      "id": "6a1d85fb940d85e7",
      "type": "remove",
      "removedTo": {
        "page": "Zum Ewigen Frieden"
      },
      "date": 1694682501093
    },
    {
      "id": "6c8ee6837951ea5a",
      "type": "remove",
      "removedTo": {
        "page": "Zum Ewigen Frieden"
      },
      "date": 1694682506232
    },
    {
      "item": {
        "type": "factory",
        "id": "02022f0ffdf342cf"
      },
      "id": "02022f0ffdf342cf",
      "type": "add",
      "after": "37fc54e170a726ea",
      "date": 1694682849527
    },
    {
      "id": "02022f0ffdf342cf",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "f7cb3307cbfd79aa",
        "02022f0ffdf342cf",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694682859379,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1694682868181
    },
    {
      "type": "edit",
      "id": "02022f0ffdf342cf",
      "item": {
        "type": "roster",
        "id": "02022f0ffdf342cf",
        "text": "de.dreyeck.ch"
      },
      "date": 1694682895418
    },
    {
      "type": "add",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "Die angekündigte Überlegung beginnt philosophisch konventionell und theologisch ab ovo, das heißt bei Adam und Eva, also bei der Frage, womit alles angefangen hat.\nIch gehe von der konstruktivistischen Auffassung aus, dass die Welt und was immer man darunter verstehen kann, alles das ist, was für Wittgenstein der Fall war. Das heißt: die Welt ist alles, was ein Beobachter feststellen kann und ohne ihn nicht\nfeststellbar wäre. Ich weise jeden philosophischen Standpunkt zurück, der von einer beobachtungsunabhängigen Realität ausgeht. Eine philosophische Diskussion kann ich mir an dieser Stelle sparen. Diese wird seit dem 17. Jahrhundert geführt und geht unverdrossen mit kaum noch neuen Varianten der immer gleichen Subjekt/Objekt-Unterscheidung weiter. Wer sich an dieser Diskussion weiterhin beteiligen möchte, kann das gerne tun, wird aber die Erfahrung machen, dass man bald nur noch von algorithmengesteuerten Automaten interessante Antworten erhält, weil diese Automaten als die einzigen erscheinen werden, die dieser Endlosschleife der Diskussion noch gewachsen sind."
      },
      "after": "1084f3d3814b2e30",
      "date": 1694683404431
    },
    {
      "type": "edit",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "Über Technisation, technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise."
      },
      "date": 1694683430211
    },
    {
      "type": "add",
      "id": "e43f714b97b4f0e0",
      "item": {
        "type": "paragraph",
        "id": "e43f714b97b4f0e0",
        "text": "Die angekündigte Überlegung beginnt philosophisch konventionell und theologisch ab ovo, das heißt bei Adam und Eva, also bei der Frage, womit alles angefangen hat.\nIch gehe von der konstruktivistischen Auffassung aus, dass die Welt und was immer man darunter verstehen kann, alles das ist, was für Wittgenstein der Fall war. Das heißt: die Welt ist alles, was ein Beobachter feststellen kann und ohne ihn nicht\nfeststellbar wäre. Ich weise jeden philosophischen Standpunkt zurück, der von einer beobachtungsunabhängigen Realität ausgeht. Eine philosophische Diskussion kann ich mir an dieser Stelle sparen. Diese wird seit dem 17. Jahrhundert geführt und geht unverdrossen mit kaum noch neuen Varianten der immer gleichen Subjekt/Objekt-Unterscheidung weiter. Wer sich an dieser Diskussion weiterhin beteiligen möchte, kann das gerne tun, wird aber die Erfahrung machen, dass man bald nur noch von algorithmengesteuerten Automaten interessante Antworten erhält, weil diese Automaten als die einzigen erscheinen werden, die dieser Endlosschleife der Diskussion noch gewachsen sind."
      },
      "after": "64c5621be0e7ea26",
      "date": 1694683430799
    },
    {
      "type": "edit",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "Über Technisation, technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise [https://kusanowsky.wordpress.com/2023/04/11/uber-technisation-technische-intelligenz-der-gesellschaft-und-wege-aus-der-okologischen-krise-2/ page]"
      },
      "date": 1694683441814
    },
    {
      "type": "edit",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "Über Technisation, technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise [https://kusanowsky.wordpress.com/2023/04/11/uber-technisation-technische-intelligenz-der-gesellschaft-und-wege-aus-der-okologischen-krise-2/ page], [https://kusanowsky.files.wordpress.com/2023/04/2.-technisation-technische-intelligenz-der-gesellschaft.pdf pdf]"
      },
      "date": 1694683462345
    },
    {
      "type": "edit",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "[[Über Technisation]], technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise [https://kusanowsky.wordpress.com/2023/04/11/uber-technisation-technische-intelligenz-der-gesellschaft-und-wege-aus-der-okologischen-krise-2/ page], [https://kusanowsky.files.wordpress.com/2023/04/2.-technisation-technische-intelligenz-der-gesellschaft.pdf pdf]"
      },
      "date": 1694683488901
    },
    {
      "type": "edit",
      "id": "64c5621be0e7ea26",
      "item": {
        "type": "paragraph",
        "id": "64c5621be0e7ea26",
        "text": "⇒ [[Über Technisation]], technische Intelligenz der Gesellschaft und Wege aus der ökologischen Krise [https://kusanowsky.wordpress.com/2023/04/11/uber-technisation-technische-intelligenz-der-gesellschaft-und-wege-aus-der-okologischen-krise-2/ page], [https://kusanowsky.files.wordpress.com/2023/04/2.-technisation-technische-intelligenz-der-gesellschaft.pdf pdf]"
      },
      "date": 1694683504304
    },
    {
      "id": "64c5621be0e7ea26",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "f7cb3307cbfd79aa",
        "64c5621be0e7ea26",
        "02022f0ffdf342cf",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "e43f714b97b4f0e0",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694683595370
    },
    {
      "id": "e43f714b97b4f0e0",
      "type": "remove",
      "removedTo": {
        "page": "Über Technisation"
      },
      "date": 1694683604659
    },
    {
      "id": "02022f0ffdf342cf",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "f7cb3307cbfd79aa",
        "64c5621be0e7ea26",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694684149917
    },
    {
      "id": "64c5621be0e7ea26",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694685628038
    },
    {
      "type": "add",
      "id": "3044273686f06da4",
      "item": {
        "type": "paragraph",
        "id": "3044273686f06da4",
        "text": "How to install Node.js and setup your laptop for JavaScript SEO Automation [page]"
      },
      "after": "1084f3d3814b2e30",
      "date": 1694685761372
    },
    {
      "type": "edit",
      "id": "3044273686f06da4",
      "item": {
        "type": "paragraph",
        "id": "3044273686f06da4",
        "text": "How to install Node.js and setup your laptop for JavaScript SEO Automation [https://jlhernando.com/blog/how-to-install-node-for-seo/ page]"
      },
      "date": 1694685770508
    },
    {
      "type": "add",
      "id": "0b7052b2440e112d",
      "item": {
        "type": "paragraph",
        "id": "0b7052b2440e112d",
        "text": "How to use the newest URL Inspection endpoint from the Google Search Console API with Node.js"
      },
      "after": "3044273686f06da4",
      "date": 1694685890611
    },
    {
      "type": "edit",
      "id": "0b7052b2440e112d",
      "item": {
        "type": "paragraph",
        "id": "0b7052b2440e112d",
        "text": "How to use the newest URL Inspection endpoint from the Google Search Console API with Node.js [https://jlhernando.com/blog/google-url-inspection-api-nodejs/ page]"
      },
      "date": 1694685899838
    },
    {
      "id": "0b7052b2440e112d",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "0b7052b2440e112d",
        "3044273686f06da4",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694685901398
    },
    {
      "type": "add",
      "id": "4906f651f4eb4415",
      "item": {
        "type": "paragraph",
        "id": "4906f651f4eb4415",
        "text": ">  extract index status data in bulk t"
      },
      "after": "0b7052b2440e112d",
      "date": 1694685932172
    },
    {
      "type": "edit",
      "id": "4906f651f4eb4415",
      "item": {
        "type": "markdown",
        "id": "4906f651f4eb4415",
        "text": ">  extract index status data in bulk t"
      },
      "date": 1694685933723
    },
    {
      "type": "edit",
      "id": "4906f651f4eb4415",
      "item": {
        "type": "markdown",
        "id": "4906f651f4eb4415",
        "text": ">  extract index status data in bulk"
      },
      "date": 1694685937253
    },
    {
      "type": "edit",
      "id": "0b7052b2440e112d",
      "item": {
        "type": "paragraph",
        "id": "0b7052b2440e112d",
        "text": "How to use the newest URL Inspection endpoint from the Google Search Console API with Node.js [https://jlhernando.com/blog/google-url-inspection-api-nodejs/ page], [https://github.com/jlhernando/google-index-inspect-api#google-index-inspection-api github]"
      },
      "date": 1694685996684
    },
    {
      "type": "add",
      "id": "99c78916b4d80713",
      "item": {
        "type": "paragraph",
        "id": "99c78916b4d80713",
        "text": "Es gibt viele verschiedene Formen von Ökosystemen und Möglichkeiten, sie zu nutzen. Sie können mächtige Sensoren (z. B. das ILC-Modell) für künftige Veränderungen sein, aber auch Quellen der Zusammenarbeit mit anderen sowie defensive und offensive Allianzen. Aber Ökosysteme brauchen Management, sie müssen gepflegt werden wie ein Gärtner seinen Garten - manchmal lässt man sie wild wachsen, manchmal erntet man, manchmal hilft man, sie zu lenken oder einzuschränken. Dies sind besondere Fähigkeiten, die man entwickeln kann, aber das Wichtigste ist das Prinzip - man muss ihnen zuhören."
      },
      "after": "65de0ad393316029",
      "date": 1694686529102
    },
    {
      "id": "02022f0ffdf342cf",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "99c78916b4d80713",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "0b7052b2440e112d",
        "4906f651f4eb4415",
        "3044273686f06da4",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea"
      ],
      "date": 1694686531335
    },
    {
      "type": "edit",
      "id": "99c78916b4d80713",
      "item": {
        "type": "paragraph",
        "id": "99c78916b4d80713",
        "text": "⇒ [[Doctrine]]"
      },
      "date": 1694686563564
    },
    {
      "type": "add",
      "id": "eb08ddc598a37624",
      "item": {
        "type": "paragraph",
        "id": "eb08ddc598a37624",
        "text": "Es gibt viele verschiedene Formen von Ökosystemen und Möglichkeiten, sie zu nutzen. Sie können mächtige Sensoren (z. B. das ILC-Modell) für künftige Veränderungen sein, aber auch Quellen der Zusammenarbeit mit anderen sowie defensive und offensive Allianzen. Aber Ökosysteme brauchen Management, sie müssen gepflegt werden wie ein Gärtner seinen Garten - manchmal lässt man sie wild wachsen, manchmal erntet man, manchmal hilft man, sie zu lenken oder einzuschränken. Dies sind besondere Fähigkeiten, die man entwickeln kann, aber das Wichtigste ist das Prinzip - man muss ihnen zuhören."
      },
      "after": "99c78916b4d80713",
      "date": 1694686565453
    },
    {
      "type": "edit",
      "id": "99c78916b4d80713",
      "item": {
        "type": "paragraph",
        "id": "99c78916b4d80713",
        "text": "⇒ [[Doctrine]] [https://doctrine.wardleymaps.com site]"
      },
      "date": 1694686609181
    },
    {
      "type": "add",
      "id": "2f2ebcf18509ece7",
      "item": {
        "type": "paragraph",
        "id": "2f2ebcf18509ece7",
        "text": "Listen to your ecosystem"
      },
      "after": "99c78916b4d80713",
      "date": 1694686643763
    },
    {
      "type": "add",
      "id": "edf88c558d2ad006",
      "item": {
        "type": "paragraph",
        "id": "edf88c558d2ad006",
        "text": "[[Hör auf dein Ökosystem]]"
      },
      "after": "2f2ebcf18509ece7",
      "date": 1694686666467
    },
    {
      "id": "eb08ddc598a37624",
      "type": "remove",
      "removedTo": {
        "page": "Hör auf dein Ökosystem"
      },
      "date": 1694686672331
    },
    {
      "item": {
        "type": "factory",
        "id": "0836d98b83edff42"
      },
      "id": "0836d98b83edff42",
      "type": "add",
      "after": "37fc54e170a726ea",
      "date": 1694687630839
    },
    {
      "type": "edit",
      "id": "0836d98b83edff42",
      "item": {
        "type": "reference",
        "id": "0836d98b83edff42",
        "site": "forage.rodwell.me",
        "slug": "typescript-2023-09-13",
        "title": "Typescript 2023-09-13",
        "text": "Text extraction. See [[Typescript Archive]]"
      },
      "date": 1694687646117
    },
    {
      "item": {
        "type": "factory",
        "id": "b82a424608867b37"
      },
      "id": "b82a424608867b37",
      "type": "add",
      "after": "0836d98b83edff42",
      "date": 1694687648367
    },
    {
      "id": "b82a424608867b37",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "99c78916b4d80713",
        "2f2ebcf18509ece7",
        "edf88c558d2ad006",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "0b7052b2440e112d",
        "4906f651f4eb4415",
        "3044273686f06da4",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "e948dc1fff51d6bf",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea",
        "b82a424608867b37",
        "0836d98b83edff42"
      ],
      "date": 1694687650098
    },
    {
      "type": "edit",
      "id": "b82a424608867b37",
      "item": {
        "type": "reference",
        "id": "b82a424608867b37",
        "site": "forage.rodwell.me",
        "slug": "typescript-archive",
        "title": "Typescript Archive",
        "text": "In theory, we archive zoom transcripts here and use an html script to improve their readability based on our posting habits on our Sunday and Wednesday calls."
      },
      "date": 1694687655292
    },
    {
      "item": {
        "type": "factory",
        "id": "62ed00d205992cee"
      },
      "id": "62ed00d205992cee",
      "type": "add",
      "after": "0836d98b83edff42",
      "date": 1694687661435
    },
    {
      "type": "edit",
      "id": "62ed00d205992cee",
      "item": {
        "type": "reference",
        "id": "62ed00d205992cee",
        "site": "forage.rodwell.me",
        "slug": "typescript-index-2023-09-13",
        "title": "Typescript Index 2023-09-13",
        "text": "Keyword Index. See [[Typescript 2023-09-13]]"
      },
      "date": 1694687665347
    },
    {
      "type": "add",
      "id": "a55b8d2f4cfc3395",
      "item": {
        "type": "paragraph",
        "id": "a55b8d2f4cfc3395",
        "text": "Took a little to get the script to run on TLS site, but here is a link to the text chat: http://forage.rodwell.me/view/typescript-archive/view/typescript-2023-09-13/view/typescript-index-2023-09-13"
      },
      "after": "37fc54e170a726ea",
      "date": 1694689849129
    },
    {
      "type": "edit",
      "id": "a55b8d2f4cfc3395",
      "item": {
        "type": "paragraph",
        "id": "a55b8d2f4cfc3395",
        "text": "paul90 via [matrix] Took a little to get the script to run on TLS site, but here is a link to the text chat: http://forage.rodwell.me/view/typescript-archive/view/typescript-2023-09-13/view/typescript-index-2023-09-13"
      },
      "date": 1694689861427
    },
    {
      "type": "edit",
      "id": "a55b8d2f4cfc3395",
      "item": {
        "type": "paragraph",
        "id": "a55b8d2f4cfc3395",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946372594385RtGxH:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] Took a little to get the script to run on TLS site, but here is a link to the text chat: http://forage.rodwell.me/view/typescript-archive/view/typescript-2023-09-13/view/typescript-index-2023-09-13"
      },
      "date": 1694689874380
    },
    {
      "type": "add",
      "id": "de53ac3aacab1a98",
      "item": {
        "type": "paragraph",
        "id": "de53ac3aacab1a98",
        "text": "forage.rodwell.me"
      },
      "after": "a55b8d2f4cfc3395",
      "date": 1694689920518
    },
    {
      "type": "edit",
      "id": "de53ac3aacab1a98",
      "item": {
        "type": "paragraph",
        "id": "de53ac3aacab1a98",
        "text": "forage.rodwell.me needs access to frame and script"
      },
      "date": 1694689942721
    },
    {
      "type": "edit",
      "id": "de53ac3aacab1a98",
      "item": {
        "type": "paragraph",
        "id": "de53ac3aacab1a98",
        "text": "forage.rodwell.me needs frame and script permissions"
      },
      "date": 1694690104442
    },
    {
      "item": {
        "type": "factory",
        "id": "e39004991ca8b31f"
      },
      "id": "e39004991ca8b31f",
      "type": "add",
      "after": "62ed00d205992cee",
      "date": 1694690225123
    },
    {
      "type": "edit",
      "id": "e39004991ca8b31f",
      "item": {
        "type": "paragraph",
        "id": "e39004991ca8b31f",
        "text": "⇒ [[Tries]]"
      },
      "date": 1694690243657
    },
    {
      "type": "edit",
      "id": "e39004991ca8b31f",
      "item": {
        "type": "paragraph",
        "id": "e39004991ca8b31f",
        "text": "⇒ [[Trie]]s"
      },
      "date": 1694690249169
    },
    {
      "id": "e948dc1fff51d6bf",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "02022f0ffdf342cf",
        "99c78916b4d80713",
        "2f2ebcf18509ece7",
        "edf88c558d2ad006",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "0b7052b2440e112d",
        "4906f651f4eb4415",
        "3044273686f06da4",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "e948dc1fff51d6bf",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea",
        "a55b8d2f4cfc3395",
        "de53ac3aacab1a98",
        "b82a424608867b37",
        "0836d98b83edff42",
        "62ed00d205992cee",
        "e39004991ca8b31f"
      ],
      "date": 1694690273935
    },
    {
      "id": "02022f0ffdf342cf",
      "type": "move",
      "order": [
        "65de0ad393316029",
        "99c78916b4d80713",
        "2f2ebcf18509ece7",
        "02022f0ffdf342cf",
        "edf88c558d2ad006",
        "64c5621be0e7ea26",
        "f7cb3307cbfd79aa",
        "19e936a727f1559c",
        "756c18345650d76c",
        "485d1b2e0d422ad6",
        "204baa30e643a4ce",
        "80c0f77a49873ee3",
        "1084f3d3814b2e30",
        "0b7052b2440e112d",
        "4906f651f4eb4415",
        "3044273686f06da4",
        "2a338f08c6518767",
        "a3ebda0fa222eec8",
        "fb3a46553cb9fd95",
        "84470a71e0c5a556",
        "04d36e4301c9fd61",
        "247c871c20f5b353",
        "090d26861a32418b",
        "d120636a738f0944",
        "e10fd4e5a7b787d9",
        "e948dc1fff51d6bf",
        "1a393003613209df",
        "7aba20453a1a0e26",
        "541b800d06f489ce",
        "f6e6cd12ae7b0c79",
        "37fc54e170a726ea",
        "a55b8d2f4cfc3395",
        "de53ac3aacab1a98",
        "b82a424608867b37",
        "0836d98b83edff42",
        "62ed00d205992cee",
        "e39004991ca8b31f"
      ],
      "date": 1694699575906
    },
    {
      "item": {
        "type": "factory",
        "id": "bc5d7081bb2d810a"
      },
      "id": "bc5d7081bb2d810a",
      "type": "add",
      "after": "e39004991ca8b31f",
      "date": 1694699724307
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "K"
      },
      "date": 1694699731846
    },
    {
      "item": {
        "type": "factory",
        "id": "8d6bf9a45c266a67"
      },
      "id": "8d6bf9a45c266a67",
      "type": "add",
      "after": "bc5d7081bb2d810a",
      "date": 1694699758939
    },
    {
      "type": "edit",
      "id": "8d6bf9a45c266a67",
      "item": {
        "type": "reference",
        "id": "8d6bf9a45c266a67",
        "site": "goals.pod.rodwell.me",
        "slug": "enrich-kumu-svg",
        "title": "Enrich Kumu SVG",
        "text": "Using [[Enrich Arrows SVG]] as a starting place, here we offer a workflow to enrich the SVG export from Kumu with wiki internal links."
      },
      "date": 1694699762083
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "paul90 via [matrix]\nmarcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example, it can mask the clickable links."
      },
      "date": 1694699808533
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946982409850OikVK:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nmarcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example, it can mask the clickable links."
      },
      "date": 1694699819215
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946982409850OikVK:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@marcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example, it can mask the clickable links."
      },
      "date": 1694699824551
    },
    {
      "type": "add",
      "id": "8a82d3304e4fdac1",
      "item": {
        "type": "paragraph",
        "id": "8a82d3304e4fdac1",
        "text": "⇒ [[Kumu]]"
      },
      "after": "e39004991ca8b31f",
      "date": 1694699900990
    },
    {
      "type": "add",
      "id": "877cc8f6fd503db6",
      "item": {
        "type": "paragraph",
        "id": "877cc8f6fd503db6",
        "text": "What are the main use cases for Kumu?"
      },
      "after": "8a82d3304e4fdac1",
      "date": 1694699916276
    },
    {
      "type": "edit",
      "id": "877cc8f6fd503db6",
      "item": {
        "type": "paragraph",
        "id": "877cc8f6fd503db6",
        "text": "What are the main use cases for Kumu? [https://docs.kumu.io/getting-started/kumu-101#what-are-the-main-use-cases-for-kumu page]"
      },
      "date": 1694699924619
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946982409850OikVK:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@marcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example [https://docs.kumu.io/getting-started/kumu-101#what-are-the-main-use-cases-for-kumu page], it can mask the clickable links."
      },
      "date": 1694699981617
    },
    {
      "type": "edit",
      "id": "bc5d7081bb2d810a",
      "item": {
        "type": "paragraph",
        "id": "bc5d7081bb2d810a",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16946982409850OikVK:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@marcpierson\n: When you get time, can you try your Kumu SVG with https://goals.pod.rodwell.me/view/enrich-kumu-svg\nThe only problem I've seen with the few examples I have tried is that when the SVG embed an image, such as in the Permaculture in Ontario example [https://kumu.io/gardenjane/permaculture-in-ontario page], it can mask the clickable links."
      },
      "date": 1694699997970
    },
    {
      "item": {
        "type": "factory",
        "id": "13572ddf9a5b8234"
      },
      "id": "13572ddf9a5b8234",
      "type": "add",
      "after": "8d6bf9a45c266a67",
      "date": 1694700040695
    },
    {
      "type": "edit",
      "id": "13572ddf9a5b8234",
      "item": {
        "type": "pagefold",
        "id": "13572ddf9a5b8234",
        "text": "~"
      },
      "date": 1694700043766
    },
    {
      "item": {
        "type": "factory",
        "id": "b6e9a68c1c97c50c"
      },
      "id": "b6e9a68c1c97c50c",
      "type": "add",
      "after": "13572ddf9a5b8234",
      "date": 1694700045445
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book Half-Earth Socialism is what the Viennese polymath Otto Neurath would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature.\n\nOur game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others.\n\nThis game, which is inspired by our book Half-Earth Socialism, is the fruit of the labour of many designers, researchers, and artists (please see credits for details). Francis Tseng (Jain Family Institute) is the game developer and Son La Pham (TRUST) is the designer.\n\n\nGood luck, and may your plans succeed in providing the good life for all while avoiding the worst of the environmental crisis!"
      },
      "date": 1694700047228
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath Otto Neurath would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature.\n\nOur game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others.\n\nThis game, which is inspired by our book Half-Earth Socialism, is the fruit of the labour of many designers, researchers, and artists (please see credits for details). Francis Tseng (Jain Family Institute) is the game developer and Son La Pham (TRUST) is the designer.\n\n\nGood luck, and may your plans succeed in providing the good life for all while avoiding the worst of the environmental crisis!"
      },
      "date": 1694700056216
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature.\n\nOur game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others.\n\nThis game, which is inspired by our book Half-Earth Socialism, is the fruit of the labour of many designers, researchers, and artists (please see credits for details). Francis Tseng (Jain Family Institute) is the game developer and Son La Pham (TRUST) is the designer.\n\n\nGood luck, and may your plans succeed in providing the good life for all while avoiding the worst of the environmental crisis!"
      },
      "date": 1694700070010
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature.\n\nOur game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others.\n\nThis game, which is inspired by our book Half-Earth Socialism, is the fruit of the labour of many designers, researchers, and artists (please see credits for details). Francis Tseng (Jain Family Institute) is the game developer and Son La Pham (TRUST) is the designer."
      },
      "date": 1694700083572
    },
    {
      "type": "add",
      "id": "734eb696a13eba2e",
      "item": {
        "type": "paragraph",
        "id": "734eb696a13eba2e",
        "text": "Good luck, and may your plans succeed in providing the good life for all while avoiding the worst of the environmental crisis!"
      },
      "after": "b6e9a68c1c97c50c",
      "date": 1694700085380
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature.\n\nOur game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others."
      },
      "date": 1694700088492
    },
    {
      "type": "add",
      "id": "7ee3d9459f1c5283",
      "item": {
        "type": "paragraph",
        "id": "7ee3d9459f1c5283",
        "text": "This game, which is inspired by our book Half-Earth Socialism, is the fruit of the labour of many designers, researchers, and artists (please see credits for details). Francis Tseng (Jain Family Institute) is the game developer and Son La Pham (TRUST) is the designer."
      },
      "after": "b6e9a68c1c97c50c",
      "date": 1694700109178
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs, geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature."
      },
      "date": 1694700114876
    },
    {
      "type": "add",
      "id": "6ddf9ca6d5dfee4f",
      "item": {
        "type": "paragraph",
        "id": "6ddf9ca6d5dfee4f",
        "text": "Our game, Half-Earth Socialism, allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others."
      },
      "after": "b6e9a68c1c97c50c",
      "date": 1694700119283
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Grow biofuels, burn them for energy, then capture and store the CO2 emitted.), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature."
      },
      "date": 1694700228905
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Grow biofuels, burn them for energy, then capture and store the CO2 emitted), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature."
      },
      "date": 1694700242403
    },
    {
      "type": "edit",
      "id": "6ddf9ca6d5dfee4f",
      "item": {
        "type": "paragraph",
        "id": "6ddf9ca6d5dfee4f",
        "text": "Our game, Half-Earth Socialism [https://play.half.earth/ site], allows anyone to try their hand as a global planner of a future society. Consider it a sandbox where you can play with a wide range of technologies and policies spanning different fields and ideologies. The game simulates the impact of your decisions by calculating emissions and using a real climate model (HECTOR) to work out the climate effects, while also simulating impacts to the food system and biodiversity, among others."
      },
      "date": 1694700325772
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Bioenergy Carbon Capture and Sequestration, i.e., grow biofuels, burn them for energy, then capture and store the CO2 emitted), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature."
      },
      "date": 1694701525936
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation.\n\nYet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Bioenergy Carbon Capture and Sequestration, i.e., grow biofuels, burn them for energy, then capture and store the CO2 emitted), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature. [https://www.half.earth/ site]"
      },
      "date": 1694702964390
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation."
      },
      "date": 1694703000012
    },
    {
      "type": "add",
      "id": "a51fbb26adc8df37",
      "item": {
        "type": "paragraph",
        "id": "a51fbb26adc8df37",
        "text": "Yet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Bioenergy Carbon Capture and Sequestration, i.e., grow biofuels, burn them for energy, then capture and store the CO2 emitted), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature. [https://www.half.earth/ site]"
      },
      "after": "b6e9a68c1c97c50c",
      "date": 1694703000607
    },
    {
      "type": "edit",
      "id": "a51fbb26adc8df37",
      "item": {
        "type": "paragraph",
        "id": "a51fbb26adc8df37",
        "text": "Yet, our vision is hardly the only one worth considering. There are a great number of solutions that could address environmental crisis (with varying success). For example a planner could combine the technical solutions of BECCs (Bioenergy Carbon Capture and Sequestration, i.e., grow biofuels, burn them for energy, then capture and store the CO2 emitted), geoengineering, fast-breeder reactors, and space travel with equally eclectic social policies—say, an ecofeminist curriculum and a one-child policy— to create a wide array of different futures. We don't agree with some of the options in the game, but do our best to simulate them fairly based on the scientific literature. "
      },
      "date": 1694703006489
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation. [https://www.half.earth/ site]"
      },
      "date": 1694703010911
    },
    {
      "type": "edit",
      "id": "b6e9a68c1c97c50c",
      "item": {
        "type": "paragraph",
        "id": "b6e9a68c1c97c50c",
        "text": "⇒ [[Half-Earth Socialism Game]]"
      },
      "date": 1694703140293
    },
    {
      "type": "add",
      "id": "8cf777280e62397e",
      "item": {
        "type": "paragraph",
        "id": "8cf777280e62397e",
        "text": "Our book [[Half-Earth Socialism]] is what the Viennese polymath [[Otto Neurath]] would have called a 'scientific utopia'. For Neurath, utopian thinking was a thought experiment bounded by material constraints. Similarly, Half-Earth Socialism is an ambitious speculation on possible futures, which calls for the end of the fossil fuel era, sovereign Indigenous nationhood, nature preserves covering half the Earth, and drastic social changes such as widespread veganism and the end to private car ownership. While such ideas may seem outlandish, they are predicated on a robust scientific foundation. [https://www.half.earth/ site]"
      },
      "after": "b6e9a68c1c97c50c",
      "date": 1694703143645
    },
    {
      "id": "8cf777280e62397e",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703148484
    },
    {
      "id": "a51fbb26adc8df37",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703156687
    },
    {
      "id": "6ddf9ca6d5dfee4f",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703172579
    },
    {
      "id": "7ee3d9459f1c5283",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703181196
    },
    {
      "id": "734eb696a13eba2e",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703224946
    },
    {
      "item": {
        "type": "factory",
        "id": "cdc91c6268736b0c"
      },
      "id": "cdc91c6268736b0c",
      "type": "add",
      "after": "b6e9a68c1c97c50c",
      "date": 1694703820011
    },
    {
      "type": "edit",
      "id": "cdc91c6268736b0c",
      "item": {
        "type": "image",
        "id": "cdc91c6268736b0c",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 649,
        "url": "/assets/plugins/image/c02aa3b771387ab39ff58abcb560433d.jpg"
      },
      "date": 1694703842461
    },
    {
      "type": "edit",
      "id": "cdc91c6268736b0c",
      "item": {
        "type": "image",
        "id": "cdc91c6268736b0c",
        "text": "[[Half-Earth Socialism]] ",
        "size": "wide",
        "width": 430,
        "height": 649,
        "url": "/assets/plugins/image/c02aa3b771387ab39ff58abcb560433d.jpg"
      },
      "date": 1694703854684
    },
    {
      "type": "edit",
      "id": "cdc91c6268736b0c",
      "item": {
        "type": "image",
        "id": "cdc91c6268736b0c",
        "text": "[[Half-Earth Socialism]] ",
        "size": "thumbnail",
        "width": 183,
        "height": 276,
        "url": "/assets/plugins/image/c02aa3b771387ab39ff58abcb560433d.jpg"
      },
      "date": 1694703912023
    },
    {
      "id": "cdc91c6268736b0c",
      "type": "remove",
      "removedTo": {
        "page": "Half-Earth Socialism Game"
      },
      "date": 1694703917392
    },
    {
      "item": {
        "type": "factory",
        "id": "d3549fa6f2339d91"
      },
      "id": "d3549fa6f2339d91",
      "type": "add",
      "after": "b6e9a68c1c97c50c",
      "date": 1694703978408
    },
    {
      "type": "edit",
      "id": "d3549fa6f2339d91",
      "item": {
        "type": "image",
        "id": "d3549fa6f2339d91",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 369,
        "url": "/assets/plugins/image/0898dcad3fd8cb04210ae164af75c9da.jpg"
      },
      "date": 1694703991780
    },
    {
      "type": "edit",
      "id": "d3549fa6f2339d91",
      "item": {
        "type": "image",
        "id": "d3549fa6f2339d91",
        "text": "A Planetary Crisis Planning Game",
        "size": "wide",
        "width": 430,
        "height": 369,
        "url": "/assets/plugins/image/0898dcad3fd8cb04210ae164af75c9da.jpg"
      },
      "date": 1694704011028
    },
    {
      "item": {
        "type": "factory",
        "id": "3b86a9b72435e2d0"
      },
      "id": "3b86a9b72435e2d0",
      "type": "add",
      "after": "d3549fa6f2339d91",
      "date": 1694711086599
    },
    {
      "type": "edit",
      "id": "3b86a9b72435e2d0",
      "item": {
        "type": "pagefold",
        "id": "3b86a9b72435e2d0",
        "text": "~"
      },
      "date": 1694711091576
    },
    {
      "item": {
        "type": "factory",
        "id": "6fa9c519e2b5e570"
      },
      "id": "6fa9c519e2b5e570",
      "type": "add",
      "after": "3b86a9b72435e2d0",
      "date": 1694711094744
    },
    {
      "type": "edit",
      "id": "6fa9c519e2b5e570",
      "item": {
        "type": "paragraph",
        "id": "6fa9c519e2b5e570",
        "text": "Be transparent (a bias towards open)"
      },
      "date": 1694711097334
    },
    {
      "type": "edit",
      "id": "6fa9c519e2b5e570",
      "item": {
        "type": "paragraph",
        "id": "6fa9c519e2b5e570",
        "text": "[[Be Transparent]] (a bias towards open)"
      },
      "date": 1694711197805
    },
    {
      "item": {
        "type": "factory",
        "id": "f53a9279f168172b"
      },
      "id": "f53a9279f168172b",
      "type": "add",
      "after": "6fa9c519e2b5e570",
      "date": 1694721667580
    },
    {
      "type": "edit",
      "id": "f53a9279f168172b",
      "item": {
        "type": "pagefold",
        "id": "f53a9279f168172b",
        "text": "~"
      },
      "date": 1694721671964
    },
    {
      "item": {
        "type": "factory",
        "id": "bb2a2a3765fdbdfe"
      },
      "id": "bb2a2a3765fdbdfe",
      "type": "add",
      "after": "f53a9279f168172b",
      "date": 1694721673707
    },
    {
      "type": "edit",
      "id": "bb2a2a3765fdbdfe",
      "item": {
        "type": "paragraph",
        "id": "bb2a2a3765fdbdfe",
        "text": "\"in situ\" \"error message\""
      },
      "date": 1694721676284
    },
    {
      "item": {
        "type": "factory",
        "id": "bf90b6f32f9af692"
      },
      "id": "bf90b6f32f9af692",
      "type": "add",
      "after": "bb2a2a3765fdbdfe",
      "date": 1694721693183
    },
    {
      "type": "edit",
      "id": "bf90b6f32f9af692",
      "item": {
        "type": "paragraph",
        "id": "bf90b6f32f9af692",
        "text": "\nNGUYEN, Hiep, DEAN, Daniel J., KC, Kamal and GU, Xiaohui, 2014. Insight: In-situ Online Service Failure Path Inference in Production Computing Infrastructures. In: 2014 USENIX Annual Technical Conference (USENIX ATC 14). Online. 2014. p. 269–280. [Accessed 14 September 2023]. ISBN 978-1-931971-10-2. Available from: https://www.usenix.org/conference/atc14/technical-sessions/presentation/nguyen\n"
      },
      "date": 1694721695197
    },
    {
      "type": "edit",
      "id": "bb2a2a3765fdbdfe",
      "item": {
        "type": "paragraph",
        "id": "bb2a2a3765fdbdfe",
        "text": "providing a reasonable in situ error message"
      },
      "date": 1694721751352
    },
    {
      "type": "add",
      "id": "25f453ce77be0b88",
      "item": {
        "type": "paragraph",
        "id": "25f453ce77be0b88",
        "text": "\"in situ\" \"error message\""
      },
      "after": "bb2a2a3765fdbdfe",
      "date": 1694721754610
    },
    {
      "type": "add",
      "id": "f49b90c1d4debbc4",
      "item": {
        "type": "paragraph",
        "id": "f49b90c1d4debbc4",
        "text": "[[In Situ Error Message]]"
      },
      "after": "bb2a2a3765fdbdfe",
      "date": 1694721776776
    },
    {
      "id": "bb2a2a3765fdbdfe",
      "type": "remove",
      "removedTo": {
        "page": "In Situ Error Message"
      },
      "date": 1694721782372
    },
    {
      "id": "bf90b6f32f9af692",
      "type": "remove",
      "removedTo": {
        "page": "In Situ Error Message"
      },
      "date": 1694721784442
    },
    {
      "type": "edit",
      "id": "f49b90c1d4debbc4",
      "item": {
        "type": "paragraph",
        "id": "f49b90c1d4debbc4",
        "text": "⇒ [[In Situ Error Message]]"
      },
      "date": 1694723426058
    },
    {
      "type": "remove",
      "id": "25f453ce77be0b88",
      "date": 1694723428400
    },
    {
      "item": {
        "type": "factory",
        "id": "3f3329b029561e70"
      },
      "id": "3f3329b029561e70",
      "type": "add",
      "after": "f49b90c1d4debbc4",
      "date": 1694723559859
    },
    {
      "type": "edit",
      "id": "3f3329b029561e70",
      "item": {
        "type": "paragraph",
        "id": "3f3329b029561e70",
        "text": "a technique for surfacing chart construction errors in situ."
      },
      "date": 1694723563965
    },
    {
      "type": "add",
      "id": "365e83928258b7a3",
      "item": {
        "type": "paragraph",
        "id": "365e83928258b7a3",
        "text": " a parser that doesn't consume any input, but can be used to look ahead in the input stream without actually advancing it.\n\n"
      },
      "after": "3f3329b029561e70",
      "date": 1694723641395
    },
    {
      "type": "remove",
      "id": "365e83928258b7a3",
      "date": 1694723645248
    },
    {
      "type": "edit",
      "id": "3f3329b029561e70",
      "item": {
        "type": "paragraph",
        "id": "3f3329b029561e70",
        "text": "a technique for surfacing chart construction errors in situ. a parser that doesn't consume any input, but can be used to look ahead in the input stream without actually advancing it.\n\n"
      },
      "date": 1694723646040
    },
    {
      "type": "edit",
      "id": "3f3329b029561e70",
      "item": {
        "type": "paragraph",
        "id": "3f3329b029561e70",
        "text": "a technique for surfacing chart construction errors in situ."
      },
      "date": 1694723651903
    },
    {
      "type": "add",
      "id": "2b8bd79022ead286",
      "item": {
        "type": "paragraph",
        "id": "2b8bd79022ead286",
        "text": "a parser that doesn't consume any input, but can be used to look ahead in the input stream without actually advancing it."
      },
      "after": "3f3329b029561e70",
      "date": 1694723652316
    },
    {
      "type": "add",
      "id": "16ec08db5175c4fa",
      "item": {
        "type": "paragraph",
        "id": "16ec08db5175c4fa",
        "text": "Elm/parser look ahead without backtrackable"
      },
      "after": "2b8bd79022ead286",
      "date": 1694724396779
    },
    {
      "type": "edit",
      "id": "16ec08db5175c4fa",
      "item": {
        "type": "paragraph",
        "id": "16ec08db5175c4fa",
        "text": "Elm/parser look ahead without backtrackable [https://discourse.elm-lang.org/t/elm-parser-look-ahead-without-backtrackable/3106/1 page]"
      },
      "date": 1694724414880
    },
    {
      "type": "add",
      "id": "c2f7c50ea6a7a165",
      "item": {
        "type": "paragraph",
        "id": "c2f7c50ea6a7a165",
        "text": "Problem\n\nWhile trying to learn about elm/parser I decided to try and write a parser for urls. Because a lot of parts of a url are optional, I have to be able to look ahead in the given url to decide whether to go down a path or not. For example a url can start with or without a protocol, and as far as I know the deciding factor is whether or not a // is present."
      },
      "after": "16ec08db5175c4fa",
      "date": 1694724490154
    },
    {
      "type": "edit",
      "id": "c2f7c50ea6a7a165",
      "item": {
        "type": "paragraph",
        "id": "c2f7c50ea6a7a165",
        "text": "Problem\n\nWhile trying to learn about [[elm/parser]] I decided to try and write a parser for urls. Because a lot of parts of a url are optional, I have to be able to look ahead in the given url to decide whether to go down a path or not. For example a url can start with or without a protocol, and as far as I know the deciding factor is whether or not a // is present."
      },
      "date": 1694724502500
    },
    {
      "type": "add",
      "id": "68b33d11c9b212be",
      "item": {
        "type": "paragraph",
        "id": "68b33d11c9b212be",
        "text": "Background\n\nWhile digging through the documentation I found out about the oneOf (docs 6) function which I thought could be used for this problem. However, this function will only try other parsers if a previous parser hasn’t chomped any characters. Considering the parser for the “protocol” and the “auth” section of a url are both just strings, it will always pick the parser for the “protocol”."
      },
      "after": "c2f7c50ea6a7a165",
      "date": 1694724550088
    },
    {
      "type": "edit",
      "id": "68b33d11c9b212be",
      "item": {
        "type": "paragraph",
        "id": "68b33d11c9b212be",
        "text": "Background\n\nWhile digging through the documentation I found out about the [[oneOf]] function which I thought could be used for this problem. However, this function will only try other parsers if a previous parser hasn’t chomped any characters. Considering the parser for the “protocol” and the “auth” section of a url are both just strings, it will always pick the parser for the “protocol”."
      },
      "date": 1694724564323
    },
    {
      "type": "add",
      "id": "bbbe2354683bf968",
      "item": {
        "type": "paragraph",
        "id": "bbbe2354683bf968",
        "text": "The docs for the oneOf function also give a link to a document which mentions backtracking. This sounds like exactly the thing I need, however that document also mentions that if you shuffle your parsers around, you do not need any backtrackable parsers at all. Which brings me to my question."
      },
      "after": "68b33d11c9b212be",
      "date": 1694724608029
    },
    {
      "type": "edit",
      "id": "bbbe2354683bf968",
      "item": {
        "type": "paragraph",
        "id": "bbbe2354683bf968",
        "text": "The docs for the oneOf function also give a link to a document which mentions [[backtracking]]. This sounds like exactly the thing I need, however that document also mentions that if you shuffle your parsers around, you do not need any backtrackable parsers at all. Which brings me to my question."
      },
      "date": 1694724632163
    },
    {
      "type": "edit",
      "id": "bbbe2354683bf968",
      "item": {
        "type": "paragraph",
        "id": "bbbe2354683bf968",
        "text": "The docs for the oneOf function also give a link to a document which mentions [[Backtracking]]. This sounds like exactly the thing I need, however that document also mentions that if you shuffle your parsers around, you do not need any backtrackable parsers at all. Which brings me to my question."
      },
      "date": 1694724640711
    },
    {
      "type": "add",
      "id": "ed5a3813804bc800",
      "item": {
        "type": "paragraph",
        "id": "ed5a3813804bc800",
        "text": "Question\n\nHow would one write a parser with signature Parser (Maybe Protocol) without a backtrackable parser?"
      },
      "after": "bbbe2354683bf968",
      "date": 1694724714436
    },
    {
      "type": "edit",
      "id": "16ec08db5175c4fa",
      "item": {
        "type": "paragraph",
        "id": "16ec08db5175c4fa",
        "text": "Elm/parser look ahead without backtrackable [https://discourse.elm-lang.org/t/elm-parser-look-ahead-without-backtrackable/3106/1 page] ([[Yanik Ceulemans]])"
      },
      "date": 1694724881387
    },
    {
      "type": "add",
      "id": "f52703c555ec6b33",
      "item": {
        "type": "paragraph",
        "id": "f52703c555ec6b33",
        "text": "[https://ellie-app.com/4FmvZ49qQhGa1 ellie]"
      },
      "after": "ed5a3813804bc800",
      "date": 1694724917728
    },
    {
      "type": "edit",
      "id": "65de0ad393316029",
      "item": {
        "type": "paragraph",
        "id": "65de0ad393316029",
        "text": "⇒ [[The (|>) Pipe]] ⇒ [[oneOf]] ⇒ [[Decode.oneOf]]"
      },
      "date": 1694756738726
    }
  ]
}