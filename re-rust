{
  "title": "Re: Rust",
  "story": [
    {
      "type": "paragraph",
      "id": "bda6fbabfbf6b97f",
      "text": "Memory is the resource every computer program uses, but it's not the only resource."
    },
    {
      "type": "paragraph",
      "id": "922ff5378d5aab65",
      "text": "Nobody (that I know of) managed to pull off proper object destruction in a garbage-collected language. Thus, if a program written in a *garbage-collected* language uses those *other* resources, there is no guarantee as to when it might release them. The best they can do is *sometime between when the object goes out of scope, and when the program terminates*. And that's just not good enough for many applications including systems programming."
    },
    {
      "type": "paragraph",
      "id": "6ee021d7ace54131",
      "text": "That's what Rust has that automatic memory management doesn't: *when a variable goes out of scope, its destructor is run, or it's dropped*."
    },
    {
      "type": "markdown",
      "id": "544912cbb430d8a3",
      "text": "Source: dmitri maziuk via [https://catless.ncl.ac.uk/Risks/33/53/#subj4.1 The Risks Digest]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "date": 1669179664000,
      "item": {
        "title": "Re: Rust",
        "story": [
          {
            "type": "paragraph",
            "id": "bda6fbabfbf6b97f",
            "text": "Memory is the resource every computer program uses, but it's not the only resource."
          },
          {
            "type": "paragraph",
            "id": "922ff5378d5aab65",
            "text": "Nobody (that I know of) managed to pull off proper object destruction in a garbage-collected language. Thus, if a program written in a *garbage-collected* language uses those *other* resources, there is no guarantee as to when it might release them. The best they can do is *sometime between when the object goes out of scope, and when the program terminates*. And that's just not good enough for many applications including systems programming."
          },
          {
            "type": "paragraph",
            "id": "6ee021d7ace54131",
            "text": "That's what Rust has that automatic memory management doesn't: *when a variable goes out of scope, its destructor is run, or it's dropped*."
          },
          {
            "type": "markdown",
            "id": "544912cbb430d8a3",
            "text": "Source: dmitri maziuk via [https://catless.ncl.ac.uk/Risks/33/53/#subj4.1 The Risks Digest]"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "risks.rodwell.me",
      "date": 1669331702475
    }
  ]
}