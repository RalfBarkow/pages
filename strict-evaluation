{
  "title": "Strict Evaluation",
  "story": [
    {
      "type": "html",
      "text": "<i>Strict evaluation</i> is where all arguments to a function are evaluated <i>before</i> the body of the function is evaluated; and the arguments are never re-evaluated.  In other words, each argument is evaluated exactly once.  Compare with [[Lazy Evaluation]] and [[Normal Order Evaluation]].",
      "id": "ffd6f139d30027b18183cfd4bbc23880"
    },
    {
      "type": "html",
      "text": "\nMost languages uses [[Strict Evaluation]] for function arguments (though not for macros and some special forms).  [[Scheme Language]] uses [[Strict Evaluation]] by default; by using <i>delay/force</i> one can cause an argument to be evaluated with [[Lazy Evaluation]] instead.  Some functional languages such as [[Haskell Language]] use <i>[[Lazy Evaluation]]</i> by default.",
      "id": "3daf7028b3cb94c26941ddb86c755ace"
    },
    {
      "type": "html",
      "text": "\nNote that [[Strict Evaluation]] does not define the <i>order</i> in which arguments are evaluated; that is up to the language.  Some languages use left-to-right, others right-to-left; and others (such as [[Cee Language]] and [[Cee Plus Plus]]) leave this unspecified (any program which depends on the order of evaluation is unportable/ill-formed in such a language).",
      "id": "716b674699177aab61bcb3dccb155c6a"
    },
    {
      "type": "html",
      "text": "\nIf all you have is [[Strict Evaluation]], the other forms can be simulated by wrapping the expression to be evaluated in a [[Lambda Expression]], object, thunk, etc.  ",
      "id": "fa09240a9318eca315281a6fd52f4559"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "805a2cba80a87ac62ec72174b182e83f"
    },
    {
      "type": "html",
      "text": "See also [[Parameter Passing]], [[Call By Value]], [[Call By Thunk]]",
      "id": "7c8a65df0806a30dfbc577d318d2e210"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "805a2cba80a87ac62ec72174b182e83f"
    },
    {
      "type": "html",
      "text": "[[Category Language Feature]]",
      "id": "789a5e73c269e6510cd404cb5a2d382c"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?StrictEvaluation c2.com]",
      "id": "0b50f6ffe8f79a9f5c38fbe1bdd3e005"
    }
  ],
  "journal": [
    {
      "date": 1107666131000,
      "id": "0f042019ec22e0e63f2097636b47b7e6",
      "type": "create",
      "item": {
        "title": "Strict Evaluation",
        "story": [
          {
            "type": "html",
            "text": "<i>Strict evaluation</i> is where all arguments to a function are evaluated <i>before</i> the body of the function is evaluated; and the arguments are never re-evaluated.  In other words, each argument is evaluated exactly once.  Compare with [[Lazy Evaluation]] and [[Normal Order Evaluation]].",
            "id": "ffd6f139d30027b18183cfd4bbc23880"
          },
          {
            "type": "html",
            "text": "\nMost languages uses [[Strict Evaluation]] for function arguments (though not for macros and some special forms).  [[Scheme Language]] uses [[Strict Evaluation]] by default; by using <i>delay/force</i> one can cause an argument to be evaluated with [[Lazy Evaluation]] instead.  Some functional languages such as [[Haskell Language]] use <i>[[Lazy Evaluation]]</i> by default.",
            "id": "3daf7028b3cb94c26941ddb86c755ace"
          },
          {
            "type": "html",
            "text": "\nNote that [[Strict Evaluation]] does not define the <i>order</i> in which arguments are evaluated; that is up to the language.  Some languages use left-to-right, others right-to-left; and others (such as [[Cee Language]] and [[Cee Plus Plus]]) leave this unspecified (any program which depends on the order of evaluation is unportable/ill-formed in such a language).",
            "id": "716b674699177aab61bcb3dccb155c6a"
          },
          {
            "type": "html",
            "text": "\nIf all you have is [[Strict Evaluation]], the other forms can be simulated by wrapping the expression to be evaluated in a [[Lambda Expression]], object, thunk, etc.  ",
            "id": "fa09240a9318eca315281a6fd52f4559"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "805a2cba80a87ac62ec72174b182e83f"
          },
          {
            "type": "html",
            "text": "See also [[Parameter Passing]], [[Call By Value]], [[Call By Thunk]]",
            "id": "7c8a65df0806a30dfbc577d318d2e210"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "805a2cba80a87ac62ec72174b182e83f"
          },
          {
            "type": "html",
            "text": "[[Category Language Feature]]",
            "id": "789a5e73c269e6510cd404cb5a2d382c"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?StrictEvaluation c2.com]",
            "id": "0b50f6ffe8f79a9f5c38fbe1bdd3e005"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1644991037278
    }
  ]
}