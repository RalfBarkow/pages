{
  "title": "BackendTask.Http",
  "story": [
    {
      "type": "paragraph",
      "id": "3ad8ba4b495e6c7b",
      "text": "Scenarios where BackendTask.Http is a good fit [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask-Http page]"
    },
    {
      "type": "paragraph",
      "id": "e55f9f84e895b9eb",
      "text": "If you need data that is refreshed often you may want to do a traditional HTTP request with the elm/http package. The kinds of situations that are served well by static HTTP are with data that updates moderately frequently or infrequently (or never)."
    },
    {
      "type": "paragraph",
      "id": "a7988591aa13b34d",
      "text": "A common pattern is to trigger a new build when data changes. Many JAMstack services allow you to send a WebHook to your host (for example, Netlify is a good static file host that supports triggering builds with webhooks). So you may want to have your site rebuild everytime your calendar feed has an event added, or whenever a page or article is added or updated on a CMS service like Contentful."
    },
    {
      "type": "paragraph",
      "id": "822d97e0cb714797",
      "text": "In scenarios like this, you can serve data that is just as up-to-date as it would be using elm/http, but you get the performance gains of using BackendTask.Http.Requests as well as the simplicity and robustness that comes with it. Read more about these benefits in this article introducing BackendTask.Http requests and some concepts around it. ⇒ A is for API - Introducing Static HTTP Requests [https://elm-pages.com/blog/static-http/ page]"
    },
    {
      "type": "pagefold",
      "id": "92b48b39b9aec991",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "698cf3208988a68a",
      "text": "owner:dillonkearns BackendTask.Http [https://github.com/search?q=owner%3Adillonkearns+BackendTask.Http&type=code search]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "BackendTask.Http",
        "story": []
      },
      "date": 1693307145248
    },
    {
      "id": "3ad8ba4b495e6c7b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3ad8ba4b495e6c7b",
        "text": "⇒ [[BackendTask.Http]] [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask-Http page]"
      },
      "attribution": {
        "page": "2023-08-29"
      },
      "date": 1693307149318
    },
    {
      "type": "edit",
      "id": "3ad8ba4b495e6c7b",
      "item": {
        "type": "paragraph",
        "id": "3ad8ba4b495e6c7b",
        "text": "Scenarios where BackendTask.Http is a good fit [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask-Http page]"
      },
      "date": 1693307165742
    },
    {
      "item": {
        "type": "factory",
        "id": "e55f9f84e895b9eb"
      },
      "id": "e55f9f84e895b9eb",
      "type": "add",
      "after": "3ad8ba4b495e6c7b",
      "date": 1693307185875
    },
    {
      "type": "edit",
      "id": "e55f9f84e895b9eb",
      "item": {
        "type": "paragraph",
        "id": "e55f9f84e895b9eb",
        "text": "If you need data that is refreshed often you may want to do a traditional HTTP request with the elm/http package. The kinds of situations that are served well by static HTTP are with data that updates moderately frequently or infrequently (or never). A common pattern is to trigger a new build when data changes. Many JAMstack services allow you to send a WebHook to your host (for example, Netlify is a good static file host that supports triggering builds with webhooks). So you may want to have your site rebuild everytime your calendar feed has an event added, or whenever a page or article is added or updated on a CMS service like Contentful."
      },
      "date": 1693307187375
    },
    {
      "type": "edit",
      "id": "e55f9f84e895b9eb",
      "item": {
        "type": "paragraph",
        "id": "e55f9f84e895b9eb",
        "text": "If you need data that is refreshed often you may want to do a traditional HTTP request with the elm/http package. The kinds of situations that are served well by static HTTP are with data that updates moderately frequently or infrequently (or never)."
      },
      "date": 1693307204572
    },
    {
      "type": "add",
      "id": "a7988591aa13b34d",
      "item": {
        "type": "paragraph",
        "id": "a7988591aa13b34d",
        "text": "A common pattern is to trigger a new build when data changes. Many JAMstack services allow you to send a WebHook to your host (for example, Netlify is a good static file host that supports triggering builds with webhooks). So you may want to have your site rebuild everytime your calendar feed has an event added, or whenever a page or article is added or updated on a CMS service like Contentful."
      },
      "after": "e55f9f84e895b9eb",
      "date": 1693307205231
    },
    {
      "type": "add",
      "id": "822d97e0cb714797",
      "item": {
        "type": "paragraph",
        "id": "822d97e0cb714797",
        "text": "n scenarios like this, you can serve data that is just as up-to-date as it would be using elm/http, but you get the performance gains of using BackendTask.Http.Requests as well as the simplicity and robustness that comes with it. Read more about these benefits in this article introducing BackendTask.Http requests and some concepts around it."
      },
      "after": "a7988591aa13b34d",
      "date": 1693307245598
    },
    {
      "type": "edit",
      "id": "822d97e0cb714797",
      "item": {
        "type": "paragraph",
        "id": "822d97e0cb714797",
        "text": "In scenarios like this, you can serve data that is just as up-to-date as it would be using elm/http, but you get the performance gains of using BackendTask.Http.Requests as well as the simplicity and robustness that comes with it. Read more about these benefits in this article introducing BackendTask.Http requests and some concepts around it."
      },
      "date": 1693307250877
    },
    {
      "id": "8ec9aef9c5a6ff9e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8ec9aef9c5a6ff9e",
        "text": "A is for API - Introducing Static HTTP Requests [https://elm-pages.com/blog/static-http/ page]"
      },
      "after": "822d97e0cb714797",
      "attribution": {
        "page": "2023-08-29"
      },
      "date": 1693307270308
    },
    {
      "type": "remove",
      "id": "8ec9aef9c5a6ff9e",
      "date": 1693307282523
    },
    {
      "type": "edit",
      "id": "822d97e0cb714797",
      "item": {
        "type": "paragraph",
        "id": "822d97e0cb714797",
        "text": "In scenarios like this, you can serve data that is just as up-to-date as it would be using elm/http, but you get the performance gains of using BackendTask.Http.Requests as well as the simplicity and robustness that comes with it. Read more about these benefits in this article introducing BackendTask.Http requests and some concepts around it. ⇒ A is for API - Introducing Static HTTP Requests [https://elm-pages.com/blog/static-http/ page]"
      },
      "date": 1693307284200
    },
    {
      "item": {
        "type": "factory",
        "id": "92b48b39b9aec991"
      },
      "id": "92b48b39b9aec991",
      "type": "add",
      "after": "822d97e0cb714797",
      "date": 1693313637644
    },
    {
      "type": "edit",
      "id": "92b48b39b9aec991",
      "item": {
        "type": "pagefold",
        "id": "92b48b39b9aec991",
        "text": "µ"
      },
      "date": 1693313640299
    },
    {
      "type": "edit",
      "id": "92b48b39b9aec991",
      "item": {
        "type": "pagefold",
        "id": "92b48b39b9aec991",
        "text": "~"
      },
      "date": 1693313645338
    },
    {
      "id": "698cf3208988a68a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "698cf3208988a68a",
        "text": "owner:dillonkearns BackendTask.Http [https://github.com/search?q=owner%3Adillonkearns+BackendTask.Http&type=code search]"
      },
      "after": "92b48b39b9aec991",
      "attribution": {
        "page": "2023-08-29"
      },
      "date": 1693313649610
    }
  ]
}