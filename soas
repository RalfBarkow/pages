{
  "title": "SOAS",
  "story": [
    {
      "type": "paragraph",
      "id": "df2aa7ffc6659d5d",
      "text": "Second-Order [[Abstract Syntax]]"
    },
    {
      "type": "paragraph",
      "id": "a968ff00285de4d9",
      "text": "An [[Agda]] formalisation framework for second-order languages. [https://github.com/DimaSamoz/agda-soas#soas-second-order-abstract-syntax github]"
    },
    {
      "type": "markdown",
      "id": "37c8eaf5ba7ca6ef",
      "text": "Accompanies the POPL 2022 paper *Formal Metatheory of Second-Order Abstract Syntax*. [https://www.cl.cam.ac.uk/~ds709/agda-soas/ site]"
    },
    {
      "type": "paragraph",
      "id": "7fe9e7be5d1281e5",
      "text": "[[SOAS]] is a library for generating the formalised metatheory of second-order syntaxes, i.e. languages that involve terms with variable binding. Examples are the abstraction terms of computational calculi like the λ-calculus, quantifiers of first-order logic, differentiation and integration operators, etc. Formalising such systems in a proof assistant usually involves a lot of boilerplate, generally associated with the representation of variable binding and capture-avoiding substitution, the latter of which plays a role in the equational theory or computational behaviour of second-order languages (e.g. instantiation or β-reduction)."
    },
    {
      "type": "markdown",
      "id": "741c132b001c39fc",
      "text": "The SOAS framework includes a Python script `soas.py` that compiles a simple and flexible syntax description language into Agda code. The language includes several features to make the construction of first- and second-order syntaxes as seamless as possible, such as (meta)syntactic shorthands, a module system, and a library of common algebraic properties."
    },
    {
      "type": "paragraph",
      "id": "57ec356af4a8c0d1",
      "text": "A syntax description file consists of four components: the syntax header, the type declaration, the term operators, and the equational theory."
    },
    {
      "type": "paragraph",
      "id": "6d38a2fa1b2a17e8",
      "text": "The equational theory file contains the axiom declaration of the syntax, and the instantiation of the generic second-order equational reasoning library."
    },
    {
      "type": "paragraph",
      "id": "a31d4565759db31b",
      "text": "The equational reasoning library generated from the axioms allows one to prove equalities through a sequence of rewrite steps, […]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "SOAS",
        "story": []
      },
      "date": 1649947126955
    },
    {
      "item": {
        "type": "factory",
        "id": "df2aa7ffc6659d5d"
      },
      "id": "df2aa7ffc6659d5d",
      "type": "add",
      "date": 1649947153975
    },
    {
      "type": "edit",
      "id": "df2aa7ffc6659d5d",
      "item": {
        "type": "paragraph",
        "id": "df2aa7ffc6659d5d",
        "text": "[[https://github.com/DimaSamoz/agda-soas#soas-second-order-abstract-syntax github]]"
      },
      "date": 1649947169294
    },
    {
      "type": "edit",
      "id": "df2aa7ffc6659d5d",
      "item": {
        "type": "paragraph",
        "id": "df2aa7ffc6659d5d",
        "text": "Second-Order Abstract Syntax"
      },
      "date": 1649947178875
    },
    {
      "type": "add",
      "id": "a968ff00285de4d9",
      "item": {
        "type": "paragraph",
        "id": "a968ff00285de4d9",
        "text": "[[https://github.com/DimaSamoz/agda-soas#soas-second-order-abstract-syntax github]]"
      },
      "after": "df2aa7ffc6659d5d",
      "date": 1649947180293
    },
    {
      "type": "edit",
      "id": "a968ff00285de4d9",
      "item": {
        "type": "paragraph",
        "id": "a968ff00285de4d9",
        "text": "An Agda formalisation framework for second-order languages. [https://github.com/DimaSamoz/agda-soas#soas-second-order-abstract-syntax github]"
      },
      "date": 1649947200024
    },
    {
      "item": {
        "type": "factory",
        "id": "37c8eaf5ba7ca6ef"
      },
      "id": "37c8eaf5ba7ca6ef",
      "type": "add",
      "after": "a968ff00285de4d9",
      "date": 1649947210086
    },
    {
      "type": "edit",
      "id": "37c8eaf5ba7ca6ef",
      "item": {
        "type": "paragraph",
        "id": "37c8eaf5ba7ca6ef",
        "text": "Accompanies the POPL 2022 paper Formal Metatheory of Second-Order Abstract Syntax."
      },
      "date": 1649947212126
    },
    {
      "type": "edit",
      "id": "37c8eaf5ba7ca6ef",
      "item": {
        "type": "paragraph",
        "id": "37c8eaf5ba7ca6ef",
        "text": "Accompanies the POPL 2022 paper Formal Metatheory of Second-Order Abstract Syntax. [https://www.cl.cam.ac.uk/~ds709/agda-soas/ site]"
      },
      "date": 1649947223109
    },
    {
      "type": "edit",
      "id": "a968ff00285de4d9",
      "item": {
        "type": "paragraph",
        "id": "a968ff00285de4d9",
        "text": "An [[Agda]] formalisation framework for second-order languages. [https://github.com/DimaSamoz/agda-soas#soas-second-order-abstract-syntax github]"
      },
      "date": 1649947232799
    },
    {
      "type": "edit",
      "id": "37c8eaf5ba7ca6ef",
      "item": {
        "type": "paragraph",
        "id": "37c8eaf5ba7ca6ef",
        "text": "Accompanies the POPL 2022 paper *Formal Metatheory of Second-Order Abstract Syntax*. [https://www.cl.cam.ac.uk/~ds709/agda-soas/ site]"
      },
      "date": 1649947254328
    },
    {
      "type": "edit",
      "id": "37c8eaf5ba7ca6ef",
      "item": {
        "type": "markdown",
        "id": "37c8eaf5ba7ca6ef",
        "text": "Accompanies the POPL 2022 paper *Formal Metatheory of Second-Order Abstract Syntax*. [https://www.cl.cam.ac.uk/~ds709/agda-soas/ site]"
      },
      "date": 1649947255632
    },
    {
      "item": {
        "type": "factory",
        "id": "7fe9e7be5d1281e5"
      },
      "id": "7fe9e7be5d1281e5",
      "type": "add",
      "after": "37c8eaf5ba7ca6ef",
      "date": 1649947290019
    },
    {
      "type": "edit",
      "id": "7fe9e7be5d1281e5",
      "item": {
        "type": "paragraph",
        "id": "7fe9e7be5d1281e5",
        "text": "SOAS is a library for generating the formalised metatheory of second-order syntaxes, i.e. languages that involve terms with variable binding. Examples are the abstraction terms of computational calculi like the λ-calculus, quantifiers of first-order logic, differentiation and integration operators, etc. Formalising such systems in a proof assistant usually involves a lot of boilerplate, generally associated with the representation of variable binding and capture-avoiding substitution, the latter of which plays a role in the equational theory or computational behaviour of second-order languages (e.g. instantiation or β-reduction)."
      },
      "date": 1649947292210
    },
    {
      "type": "edit",
      "id": "7fe9e7be5d1281e5",
      "item": {
        "type": "paragraph",
        "id": "7fe9e7be5d1281e5",
        "text": "[[SOAS]] is a library for generating the formalised metatheory of second-order syntaxes, i.e. languages that involve terms with variable binding. Examples are the abstraction terms of computational calculi like the λ-calculus, quantifiers of first-order logic, differentiation and integration operators, etc. Formalising such systems in a proof assistant usually involves a lot of boilerplate, generally associated with the representation of variable binding and capture-avoiding substitution, the latter of which plays a role in the equational theory or computational behaviour of second-order languages (e.g. instantiation or β-reduction)."
      },
      "date": 1649947299733
    },
    {
      "item": {
        "type": "factory",
        "id": "741c132b001c39fc"
      },
      "id": "741c132b001c39fc",
      "type": "add",
      "after": "7fe9e7be5d1281e5",
      "date": 1649947406762
    },
    {
      "type": "edit",
      "id": "741c132b001c39fc",
      "item": {
        "type": "paragraph",
        "id": "741c132b001c39fc",
        "text": "The SOAS framework includes a Python script `soas.py` that compiles a simple and flexible syntax description language into Agda code. The language includes several features to make the construction of first- and second-order syntaxes as seamless as possible, such as (meta)syntactic shorthands, a module system, and a library of common algebraic properties."
      },
      "date": 1649947418280
    },
    {
      "type": "edit",
      "id": "741c132b001c39fc",
      "item": {
        "type": "markdown",
        "id": "741c132b001c39fc",
        "text": "The SOAS framework includes a Python script `soas.py` that compiles a simple and flexible syntax description language into Agda code. The language includes several features to make the construction of first- and second-order syntaxes as seamless as possible, such as (meta)syntactic shorthands, a module system, and a library of common algebraic properties."
      },
      "date": 1649947420100
    },
    {
      "item": {
        "type": "factory",
        "id": "57ec356af4a8c0d1"
      },
      "id": "57ec356af4a8c0d1",
      "type": "add",
      "after": "741c132b001c39fc",
      "date": 1649947477873
    },
    {
      "type": "edit",
      "id": "57ec356af4a8c0d1",
      "item": {
        "type": "paragraph",
        "id": "57ec356af4a8c0d1",
        "text": "A syntax description file consists of four components: the syntax header, the type declaration, the term operators, and the equational theory."
      },
      "date": 1649947479476
    },
    {
      "item": {
        "type": "factory",
        "id": "6d38a2fa1b2a17e8"
      },
      "id": "6d38a2fa1b2a17e8",
      "type": "add",
      "after": "57ec356af4a8c0d1",
      "date": 1649947549030
    },
    {
      "type": "edit",
      "id": "6d38a2fa1b2a17e8",
      "item": {
        "type": "paragraph",
        "id": "6d38a2fa1b2a17e8",
        "text": "The equational theory file contains the axiom declaration of the syntax, and the instantiation of the generic second-order equational reasoning library."
      },
      "date": 1649947556862
    },
    {
      "type": "add",
      "id": "a31d4565759db31b",
      "item": {
        "type": "paragraph",
        "id": "a31d4565759db31b",
        "text": "The equational reasoning library generated from the axioms allows one to prove equalities through a sequence of rewrite steps, […]"
      },
      "after": "6d38a2fa1b2a17e8",
      "date": 1649947578220
    },
    {
      "type": "edit",
      "id": "df2aa7ffc6659d5d",
      "item": {
        "type": "paragraph",
        "id": "df2aa7ffc6659d5d",
        "text": "Second-Order [[Abstract Syntax]]"
      },
      "date": 1652305087173
    }
  ]
}