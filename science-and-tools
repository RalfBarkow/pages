{
  "title": "Science And Tools",
  "story": [
    {
      "type": "html",
      "text": "Can science help us select among multiple tools/methodologies?",
      "id": "d65c76698cffcfedbe83b7336fac8263"
    },
    {
      "type": "html",
      "text": "\nScience used for understanding and predicting the physical world is for the most part uncontroversial among [[Wiki Zens]]. You observe nature, form hypotheses/models to explain or predict nature, test these models against observations related to the differences in the models, and the best-fitting model is labelled as such. If multiple models match roughly equal, then the simplest model gets preference. If all the candidates are poor, then keep looking for new or reworked hypotheses.",
      "id": "dbd13240595e938affd4686621e512a8"
    },
    {
      "type": "html",
      "text": "\nBut on this wiki we are often talking about tools, not nature. The question is <b>how can science determine the best tool</b>? What exactly the model is supposed to best \"fit\" is contentious, especially for software. Some want to view it like math and find the most \"elegant\" solution, perhaps using some kind of parsimony metric. Others lean toward improving the productivity of the \"user\" of the tool, which is typically a maintenance programmer. But \"productivity\" is tricky to measure and often gets into economics, organizational dynamics, and [[Wet Ware]].",
      "id": "cecf4e9c757fc1d7ada5aadfac58d6b6"
    },
    {
      "type": "html",
      "text": "\nAs a starting point, I propose this as the \"scientific method\" for testing tools:",
      "id": "fb35a56db083223793590b6c8064d3a6"
    },
    {
      "type": "html",
      "text": " 1. Describe the factors being optimized for",
      "id": "f1b62447b8369a07a60bb3c65e00b3ad"
    },
    {
      "type": "html",
      "text": " 2. Rank the factors by importance, carefully describing the reasoning for such importance rankings.",
      "id": "c2d8f6c13d75d59e4649361666cb0b1d"
    },
    {
      "type": "html",
      "text": " 3. Perform the measurements of the factors",
      "id": "762a2bbf16ce6e70577721d008d56030"
    },
    {
      "type": "html",
      "text": " 4. Show the results of the measurements and weigh them against the importance rankings in 2.",
      "id": "670f21243f1a3705f15e113d6db1c70d"
    },
    {
      "type": "html",
      "text": " 5. The tool with the best score is considered the \"best known tool\".",
      "id": "1405c2f705ae8d712902595c190d30f4"
    },
    {
      "type": "html",
      "text": "\nAs usual, the devil's in the details.",
      "id": "608fd64f7549c26b1ddde5a5c5ad1c02"
    },
    {
      "type": "html",
      "text": "--top",
      "id": "7cd63d8ece0267644fc0bba873e76383"
    },
    {
      "type": "html",
      "text": "<i>The set of rankings in Item 2 is inevitably based on -- and biased by -- individual perspective.  An HR director may consider human resource costs to be the most important, whilst an engineer may consider reliability to be the most important.  An accountant may consider return on investment to be the most important, whilst a medical doctor may consider health and safety to be the most important.  And so on.  As such, you've defined \"best tool\" by an individual set of rankings.  In other words, if I do Step 2, it only qualifies what <b>I</b> think is the best tool.  How do you determine the \"best tool\" across <b>all</b> the -- potentially highly variable -- possible rankings?  In short, given a set of individual Step 2 rankings, who gets the most weight -- the HR director, the engineer, the accountant, or the medical doctor -- and how do you decide?</i>",
      "id": "3e2e317313e0bccb58f818077ba6d99d"
    },
    {
      "type": "html",
      "text": "\nUltimately the owner of the \"shop\" that owns the software has the final say. (Software user satisfaction is sometimes used instead.) Ideally we'd spend a lot of time interviewing everybody and have many meetings to determine and negotiate the factors and weightings among <i>all the parties</i> you listed, with the owner(s) making the final decisions. <b>In practice</b> such an extensive interaction process is NOT going to happen, and thus software design analysts will have to make their best guess about many owner preferences on based on experience and indirect clues.",
      "id": "57d9c8677d5a9e3480331726f8c5d479"
    },
    {
      "type": "html",
      "text": "\nI will describe what I believe the owner would care about if they had the time to investigate, based on my experience in the industry about what they like and don't like. True, my statements of observation will probably differ from other [[Wiki Zens]], as we have seen. That's fine: all \"sides\" give their opinion about what trade-off profile the owner will likely/typically want, and then we can [[Let The Reader Decide]] whose opinion and analysis they value most or best fit the style of their own organization. No need to make it into something personal. We can still create \"models\" where the input parameters (weightings) are supplied by readers. Thus, an incomplete model may still be of use.",
      "id": "0f96a06ac0d18d6b4a81529a3aa3ab29"
    },
    {
      "type": "html",
      "text": "\nBut some try to steer the discussion away from owner preference and suggest [[Argument By Elegance]] should play a bigger role since estimating the owner preferences is difficult. But that's [[Soviet Shoe Factory Principle]] in play: just because, say parsimony (code size), is easier to measure than most factors doesn't mean it's the <i>most</i> important factor. Unfortunately, the importance of factors and their ease of measurement appear unrelated. That's just the ugly truth of complex tool measurements in our universe and God/Mother-Nature is not going to make it easier for us. -t",
      "id": "7d00a0db4f92c736e12bfeb3c4c9af59"
    },
    {
      "type": "html",
      "text": "<i>How does determining \"what ... the owner would care about if they had the time to investigate\" differ from the question I identified above: Who gets the most weight -- the HR director, the engineer, the accountant, or the medical doctor -- and how do you decide?</i>",
      "id": "dd28b823221cbed1fe2fe7072797c67a"
    },
    {
      "type": "html",
      "text": "\nI don't understand your question. I suppose [[Everything Is Relative]], but in a mostly-capitalistic system, it's typical to use <b>the people who pay you</b> as the reference point. After all, if you don't give them what you want, you (eventually) won't get paid. That's the working assumption I am going to use. If you want to optimize it for the gardener of the building, or whoever, that's your prerogative, but few are going to pay attention to the results.",
      "id": "4d9bf5bae0987b5768969bc2f2996021"
    },
    {
      "type": "html",
      "text": "<i>I agree, if you don't give the [[Gold Owner]] what he/she wants, you won't get paid.  However, that doesn't mean the [[Gold Owner]] has any idea whose views amongst his/her employees -- the HR director, the engineer, the accountant, or the medical doctor -- should get the most weight. The people who pay you aren't smarter than you, and often they're relying on your expertise -- in software and IT -- that they do not possess.  As the hired expert, I've been asked for my recommendations, advice, or even asked to make the decision on behalf of the [[Gold Owner]].  What he/she usually wants is the greatest success with the least risk, but determining that is usually a matter of deciding whose (presumably) expert views amongst the team gets the most weight.</i>",
      "id": "d341878f5658ae6a90917eca94e33575"
    },
    {
      "type": "html",
      "text": "<i>What you call [[Argument By Elegance]], by the way, is generally shorthand for aspects of software and systems -- reliability, provability, composability, security, reusability, flexibility, readability and so on -- that directly impact factors important to business, like time-to-market, maintenance costs, customer satisfaction, product quality, etc.</i>",
      "id": "8f8fd11c916e458a4ecbe05494e2cdff"
    },
    {
      "type": "html",
      "text": "\nYes, they are factors; nobody's disputing that. But we are balancing them against each other and against time and costs. Related: [[Incompatible Goals]]",
      "id": "d308268e0deb124534e5ac41cfebab69"
    },
    {
      "type": "html",
      "text": "<i>They are important factors.  Sometimes, you appear to deprecate them.</i>",
      "id": "f2d5184477a861cbc060ddde0001d386"
    },
    {
      "type": "html",
      "text": "\nSometimes you appear to artificially inflate their value.",
      "id": "45398fbe9ac26001a6be65c3d8f02763"
    },
    {
      "type": "html",
      "text": "<i>Sometimes you appear to disregard their genuine value.</i>",
      "id": "ff015007cc1b71ad193772049f4ea33b"
    },
    {
      "type": "html",
      "text": "\nGet better and clear evidence for \"genuine value\". Your evidence is often round-about and indirect; the kind Rube Goldberg would use if he were a scientist. Or, detached from economics and/or reality in an [[Assume Can Opener]] like fashion.",
      "id": "c38ded3ad891289ddc6d1286e2a82d59"
    },
    {
      "type": "html",
      "text": "<i>Clear evidence has frequently been provided for \"genuine value\".  Mostly, you quibble about it, or introduce irrelevancies like the ill-defined ad-hoc use of qualitative-opinion-with-quantitative-badges that you like to call \"economics\".</i>",
      "id": "e4ffbdf670f2762fc5dbeb8873b068cb"
    },
    {
      "type": "html",
      "text": "\nDemonstrate they are \"irrelevant\". Difficult to measure, yes, but being difficult to measure is not the same as being irrelevant. [[Soviet Shoe Factory Principle]]. For example, symbolic parsimony is relatively easy to measure, but that doesn't mean we should always favor symbolic parsimony over other factors, such as grokkability even though grokkability by developers is an important factor by most accounts. It appears you often favor the \"math view\" over grokkability JUST because grokkability is difficult to analyze as math, and are thus committing the mistake described in [[Soviet Shoe Factory Principle]]. If you prove grokkability doesn't matter, I will ignore it. If you prove economics doesn't matter, I will ignore it. <b>You indeed have made a good case that they are difficult to measure, but NOT that they are irrelevant factors</b> (or even minor factors). I don't dispute that grokkability is difficult to measure such that pointing that out over and over, such as above, doesn't add anything new to these discussions. That's not the point of contention, yet you keep repeating those complaints. That's annoying and textually wasteful. Please stop. --top",
      "id": "e5923d0768e675c64b7c7ef5b120acfe"
    },
    {
      "type": "html",
      "text": "\n[[Page Anchor]] grokkability-01",
      "id": "c1013d5e5da2b75b1e3991d7313eaaa5"
    },
    {
      "type": "html",
      "text": "<i>Until there is some definitive indication that your economic concerns are relevant, they are mere water-cooler talk, and mainly a statement of personal preference that you use to deprecate certain programming paradigms.  Of what possible relevance is your personal preference?</i>",
      "id": "08283eafc7be91e14fba5d312731787f"
    },
    {
      "type": "html",
      "text": "\nWhat ARE the relevant concerns then? [[Dont Complain Without Alternatives]]. You are just as obligated as me to show that your favorite factors are relevant. <b>There are no defaults</b>. And I don't know what you are talking about regarding \"personal preference\". You appear to be cross-confusing subjects. Grokkability is not the same as preference. (Although, preference can be a short-hand [[Proxy Factor]] for grokkability when direct measurement is not feasible.) -t",
      "id": "7637e943c400cb060bbb394e681aa84c"
    },
    {
      "type": "html",
      "text": "<i>The relevant concerns are reliability, robustness, optimisability, durability, isolation, flexibility, composability, expressiveness, parsimony, provability, performance, resource consumption, extensibility, coupling, cohesion, etc.</i>",
      "id": "3e61b22b73f9dde14bdb2cdb2cfcf6c2"
    },
    {
      "type": "html",
      "text": "\nOkay, but how does one <b>measure</b> those in a practical way and with practical meaning? For example, all else being equal, one wants \"provability\" over non-provability, but it must be weighed against other factors. If obtaining provability affects other factors, such as cost (economics), then it's not helping the net goal of the person/org that wants the software. Provability by itself is not something the end-user is concerned with because the existence of provability by itself does not deliver characteristics the end-user can see. It may increase the quality of the software (fitting requirements) but is not the only way, and may hurt other factors in the process.",
      "id": "9178d5fcbc8ab7ce16474b1329f785b4"
    },
    {
      "type": "html",
      "text": "<i>Defining metrics is typically done on a study-by-study basis, because there are no absolute metrics for reliability, durability, etc.  However, in an individual study these can be precisely defined.  For example, a casual study some years ago compared the durability of a number of commercial DBMSs by running a SQL script to insert a batch of data and then pulling the plug on the machine.  They were then compared by how quickly they returned to normal use (or whether they did -- several didn't) and how much, if any, data was lost.</i>",
      "id": "e98c0edf36b1cacf1665721b48ffd8f7"
    },
    {
      "type": "html",
      "text": "<i>The weighting of various factors, if multiple ones are measured at once, is up to the reader.  Such weightings almost invariably depend on individual requirements.</i>",
      "id": "8bdc889fdca796af75da5b43f70c04b4"
    },
    {
      "type": "html",
      "text": "\nAnd you left out code grokkability from your list, which probably affects about half of your list, at least. Software that cannot be grokked by existing staff is not very \"flexible\" in practice, for example. <b>You appear to want to only analyze symbols instead of human reaction to symbols,</b> which is missing the mark because the primary [[Purpose Of Programming]] is to communicate with human beings, not machines nor mathematicians (those are secondary concerns). It should be optimized for the human head, not for symbol-only-sake. <b>Symbols and formulas don't maintain software, humans do</b>. Optimizing symbols for say parsimony will not necessarily translate to improvement of the step of human communication (maintenance). ",
      "id": "914254eeefcac6b7c1b621f8205781a4"
    },
    {
      "type": "html",
      "text": "<i>Grokkability is subjective (e.g., Java seems more grokkable than [[Brain Fuck]], but try measuring how much) but perhaps the easiest factor to refine -- if you produce syntax that is difficult to grok, someone will suggest better syntax.</i>",
      "id": "d0f6a6e8ba52a8cb155e17226eccce9b"
    },
    {
      "type": "html",
      "text": "\nIt's <i>not</i> subjective, just difficult to measure. And as a reminder, difficulty in measuring is not necessarily related to importance level of the factor. And \"suggesting better syntax\" is often how these kinds of arguments start: what is \"better\". Further, grokkability is not just syntax, but also aggregate code construction.",
      "id": "d894d7783fec922e0ce1b420870340f5"
    },
    {
      "type": "html",
      "text": "<i>What's grokkable to me might not be grokkable to you, and vice versa.  That makes it subjective.  Of course, we can test large populations to see whether they consider some software to be grokkable or not and therefore see if, on average, it is perceived to be grokkable.  Similar studies are currently used to determine user friendliness.  However, low grokkability may mean using the software requires expertise.  A significant proportion of the population would find flying a fighter plane to be difficult to grok, but because we need fighter pilots, the lack of grokkability is considered acceptable.  The same applies to software, and as with the other factors, the weighting of grokkability vs the other factors is up to the decision maker.</i>",
      "id": "fc0f41544340dccb93a82b5cde4ab9fb"
    },
    {
      "type": "html",
      "text": "\nWe can say that measuring grokkability is objective within a group or group profile. (Note that you shouldn't typically be writing paid software that <i>only</i> you can grok.) And I do agree there are domains or projects where other factors outweigh grokkability. To keep to a workable or semi-defined scope, I'll consider typical custom in-house business applications, rather than say life support software for NASA missions or even [[Systems Software]] where quality trumps speedy grokking. The trade-off profiles for those are different. -t",
      "id": "b33e7b42e07122c20ce9943cf35b52f8"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2e842456efcbfc3b98c3df63dc9bad20"
    },
    {
      "type": "html",
      "text": "A common point of contention is that based on my experience, organizations typically value [[Plug Compatible Interchangeable Engineers]] far more than \"elegance\" and parsimony. \"Excess\" abstraction causes them staffing problems. See [[Great Lisp War]] and [[Staffing Economics Versus Theoretical Elegance]] for more. Some [[Wiki Zens]] claim I'm wrong. I suspect their specialty/background in intricate statistical and optimization-like projects biases their observations about staffing, but perhaps my background does also. That's fine, <b>let both viewpoints live</b>. -t",
      "id": "d206095ef24e3d51dc3c3a6bdf10ae60"
    },
    {
      "type": "html",
      "text": "<i>Indeed, I suspect your speciality/background in record-keeping and reporting for non-IT organisations biases your observations about staffing.  We're probably both right -- for the type of organisations with/for whom we've worked and work.</i>",
      "id": "1a1d25e9b1edc55a9881bd0f7ba0b302"
    },
    {
      "type": "html",
      "text": "\nPerhaps, but roughly 90% of organizations are not directly IT-related; thus, if I am biased because of that, then it affects a relatively small percent. (\"Record keeping\"?)",
      "id": "a9e3d6cf12d53a35ad261e9ffd5b1fff"
    },
    {
      "type": "html",
      "text": "<i>100% of IT products are based directly on [[Computer Science]], so the issues that you claim \"affects a relatively small percent\" actually affect everyone.</i>",
      "id": "bf439f45d96b56ad3ad4e02ebb8feb17"
    },
    {
      "type": "html",
      "text": "\nBullshit! The industry selected what it \"liked\" among academic experiments and discarded others. Computer science <b>almost NEVER</b> proved software tool A was \"better than\" tool B, outside of machine performance issues. (Somewhere there is a similar topic.)",
      "id": "223779f47e1ed5cf6506f447a783b57e"
    },
    {
      "type": "html",
      "text": "<i>Who said anything about [[Computer Science]] \"proving\" (science doesn't do that) software tool A was \"better than\" (define \"better\") tool B?  That's like using science to prove hammers are better than screwdrivers, or that Stanley screwdrivers are better than Craftsman screwdrivers.  The former doesn't make sense, and the latter nobody cares.  Every industry product is based on [[Computer Science]] whether it admits it (or recognises it) or not, and has fundamental qualities (or not) of reliability, robustness, performance, flexibility, extensibility, etc., as a direct result of its adherence (or not) to the discoveries and principles of [[Computer Science]].</i>",
      "id": "f3b7ae8bbce0215a29b05ea76bde4aaf"
    },
    {
      "type": "html",
      "text": " In terms of machine performance, I agree. But not in terms of <i>software</i> maintenance. If you disagree, please provide a good example.",
      "id": "f3b84e783c2d8b3887d4b85313f7d7dc"
    },
    {
      "type": "html",
      "text": " <i>\"Software maintenance\" has nothing to do with [[Computer Science]].  It is an aspect of [[Software Engineering]].  Search scholar.google.com for \"software maintenance\" to find about 80,000 citations.</i>",
      "id": "8f313a2156fce329802cc2c340c51e1d"
    },
    {
      "type": "html",
      "text": " The topic is \"science\", not necessarily \"computer science\".",
      "id": "3e356cbc49a28a4766cac9358aa632c4"
    },
    {
      "type": "html",
      "text": " <i>That's fine, but my response was to your comment that \"<b>Computer science</b> almost NEVER proved software tool A was \"better than\" tool B, outside of machine performance issues.\"</i>",
      "id": "2d3ed3788d93dcd955a761014475333b"
    },
    {
      "type": "html",
      "text": " Most of the heated debates on this wiki are about whether one tool is \"better\" than another. If \"computer science\" is not designed and/or intended to answer that, then it's unhelpful and off-topic. I didn't bring up the topic of \"computer science\" here. It harkens back to the original questilyingon: <b>Can science help us select among multiple tools?</b> If yes, how, and what are examples in and outside of IT? If no, what do we do instead to select?",
      "id": "5ea53c79db6a218138ffd813de65cc11"
    },
    {
      "type": "html",
      "text": "\nI will agree that academia has been a great engine for idea production, but has done a piss-poor job of providing rigor to compare these ideas in terms of productive (economic) tools.",
      "id": "92c0627c0a86461fb11425ec83604938"
    },
    {
      "type": "html",
      "text": "<i>You can't really say [[Computer Science]] has done a \"piss-poor job of providing rigor to compare these ideas\", because it hasn't done it and never will.  It's not what [[Computer Science]] is about.  At best, it's a [[Project Management]] concern, or a business concern.  Take university business schools to task for not rigorously studying the business productivity impact of using C# vs Java or [[Higher Order Functions]] vs not using [[Higher Order Functions]]; to [[Computer Science]] and [[Software Engineering]] they're irrelevant.</i>",
      "id": "624c20b18ad2ae7231b6f1bb816f7895"
    },
    {
      "type": "html",
      "text": "\nThat's why a multi-disciplinary education is important. Those who only study X will see the world only from X's perspective.",
      "id": "cb28680aa3e2c1780f7b26c50dd06637"
    },
    {
      "type": "html",
      "text": "<i>A multi-disciplinary education is an excellent idea, but economics no more belongs in [[Computer Science]] than religion belongs in physics.</i>",
      "id": "2ef07d37c3e2403cb97f9ed92776f4cf"
    },
    {
      "type": "html",
      "text": "\nThe topic is \"science\", not necessarily \"computer science\". (I'm not sure \"computer science\" has a clear meaning anyhow.)",
      "id": "46e1f1ee84de5bc2e9cc23b650b03dc8"
    },
    {
      "type": "html",
      "text": "<i>Again, search scholar.google.com for \"software maintenance\" to find about 80,000 citations.</i>",
      "id": "376f8d7199cd8d7211c2f7d913f107b8"
    },
    {
      "type": "html",
      "text": "\nIf that resource has something specific to a given debate topic, then by all means, bring it up. Note that in general I see a dearth of actual <b>in-field testing</b> of a lot of suggestions or models of maintenance. In other words, there's not a lot of direct road testing of whether technique X actually makes a shop more productive/profitable than X's competitors. That kind of research is expensive and difficult, and simplified proxy studies in place of road-testing should be taken with a grain of salt. A lot of it is also vendors trying to sell you consulting services via buzzwords and catch-phrases. -t",
      "id": "8786df75d8a5d44b3af85eda417706f9"
    },
    {
      "type": "html",
      "text": "<i>Did you try searching scholar.google.com?  You might be surprised what you'd find.  A lot of it isn't vendors selling anything.</i>",
      "id": "4ce492583b141c0dd32d20679747d899"
    },
    {
      "type": "html",
      "text": " Yes.",
      "id": "4fa47f6807a9b7f58aa5d618fe692694"
    },
    {
      "type": "html",
      "text": "<i>As for comparing productivity of tools, there is a morass of complexities and obstacles to making such research come anywhere near valid, and the results will almost inevitably be weakly conclusive.  Comparing [[Brain Fuck]] to [[Java Language]] would almost certainly produce fairly conclusive results in a productivity study.  Haskell vs C# almost certainly wouldn't.</i>",
      "id": "7301d8b4963ce3cf9c4df4456a96b875"
    },
    {
      "type": "html",
      "text": "\nYes, comparing complex tools is usually not easy. That's not news. The real issue is what to do about it on this wiki.",
      "id": "4622e89a01045f8fef9eff913f7c2a96"
    },
    {
      "type": "html",
      "text": "<i>The best thing to do on this wiki is not do it.  Comparing tools only leads to [[Religious War]].  And let's imagine a series of studies definitively show that Haskell is 32% more productive than Java.  Does that mean we should stop discussing Java because we should all use Haskell?</i>",
      "id": "ccaea7e4007b1752ed63828ce8cdefdc"
    },
    {
      "type": "html",
      "text": " But it's a <b>key issue of [[Software Engineering]]</b>. [[Software Engineering]] is about making decisions, and those decisions involve comparing tools/techniques/paradigms. (Note that I include methodologies among \"tools\", not just languages.) Just because it's a difficult question doesn't mean we shouldn't ask. -t",
      "id": "e890b008da0da75b94c0a4e865ec9410"
    },
    {
      "type": "html",
      "text": " <i>Indeed, but getting a trustworthy answer is magnificently difficult and expensive.</i>",
      "id": "d51b86cb79ef1a6e2ab540c9406dc0cf"
    },
    {
      "type": "html",
      "text": " I see no viable alternative such that we are stuck with messy [[Proxy Factor]]s for now.",
      "id": "32e477bb0583fcb5246e4af5b15534bb"
    },
    {
      "type": "html",
      "text": "{Haskell and Java are different enough that this isn't a good analogy, but sometimes a tool is better for all purposes than another tool, and so the old tool is abandoned. Does anyone write in ALGOL anymore?}",
      "id": "3a52a1c628f0fe4933d03324f7867544"
    },
    {
      "type": "html",
      "text": "<i>Why aren't Haskell and Java comparable -- they're both general purpose development tools?  Was ALGOL abandoned because it wasn't good enough, or because fashion changed?  How do you define \"better for all purposes\"?</i>",
      "id": "9520dbbbf97f5a7a34ba5d4b6d363696"
    },
    {
      "type": "html",
      "text": "<i> <b>Any</b> comparison of tools will raise questions like these, and none of them can be answered with logic, and all lead to fruitless debate.  Ultimately, we choose the tools we prefer, or the tools someone else prefers are imposed on us.  Preference is powerful and illogical; even the most potent logical argument in favour of product A will not sway a user to use product B if they like B.  Such arguments are like trying to convince a person who doesn't like broccoli to like broccoli because it's healthy.  How often does that work?</i>",
      "id": "b20dd09875b6b536a9801901632ad510"
    },
    {
      "type": "html",
      "text": "<i>Telling someone that they shouldn't use tool A when they like tool A is even worse.  That doesn't work at all.</i>",
      "id": "c352d5102c051cc6b059aadb6298d6d5"
    },
    {
      "type": "html",
      "text": "<i>At best, when we find a tool we like, we should tell others that it exists and tell them why we like it.  Maybe they'll like it too, or maybe they won't, but that's all we can do.  If they use tools we don't like, there's no point in even telling them -- they're not going to change their minds.  There are better things to do, and better things to discuss.</i>",
      "id": "269041a0181c0ef6d4bb87af64ce1ff3"
    },
    {
      "type": "html",
      "text": "\nRemember that one is typically writing software for <i>other</i> maintainers, not oneself. Your own preferences may not migrate to others. -t",
      "id": "99b0dac586f1c3cebaea4e507ea48fd2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2e842456efcbfc3b98c3df63dc9bad20"
    },
    {
      "type": "html",
      "text": "See also: [[Fake Industry Canon]]",
      "id": "e84420b123529f6c0ea89d40d80a4b22"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2e842456efcbfc3b98c3df63dc9bad20"
    },
    {
      "type": "html",
      "text": "[[Category Science]], [[Category Philosophy]]",
      "id": "5cb263d364882fcebfa143095442e58b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2e842456efcbfc3b98c3df63dc9bad20"
    },
    {
      "type": "html",
      "text": "[[December Fourteen]]",
      "id": "9dfa53f37082ba6f3b14093734fedd56"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ScienceAndTools c2.com]",
      "id": "f081c926e2220ea470acaf0bca63eaed"
    }
  ],
  "journal": [
    {
      "date": 1419370555000,
      "id": "23c687b40f4ca9b74879b7d2e9a8eaa6",
      "type": "create",
      "item": {
        "title": "Science And Tools",
        "story": [
          {
            "type": "html",
            "text": "Can science help us select among multiple tools/methodologies?",
            "id": "d65c76698cffcfedbe83b7336fac8263"
          },
          {
            "type": "html",
            "text": "\nScience used for understanding and predicting the physical world is for the most part uncontroversial among [[Wiki Zens]]. You observe nature, form hypotheses/models to explain or predict nature, test these models against observations related to the differences in the models, and the best-fitting model is labelled as such. If multiple models match roughly equal, then the simplest model gets preference. If all the candidates are poor, then keep looking for new or reworked hypotheses.",
            "id": "dbd13240595e938affd4686621e512a8"
          },
          {
            "type": "html",
            "text": "\nBut on this wiki we are often talking about tools, not nature. The question is <b>how can science determine the best tool</b>? What exactly the model is supposed to best \"fit\" is contentious, especially for software. Some want to view it like math and find the most \"elegant\" solution, perhaps using some kind of parsimony metric. Others lean toward improving the productivity of the \"user\" of the tool, which is typically a maintenance programmer. But \"productivity\" is tricky to measure and often gets into economics, organizational dynamics, and [[Wet Ware]].",
            "id": "cecf4e9c757fc1d7ada5aadfac58d6b6"
          },
          {
            "type": "html",
            "text": "\nAs a starting point, I propose this as the \"scientific method\" for testing tools:",
            "id": "fb35a56db083223793590b6c8064d3a6"
          },
          {
            "type": "html",
            "text": " 1. Describe the factors being optimized for",
            "id": "f1b62447b8369a07a60bb3c65e00b3ad"
          },
          {
            "type": "html",
            "text": " 2. Rank the factors by importance, carefully describing the reasoning for such importance rankings.",
            "id": "c2d8f6c13d75d59e4649361666cb0b1d"
          },
          {
            "type": "html",
            "text": " 3. Perform the measurements of the factors",
            "id": "762a2bbf16ce6e70577721d008d56030"
          },
          {
            "type": "html",
            "text": " 4. Show the results of the measurements and weigh them against the importance rankings in 2.",
            "id": "670f21243f1a3705f15e113d6db1c70d"
          },
          {
            "type": "html",
            "text": " 5. The tool with the best score is considered the \"best known tool\".",
            "id": "1405c2f705ae8d712902595c190d30f4"
          },
          {
            "type": "html",
            "text": "\nAs usual, the devil's in the details.",
            "id": "608fd64f7549c26b1ddde5a5c5ad1c02"
          },
          {
            "type": "html",
            "text": "--top",
            "id": "7cd63d8ece0267644fc0bba873e76383"
          },
          {
            "type": "html",
            "text": "<i>The set of rankings in Item 2 is inevitably based on -- and biased by -- individual perspective.  An HR director may consider human resource costs to be the most important, whilst an engineer may consider reliability to be the most important.  An accountant may consider return on investment to be the most important, whilst a medical doctor may consider health and safety to be the most important.  And so on.  As such, you've defined \"best tool\" by an individual set of rankings.  In other words, if I do Step 2, it only qualifies what <b>I</b> think is the best tool.  How do you determine the \"best tool\" across <b>all</b> the -- potentially highly variable -- possible rankings?  In short, given a set of individual Step 2 rankings, who gets the most weight -- the HR director, the engineer, the accountant, or the medical doctor -- and how do you decide?</i>",
            "id": "3e2e317313e0bccb58f818077ba6d99d"
          },
          {
            "type": "html",
            "text": "\nUltimately the owner of the \"shop\" that owns the software has the final say. (Software user satisfaction is sometimes used instead.) Ideally we'd spend a lot of time interviewing everybody and have many meetings to determine and negotiate the factors and weightings among <i>all the parties</i> you listed, with the owner(s) making the final decisions. <b>In practice</b> such an extensive interaction process is NOT going to happen, and thus software design analysts will have to make their best guess about many owner preferences on based on experience and indirect clues.",
            "id": "57d9c8677d5a9e3480331726f8c5d479"
          },
          {
            "type": "html",
            "text": "\nI will describe what I believe the owner would care about if they had the time to investigate, based on my experience in the industry about what they like and don't like. True, my statements of observation will probably differ from other [[Wiki Zens]], as we have seen. That's fine: all \"sides\" give their opinion about what trade-off profile the owner will likely/typically want, and then we can [[Let The Reader Decide]] whose opinion and analysis they value most or best fit the style of their own organization. No need to make it into something personal. We can still create \"models\" where the input parameters (weightings) are supplied by readers. Thus, an incomplete model may still be of use.",
            "id": "0f96a06ac0d18d6b4a81529a3aa3ab29"
          },
          {
            "type": "html",
            "text": "\nBut some try to steer the discussion away from owner preference and suggest [[Argument By Elegance]] should play a bigger role since estimating the owner preferences is difficult. But that's [[Soviet Shoe Factory Principle]] in play: just because, say parsimony (code size), is easier to measure than most factors doesn't mean it's the <i>most</i> important factor. Unfortunately, the importance of factors and their ease of measurement appear unrelated. That's just the ugly truth of complex tool measurements in our universe and God/Mother-Nature is not going to make it easier for us. -t",
            "id": "7d00a0db4f92c736e12bfeb3c4c9af59"
          },
          {
            "type": "html",
            "text": "<i>How does determining \"what ... the owner would care about if they had the time to investigate\" differ from the question I identified above: Who gets the most weight -- the HR director, the engineer, the accountant, or the medical doctor -- and how do you decide?</i>",
            "id": "dd28b823221cbed1fe2fe7072797c67a"
          },
          {
            "type": "html",
            "text": "\nI don't understand your question. I suppose [[Everything Is Relative]], but in a mostly-capitalistic system, it's typical to use <b>the people who pay you</b> as the reference point. After all, if you don't give them what you want, you (eventually) won't get paid. That's the working assumption I am going to use. If you want to optimize it for the gardener of the building, or whoever, that's your prerogative, but few are going to pay attention to the results.",
            "id": "4d9bf5bae0987b5768969bc2f2996021"
          },
          {
            "type": "html",
            "text": "<i>I agree, if you don't give the [[Gold Owner]] what he/she wants, you won't get paid.  However, that doesn't mean the [[Gold Owner]] has any idea whose views amongst his/her employees -- the HR director, the engineer, the accountant, or the medical doctor -- should get the most weight. The people who pay you aren't smarter than you, and often they're relying on your expertise -- in software and IT -- that they do not possess.  As the hired expert, I've been asked for my recommendations, advice, or even asked to make the decision on behalf of the [[Gold Owner]].  What he/she usually wants is the greatest success with the least risk, but determining that is usually a matter of deciding whose (presumably) expert views amongst the team gets the most weight.</i>",
            "id": "d341878f5658ae6a90917eca94e33575"
          },
          {
            "type": "html",
            "text": "<i>What you call [[Argument By Elegance]], by the way, is generally shorthand for aspects of software and systems -- reliability, provability, composability, security, reusability, flexibility, readability and so on -- that directly impact factors important to business, like time-to-market, maintenance costs, customer satisfaction, product quality, etc.</i>",
            "id": "8f8fd11c916e458a4ecbe05494e2cdff"
          },
          {
            "type": "html",
            "text": "\nYes, they are factors; nobody's disputing that. But we are balancing them against each other and against time and costs. Related: [[Incompatible Goals]]",
            "id": "d308268e0deb124534e5ac41cfebab69"
          },
          {
            "type": "html",
            "text": "<i>They are important factors.  Sometimes, you appear to deprecate them.</i>",
            "id": "f2d5184477a861cbc060ddde0001d386"
          },
          {
            "type": "html",
            "text": "\nSometimes you appear to artificially inflate their value.",
            "id": "45398fbe9ac26001a6be65c3d8f02763"
          },
          {
            "type": "html",
            "text": "<i>Sometimes you appear to disregard their genuine value.</i>",
            "id": "ff015007cc1b71ad193772049f4ea33b"
          },
          {
            "type": "html",
            "text": "\nGet better and clear evidence for \"genuine value\". Your evidence is often round-about and indirect; the kind Rube Goldberg would use if he were a scientist. Or, detached from economics and/or reality in an [[Assume Can Opener]] like fashion.",
            "id": "c38ded3ad891289ddc6d1286e2a82d59"
          },
          {
            "type": "html",
            "text": "<i>Clear evidence has frequently been provided for \"genuine value\".  Mostly, you quibble about it, or introduce irrelevancies like the ill-defined ad-hoc use of qualitative-opinion-with-quantitative-badges that you like to call \"economics\".</i>",
            "id": "e4ffbdf670f2762fc5dbeb8873b068cb"
          },
          {
            "type": "html",
            "text": "\nDemonstrate they are \"irrelevant\". Difficult to measure, yes, but being difficult to measure is not the same as being irrelevant. [[Soviet Shoe Factory Principle]]. For example, symbolic parsimony is relatively easy to measure, but that doesn't mean we should always favor symbolic parsimony over other factors, such as grokkability even though grokkability by developers is an important factor by most accounts. It appears you often favor the \"math view\" over grokkability JUST because grokkability is difficult to analyze as math, and are thus committing the mistake described in [[Soviet Shoe Factory Principle]]. If you prove grokkability doesn't matter, I will ignore it. If you prove economics doesn't matter, I will ignore it. <b>You indeed have made a good case that they are difficult to measure, but NOT that they are irrelevant factors</b> (or even minor factors). I don't dispute that grokkability is difficult to measure such that pointing that out over and over, such as above, doesn't add anything new to these discussions. That's not the point of contention, yet you keep repeating those complaints. That's annoying and textually wasteful. Please stop. --top",
            "id": "e5923d0768e675c64b7c7ef5b120acfe"
          },
          {
            "type": "html",
            "text": "\n[[Page Anchor]] grokkability-01",
            "id": "c1013d5e5da2b75b1e3991d7313eaaa5"
          },
          {
            "type": "html",
            "text": "<i>Until there is some definitive indication that your economic concerns are relevant, they are mere water-cooler talk, and mainly a statement of personal preference that you use to deprecate certain programming paradigms.  Of what possible relevance is your personal preference?</i>",
            "id": "08283eafc7be91e14fba5d312731787f"
          },
          {
            "type": "html",
            "text": "\nWhat ARE the relevant concerns then? [[Dont Complain Without Alternatives]]. You are just as obligated as me to show that your favorite factors are relevant. <b>There are no defaults</b>. And I don't know what you are talking about regarding \"personal preference\". You appear to be cross-confusing subjects. Grokkability is not the same as preference. (Although, preference can be a short-hand [[Proxy Factor]] for grokkability when direct measurement is not feasible.) -t",
            "id": "7637e943c400cb060bbb394e681aa84c"
          },
          {
            "type": "html",
            "text": "<i>The relevant concerns are reliability, robustness, optimisability, durability, isolation, flexibility, composability, expressiveness, parsimony, provability, performance, resource consumption, extensibility, coupling, cohesion, etc.</i>",
            "id": "3e61b22b73f9dde14bdb2cdb2cfcf6c2"
          },
          {
            "type": "html",
            "text": "\nOkay, but how does one <b>measure</b> those in a practical way and with practical meaning? For example, all else being equal, one wants \"provability\" over non-provability, but it must be weighed against other factors. If obtaining provability affects other factors, such as cost (economics), then it's not helping the net goal of the person/org that wants the software. Provability by itself is not something the end-user is concerned with because the existence of provability by itself does not deliver characteristics the end-user can see. It may increase the quality of the software (fitting requirements) but is not the only way, and may hurt other factors in the process.",
            "id": "9178d5fcbc8ab7ce16474b1329f785b4"
          },
          {
            "type": "html",
            "text": "<i>Defining metrics is typically done on a study-by-study basis, because there are no absolute metrics for reliability, durability, etc.  However, in an individual study these can be precisely defined.  For example, a casual study some years ago compared the durability of a number of commercial DBMSs by running a SQL script to insert a batch of data and then pulling the plug on the machine.  They were then compared by how quickly they returned to normal use (or whether they did -- several didn't) and how much, if any, data was lost.</i>",
            "id": "e98c0edf36b1cacf1665721b48ffd8f7"
          },
          {
            "type": "html",
            "text": "<i>The weighting of various factors, if multiple ones are measured at once, is up to the reader.  Such weightings almost invariably depend on individual requirements.</i>",
            "id": "8bdc889fdca796af75da5b43f70c04b4"
          },
          {
            "type": "html",
            "text": "\nAnd you left out code grokkability from your list, which probably affects about half of your list, at least. Software that cannot be grokked by existing staff is not very \"flexible\" in practice, for example. <b>You appear to want to only analyze symbols instead of human reaction to symbols,</b> which is missing the mark because the primary [[Purpose Of Programming]] is to communicate with human beings, not machines nor mathematicians (those are secondary concerns). It should be optimized for the human head, not for symbol-only-sake. <b>Symbols and formulas don't maintain software, humans do</b>. Optimizing symbols for say parsimony will not necessarily translate to improvement of the step of human communication (maintenance). ",
            "id": "914254eeefcac6b7c1b621f8205781a4"
          },
          {
            "type": "html",
            "text": "<i>Grokkability is subjective (e.g., Java seems more grokkable than [[Brain Fuck]], but try measuring how much) but perhaps the easiest factor to refine -- if you produce syntax that is difficult to grok, someone will suggest better syntax.</i>",
            "id": "d0f6a6e8ba52a8cb155e17226eccce9b"
          },
          {
            "type": "html",
            "text": "\nIt's <i>not</i> subjective, just difficult to measure. And as a reminder, difficulty in measuring is not necessarily related to importance level of the factor. And \"suggesting better syntax\" is often how these kinds of arguments start: what is \"better\". Further, grokkability is not just syntax, but also aggregate code construction.",
            "id": "d894d7783fec922e0ce1b420870340f5"
          },
          {
            "type": "html",
            "text": "<i>What's grokkable to me might not be grokkable to you, and vice versa.  That makes it subjective.  Of course, we can test large populations to see whether they consider some software to be grokkable or not and therefore see if, on average, it is perceived to be grokkable.  Similar studies are currently used to determine user friendliness.  However, low grokkability may mean using the software requires expertise.  A significant proportion of the population would find flying a fighter plane to be difficult to grok, but because we need fighter pilots, the lack of grokkability is considered acceptable.  The same applies to software, and as with the other factors, the weighting of grokkability vs the other factors is up to the decision maker.</i>",
            "id": "fc0f41544340dccb93a82b5cde4ab9fb"
          },
          {
            "type": "html",
            "text": "\nWe can say that measuring grokkability is objective within a group or group profile. (Note that you shouldn't typically be writing paid software that <i>only</i> you can grok.) And I do agree there are domains or projects where other factors outweigh grokkability. To keep to a workable or semi-defined scope, I'll consider typical custom in-house business applications, rather than say life support software for NASA missions or even [[Systems Software]] where quality trumps speedy grokking. The trade-off profiles for those are different. -t",
            "id": "b33e7b42e07122c20ce9943cf35b52f8"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2e842456efcbfc3b98c3df63dc9bad20"
          },
          {
            "type": "html",
            "text": "A common point of contention is that based on my experience, organizations typically value [[Plug Compatible Interchangeable Engineers]] far more than \"elegance\" and parsimony. \"Excess\" abstraction causes them staffing problems. See [[Great Lisp War]] and [[Staffing Economics Versus Theoretical Elegance]] for more. Some [[Wiki Zens]] claim I'm wrong. I suspect their specialty/background in intricate statistical and optimization-like projects biases their observations about staffing, but perhaps my background does also. That's fine, <b>let both viewpoints live</b>. -t",
            "id": "d206095ef24e3d51dc3c3a6bdf10ae60"
          },
          {
            "type": "html",
            "text": "<i>Indeed, I suspect your speciality/background in record-keeping and reporting for non-IT organisations biases your observations about staffing.  We're probably both right -- for the type of organisations with/for whom we've worked and work.</i>",
            "id": "1a1d25e9b1edc55a9881bd0f7ba0b302"
          },
          {
            "type": "html",
            "text": "\nPerhaps, but roughly 90% of organizations are not directly IT-related; thus, if I am biased because of that, then it affects a relatively small percent. (\"Record keeping\"?)",
            "id": "a9e3d6cf12d53a35ad261e9ffd5b1fff"
          },
          {
            "type": "html",
            "text": "<i>100% of IT products are based directly on [[Computer Science]], so the issues that you claim \"affects a relatively small percent\" actually affect everyone.</i>",
            "id": "bf439f45d96b56ad3ad4e02ebb8feb17"
          },
          {
            "type": "html",
            "text": "\nBullshit! The industry selected what it \"liked\" among academic experiments and discarded others. Computer science <b>almost NEVER</b> proved software tool A was \"better than\" tool B, outside of machine performance issues. (Somewhere there is a similar topic.)",
            "id": "223779f47e1ed5cf6506f447a783b57e"
          },
          {
            "type": "html",
            "text": "<i>Who said anything about [[Computer Science]] \"proving\" (science doesn't do that) software tool A was \"better than\" (define \"better\") tool B?  That's like using science to prove hammers are better than screwdrivers, or that Stanley screwdrivers are better than Craftsman screwdrivers.  The former doesn't make sense, and the latter nobody cares.  Every industry product is based on [[Computer Science]] whether it admits it (or recognises it) or not, and has fundamental qualities (or not) of reliability, robustness, performance, flexibility, extensibility, etc., as a direct result of its adherence (or not) to the discoveries and principles of [[Computer Science]].</i>",
            "id": "f3b7ae8bbce0215a29b05ea76bde4aaf"
          },
          {
            "type": "html",
            "text": " In terms of machine performance, I agree. But not in terms of <i>software</i> maintenance. If you disagree, please provide a good example.",
            "id": "f3b84e783c2d8b3887d4b85313f7d7dc"
          },
          {
            "type": "html",
            "text": " <i>\"Software maintenance\" has nothing to do with [[Computer Science]].  It is an aspect of [[Software Engineering]].  Search scholar.google.com for \"software maintenance\" to find about 80,000 citations.</i>",
            "id": "8f313a2156fce329802cc2c340c51e1d"
          },
          {
            "type": "html",
            "text": " The topic is \"science\", not necessarily \"computer science\".",
            "id": "3e356cbc49a28a4766cac9358aa632c4"
          },
          {
            "type": "html",
            "text": " <i>That's fine, but my response was to your comment that \"<b>Computer science</b> almost NEVER proved software tool A was \"better than\" tool B, outside of machine performance issues.\"</i>",
            "id": "2d3ed3788d93dcd955a761014475333b"
          },
          {
            "type": "html",
            "text": " Most of the heated debates on this wiki are about whether one tool is \"better\" than another. If \"computer science\" is not designed and/or intended to answer that, then it's unhelpful and off-topic. I didn't bring up the topic of \"computer science\" here. It harkens back to the original questilyingon: <b>Can science help us select among multiple tools?</b> If yes, how, and what are examples in and outside of IT? If no, what do we do instead to select?",
            "id": "5ea53c79db6a218138ffd813de65cc11"
          },
          {
            "type": "html",
            "text": "\nI will agree that academia has been a great engine for idea production, but has done a piss-poor job of providing rigor to compare these ideas in terms of productive (economic) tools.",
            "id": "92c0627c0a86461fb11425ec83604938"
          },
          {
            "type": "html",
            "text": "<i>You can't really say [[Computer Science]] has done a \"piss-poor job of providing rigor to compare these ideas\", because it hasn't done it and never will.  It's not what [[Computer Science]] is about.  At best, it's a [[Project Management]] concern, or a business concern.  Take university business schools to task for not rigorously studying the business productivity impact of using C# vs Java or [[Higher Order Functions]] vs not using [[Higher Order Functions]]; to [[Computer Science]] and [[Software Engineering]] they're irrelevant.</i>",
            "id": "624c20b18ad2ae7231b6f1bb816f7895"
          },
          {
            "type": "html",
            "text": "\nThat's why a multi-disciplinary education is important. Those who only study X will see the world only from X's perspective.",
            "id": "cb28680aa3e2c1780f7b26c50dd06637"
          },
          {
            "type": "html",
            "text": "<i>A multi-disciplinary education is an excellent idea, but economics no more belongs in [[Computer Science]] than religion belongs in physics.</i>",
            "id": "2ef07d37c3e2403cb97f9ed92776f4cf"
          },
          {
            "type": "html",
            "text": "\nThe topic is \"science\", not necessarily \"computer science\". (I'm not sure \"computer science\" has a clear meaning anyhow.)",
            "id": "46e1f1ee84de5bc2e9cc23b650b03dc8"
          },
          {
            "type": "html",
            "text": "<i>Again, search scholar.google.com for \"software maintenance\" to find about 80,000 citations.</i>",
            "id": "376f8d7199cd8d7211c2f7d913f107b8"
          },
          {
            "type": "html",
            "text": "\nIf that resource has something specific to a given debate topic, then by all means, bring it up. Note that in general I see a dearth of actual <b>in-field testing</b> of a lot of suggestions or models of maintenance. In other words, there's not a lot of direct road testing of whether technique X actually makes a shop more productive/profitable than X's competitors. That kind of research is expensive and difficult, and simplified proxy studies in place of road-testing should be taken with a grain of salt. A lot of it is also vendors trying to sell you consulting services via buzzwords and catch-phrases. -t",
            "id": "8786df75d8a5d44b3af85eda417706f9"
          },
          {
            "type": "html",
            "text": "<i>Did you try searching scholar.google.com?  You might be surprised what you'd find.  A lot of it isn't vendors selling anything.</i>",
            "id": "4ce492583b141c0dd32d20679747d899"
          },
          {
            "type": "html",
            "text": " Yes.",
            "id": "4fa47f6807a9b7f58aa5d618fe692694"
          },
          {
            "type": "html",
            "text": "<i>As for comparing productivity of tools, there is a morass of complexities and obstacles to making such research come anywhere near valid, and the results will almost inevitably be weakly conclusive.  Comparing [[Brain Fuck]] to [[Java Language]] would almost certainly produce fairly conclusive results in a productivity study.  Haskell vs C# almost certainly wouldn't.</i>",
            "id": "7301d8b4963ce3cf9c4df4456a96b875"
          },
          {
            "type": "html",
            "text": "\nYes, comparing complex tools is usually not easy. That's not news. The real issue is what to do about it on this wiki.",
            "id": "4622e89a01045f8fef9eff913f7c2a96"
          },
          {
            "type": "html",
            "text": "<i>The best thing to do on this wiki is not do it.  Comparing tools only leads to [[Religious War]].  And let's imagine a series of studies definitively show that Haskell is 32% more productive than Java.  Does that mean we should stop discussing Java because we should all use Haskell?</i>",
            "id": "ccaea7e4007b1752ed63828ce8cdefdc"
          },
          {
            "type": "html",
            "text": " But it's a <b>key issue of [[Software Engineering]]</b>. [[Software Engineering]] is about making decisions, and those decisions involve comparing tools/techniques/paradigms. (Note that I include methodologies among \"tools\", not just languages.) Just because it's a difficult question doesn't mean we shouldn't ask. -t",
            "id": "e890b008da0da75b94c0a4e865ec9410"
          },
          {
            "type": "html",
            "text": " <i>Indeed, but getting a trustworthy answer is magnificently difficult and expensive.</i>",
            "id": "d51b86cb79ef1a6e2ab540c9406dc0cf"
          },
          {
            "type": "html",
            "text": " I see no viable alternative such that we are stuck with messy [[Proxy Factor]]s for now.",
            "id": "32e477bb0583fcb5246e4af5b15534bb"
          },
          {
            "type": "html",
            "text": "{Haskell and Java are different enough that this isn't a good analogy, but sometimes a tool is better for all purposes than another tool, and so the old tool is abandoned. Does anyone write in ALGOL anymore?}",
            "id": "3a52a1c628f0fe4933d03324f7867544"
          },
          {
            "type": "html",
            "text": "<i>Why aren't Haskell and Java comparable -- they're both general purpose development tools?  Was ALGOL abandoned because it wasn't good enough, or because fashion changed?  How do you define \"better for all purposes\"?</i>",
            "id": "9520dbbbf97f5a7a34ba5d4b6d363696"
          },
          {
            "type": "html",
            "text": "<i> <b>Any</b> comparison of tools will raise questions like these, and none of them can be answered with logic, and all lead to fruitless debate.  Ultimately, we choose the tools we prefer, or the tools someone else prefers are imposed on us.  Preference is powerful and illogical; even the most potent logical argument in favour of product A will not sway a user to use product B if they like B.  Such arguments are like trying to convince a person who doesn't like broccoli to like broccoli because it's healthy.  How often does that work?</i>",
            "id": "b20dd09875b6b536a9801901632ad510"
          },
          {
            "type": "html",
            "text": "<i>Telling someone that they shouldn't use tool A when they like tool A is even worse.  That doesn't work at all.</i>",
            "id": "c352d5102c051cc6b059aadb6298d6d5"
          },
          {
            "type": "html",
            "text": "<i>At best, when we find a tool we like, we should tell others that it exists and tell them why we like it.  Maybe they'll like it too, or maybe they won't, but that's all we can do.  If they use tools we don't like, there's no point in even telling them -- they're not going to change their minds.  There are better things to do, and better things to discuss.</i>",
            "id": "269041a0181c0ef6d4bb87af64ce1ff3"
          },
          {
            "type": "html",
            "text": "\nRemember that one is typically writing software for <i>other</i> maintainers, not oneself. Your own preferences may not migrate to others. -t",
            "id": "99b0dac586f1c3cebaea4e507ea48fd2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2e842456efcbfc3b98c3df63dc9bad20"
          },
          {
            "type": "html",
            "text": "See also: [[Fake Industry Canon]]",
            "id": "e84420b123529f6c0ea89d40d80a4b22"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2e842456efcbfc3b98c3df63dc9bad20"
          },
          {
            "type": "html",
            "text": "[[Category Science]], [[Category Philosophy]]",
            "id": "5cb263d364882fcebfa143095442e58b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2e842456efcbfc3b98c3df63dc9bad20"
          },
          {
            "type": "html",
            "text": "[[December Fourteen]]",
            "id": "9dfa53f37082ba6f3b14093734fedd56"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ScienceAndTools c2.com]",
            "id": "f081c926e2220ea470acaf0bca63eaed"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1707719733464
    }
  ]
}