{
  "title": "2023-01-24",
  "story": [
    {
      "type": "paragraph",
      "id": "761b0999fba077a2",
      "text": "⇒ [[Graph]] ⇒ [[Adjacency Matrix]] ⇒ [[Terrorist Network]]s ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[Centrality]]"
    },
    {
      "type": "paragraph",
      "id": "f5877c7bed05d366",
      "text": "Graph asAdjacencyMatrix"
    },
    {
      "type": "paragraph",
      "id": "dded6efffb73fdb6",
      "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a [[3D Scene]] to walk through, as an alternative to exploring the wiki as pages in the [[Lineup]]? [[Portal]] to different trees of the broader graph."
    },
    {
      "type": "paragraph",
      "id": "99da092d31038909",
      "text": "⇒ [[The Basic SOM]] ⇒ “The [[Magic TV]]” ⇒  [[Processing Units]]\n"
    },
    {
      "type": "paragraph",
      "id": "40cf3f7147b24bd2",
      "text": "How to draw [[Point]]s in x/y positions using JavaScript [https://stackoverflow.com/questions/1510512/how-to-draw-points-in-x-y-positions-using-javascript stackoverflow]  ⇒ [[First Animated Program]]"
    },
    {
      "type": "code",
      "id": "b46edaee3791140c",
      "text": "// Create a canvas that extends the entire screen\n// and it will draw right over the other html elements, like buttons, etc\nvar canvas = document.createElement(\"canvas\");\ncanvas.setAttribute(\"width\", window.innerWidth);\ncanvas.setAttribute(\"height\", window.innerHeight);\ncanvas.setAttribute(\"style\", \"position: absolute; x:0; y:0;\");\ndocument.body.appendChild(canvas);\n\n//Then you can draw a point at (10,10) like this:\n\nvar ctx = canvas.getContext(\"2d\");\nctx.fillRect(10,10,1,1);"
    },
    {
      "type": "paragraph",
      "id": "faa2e6038a31f59f",
      "text": "[https://wiki.ralfbarkow.ch/assets/pages/first-animated-program/circle.html circle.html]:"
    },
    {
      "type": "html",
      "id": "0c6696073085dac6",
      "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2010.41.00.png\"\n>"
    },
    {
      "type": "paragraph",
      "id": "b09a2dbcf2be4017",
      "text": "⇒ [[Pt]] ⇒ [[Pts]] [https://ptsjs.org/ site] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects."
    },
    {
      "type": "paragraph",
      "id": "d93e4b34c966ef6b",
      "text": "⇒ [[Approaches to Equality]] ⇒ [[Equality]] – A ⇒  B ⇒  C"
    },
    {
      "type": "graphviz",
      "id": "acb5e7ea1afc4b31",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "paragraph",
      "id": "2f1dc411f7a98408",
      "text": "AsAdjacentBars"
    },
    {
      "type": "html",
      "id": "a43d1a787a153ed7",
      "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2009.14.28.png\"\n>"
    },
    {
      "type": "paragraph",
      "id": "b11f017326e1a9aa",
      "text": "GtPlotterHorizontalBarChartExamples>>#sequoiaSearchResultsGroupedByGenusAndExtinctAsAdjacentBars"
    },
    {
      "type": "assets",
      "id": "6a286aa43d81e1d4",
      "text": "pages/2023-01-24"
    },
    {
      "type": "pagefold",
      "id": "13c2bfb213c4937f",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ac74a1a410c9d479",
      "text": "⇒ [[Exploratory Data Analysis]]"
    },
    {
      "type": "paragraph",
      "id": "78ab2aded7b8096c",
      "text": "⇒ [[Dependency Structure Matrix]]"
    },
    {
      "type": "paragraph",
      "id": "e367dd90e83b9b95",
      "text": "⇒ [[Health for All?]]"
    },
    {
      "type": "paragraph",
      "id": "51b7404c24d95fb8",
      "text": "⇒ [[Tailwind]]"
    },
    {
      "type": "paragraph",
      "id": "99e32c4162be8d31",
      "text": "⇒ [[Crop Prediction]]"
    },
    {
      "type": "paragraph",
      "id": "e82c4bc5f048ec96",
      "text": "⇒ [[Denoising Autoencoder Self-Organizing Map]]"
    },
    {
      "type": "paragraph",
      "id": "4c590d04d119d1ef",
      "text": "⇒ [[Der Ausbruch aus dem Gefängnis]]"
    },
    {
      "type": "paragraph",
      "id": "733caca9f2c89e17",
      "text": "⇒ [[Generate a Rectangular Grid]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-01-24",
        "story": []
      },
      "date": 1674540970288
    },
    {
      "item": {
        "type": "factory",
        "id": "f5877c7bed05d366"
      },
      "id": "f5877c7bed05d366",
      "type": "add",
      "date": 1674540972464
    },
    {
      "type": "edit",
      "id": "f5877c7bed05d366",
      "item": {
        "type": "paragraph",
        "id": "f5877c7bed05d366",
        "text": "Graph as"
      },
      "date": 1674540980827
    },
    {
      "item": {
        "type": "factory",
        "id": "761b0999fba077a2"
      },
      "id": "761b0999fba077a2",
      "type": "add",
      "after": "f5877c7bed05d366",
      "date": 1674540985152
    },
    {
      "type": "edit",
      "id": "761b0999fba077a2",
      "item": {
        "type": "paragraph",
        "id": "761b0999fba077a2",
        "text": " ⇒ [[Graph]] ⇒ [[Adjacency Matrix]]"
      },
      "date": 1674540987184
    },
    {
      "id": "761b0999fba077a2",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366"
      ],
      "date": 1674540988967
    },
    {
      "type": "edit",
      "id": "f5877c7bed05d366",
      "item": {
        "type": "paragraph",
        "id": "f5877c7bed05d366",
        "text": "Graph asAdjacencyMatrix"
      },
      "date": 1674541002152
    },
    {
      "item": {
        "type": "factory",
        "id": "ac74a1a410c9d479"
      },
      "id": "ac74a1a410c9d479",
      "type": "add",
      "after": "f5877c7bed05d366",
      "date": 1674541126758
    },
    {
      "type": "edit",
      "id": "ac74a1a410c9d479",
      "item": {
        "type": "paragraph",
        "id": "ac74a1a410c9d479",
        "text": "[[Exploratory data analysis ]]"
      },
      "date": 1674541133985
    },
    {
      "type": "edit",
      "id": "ac74a1a410c9d479",
      "item": {
        "type": "paragraph",
        "id": "ac74a1a410c9d479",
        "text": "[[Exploratory Data Analysis]]"
      },
      "date": 1674541141992
    },
    {
      "item": {
        "type": "factory",
        "id": "13c2bfb213c4937f"
      },
      "id": "13c2bfb213c4937f",
      "type": "add",
      "after": "ac74a1a410c9d479",
      "date": 1674541263664
    },
    {
      "type": "edit",
      "id": "13c2bfb213c4937f",
      "item": {
        "type": "pagefold",
        "id": "13c2bfb213c4937f",
        "text": "~"
      },
      "date": 1674541266214
    },
    {
      "id": "13c2bfb213c4937f",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479"
      ],
      "date": 1674541271099
    },
    {
      "type": "add",
      "id": "b647e9e6bcc13baa",
      "item": {
        "type": "paragraph",
        "id": "b647e9e6bcc13baa",
        "text": "\nILACHINSKI, Andrew, [no date]. Self-Organized Terrorist- Counterterrorist Adaptive Coevolutions, Part I: . \n"
      },
      "after": "f5877c7bed05d366",
      "date": 1674541384473
    },
    {
      "item": {
        "type": "factory",
        "id": "a54ece8b5d5bdcc9"
      },
      "id": "a54ece8b5d5bdcc9",
      "type": "add",
      "after": "ac74a1a410c9d479",
      "date": 1674541499007
    },
    {
      "id": "a54ece8b5d5bdcc9",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "b647e9e6bcc13baa",
        "a54ece8b5d5bdcc9",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479"
      ],
      "date": 1674541500933
    },
    {
      "type": "edit",
      "id": "a54ece8b5d5bdcc9",
      "item": {
        "type": "paragraph",
        "id": "a54ece8b5d5bdcc9",
        "text": "terrorist networks"
      },
      "date": 1674541505603
    },
    {
      "type": "edit",
      "id": "a54ece8b5d5bdcc9",
      "item": {
        "type": "paragraph",
        "id": "a54ece8b5d5bdcc9",
        "text": "[[Terrorist Network]]s"
      },
      "date": 1674541521028
    },
    {
      "type": "edit",
      "id": "761b0999fba077a2",
      "item": {
        "type": "paragraph",
        "id": "761b0999fba077a2",
        "text": "⇒ [[Graph]] ⇒ [[Adjacency Matrix]]"
      },
      "date": 1674541526382
    },
    {
      "type": "edit",
      "id": "a54ece8b5d5bdcc9",
      "item": {
        "type": "paragraph",
        "id": "a54ece8b5d5bdcc9",
        "text": "⇒ [[Terrorist Network]]s"
      },
      "date": 1674541531281
    },
    {
      "type": "edit",
      "id": "b647e9e6bcc13baa",
      "item": {
        "type": "paragraph",
        "id": "b647e9e6bcc13baa",
        "text": "ILACHINSKI, Andrew, 2005. Self-Organized Terrorist- Counterterrorist Adaptive Coevolutions, Part I: A Conceptual Design."
      },
      "date": 1674542139932
    },
    {
      "id": "b647e9e6bcc13baa",
      "type": "remove",
      "date": 1674542144911
    },
    {
      "type": "add",
      "id": "b6b1a29e6a218ad9",
      "item": {
        "type": "paragraph",
        "id": "b6b1a29e6a218ad9",
        "text": "ILACHINSKI, Andrew, 2012. Modelling insurgent and terrorist networks as self-organised complex adaptive systems. International Journal of Parallel, Emergent and Distributed Systems. 2012. Vol. 27, no. 1, p. 45–77. \n"
      },
      "after": "a54ece8b5d5bdcc9",
      "date": 1674544531185
    },
    {
      "type": "edit",
      "id": "a54ece8b5d5bdcc9",
      "item": {
        "type": "paragraph",
        "id": "a54ece8b5d5bdcc9",
        "text": "⇒ [[Terrorist Network]]s ⇒ [[Modelling Insurgent and Terrorist Networks]]"
      },
      "date": 1674544543951
    },
    {
      "id": "b6b1a29e6a218ad9",
      "type": "remove",
      "date": 1674544549157
    },
    {
      "type": "edit",
      "id": "ac74a1a410c9d479",
      "item": {
        "type": "paragraph",
        "id": "ac74a1a410c9d479",
        "text": "⇒ [[Exploratory Data Analysis]]"
      },
      "date": 1674544570204
    },
    {
      "item": {
        "type": "factory",
        "id": "6a286aa43d81e1d4"
      },
      "id": "6a286aa43d81e1d4",
      "type": "add",
      "after": "ac74a1a410c9d479",
      "date": 1674544852100
    },
    {
      "type": "edit",
      "id": "6a286aa43d81e1d4",
      "item": {
        "type": "assets",
        "id": "6a286aa43d81e1d4",
        "text": "pages/2023-01-24"
      },
      "date": 1674544856045
    },
    {
      "id": "6a286aa43d81e1d4",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "a54ece8b5d5bdcc9",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479"
      ],
      "date": 1674544857930
    },
    {
      "item": {
        "type": "factory",
        "id": "a43d1a787a153ed7"
      },
      "id": "a43d1a787a153ed7",
      "type": "add",
      "after": "ac74a1a410c9d479",
      "date": 1674548091175
    },
    {
      "type": "edit",
      "id": "a43d1a787a153ed7",
      "item": {
        "type": "html",
        "id": "a43d1a787a153ed7",
        "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2009.14.28.png\"\n>"
      },
      "date": 1674548107013
    },
    {
      "id": "a43d1a787a153ed7",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "a43d1a787a153ed7",
        "a54ece8b5d5bdcc9",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479"
      ],
      "date": 1674548112798
    },
    {
      "type": "add",
      "id": "b11f017326e1a9aa",
      "item": {
        "type": "paragraph",
        "id": "b11f017326e1a9aa",
        "text": "GtPlotterHorizontalBarChartExamples>>#sequoiaSearchResultsGroupedByGenusAndExtinctAsAdjacentBars"
      },
      "after": "f5877c7bed05d366",
      "date": 1674548146608
    },
    {
      "type": "add",
      "id": "2f1dc411f7a98408",
      "item": {
        "type": "paragraph",
        "id": "2f1dc411f7a98408",
        "text": "AsAdjacentBars"
      },
      "after": "f5877c7bed05d366",
      "date": 1674548164102
    },
    {
      "id": "a43d1a787a153ed7",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "a54ece8b5d5bdcc9",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479"
      ],
      "date": 1674548186090
    },
    {
      "type": "remove",
      "id": "a54ece8b5d5bdcc9",
      "date": 1674548201717
    },
    {
      "type": "edit",
      "id": "761b0999fba077a2",
      "item": {
        "type": "paragraph",
        "id": "761b0999fba077a2",
        "text": "⇒ [[Graph]] ⇒ [[Adjacency Matrix]] ⇒ [[Terrorist Network]]s ⇒ [[Modelling Insurgent and Terrorist Networks]]"
      },
      "date": 1674548205202
    },
    {
      "type": "add",
      "id": "78ab2aded7b8096c",
      "item": {
        "type": "paragraph",
        "id": "78ab2aded7b8096c",
        "text": "[[Dependency Structure Matrix]]"
      },
      "after": "ac74a1a410c9d479",
      "date": 1674548317966
    },
    {
      "type": "edit",
      "id": "78ab2aded7b8096c",
      "item": {
        "type": "paragraph",
        "id": "78ab2aded7b8096c",
        "text": "⇒ [[Dependency Structure Matrix]]"
      },
      "date": 1674548329977
    },
    {
      "type": "edit",
      "id": "761b0999fba077a2",
      "item": {
        "type": "paragraph",
        "id": "761b0999fba077a2",
        "text": "⇒ [[Graph]] ⇒ [[Adjacency Matrix]] ⇒ [[Terrorist Network]]s ⇒ [[Modelling Insurgent and Terrorist Networks]] ⇒ [[Centrality]]"
      },
      "date": 1674549748777
    },
    {
      "item": {
        "type": "factory",
        "id": "8982b28be7c73062"
      },
      "id": "8982b28be7c73062",
      "type": "add",
      "after": "78ab2aded7b8096c",
      "date": 1674549752561
    },
    {
      "type": "remove",
      "id": "8982b28be7c73062",
      "date": 1674549757376
    },
    {
      "item": {
        "type": "factory",
        "id": "2a3fd9fa1a7a2f06"
      },
      "id": "2a3fd9fa1a7a2f06",
      "type": "add",
      "after": "78ab2aded7b8096c",
      "date": 1674549759423
    },
    {
      "type": "remove",
      "id": "2a3fd9fa1a7a2f06",
      "date": 1674549761501
    },
    {
      "item": {
        "type": "factory",
        "id": "acb5e7ea1afc4b31"
      },
      "id": "acb5e7ea1afc4b31",
      "type": "add",
      "after": "78ab2aded7b8096c",
      "date": 1674549771753
    },
    {
      "type": "edit",
      "id": "acb5e7ea1afc4b31",
      "item": {
        "type": "graphviz",
        "id": "acb5e7ea1afc4b31",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1674549778113
    },
    {
      "id": "acb5e7ea1afc4b31",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c"
      ],
      "date": 1674549965947
    },
    {
      "type": "add",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best\nIs this pointing at how the inherent structure of a wiki could be used to generate a 3d scene to walk through, as an alternative to exploring the wiki as pages in the lineup? Portal to different trees of the broader graph.\n"
      },
      "after": "f5877c7bed05d366",
      "date": 1674551596517
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to generate a 3d scene to walk through, as an alternative to exploring the wiki as pages in the lineup? Portal to different trees of the broader graph.\n"
      },
      "date": 1674551613962
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to generate a 3d scene to walk through, as an alternative to exploring the wiki as pages in the lineup? [[Portal]] to different trees of the broader graph.\n"
      },
      "date": 1674551633863
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a 3d scene to walk through, as an alternative to exploring the wiki as pages in the lineup? [[Portal]] to different trees of the broader graph.\n"
      },
      "date": 1674551680270
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a [[3d]] scene to walk through, as an alternative to exploring the wiki as pages in the lineup? [[Portal]] to different trees of the broader graph.\n"
      },
      "date": 1674551717165
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a [[3D Scene]] to walk through, as an alternative to exploring the wiki as pages in the lineup? [[Portal]] to different trees of the broader graph.\n"
      },
      "date": 1674551747589
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a [[3D Scene]] to walk through, as an alternative to exploring the wiki as pages in the [[Lineup]]? [[Portal]] to different trees of the broader graph.\n"
      },
      "date": 1674551870120
    },
    {
      "type": "edit",
      "id": "dded6efffb73fdb6",
      "item": {
        "type": "paragraph",
        "id": "dded6efffb73fdb6",
        "text": "robert.best via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167451657619258NPzlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nIs this pointing at how the inherent structure of a wiki could be used to [[generate]] a [[3D Scene]] to walk through, as an alternative to exploring the wiki as pages in the [[Lineup]]? [[Portal]] to different trees of the broader graph."
      },
      "date": 1674552328791
    },
    {
      "type": "add",
      "id": "99da092d31038909",
      "item": {
        "type": "paragraph",
        "id": "99da092d31038909",
        "text": "Fie 3.11. “The [[Magic TV]]” (a) System (b) Output plane. Pairs of letters correspond to processing units, labeled by the images of test vectors (with coordinates defined in (c)). (c) Input plane showing those points to which the various processing units (corresponding to nodes of the net) have become most sensitive\n"
      },
      "after": "dded6efffb73fdb6",
      "date": 1674552337330
    },
    {
      "type": "edit",
      "id": "99da092d31038909",
      "item": {
        "type": "paragraph",
        "id": "99da092d31038909",
        "text": "⇒ “The [[Magic TV]]” \n"
      },
      "date": 1674552376287
    },
    {
      "type": "edit",
      "id": "99da092d31038909",
      "item": {
        "type": "paragraph",
        "id": "99da092d31038909",
        "text": "⇒ “The [[Magic TV]]” [[The Basic SOM]]\n"
      },
      "date": 1674552564107
    },
    {
      "type": "edit",
      "id": "99da092d31038909",
      "item": {
        "type": "paragraph",
        "id": "99da092d31038909",
        "text": "⇒ [[The Basic SOM]] ⇒ “The [[Magic TV]]” \n"
      },
      "date": 1674552579399
    },
    {
      "type": "add",
      "id": "40cf3f7147b24bd2",
      "item": {
        "type": "paragraph",
        "id": "40cf3f7147b24bd2",
        "text": "How to draw points in x/y positions using JavaScript"
      },
      "after": "99da092d31038909",
      "date": 1674553117775
    },
    {
      "type": "edit",
      "id": "40cf3f7147b24bd2",
      "item": {
        "type": "paragraph",
        "id": "40cf3f7147b24bd2",
        "text": "How to draw points in x/y positions using JavaScript [https://stackoverflow.com/questions/1510512/how-to-draw-points-in-x-y-positions-using-javascript stackoverflow]]"
      },
      "date": 1674553133429
    },
    {
      "type": "edit",
      "id": "40cf3f7147b24bd2",
      "item": {
        "type": "paragraph",
        "id": "40cf3f7147b24bd2",
        "text": "How to draw points in x/y positions using JavaScript [https://stackoverflow.com/questions/1510512/how-to-draw-points-in-x-y-positions-using-javascript stackoverflow]  ⇒ [[First Animated Program]]"
      },
      "date": 1674553184347
    },
    {
      "item": {
        "type": "factory",
        "id": "b46edaee3791140c"
      },
      "id": "b46edaee3791140c",
      "type": "add",
      "after": "78ab2aded7b8096c",
      "date": 1674553200391
    },
    {
      "id": "b46edaee3791140c",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "dded6efffb73fdb6",
        "99da092d31038909",
        "40cf3f7147b24bd2",
        "b46edaee3791140c",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c"
      ],
      "date": 1674553207172
    },
    {
      "type": "edit",
      "id": "b46edaee3791140c",
      "item": {
        "type": "code",
        "id": "b46edaee3791140c",
        "text": "// Create a canvas that extends the entire screen\n// and it will draw right over the other html elements, like buttons, etc\nvar canvas = document.createElement(\"canvas\");\ncanvas.setAttribute(\"width\", window.innerWidth);\ncanvas.setAttribute(\"height\", window.innerHeight);\ncanvas.setAttribute(\"style\", \"position: absolute; x:0; y:0;\");\ndocument.body.appendChild(canvas);\n\n//Then you can draw a point at (10,10) like this:\n\nvar ctx = canvas.getContext(\"2d\");\nctx.fillRect(10,10,1,1);"
      },
      "date": 1674553209236
    },
    {
      "item": {
        "type": "factory",
        "id": "0c6696073085dac6"
      },
      "id": "0c6696073085dac6",
      "type": "add",
      "after": "78ab2aded7b8096c",
      "date": 1674553301492
    },
    {
      "id": "0c6696073085dac6",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "dded6efffb73fdb6",
        "99da092d31038909",
        "40cf3f7147b24bd2",
        "b46edaee3791140c",
        "0c6696073085dac6",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c"
      ],
      "date": 1674553308086
    },
    {
      "type": "edit",
      "id": "0c6696073085dac6",
      "item": {
        "type": "html",
        "id": "0c6696073085dac6",
        "text": "<img\n  width=\"100%\"\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-24/Bildschirmfoto%202023-01-24%20um%2010.41.00.png\"\n>"
      },
      "date": 1674553321237
    },
    {
      "type": "add",
      "id": "faa2e6038a31f59f",
      "item": {
        "type": "paragraph",
        "id": "faa2e6038a31f59f",
        "text": "circle.html:"
      },
      "after": "40cf3f7147b24bd2",
      "date": 1674553455066
    },
    {
      "id": "faa2e6038a31f59f",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "dded6efffb73fdb6",
        "99da092d31038909",
        "40cf3f7147b24bd2",
        "b46edaee3791140c",
        "faa2e6038a31f59f",
        "0c6696073085dac6",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c"
      ],
      "date": 1674553457932
    },
    {
      "type": "edit",
      "id": "faa2e6038a31f59f",
      "item": {
        "type": "paragraph",
        "id": "faa2e6038a31f59f",
        "text": "[https://wiki.ralfbarkow.ch/assets/pages/first-animated-program/circle.html circle.html]:"
      },
      "date": 1674553477807
    },
    {
      "type": "edit",
      "id": "99da092d31038909",
      "item": {
        "type": "paragraph",
        "id": "99da092d31038909",
        "text": "⇒ [[The Basic SOM]] ⇒ “The [[Magic TV]]” ⇒  [[Processing Units]]\n"
      },
      "date": 1674554195881
    },
    {
      "type": "add",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "Pts is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects.\n\nUse it directly (link from cdnjs or unpkg, "
      },
      "after": "faa2e6038a31f59f",
      "date": 1674558801646
    },
    {
      "id": "b09a2dbcf2be4017",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "dded6efffb73fdb6",
        "99da092d31038909",
        "40cf3f7147b24bd2",
        "b46edaee3791140c",
        "faa2e6038a31f59f",
        "0c6696073085dac6",
        "b09a2dbcf2be4017",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c"
      ],
      "date": 1674558807752
    },
    {
      "type": "edit",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "⇒ [[Pts]] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects.\n\nUse it directly (link from cdnjs or unpkg, "
      },
      "date": 1674558820215
    },
    {
      "type": "edit",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "⇒ [[Pts]] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects.\n\nUse it directly (link from cdnjs or unpkg,[…] "
      },
      "date": 1674558826048
    },
    {
      "type": "edit",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "⇒ [[Pts]] [https://ptsjs.org/ site] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects.\n\nUse it directly (link from cdnjs or unpkg,[…] "
      },
      "date": 1674558845317
    },
    {
      "id": "e75afbe965cbf0f6",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "e75afbe965cbf0f6",
        "text": "//wiki.ralfbarkow.ch/assets/pages/pts-demos/run-pts.html\nHEIGHT 160"
      },
      "after": "b09a2dbcf2be4017",
      "date": 1674558895881
    },
    {
      "type": "remove",
      "id": "e75afbe965cbf0f6",
      "date": 1674558910876
    },
    {
      "type": "edit",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "⇒ [[Pts]] [https://ptsjs.org/ site] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects."
      },
      "date": 1674559213674
    },
    {
      "type": "edit",
      "id": "40cf3f7147b24bd2",
      "item": {
        "type": "paragraph",
        "id": "40cf3f7147b24bd2",
        "text": "How to draw [[Point]]s in x/y positions using JavaScript [https://stackoverflow.com/questions/1510512/how-to-draw-points-in-x-y-positions-using-javascript stackoverflow]  ⇒ [[First Animated Program]]"
      },
      "date": 1674559511002
    },
    {
      "type": "edit",
      "id": "b09a2dbcf2be4017",
      "item": {
        "type": "paragraph",
        "id": "b09a2dbcf2be4017",
        "text": "⇒ [[Pt]] ⇒ [[Pts]] [https://ptsjs.org/ site] is lightweight and modular. Written in typescript, it comes with many useful algorithms for visualization and creative coding. Its friendly API supports both quick prototyping and bigger projects."
      },
      "date": 1674559566860
    },
    {
      "type": "add",
      "id": "e367dd90e83b9b95",
      "item": {
        "type": "paragraph",
        "id": "e367dd90e83b9b95",
        "text": "⇒ [[Health for All?]]"
      },
      "after": "78ab2aded7b8096c",
      "date": 1674562341618
    },
    {
      "type": "add",
      "id": "d93e4b34c966ef6b",
      "item": {
        "type": "paragraph",
        "id": "d93e4b34c966ef6b",
        "text": "⇒ [[Approaches to Equality]]"
      },
      "after": "b09a2dbcf2be4017",
      "date": 1674564963880
    },
    {
      "type": "edit",
      "id": "d93e4b34c966ef6b",
      "item": {
        "type": "paragraph",
        "id": "d93e4b34c966ef6b",
        "text": "⇒ [[Approaches to Equality]] A => B => C"
      },
      "date": 1674565295221
    },
    {
      "type": "edit",
      "id": "d93e4b34c966ef6b",
      "item": {
        "type": "paragraph",
        "id": "d93e4b34c966ef6b",
        "text": "⇒ [[Approaches to Equality]] A ⇒  B ⇒  C"
      },
      "date": 1674565305149
    },
    {
      "type": "edit",
      "id": "d93e4b34c966ef6b",
      "item": {
        "type": "paragraph",
        "id": "d93e4b34c966ef6b",
        "text": "⇒ [[Approaches to Equality]] – A ⇒  B ⇒  C"
      },
      "date": 1674565312882
    },
    {
      "type": "edit",
      "id": "d93e4b34c966ef6b",
      "item": {
        "type": "paragraph",
        "id": "d93e4b34c966ef6b",
        "text": "⇒ [[Approaches to Equality]] ⇒ [[Equality]] – A ⇒  B ⇒  C"
      },
      "date": 1674565340632
    },
    {
      "type": "add",
      "id": "51b7404c24d95fb8",
      "item": {
        "type": "paragraph",
        "id": "51b7404c24d95fb8",
        "text": "⇒ [[Tailwind]]"
      },
      "after": "e367dd90e83b9b95",
      "date": 1674569159982
    },
    {
      "type": "add",
      "id": "99e32c4162be8d31",
      "item": {
        "type": "paragraph",
        "id": "99e32c4162be8d31",
        "text": "⇒ crop prediction"
      },
      "after": "51b7404c24d95fb8",
      "date": 1674572706748
    },
    {
      "type": "edit",
      "id": "99e32c4162be8d31",
      "item": {
        "type": "paragraph",
        "id": "99e32c4162be8d31",
        "text": "⇒ [[Crop Prediction]]"
      },
      "date": 1674572744993
    },
    {
      "item": {
        "type": "factory",
        "id": "39d3862832fc9ca6"
      },
      "id": "39d3862832fc9ca6",
      "type": "add",
      "after": "99e32c4162be8d31",
      "date": 1674573086097
    },
    {
      "type": "edit",
      "id": "39d3862832fc9ca6",
      "item": {
        "type": "paragraph",
        "id": "39d3862832fc9ca6",
        "text": "\nRAHMATI, Vahid, YAR, Morteza Husainy and MALEKIJAVAN, Ali Reza, 2014. Neural Networks New Capacity Factor Measurement for Improvement of SOM. . 2014. Vol. 3, no. 12. \n"
      },
      "date": 1674573088131
    },
    {
      "id": "39d3862832fc9ca6",
      "type": "remove",
      "date": 1674573105516
    },
    {
      "item": {
        "type": "factory",
        "id": "ce834b0cfc5c13d6"
      },
      "id": "ce834b0cfc5c13d6",
      "type": "add",
      "after": "99e32c4162be8d31",
      "date": 1674575310971
    },
    {
      "type": "edit",
      "id": "ce834b0cfc5c13d6",
      "item": {
        "type": "paragraph",
        "id": "ce834b0cfc5c13d6",
        "text": "In this report, we address the question of combining nonlinearities of neurons into networks for modeling increasingly varying and progressively more complex functions. A fundamental approach is the use of higher-level representations devised by restricted Boltzmann machines and (denoising) autoencoders. We present the Denoising Autoencoder Self-Organizing Map (DASOM) that integrates the latter into a hierarchically organized hybrid model where the front-end component is a grid of topologically ordered neurons. The approach is to interpose a layer of hidden representations between the input space and the neural lattice of the self-organizing map. In so doing the parameters are adjusted by the proposed unsupervised learning algorithm. The model therefore maintains the clustering properties of its predecessor, whereas by extending and enhancing its visualization capacity enables an inclusion and an analysis of the intermediate representation space. A comprehensive series of experiments comprising optical recognition of text and images, and cancer type clustering and categorization is used to demonstrate DASOM’s efficiency, performance and projection capabilities."
      },
      "date": 1674575313209
    },
    {
      "type": "add",
      "id": "e82c4bc5f048ec96",
      "item": {
        "type": "paragraph",
        "id": "e82c4bc5f048ec96",
        "text": "⇒ [[Denoising Autoencoder Self-Organizing Map]]"
      },
      "after": "99e32c4162be8d31",
      "date": 1674575368828
    },
    {
      "id": "ce834b0cfc5c13d6",
      "type": "remove",
      "date": 1674575374920
    },
    {
      "item": {
        "type": "factory",
        "id": "c498fb61e5b73593"
      },
      "id": "c498fb61e5b73593",
      "type": "add",
      "after": "e82c4bc5f048ec96",
      "date": 1674579702256
    },
    {
      "type": "edit",
      "id": "c498fb61e5b73593",
      "item": {
        "type": "paragraph",
        "id": "c498fb61e5b73593",
        "text": "\nALSBERG, Paul, 1975. Der Ausbruch aus dem Gefängnis: zu d. Entstehungsbedingungen d. Menschen. . Bearb. Neuaufl. von “Das Menschheitsrätsel.” Giessen: Focus-Verlag. ISBN 978-3-920352-62-6. BD450 .A475 1975\n"
      },
      "date": 1674579711874
    },
    {
      "type": "add",
      "id": "4c590d04d119d1ef",
      "item": {
        "type": "paragraph",
        "id": "4c590d04d119d1ef",
        "text": "⇒ [[Der Ausbruch aus dem Gefängnis]]"
      },
      "after": "e82c4bc5f048ec96",
      "date": 1674579724043
    },
    {
      "id": "c498fb61e5b73593",
      "type": "remove",
      "date": 1674579729720
    },
    {
      "item": {
        "type": "factory",
        "id": "f7cf4d60f896b0cf"
      },
      "id": "f7cf4d60f896b0cf",
      "type": "add",
      "after": "4c590d04d119d1ef",
      "date": 1674594471955
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]]"
      },
      "date": 1674594484177
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://packagecontrol.io/packages/TypeScript packagecontrol]"
      },
      "date": 1674594508268
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] ]https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595227374
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595232728
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript] [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595632655
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript mdn], [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595661157
    },
    {
      "item": {
        "type": "factory",
        "id": "2a9e35c9bb9fc76c"
      },
      "id": "2a9e35c9bb9fc76c",
      "type": "add",
      "after": "f7cf4d60f896b0cf",
      "date": 1674595677570
    },
    {
      "type": "edit",
      "id": "2a9e35c9bb9fc76c",
      "item": {
        "type": "paragraph",
        "id": "2a9e35c9bb9fc76c",
        "text": "TypeScript is a superset of JavaScript that provides features such as optional static typing, classes, interfaces, and generics. The goal of TypeScript is to help catch mistakes early through its type system and make JavaScript development more efficient. One of the big benefits is enabling IDEs to provide a richer environment for spotting common errors as you type the code."
      },
      "date": 1674595681089
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript mdn], [https://www.typescriptlang.org/ site], [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595705854
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript mdn], Sublime Text support [https://www.typescriptlang.org/ site], [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595744082
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript mdn], [https://www.typescriptlang.org/ site], Sublime Text support  [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595757087
    },
    {
      "type": "edit",
      "id": "f7cf4d60f896b0cf",
      "item": {
        "type": "paragraph",
        "id": "f7cf4d60f896b0cf",
        "text": "⇒ [[TypeScript]] [https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Client-side_JavaScript_frameworks/Svelte_TypeScript#typescript_optional_static_typing_for_javascript mdn], [https://www.typescriptlang.org/ site], support for Sublime  [https://github.com/sublimelsp/LSP-typescript github]"
      },
      "date": 1674595791035
    },
    {
      "type": "add",
      "id": "cca2075d9ae42ed8",
      "item": {
        "type": "paragraph",
        "id": "cca2075d9ae42ed8",
        "text": "Best of all, JavaScript code is valid TypeScript code; TypeScript is a superset of JavaScript. You can rename most of your .js files to .ts files and they will just work.\n\nOur TypeScript code will be able to run everywhere JavaScript can run. How is that possible? TypeScript \"transpiles\" our code to vanilla JavaScript. That means that it parses TypeScript code and produces the equivalent vanilla JavaScript code for browsers to run."
      },
      "after": "2a9e35c9bb9fc76c",
      "date": 1674595832646
    },
    {
      "item": {
        "type": "factory",
        "id": "7030375df325bdac"
      },
      "id": "7030375df325bdac",
      "type": "add",
      "after": "cca2075d9ae42ed8",
      "date": 1674595937078
    },
    {
      "type": "edit",
      "id": "7030375df325bdac",
      "item": {
        "type": "code",
        "id": "7030375df325bdac",
        "text": "interface Neuron {\n    pos: [number, number];\n    v?: number[];\n}\n\nexport { Neuron };\n"
      },
      "date": 1674595941527
    },
    {
      "type": "add",
      "id": "81824292fea2df1e",
      "item": {
        "type": "paragraph",
        "id": "81824292fea2df1e",
        "text": "Defining Types"
      },
      "after": "cca2075d9ae42ed8",
      "date": 1674596042725
    },
    {
      "type": "edit",
      "id": "81824292fea2df1e",
      "item": {
        "type": "paragraph",
        "id": "81824292fea2df1e",
        "text": "Defining Types [https://www.typescriptlang.org/docs/handbook/typescript-in-5-minutes.html#defining-types typescriptlang]"
      },
      "date": 1674596059710
    },
    {
      "type": "add",
      "id": "7ec3e830001a71dd",
      "item": {
        "type": "paragraph",
        "id": "7ec3e830001a71dd",
        "text": "You can explicitly describe this object’s shape using an interface declaration:"
      },
      "after": "81824292fea2df1e",
      "date": 1674596106243
    },
    {
      "item": {
        "type": "factory",
        "id": "4fe4d1d4904fb892"
      },
      "id": "4fe4d1d4904fb892",
      "type": "add",
      "after": "7030375df325bdac",
      "date": 1674596278927
    },
    {
      "type": "edit",
      "id": "4fe4d1d4904fb892",
      "item": {
        "type": "paragraph",
        "id": "4fe4d1d4904fb892",
        "text": "ou can then declare that a JavaScript object conforms to the shape of your new interface by using syntax like : TypeName after a variable declaration: […]"
      },
      "date": 1674596284505
    },
    {
      "type": "edit",
      "id": "4fe4d1d4904fb892",
      "item": {
        "type": "paragraph",
        "id": "4fe4d1d4904fb892",
        "text": "You can then declare that a JavaScript object conforms to the shape of your new interface by using syntax like : TypeName after a variable declaration: […]"
      },
      "date": 1674596299684
    },
    {
      "item": {
        "type": "factory",
        "id": "ee87ba5e5468c07f"
      },
      "id": "ee87ba5e5468c07f",
      "type": "add",
      "after": "4fe4d1d4904fb892",
      "date": 1674596849343
    },
    {
      "type": "edit",
      "id": "ee87ba5e5468c07f",
      "item": {
        "type": "paragraph",
        "id": "ee87ba5e5468c07f",
        "text": "A simple guide to “interface” data type in TypeScript"
      },
      "date": 1674596854893
    },
    {
      "type": "edit",
      "id": "ee87ba5e5468c07f",
      "item": {
        "type": "paragraph",
        "id": "ee87ba5e5468c07f",
        "text": "A simple guide to “interface” data type in TypeScript [https://medium.com/jspoint/typescript-interfaces-4a2af07c8070 post]"
      },
      "date": 1674596868063
    },
    {
      "item": {
        "type": "factory",
        "id": "b78e797235c14d16"
      },
      "id": "b78e797235c14d16",
      "type": "add",
      "after": "ee87ba5e5468c07f",
      "date": 1674596885774
    },
    {
      "type": "edit",
      "id": "b78e797235c14d16",
      "item": {
        "type": "paragraph",
        "id": "b78e797235c14d16",
        "text": "Optional Properties"
      },
      "date": 1674596888815
    },
    {
      "type": "edit",
      "id": "b78e797235c14d16",
      "item": {
        "type": "paragraph",
        "id": "b78e797235c14d16",
        "text": "Optional Properties: An interface can contain optional properties and we use ?:Type annotation to represent them, just like the optional function parameters."
      },
      "date": 1674596900126
    },
    {
      "item": {
        "type": "factory",
        "id": "f1323ca72be95561"
      },
      "id": "f1323ca72be95561",
      "type": "add",
      "after": "b78e797235c14d16",
      "date": 1674597165568
    },
    {
      "id": "f1323ca72be95561",
      "type": "move",
      "order": [
        "761b0999fba077a2",
        "f5877c7bed05d366",
        "dded6efffb73fdb6",
        "99da092d31038909",
        "40cf3f7147b24bd2",
        "b46edaee3791140c",
        "faa2e6038a31f59f",
        "0c6696073085dac6",
        "b09a2dbcf2be4017",
        "d93e4b34c966ef6b",
        "acb5e7ea1afc4b31",
        "2f1dc411f7a98408",
        "a43d1a787a153ed7",
        "b11f017326e1a9aa",
        "6a286aa43d81e1d4",
        "13c2bfb213c4937f",
        "ac74a1a410c9d479",
        "78ab2aded7b8096c",
        "e367dd90e83b9b95",
        "51b7404c24d95fb8",
        "99e32c4162be8d31",
        "e82c4bc5f048ec96",
        "4c590d04d119d1ef",
        "f7cf4d60f896b0cf",
        "2a9e35c9bb9fc76c",
        "cca2075d9ae42ed8",
        "81824292fea2df1e",
        "7ec3e830001a71dd",
        "7030375df325bdac",
        "4fe4d1d4904fb892",
        "f1323ca72be95561",
        "ee87ba5e5468c07f",
        "b78e797235c14d16"
      ],
      "date": 1674597169551
    },
    {
      "type": "edit",
      "id": "f1323ca72be95561",
      "item": {
        "type": "code",
        "id": "f1323ca72be95561",
        "text": "// generate a rectangular grid of sizeX * sizeY hexagonal neurons\n// with normalized euclidian distance of 1 between each neighbor\nconst generateGrid = (sizeX, sizeY): Neuron[] => {\n \n  […]"
      },
      "date": 1674597178863
    },
    {
      "type": "edit",
      "id": "f1323ca72be95561",
      "item": {
        "type": "code",
        "id": "f1323ca72be95561",
        "text": "// generate a rectangular grid of sizeX * sizeY hexagonal neurons\n// with normalized euclidian distance of 1 between each neighbor\nconst generateGrid = (sizeX, sizeY): Neuron[] => {\n  […]"
      },
      "date": 1674597185075
    },
    {
      "type": "edit",
      "id": "4fe4d1d4904fb892",
      "item": {
        "type": "paragraph",
        "id": "4fe4d1d4904fb892",
        "text": "You can then declare that a JavaScript object conforms to the shape of your new interface by using syntax like : TypeName after a variable declaration: "
      },
      "date": 1674597191918
    },
    {
      "item": {
        "type": "factory",
        "id": "5de32c778ceb8ea3"
      },
      "id": "5de32c778ceb8ea3",
      "type": "add",
      "after": "b78e797235c14d16",
      "date": 1674597653531
    },
    {
      "type": "edit",
      "id": "5de32c778ceb8ea3",
      "item": {
        "type": "paragraph",
        "id": "5de32c778ceb8ea3",
        "text": "Lodash"
      },
      "date": 1674597657124
    },
    {
      "type": "add",
      "id": "74a43fd71fe2ab28",
      "item": {
        "type": "paragraph",
        "id": "74a43fd71fe2ab28",
        "text": "https://deno.land/manual@v1.29.4/node/cdns"
      },
      "after": "5de32c778ceb8ea3",
      "date": 1674598186920
    },
    {
      "type": "edit",
      "id": "74a43fd71fe2ab28",
      "item": {
        "type": "paragraph",
        "id": "74a43fd71fe2ab28",
        "text": "Deno: Using npm packages with CDNs [https://deno.land/manual@v1.29.4/node/cdns page]"
      },
      "date": 1674598216356
    },
    {
      "type": "edit",
      "id": "5de32c778ceb8ea3",
      "item": {
        "type": "paragraph",
        "id": "5de32c778ceb8ea3",
        "text": "Lodash [https://lodash.com/ site]"
      },
      "date": 1674598227581
    },
    {
      "type": "edit",
      "id": "5de32c778ceb8ea3",
      "item": {
        "type": "paragraph",
        "id": "5de32c778ceb8ea3",
        "text": "Lodash [https://lodash.com/ site], fp "
      },
      "date": 1674598313256
    },
    {
      "type": "edit",
      "id": "5de32c778ceb8ea3",
      "item": {
        "type": "paragraph",
        "id": "5de32c778ceb8ea3",
        "text": "Lodash [https://lodash.com/ site], fp [https://github.com/lodash/lodash/tree/4.17.15-npm/fp github]"
      },
      "date": 1674598324270
    },
    {
      "type": "add",
      "id": "1b17d3507a53f038",
      "item": {
        "type": "paragraph",
        "id": "1b17d3507a53f038",
        "text": "Overview of TypeScript in Deno"
      },
      "after": "74a43fd71fe2ab28",
      "date": 1674598405355
    },
    {
      "type": "edit",
      "id": "1b17d3507a53f038",
      "item": {
        "type": "paragraph",
        "id": "1b17d3507a53f038",
        "text": "Overview of TypeScript in Deno [https://deno.land/manual@v1.20.4/typescript/overview#overview-of-typescript-in-deno page]"
      },
      "date": 1674598422104
    },
    {
      "type": "add",
      "id": "733caca9f2c89e17",
      "item": {
        "type": "paragraph",
        "id": "733caca9f2c89e17",
        "text": "⇒ [[Generate a Rectangular Grid]]"
      },
      "after": "4c590d04d119d1ef",
      "date": 1674626234013
    },
    {
      "id": "f7cf4d60f896b0cf",
      "type": "remove",
      "date": 1674626241054
    },
    {
      "id": "2a9e35c9bb9fc76c",
      "type": "remove",
      "date": 1674626255939
    },
    {
      "id": "cca2075d9ae42ed8",
      "type": "remove",
      "date": 1674626264455
    },
    {
      "id": "81824292fea2df1e",
      "type": "remove",
      "date": 1674626275163
    },
    {
      "id": "7ec3e830001a71dd",
      "type": "remove",
      "date": 1674626285702
    },
    {
      "id": "7030375df325bdac",
      "type": "remove",
      "date": 1674626288379
    },
    {
      "id": "4fe4d1d4904fb892",
      "type": "remove",
      "date": 1674626295455
    },
    {
      "id": "f1323ca72be95561",
      "type": "remove",
      "date": 1674626299742
    },
    {
      "id": "ee87ba5e5468c07f",
      "type": "remove",
      "date": 1674626308224
    },
    {
      "id": "b78e797235c14d16",
      "type": "remove",
      "date": 1674626318938
    },
    {
      "id": "5de32c778ceb8ea3",
      "type": "remove",
      "date": 1674626326723
    },
    {
      "id": "74a43fd71fe2ab28",
      "type": "remove",
      "date": 1674626338613
    },
    {
      "id": "1b17d3507a53f038",
      "type": "remove",
      "date": 1674626343495
    }
  ]
}