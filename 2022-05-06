{
  "title": "2022-05-06",
  "story": [
    {
      "type": "reference",
      "id": "273c9ad2dcc8cca3",
      "site": "ward.dojo.fed.wiki",
      "slug": "volunteer-backup-to-github",
      "title": "Volunteer Backup to Github",
      "text": "[[Christopher Reay]] has demonstrated that wiki page json can be reasonably stored as files in a git repo without unreasonable growth as version compound."
    },
    {
      "type": "markdown",
      "id": "1de2bd880cfa01a0",
      "text": "# wiki-safe-pdx "
    },
    {
      "type": "markdown",
      "id": "1b4ae8c0ec9015d0",
      "text": "> Ward Cunningham was feeling guilty that we have lost sites larger number and more quickly than expected. Set out to duplicate Christopher's work. [https://github.com/wiki-safe-pdx github]"
    },
    {
      "type": "pagefold",
      "id": "514b9a23ca3b6478",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "8b6850260c0da44f",
      "text": "Here is an attempt at graphic and narrative sensemaking in the FedWiki. [http://marc.tries.fed.wiki/view/whatcom-incarceration-system/view/humanizing-opportunities/view/bail-system/view/pretrial-incarceration lineup]"
    },
    {
      "type": "markdown",
      "id": "361de140f4ccc387",
      "text": "https://www.statecourts.org/inmate-search/washington/whatcom-county/"
    },
    {
      "type": "paragraph",
      "id": "7b9543ce6b4d55e1",
      "text": "StateCourts.org [https://www.statecourts.org/ site]"
    },
    {
      "type": "reference",
      "id": "0e52925cd8ba01c4",
      "site": "marc.tries.fed.wiki",
      "slug": "humanizing-opportunities",
      "title": "Humanizing Opportunities",
      "text": "The orange nodes are each opportunities for people to humanize the situation. Once the situation reaches the [[Bail System]], and the defendant cannot make bail the tragedy begins."
    },
    {
      "type": "reference",
      "id": "12b9cfbe138b4708",
      "site": "marc.tries.fed.wiki",
      "slug": "bail-system",
      "title": "Bail System",
      "text": "Bail System"
    },
    {
      "type": "reference",
      "id": "730197316327f294",
      "site": "marc.tries.fed.wiki",
      "slug": "pretrial-incarceration",
      "title": "Pretrial Incarceration",
      "text": "Pretrial Incarceration"
    },
    {
      "type": "pagefold",
      "id": "fa81ba00d58a7b3f",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "103b87fcda7f8a40",
      "text": "https://english.aawsat.com/home/article/3610871/tim-culpan/next-cybersecurity-crisis-poisoned-ai"
    },
    {
      "type": "markdown",
      "id": "fcaa731b49e973f8",
      "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
    },
    {
      "type": "pagefold",
      "id": "f6eb1131a47badd8",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ca022eb108747504",
      "text": "[[BlTasks]]"
    },
    {
      "type": "pagefold",
      "id": "24d02fc02302d700",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3d7a49566c93c595",
      "text": "You Don’t Need A UI Framework. [https://www.smashingmagazine.com/2022/05/you-dont-need-ui-framework/ post]"
    },
    {
      "type": "markdown",
      "id": "06aa876401e9b449",
      "text": "> From the perspective of an agency that takes on lots of short/medium-term projects, this could make a lot of sense. They don’t have to start every new project from zero. And as the team gets more and more comfortable with the tool, they learn to use it really effectively.\n>\n> I haven’t done much agency work, so it’s hard for me to say. I’ve spent most of my career working for product companies. None of the places I’ve worked for have ever used a third-party UI framework. We always built something in-house (eg. Wonder Blocks [https://wonderblocks.khanacademy.org/ site] at Khan Academy, or Walrus [https://www.digitalocean.com/blog/introducing-walrus-digitaloceans-reimagined-design post] at DigitalOcean)."
    },
    {
      "type": "pagefold",
      "id": "d07b88a0bfe97ce4",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "e9e929639929be88",
      "text": "axe DevTools - Web Accessibility Testing. [https://github.com/dequelabs/axe-core github], [https://www.deque.com/axe/ site]"
    },
    {
      "type": "video",
      "id": "6e5f2761ae13c4ba",
      "text": "YOUTUBE iRGB40c_YJc\nGetting Started with the axe DevTools Browser Extension"
    },
    {
      "type": "pagefold",
      "id": "331177e2b2bcadf2",
      "text": "~"
    },
    {
      "type": "video",
      "id": "5f140fd617c26722",
      "text": "VIMEO 14965237\n[[Alan Kay]] @ NYU School of Engineering"
    },
    {
      "type": "pagefold",
      "id": "95dbef71e1a4c551",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "71eb5fb0dbe115da",
      "site": "andrew.dojo.fed.wiki",
      "slug": "andrews-backup-service-plan",
      "title": "Andrew's Backup Service Plan",
      "text": "As a follow-up/spin-off to my work with [[Federated Wiki Feeds]] I'd like to create a new free service."
    },
    {
      "type": "pagefold",
      "id": "edc2f2c15c3cb003",
      "text": "~"
    },
    {
      "type": "video",
      "id": "7afc9466c04d2825",
      "text": "VIMEO 699129480\nWhat is Movement? from Aeon Video on Vimeo. [https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887243.mp4~hmac=1e3692add1c3c2be674bb44b8f04cb75396010ce585dade501c9a0b1f771a708/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887243.mp4 mp4]"
    },
    {
      "type": "paragraph",
      "id": "b14964dcb4767c57",
      "text": "(Societies do not consist of individual people)"
    },
    {
      "type": "code",
      "id": "d418bc23b74a76e6",
      "text": "\"progressive\": [{\n                        \"profile\": \"164\",\n                        \"width\": 640,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887243.mp4~hmac=1e3692add1c3c2be674bb44b8f04cb75396010ce585dade501c9a0b1f771a708/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887243.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"360p\",\n                        \"id\": \"c930e21b-6666-4b4a-9063-9f3bc5bf49af\",\n                        \"origin\": \"gcs\",\n                        \"height\": 360\n                    }, {\n                        \"profile\": \"169\",\n                        \"width\": 1920,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887261.mp4~hmac=cb126fcbc1bf8caf0e9b6053f20c9fc6519cf8b154a353f607135117bd08bde3/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887261.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"1080p\",\n                        \"id\": \"d35fd7a5-9b44-4b3a-a0d0-9fb84f41b790\",\n                        \"origin\": \"gcs\",\n                        \"height\": 1080\n                    }, {\n                        \"profile\": \"165\",\n                        \"width\": 960,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887281.mp4~hmac=1fc39793f5699cf6e4713fe6dbc8d0ecb75945c46f8b48465c8b7f5b3e3cd715/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887281.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"540p\",\n                        \"id\": \"863dfb43-8858-465d-babc-d3b51ac31889\",\n                        \"origin\": \"gcs\",\n                        \"height\": 540\n                    }, {\n                        \"profile\": \"174\",\n                        \"width\": 1280,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887289.mp4~hmac=3a630cab74a34b67eb6e62ce47e9e2f322fca7ff0d0dfaa45ead86e1da19b4bd/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887289.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"720p\",\n                        \"id\": \"a59d6da3-1e27-4803-8606-cc58dd01fc52\",\n                        \"origin\": \"gcs\",\n                        \"height\": 720\n                    }]\n                },"
    },
    {
      "type": "pagefold",
      "id": "8ce5b8da97970792",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b6edabe1db07e75f",
      "text": "[[Mike Caulfield]]\n@holden [https://twitter.com/holden/status/1522594853254803458?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] –\nIn educational work I used to talk about measuring \"golden inputs\" (the sorts of intermediate inputs you have high confidence correlate with good outcomes) as being far more important than outcomes, at least on the institutional level."
    },
    {
      "type": "markdown",
      "id": "e9ead1910be44c70",
      "text": "[[Mike Caulfield]] @holden ·[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] Reply to @holden – I forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
    },
    {
      "type": "pagefold",
      "id": "500b075fa397fc0a",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "f7048ba61515b2b9",
      "text": "# [[Enrich Any SVG]] ⇒ Converted SVG"
    },
    {
      "type": "markdown",
      "id": "6d13289db1e42419",
      "text": "The issue with the `convert-any-svg` script probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to `wiki.ralfbarkow.ch`, it worked. Since the script also finds files that are only present on the `marc.tries.fed.wiki` server, I thought the script had magic powers."
    },
    {
      "type": "code",
      "id": "8ed59cda01ce80f4",
      "text": "$ wget http://code.fed.wiki/assets/v1/frame.js"
    },
    {
      "type": "code",
      "id": "cb1125a973f6bdac",
      "text": "export async function assets() {\n  let table = []\n  let assets = await sources('assets')\n  for (let source of assets){\n    let site = source.panel.site\n    let slug = source.panel.slug\n    let item = source.panel.itemId\n    for (let dir of Object.keys(source.assetsData)) {\n      for (let path of Object.keys(source.assetsData[dir])) {\n        for (let file of source.assetsData[dir][path]) {\n          path = path.startsWith(\"//\") ? path : `//${site}${path}`\n          let url = `${path}/${dir}/${file}`\n          let row = {site,slug,item,dir,path,file,url}\n          table.push(row)\n        }\n      }\n    }\n  }\n  return table\n}\n"
    },
    {
      "type": "markdown",
      "id": "39ba5d859b93614e",
      "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` seems to assemble the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
    },
    {
      "type": "pagefold",
      "id": "a6074d1b613e7ace",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "136821a2177ffd0d",
      "text": "JavaScript If-Else and If-Then – JS Conditional Statements [https://www.freecodecamp.org/news/javascript-if-else-and-if-then-js-conditional-statements/ post]"
    },
    {
      "type": "markdown",
      "id": "0e191dc6b0b801e2",
      "text": "# Conditional (Ternary) Operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
    },
    {
      "type": "paragraph",
      "id": "377c3a3767eccdb3",
      "text": "\n\n"
    },
    {
      "type": "paragraph",
      "id": "ac16327f9a725a97",
      "text": "The condition goes before the ? mark and if it is true, then the code between the ? mark and : would execute. If the condition is false, then the code after the  : would execute. "
    },
    {
      "type": "code",
      "id": "2c42db06fe74d597",
      "text": "condition ? if condition is true : if condition is false"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-05-06",
        "story": []
      },
      "date": 1651812835451
    },
    {
      "item": {
        "type": "factory",
        "id": "273c9ad2dcc8cca3"
      },
      "id": "273c9ad2dcc8cca3",
      "type": "add",
      "date": 1651812839963
    },
    {
      "type": "edit",
      "id": "273c9ad2dcc8cca3",
      "item": {
        "type": "reference",
        "id": "273c9ad2dcc8cca3",
        "site": "ward.dojo.fed.wiki",
        "slug": "volunteer-backup-to-github",
        "title": "Volunteer Backup to Github",
        "text": "Christopher Reay has demonstrated that wiki page json can be reasonably stored as files in a git repo without unreasonable growth as version compound."
      },
      "date": 1651812843941
    },
    {
      "item": {
        "type": "factory",
        "id": "1de2bd880cfa01a0"
      },
      "id": "1de2bd880cfa01a0",
      "type": "add",
      "after": "273c9ad2dcc8cca3",
      "date": 1651812895509
    },
    {
      "type": "edit",
      "id": "1de2bd880cfa01a0",
      "item": {
        "type": "paragraph",
        "id": "1de2bd880cfa01a0",
        "text": "wiki-safe-pdx "
      },
      "date": 1651812920504
    },
    {
      "id": "1b4ae8c0ec9015d0",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1b4ae8c0ec9015d0",
        "text": "Ward Cunningham was feeling guilty that we have lost sites larger number and more quickly than expected. Set out to duplicate Christopher's work. [https://github.com/wiki-safe-pdx github]"
      },
      "after": "273c9ad2dcc8cca3",
      "date": 1651813058958
    },
    {
      "type": "edit",
      "id": "1b4ae8c0ec9015d0",
      "item": {
        "type": "paragraph",
        "id": "1b4ae8c0ec9015d0",
        "text": "> Ward Cunningham was feeling guilty that we have lost sites larger number and more quickly than expected. Set out to duplicate Christopher's work. [https://github.com/wiki-safe-pdx github]"
      },
      "date": 1651813079023
    },
    {
      "type": "edit",
      "id": "1de2bd880cfa01a0",
      "item": {
        "type": "paragraph",
        "id": "1de2bd880cfa01a0",
        "text": "# wiki-safe-pdx "
      },
      "date": 1651813082546
    },
    {
      "type": "edit",
      "id": "1de2bd880cfa01a0",
      "item": {
        "type": "markdown",
        "id": "1de2bd880cfa01a0",
        "text": "# wiki-safe-pdx "
      },
      "date": 1651813084063
    },
    {
      "id": "1de2bd880cfa01a0",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0"
      ],
      "date": 1651813085396
    },
    {
      "type": "edit",
      "id": "1b4ae8c0ec9015d0",
      "item": {
        "type": "markdown",
        "id": "1b4ae8c0ec9015d0",
        "text": "> Ward Cunningham was feeling guilty that we have lost sites larger number and more quickly than expected. Set out to duplicate Christopher's work. [https://github.com/wiki-safe-pdx github]"
      },
      "date": 1651813086262
    },
    {
      "type": "edit",
      "id": "273c9ad2dcc8cca3",
      "item": {
        "type": "reference",
        "id": "273c9ad2dcc8cca3",
        "site": "ward.dojo.fed.wiki",
        "slug": "volunteer-backup-to-github",
        "title": "Volunteer Backup to Github",
        "text": "[[Christopher Reay]] has demonstrated that wiki page json can be reasonably stored as files in a git repo without unreasonable growth as version compound."
      },
      "date": 1651813117671
    },
    {
      "item": {
        "type": "factory",
        "id": "514b9a23ca3b6478"
      },
      "id": "514b9a23ca3b6478",
      "type": "add",
      "after": "1b4ae8c0ec9015d0",
      "date": 1651813169846
    },
    {
      "type": "edit",
      "id": "514b9a23ca3b6478",
      "item": {
        "type": "pagefold",
        "id": "514b9a23ca3b6478",
        "text": "~"
      },
      "date": 1651813173872
    },
    {
      "item": {
        "type": "factory",
        "id": "8b6850260c0da44f"
      },
      "id": "8b6850260c0da44f",
      "type": "add",
      "after": "514b9a23ca3b6478",
      "date": 1651813175844
    },
    {
      "type": "edit",
      "id": "8b6850260c0da44f",
      "item": {
        "type": "paragraph",
        "id": "8b6850260c0da44f",
        "text": "Here is an attempt at graphic and narrative sensemaking in the FedWiki. [http://marc.tries.fed.wiki/view/whatcom-incarceration-system/view/humanizing-opportunities/view/bail-system/view/pretrial-incarceration lineup]"
      },
      "date": 1651813189841
    },
    {
      "item": {
        "type": "factory",
        "id": "361de140f4ccc387"
      },
      "id": "361de140f4ccc387",
      "type": "add",
      "after": "8b6850260c0da44f",
      "date": 1651813295921
    },
    {
      "type": "edit",
      "id": "361de140f4ccc387",
      "item": {
        "type": "paragraph",
        "id": "361de140f4ccc387",
        "text": "https://www.statecourts.org/inmate-search/washington/whatcom-county/"
      },
      "date": 1651813297377
    },
    {
      "type": "edit",
      "id": "361de140f4ccc387",
      "item": {
        "type": "markdown",
        "id": "361de140f4ccc387",
        "text": "https://www.statecourts.org/inmate-search/washington/whatcom-county/"
      },
      "date": 1651813298523
    },
    {
      "item": {
        "type": "factory",
        "id": "7b9543ce6b4d55e1"
      },
      "id": "7b9543ce6b4d55e1",
      "type": "add",
      "after": "361de140f4ccc387",
      "date": 1651813341246
    },
    {
      "type": "edit",
      "id": "7b9543ce6b4d55e1",
      "item": {
        "type": "paragraph",
        "id": "7b9543ce6b4d55e1",
        "text": "https://www.statecourts.org/"
      },
      "date": 1651813344107
    },
    {
      "type": "edit",
      "id": "7b9543ce6b4d55e1",
      "item": {
        "type": "paragraph",
        "id": "7b9543ce6b4d55e1",
        "text": "StateCourts.org [https://www.statecourts.org/ site]"
      },
      "date": 1651813404355
    },
    {
      "item": {
        "type": "factory",
        "id": "0e52925cd8ba01c4"
      },
      "id": "0e52925cd8ba01c4",
      "type": "add",
      "after": "7b9543ce6b4d55e1",
      "date": 1651813421580
    },
    {
      "type": "edit",
      "id": "0e52925cd8ba01c4",
      "item": {
        "type": "reference",
        "id": "0e52925cd8ba01c4",
        "site": "marc.tries.fed.wiki",
        "slug": "humanizing-opportunities",
        "title": "Humanizing Opportunities",
        "text": "The orange nodes are each opportunities for people to humanize the situation. Once the situation reaches the [[Bail System]], and the defendant cannot make bail the tragedy begins."
      },
      "date": 1651813428035
    },
    {
      "item": {
        "type": "factory",
        "id": "12b9cfbe138b4708"
      },
      "id": "12b9cfbe138b4708",
      "type": "add",
      "after": "0e52925cd8ba01c4",
      "date": 1651813429989
    },
    {
      "type": "edit",
      "id": "12b9cfbe138b4708",
      "item": {
        "type": "reference",
        "id": "12b9cfbe138b4708",
        "site": "marc.tries.fed.wiki",
        "slug": "bail-system",
        "title": "Bail System",
        "text": "Bail System"
      },
      "date": 1651813436670
    },
    {
      "item": {
        "type": "factory",
        "id": "730197316327f294"
      },
      "id": "730197316327f294",
      "type": "add",
      "after": "12b9cfbe138b4708",
      "date": 1651813440244
    },
    {
      "type": "edit",
      "id": "730197316327f294",
      "item": {
        "type": "reference",
        "id": "730197316327f294",
        "site": "marc.tries.fed.wiki",
        "slug": "pretrial-incarceration",
        "title": "Pretrial Incarceration",
        "text": "Pretrial Incarceration"
      },
      "date": 1651813446795
    },
    {
      "item": {
        "type": "pagefold",
        "id": "fa81ba00d58a7b3f",
        "text": "~"
      },
      "id": "fa81ba00d58a7b3f",
      "type": "add",
      "after": "730197316327f294",
      "date": 1651814660202
    },
    {
      "type": "edit",
      "id": "fa81ba00d58a7b3f",
      "item": {
        "type": "pagefold",
        "id": "fa81ba00d58a7b3f",
        "text": "~"
      },
      "date": 1651814665000,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "item": {
        "type": "paragraph",
        "id": "103b87fcda7f8a40",
        "text": "https://english.aawsat.com/home/article/3610871/tim-culpan/next-cybersecurity-crisis-poisoned-ai"
      },
      "id": "103b87fcda7f8a40",
      "type": "add",
      "after": "fa81ba00d58a7b3f",
      "date": 1651814668998
    },
    {
      "type": "edit",
      "id": "103b87fcda7f8a40",
      "item": {
        "type": "paragraph",
        "id": "103b87fcda7f8a40",
        "text": "https://english.aawsat.com/home/article/3610871/tim-culpan/next-cybersecurity-crisis-poisoned-ai"
      },
      "date": 1651814677567
    },
    {
      "item": {
        "type": "markdown",
        "id": "fcaa731b49e973f8",
        "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
      },
      "id": "fcaa731b49e973f8",
      "type": "add",
      "after": "103b87fcda7f8a40",
      "date": 1651814681035
    },
    {
      "type": "edit",
      "id": "fcaa731b49e973f8",
      "item": {
        "type": "markdown",
        "id": "fcaa731b49e973f8",
        "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
      },
      "date": 1651814682707
    },
    {
      "type": "edit",
      "id": "fcaa731b49e973f8",
      "item": {
        "type": "markdown",
        "id": "fcaa731b49e973f8",
        "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
      },
      "date": 1651814693573
    },
    {
      "id": "fcaa731b49e973f8",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0",
        "514b9a23ca3b6478",
        "8b6850260c0da44f",
        "361de140f4ccc387",
        "7b9543ce6b4d55e1",
        "0e52925cd8ba01c4",
        "12b9cfbe138b4708",
        "730197316327f294",
        "fa81ba00d58a7b3f",
        "fcaa731b49e973f8",
        "103b87fcda7f8a40"
      ],
      "date": 1651814695172
    },
    {
      "id": "fcaa731b49e973f8",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0",
        "514b9a23ca3b6478",
        "8b6850260c0da44f",
        "361de140f4ccc387",
        "7b9543ce6b4d55e1",
        "0e52925cd8ba01c4",
        "12b9cfbe138b4708",
        "730197316327f294",
        "fa81ba00d58a7b3f",
        "103b87fcda7f8a40",
        "fcaa731b49e973f8"
      ],
      "date": 1651814696594
    },
    {
      "type": "edit",
      "id": "fcaa731b49e973f8",
      "item": {
        "type": "markdown",
        "id": "fcaa731b49e973f8",
        "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
      },
      "date": 1651814700937
    },
    {
      "type": "edit",
      "id": "fcaa731b49e973f8",
      "item": {
        "type": "markdown",
        "id": "fcaa731b49e973f8",
        "text": "> One way to help prevent data poisoning is for scientists who develop AI models to regularly check that all the labels in their training data are accurate. "
      },
      "date": 1651814702144
    },
    {
      "type": "fork",
      "date": 1651814703783
    },
    {
      "type": "edit",
      "id": "103b87fcda7f8a40",
      "item": {
        "type": "markdown",
        "id": "103b87fcda7f8a40",
        "text": "https://english.aawsat.com/home/article/3610871/tim-culpan/next-cybersecurity-crisis-poisoned-ai"
      },
      "date": 1651815402663
    },
    {
      "item": {
        "type": "factory",
        "id": "f6eb1131a47badd8"
      },
      "id": "f6eb1131a47badd8",
      "type": "add",
      "after": "fcaa731b49e973f8",
      "date": 1651815406843
    },
    {
      "type": "edit",
      "id": "f6eb1131a47badd8",
      "item": {
        "type": "pagefold",
        "id": "f6eb1131a47badd8",
        "text": "~"
      },
      "date": 1651815410523
    },
    {
      "item": {
        "type": "factory",
        "id": "ca022eb108747504"
      },
      "id": "ca022eb108747504",
      "type": "add",
      "after": "f6eb1131a47badd8",
      "date": 1651815411998
    },
    {
      "type": "edit",
      "id": "ca022eb108747504",
      "item": {
        "type": "paragraph",
        "id": "ca022eb108747504",
        "text": "[[BlTasks]]"
      },
      "date": 1651815418604
    },
    {
      "item": {
        "type": "factory",
        "id": "24d02fc02302d700"
      },
      "id": "24d02fc02302d700",
      "type": "add",
      "after": "ca022eb108747504",
      "date": 1651844190080
    },
    {
      "item": {
        "type": "factory",
        "id": "3d7a49566c93c595"
      },
      "id": "3d7a49566c93c595",
      "type": "add",
      "after": "24d02fc02302d700",
      "date": 1651844194972
    },
    {
      "type": "edit",
      "id": "24d02fc02302d700",
      "item": {
        "type": "pagefold",
        "id": "24d02fc02302d700",
        "text": "~"
      },
      "date": 1651844196366
    },
    {
      "type": "edit",
      "id": "3d7a49566c93c595",
      "item": {
        "type": "paragraph",
        "id": "3d7a49566c93c595",
        "text": "You Don’t Need A UI Framework"
      },
      "date": 1651844197251
    },
    {
      "type": "edit",
      "id": "3d7a49566c93c595",
      "item": {
        "type": "paragraph",
        "id": "3d7a49566c93c595",
        "text": "You Don’t Need A UI Framework. [https://www.smashingmagazine.com/2022/05/you-dont-need-ui-framework/ post]"
      },
      "date": 1651844212070
    },
    {
      "item": {
        "type": "factory",
        "id": "06aa876401e9b449"
      },
      "id": "06aa876401e9b449",
      "type": "add",
      "after": "3d7a49566c93c595",
      "date": 1651844232496
    },
    {
      "type": "edit",
      "id": "06aa876401e9b449",
      "item": {
        "type": "markdown",
        "id": "06aa876401e9b449",
        "text": "> From the perspective of an agency that takes on lots of short/medium-term projects, this could make a lot of sense. They don’t have to start every new project from zero. And as the team gets more and more comfortable with the tool, they learn to use it really effectively.\n>\n> I haven’t done much agency work, so it’s hard for me to say. I’ve spent most of my career working for product companies. None of the places I’ve worked for have ever used a third-party UI framework. We always built something in-house (eg. Wonder Blocks at Khan Academy, or Walrus at DigitalOcean)."
      },
      "date": 1651844242371
    },
    {
      "type": "edit",
      "id": "06aa876401e9b449",
      "item": {
        "type": "markdown",
        "id": "06aa876401e9b449",
        "text": "> From the perspective of an agency that takes on lots of short/medium-term projects, this could make a lot of sense. They don’t have to start every new project from zero. And as the team gets more and more comfortable with the tool, they learn to use it really effectively.\n>\n> I haven’t done much agency work, so it’s hard for me to say. I’ve spent most of my career working for product companies. None of the places I’ve worked for have ever used a third-party UI framework. We always built something in-house (eg. Wonder Blocks [https://wonderblocks.khanacademy.org/ site] at Khan Academy, or Walrus at DigitalOcean)."
      },
      "date": 1651844266686
    },
    {
      "type": "edit",
      "id": "06aa876401e9b449",
      "item": {
        "type": "markdown",
        "id": "06aa876401e9b449",
        "text": "> From the perspective of an agency that takes on lots of short/medium-term projects, this could make a lot of sense. They don’t have to start every new project from zero. And as the team gets more and more comfortable with the tool, they learn to use it really effectively.\n>\n> I haven’t done much agency work, so it’s hard for me to say. I’ve spent most of my career working for product companies. None of the places I’ve worked for have ever used a third-party UI framework. We always built something in-house (eg. Wonder Blocks [https://wonderblocks.khanacademy.org/ site] at Khan Academy, or Walrus [https://www.digitalocean.com/blog/introducing-walrus-digitaloceans-reimagined-design post] at DigitalOcean)."
      },
      "date": 1651844318534
    },
    {
      "item": {
        "type": "factory",
        "id": "d07b88a0bfe97ce4"
      },
      "id": "d07b88a0bfe97ce4",
      "type": "add",
      "after": "06aa876401e9b449",
      "date": 1651844525682
    },
    {
      "item": {
        "type": "factory",
        "id": "e9e929639929be88"
      },
      "id": "e9e929639929be88",
      "type": "add",
      "after": "d07b88a0bfe97ce4",
      "date": 1651844532533
    },
    {
      "type": "edit",
      "id": "d07b88a0bfe97ce4",
      "item": {
        "type": "pagefold",
        "id": "d07b88a0bfe97ce4",
        "text": "~"
      },
      "date": 1651844533677
    },
    {
      "type": "edit",
      "id": "e9e929639929be88",
      "item": {
        "type": "paragraph",
        "id": "e9e929639929be88",
        "text": "axe DevTools - Web Accessibility Testing"
      },
      "date": 1651844536024
    },
    {
      "type": "edit",
      "id": "e9e929639929be88",
      "item": {
        "type": "paragraph",
        "id": "e9e929639929be88",
        "text": "axe DevTools - Web Accessibility Testing. [https://github.com/dequelabs/axe-core github]"
      },
      "date": 1651844552816
    },
    {
      "item": {
        "type": "factory",
        "id": "6e5f2761ae13c4ba"
      },
      "id": "6e5f2761ae13c4ba",
      "type": "add",
      "after": "e9e929639929be88",
      "date": 1651844562729
    },
    {
      "type": "edit",
      "id": "6e5f2761ae13c4ba",
      "item": {
        "type": "video",
        "id": "6e5f2761ae13c4ba",
        "text": "YOUTUBE iRGB40c_YJc"
      },
      "date": 1651844570432
    },
    {
      "type": "edit",
      "id": "6e5f2761ae13c4ba",
      "item": {
        "type": "video",
        "id": "6e5f2761ae13c4ba",
        "text": "YOUTUBE iRGB40c_YJc\nGetting Started with the axe DevTools Browser Extension"
      },
      "date": 1651844834924
    },
    {
      "type": "edit",
      "id": "e9e929639929be88",
      "item": {
        "type": "paragraph",
        "id": "e9e929639929be88",
        "text": "axe DevTools - Web Accessibility Testing. [https://github.com/dequelabs/axe-core github], [https://www.deque.com/axe/ site]"
      },
      "date": 1651844859638
    },
    {
      "item": {
        "type": "factory",
        "id": "331177e2b2bcadf2"
      },
      "id": "331177e2b2bcadf2",
      "type": "add",
      "after": "6e5f2761ae13c4ba",
      "date": 1651845829609
    },
    {
      "type": "edit",
      "id": "331177e2b2bcadf2",
      "item": {
        "type": "pagefold",
        "id": "331177e2b2bcadf2",
        "text": "~"
      },
      "date": 1651845832621
    },
    {
      "item": {
        "type": "factory",
        "id": "5f140fd617c26722"
      },
      "id": "5f140fd617c26722",
      "type": "add",
      "after": "331177e2b2bcadf2",
      "date": 1651845834253
    },
    {
      "type": "edit",
      "id": "5f140fd617c26722",
      "item": {
        "type": "video",
        "id": "5f140fd617c26722",
        "text": "VIMEO 14965237"
      },
      "date": 1651845840551
    },
    {
      "type": "edit",
      "id": "5f140fd617c26722",
      "item": {
        "type": "video",
        "id": "5f140fd617c26722",
        "text": "VIMEO 14965237\n@ NYU School of Engineering"
      },
      "date": 1651845870827
    },
    {
      "type": "edit",
      "id": "5f140fd617c26722",
      "item": {
        "type": "video",
        "id": "5f140fd617c26722",
        "text": "VIMEO 14965237\n[[Alan Kay]] @ NYU School of Engineering"
      },
      "date": 1651846147720
    },
    {
      "item": {
        "type": "factory",
        "id": "95dbef71e1a4c551"
      },
      "id": "95dbef71e1a4c551",
      "type": "add",
      "after": "5f140fd617c26722",
      "date": 1651846421570
    },
    {
      "type": "edit",
      "id": "95dbef71e1a4c551",
      "item": {
        "type": "pagefold",
        "id": "95dbef71e1a4c551",
        "text": "~"
      },
      "date": 1651846424556
    },
    {
      "item": {
        "type": "factory",
        "id": "71eb5fb0dbe115da"
      },
      "id": "71eb5fb0dbe115da",
      "type": "add",
      "after": "95dbef71e1a4c551",
      "date": 1651846426771
    },
    {
      "type": "edit",
      "id": "71eb5fb0dbe115da",
      "item": {
        "type": "reference",
        "id": "71eb5fb0dbe115da",
        "site": "andrew.dojo.fed.wiki",
        "slug": "andrews-backup-service-plan",
        "title": "Andrew's Backup Service Plan",
        "text": "As a follow-up/spin-off to my work with [[Federated Wiki Feeds]] I'd like to create a new free service."
      },
      "date": 1651846431271
    },
    {
      "id": "eb306e7bfc72cb2d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "eb306e7bfc72cb2d",
        "text": "[[Andrew's Backup Service Plan]]"
      },
      "after": "71eb5fb0dbe115da",
      "date": 1651846540521
    },
    {
      "id": "eb306e7bfc72cb2d",
      "type": "remove",
      "date": 1651846558116
    },
    {
      "item": {
        "type": "factory",
        "id": "edc2f2c15c3cb003"
      },
      "id": "edc2f2c15c3cb003",
      "type": "add",
      "after": "71eb5fb0dbe115da",
      "date": 1651846802959
    },
    {
      "type": "edit",
      "id": "edc2f2c15c3cb003",
      "item": {
        "type": "pagefold",
        "id": "edc2f2c15c3cb003",
        "text": "~"
      },
      "date": 1651846806841
    },
    {
      "item": {
        "type": "factory",
        "id": "b58be9de427f3a3b"
      },
      "id": "b58be9de427f3a3b",
      "type": "add",
      "after": "edc2f2c15c3cb003",
      "date": 1651846809173
    },
    {
      "type": "edit",
      "id": "b58be9de427f3a3b",
      "item": {
        "type": "paragraph",
        "id": "b58be9de427f3a3b",
        "text": "\n\n[[Rebecca Wirfs-Brock]]\n@rebeccawb\nThis reminds me of the processual view instead of a fixed (stable) object view of existence. Just watched this pretty cool visual explanation by a Denver philosophy professor:We are all part of interacting/complex processes:"
      },
      "date": 1651846816580
    },
    {
      "type": "edit",
      "id": "b58be9de427f3a3b",
      "item": {
        "type": "paragraph",
        "id": "b58be9de427f3a3b",
        "text": "\n[[Rebecca Wirfs-Brock]]\n@rebeccawb\nThis reminds me of the processual view instead of a fixed (stable) object view of existence. Just watched this pretty cool visual explanation by a Denver philosophy professor:We are all part of interacting/complex processes: [https://aeon.co/videos/to-see-the-universe-more-clearly-think-in-terms-of-processes-not-objects page]"
      },
      "date": 1651846831588
    },
    {
      "type": "edit",
      "id": "b58be9de427f3a3b",
      "item": {
        "type": "paragraph",
        "id": "b58be9de427f3a3b",
        "text": "[[Rebecca Wirfs-Brock]]\n@rebeccawb\nThis reminds me of the processual view instead of a fixed (stable) object view of existence. Just watched this pretty cool visual explanation by a Denver philosophy professor:We are all part of interacting/complex processes: [https://aeon.co/videos/to-see-the-universe-more-clearly-think-in-terms-of-processes-not-objects page]"
      },
      "date": 1651846873015
    },
    {
      "type": "add",
      "id": "377b1c4045b9684d",
      "item": {
        "type": "paragraph",
        "id": "377b1c4045b9684d",
        "text": "To see the Universe more clearly, think in terms of processes, not objects\n\nNothing is fixed in time or space. Everything – from quantum particles to people, planets and galaxies – is in constant motion, and part of a constellation of inextricably interwoven systems. That might seem like a strictly academic observation with little bearing on your day-to-day life, but, as Thomas Nail, a professor of philosophy at the University of Denver, argues in this short video, overlooking this fact can have real-world consequences. Instead of understanding the Universe in terms of inflexible objects, Nail proposes that we view our world in terms of processes subject to constant change. This, he argues, will lead to improvements in science, public policy and even interpersonal relationships.\n\nDirector: Thomas Nail\n\nAnimator: Ryan Rizzio"
      },
      "after": "b58be9de427f3a3b",
      "date": 1651846873985
    },
    {
      "type": "edit",
      "id": "377b1c4045b9684d",
      "item": {
        "type": "paragraph",
        "id": "377b1c4045b9684d",
        "text": "To see the Universe more clearly, think in terms of processes, not objects\n\nNothing is fixed in time or space. Everything – from quantum particles to people, planets and galaxies – is in constant motion, and part of a constellation of inextricably interwoven systems. That might seem like a strictly academic observation with little bearing on your day-to-day life, but, as Thomas Nail, a professor of philosophy at the University of Denver, argues in this short video, overlooking this fact can have real-world consequences. Instead of understanding the Universe in terms of inflexible objects, Nail proposes that we view our world in terms of processes subject to constant change. This, he argues, will lead to improvements in science, public policy and even interpersonal relationships.\n\nDirector: [[Thomas Nail]]\n\nAnimator: [[Ryan Rizzio]]"
      },
      "date": 1651846889832
    },
    {
      "item": {
        "type": "factory",
        "id": "7afc9466c04d2825"
      },
      "id": "7afc9466c04d2825",
      "type": "add",
      "after": "377b1c4045b9684d",
      "date": 1651847028418
    },
    {
      "type": "edit",
      "id": "7afc9466c04d2825",
      "item": {
        "type": "video",
        "id": "7afc9466c04d2825",
        "text": "VIMEO 699129480"
      },
      "date": 1651847034524
    },
    {
      "item": {
        "type": "factory",
        "id": "b6c39ab5d7f5ec8d"
      },
      "id": "b6c39ab5d7f5ec8d",
      "type": "add",
      "after": "7afc9466c04d2825",
      "date": 1651847395315
    },
    {
      "type": "edit",
      "id": "b6c39ab5d7f5ec8d",
      "item": {
        "type": "paragraph",
        "id": "b6c39ab5d7f5ec8d",
        "text": "03:40 Societies are not made of discrete people"
      },
      "date": 1651847418208
    },
    {
      "type": "add",
      "id": "b14964dcb4767c57",
      "item": {
        "type": "paragraph",
        "id": "b14964dcb4767c57",
        "text": "(Societies do not consist of individual people)"
      },
      "after": "b6c39ab5d7f5ec8d",
      "date": 1651847458331
    },
    {
      "type": "edit",
      "id": "7afc9466c04d2825",
      "item": {
        "type": "video",
        "id": "7afc9466c04d2825",
        "text": "VIMEO 699129480\nWhat is Movement? from Aeon Video on Vimeo"
      },
      "date": 1651847780727
    },
    {
      "type": "edit",
      "id": "7afc9466c04d2825",
      "item": {
        "type": "video",
        "id": "7afc9466c04d2825",
        "text": "VIMEO 699129480\nWhat is Movement? from Aeon Video on Vimeo [https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887243.mp4~hmac=1e3692add1c3c2be674bb44b8f04cb75396010ce585dade501c9a0b1f771a708/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887243.mp4 mp4]"
      },
      "date": 1651847908309
    },
    {
      "type": "edit",
      "id": "7afc9466c04d2825",
      "item": {
        "type": "video",
        "id": "7afc9466c04d2825",
        "text": "VIMEO 699129480\nWhat is Movement? from Aeon Video on Vimeo. [https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887243.mp4~hmac=1e3692add1c3c2be674bb44b8f04cb75396010ce585dade501c9a0b1f771a708/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887243.mp4 mp4]"
      },
      "date": 1651847921036
    },
    {
      "item": {
        "type": "factory",
        "id": "d418bc23b74a76e6"
      },
      "id": "d418bc23b74a76e6",
      "type": "add",
      "after": "b14964dcb4767c57",
      "date": 1651848001637
    },
    {
      "type": "edit",
      "id": "d418bc23b74a76e6",
      "item": {
        "type": "code",
        "id": "d418bc23b74a76e6",
        "text": "\"progressive\": [{\n                        \"profile\": \"164\",\n                        \"width\": 640,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887243.mp4~hmac=1e3692add1c3c2be674bb44b8f04cb75396010ce585dade501c9a0b1f771a708/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887243.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"360p\",\n                        \"id\": \"c930e21b-6666-4b4a-9063-9f3bc5bf49af\",\n                        \"origin\": \"gcs\",\n                        \"height\": 360\n                    }, {\n                        \"profile\": \"169\",\n                        \"width\": 1920,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887261.mp4~hmac=cb126fcbc1bf8caf0e9b6053f20c9fc6519cf8b154a353f607135117bd08bde3/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887261.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"1080p\",\n                        \"id\": \"d35fd7a5-9b44-4b3a-a0d0-9fb84f41b790\",\n                        \"origin\": \"gcs\",\n                        \"height\": 1080\n                    }, {\n                        \"profile\": \"165\",\n                        \"width\": 960,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887281.mp4~hmac=1fc39793f5699cf6e4713fe6dbc8d0ecb75945c46f8b48465c8b7f5b3e3cd715/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887281.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"540p\",\n                        \"id\": \"863dfb43-8858-465d-babc-d3b51ac31889\",\n                        \"origin\": \"gcs\",\n                        \"height\": 540\n                    }, {\n                        \"profile\": \"174\",\n                        \"width\": 1280,\n                        \"mime\": \"video/mp4\",\n                        \"fps\": 24,\n                        \"url\": \"https://vod-progressive.akamaized.net/exp=1651851025~acl=%2Fvimeo-prod-skyfire-std-us%2F01%2F4825%2F27%2F699129480%2F3233887289.mp4~hmac=3a630cab74a34b67eb6e62ce47e9e2f322fca7ff0d0dfaa45ead86e1da19b4bd/vimeo-prod-skyfire-std-us/01/4825/27/699129480/3233887289.mp4\",\n                        \"cdn\": \"akamai_interconnect\",\n                        \"quality\": \"720p\",\n                        \"id\": \"a59d6da3-1e27-4803-8606-cc58dd01fc52\",\n                        \"origin\": \"gcs\",\n                        \"height\": 720\n                    }]\n                },"
      },
      "date": 1651848004221
    },
    {
      "type": "edit",
      "id": "b6c39ab5d7f5ec8d",
      "item": {
        "type": "paragraph",
        "id": "b6c39ab5d7f5ec8d",
        "text": "**03:40 – Societies are not made of discrete people**"
      },
      "date": 1651848619194
    },
    {
      "type": "edit",
      "id": "b6c39ab5d7f5ec8d",
      "item": {
        "type": "markdown",
        "id": "b6c39ab5d7f5ec8d",
        "text": "**03:40 – Societies are not made of discrete people**"
      },
      "date": 1651848620330
    },
    {
      "id": "b58be9de427f3a3b",
      "type": "remove",
      "date": 1651848820630
    },
    {
      "id": "377b1c4045b9684d",
      "type": "remove",
      "date": 1651848922699
    },
    {
      "id": "b6c39ab5d7f5ec8d",
      "type": "remove",
      "date": 1651849000461
    },
    {
      "item": {
        "type": "factory",
        "id": "17313f9a9cdb486c"
      },
      "id": "17313f9a9cdb486c",
      "type": "add",
      "after": "d418bc23b74a76e6",
      "date": 1651849940655
    },
    {
      "type": "remove",
      "id": "17313f9a9cdb486c",
      "date": 1651849944491
    },
    {
      "item": {
        "type": "factory",
        "id": "8ce5b8da97970792"
      },
      "id": "8ce5b8da97970792",
      "type": "add",
      "after": "d418bc23b74a76e6",
      "date": 1651849949108
    },
    {
      "type": "edit",
      "id": "8ce5b8da97970792",
      "item": {
        "type": "pagefold",
        "id": "8ce5b8da97970792",
        "text": "~"
      },
      "date": 1651849951917
    },
    {
      "item": {
        "type": "factory",
        "id": "b6edabe1db07e75f"
      },
      "id": "b6edabe1db07e75f",
      "type": "add",
      "after": "8ce5b8da97970792",
      "date": 1651849953473
    },
    {
      "type": "edit",
      "id": "b6edabe1db07e75f",
      "item": {
        "type": "paragraph",
        "id": "b6edabe1db07e75f",
        "text": "[[Mike Caulfield]]\n@holden\nIn educational work I used to talk about measuring \"golden inputs\" (the sorts of intermediate inputs you have high confidence correlate with good outcomes) as being far more important than outcomes, at least on the institutional level."
      },
      "date": 1651849962454
    },
    {
      "type": "edit",
      "id": "b6edabe1db07e75f",
      "item": {
        "type": "paragraph",
        "id": "b6edabe1db07e75f",
        "text": "[[Mike Caulfield]]\n@holden [https://twitter.com/holden/status/1522594853254803458?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] –\nIn educational work I used to talk about measuring \"golden inputs\" (the sorts of intermediate inputs you have high confidence correlate with good outcomes) as being far more important than outcomes, at least on the institutional level."
      },
      "date": 1651849976184
    },
    {
      "type": "add",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "paragraph",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]]\n@holden\n·\n48 s\nAntwort an \n@holden\nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "after": "b6edabe1db07e75f",
      "date": 1651850227733
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "paragraph",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]]\n@holden\n·\n[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] \nAntwort an \n@holden\nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850245406
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "paragraph",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]]\n@holden\n·\n[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] \nReply to \n@holden\nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850253551
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "paragraph",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]]\n@holden\n·\n[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] \nReply to \n@holden – \nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850259459
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "markdown",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]]\n@holden\n·\n[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] \nReply to \n@holden – \nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850264686
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "markdown",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]] @holden ·[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] Reply to @holden – \nI forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850284136
    },
    {
      "type": "edit",
      "id": "e9ead1910be44c70",
      "item": {
        "type": "markdown",
        "id": "e9ead1910be44c70",
        "text": "[[Mike Caulfield]] @holden ·[https://twitter.com/holden/status/1522596051408015361?s=20&t=A0z3qkZ48fRtad7Yz8sz6Q tweet] Reply to @holden – I forget who first told me this, but the **whole point** of having a change model is you can track intermediate inputs and interpret them meaningfully, dashboards which focus on absolute endpoints are like driving while looking in the rear view mirror."
      },
      "date": 1651850291145
    },
    {
      "item": {
        "type": "graphviz",
        "id": "20f8ffa87431812f",
        "text": ""
      },
      "id": "20f8ffa87431812f",
      "type": "add",
      "after": "e9ead1910be44c70",
      "date": 1651879646389
    },
    {
      "type": "edit",
      "id": "20f8ffa87431812f",
      "item": {
        "type": "graphviz",
        "id": "20f8ffa87431812f",
        "text": ""
      },
      "date": 1651879651387
    },
    {
      "item": {
        "type": "pagefold",
        "id": "0fa0650fd62f8baa",
        "text": ""
      },
      "id": "0fa0650fd62f8baa",
      "type": "add",
      "after": "20f8ffa87431812f",
      "date": 1651879655950
    },
    {
      "type": "remove",
      "id": "20f8ffa87431812f",
      "date": 1651879657137
    },
    {
      "type": "remove",
      "id": "0fa0650fd62f8baa",
      "date": 1651879657943
    },
    {
      "item": {
        "type": "pagefold",
        "id": "500b075fa397fc0a",
        "text": "~"
      },
      "id": "500b075fa397fc0a",
      "type": "add",
      "after": "e9ead1910be44c70",
      "date": 1651879659705
    },
    {
      "type": "edit",
      "id": "500b075fa397fc0a",
      "item": {
        "type": "pagefold",
        "id": "500b075fa397fc0a",
        "text": "~"
      },
      "date": 1651879661600
    },
    {
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg script` probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to wiki.ralfbarkow.ch, it worked. Since the script also finds files that are only present on the marc.tries.fed.wiki server, I thought the script had magic powers."
      },
      "id": "6d13289db1e42419",
      "type": "add",
      "after": "500b075fa397fc0a",
      "date": 1651879663159
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg script` probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to wiki.ralfbarkow.ch, it worked. Since the script also finds files that are only present on the marc.tries.fed.wiki server, I thought the script had magic powers."
      },
      "date": 1651879679434
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg script` probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to wiki.ralfbarkow.ch, it worked. Since the script also finds files that are only present on the marc.tries.fed.wiki server, I thought the script had magic powers."
      },
      "date": 1651879697801
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg` script probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to `wiki.ralfbarkow.ch`, it worked. Since the script also finds files that are only present on the `marc.tries.fed.wiki` server, I thought the script had magic powers."
      },
      "date": 1651879699178
    },
    {
      "item": {
        "type": "markdown",
        "id": "f7048ba61515b2b9",
        "text": "# [[Enrich Any SVG]] ⇒ Converted SVG"
      },
      "id": "f7048ba61515b2b9",
      "type": "add",
      "after": "6d13289db1e42419",
      "date": 1651879711437
    },
    {
      "type": "edit",
      "id": "f7048ba61515b2b9",
      "item": {
        "type": "markdown",
        "id": "f7048ba61515b2b9",
        "text": "# [[Enrich Any SVG]] ⇒ Converted SVG"
      },
      "date": 1651879714933
    },
    {
      "id": "f7048ba61515b2b9",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0",
        "514b9a23ca3b6478",
        "8b6850260c0da44f",
        "361de140f4ccc387",
        "7b9543ce6b4d55e1",
        "0e52925cd8ba01c4",
        "12b9cfbe138b4708",
        "730197316327f294",
        "fa81ba00d58a7b3f",
        "103b87fcda7f8a40",
        "fcaa731b49e973f8",
        "f6eb1131a47badd8",
        "ca022eb108747504",
        "24d02fc02302d700",
        "3d7a49566c93c595",
        "06aa876401e9b449",
        "d07b88a0bfe97ce4",
        "e9e929639929be88",
        "6e5f2761ae13c4ba",
        "331177e2b2bcadf2",
        "5f140fd617c26722",
        "95dbef71e1a4c551",
        "71eb5fb0dbe115da",
        "edc2f2c15c3cb003",
        "7afc9466c04d2825",
        "b14964dcb4767c57",
        "d418bc23b74a76e6",
        "8ce5b8da97970792",
        "b6edabe1db07e75f",
        "e9ead1910be44c70",
        "500b075fa397fc0a",
        "f7048ba61515b2b9",
        "6d13289db1e42419"
      ],
      "date": 1651879719757
    },
    {
      "type": "edit",
      "id": "f7048ba61515b2b9",
      "item": {
        "type": "markdown",
        "id": "f7048ba61515b2b9",
        "text": "# [[Enrich Any SVG]] ⇒ Converted SVG"
      },
      "date": 1651879727701
    },
    {
      "item": {
        "type": "code",
        "id": "cb1125a973f6bdac",
        "text": "export async function assets() {\n  let table = []\n  let assets = await sources('assets')\n  for (let source of assets){\n    let site = source.panel.site\n    let slug = source.panel.slug\n    let item = source.panel.itemId\n    for (let dir of Object.keys(source.assetsData)) {\n      for (let path of Object.keys(source.assetsData[dir])) {\n        for (let file of source.assetsData[dir][path]) {\n          path = path.startsWith(\"//\") ? path : `//${site}${path}`\n          let url = `${path}/${dir}/${file}`\n          let row = {site,slug,item,dir,path,file,url}\n          table.push(row)\n        }\n      }\n    }\n  }\n  return table\n}\n"
      },
      "id": "cb1125a973f6bdac",
      "type": "add",
      "after": "6d13289db1e42419",
      "date": 1651879774396
    },
    {
      "type": "edit",
      "id": "cb1125a973f6bdac",
      "item": {
        "type": "code",
        "id": "cb1125a973f6bdac",
        "text": "export async function assets() {\n  let table = []\n  let assets = await sources('assets')\n  for (let source of assets){\n    let site = source.panel.site\n    let slug = source.panel.slug\n    let item = source.panel.itemId\n    for (let dir of Object.keys(source.assetsData)) {\n      for (let path of Object.keys(source.assetsData[dir])) {\n        for (let file of source.assetsData[dir][path]) {\n          path = path.startsWith(\"//\") ? path : `//${site}${path}`\n          let url = `${path}/${dir}/${file}`\n          let row = {site,slug,item,dir,path,file,url}\n          table.push(row)\n        }\n      }\n    }\n  }\n  return table\n}\n"
      },
      "date": 1651879777033
    },
    {
      "item": {
        "type": "code",
        "id": "8ed59cda01ce80f4",
        "text": "$ wget http://code.fed.wiki/assets/v1/frame.js"
      },
      "id": "8ed59cda01ce80f4",
      "type": "add",
      "after": "cb1125a973f6bdac",
      "date": 1651879803961
    },
    {
      "type": "edit",
      "id": "8ed59cda01ce80f4",
      "item": {
        "type": "code",
        "id": "8ed59cda01ce80f4",
        "text": "$ wget http://code.fed.wiki/assets/v1/frame.js"
      },
      "date": 1651879812249
    },
    {
      "id": "8ed59cda01ce80f4",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0",
        "514b9a23ca3b6478",
        "8b6850260c0da44f",
        "361de140f4ccc387",
        "7b9543ce6b4d55e1",
        "0e52925cd8ba01c4",
        "12b9cfbe138b4708",
        "730197316327f294",
        "fa81ba00d58a7b3f",
        "103b87fcda7f8a40",
        "fcaa731b49e973f8",
        "f6eb1131a47badd8",
        "ca022eb108747504",
        "24d02fc02302d700",
        "3d7a49566c93c595",
        "06aa876401e9b449",
        "d07b88a0bfe97ce4",
        "e9e929639929be88",
        "6e5f2761ae13c4ba",
        "331177e2b2bcadf2",
        "5f140fd617c26722",
        "95dbef71e1a4c551",
        "71eb5fb0dbe115da",
        "edc2f2c15c3cb003",
        "7afc9466c04d2825",
        "b14964dcb4767c57",
        "d418bc23b74a76e6",
        "8ce5b8da97970792",
        "b6edabe1db07e75f",
        "e9ead1910be44c70",
        "500b075fa397fc0a",
        "f7048ba61515b2b9",
        "6d13289db1e42419",
        "8ed59cda01ce80f4",
        "cb1125a973f6bdac"
      ],
      "date": 1651879814781
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg` script probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to `wiki.ralfbarkow.ch`, it worked. Since the script also finds files that are only present on the `marc.tries.fed.wiki` server, I thought the script had magic powers."
      },
      "date": 1651879914555
    },
    {
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the function assets() in v1/frame.js assembles the path incorrectly in this case: because now //$(site) is prepended to the path, which then leads to e.g. convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg."
      },
      "id": "39ba5d859b93614e",
      "type": "add",
      "after": "cb1125a973f6bdac",
      "date": 1651880068643
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the function assets() in v1/frame.js assembles the path incorrectly in this case: because now //$(site) is prepended to the path, which then leads to e.g. convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg."
      },
      "date": 1651880082608
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` assembles the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651880084867
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` assembles the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651880130214
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` assembles the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651880237551
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` assembles the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651880247718
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` assembles the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651880268427
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg` script probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to `wiki.ralfbarkow.ch`, it worked. Since the script also finds files that are only present on the `marc.tries.fed.wiki` server, I thought the script had magic powers."
      },
      "date": 1651880295975
    },
    {
      "type": "edit",
      "id": "6d13289db1e42419",
      "item": {
        "type": "markdown",
        "id": "6d13289db1e42419",
        "text": "The issue with the `convert-any-svg` script probably had to do with a misunderstanding on my part. As soon as I uploaded one of Marc's svg files to `wiki.ralfbarkow.ch`, it worked. Since the script also finds files that are only present on the `marc.tries.fed.wiki` server, I thought the script had magic powers."
      },
      "date": 1651880312788
    },
    {
      "item": {
        "type": "pagefold",
        "id": "a6074d1b613e7ace",
        "text": "~"
      },
      "id": "a6074d1b613e7ace",
      "type": "add",
      "after": "39ba5d859b93614e",
      "date": 1651880729339
    },
    {
      "type": "edit",
      "id": "a6074d1b613e7ace",
      "item": {
        "type": "pagefold",
        "id": "a6074d1b613e7ace",
        "text": "~"
      },
      "date": 1651880733080
    },
    {
      "item": {
        "type": "paragraph",
        "id": "136821a2177ffd0d",
        "text": "JavaScript If-Else and If-Then – JS Conditional Statements [https://www.freecodecamp.org/news/javascript-if-else-and-if-then-js-conditional-statements/ post]"
      },
      "id": "136821a2177ffd0d",
      "type": "add",
      "after": "a6074d1b613e7ace",
      "date": 1651880736698
    },
    {
      "type": "edit",
      "id": "136821a2177ffd0d",
      "item": {
        "type": "paragraph",
        "id": "136821a2177ffd0d",
        "text": "JavaScript If-Else and If-Then – JS Conditional Statements [https://www.freecodecamp.org/news/javascript-if-else-and-if-then-js-conditional-statements/ post]"
      },
      "date": 1651880739411
    },
    {
      "type": "edit",
      "id": "136821a2177ffd0d",
      "item": {
        "type": "paragraph",
        "id": "136821a2177ffd0d",
        "text": "JavaScript If-Else and If-Then – JS Conditional Statements [https://www.freecodecamp.org/news/javascript-if-else-and-if-then-js-conditional-statements/ post]"
      },
      "date": 1651880750918
    },
    {
      "item": {
        "type": "paragraph",
        "id": "0e191dc6b0b801e2",
        "text": "Conditional (ternary) operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
      },
      "id": "0e191dc6b0b801e2",
      "type": "add",
      "after": "136821a2177ffd0d",
      "date": 1651880815971
    },
    {
      "type": "edit",
      "id": "0e191dc6b0b801e2",
      "item": {
        "type": "paragraph",
        "id": "0e191dc6b0b801e2",
        "text": "Conditional (ternary) operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
      },
      "date": 1651880817917
    },
    {
      "type": "edit",
      "id": "0e191dc6b0b801e2",
      "item": {
        "type": "paragraph",
        "id": "0e191dc6b0b801e2",
        "text": "Conditional (ternary) operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
      },
      "date": 1651880825400
    },
    {
      "type": "add",
      "id": "377c3a3767eccdb3",
      "item": {
        "type": "paragraph",
        "id": "377c3a3767eccdb3",
        "text": "\n\n"
      },
      "after": "0e191dc6b0b801e2",
      "date": 1651880828180
    },
    {
      "item": {
        "type": "code",
        "id": "2c42db06fe74d597",
        "text": "condition ? if condition is true : if condition is false"
      },
      "id": "2c42db06fe74d597",
      "type": "add",
      "after": "ac16327f9a725a97",
      "date": 1651880830652
    },
    {
      "id": "2c42db06fe74d597",
      "type": "move",
      "order": [
        "273c9ad2dcc8cca3",
        "1de2bd880cfa01a0",
        "1b4ae8c0ec9015d0",
        "514b9a23ca3b6478",
        "8b6850260c0da44f",
        "361de140f4ccc387",
        "7b9543ce6b4d55e1",
        "0e52925cd8ba01c4",
        "12b9cfbe138b4708",
        "730197316327f294",
        "fa81ba00d58a7b3f",
        "103b87fcda7f8a40",
        "fcaa731b49e973f8",
        "f6eb1131a47badd8",
        "ca022eb108747504",
        "24d02fc02302d700",
        "3d7a49566c93c595",
        "06aa876401e9b449",
        "d07b88a0bfe97ce4",
        "e9e929639929be88",
        "6e5f2761ae13c4ba",
        "331177e2b2bcadf2",
        "5f140fd617c26722",
        "95dbef71e1a4c551",
        "71eb5fb0dbe115da",
        "edc2f2c15c3cb003",
        "7afc9466c04d2825",
        "b14964dcb4767c57",
        "d418bc23b74a76e6",
        "8ce5b8da97970792",
        "b6edabe1db07e75f",
        "e9ead1910be44c70",
        "500b075fa397fc0a",
        "f7048ba61515b2b9",
        "6d13289db1e42419",
        "8ed59cda01ce80f4",
        "cb1125a973f6bdac",
        "39ba5d859b93614e",
        "a6074d1b613e7ace",
        "136821a2177ffd0d",
        "0e191dc6b0b801e2",
        "377c3a3767eccdb3",
        "2c42db06fe74d597",
        "ac16327f9a725a97"
      ],
      "date": 1651880832687,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "ac16327f9a725a97",
      "item": {
        "type": "paragraph",
        "id": "ac16327f9a725a97",
        "text": "The condition goes before the ? mark and if it is true, then the code between the ? mark and : would execute. If the condition is false, then the code after the  : would execute. "
      },
      "after": "377c3a3767eccdb3",
      "date": 1651880834035
    },
    {
      "type": "edit",
      "id": "377c3a3767eccdb3",
      "item": {
        "type": "paragraph",
        "id": "377c3a3767eccdb3",
        "text": "\n\n"
      },
      "date": 1651880836845
    },
    {
      "type": "edit",
      "id": "2c42db06fe74d597",
      "item": {
        "type": "code",
        "id": "2c42db06fe74d597",
        "text": "condition ? if condition is true : if condition is false"
      },
      "date": 1651880838818
    },
    {
      "type": "fork",
      "date": 1651880840631
    },
    {
      "type": "edit",
      "id": "0e191dc6b0b801e2",
      "item": {
        "type": "paragraph",
        "id": "0e191dc6b0b801e2",
        "text": "# Conditional (Ternary) Operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
      },
      "date": 1651880871217
    },
    {
      "type": "edit",
      "id": "0e191dc6b0b801e2",
      "item": {
        "type": "markdown",
        "id": "0e191dc6b0b801e2",
        "text": "# Conditional (Ternary) Operator in JavaScript\n\nIf you have a short if else statement, then you might choose to go with the ternary operator.  The word ternary means something composed of three parts.\n\nThis is the basic syntax for a ternary operator:"
      },
      "date": 1651880872530
    },
    {
      "type": "edit",
      "id": "39ba5d859b93614e",
      "item": {
        "type": "markdown",
        "id": "39ba5d859b93614e",
        "text": "If only remote svg assets exist, they are recognized by the `convert-any-svg` script, but the `function assets()` in `v1/frame.js` seems to assemble the path incorrectly in this case: because now `//$(site)` is prepended to the `path`, which then results in e.g. `convert-any-svg.html: url: //wiki.ralfbarkow.chhttp://marc.tries.fed.wiki/assets//ACE System.svg`."
      },
      "date": 1651881223915
    },
    {
      "item": {
        "type": "factory",
        "id": "1131840881e8a893"
      },
      "id": "1131840881e8a893",
      "type": "add",
      "after": "2c42db06fe74d597",
      "date": 1651881622984
    },
    {
      "type": "remove",
      "id": "1131840881e8a893",
      "date": 1651881637408
    }
  ]
}