{
  "title": "Render Graph",
  "story": [
    {
      "type": "paragraph",
      "id": "5cb10a47242d19cb",
      "text": "[[Riccardo Loggini]], Why Talking About Render Graphs [https://logins.github.io/graphics/2021/05/31/RenderGraphs.html page], [https://web.archive.org/web/20170830094928/https://ourmachinery.com/post/high-level-rendering-using-render-graphs/ archive]"
    },
    {
      "type": "paragraph",
      "id": "5f47eb21cf9e8f62",
      "text": "[[Tobias Persson]] opted to use the name “Render Graph” instead of mimicking Frostbite’s terminology “Frame Graph” as "
    },
    {
      "type": "markdown",
      "id": "cce3cd011dc4923c",
      "text": "> I imagine we will execute multiple of these graphs within a frame. I anticipate most stuff that relates to any kind of graphics workload (e.g., cubemap convolutions, procedural scattering of objects, various paint tools, etc.) will execute as Render Graphs. "
    },
    {
      "type": "paragraph",
      "id": "1f6606a8e4f803f9",
      "text": "The name “Frame Graph” feels more like a “global” concept, something that runs once per frame. Most of the core concepts are the very similar though."
    },
    {
      "type": "paragraph",
      "id": "bbdeeb404e6d1741",
      "text": "⇒ [[Cubemap]]"
    },
    {
      "type": "pagefold",
      "id": "4919bd53aff42003",
      "text": "chat.openai"
    },
    {
      "type": "paragraph",
      "id": "957ca6df1a7bb4e6",
      "text": "\"High-Level Rendering Using Render Graphs\" by Tobias Persson discusses the use of render graphs, a high-level abstract representation of a 3D graphics pipeline, to simplify and optimize the rendering process in real-time computer graphics. The author explains how render graphs allow for better organization, easier modification and debugging of complex rendering pipelines, as well as improved performance through optimized parallelism and task scheduling. The article concludes that render graphs provide a more flexible and efficient alternative to traditional rendering pipelines, and are well-suited for use in the development of modern real-time graphics applications."
    },
    {
      "type": "paragraph",
      "id": "aa46aa1ae0b57126",
      "text": "[…]"
    },
    {
      "type": "paragraph",
      "id": "c864bcb8ce7e523e",
      "text": "Render Graphs are a powerful tool in computer graphics pipelines that allow for the efficient and flexible execution of various graphics workloads. Examples of such workloads include:\n\n"
    },
    {
      "type": "paragraph",
      "id": "2b6afb0a69406a34",
      "text": "Cubemap convolutions, which are used to pre-process and store information about reflections in an environment map.\n"
    },
    {
      "type": "paragraph",
      "id": "02bdf6ec4c6c9b6c",
      "text": "Procedural scattering of objects, which involves generating and arranging objects in a scene in a procedurally generated way.\n"
    },
    {
      "type": "paragraph",
      "id": "23a4bd4a498b53d7",
      "text": "Various paint tools, such as brush tools for painting on 3D models, that require the efficient and real-time manipulation of large amounts of data.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Render Graph",
        "story": []
      },
      "date": 1675821724499
    },
    {
      "id": "5cb10a47242d19cb",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5cb10a47242d19cb",
        "text": "Why Talking About Render Graphs [https://logins.github.io/graphics/2021/05/31/RenderGraphs.html page]"
      },
      "attribution": {
        "page": "2023-02-08"
      },
      "date": 1675821726881
    },
    {
      "type": "edit",
      "id": "5cb10a47242d19cb",
      "item": {
        "type": "paragraph",
        "id": "5cb10a47242d19cb",
        "text": "Why Talking About Render Graphs [https://logins.github.io/graphics/2021/05/31/RenderGraphs.html page], [https://web.archive.org/web/20170830094928/https://ourmachinery.com/post/high-level-rendering-using-render-graphs/ archive]"
      },
      "date": 1675821742284
    },
    {
      "item": {
        "type": "factory",
        "id": "5f47eb21cf9e8f62"
      },
      "id": "5f47eb21cf9e8f62",
      "type": "add",
      "after": "5cb10a47242d19cb",
      "date": 1675821769854
    },
    {
      "type": "edit",
      "id": "5f47eb21cf9e8f62",
      "item": {
        "type": "paragraph",
        "id": "5f47eb21cf9e8f62",
        "text": "[[Tobias Persson]]"
      },
      "date": 1675821775786
    },
    {
      "type": "edit",
      "id": "5f47eb21cf9e8f62",
      "item": {
        "type": "paragraph",
        "id": "5f47eb21cf9e8f62",
        "text": "[[Tobias Persson]] opted to use the name “Render Graph” instead of mimicking Frostbite’s terminology “Frame Graph” as I imagine we will execute multiple of these graphs within a frame. I anticipate most stuff that relates to any kind of graphics workload (e.g., cubemap convolutions, procedural scattering of objects, various paint tools, etc.) will execute as Render Graphs. The name “Frame Graph” feels more like a “global” concept, something that runs once per frame. Most of the core concepts are the very similar though."
      },
      "date": 1675821792225
    },
    {
      "type": "edit",
      "id": "5f47eb21cf9e8f62",
      "item": {
        "type": "paragraph",
        "id": "5f47eb21cf9e8f62",
        "text": "[[Tobias Persson]] opted to use the name “Render Graph” instead of mimicking Frostbite’s terminology “Frame Graph” as I imagine we will execute multiple of these graphs within a frame. I anticipate most stuff that relates to any kind of graphics workload (e.g., cubemap convolutions, procedural scattering of objects, various paint tools, etc.) will execute as Render Graphs. "
      },
      "date": 1675821810891
    },
    {
      "type": "add",
      "id": "1f6606a8e4f803f9",
      "item": {
        "type": "paragraph",
        "id": "1f6606a8e4f803f9",
        "text": "The name “Frame Graph” feels more like a “global” concept, something that runs once per frame. Most of the core concepts are the very similar though."
      },
      "after": "5f47eb21cf9e8f62",
      "date": 1675821812152
    },
    {
      "type": "edit",
      "id": "5f47eb21cf9e8f62",
      "item": {
        "type": "paragraph",
        "id": "5f47eb21cf9e8f62",
        "text": "[[Tobias Persson]] opted to use the name “Render Graph” instead of mimicking Frostbite’s terminology “Frame Graph” as "
      },
      "date": 1675821817787
    },
    {
      "type": "add",
      "id": "cce3cd011dc4923c",
      "item": {
        "type": "paragraph",
        "id": "cce3cd011dc4923c",
        "text": "> I imagine we will execute multiple of these graphs within a frame. I anticipate most stuff that relates to any kind of graphics workload (e.g., cubemap convolutions, procedural scattering of objects, various paint tools, etc.) will execute as Render Graphs. "
      },
      "after": "5f47eb21cf9e8f62",
      "date": 1675821819413
    },
    {
      "type": "edit",
      "id": "cce3cd011dc4923c",
      "item": {
        "type": "markdown",
        "id": "cce3cd011dc4923c",
        "text": "> I imagine we will execute multiple of these graphs within a frame. I anticipate most stuff that relates to any kind of graphics workload (e.g., cubemap convolutions, procedural scattering of objects, various paint tools, etc.) will execute as Render Graphs. "
      },
      "date": 1675821820534
    },
    {
      "item": {
        "type": "factory",
        "id": "4919bd53aff42003"
      },
      "id": "4919bd53aff42003",
      "type": "add",
      "after": "1f6606a8e4f803f9",
      "date": 1675822066380
    },
    {
      "type": "edit",
      "id": "4919bd53aff42003",
      "item": {
        "type": "pagefold",
        "id": "4919bd53aff42003",
        "text": "chat.openai"
      },
      "date": 1675822071230
    },
    {
      "item": {
        "type": "factory",
        "id": "957ca6df1a7bb4e6"
      },
      "id": "957ca6df1a7bb4e6",
      "type": "add",
      "after": "4919bd53aff42003",
      "date": 1675822073101
    },
    {
      "type": "edit",
      "id": "957ca6df1a7bb4e6",
      "item": {
        "type": "paragraph",
        "id": "957ca6df1a7bb4e6",
        "text": "\"High-Level Rendering Using Render Graphs\" by Tobias Persson discusses the use of render graphs, a high-level abstract representation of a 3D graphics pipeline, to simplify and optimize the rendering process in real-time computer graphics. The author explains how render graphs allow for better organization, easier modification and debugging of complex rendering pipelines, as well as improved performance through optimized parallelism and task scheduling. The article concludes that render graphs provide a more flexible and efficient alternative to traditional rendering pipelines, and are well-suited for use in the development of modern real-time graphics applications."
      },
      "date": 1675822074649
    },
    {
      "type": "edit",
      "id": "5cb10a47242d19cb",
      "item": {
        "type": "paragraph",
        "id": "5cb10a47242d19cb",
        "text": "[[Riccardo Loggini]], Why Talking About Render Graphs [https://logins.github.io/graphics/2021/05/31/RenderGraphs.html page], [https://web.archive.org/web/20170830094928/https://ourmachinery.com/post/high-level-rendering-using-render-graphs/ archive]"
      },
      "date": 1675823376816
    },
    {
      "item": {
        "type": "factory",
        "id": "aa46aa1ae0b57126"
      },
      "id": "aa46aa1ae0b57126",
      "type": "add",
      "after": "957ca6df1a7bb4e6",
      "date": 1675823524632
    },
    {
      "type": "edit",
      "id": "aa46aa1ae0b57126",
      "item": {
        "type": "paragraph",
        "id": "aa46aa1ae0b57126",
        "text": "[…]"
      },
      "date": 1675823528738
    },
    {
      "type": "add",
      "id": "bbdeeb404e6d1741",
      "item": {
        "type": "paragraph",
        "id": "bbdeeb404e6d1741",
        "text": "⇒ [[Cubemaps]]"
      },
      "after": "aa46aa1ae0b57126",
      "date": 1675823540524
    },
    {
      "id": "bbdeeb404e6d1741",
      "type": "move",
      "order": [
        "5cb10a47242d19cb",
        "5f47eb21cf9e8f62",
        "cce3cd011dc4923c",
        "1f6606a8e4f803f9",
        "bbdeeb404e6d1741",
        "4919bd53aff42003",
        "957ca6df1a7bb4e6",
        "aa46aa1ae0b57126"
      ],
      "date": 1675823546265
    },
    {
      "type": "edit",
      "id": "bbdeeb404e6d1741",
      "item": {
        "type": "paragraph",
        "id": "bbdeeb404e6d1741",
        "text": "⇒ [[Cubemap]]"
      },
      "date": 1675823554367
    },
    {
      "item": {
        "type": "factory",
        "id": "c864bcb8ce7e523e"
      },
      "id": "c864bcb8ce7e523e",
      "type": "add",
      "after": "aa46aa1ae0b57126",
      "date": 1675823661481
    },
    {
      "type": "edit",
      "id": "c864bcb8ce7e523e",
      "item": {
        "type": "paragraph",
        "id": "c864bcb8ce7e523e",
        "text": " Render Graphs are a powerful tool in computer graphics pipelines that allow for the efficient and flexible execution of various graphics workloads. Examples of such workloads include:\n\nCubemap convolutions, which are used to pre-process and store information about reflections in an environment map.\nProcedural scattering of objects, which involves generating and arranging objects in a scene in a procedurally generated way.\nVarious paint tools, such as brush tools for painting on 3D models, that require the efficient and real-time manipulation of large amounts of data.\n"
      },
      "date": 1675823663277
    },
    {
      "type": "edit",
      "id": "c864bcb8ce7e523e",
      "item": {
        "type": "paragraph",
        "id": "c864bcb8ce7e523e",
        "text": "Render Graphs are a powerful tool in computer graphics pipelines that allow for the efficient and flexible execution of various graphics workloads. Examples of such workloads include:\n\nCubemap convolutions, which are used to pre-process and store information about reflections in an environment map.\n"
      },
      "date": 1675823675517
    },
    {
      "type": "add",
      "id": "02bdf6ec4c6c9b6c",
      "item": {
        "type": "paragraph",
        "id": "02bdf6ec4c6c9b6c",
        "text": "Procedural scattering of objects, which involves generating and arranging objects in a scene in a procedurally generated way.\n"
      },
      "after": "c864bcb8ce7e523e",
      "date": 1675823678492
    },
    {
      "type": "add",
      "id": "23a4bd4a498b53d7",
      "item": {
        "type": "paragraph",
        "id": "23a4bd4a498b53d7",
        "text": "Various paint tools, such as brush tools for painting on 3D models, that require the efficient and real-time manipulation of large amounts of data.\n"
      },
      "after": "02bdf6ec4c6c9b6c",
      "date": 1675823679437
    },
    {
      "type": "edit",
      "id": "c864bcb8ce7e523e",
      "item": {
        "type": "paragraph",
        "id": "c864bcb8ce7e523e",
        "text": "Render Graphs are a powerful tool in computer graphics pipelines that allow for the efficient and flexible execution of various graphics workloads. Examples of such workloads include:\n\n"
      },
      "date": 1675823711528
    },
    {
      "type": "add",
      "id": "2b6afb0a69406a34",
      "item": {
        "type": "paragraph",
        "id": "2b6afb0a69406a34",
        "text": "Cubemap convolutions, which are used to pre-process and store information about reflections in an environment map.\n"
      },
      "after": "c864bcb8ce7e523e",
      "date": 1675823716142
    }
  ]
}