{
  "title": "Applications Beyond Chat",
  "story": [
    {
      "type": "paragraph",
      "id": "1ab06e15802b9e15",
      "text": "The Mega Matrix Holiday Special 2021 [https://matrix.org/blog/posts#applications-beyond-chat post]"
    },
    {
      "type": "paragraph",
      "id": "17ad8fee0d4e75f4",
      "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n"
    },
    {
      "type": "paragraph",
      "id": "45e885d14dfd2ea2",
      "text": "Work began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create [[Patience]] as a test environment for building out these sort of clients, and meanwhile Timo (famous of [[The Board]]) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments."
    },
    {
      "type": "video",
      "id": "d2f62946550c13a7",
      "text": "YOUTUBE Hsyqa5ozWIo"
    },
    {
      "type": "paragraph",
      "id": "716d814874fe7596",
      "text": "Meanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix."
    },
    {
      "type": "paragraph",
      "id": "42181a4358119d7e",
      "text": "\nIt’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be. It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative Figma-style (or Penpot- or Blender-style) design. You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the syntax tree of the code operating on that DOM alongside it, in the same room. Before you know it, we will have created kind of some incredible Smalltalk / Croquet / Alan Kay nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D"
    },
    {
      "type": "paragraph",
      "id": "4b97936f48a0e769",
      "text": "\nWhile we’ve been looking at storing object trees in Matrix, another obvious angle that has emerged is to use Matrix for encrypted decentralised file storage. MSC3089 is a proposal on how you might represent hierarchies of files in Matrix - where each room acts effectively as a directory of files, with spaces forming a directory structure (much as they do already in today’s Matrix), leveraging Matrix’s existing decentralised access control mechanisms to control who can access what. Combine such a file storage system with the collaborative editing capabilities mentioned above, and suddenly a really exciting proposition starts to emerge. We’re investigating this right now, and all will be revealed early next year…\n\n"
    },
    {
      "type": "paragraph",
      "id": "2db1a9f69a778f6f",
      "text": "Finally, and last but not least, Robert Long has been building on top of our shiny new Native Matrix Voice/Video Conferencing capabilities to use Matrix as the communication backbone for a truly open, equitable and interoperable vision of the Metaverse. The best way of describing it is to look at his awesome Third Room demo from the Open Metaverse Interoperability Group demo session in September:"
    },
    {
      "type": "video",
      "id": "bbbed0119718c2b6",
      "text": "YOUTUBE e26UJRCGfGk\nOpen Metaverse Interoperability Demo Night"
    },
    {
      "type": "paragraph",
      "id": "1e8d2774bcfdd358",
      "text": "Now, some folks will recall that since day one (in fact, since before day one) the hope for Matrix was that it might end up as the communications fabric of the Metaverse. We were about 4 years early when we first starting enthusing about this, and then still ahead of our time when we did the world’s first 3D Video calling over Matrix. However, it now feels like the world has finally caught up - and we’re in grave danger of being overtaken by a dystopia where the big tech companies balkanize the Metaverse into a series of closed proprietary user-exploiting walled gardens, much like today’s incumbent chat silos - but even worse.\n\nThis is our chance to fix it before it’s too late, and Element is funding a small but highly targeted team to focus exclusively on building out open interoperable Metaverse over Matrix - ensuring that collaboration in 3D (and 2D) spatial environments in future is decentralised, secure and standards-based. This obviously ties in directly with the rest of the Beyond Chat projects listed above: it’s early days, but it’s incredibly exciting to imagine where we could end up if this works!\n\nFinally, a question which has kept coming up while working on Beyond Chat projects has been whether to implement this new functionality as Matrix widgets, bake them into existing Matrix clients, or build them as domain-specific dedicated Matrix clients. But perhaps we’re thinking about this all wrong: what if your Matrix client was just a browser for Matrix rooms? Some of these could be chatrooms. Some of these could be VoIP/Video conferences or Discord-style voice/video rooms. Some of these could be message boards or mailing lists. Some of these could be collaborative editors or whiteboards. Some of these could be 3D views into the metaverse. Some of these could be rendered via widgets; some could be rendered natively if the client knows how. And some of these could even be good old web pages(!!!).\n\nImagine if your Matrix client was effectively a genuine browser of arbitrary decentralised realtime content? If your view into a Matrix room was just that: a full window view into that room, be it textual or 2D or 3D - and your Matrix client was just a browser which added the necessary chrome and navigation to help you tab between rooms, login and logout, manage your encryption, track who’s in the room, track your notifications, etc.?\n\nMeanwhile, if you’re in a web browser, you might hop into a lightweight single-page domain-specific webapp which happens to use Matrix for collaboration. Or if you’re in a Matrix client/browser, you could hop to the same matrix URL to get at the same functionality with all the supporting chrome and UI overlays sliding in as needed…\n\nPerhaps the vision of Matrix as the missing communication layer of the open Web is more literal than we ever thought. Eitherway, it will be fascinating to see how Applications Beyond Chat evolves over the next year."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Applications Beyond Chat",
        "story": []
      },
      "date": 1640795606982
    },
    {
      "id": "1ab06e15802b9e15",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1ab06e15802b9e15",
        "text": "https://matrix.org/blog/posts#applications-beyond-chat"
      },
      "date": 1640795612910
    },
    {
      "type": "edit",
      "id": "1ab06e15802b9e15",
      "item": {
        "type": "paragraph",
        "id": "1ab06e15802b9e15",
        "text": "[https://matrix.org/blog/posts#applications-beyond-chat post]"
      },
      "date": 1640795623573
    },
    {
      "type": "add",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\nWork began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create Patience as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments.\n\nMeanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix.\n\nIt’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be. It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative Figma-style (or Penpot- or Blender-style) design. You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the syntax tree of the code operating on that DOM alongside it, in the same room. Before you know it, we will have created kind of some incredible Smalltalk / Croquet / Alan Kay nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D\n\nWhile we’ve been looking at storing object trees in Matrix, another obvious angle that has emerged is to use Matrix for encrypted decentralised file storage. MSC3089 is a proposal on how you might represent hierarchies of files in Matrix - where each room acts effectively as a directory of files, with spaces forming a directory structure (much as they do already in today’s Matrix), leveraging Matrix’s existing decentralised access control mechanisms to control who can access what. Combine such a file storage system with the collaborative editing capabilities mentioned above, and suddenly a really exciting proposition starts to emerge. We’re investigating this right now, and all will be revealed early next year…\n\nFinally, and last but not least, Robert Long has been building on top of our shiny new Native Matrix Voice/Video Conferencing capabilities to use Matrix as the communication backbone for a truly open, equitable and interoperable vision of the Metaverse. The best way of describing it is to look at his awesome Third Room demo from the Open Metaverse Interoperability Group demo session in September:"
      },
      "after": "1ab06e15802b9e15",
      "date": 1640795642582
    },
    {
      "item": {
        "type": "factory",
        "id": "bbbed0119718c2b6"
      },
      "id": "bbbed0119718c2b6",
      "type": "add",
      "after": "17ad8fee0d4e75f4",
      "date": 1640795708172
    },
    {
      "type": "edit",
      "id": "bbbed0119718c2b6",
      "item": {
        "type": "video",
        "id": "bbbed0119718c2b6",
        "text": "YOUTUBE e26UJRCGfGk"
      },
      "date": 1640795717511
    },
    {
      "type": "edit",
      "id": "bbbed0119718c2b6",
      "item": {
        "type": "video",
        "id": "bbbed0119718c2b6",
        "text": "YOUTUBE e26UJRCGfGk\nOpen Metaverse Interoperability Demo Night"
      },
      "date": 1640795767644
    },
    {
      "item": {
        "type": "factory",
        "id": "1e8d2774bcfdd358"
      },
      "id": "1e8d2774bcfdd358",
      "type": "add",
      "after": "bbbed0119718c2b6",
      "date": 1640795798924
    },
    {
      "type": "edit",
      "id": "1e8d2774bcfdd358",
      "item": {
        "type": "paragraph",
        "id": "1e8d2774bcfdd358",
        "text": "Now, some folks will recall that since day one (in fact, since before day one) the hope for Matrix was that it might end up as the communications fabric of the Metaverse. We were about 4 years early when we first starting enthusing about this, and then still ahead of our time when we did the world’s first 3D Video calling over Matrix. However, it now feels like the world has finally caught up - and we’re in grave danger of being overtaken by a dystopia where the big tech companies balkanize the Metaverse into a series of closed proprietary user-exploiting walled gardens, much like today’s incumbent chat silos - but even worse.\n\nThis is our chance to fix it before it’s too late, and Element is funding a small but highly targeted team to focus exclusively on building out open interoperable Metaverse over Matrix - ensuring that collaboration in 3D (and 2D) spatial environments in future is decentralised, secure and standards-based. This obviously ties in directly with the rest of the Beyond Chat projects listed above: it’s early days, but it’s incredibly exciting to imagine where we could end up if this works!\n\nFinally, a question which has kept coming up while working on Beyond Chat projects has been whether to implement this new functionality as Matrix widgets, bake them into existing Matrix clients, or build them as domain-specific dedicated Matrix clients. But perhaps we’re thinking about this all wrong: what if your Matrix client was just a browser for Matrix rooms? Some of these could be chatrooms. Some of these could be VoIP/Video conferences or Discord-style voice/video rooms. Some of these could be message boards or mailing lists. Some of these could be collaborative editors or whiteboards. Some of these could be 3D views into the metaverse. Some of these could be rendered via widgets; some could be rendered natively if the client knows how. And some of these could even be good old web pages(!!!).\n\nImagine if your Matrix client was effectively a genuine browser of arbitrary decentralised realtime content? If your view into a Matrix room was just that: a full window view into that room, be it textual or 2D or 3D - and your Matrix client was just a browser which added the necessary chrome and navigation to help you tab between rooms, login and logout, manage your encryption, track who’s in the room, track your notifications, etc.?\n\nMeanwhile, if you’re in a web browser, you might hop into a lightweight single-page domain-specific webapp which happens to use Matrix for collaboration. Or if you’re in a Matrix client/browser, you could hop to the same matrix URL to get at the same functionality with all the supporting chrome and UI overlays sliding in as needed…\n\nPerhaps the vision of Matrix as the missing communication layer of the open Web is more literal than we ever thought. Eitherway, it will be fascinating to see how Applications Beyond Chat evolves over the next year."
      },
      "date": 1640795801473
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\nWork began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create Patience as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments.\n\nMeanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix.\n\nIt’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be. It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative Figma-style (or Penpot- or Blender-style) design. You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the syntax tree of the code operating on that DOM alongside it, in the same room. Before you know it, we will have created kind of some incredible Smalltalk / Croquet / Alan Kay nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D\n\nWhile we’ve been looking at storing object trees in Matrix, another obvious angle that has emerged is to use Matrix for encrypted decentralised file storage. MSC3089 is a proposal on how you might represent hierarchies of files in Matrix - where each room acts effectively as a directory of files, with spaces forming a directory structure (much as they do already in today’s Matrix), leveraging Matrix’s existing decentralised access control mechanisms to control who can access what. Combine such a file storage system with the collaborative editing capabilities mentioned above, and suddenly a really exciting proposition starts to emerge. We’re investigating this right now, and all will be revealed early next year…\n\n"
      },
      "date": 1640795844939
    },
    {
      "type": "add",
      "id": "2db1a9f69a778f6f",
      "item": {
        "type": "paragraph",
        "id": "2db1a9f69a778f6f",
        "text": "Finally, and last but not least, Robert Long has been building on top of our shiny new Native Matrix Voice/Video Conferencing capabilities to use Matrix as the communication backbone for a truly open, equitable and interoperable vision of the Metaverse. The best way of describing it is to look at his awesome Third Room demo from the Open Metaverse Interoperability Group demo session in September:"
      },
      "after": "17ad8fee0d4e75f4",
      "date": 1640795850128
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\nWork began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create Patience as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments.\n\nMeanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix.\n\nIt’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be. It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative Figma-style (or Penpot- or Blender-style) design. You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the syntax tree of the code operating on that DOM alongside it, in the same room. Before you know it, we will have created kind of some incredible Smalltalk / Croquet / Alan Kay nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D"
      },
      "date": 1640795855799
    },
    {
      "type": "add",
      "id": "4b97936f48a0e769",
      "item": {
        "type": "paragraph",
        "id": "4b97936f48a0e769",
        "text": "\nWhile we’ve been looking at storing object trees in Matrix, another obvious angle that has emerged is to use Matrix for encrypted decentralised file storage. MSC3089 is a proposal on how you might represent hierarchies of files in Matrix - where each room acts effectively as a directory of files, with spaces forming a directory structure (much as they do already in today’s Matrix), leveraging Matrix’s existing decentralised access control mechanisms to control who can access what. Combine such a file storage system with the collaborative editing capabilities mentioned above, and suddenly a really exciting proposition starts to emerge. We’re investigating this right now, and all will be revealed early next year…\n\n"
      },
      "after": "17ad8fee0d4e75f4",
      "date": 1640795859999
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\nWork began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create Patience as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments.\n\nMeanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix."
      },
      "date": 1640795863487
    },
    {
      "type": "add",
      "id": "42181a4358119d7e",
      "item": {
        "type": "paragraph",
        "id": "42181a4358119d7e",
        "text": "\nIt’s hard to overstate how powerful storing freeform tree CRDTs in Matrix would be. It could open up everything from decentralised encrypted collaborative document editing to collaborative whiteboarding and collaborative Figma-style (or Penpot- or Blender-style) design. You could even start storing an HTML DOM into a room, alongside its binary assets, giving you a multiplayer DOM to build on… and then imagine if you could store the syntax tree of the code operating on that DOM alongside it, in the same room. Before you know it, we will have created kind of some incredible Smalltalk / Croquet / Alan Kay nirvana where code is data and data is code and it’s all running live in some kind of decentralised encrypted multiplayer Metaverse :D"
      },
      "after": "17ad8fee0d4e75f4",
      "date": 1640795867494
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\nWork began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create Patience as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments.\n\n"
      },
      "date": 1640795876323
    },
    {
      "type": "add",
      "id": "716d814874fe7596",
      "item": {
        "type": "paragraph",
        "id": "716d814874fe7596",
        "text": "Meanwhile, Matthew Weidner and the Composable Systems Lab at CMU stunned us all by presenting a complete CRDT solution using Matrix named Collabs at Strange Loop 2021. This is really impressive stuff - the brave of heart can go and embed a Matrix-powered end-to-end-encrypted collaborative markdown editor straight into Element via Collabs by following the instructions here. In practice, Collabs works by serialising the CRDT updates as base64 blobs inside Matrix timeline events (hello Wave, is that you?), but we’re now investigating how you might reconcile this with maintaining a proper realtime object tree in Matrix."
      },
      "after": "17ad8fee0d4e75f4",
      "date": 1640795878729
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n\n"
      },
      "date": 1640795883565
    },
    {
      "type": "edit",
      "id": "1ab06e15802b9e15",
      "item": {
        "type": "paragraph",
        "id": "1ab06e15802b9e15",
        "text": "The Mega Matrix Holiday Special 2021 [https://matrix.org/blog/posts#applications-beyond-chat post]"
      },
      "date": 1640796055627
    },
    {
      "type": "edit",
      "id": "17ad8fee0d4e75f4",
      "item": {
        "type": "paragraph",
        "id": "17ad8fee0d4e75f4",
        "text": "Finally, 2021 was the year where we seriously started building out functionality on Matrix which goes far beyond plain old chat rooms.\n"
      },
      "date": 1640812584826
    },
    {
      "type": "add",
      "id": "45e885d14dfd2ea2",
      "item": {
        "type": "paragraph",
        "id": "45e885d14dfd2ea2",
        "text": "Work began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create [[Patience]] as a test environment for building out these sort of clients, and meanwhile Timo (famous of The Board) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments."
      },
      "after": "17ad8fee0d4e75f4",
      "date": 1640812603800
    },
    {
      "type": "edit",
      "id": "45e885d14dfd2ea2",
      "item": {
        "type": "paragraph",
        "id": "45e885d14dfd2ea2",
        "text": "Work began in the summer as a research project led by Ryan, formerly tech lead for Element Web - looking at ways to store hierarchical structured data into Matrix while preserving real-time semantics; effectively using Matrix as a collaborative decentralised object tree, providing CRDT (Conflict-free Replicated Data Types) to allow richer applications to be built on Matrix. This journey led him to create [[Patience]] as a test environment for building out these sort of clients, and meanwhile Timo (famous of [[The Board]]) joined the team to build out Full Screen Widgets in Element, providing a much better UI for beyond-chat experiments."
      },
      "date": 1640812726972
    },
    {
      "item": {
        "type": "factory",
        "id": "d2f62946550c13a7"
      },
      "id": "d2f62946550c13a7",
      "type": "add",
      "after": "1e8d2774bcfdd358",
      "date": 1640812999460
    },
    {
      "type": "edit",
      "id": "d2f62946550c13a7",
      "item": {
        "type": "video",
        "id": "d2f62946550c13a7",
        "text": "YOUTUBE Hsyqa5ozWIo"
      },
      "date": 1640813011850
    },
    {
      "id": "d2f62946550c13a7",
      "type": "move",
      "order": [
        "1ab06e15802b9e15",
        "17ad8fee0d4e75f4",
        "45e885d14dfd2ea2",
        "d2f62946550c13a7",
        "716d814874fe7596",
        "42181a4358119d7e",
        "4b97936f48a0e769",
        "2db1a9f69a778f6f",
        "bbbed0119718c2b6",
        "1e8d2774bcfdd358"
      ],
      "date": 1640813048037
    }
  ]
}