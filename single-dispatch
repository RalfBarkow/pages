{
  "title": "Single Dispatch",
  "story": [
    {
      "type": "html",
      "text": "A kind of Polymorphism where the dispatch mechanism works against a single dynamic type. [[Internal Polymorphism]] is almost always [[Single Dispatch]]. This is probably because [[Single Dispatch]] can be implemented simply and without introducing unwanted coupling with other types. ",
      "id": "f845c6938a2edfc48ed3272449fcb330"
    },
    {
      "type": "html",
      "text": "\nThis is generally done using a virtual function table. Each function is given an index. Each object contains a hidden pointer to some kind of type object that contains a table that has one function pointer for each virtual function that is implemented by the object. The compiler generates code that dereferences the hidden pointer in the object, indexes into the table and calls the function that it finds.",
      "id": "e2a906cd9921ef057daee65ccd3b234e"
    },
    {
      "type": "html",
      "text": "\nContrast with [[Multiple Dispatch]].",
      "id": "1d849fd8870076d8e1677483fb678182"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "59ba35a9f2dbd476b3c1fe373956a774"
    },
    {
      "type": "html",
      "text": "\n[[Category Polymorphism]]",
      "id": "d4f692cb47be60ddf4e3e4a6312345fb"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?SingleDispatch c2.com]",
      "id": "da7ee9b675eeb80c59a5f4f3c3d1e20d"
    }
  ],
  "journal": [
    {
      "date": 1058288433000,
      "id": "24d40a920b078acd732dd2e6e3bb191a",
      "type": "create",
      "item": {
        "title": "Single Dispatch",
        "story": [
          {
            "type": "html",
            "text": "A kind of Polymorphism where the dispatch mechanism works against a single dynamic type. [[Internal Polymorphism]] is almost always [[Single Dispatch]]. This is probably because [[Single Dispatch]] can be implemented simply and without introducing unwanted coupling with other types. ",
            "id": "f845c6938a2edfc48ed3272449fcb330"
          },
          {
            "type": "html",
            "text": "\nThis is generally done using a virtual function table. Each function is given an index. Each object contains a hidden pointer to some kind of type object that contains a table that has one function pointer for each virtual function that is implemented by the object. The compiler generates code that dereferences the hidden pointer in the object, indexes into the table and calls the function that it finds.",
            "id": "e2a906cd9921ef057daee65ccd3b234e"
          },
          {
            "type": "html",
            "text": "\nContrast with [[Multiple Dispatch]].",
            "id": "1d849fd8870076d8e1677483fb678182"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "59ba35a9f2dbd476b3c1fe373956a774"
          },
          {
            "type": "html",
            "text": "\n[[Category Polymorphism]]",
            "id": "d4f692cb47be60ddf4e3e4a6312345fb"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?SingleDispatch c2.com]",
            "id": "da7ee9b675eeb80c59a5f4f3c3d1e20d"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1699943843854
    }
  ]
}