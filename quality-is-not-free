{
  "title": "Quality Is Not Free",
  "story": [
    {
      "type": "html",
      "text": "A contrary view to [[Quality Is Free]]. The suggestion that quality is \"free\" seems to come from the observation that doing the right thing up front will cost <i>x</i>, whereas doing a shoddy job up front and having to pay for it later (through increased expenses for rework, business lost due to pissed-off customers, etc) will cost <i>x+n</i> for some <i>n>0</i>. Since you have to pay the <i>x</i> regardless; it is therefore \"free\". ",
      "id": "7a0ddee9c9cfaa45c9c7bcfa9e93d46c"
    },
    {
      "type": "html",
      "text": "\nIn reality, doing anything will cost <i>x</i>. If you wish to maintain that thing (as most businesses do), you must pay extra no matter what. The cost of retroactive maintenance (as mentioned above) is <i>x+n</i>, while the cost of ensuring quality (and therefore cheaper maintainability) is more like <i>x+q</i>, where <i>0<q<n</i>. Quality is always cheaper, but never free.",
      "id": "3d9c15bc5909e3d97ff7606c8d792deb"
    },
    {
      "type": "html",
      "text": "\nQuality is indeed, in the long run, less expensive than the lack thereof. But it is not \"free\". Unless one has engineers that produce perfect designs and write flawless code (to say nothing of requirements specification and manufacturing processes), extra work (i.e. testing, in all its forms) will be required to drive the bugs out of whatever system it is you are trying to develop. Since I have yet to meet a perfect engineer, it follows that testing (and all of the labor and capital expense involved) will be required.",
      "id": "23c45993d91333d8391974ea8a4f343e"
    },
    {
      "type": "html",
      "text": "\nI think we are all agreed that this is the right thing to do.",
      "id": "cb9f2ab35c2daf048ede0dd68a025c32"
    },
    {
      "type": "html",
      "text": "\nThe problem with [[Quality Is Free]] is that despite the conviction we all have (and the considerable evidence to support that conviction) that [[Quality Is Cheaper In The Long Run]] ; [[Getting It Right]] requires investment up-front. Depending on your processes, policies, and procedures, <i>somebody</i> has to validate customer requirements. <i>Somebody</i> has to write the unit tests (ideally, a cheap process, but still it takes time). <i>Somebody</i> has to execute stress tests and other whole-system tests (unit tests on modules are necessary but not sufficient in my experience). <i>Somebody</i> has to design, purchase, and assemble a test system in manufacturing, for those of us working on projects which involve [[Actual Hardware]].",
      "id": "40e9305c2b7a4b23f40ffc9be677d526"
    },
    {
      "type": "html",
      "text": "\nAnd the problem with this is that it costs real time and money, up front. Too many [[Bean Counters]] and [[Pointy Haired Bosses]], whether constrained by budget limitations or just hoping to get something for nothing, aren't always willing to spend that money up front. (An old chestnut which they often invoke is \"a bird in the hand is worth two in the bush\"; in other words, it's better to save money up front even if it costs more in the long run. Because then it might be [[Somebody Elses Problem]]). See also [[Net Present Value]].",
      "id": "796d6b6bc63d068e85fab25199e80417"
    },
    {
      "type": "html",
      "text": "\nSo what happens? Either the design team conceals the testing activities in the schedule, keeping them from the view of management ([[If They Cannot See It Then They Cannot Cut It]]); or else testing activities go by the wayside, resulting in less-efficient manufacturing processes, pissed-off customers, and maintenance headaches. (As an aside, one advantage, I suppose, of [[Extreme Programming]] is that the testing load is distributed among development, rather than as a visible [[Big Bang]] at the end; thus a less tempting target for managers looking for \"overhead\" to cut. Unfortunately, too many managers do take the view that testing is overhead. I've met several engineering managers who themselves value testing, but have learned not to taint any engineers with the label \"QA\" because guess who gets laid off first? See [[Quality Is Overhead]].)",
      "id": "2e77a06804f844a5c0dd78efd66cf6d4"
    },
    {
      "type": "html",
      "text": "\nThe problem for us as engineers in such an environment, however, is obvious. When management eventually becomes aware that the product they are shipping has some rather obnoxious defects in it, is expensive to manufacture, and difficult to fix - and the engineering team is invariably asked the question: <i>Why didn't you write better code?</i>",
      "id": "c2d0c461a59ee7dc9c73a9b9413e21d5"
    },
    {
      "type": "html",
      "text": "\nAnd this is the problem with the notion that [[Quality Is Free]]; it produces the expectation that high-quality code (or any product, including those involving no software whatsoever) should come naturally with no effort; and since <i>n</i> times free is still free no matter how large <i>n</i> is, this is extrapolated to the belief that perfection should also be free. The conclusion to this line of reasoning is that any defects in a product, no matter the constraints the product was developed under, are therefore entirely the fault of the designers; the management who was unwilling to budget for proper testing activities is blameless. Because, after all, [[Quality Is Free]], engineers should [[Auto Magically]] design it in as part of their day-to-day activities without sacrificing time or money that could otherwise be put to use in implementing features.",
      "id": "52514bd9d7c8656d7383fb0445d8541c"
    },
    {
      "type": "html",
      "text": "\nA better title for Crosby's book should be [[Quality Is Cheaper In The Long Run]]. With quality, the moral of Aesop's famous fable should be: <i>Two birds in the bush are worth one in the hand</i>.",
      "id": "3db2193527e19df4010cc3fe242dd6ef"
    },
    {
      "type": "html",
      "text": "\n[[Quality Is Not Free]]. But it sure beats the alternatives.",
      "id": "cf61e35ca2e5185ed8b8acfa6475822c"
    },
    {
      "type": "html",
      "text": "-- [[Scott Johnson]]",
      "id": "f53573991894eaa01d9fb594123a71cf"
    },
    {
      "type": "html",
      "text": "<b>Alternate View</b>",
      "id": "95731524651e2f529cf9a2ecc34376ac"
    },
    {
      "type": "html",
      "text": "\nI suggest that the strawman argument proposed does not reflect the concept that quality pays in the short term. The strawman puts forward the proposal that it is less costly to do a shoddy job. Contrary to what is described above, the proposal is most definitely that the most effective and efficient ways to develop code also produce the highest quality code. Adding more testing and more reviews does not improve the initial quality of the code. By developing high quality code from the start, we can start eliminating the need for after the fact reviews and testing. This is particularly true of the approach proposed by [[William Edwards Deming]] and to a less obvious degree the approach proposed by Philip Crosby in [[Quality Is Free]]. Do not slow the process down to improve quality, improve quality to speed the process up.",
      "id": "386a0156c3fba0fcb6066c4c0bd80466"
    },
    {
      "type": "html",
      "text": "-- [[Wayne Mack]]",
      "id": "bf62be332f3645719af03e2d860144fe"
    },
    {
      "type": "html",
      "text": "<i>Please note that Crosby stated himself that there is a price for conformance and a price for non-conformance. His reasoning basically says that the price for conformance always, </i>always<i>, <b></i>ALWAYS</b><i> comes out less than the price for non-conformance, so quality is, in fact, free. Decades of real world examples have proven Crosby and others who espouse this approach to be correct. -- [[Marty Schrader]] (hoping the stupid-ass Sharkbot will stop reversing properly done edits)</i>",
      "id": "9935a17dec8c47e630ea2597207dc813"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "bfcb7c940103349ae1eb38c959c6fe09"
    },
    {
      "type": "html",
      "text": "See: [[Quality Elbow]]",
      "id": "9249141bf4c152028504c68cd5e557cd"
    },
    {
      "type": "html",
      "text": "\n[[Category Quality]]",
      "id": "b22d470d9be21429a86c4b6a8bb406cd"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?QualityIsNotFree c2.com]",
      "id": "d4e9ab115999ab14e00d60c819187a2e"
    }
  ],
  "journal": [
    {
      "date": 1414391200000,
      "id": "412de72e0a5ce3000058242aaf0eef74",
      "type": "create",
      "item": {
        "title": "Quality Is Not Free",
        "story": [
          {
            "type": "html",
            "text": "A contrary view to [[Quality Is Free]]. The suggestion that quality is \"free\" seems to come from the observation that doing the right thing up front will cost <i>x</i>, whereas doing a shoddy job up front and having to pay for it later (through increased expenses for rework, business lost due to pissed-off customers, etc) will cost <i>x+n</i> for some <i>n>0</i>. Since you have to pay the <i>x</i> regardless; it is therefore \"free\". ",
            "id": "7a0ddee9c9cfaa45c9c7bcfa9e93d46c"
          },
          {
            "type": "html",
            "text": "\nIn reality, doing anything will cost <i>x</i>. If you wish to maintain that thing (as most businesses do), you must pay extra no matter what. The cost of retroactive maintenance (as mentioned above) is <i>x+n</i>, while the cost of ensuring quality (and therefore cheaper maintainability) is more like <i>x+q</i>, where <i>0<q<n</i>. Quality is always cheaper, but never free.",
            "id": "3d9c15bc5909e3d97ff7606c8d792deb"
          },
          {
            "type": "html",
            "text": "\nQuality is indeed, in the long run, less expensive than the lack thereof. But it is not \"free\". Unless one has engineers that produce perfect designs and write flawless code (to say nothing of requirements specification and manufacturing processes), extra work (i.e. testing, in all its forms) will be required to drive the bugs out of whatever system it is you are trying to develop. Since I have yet to meet a perfect engineer, it follows that testing (and all of the labor and capital expense involved) will be required.",
            "id": "23c45993d91333d8391974ea8a4f343e"
          },
          {
            "type": "html",
            "text": "\nI think we are all agreed that this is the right thing to do.",
            "id": "cb9f2ab35c2daf048ede0dd68a025c32"
          },
          {
            "type": "html",
            "text": "\nThe problem with [[Quality Is Free]] is that despite the conviction we all have (and the considerable evidence to support that conviction) that [[Quality Is Cheaper In The Long Run]] ; [[Getting It Right]] requires investment up-front. Depending on your processes, policies, and procedures, <i>somebody</i> has to validate customer requirements. <i>Somebody</i> has to write the unit tests (ideally, a cheap process, but still it takes time). <i>Somebody</i> has to execute stress tests and other whole-system tests (unit tests on modules are necessary but not sufficient in my experience). <i>Somebody</i> has to design, purchase, and assemble a test system in manufacturing, for those of us working on projects which involve [[Actual Hardware]].",
            "id": "40e9305c2b7a4b23f40ffc9be677d526"
          },
          {
            "type": "html",
            "text": "\nAnd the problem with this is that it costs real time and money, up front. Too many [[Bean Counters]] and [[Pointy Haired Bosses]], whether constrained by budget limitations or just hoping to get something for nothing, aren't always willing to spend that money up front. (An old chestnut which they often invoke is \"a bird in the hand is worth two in the bush\"; in other words, it's better to save money up front even if it costs more in the long run. Because then it might be [[Somebody Elses Problem]]). See also [[Net Present Value]].",
            "id": "796d6b6bc63d068e85fab25199e80417"
          },
          {
            "type": "html",
            "text": "\nSo what happens? Either the design team conceals the testing activities in the schedule, keeping them from the view of management ([[If They Cannot See It Then They Cannot Cut It]]); or else testing activities go by the wayside, resulting in less-efficient manufacturing processes, pissed-off customers, and maintenance headaches. (As an aside, one advantage, I suppose, of [[Extreme Programming]] is that the testing load is distributed among development, rather than as a visible [[Big Bang]] at the end; thus a less tempting target for managers looking for \"overhead\" to cut. Unfortunately, too many managers do take the view that testing is overhead. I've met several engineering managers who themselves value testing, but have learned not to taint any engineers with the label \"QA\" because guess who gets laid off first? See [[Quality Is Overhead]].)",
            "id": "2e77a06804f844a5c0dd78efd66cf6d4"
          },
          {
            "type": "html",
            "text": "\nThe problem for us as engineers in such an environment, however, is obvious. When management eventually becomes aware that the product they are shipping has some rather obnoxious defects in it, is expensive to manufacture, and difficult to fix - and the engineering team is invariably asked the question: <i>Why didn't you write better code?</i>",
            "id": "c2d0c461a59ee7dc9c73a9b9413e21d5"
          },
          {
            "type": "html",
            "text": "\nAnd this is the problem with the notion that [[Quality Is Free]]; it produces the expectation that high-quality code (or any product, including those involving no software whatsoever) should come naturally with no effort; and since <i>n</i> times free is still free no matter how large <i>n</i> is, this is extrapolated to the belief that perfection should also be free. The conclusion to this line of reasoning is that any defects in a product, no matter the constraints the product was developed under, are therefore entirely the fault of the designers; the management who was unwilling to budget for proper testing activities is blameless. Because, after all, [[Quality Is Free]], engineers should [[Auto Magically]] design it in as part of their day-to-day activities without sacrificing time or money that could otherwise be put to use in implementing features.",
            "id": "52514bd9d7c8656d7383fb0445d8541c"
          },
          {
            "type": "html",
            "text": "\nA better title for Crosby's book should be [[Quality Is Cheaper In The Long Run]]. With quality, the moral of Aesop's famous fable should be: <i>Two birds in the bush are worth one in the hand</i>.",
            "id": "3db2193527e19df4010cc3fe242dd6ef"
          },
          {
            "type": "html",
            "text": "\n[[Quality Is Not Free]]. But it sure beats the alternatives.",
            "id": "cf61e35ca2e5185ed8b8acfa6475822c"
          },
          {
            "type": "html",
            "text": "-- [[Scott Johnson]]",
            "id": "f53573991894eaa01d9fb594123a71cf"
          },
          {
            "type": "html",
            "text": "<b>Alternate View</b>",
            "id": "95731524651e2f529cf9a2ecc34376ac"
          },
          {
            "type": "html",
            "text": "\nI suggest that the strawman argument proposed does not reflect the concept that quality pays in the short term. The strawman puts forward the proposal that it is less costly to do a shoddy job. Contrary to what is described above, the proposal is most definitely that the most effective and efficient ways to develop code also produce the highest quality code. Adding more testing and more reviews does not improve the initial quality of the code. By developing high quality code from the start, we can start eliminating the need for after the fact reviews and testing. This is particularly true of the approach proposed by [[William Edwards Deming]] and to a less obvious degree the approach proposed by Philip Crosby in [[Quality Is Free]]. Do not slow the process down to improve quality, improve quality to speed the process up.",
            "id": "386a0156c3fba0fcb6066c4c0bd80466"
          },
          {
            "type": "html",
            "text": "-- [[Wayne Mack]]",
            "id": "bf62be332f3645719af03e2d860144fe"
          },
          {
            "type": "html",
            "text": "<i>Please note that Crosby stated himself that there is a price for conformance and a price for non-conformance. His reasoning basically says that the price for conformance always, </i>always<i>, <b></i>ALWAYS</b><i> comes out less than the price for non-conformance, so quality is, in fact, free. Decades of real world examples have proven Crosby and others who espouse this approach to be correct. -- [[Marty Schrader]] (hoping the stupid-ass Sharkbot will stop reversing properly done edits)</i>",
            "id": "9935a17dec8c47e630ea2597207dc813"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "bfcb7c940103349ae1eb38c959c6fe09"
          },
          {
            "type": "html",
            "text": "See: [[Quality Elbow]]",
            "id": "9249141bf4c152028504c68cd5e557cd"
          },
          {
            "type": "html",
            "text": "\n[[Category Quality]]",
            "id": "b22d470d9be21429a86c4b6a8bb406cd"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?QualityIsNotFree c2.com]",
            "id": "d4e9ab115999ab14e00d60c819187a2e"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1652076089517
    }
  ]
}