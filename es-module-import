{
  "title": "ES Module Import",
  "story": [
    {
      "type": "paragraph",
      "id": "a687aa265ec1682b",
      "text": "⇒ [[geom-fuzz-basics]] ⇒ [[Static Import Snippet]]"
    },
    {
      "type": "code",
      "id": "4191e2b327fd8680",
      "text": "import { adaptDPI } from \"https://cdn.skypack.dev/@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"https://cdn.skypack.dev/@thi.ng/geom\";\nimport { compFill, defDots, defHatchPen, fuzzyPoly, jitterPoints, } from \"https://cdn.skypack.dev/@thi.ng/geom-fuzz\";\nimport { draw } from \"https://cdn.skypack.dev/@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"https://cdn.skypack.dev/@thi.ng/rstream\";"
    },
    {
      "type": "frame",
      "id": "5396a0b4e33715c0",
      "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 256"
    },
    {
      "type": "code",
      "id": "a0c244706c469194",
      "text": "const W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\n"
    },
    {
      "type": "code",
      "id": "b5dc575c2c3a729f",
      "text": "const canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
    },
    {
      "type": "pagefold",
      "id": "c36249ecc0e14279",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3dc22bf0c3266b5b",
      "text": "Question: Can we work with [[TypeScript]] in code paragraphs?"
    },
    {
      "type": "markdown",
      "id": "5339163fe4580ee7",
      "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]\n* TypeScript API Test in the browser [https://cancerberosgx.github.io/typescript-in-the-browser/typescript-compiler/ page], [https://github.com/cancerberoSgx/typescript-in-the-browser/tree/master/candombed github]"
    },
    {
      "type": "paragraph",
      "id": "fa8779d465eca2a2",
      "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167829826046238Irpiy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]: Maybe a preliminary question should be. Can we work with TypeScript in the browser. and what do we need to do to make that happen? Looking at the TS Playground may give some insight."
    },
    {
      "type": "markdown",
      "id": "83dc36720c801625",
      "text": "* [https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgQwCbLDAIgBQJJwC+cAZlBCHAEQACMAFsAHQB2A5gPRoYwC0qYYFQDcAKFCRYiOAGNgUGQBsApgBo4bcgFcw6gM4xkUdQDdlsYDOV6ipcpVoNm7Dm2UUR48NHgJRASBkKMAAxYEVFVQDUZRIsCBg9KP8YkgAJZBgZehxlFmSSLQAvIoBPHAhFUuSAK2AYGHMK4BZEqOIyCmo6RlZONwpeQpLPCR9pVChkAHdbToce505GGRkdXhlkFhNkPVHvKSR5vFbzHcU5+26nPo4oAyhlZBBPUSCWAzgAdTgAXjgAMwABiBYjeEA+8AAymkAII4ACiUL+iACMCgwAAXHAzBYrHoABRyBQqAkARhBAEp1ADqQF6MoAB7Y3EwSzWInyJTKAkAViB1LgADY6f4DEYWeY2fiCeKoHygeoheoANpApi89RkgC6lNFekEAGtlNi6g0mhAWokCaz2YTidyCQAWAVagBMgrJvLphDB70+iIAcmSUakMlkcnkCWr1OqABxa2Ma3Vif3wINulFBcBhCIE6KxcPZXIsAlUADEJABJCo6ioqFrcDJNNFYcyxajFarNbrJkbzcBlNElNTEIDCMDANDhfbkdLKoHA8VcHVvO1dfojadWqYHtHkLgQad07iCUJfn8ZsaUGxzYCmXRwAARnpsUg9MAiiamxr1CRwoo2Ixk2sbrnADwQMa2JUCwELKFQRDtCOojggeaxQGYFQ2P8+b+DA2IsFoIBPuYBTMnAhHEaRAQkKUBFESRxj3uRlGMckyB0RRDHmMOfwAHxwCqACymT0EwH6lvAABUpCMpScAycgjJwAA1N8cAcHAbrqCJDBMEEhLSaQpTyYppSqepmlutqfpjvAmzbLs2JpAAKkJAAyADCWw7HoCIqCAeTwP8qAQGsgWtPpjyZMo-nKBFMBlg5vlUMhoXhUFTBPhAqClEwGBgHkqCeYwiioESPm7Mh3CYLgeAVY5STfOoXzIahnwyDAyn-MluxMG4MCeRCjSMolVBug2lIAIRgscpwYcgijkiCQIaYCAriVoL4yBiJEEheLBMol+FcVRUDyRegRdfpKhGAASsonUEsuy69XoTDTMAqAMOob1MAywBsPQMDIf4KRTNMuFg51jLJGDmgQDo+3geikHflQT6KMgMiGo2eibCo2KfSwoXTEwMQmOyODAIyyiKHdmTABAcAAD4s02iGCQEYP+MMZQVFUUM8zC8JIkwj5wzzSDolsehY40QFesuStgeQhgK3ARnqkCx6EJLYOXTzvMAdiQZ3kb0NaBhyhQgT37a5q3NG1e5jYgC+v+IQTv+KKPN8+UlSlELYMi4iULiYYTEW4bPMyx88vfuhmEQIZSZAtpK5MEC7tNiC6j8r7PN697-gx2D-4RKbE7aSXgRW2YtuLfbTDuyXXtG4XvPFPzgfB-4odiwysMl2XeFTPHMXYknyhYQS8BqRSL1Zzn2sZ4v+eum3HujxXgGHhOrcW3X1uN4Tmfm0b7c853-sC0HJcD+HBrAMa2+13HcuT7I9czync9p9uTO2cN5aipB7Yu0da67yroGbcbdvaF11NzUGxdCDISAA https://www.typescriptlang.org/play]"
    },
    {
      "type": "paragraph",
      "id": "fee90eb941f2295d",
      "text": "⇒ [[Example Popover]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "ES Module Import",
        "story": []
      },
      "date": 1678293702861
    },
    {
      "id": "a687aa265ec1682b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github] ⇒ [[ES Module Import]]"
      },
      "attribution": {
        "page": "2023-03-08"
      },
      "date": 1678293707652
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github] "
      },
      "date": 1678293712243
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github] "
      },
      "date": 1678293742237
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] "
      },
      "date": 1678293798413
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[ESM Snippet Template]]"
      },
      "date": 1678293854739
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[ESM Snippet Template]]⇒ [[ESM Snippet Template]]"
      },
      "date": 1678293914035
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[ESM Snippet Template]] ⇒ [[Graveyard Ghost]]"
      },
      "date": 1678293931459
    },
    {
      "item": {
        "type": "factory",
        "id": "5396a0b4e33715c0"
      },
      "id": "5396a0b4e33715c0",
      "type": "add",
      "after": "a687aa265ec1682b",
      "date": 1678293960666
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
      },
      "date": 1678293966549
    },
    {
      "item": {
        "type": "factory",
        "id": "a0c244706c469194"
      },
      "id": "a0c244706c469194",
      "type": "add",
      "after": "5396a0b4e33715c0",
      "date": 1678293986852
    },
    {
      "id": "a0c244706c469194",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "a0c244706c469194",
        "5396a0b4e33715c0"
      ],
      "date": 1678293990066
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "import { adaptDPI } from \"@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"@thi.ng/geom\";\nimport {\n\tcompFill,\n\tdefDots,\n\tdefHatchPen,\n\tfuzzyPoly,\n\tjitterPoints,\n} from \"@thi.ng/geom-fuzz\";\nimport { draw } from \"@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"@thi.ng/rstream\";\n\nconst W = 300;\n\nconst SHAPES = {\n\ttri: vertices(circle(100), 3),\n\thex: vertices(circle(50), 6),\n\tstar: vertices(star(50, 6, [0.5, 1])),\n\tspike: jitterPoints(vertices(circle(40), 12), 15),\n};\n\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(\n\tdefHatchPen(\"#f3f\", \"d\", 1, 3),\n\tdefHatchPen(\"#f3f\", \"v\", 1, 3)\n);\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n\tjitter: 1,\n\tattribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\n\nconst curvePos = (\n\tt: number,\n\tfx: number,\n\tfy: number,\n\tax: number,\n\tay: number\n) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\n\nconst canvas: HTMLCanvasElement = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\n\nconst ctx = canvas.getContext(\"2d\")!;\n\nfromInterval(1000 / 30).subscribe({\n\tnext(t: number) {\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\tdraw(\n\t\t\tctx,\n\t\t\tgroup({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n\t\t\t\tfuzzyPoly(\n\t\t\t\t\tSHAPES.tri,\n\t\t\t\t\t{ translate: [150, 150], rotate: t * 0.04 },\n\t\t\t\t\t{\n\t\t\t\t\t\tfill: PEN1,\n\t\t\t\t\t\tcurveScale: 0.05,\n\t\t\t\t\t\tjitter: 3,\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tfuzzyPoly(\n\t\t\t\t\tSHAPES.star,\n\t\t\t\t\t{\n\t\t\t\t\t\ttranslate: curvePos(t, 0.02, 0.03, 100, 50),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfill: PEN2,\n\t\t\t\t\t\tcurveScale: 0.3,\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tfuzzyPoly(\n\t\t\t\t\tSHAPES.hex,\n\t\t\t\t\t{\n\t\t\t\t\t\ttranslate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfill: PEN3,\n\t\t\t\t\t\tcurveScale: 0.1,\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t\tfuzzyPoly(\n\t\t\t\t\tSHAPES.spike,\n\t\t\t\t\t{\n\t\t\t\t\t\ttranslate: curvePos(t, 0.04, 0.03, 50, 100),\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfill: PEN4,\n\t\t\t\t\t}\n\t\t\t\t),\n\t\t\t])\n\t\t);\n\t},\n});\n"
      },
      "date": 1678293992938
    },
    {
      "type": "add",
      "id": "64977cefa19348e9",
      "item": {
        "type": "paragraph",
        "id": "64977cefa19348e9",
        "text": "We use the frame of the "
      },
      "after": "a687aa265ec1682b",
      "date": 1678294071661
    },
    {
      "type": "edit",
      "id": "64977cefa19348e9",
      "item": {
        "type": "paragraph",
        "id": "64977cefa19348e9",
        "text": "We use the frame of the [[Graveyard Ghost]] page and copy the "
      },
      "date": 1678294086496
    },
    {
      "type": "edit",
      "id": "64977cefa19348e9",
      "item": {
        "type": "paragraph",
        "id": "64977cefa19348e9",
        "text": "We use the frame of the [[Graveyard Ghost]] page and copy the g [https://github.com/thi-ng/umbrella/blob/31dd56eba72edd73a3ced5002c0f5145ce3d42d6/examples/geom-fuzz-basics/src/index.ts source]"
      },
      "date": 1678294139079
    },
    {
      "type": "edit",
      "id": "64977cefa19348e9",
      "item": {
        "type": "paragraph",
        "id": "64977cefa19348e9",
        "text": "We use the frame of the [[Graveyard Ghost]] page and copy the [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/blob/31dd56eba72edd73a3ced5002c0f5145ce3d42d6/examples/geom-fuzz-basics/src/index.ts source] into a code paragraph:"
      },
      "date": 1678294160089
    },
    {
      "item": {
        "type": "factory",
        "id": "af3bd3adb72550fb"
      },
      "id": "af3bd3adb72550fb",
      "type": "add",
      "after": "5396a0b4e33715c0",
      "date": 1678294175731
    },
    {
      "type": "edit",
      "id": "af3bd3adb72550fb",
      "item": {
        "type": "paragraph",
        "id": "af3bd3adb72550fb",
        "text": "We get an \"import declarations may only appear at top level of a module\" error."
      },
      "date": 1678294194276
    },
    {
      "type": "edit",
      "id": "af3bd3adb72550fb",
      "item": {
        "type": "paragraph",
        "id": "af3bd3adb72550fb",
        "text": "We get an \"import declarations may only appear at top level of a module\" error and replace the contents of the above frame with the one from [[ESM Snippet Template]]."
      },
      "date": 1678294239893
    },
    {
      "type": "edit",
      "id": "af3bd3adb72550fb",
      "item": {
        "type": "paragraph",
        "id": "af3bd3adb72550fb",
        "text": "We get an \"import declarations may only appear at top level of a module\" error and replace the content of the above frame with the one from [[ESM Snippet Template]]."
      },
      "date": 1678294254014
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1678294269311
    },
    {
      "item": {
        "type": "factory",
        "id": "75018f88e06065fe"
      },
      "id": "75018f88e06065fe",
      "type": "add",
      "after": "af3bd3adb72550fb",
      "date": 1678294353166
    },
    {
      "type": "edit",
      "id": "75018f88e06065fe",
      "item": {
        "type": "paragraph",
        "id": "75018f88e06065fe",
        "text": "Now we get a SyntaxError."
      },
      "date": 1678294368136
    },
    {
      "type": "edit",
      "id": "64977cefa19348e9",
      "item": {
        "type": "paragraph",
        "id": "64977cefa19348e9",
        "text": "We use the frame of the [[Graveyard Ghost]] page and copy the [[geom-fuzz-basics]] TypeScript [https://github.com/thi-ng/umbrella/blob/31dd56eba72edd73a3ced5002c0f5145ce3d42d6/examples/geom-fuzz-basics/src/index.ts source] into a code paragraph:"
      },
      "date": 1678294401784
    },
    {
      "type": "edit",
      "id": "af3bd3adb72550fb",
      "item": {
        "type": "paragraph",
        "id": "af3bd3adb72550fb",
        "text": "We get an \"import declarations may only appear at top level of a module\" error."
      },
      "date": 1678294471641
    },
    {
      "type": "add",
      "id": "2328f2f85bd8330a",
      "item": {
        "type": "paragraph",
        "id": "2328f2f85bd8330a",
        "text": "We replace the content of the above frame with the one from [[ESM Snippet Template]]."
      },
      "after": "af3bd3adb72550fb",
      "date": 1678294522036
    },
    {
      "item": {
        "type": "factory",
        "id": "3dc22bf0c3266b5b"
      },
      "id": "3dc22bf0c3266b5b",
      "type": "add",
      "after": "75018f88e06065fe",
      "date": 1678294615166
    },
    {
      "type": "edit",
      "id": "3dc22bf0c3266b5b",
      "item": {
        "type": "paragraph",
        "id": "3dc22bf0c3266b5b",
        "text": "Question: Can we work with TypeScript in code paragraphs at all?"
      },
      "date": 1678294617348
    },
    {
      "id": "af3bd3adb72550fb",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "64977cefa19348e9",
        "a0c244706c469194",
        "af3bd3adb72550fb",
        "5396a0b4e33715c0",
        "2328f2f85bd8330a",
        "75018f88e06065fe",
        "3dc22bf0c3266b5b"
      ],
      "date": 1678296236408
    },
    {
      "type": "edit",
      "id": "3dc22bf0c3266b5b",
      "item": {
        "type": "paragraph",
        "id": "3dc22bf0c3266b5b",
        "text": "Question: Can we work with [[TypeScript]] in code paragraphs at all?"
      },
      "date": 1678296255619
    },
    {
      "item": {
        "type": "factory",
        "id": "5339163fe4580ee7"
      },
      "id": "5339163fe4580ee7",
      "type": "add",
      "after": "3dc22bf0c3266b5b",
      "date": 1678296398204
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser?"
      },
      "date": 1678296402828
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]"
      },
      "date": 1678296417563
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]\n* TypeScript API Test in the browser"
      },
      "date": 1678296528843
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]\n* TypeScript API Test in the browser [https://cancerberosgx.github.io/typescript-in-the-browser/typescript-compiler/ page]"
      },
      "date": 1678296546121
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]\n* TypeScript API Test in the browser [https://cancerberosgx.github.io/typescript-in-the-browser/typescript-compiler/ page], [https://cancerberosgx.github.io/typescript-in-the-browser/typescript-compiler/ github]"
      },
      "date": 1678296587904
    },
    {
      "type": "edit",
      "id": "5339163fe4580ee7",
      "item": {
        "type": "markdown",
        "id": "5339163fe4580ee7",
        "text": "* How to compile TypeScript code in the browser? [https://stackoverflow.com/questions/23075748/how-to-compile-typescript-code-in-the-browser stackoverflow]\n* TypeScript API Test in the browser [https://cancerberosgx.github.io/typescript-in-the-browser/typescript-compiler/ page], [https://github.com/cancerberoSgx/typescript-in-the-browser/tree/master/candombed github]"
      },
      "date": 1678296628802
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], ⇒ ⇒ Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[ESM Snippet Template]] ⇒ [[Graveyard Ghost]]"
      },
      "date": 1678296791800
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], [https://demo.thi.ng/umbrella/geom-fuzz-basics/ demo] ⇒ Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[ESM Snippet Template]] ⇒ [[Graveyard Ghost]]"
      },
      "date": 1678296804312
    },
    {
      "type": "fork",
      "date": 1678296921185
    },
    {
      "item": {
        "type": "factory",
        "id": "fa8779d465eca2a2"
      },
      "id": "fa8779d465eca2a2",
      "type": "add",
      "after": "5339163fe4580ee7",
      "date": 1678298373284
    },
    {
      "type": "edit",
      "id": "fa8779d465eca2a2",
      "item": {
        "type": "paragraph",
        "id": "fa8779d465eca2a2",
        "text": "Paul via Maybe a preliminary question should be. Can we work with TypeScript in the browser. and what do we need to do to make that happen? Looking at the TS Playground may give some insight."
      },
      "date": 1678298379900
    },
    {
      "type": "edit",
      "id": "fa8779d465eca2a2",
      "item": {
        "type": "paragraph",
        "id": "fa8779d465eca2a2",
        "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$167829826046238Irpiy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]: Maybe a preliminary question should be. Can we work with TypeScript in the browser. and what do we need to do to make that happen? Looking at the TS Playground may give some insight."
      },
      "date": 1678298396895
    },
    {
      "item": {
        "type": "factory",
        "id": "83dc36720c801625"
      },
      "id": "83dc36720c801625",
      "type": "add",
      "after": "fa8779d465eca2a2",
      "date": 1678298431148
    },
    {
      "type": "edit",
      "id": "83dc36720c801625",
      "item": {
        "type": "markdown",
        "id": "83dc36720c801625",
        "text": "* https://www.typescriptlang.org/play"
      },
      "date": 1678298435203
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "\"use strict\";\n// The DOM (Document Object Model) is the underlying API for\n// working with a webpage, and TypeScript has great support\n// for that API.\n// Let's create a popover to show when you press \"Run\" in\n// the toolbar above.\nconst popover = document.createElement(\"div\");\npopover.id = \"example-popover\";\n// Note that popover is correctly typed to be a HTMLDivElement\n// specifically because we passed in \"div\".\n// To make it possible to re-run this code, we'll first\n// add a function to remove the popover if it was already there.\nconst removePopover = () => {\n    const existingPopover = document.getElementById(popover.id);\n    if (existingPopover && existingPopover.parentElement) {\n        existingPopover.parentElement.removeChild(existingPopover);\n    }\n};\n// Then call it right away.\nremovePopover();\n// We can set the inline styles on the element via the\n// .style property on a HTMLElement - this is fully typed.\npopover.style.backgroundColor = \"#0078D4\";\npopover.style.color = \"white\";\npopover.style.border = \"1px solid black\";\npopover.style.position = \"fixed\";\npopover.style.bottom = \"10px\";\npopover.style.left = \"20px\";\npopover.style.width = \"200px\";\npopover.style.height = \"100px\";\npopover.style.padding = \"10px\";\n// Including more obscure, or deprecated CSS attributes.\npopover.style.webkitBorderRadius = \"4px\";\n// To add content to the popover, we'll need to add\n// a paragraph element and use it to add some text.\nconst message = document.createElement(\"p\");\nmessage.textContent = \"Here is an example popover\";\n// And we'll also add a close button.\nconst closeButton = document.createElement(\"a\");\ncloseButton.textContent = \"X\";\ncloseButton.style.position = \"absolute\";\ncloseButton.style.top = \"3px\";\ncloseButton.style.right = \"8px\";\ncloseButton.style.color = \"white\";\ncloseButton.style.cursor = \"pointer\";\ncloseButton.onclick = () => {\n    removePopover();\n};\n// Then add all of these elements on to the page.\npopover.appendChild(message);\npopover.appendChild(closeButton);\ndocument.body.appendChild(popover);\n// If you hit \"Run\" above, then a popup should appear\n// in the bottom left, which you can close by clicking\n// on the x in the top right of the popup.\n// This example shows how you can work with the DOM API\n// in JavaScript - but using TypeScript to provide great\n// tooling support.\n// There is an extended example for TypeScript tooling with\n// WebGL available here: example:typescript-with-webgl\n"
      },
      "date": 1678299446114
    },
    {
      "type": "remove",
      "id": "64977cefa19348e9",
      "date": 1678299536997
    },
    {
      "type": "remove",
      "id": "af3bd3adb72550fb",
      "date": 1678299542702
    },
    {
      "type": "remove",
      "id": "2328f2f85bd8330a",
      "date": 1678299545434
    },
    {
      "type": "remove",
      "id": "75018f88e06065fe",
      "date": 1678299548094
    },
    {
      "item": {
        "type": "factory",
        "id": "fee90eb941f2295d"
      },
      "id": "fee90eb941f2295d",
      "type": "add",
      "after": "83dc36720c801625",
      "date": 1678299765929
    },
    {
      "type": "edit",
      "id": "fee90eb941f2295d",
      "item": {
        "type": "paragraph",
        "id": "fee90eb941f2295d",
        "text": "⇒ [[Example popover]]"
      },
      "date": 1678299794476
    },
    {
      "type": "edit",
      "id": "fee90eb941f2295d",
      "item": {
        "type": "paragraph",
        "id": "fee90eb941f2295d",
        "text": "⇒ [[Example Popover]]"
      },
      "date": 1678299806748
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "import { adaptDPI } from \"@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"@thi.ng/geom\";\nimport { compFill, defDots, defHatchPen, fuzzyPoly, jitterPoints, } from \"@thi.ng/geom-fuzz\";\nimport { draw } from \"@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"@thi.ng/rstream\";\nconst W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678299861432
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "import { adaptDPI } from \"https://cdn.skypack.dev/@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"@thi.ng/geom\";\nimport { compFill, defDots, defHatchPen, fuzzyPoly, jitterPoints, } from \"@thi.ng/geom-fuzz\";\nimport { draw } from \"@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"@thi.ng/rstream\";\nconst W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678299904666
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "import { adaptDPI } from \"https://cdn.skypack.dev/@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"https://cdn.skypack.dev/@thi.ng/geom\";\nimport { compFill, defDots, defHatchPen, fuzzyPoly, jitterPoints, } from \"https://cdn.skypack.dev/@thi.ng/geom-fuzz\";\nimport { draw } from \"https://cdn.skypack.dev/@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"https://cdn.skypack.dev/@thi.ng/rstream\";\nconst W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678299994500
    },
    {
      "item": {
        "type": "factory",
        "id": "59bb922b744afd19"
      },
      "id": "59bb922b744afd19",
      "type": "add",
      "after": "fee90eb941f2295d",
      "date": 1678300103580
    },
    {
      "id": "59bb922b744afd19",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "a0c244706c469194",
        "59bb922b744afd19",
        "5396a0b4e33715c0",
        "3dc22bf0c3266b5b",
        "5339163fe4580ee7",
        "fa8779d465eca2a2",
        "83dc36720c801625",
        "fee90eb941f2295d"
      ],
      "date": 1678300106890
    },
    {
      "type": "edit",
      "id": "59bb922b744afd19",
      "item": {
        "type": "paragraph",
        "id": "59bb922b744afd19",
        "text": "⇒ [[Static Import Snippe]]"
      },
      "date": 1678300117235
    },
    {
      "type": "edit",
      "id": "59bb922b744afd19",
      "item": {
        "type": "paragraph",
        "id": "59bb922b744afd19",
        "text": "⇒ [[Static Import Snippet]]"
      },
      "date": 1678300123927
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
      },
      "date": 1678300178611
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 128"
      },
      "date": 1678300268186
    },
    {
      "id": "5396a0b4e33715c0",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "5396a0b4e33715c0",
        "a0c244706c469194",
        "59bb922b744afd19",
        "3dc22bf0c3266b5b",
        "5339163fe4580ee7",
        "fa8779d465eca2a2",
        "83dc36720c801625",
        "fee90eb941f2295d"
      ],
      "date": 1678300281531
    },
    {
      "type": "remove",
      "id": "59bb922b744afd19",
      "date": 1678300294947
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas github], [https://demo.thi.ng/umbrella/geom-fuzz-basics/ demo] ⇒ Example Build Instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github], [https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-canvas#installation installation] ⇒ [[Static Import Snippet]]"
      },
      "date": 1678300297821
    },
    {
      "type": "edit",
      "id": "5396a0b4e33715c0",
      "item": {
        "type": "frame",
        "id": "5396a0b4e33715c0",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 256"
      },
      "date": 1678300310741
    },
    {
      "item": {
        "type": "factory",
        "id": "4191e2b327fd8680"
      },
      "id": "4191e2b327fd8680",
      "type": "add",
      "after": "fee90eb941f2295d",
      "date": 1678300396953
    },
    {
      "id": "4191e2b327fd8680",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "4191e2b327fd8680",
        "5396a0b4e33715c0",
        "a0c244706c469194",
        "3dc22bf0c3266b5b",
        "5339163fe4580ee7",
        "fa8779d465eca2a2",
        "83dc36720c801625",
        "fee90eb941f2295d"
      ],
      "date": 1678300404858
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "\nconst W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678300416270
    },
    {
      "type": "edit",
      "id": "4191e2b327fd8680",
      "item": {
        "type": "code",
        "id": "4191e2b327fd8680",
        "text": "import { adaptDPI } from \"https://cdn.skypack.dev/@thi.ng/adapt-dpi\";\nimport { circle, group, star, vertices } from \"https://cdn.skypack.dev/@thi.ng/geom\";\nimport { compFill, defDots, defHatchPen, fuzzyPoly, jitterPoints, } from \"https://cdn.skypack.dev/@thi.ng/geom-fuzz\";\nimport { draw } from \"https://cdn.skypack.dev/@thi.ng/hiccup-canvas\";\nimport { fromInterval } from \"https://cdn.skypack.dev/@thi.ng/rstream\";"
      },
      "date": 1678300417773
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "const W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\nconst canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678300430167
    },
    {
      "type": "edit",
      "id": "83dc36720c801625",
      "item": {
        "type": "markdown",
        "id": "83dc36720c801625",
        "text": "* [ https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgQwCbLDAIgBQJJwC+cAZlBCHAEQACMAFsAHQB2A5gPRoYwC0qYYFQDcAKFCRYiOAGNgUGQBsApgBo4bcgFcw6gM4xkUdQDdlsYDOV6ipcpVoNm7Dm2UUR48NHgJRASBkKMAAxYEVFVQDUZRIsCBg9KP8YkgAJZBgZehxlFmSSLQAvIoBPHAhFUuSAK2AYGHMK4BZEqOIyCmo6RlZONwpeQpLPCR9pVChkAHdbToce505GGRkdXhlkFhNkPVHvKSR5vFbzHcU5+26nPo4oAyhlZBBPUSCWAzgAdTgAXjgAMwABiBYjeEA+8AAymkAII4ACiUL+iACMCgwAAXHAzBYrHoABRyBQqAkARhBAEp1ADqQF6MoAB7Y3EwSzWInyJTKAkAViB1LgADY6f4DEYWeY2fiCeKoHygeoheoANpApi89RkgC6lNFekEAGtlNi6g0mhAWokCaz2YTidyCQAWAVagBMgrJvLphDB70+iIAcmSUakMlkcnkCWr1OqABxa2Ma3Vif3wINulFBcBhCIE6KxcPZXIsAlUADEJABJCo6ioqFrcDJNNFYcyxajFarNbrJkbzcBlNElNTEIDCMDANDhfbkdLKoHA8VcHVvO1dfojadWqYHtHkLgQad07iCUJfn8ZsaUGxzYCmXRwAARnpsUg9MAiiamxr1CRwoo2Ixk2sbrnADwQMa2JUCwELKFQRDtCOojggeaxQGYFQ2P8+b+DA2IsFoIBPuYBTMnAhHEaRAQkKUBFESRxj3uRlGMckyB0RRDHmMOfwAHxwCqACymT0EwH6lvAABUpCMpScAycgjJwAA1N8cAcHAbrqCJDBMEEhLSaQpTyYppSqepmlutqfpjvAmzbLs2JpAAKkJAAyADCWw7HoCIqCAeTwP8qAQGsgWtPpjyZMo-nKBFMBlg5vlUMhoXhUFTBPhAqClEwGBgHkqCeYwiioESPm7Mh3CYLgeAVY5STfOoXzIahnwyDAyn-MluxMG4MCeRCjSMolVBug2lIAIRgscpwYcgijkiCQIaYCAriVoL4yBiJEEheLBMol+FcVRUDyRegRdfpKhGAASsonUEsuy69XoTDTMAqAMOob1MAywBsPQMDIf4KRTNMuFg51jLJGDmgQDo+3geikHflQT6KMgMiGo2eibCo2KfSwoXTEwMQmOyODAIyyiKHdmTABAcAAD4s02iGCQEYP+MMZQVFUUM8zC8JIkwj5wzzSDolsehY40QFesuStgeQhgK3ARnqkCx6EJLYOXTzvMAdiQZ3kb0NaBhyhQgT37a5q3NG1e5jYgC+v+IQTv+KKPN8+UlSlELYMi4iULiYYTEW4bPMyx88vfuhmEQIZSZAtpK5MEC7tNiC6j8r7PN697-gx2D-4RKbE7aSXgRW2YtuLfbTDuyXXtG4XvPFPzgfB-4odiwysMl2XeFTPHMXYknyhYQS8BqRSL1Zzn2sZ4v+eum3HujxXgGHhOrcW3X1uN4Tmfm0b7c853-sC0HJcD+HBrAMa2+13HcuT7I9czync9p9uTO2cN5aipB7Yu0da67yroGbcbdvaF11NzUGxdCDISAA https://www.typescriptlang.org/play]"
      },
      "date": 1678300498176
    },
    {
      "type": "edit",
      "id": "83dc36720c801625",
      "item": {
        "type": "markdown",
        "id": "83dc36720c801625",
        "text": "* [https://www.typescriptlang.org/play?#code/JYWwDg9gTgLgBAbzgQwCbLDAIgBQJJwC+cAZlBCHAEQACMAFsAHQB2A5gPRoYwC0qYYFQDcAKFCRYiOAGNgUGQBsApgBo4bcgFcw6gM4xkUdQDdlsYDOV6ipcpVoNm7Dm2UUR48NHgJRASBkKMAAxYEVFVQDUZRIsCBg9KP8YkgAJZBgZehxlFmSSLQAvIoBPHAhFUuSAK2AYGHMK4BZEqOIyCmo6RlZONwpeQpLPCR9pVChkAHdbToce505GGRkdXhlkFhNkPVHvKSR5vFbzHcU5+26nPo4oAyhlZBBPUSCWAzgAdTgAXjgAMwABiBYjeEA+8AAymkAII4ACiUL+iACMCgwAAXHAzBYrHoABRyBQqAkARhBAEp1ADqQF6MoAB7Y3EwSzWInyJTKAkAViB1LgADY6f4DEYWeY2fiCeKoHygeoheoANpApi89RkgC6lNFekEAGtlNi6g0mhAWokCaz2YTidyCQAWAVagBMgrJvLphDB70+iIAcmSUakMlkcnkCWr1OqABxa2Ma3Vif3wINulFBcBhCIE6KxcPZXIsAlUADEJABJCo6ioqFrcDJNNFYcyxajFarNbrJkbzcBlNElNTEIDCMDANDhfbkdLKoHA8VcHVvO1dfojadWqYHtHkLgQad07iCUJfn8ZsaUGxzYCmXRwAARnpsUg9MAiiamxr1CRwoo2Ixk2sbrnADwQMa2JUCwELKFQRDtCOojggeaxQGYFQ2P8+b+DA2IsFoIBPuYBTMnAhHEaRAQkKUBFESRxj3uRlGMckyB0RRDHmMOfwAHxwCqACymT0EwH6lvAABUpCMpScAycgjJwAA1N8cAcHAbrqCJDBMEEhLSaQpTyYppSqepmlutqfpjvAmzbLs2JpAAKkJAAyADCWw7HoCIqCAeTwP8qAQGsgWtPpjyZMo-nKBFMBlg5vlUMhoXhUFTBPhAqClEwGBgHkqCeYwiioESPm7Mh3CYLgeAVY5STfOoXzIahnwyDAyn-MluxMG4MCeRCjSMolVBug2lIAIRgscpwYcgijkiCQIaYCAriVoL4yBiJEEheLBMol+FcVRUDyRegRdfpKhGAASsonUEsuy69XoTDTMAqAMOob1MAywBsPQMDIf4KRTNMuFg51jLJGDmgQDo+3geikHflQT6KMgMiGo2eibCo2KfSwoXTEwMQmOyODAIyyiKHdmTABAcAAD4s02iGCQEYP+MMZQVFUUM8zC8JIkwj5wzzSDolsehY40QFesuStgeQhgK3ARnqkCx6EJLYOXTzvMAdiQZ3kb0NaBhyhQgT37a5q3NG1e5jYgC+v+IQTv+KKPN8+UlSlELYMi4iULiYYTEW4bPMyx88vfuhmEQIZSZAtpK5MEC7tNiC6j8r7PN697-gx2D-4RKbE7aSXgRW2YtuLfbTDuyXXtG4XvPFPzgfB-4odiwysMl2XeFTPHMXYknyhYQS8BqRSL1Zzn2sZ4v+eum3HujxXgGHhOrcW3X1uN4Tmfm0b7c853-sC0HJcD+HBrAMa2+13HcuT7I9czync9p9uTO2cN5aipB7Yu0da67yroGbcbdvaF11NzUGxdCDISAA https://www.typescriptlang.org/play]"
      },
      "date": 1678300505409
    },
    {
      "item": {
        "type": "factory",
        "id": "b5dc575c2c3a729f"
      },
      "id": "b5dc575c2c3a729f",
      "type": "add",
      "after": "fee90eb941f2295d",
      "date": 1678300853485
    },
    {
      "id": "b5dc575c2c3a729f",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "4191e2b327fd8680",
        "5396a0b4e33715c0",
        "a0c244706c469194",
        "b5dc575c2c3a729f",
        "3dc22bf0c3266b5b",
        "5339163fe4580ee7",
        "fa8779d465eca2a2",
        "83dc36720c801625",
        "fee90eb941f2295d"
      ],
      "date": 1678300856141
    },
    {
      "type": "edit",
      "id": "a0c244706c469194",
      "item": {
        "type": "code",
        "id": "a0c244706c469194",
        "text": "const W = 300;\nconst SHAPES = {\n    tri: vertices(circle(100), 3),\n    hex: vertices(circle(50), 6),\n    star: vertices(star(50, 6, [0.5, 1])),\n    spike: jitterPoints(vertices(circle(40), 12), 15),\n};\nconst PEN1 = defHatchPen([0, 0.8, 1, 0.5]);\nconst PEN2 = compFill(defHatchPen(\"#f3f\", \"d\", 1, 3), defHatchPen(\"#f3f\", \"v\", 1, 3));\nconst PEN3 = defHatchPen([1, 1, 0, 0.5], \"h\", 4, 1.2);\nconst PEN4 = defDots({\n    jitter: 1,\n    attribs: { size: 1.5, fill: [0, 1, 0], stroke: \"none\" },\n});\nconst curvePos = (t, fx, fy, ax, ay) => [Math.sin(t * fx) * ax + W / 2, Math.cos(t * fy) * ay + W / 2];\n"
      },
      "date": 1678300857718
    },
    {
      "type": "edit",
      "id": "b5dc575c2c3a729f",
      "item": {
        "type": "code",
        "id": "b5dc575c2c3a729f",
        "text": "const canvas = document.createElement(\"canvas\");\ndocument.body.appendChild(canvas);\nadaptDPI(canvas, W, W);\nconst ctx = canvas.getContext(\"2d\");\nfromInterval(1000 / 30).subscribe({\n    next(t) {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        draw(ctx, group({ stroke: \"black\", scale: window.devicePixelRatio || 1 }, [\n            fuzzyPoly(SHAPES.tri, { translate: [150, 150], rotate: t * 0.04 }, {\n                fill: PEN1,\n                curveScale: 0.05,\n                jitter: 3,\n            }),\n            fuzzyPoly(SHAPES.star, {\n                translate: curvePos(t, 0.02, 0.03, 100, 50),\n            }, {\n                fill: PEN2,\n                curveScale: 0.3,\n            }),\n            fuzzyPoly(SHAPES.hex, {\n                translate: curvePos(t + 100, 0.03, 0.02, 100, 50),\n            }, {\n                fill: PEN3,\n                curveScale: 0.1,\n            }),\n            fuzzyPoly(SHAPES.spike, {\n                translate: curvePos(t, 0.04, 0.03, 50, 100),\n            }, {\n                fill: PEN4,\n            }),\n        ]));\n    },\n});"
      },
      "date": 1678300859149
    },
    {
      "type": "edit",
      "id": "a687aa265ec1682b",
      "item": {
        "type": "paragraph",
        "id": "a687aa265ec1682b",
        "text": "⇒ [[geom-fuzz-basics]] ⇒ [[Static Import Snippet]]"
      },
      "date": 1678300960022
    },
    {
      "item": {
        "type": "factory",
        "id": "c36249ecc0e14279"
      },
      "id": "c36249ecc0e14279",
      "type": "add",
      "after": "fee90eb941f2295d",
      "date": 1678301081692
    },
    {
      "id": "c36249ecc0e14279",
      "type": "move",
      "order": [
        "a687aa265ec1682b",
        "4191e2b327fd8680",
        "5396a0b4e33715c0",
        "a0c244706c469194",
        "b5dc575c2c3a729f",
        "c36249ecc0e14279",
        "3dc22bf0c3266b5b",
        "5339163fe4580ee7",
        "fa8779d465eca2a2",
        "83dc36720c801625",
        "fee90eb941f2295d"
      ],
      "date": 1678301085957
    },
    {
      "type": "edit",
      "id": "c36249ecc0e14279",
      "item": {
        "type": "pagefold",
        "id": "c36249ecc0e14279",
        "text": "~"
      },
      "date": 1678301090651
    },
    {
      "type": "edit",
      "id": "3dc22bf0c3266b5b",
      "item": {
        "type": "paragraph",
        "id": "3dc22bf0c3266b5b",
        "text": "Question: Can we work with [[TypeScript]] in code paragraphs?"
      },
      "date": 1678301538319
    }
  ]
}