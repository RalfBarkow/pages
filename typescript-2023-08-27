{
  "title": "Typescript 2023-08-27",
  "story": [
    {
      "type": "paragraph",
      "text": "Text extraction. See [[Typescript Archive]]",
      "id": "54187282310724648960"
    },
    {
      "type": "paragraph",
      "id": "16e2e2d8f998667f",
      "text": "Archive starts at first pagefold, 09:10:08 ."
    },
    {
      "type": "paragraph",
      "id": "e5a7c90d4316e6af",
      "text": "Sunday Explorers 2023-08-27."
    },
    {
      "type": "paragraph",
      "id": "c7bac480b2766994",
      "text": "[[Transcriber Notes 2023-08-27]]"
    },
    {
      "type": "pagefold",
      "text": "09:10:08",
      "id": "898073634395302144"
    },
    {
      "type": "markdown",
      "text": "09:10:08 From Jeff Miller\nRhode Gear clip-on panniers\nfrom a premillennial bike\n",
      "id": "66744499729950466048"
    },
    {
      "type": "markdown",
      "text": "09:10:50 From Marc Pierson\nBack into OPCloud: http://marc.relocalizecreativity.net/view/creativity-equipping\n",
      "id": "27842352790761304064"
    },
    {
      "type": "markdown",
      "text": "09:11:28 From Jeff Miller\noh nice!\nclickable\n<3 - we're showing the \"moldable development\" aspects of Federated Wiki + scripts\nOPM methodology basis\n",
      "id": "4742886040718130176"
    },
    {
      "type": "markdown",
      "text": "09:12:54 From Jeff Miller\nhttps://esml.technion.ac.il/opm/introduction-to-opm/\nhttps://esml.technion.ac.il/opm/opcloud/\n",
      "id": "59858890106163027968"
    },
    {
      "type": "markdown",
      "text": "09:14:03 From Jeff Miller\n(Dov Dori's work linked above)\n",
      "id": "68979256129797775360"
    },
    {
      "type": "markdown",
      "text": "09:15:05 From Jeff Miller\n(a mention of Burley bicycle trailers for dogs)\n",
      "id": "69534598564279640064"
    },
    {
      "type": "markdown",
      "text": "09:16:28 From Jeff Miller\nBrompton bikes are pretty clever. I got to try my friend Megan's when I was visiting her in Davis.\nquick fold once you learn the trick\n",
      "id": "34690113609053831168"
    },
    {
      "type": "markdown",
      "text": "09:18:17 From Jeff Miller\n(Marc discusses the OPCloud style diagram for Creativity Equipping)\n",
      "id": "55994026984874434560"
    },
    {
      "type": "markdown",
      "text": "09:19:45 From Jeff Miller\n(transforming between OPCloud model of equipping creative community work and Kerry's system dynamics diagrams as a way of investigating these relationships)\n",
      "id": "80815907996548874240"
    },
    {
      "type": "markdown",
      "text": "09:21:30 From Jeff Miller\n(in OPCloud it's easier to see what objects are; that some things are informational objects; other things are processes, etc.)\n(Jeff to Marc about advantages of a visual cue to system diagrams and their components)\n",
      "id": "69156224047976292352"
    },
    {
      "type": "markdown",
      "text": "09:22:39 From Jeff Miller\n(Marc describes that the OPCloud diagram and the OP Language have close two-way correspondences)\n",
      "id": "66417448883842203648"
    },
    {
      "type": "markdown",
      "text": "09:23:52 From Jeff Miller\n\"Who stood up; who drew the diagram on the whiteboard; what was at the center of the diagram.\" - Ward's technique for understanding a team's point of focus.\n\"Any advice I have has to touch the thing at the center of the team's diagram, or they won't regard it as important.\"\n(relevant, etc.)\n",
      "id": "36949472186611867648"
    },
    {
      "type": "markdown",
      "text": "09:25:13 From Jeff Miller\n(Ward on Kerry: Kerry will explore _around_ things which a team or group cares about, and bring up its relevance as governing or creating the context for what the're working on)\n(Marc: Kerry's key question: what will be different when you're successful?)\n",
      "id": "3214778775155224576"
    },
    {
      "type": "markdown",
      "text": "09:26:19 From Jeff Miller\nWard's revealing question: \"What did you learn that you didn't expect to learn?\" -> Ward: \"Thank you for sharing your most valuable pattern.\"\nMetaphorum attendees, to Marc and Kerry: \"We learned things that we would not learn using our own methods.\"\n",
      "id": "54203218019276898304"
    },
    {
      "type": "markdown",
      "text": "09:27:50 From Jeff Miller\n(discussion of Robert Best helping Thompson Morrison to scale up FedWiki installations as a tool for collaboration; to make operations usefully scalable)\n",
      "id": "18795102675660513280"
    },
    {
      "type": "markdown",
      "text": "09:28:05 From Robert Best\nYep! Sorry I'm here listening, but currently trying to help my twins get down for a nap.\n\nWas fun and exciting to start this project with Thompson.\n",
      "id": "15804649734383790080"
    },
    {
      "type": "markdown",
      "text": "09:28:15 From Jeff Miller\nnp! sleep is important!\n\"We try not to do too much to FedWiki that scrambles what Thompson & Co. are doing.\"\n",
      "id": "46732818130181128192"
    },
    {
      "type": "markdown",
      "text": "09:29:52 From Jeff Miller\nWard reflects on the current investigation of rewriting FedWiki's front end, starting with CSS and also using Observable/D3's front end.\nMarc appreciates that Eric's work with the Observable libraries does not depend on Observable's servers, just the libraries.\n",
      "id": "93583767746591719424"
    },
    {
      "type": "markdown",
      "text": "09:31:58 From Jeff Miller\nJeff appreciates that the Observable front-end API is well-factored and easy to re-use.\n",
      "id": "41282074001734025216"
    },
    {
      "type": "markdown",
      "text": "09:34:11 From Jeff Miller\nWard observes that Observable does better when you avoid using Javascript with side effects. Mike Bostock's model of a DAG of things to re-compute (the Observable Notebook model) depends on keeping dependencies from one page to another, one item to another, consistent, based on named references.\n",
      "id": "91039976958301339648"
    },
    {
      "type": "pagefold",
      "text": "09:36:47",
      "id": "88337049648485957632"
    },
    {
      "type": "markdown",
      "text": "09:36:47 From Jeff Miller\nWard notes that FedWiki uses a model which does not explicitly have these dependencies as Bostock's \"Observable\" model. An interaction model where moving pages _sets up_ the shape of the dependency graph, and then it can be computed on request, perhaps?\nWard describes that the FedWiki's evolution of features and affordances was project-driven: how can we make it do _this?_ - so what we have in hand is leftovers from a discovery process.\n",
      "id": "93086816278797139968"
    },
    {
      "type": "pagefold",
      "text": "09:39:40",
      "id": "98558911971256270848"
    },
    {
      "type": "markdown",
      "text": "09:39:40 From Jeff Miller\nWard suggests: if a plugin provides or sources data in the style of a Map, they should provide consistent views; however, a Map might want to consume many sorts of data (regions?) - does our informal computation model have limitations? Or does it make adaptations to new use cases easier? This is uncharted territory to explore, and a set of meaningful projects would be the best way I could think of to explore this territory.\n",
      "id": "67340786637444857856"
    },
    {
      "type": "markdown",
      "text": "09:41:24 From Jeff Miller\nLearning the streets as his personal, internal map and name-based records (a page being a section of some street which Nick knows)\n",
      "id": "46368947589878849536"
    },
    {
      "type": "markdown",
      "text": "09:42:04 From Paul Rodwell\nNiemeyer Niemeir\n",
      "id": "21103357042321125376"
    },
    {
      "type": "markdown",
      "text": "09:42:11 From Jeff Miller\nty!\n",
      "id": "785448903615026944"
    },
    {
      "type": "markdown",
      "text": "09:42:24 From Paul Rodwell\nhttp://nick.dojo.fed.wiki/streets-of-amsterdam.html\n",
      "id": "89941580585303425024"
    },
    {
      "type": "markdown",
      "text": "09:42:27 From Jeff Miller\nWard asks: what would a map marker survey look like, and how could we use it to look at Nick's wiki, and what might we find on other wikis?\n(re, per Paul): Nick Niemeir's \"Streets of Amsterdam\" wiki project; local conventions for directions from one place to another?\n",
      "id": "13333535960723986432"
    },
    {
      "type": "markdown",
      "text": "09:44:33 From Jeff Miller\n(Ward demonstrates a Map Marker Survey / Map Marker Survey Probe)\n",
      "id": "85755602863291154432"
    },
    {
      "type": "pagefold",
      "text": "09:48:12",
      "id": "79388128758693806080"
    },
    {
      "type": "markdown",
      "text": "09:48:12 From Jeff Miller\nhttp://found.ward.bay.wiki.org/view/welcome-visitors/code.fed.wiki/map-marker-survey-probe\n(apologies for the noise)\n",
      "id": "18067453368485619712"
    },
    {
      "type": "pagefold",
      "text": "09:50:59",
      "id": "30140882516453949440"
    },
    {
      "type": "markdown",
      "text": "09:50:59 From Paul Rodwell\nOnly the one marker on my forage site, and that is on a page about a podcast üôÅ\n",
      "id": "84320930442053926912"
    },
    {
      "type": "markdown",
      "text": "09:51:00 From Jeff Miller\n\"We show herehow the process of survey probescommon to Federated Wikican apply to many thingsbecause we keep the pattern simple.\"\n(my paraphrase of the implications)\nhmm my markers are mostly PAGE now\n",
      "id": "5946368535702295552"
    },
    {
      "type": "markdown",
      "text": "09:52:18 From Jeff Miller\nThe survey probe uses static markers fetched from the Map items, rather than ones created via querying using PAGE and LINEUP.\n(Marc reflects on technologies which have a pace which are faster than human accommodation - that they are attractive; but FedWiki, by contrast, is a technology which invites conversational interaction)\n",
      "id": "2007167416083499520"
    },
    {
      "type": "markdown",
      "text": "09:53:48 From Jeff Miller\n(Jeff reflects that his strong attraction to social proof kept him hanging around long enough to see how the pieces fit together)\n\"But I couldn't have figured it out by myself.\"\n[I am getting \"bicycle for the mind\" vibes here]\nlike WikiBase didn't count Berkeley DB and Perl lines of code\n",
      "id": "47567674077708632064"
    },
    {
      "type": "markdown",
      "text": "09:55:03 From Jeff Miller\nHow big is FedWiki in terms of lines of code authored as part of the project?\n(Ward and Paul discuss lines of code; Marc points out that too much code is inelegant. Clumsy?)\n",
      "id": "5131057179171039232"
    },
    {
      "type": "markdown",
      "text": "09:56:04 From Jeff Miller\nlines of code ~ budgetary importance ?\n",
      "id": "70471416790326820864"
    },
    {
      "type": "markdown",
      "text": "09:57:24 From Jeff Miller\ncrude and elegant? when are these two aligned? when are these two in opposition? (to Marc's looking for antonyms for \"elegant\")\n",
      "id": "92004625818440466432"
    },
    {
      "type": "markdown",
      "text": "09:58:29 From Paul Rodwell\nWard describes monkey patching the pascal compiler\n",
      "id": "55836668691850223616"
    },
    {
      "type": "markdown",
      "text": "09:59:06 From Jeff Miller\n\"the most elegant abuse of computing that [the grad student] had ever seen -- you've done the wrong thing so carefully that I have to admire it.\"\n(I did a monkey patch to the Disney web registration protocol which strikes me as the same sort of hack: \"cut here; cut here; everything else stays the same.\"\n)\n",
      "id": "22753579641775767552"
    },
    {
      "type": "pagefold",
      "text": "10:01:42",
      "id": "94401402249030959104"
    },
    {
      "type": "markdown",
      "text": "10:01:42 From Jeff Miller\n(Ward describes CDC/Scope and an unofficial alternative OS, CDC/Mace, which offered hackable affordances)\n(an aside on Seymour Cray disliking virtual memory)\n",
      "id": "10715993689830572032"
    },
    {
      "type": "markdown",
      "text": "10:03:18 From Jeff Miller\n(Paul describes the careful orchestration of working input tapes needed when doing a sequence of jobs which required reading overlays)\n",
      "id": "27045127168020000768"
    },
    {
      "type": "markdown",
      "text": "10:04:34 From Jeff Miller\nHi Eric! we have been talking about map marker survey probes, reflecting on well-factored data interaction models, and bicycles.\nAlso Dov Dori's OPM.\n",
      "id": "92908748881483120640"
    },
    {
      "type": "markdown",
      "text": "10:07:04 From Jeff Miller\n[more tea]\n",
      "id": "95563076187214790656"
    },
    {
      "type": "pagefold",
      "text": "10:15:56",
      "id": "28947691189249257472"
    },
    {
      "type": "markdown",
      "text": "10:15:56 From Jeff Miller\n(Ward and Marc discuss ways in which you can lose sight of curiosity, by being insulated from consequences by early wealth; or by being dedicated to a unified vision which you're convinced of)\n",
      "id": "4449269502070418944"
    },
    {
      "type": "pagefold",
      "text": "10:20:03",
      "id": "44517976247654785024"
    },
    {
      "type": "markdown",
      "text": "10:20:03 From Jeff Miller\n(Discussion of the broken tramway in Pakistan, and the reasons that they exist -- that they make it practical to go to school by cutting hours of walking out)\n",
      "id": "66642653514860265472"
    },
    {
      "type": "pagefold",
      "text": "10:23:08",
      "id": "73973468413567287296"
    },
    {
      "type": "markdown",
      "text": "10:23:08 From Jeff Miller\n(Discussion of Swiss expedients for using mountain terrain and military preparedness; digging tunnels through mountains; mountain runways)\n[Switzerland's mountain adaptations figure in as part of the plot of The Ministry for the Future]\n",
      "id": "4138312542933541888"
    },
    {
      "type": "markdown",
      "text": "10:25:16 From Paul Rodwell\nhttps://en.wikipedia.org/wiki/Aircraft_cavern\n",
      "id": "7734301281098476544"
    },
    {
      "type": "markdown",
      "text": "10:26:17 From Jeff Miller\nEric demonstrates the Observable front-end\nfor Federated Wiki\nstarting with a rendered site map as Reference items\nall the page links are now rendered using an HTML sanitizer/sanitiser.\n",
      "id": "22270459917511397376"
    },
    {
      "type": "markdown",
      "text": "10:28:10 From Jeff Miller\nThe filter around HTML can allow user-generated content, while scrubbing out more obvious or hazardous script references in HTML or SVG, using DOMPurify as a standard library.\nObservable's libraries didn't include the DOMPurify style filtering; Eric's updated prototype now includes DOMPurify for filtering potentially hazardous federated content.\n",
      "id": "42555385162811498496"
    },
    {
      "type": "markdown",
      "text": "10:30:22 From Jeff Miller\nThe standard FedWiki client DOES include a DOMPurify pass, so this is a security parity move of the prototype toward readiness to share as a building block for more general work.\n",
      "id": "75108264355031711744"
    },
    {
      "type": "markdown",
      "text": "10:31:51 From Jeff Miller\n\"a function linked() which is part of Observable's API needs; the internal function linked(text) which parses [] and [[]] wikilinks here in pwa/wiki.js\"\n",
      "id": "38666490225017290752"
    },
    {
      "type": "markdown",
      "text": "10:34:14 From Jeff Miller\n\"I do some preprocessing with linked(text), where [] is a plain link, and [[]] is a link decorated with the 'internal' CSS class; and post-processing with annotateLinks(), where a non-internal link dispatches to a new window/tab and an internal link does not.\"\n\"Internal links will have a click handle.\"\nadding CSS classes and click handlers are examples of DOM enrichment\n",
      "id": "1151741314948295808"
    },
    {
      "type": "markdown",
      "text": "10:35:31 From Jeff Miller\n<text ...> is an example in SVGs of elements which might be enriched with click handlers in an SVG diagram.\n[aside from Jeff: I was happily surprised that the SVG DOM would support adding click handlers; this is the premise of Single Page Wumpus, SVG+JS]\n",
      "id": "33462703179128573952"
    },
    {
      "type": "markdown",
      "text": "10:37:40 From Jeff Miller\nObservable's form of connecting ... why are the expected forms asynchronous? the answer is that libraries can by lazy-loaded only when the functions are actually needed.\n",
      "id": "14658077028509685760"
    },
    {
      "type": "markdown",
      "text": "10:39:28 From Jeff Miller\n\"async html()\" definition uses DOMPurify for Eric's FedWiki front end, and that reference to DOMPurify is loaded only if / when it's needed.\"\n",
      "id": "82391260496262299648"
    },
    {
      "type": "markdown",
      "text": "10:40:40 From Paul Rodwell\nA link to the code that Eric is walking through - https://github.com/dobbs/wiki-spike-css/blob/main/pwa/wiki.js\n",
      "id": "79489861686611558400"
    },
    {
      "type": "markdown",
      "text": "10:40:54 From Jeff Miller\nEric shows how to capture a reference to the original html library from Observable, using \"origHtml = await stdlib.html()\"\n",
      "id": "83525567548310650880"
    },
    {
      "type": "markdown",
      "text": "10:42:37 From Jeff Miller\na sanitizing html() renderer:sanitize ( Observable's html() ) -> DOM element\npost-processing cleanup after Observable's rendering\nMarc asks: \"Would it make more sense to sanitize the HTML before having Observable render it?\"\n",
      "id": "83752627066983170048"
    },
    {
      "type": "markdown",
      "text": "10:43:42 From Jeff Miller\n(discussion of where it makes sense to put the DOMPurify step)\n",
      "id": "30434128264003301376"
    },
    {
      "type": "markdown",
      "text": "10:45:00 From Jeff Miller\n\"all of these libraries are trying to decide whether to treat <> as HTML for the browser, or render HTML as escaped visible text, &lt; and &gt;\"\n",
      "id": "2121958943626467328"
    },
    {
      "type": "markdown",
      "text": "10:46:01 From Jeff Miller\nPutting the DOMPurify guard as the last step before joining the browser's context is a way of making sure Observable didn't leave anything;\nbut Marc asks if it makes sense to pre-purify anything before having Observable do its standard rendering step.\n",
      "id": "92843854130254675968"
    },
    {
      "type": "markdown",
      "text": "10:47:30 From Jeff Miller\n(discussion of the machinery inside Observable stdlib.html() and how it's constructing DOM objects; are there places that things might be introduced there?)\n(a hacker's eye view of Observable is beyond what Eric is doing; however, DOMPurify is better than \"here's a random web developer's prototype)\n",
      "id": "69889247937993236480"
    },
    {
      "type": "markdown",
      "text": "10:49:11 From Jeff Miller\n(discussion of general considerations of security: is a metaphor for an operating room and control of infection, is that useful for considering rendering pipelines?)\n",
      "id": "87505439707435925504"
    },
    {
      "type": "markdown",
      "text": "10:50:40 From Jeff Miller\n[usefulness of running system metaphors, and their suitability to the moves and choices available to injecting exploitation into the processing pipeline, and to defending against exploitation]\nWard observes that the Observable code was written and factored in a way that external observers could review and appreciate it, and understand the internal considerations.\n",
      "id": "12824410199979663360"
    },
    {
      "type": "markdown",
      "text": "10:52:12 From Jeff Miller\n...and that Eric's work in re-use has helped us gain that appreciation in a way that we can share it.\n",
      "id": "43669353850934747136"
    },
    {
      "type": "markdown",
      "text": "10:54:08 From Jeff Miller\nEric observes that some of the basic concepts (data structures and compilers) which were less interesting earlier in his learning; now he's developing appreciations for how to build things from scratch , after having spent much time on the boundaries of systems, getting them to work.\ntoday's work with DOMPurify has the same feel for Eric's understanding of integrating systems as translating among tree-structured information\n",
      "id": "80363102354152505344"
    },
    {
      "type": "markdown",
      "text": "10:55:06 From Marc Pierson\nhttps://www.google.com/search?sca_esv=560520228&rlz=1C5CHFA_enUS563US563&sxsrf=AB5stBjMddB1ZxgllVuRZXZ5pJhfKyM4_g:1693158885433&q=bricolage&si=ACFMAn8hzZSJQsgXIYlkGc-z1vmp5Y27sxEfX9j5XE95xZLKj7yCodsWT5zLc-EVe8zTdwjO0Us2CplA76s1EANJMd5ls4T-LA%3D%3D&expnd=1&biw=1728&bih=827&dpr=2.2\n",
      "id": "21818985128101863424"
    },
    {
      "type": "markdown",
      "text": "10:55:21 From Jeff Miller\n\"bricolage\" - working from ready-made parts\n",
      "id": "28857050015546449920"
    },
    {
      "type": "markdown",
      "text": "10:57:14 From Jeff Miller\nhttps://martinfowler.com/bliki/PostModernProgramming.html as a modern software account of bricolage\nhttps://en.wikipedia.org/wiki/The_Big_Front_Yard (as a big barn with the universe of code in it)\n",
      "id": "43763877139462193152"
    },
    {
      "type": "markdown",
      "text": "10:58:07 From Paul Rodwell\nEtymology - French, one who putters about, from bricoler - also https://en.wiktionary.org/wiki/bricoleur\n",
      "id": "98470859024648765440"
    },
    {
      "type": "markdown",
      "text": "10:58:15 From Ward Cunningham\nOn a lazy afternoon, two bored brothers keep themselves busy by building and flying an airplane. https://www.amazon.com/Bored-Nothing-Do-Peter-Spier/dp/0385241046\n",
      "id": "64936119028603797504"
    },
    {
      "type": "markdown",
      "text": "10:59:19 From Jeff Miller\nSimak's Big Front Yard centers on a tinkerer who ends up as a knowledge trader.\n",
      "id": "58279603580695371776"
    },
    {
      "type": "markdown",
      "text": "11:00:26 From Jeff Miller\n(discussion of easy and hard things in UI prototyping and work)\nWard describes that in FedWiki, editing a paragraph at a time helps narrow the challenge of editing in new UIs, in new contexts.\n",
      "id": "48466572209226686464"
    },
    {
      "type": "markdown",
      "text": "11:01:38 From Jeff Miller\n\"A mediocre job at the editor will take you a long way.\"\n",
      "id": "40218050357218590720"
    },
    {
      "type": "markdown",
      "text": "11:03:01 From Robert Best\nNo double click to edit, long press context menu?\n\nAlways open and editable to rendering paragraphs independently in one big document like Obsidian?\n",
      "id": "21724790149759033344"
    },
    {
      "type": "markdown",
      "text": "11:03:07 From Jeff Miller\nPeter (PeteDaGuru) reflects on having the little paragraph editor being a tiny snap-in for the I/O context (keyboard and screen; mobile device with touchscreen; VR glasses etc.) may allow FedWiki and other information systems to be re-used near whole.\nLong press context menu sounds right? Or long-press for editor plus some widgets?\n",
      "id": "40926269489285414912"
    },
    {
      "type": "markdown",
      "text": "11:03:57 From Robert Best\nGo back to edit after\n",
      "id": "76331548448642498560"
    },
    {
      "type": "markdown",
      "text": "11:05:06 From Eric Dobbs\nReminding me of this striking story about programming by voice, especially programming a punctuation heavy language like Perl. https://thenewstack.io/perl-programmer-pioneers-coding-by-voice/\n",
      "id": "55157605787356381184"
    },
    {
      "type": "markdown",
      "text": "11:05:14 From Jeff Miller\n(Pete reflects on various input modalities in the current context; special input modalities for court reporters, for disability affordances; for AI-based prompting and fill-in)\n",
      "id": "41755074664333672448"
    },
    {
      "type": "markdown",
      "text": "11:06:59 From Jeff Miller\nMarc explores voice typing with Microsoft Word.\n\"just say all caps AND IT'S ALL CAPS\"\n",
      "id": "66942945388375539712"
    },
    {
      "type": "markdown",
      "text": "11:08:18 From Jeff Miller\n(discussion of keeping basic platform and libraries open-source, not dependent on proprietary services with lock-in)\n(motivational case for FedWiki of browing and editing with mobile devices)\n",
      "id": "79159703612686729216"
    },
    {
      "type": "markdown",
      "text": "11:09:14 From Marc Pierson\nAll caps command works one word at a time.\n",
      "id": "40575912007178035200"
    },
    {
      "type": "markdown",
      "text": "11:09:33 From Jeff Miller\naha!\n",
      "id": "83075051955630342144"
    },
    {
      "type": "markdown",
      "text": "11:10:17 From Paul Rodwell\nhttps://www.siriuserguide.com/siri-dictation-guide\n",
      "id": "76118000831281987584"
    },
    {
      "type": "markdown",
      "text": "11:10:19 From Jeff Miller\nty for clarification: \"all caps marc bicycle\" -> \"MARC bicycle\"\n",
      "id": "46554638091092828160"
    },
    {
      "type": "markdown",
      "text": "11:11:59 From Jeff Miller\nEric's demo continues; the \"plugins\" registry by plugin type has a different renderer, starting with an \"unknown\" plugin handler using the enriched \"html\" handler defined to include the DOMPurify wrapper around the Observable html renderer.\n",
      "id": "87770667944619687936"
    },
    {
      "type": "markdown",
      "text": "11:13:31 From Jeff Miller\nand the rendering logic says, \"open an Observable Inspector on the DOM constructed using the html() handler, marking it with \"Unknown type {$item.type}\"\n",
      "id": "13899069127743090688"
    },
    {
      "type": "pagefold",
      "text": "11:16:05",
      "id": "51381832814425784320"
    },
    {
      "type": "markdown",
      "text": "11:16:05 From Jeff Miller\n\"A 'paragraph' plugin depends on 'html', 'linked', and 'annotateLinks' as function names; then the plugin rendering function says: \"annotateLinks on the result of a sanitized HTML paragraph, on the item text processed with \"linked\".\n",
      "id": "92127614825340534784"
    },
    {
      "type": "markdown",
      "text": "11:17:06 From Jeff Miller\n\"I did a perfect Decorator pattern, so none of the Plugin code needed to change; injecting the dependencies as named functions was how I added the needed function dependencies for the plugin code.\"\n",
      "id": "96582057313657470976"
    },
    {
      "type": "markdown",
      "text": "11:18:44 From Jeff Miller\nMarc asks if the Observable client editor in an iPhone / mobile context will look the same as in the original FedWiki?\nEric: Yes, it will be the same two views, rendered as an item; rendered as editable source. The editable source doesn't have any sanitization step.\n",
      "id": "63899120557334577152"
    },
    {
      "type": "markdown",
      "text": "11:19:56 From Jeff Miller\nWhen the page gets loaded, it gets processed from the same wiki source on disk that the standard FedWiki client uses.\n<script>alert(\"hi marc!\")</script>\nas something that a sanitization pipeline would remove\n",
      "id": "24552907055593197568"
    },
    {
      "type": "markdown",
      "text": "11:21:22 From Jeff Miller\n\"no refactoring browser needed!\"\n",
      "id": "36136090273355382784"
    },
    {
      "type": "markdown",
      "text": "11:23:48 From Paul Rodwell\nI need to run, unfortunately.\n",
      "id": "25432176150875328512"
    },
    {
      "type": "markdown",
      "text": "11:25:19 From Jeff Miller\nEric demonstrates the results of a Clipboard event getting dropped into an inspector, and there is now a drop handler (\"drop inspector\" and \"paste inspector\") which allow events to be seen and inspected for their internal members and structure.\n",
      "id": "94114254486036398080"
    },
    {
      "type": "markdown",
      "text": "11:26:30 From Jeff Miller\nWard observes that the event inspection is something that we want to retain.\nIt supports vernacular programming.\n",
      "id": "23950410498387787776"
    },
    {
      "type": "markdown",
      "text": "11:28:07 From Jeff Miller\nJeff says: \"Who else is getting Smalltalk vibes?\" (from the Observable inspector making events visible and understandable in the context of regular data handling)\n",
      "id": "43585993109288378368"
    },
    {
      "type": "markdown",
      "text": "11:29:20 From Jeff Miller\nEric observes that the Observable Inspector is a remarkably simple mechanism, which wraps the input data in a <div> and possibly uses the \"inspect\" library to allow the user to navigate the details.\n(Oh wow -- also a way of inspecting your platforms and what is in the events)\n",
      "id": "27667479158186479616"
    },
    {
      "type": "markdown",
      "text": "11:30:40 From Jeff Miller\nWard says: \"We need to build the machinery that understands what you're intending by moving things around on the lineup, or on a page; then we'll use Observable to get a meaningful observation, AND that meaningless behavior will be exposed immediately in an inspector.\"\n(a meaningful representation, AND...)\n",
      "id": "69833855944661319680"
    },
    {
      "type": "markdown",
      "text": "11:31:47 From Jeff Miller\nWe have an environment that we have an opportunity to control [the programming environment] in ways that [support what we want to do for user programming and collaboration].\n",
      "id": "79795848612240310272"
    },
    {
      "type": "markdown",
      "text": "11:33:01 From Jeff Miller\nMarc recalls a comparison; Bostock is working on visualizations and data flow; Ward is working on colllaboration and history and connection of textual data and other data; Eric has connected these worlds.\n",
      "id": "21266325978741641216"
    },
    {
      "type": "markdown",
      "text": "11:34:05 From Jeff Miller\nEric says: \"One of the things that is in reach for me, is to take the SoFi doagram notebook which I created for myself; that I can name the top-level SoFi diagram \"panel\", and then render that as a page adjecent to a wiki lineup.\"\n",
      "id": "48987537507234488320"
    },
    {
      "type": "markdown",
      "text": "11:34:41 From Marc Pierson\nhttps://metapho.relocalizecreativity.net/view/welcome-visitors/view/index/view/sofi-vsm-sketch\n",
      "id": "50871233900146802688"
    },
    {
      "type": "markdown",
      "text": "11:34:54 From Jeff Miller\n\"I'm pausing that to make sure that how a special page is invoked, an embedded Observable notebook as a wiki page lineup, in a meaningful context as part of wiki. What's the COLLABORATIVE story around that move?\"\n",
      "id": "52306233811477864448"
    },
    {
      "type": "markdown",
      "text": "11:35:40 From Marc Pierson\nA programmer in this group will lean important things from a study of OPM that can become a third leg on this stool.\n",
      "id": "55644649433313378304"
    },
    {
      "type": "markdown",
      "text": "11:35:54 From Jeff Miller\nWard says: \"What does simple graphical manipulation do to, do _for_, collaborative work? Can we make small tweaks to the graphical representation which can be rolled up across pages? \" -> a site survey in Observable page form?\n",
      "id": "95654277956418093056"
    },
    {
      "type": "markdown",
      "text": "11:36:19 From Marc Pierson\nhttp://marc.relocalizecreativity.net/view/welcome-visitors/view/creativity-equipping/view/search-for-opm#\nI need to understand how to move from community CLDs into OPM models? All in fedwiki\n",
      "id": "92934855780786929664"
    },
    {
      "type": "markdown",
      "text": "11:37:28 From Jeff Miller\nMarc's use case: \"I want to be able to write a wiki with every leader's opinion on the SoFi relationshps, with a page on each\" driving Eric's DOM enrichment of SVG, and also prompting gathering data using FedWIki site surveys ... maybe there will be a family of pages? (a SoFi, a tetrahedron, a causal loop diagram?)\n",
      "id": "64844221515077427200"
    },
    {
      "type": "markdown",
      "text": "11:37:51 From Marc Pierson\nhttp://marc.relocalizecreativity.net/view/welcome-visitors/view/models-for-seeing-systems\n",
      "id": "46909714247462682624"
    },
    {
      "type": "markdown",
      "text": "11:37:55 From Jeff Miller\nand the result might be expressed as an embedded Observable page as a panel\nEric describes inspiration from Miller Columns as used in Smalltalk, in Tudor Girba's Glamorous Toolkit; we have a Javascript version that approaches GToolkit.\n",
      "id": "34203957603251531776"
    },
    {
      "type": "markdown",
      "text": "11:39:14 From Jeff Miller\nWard observes: a decade into an inquiry is when you start seeing distinctive results.\n",
      "id": "88782823051785994240"
    },
    {
      "type": "markdown",
      "text": "11:40:33 From Peter\nWhack on the side of my head about why 10y seems to be a timeframe for letting things simmer:\n\nLindy's Law - The older something is, the more conditions it must have been fit for, thus, the broader range of possible futures it is fit for, thus, the longer it is likely to survive (https://luca-dellanna.com/lindy/  Albert Goldman 1964, AntiFragile Talen 2012) : https://en.wikipedia.org/wiki/Lindy_effect\n",
      "id": "61112144555717337088"
    },
    {
      "type": "markdown",
      "text": "11:40:55 From Jeff Miller\n<3 ty Peter\ntime-tested and adapted\n",
      "id": "71736568865476902912"
    },
    {
      "type": "pagefold",
      "text": "11:46:50",
      "id": "35431313480153247744"
    },
    {
      "type": "markdown",
      "text": "11:46:50 From Jeff Miller\ntrying out the DOMPurify and seeing a <script> tag go poof!\nIs this appropriately sanitized?<script>alert(\"hi!\")</alert>\n(in an html item)\n",
      "id": "32914355411846053888"
    },
    {
      "type": "pagefold",
      "text": "11:51:03",
      "id": "97844395695267184640"
    },
    {
      "type": "markdown",
      "text": "11:51:03 From Jeff Miller\n\"Where is the alignment of other projects and libraries with what FedWiki needs?\" Ward: \"Paul is the best for finding those, and the change from Caja to DOMPurify was an example of one community going idle, and the other being vital.\"\ncytochrome-c oxidase is fit for conditions over a good long time\n",
      "id": "89238164001104871424"
    },
    {
      "type": "markdown",
      "text": "11:53:31 From Jeff Miller\nEric considers that the viability needs of telecom systems (like British Telecom; like Erlang/BEAM in Ericsson) to be good in shaping what choices are good long-term ones.\n",
      "id": "70861795478179160064"
    },
    {
      "type": "markdown",
      "text": "11:54:48 From Jeff Miller\nMechanical Orchard\n",
      "id": "56521390470425305088"
    },
    {
      "type": "markdown",
      "text": "11:57:14 From Jeff Miller\nhttps://www.mechanical-orchard.com/\n",
      "id": "10810587676949200896"
    },
    {
      "type": "markdown",
      "text": "11:57:22 From Peter\nMechanical Orchard origins with Pivotal (fixing Twitter Whale Fails using Ruby): https://www.mechanical-orchard.com/post/the-seeds-of-mechanical-orchard\n",
      "id": "40716595374531682304"
    },
    {
      "type": "markdown",
      "text": "11:57:58 From Jeff Miller\n(examples of Erlang, BEAM, etc.)\n(discussion of the history of Rob Mee's career in technologies, from Java/XP to Ruby/Rails, Cloud Foundry, Pivotal Labs, now Mechanical Orchard)\n",
      "id": "12275298687033896960"
    },
    {
      "type": "pagefold",
      "text": "12:06:12",
      "id": "38971802359586996224"
    },
    {
      "type": "markdown",
      "text": "12:06:12 From Jeff Miller\n\"And here we are.\" - my catchphrase for the last several years.\nI worked for Eric Allman at Sendmail dot com!\n(not very long, between layoffs in the dot-com crash era)\n",
      "id": "57790199553900404736"
    },
    {
      "type": "pagefold",
      "text": "12:09:49",
      "id": "46691803204775460864"
    },
    {
      "type": "markdown",
      "text": "12:09:49 From Jeff Miller\nDigital Ocean has been pretty solid for me (though I should be a better operator of my wiki farm\"\n",
      "id": "21269011655360425984"
    },
    {
      "type": "pagefold",
      "text": "12:14:32",
      "id": "59471702367647203328"
    },
    {
      "type": "markdown",
      "text": "12:14:32 From Jeff Miller\nStephen Wolfram: \"I can help you with LLMs' hopelessness at math and conceptual stuff: Wolfram Alpha!\"\n\n",
      "id": "36649431033641299968"
    }
  ],
  "journal": [
    {
      "type": "create",
      "date": 1693164846354,
      "item": {
        "title": "Typescript 2023-08-27",
        "story": [
          {
            "type": "paragraph",
            "text": "Text extraction. See [[Typescript Archive]]",
            "id": "54187282310724648960"
          },
          {
            "type": "pagefold",
            "text": "09:10:08",
            "id": "898073634395302144"
          },
          {
            "type": "markdown",
            "text": "09:10:08 From Jeff Miller\nRhode Gear clip-on panniers\nfrom a premillennial bike\n",
            "id": "66744499729950466048"
          },
          {
            "type": "markdown",
            "text": "09:10:50 From Marc Pierson\nBack into OPCloud: http://marc.relocalizecreativity.net/view/creativity-equipping\n",
            "id": "27842352790761304064"
          },
          {
            "type": "markdown",
            "text": "09:11:28 From Jeff Miller\noh nice!\nclickable\n<3 - we're showing the \"moldable development\" aspects of Federated Wiki + scripts\nOPM methodology basis\n",
            "id": "4742886040718130176"
          },
          {
            "type": "markdown",
            "text": "09:12:54 From Jeff Miller\nhttps://esml.technion.ac.il/opm/introduction-to-opm/\nhttps://esml.technion.ac.il/opm/opcloud/\n",
            "id": "59858890106163027968"
          },
          {
            "type": "markdown",
            "text": "09:14:03 From Jeff Miller\n(Dov Dori's work linked above)\n",
            "id": "68979256129797775360"
          },
          {
            "type": "markdown",
            "text": "09:15:05 From Jeff Miller\n(a mention of Burley bicycle trailers for dogs)\n",
            "id": "69534598564279640064"
          },
          {
            "type": "markdown",
            "text": "09:16:28 From Jeff Miller\nBrompton bikes are pretty clever. I got to try my friend Megan's when I was visiting her in Davis.\nquick fold once you learn the trick\n",
            "id": "34690113609053831168"
          },
          {
            "type": "markdown",
            "text": "09:18:17 From Jeff Miller\n(Marc discusses the OPCloud style diagram for Creativity Equipping)\n",
            "id": "55994026984874434560"
          },
          {
            "type": "markdown",
            "text": "09:19:45 From Jeff Miller\n(transforming between OPCloud model of equipping creative community work and Kerry's system dynamics diagrams as a way of investigating these relationships)\n",
            "id": "80815907996548874240"
          },
          {
            "type": "markdown",
            "text": "09:21:30 From Jeff Miller\n(in OPCloud it's easier to see what objects are; that some things are informational objects; other things are processes, etc.)\n(Jeff to Marc about advantages of a visual cue to system diagrams and their components)\n",
            "id": "69156224047976292352"
          },
          {
            "type": "markdown",
            "text": "09:22:39 From Jeff Miller\n(Marc describes that the OPCloud diagram and the OP Language have close two-way correspondences)\n",
            "id": "66417448883842203648"
          },
          {
            "type": "markdown",
            "text": "09:23:52 From Jeff Miller\n\"Who stood up; who drew the diagram on the whiteboard; what was at the center of the diagram.\" - Ward's technique for understanding a team's point of focus.\n\"Any advice I have has to touch the thing at the center of the team's diagram, or they won't regard it as important.\"\n(relevant, etc.)\n",
            "id": "36949472186611867648"
          },
          {
            "type": "markdown",
            "text": "09:25:13 From Jeff Miller\n(Ward on Kerry: Kerry will explore _around_ things which a team or group cares about, and bring up its relevance as governing or creating the context for what the're working on)\n(Marc: Kerry's key question: what will be different when you're successful?)\n",
            "id": "3214778775155224576"
          },
          {
            "type": "markdown",
            "text": "09:26:19 From Jeff Miller\nWard's revealing question: \"What did you learn that you didn't expect to learn?\" -> Ward: \"Thank you for sharing your most valuable pattern.\"\nMetaphorum attendees, to Marc and Kerry: \"We learned things that we would not learn using our own methods.\"\n",
            "id": "54203218019276898304"
          },
          {
            "type": "markdown",
            "text": "09:27:50 From Jeff Miller\n(discussion of Robert Best helping Thompson Morrison to scale up FedWiki installations as a tool for collaboration; to make operations usefully scalable)\n",
            "id": "18795102675660513280"
          },
          {
            "type": "markdown",
            "text": "09:28:05 From Robert Best\nYep! Sorry I'm here listening, but currently trying to help my twins get down for a nap.\n\nWas fun and exciting to start this project with Thompson.\n",
            "id": "15804649734383790080"
          },
          {
            "type": "markdown",
            "text": "09:28:15 From Jeff Miller\nnp! sleep is important!\n\"We try not to do too much to FedWiki that scrambles what Thompson & Co. are doing.\"\n",
            "id": "46732818130181128192"
          },
          {
            "type": "markdown",
            "text": "09:29:52 From Jeff Miller\nWard reflects on the current investigation of rewriting FedWiki's front end, starting with CSS and also using Observable/D3's front end.\nMarc appreciates that Eric's work with the Observable libraries does not depend on Observable's servers, just the libraries.\n",
            "id": "93583767746591719424"
          },
          {
            "type": "markdown",
            "text": "09:31:58 From Jeff Miller\nJeff appreciates that the Observable front-end API is well-factored and easy to re-use.\n",
            "id": "41282074001734025216"
          },
          {
            "type": "markdown",
            "text": "09:34:11 From Jeff Miller\nWard observes that Observable does better when you avoid using Javascript with side effects. Mike Bostock's model of a DAG of things to re-compute (the Observable Notebook model) depends on keeping dependencies from one page to another, one item to another, consistent, based on named references.\n",
            "id": "91039976958301339648"
          },
          {
            "type": "pagefold",
            "text": "09:36:47",
            "id": "88337049648485957632"
          },
          {
            "type": "markdown",
            "text": "09:36:47 From Jeff Miller\nWard notes that FedWiki uses a model which does not explicitly have these dependencies as Bostock's \"Observable\" model. An interaction model where moving pages _sets up_ the shape of the dependency graph, and then it can be computed on request, perhaps?\nWard describes that the FedWiki's evolution of features and affordances was project-driven: how can we make it do _this?_ - so what we have in hand is leftovers from a discovery process.\n",
            "id": "93086816278797139968"
          },
          {
            "type": "pagefold",
            "text": "09:39:40",
            "id": "98558911971256270848"
          },
          {
            "type": "markdown",
            "text": "09:39:40 From Jeff Miller\nWard suggests: if a plugin provides or sources data in the style of a Map, they should provide consistent views; however, a Map might want to consume many sorts of data (regions?) - does our informal computation model have limitations? Or does it make adaptations to new use cases easier? This is uncharted territory to explore, and a set of meaningful projects would be the best way I could think of to explore this territory.\n",
            "id": "67340786637444857856"
          },
          {
            "type": "markdown",
            "text": "09:41:24 From Jeff Miller\nLearning the streets as his personal, internal map and name-based records (a page being a section of some street which Nick knows)\n",
            "id": "46368947589878849536"
          },
          {
            "type": "markdown",
            "text": "09:42:04 From Paul Rodwell\nNiemeyer Niemeir\n",
            "id": "21103357042321125376"
          },
          {
            "type": "markdown",
            "text": "09:42:11 From Jeff Miller\nty!\n",
            "id": "785448903615026944"
          },
          {
            "type": "markdown",
            "text": "09:42:24 From Paul Rodwell\nhttp://nick.dojo.fed.wiki/streets-of-amsterdam.html\n",
            "id": "89941580585303425024"
          },
          {
            "type": "markdown",
            "text": "09:42:27 From Jeff Miller\nWard asks: what would a map marker survey look like, and how could we use it to look at Nick's wiki, and what might we find on other wikis?\n(re, per Paul): Nick Niemeir's \"Streets of Amsterdam\" wiki project; local conventions for directions from one place to another?\n",
            "id": "13333535960723986432"
          },
          {
            "type": "markdown",
            "text": "09:44:33 From Jeff Miller\n(Ward demonstrates a Map Marker Survey / Map Marker Survey Probe)\n",
            "id": "85755602863291154432"
          },
          {
            "type": "pagefold",
            "text": "09:48:12",
            "id": "79388128758693806080"
          },
          {
            "type": "markdown",
            "text": "09:48:12 From Jeff Miller\nhttp://found.ward.bay.wiki.org/view/welcome-visitors/code.fed.wiki/map-marker-survey-probe\n(apologies for the noise)\n",
            "id": "18067453368485619712"
          },
          {
            "type": "pagefold",
            "text": "09:50:59",
            "id": "30140882516453949440"
          },
          {
            "type": "markdown",
            "text": "09:50:59 From Paul Rodwell\nOnly the one marker on my forage site, and that is on a page about a podcast üôÅ\n",
            "id": "84320930442053926912"
          },
          {
            "type": "markdown",
            "text": "09:51:00 From Jeff Miller\n\"We show herehow the process of survey probescommon to Federated Wikican apply to many thingsbecause we keep the pattern simple.\"\n(my paraphrase of the implications)\nhmm my markers are mostly PAGE now\n",
            "id": "5946368535702295552"
          },
          {
            "type": "markdown",
            "text": "09:52:18 From Jeff Miller\nThe survey probe uses static markers fetched from the Map items, rather than ones created via querying using PAGE and LINEUP.\n(Marc reflects on technologies which have a pace which are faster than human accommodation - that they are attractive; but FedWiki, by contrast, is a technology which invites conversational interaction)\n",
            "id": "2007167416083499520"
          },
          {
            "type": "markdown",
            "text": "09:53:48 From Jeff Miller\n(Jeff reflects that his strong attraction to social proof kept him hanging around long enough to see how the pieces fit together)\n\"But I couldn't have figured it out by myself.\"\n[I am getting \"bicycle for the mind\" vibes here]\nlike WikiBase didn't count Berkeley DB and Perl lines of code\n",
            "id": "47567674077708632064"
          },
          {
            "type": "markdown",
            "text": "09:55:03 From Jeff Miller\nHow big is FedWiki in terms of lines of code authored as part of the project?\n(Ward and Paul discuss lines of code; Marc points out that too much code is inelegant. Clumsy?)\n",
            "id": "5131057179171039232"
          },
          {
            "type": "markdown",
            "text": "09:56:04 From Jeff Miller\nlines of code ~ budgetary importance ?\n",
            "id": "70471416790326820864"
          },
          {
            "type": "markdown",
            "text": "09:57:24 From Jeff Miller\ncrude and elegant? when are these two aligned? when are these two in opposition? (to Marc's looking for antonyms for \"elegant\")\n",
            "id": "92004625818440466432"
          },
          {
            "type": "markdown",
            "text": "09:58:29 From Paul Rodwell\nWard describes monkey patching the pascal compiler\n",
            "id": "55836668691850223616"
          },
          {
            "type": "markdown",
            "text": "09:59:06 From Jeff Miller\n\"the most elegant abuse of computing that [the grad student] had ever seen -- you've done the wrong thing so carefully that I have to admire it.\"\n(I did a monkey patch to the Disney web registration protocol which strikes me as the same sort of hack: \"cut here; cut here; everything else stays the same.\"\n)\n",
            "id": "22753579641775767552"
          },
          {
            "type": "pagefold",
            "text": "10:01:42",
            "id": "94401402249030959104"
          },
          {
            "type": "markdown",
            "text": "10:01:42 From Jeff Miller\n(Ward describes CDC/Scope and an unofficial alternative OS, CDC/Mace, which offered hackable affordances)\n(an aside on Seymour Cray disliking virtual memory)\n",
            "id": "10715993689830572032"
          },
          {
            "type": "markdown",
            "text": "10:03:18 From Jeff Miller\n(Paul describes the careful orchestration of working input tapes needed when doing a sequence of jobs which required reading overlays)\n",
            "id": "27045127168020000768"
          },
          {
            "type": "markdown",
            "text": "10:04:34 From Jeff Miller\nHi Eric! we have been talking about map marker survey probes, reflecting on well-factored data interaction models, and bicycles.\nAlso Dov Dori's OPM.\n",
            "id": "92908748881483120640"
          },
          {
            "type": "markdown",
            "text": "10:07:04 From Jeff Miller\n[more tea]\n",
            "id": "95563076187214790656"
          },
          {
            "type": "pagefold",
            "text": "10:15:56",
            "id": "28947691189249257472"
          },
          {
            "type": "markdown",
            "text": "10:15:56 From Jeff Miller\n(Ward and Marc discuss ways in which you can lose sight of curiosity, by being insulated from consequences by early wealth; or by being dedicated to a unified vision which you're convinced of)\n",
            "id": "4449269502070418944"
          },
          {
            "type": "pagefold",
            "text": "10:20:03",
            "id": "44517976247654785024"
          },
          {
            "type": "markdown",
            "text": "10:20:03 From Jeff Miller\n(Discussion of the broken tramway in Pakistan, and the reasons that they exist -- that they make it practical to go to school by cutting hours of walking out)\n",
            "id": "66642653514860265472"
          },
          {
            "type": "pagefold",
            "text": "10:23:08",
            "id": "73973468413567287296"
          },
          {
            "type": "markdown",
            "text": "10:23:08 From Jeff Miller\n(Discussion of Swiss expedients for using mountain terrain and military preparedness; digging tunnels through mountains; mountain runways)\n[Switzerland's mountain adaptations figure in as part of the plot of The Ministry for the Future]\n",
            "id": "4138312542933541888"
          },
          {
            "type": "markdown",
            "text": "10:25:16 From Paul Rodwell\nhttps://en.wikipedia.org/wiki/Aircraft_cavern\n",
            "id": "7734301281098476544"
          },
          {
            "type": "markdown",
            "text": "10:26:17 From Jeff Miller\nEric demonstrates the Observable front-end\nfor Federated Wiki\nstarting with a rendered site map as Reference items\nall the page links are now rendered using an HTML sanitizer/sanitiser.\n",
            "id": "22270459917511397376"
          },
          {
            "type": "markdown",
            "text": "10:28:10 From Jeff Miller\nThe filter around HTML can allow user-generated content, while scrubbing out more obvious or hazardous script references in HTML or SVG, using DOMPurify as a standard library.\nObservable's libraries didn't include the DOMPurify style filtering; Eric's updated prototype now includes DOMPurify for filtering potentially hazardous federated content.\n",
            "id": "42555385162811498496"
          },
          {
            "type": "markdown",
            "text": "10:30:22 From Jeff Miller\nThe standard FedWiki client DOES include a DOMPurify pass, so this is a security parity move of the prototype toward readiness to share as a building block for more general work.\n",
            "id": "75108264355031711744"
          },
          {
            "type": "markdown",
            "text": "10:31:51 From Jeff Miller\n\"a function linked() which is part of Observable's API needs; the internal function linked(text) which parses [] and [[]] wikilinks here in pwa/wiki.js\"\n",
            "id": "38666490225017290752"
          },
          {
            "type": "markdown",
            "text": "10:34:14 From Jeff Miller\n\"I do some preprocessing with linked(text), where [] is a plain link, and [[]] is a link decorated with the 'internal' CSS class; and post-processing with annotateLinks(), where a non-internal link dispatches to a new window/tab and an internal link does not.\"\n\"Internal links will have a click handle.\"\nadding CSS classes and click handlers are examples of DOM enrichment\n",
            "id": "1151741314948295808"
          },
          {
            "type": "markdown",
            "text": "10:35:31 From Jeff Miller\n<text ...> is an example in SVGs of elements which might be enriched with click handlers in an SVG diagram.\n[aside from Jeff: I was happily surprised that the SVG DOM would support adding click handlers; this is the premise of Single Page Wumpus, SVG+JS]\n",
            "id": "33462703179128573952"
          },
          {
            "type": "markdown",
            "text": "10:37:40 From Jeff Miller\nObservable's form of connecting ... why are the expected forms asynchronous? the answer is that libraries can by lazy-loaded only when the functions are actually needed.\n",
            "id": "14658077028509685760"
          },
          {
            "type": "markdown",
            "text": "10:39:28 From Jeff Miller\n\"async html()\" definition uses DOMPurify for Eric's FedWiki front end, and that reference to DOMPurify is loaded only if / when it's needed.\"\n",
            "id": "82391260496262299648"
          },
          {
            "type": "markdown",
            "text": "10:40:40 From Paul Rodwell\nA link to the code that Eric is walking through - https://github.com/dobbs/wiki-spike-css/blob/main/pwa/wiki.js\n",
            "id": "79489861686611558400"
          },
          {
            "type": "markdown",
            "text": "10:40:54 From Jeff Miller\nEric shows how to capture a reference to the original html library from Observable, using \"origHtml = await stdlib.html()\"\n",
            "id": "83525567548310650880"
          },
          {
            "type": "markdown",
            "text": "10:42:37 From Jeff Miller\na sanitizing html() renderer:sanitize ( Observable's html() ) -> DOM element\npost-processing cleanup after Observable's rendering\nMarc asks: \"Would it make more sense to sanitize the HTML before having Observable render it?\"\n",
            "id": "83752627066983170048"
          },
          {
            "type": "markdown",
            "text": "10:43:42 From Jeff Miller\n(discussion of where it makes sense to put the DOMPurify step)\n",
            "id": "30434128264003301376"
          },
          {
            "type": "markdown",
            "text": "10:45:00 From Jeff Miller\n\"all of these libraries are trying to decide whether to treat <> as HTML for the browser, or render HTML as escaped visible text, &lt; and &gt;\"\n",
            "id": "2121958943626467328"
          },
          {
            "type": "markdown",
            "text": "10:46:01 From Jeff Miller\nPutting the DOMPurify guard as the last step before joining the browser's context is a way of making sure Observable didn't leave anything;\nbut Marc asks if it makes sense to pre-purify anything before having Observable do its standard rendering step.\n",
            "id": "92843854130254675968"
          },
          {
            "type": "markdown",
            "text": "10:47:30 From Jeff Miller\n(discussion of the machinery inside Observable stdlib.html() and how it's constructing DOM objects; are there places that things might be introduced there?)\n(a hacker's eye view of Observable is beyond what Eric is doing; however, DOMPurify is better than \"here's a random web developer's prototype)\n",
            "id": "69889247937993236480"
          },
          {
            "type": "markdown",
            "text": "10:49:11 From Jeff Miller\n(discussion of general considerations of security: is a metaphor for an operating room and control of infection, is that useful for considering rendering pipelines?)\n",
            "id": "87505439707435925504"
          },
          {
            "type": "markdown",
            "text": "10:50:40 From Jeff Miller\n[usefulness of running system metaphors, and their suitability to the moves and choices available to injecting exploitation into the processing pipeline, and to defending against exploitation]\nWard observes that the Observable code was written and factored in a way that external observers could review and appreciate it, and understand the internal considerations.\n",
            "id": "12824410199979663360"
          },
          {
            "type": "markdown",
            "text": "10:52:12 From Jeff Miller\n...and that Eric's work in re-use has helped us gain that appreciation in a way that we can share it.\n",
            "id": "43669353850934747136"
          },
          {
            "type": "markdown",
            "text": "10:54:08 From Jeff Miller\nEric observes that some of the basic concepts (data structures and compilers) which were less interesting earlier in his learning; now he's developing appreciations for how to build things from scratch , after having spent much time on the boundaries of systems, getting them to work.\ntoday's work with DOMPurify has the same feel for Eric's understanding of integrating systems as translating among tree-structured information\n",
            "id": "80363102354152505344"
          },
          {
            "type": "markdown",
            "text": "10:55:06 From Marc Pierson\nhttps://www.google.com/search?sca_esv=560520228&rlz=1C5CHFA_enUS563US563&sxsrf=AB5stBjMddB1ZxgllVuRZXZ5pJhfKyM4_g:1693158885433&q=bricolage&si=ACFMAn8hzZSJQsgXIYlkGc-z1vmp5Y27sxEfX9j5XE95xZLKj7yCodsWT5zLc-EVe8zTdwjO0Us2CplA76s1EANJMd5ls4T-LA%3D%3D&expnd=1&biw=1728&bih=827&dpr=2.2\n",
            "id": "21818985128101863424"
          },
          {
            "type": "markdown",
            "text": "10:55:21 From Jeff Miller\n\"bricolage\" - working from ready-made parts\n",
            "id": "28857050015546449920"
          },
          {
            "type": "markdown",
            "text": "10:57:14 From Jeff Miller\nhttps://martinfowler.com/bliki/PostModernProgramming.html as a modern software account of bricolage\nhttps://en.wikipedia.org/wiki/The_Big_Front_Yard (as a big barn with the universe of code in it)\n",
            "id": "43763877139462193152"
          },
          {
            "type": "markdown",
            "text": "10:58:07 From Paul Rodwell\nEtymology - French, one who putters about, from bricoler - also https://en.wiktionary.org/wiki/bricoleur\n",
            "id": "98470859024648765440"
          },
          {
            "type": "markdown",
            "text": "10:58:15 From Ward Cunningham\nOn a lazy afternoon, two bored brothers keep themselves busy by building and flying an airplane. https://www.amazon.com/Bored-Nothing-Do-Peter-Spier/dp/0385241046\n",
            "id": "64936119028603797504"
          },
          {
            "type": "markdown",
            "text": "10:59:19 From Jeff Miller\nSimak's Big Front Yard centers on a tinkerer who ends up as a knowledge trader.\n",
            "id": "58279603580695371776"
          },
          {
            "type": "markdown",
            "text": "11:00:26 From Jeff Miller\n(discussion of easy and hard things in UI prototyping and work)\nWard describes that in FedWiki, editing a paragraph at a time helps narrow the challenge of editing in new UIs, in new contexts.\n",
            "id": "48466572209226686464"
          },
          {
            "type": "markdown",
            "text": "11:01:38 From Jeff Miller\n\"A mediocre job at the editor will take you a long way.\"\n",
            "id": "40218050357218590720"
          },
          {
            "type": "markdown",
            "text": "11:03:01 From Robert Best\nNo double click to edit, long press context menu?\n\nAlways open and editable to rendering paragraphs independently in one big document like Obsidian?\n",
            "id": "21724790149759033344"
          },
          {
            "type": "markdown",
            "text": "11:03:07 From Jeff Miller\nPeter (PeteDaGuru) reflects on having the little paragraph editor being a tiny snap-in for the I/O context (keyboard and screen; mobile device with touchscreen; VR glasses etc.) may allow FedWiki and other information systems to be re-used near whole.\nLong press context menu sounds right? Or long-press for editor plus some widgets?\n",
            "id": "40926269489285414912"
          },
          {
            "type": "markdown",
            "text": "11:03:57 From Robert Best\nGo back to edit after\n",
            "id": "76331548448642498560"
          },
          {
            "type": "markdown",
            "text": "11:05:06 From Eric Dobbs\nReminding me of this striking story about programming by voice, especially programming a punctuation heavy language like Perl. https://thenewstack.io/perl-programmer-pioneers-coding-by-voice/\n",
            "id": "55157605787356381184"
          },
          {
            "type": "markdown",
            "text": "11:05:14 From Jeff Miller\n(Pete reflects on various input modalities in the current context; special input modalities for court reporters, for disability affordances; for AI-based prompting and fill-in)\n",
            "id": "41755074664333672448"
          },
          {
            "type": "markdown",
            "text": "11:06:59 From Jeff Miller\nMarc explores voice typing with Microsoft Word.\n\"just say all caps AND IT'S ALL CAPS\"\n",
            "id": "66942945388375539712"
          },
          {
            "type": "markdown",
            "text": "11:08:18 From Jeff Miller\n(discussion of keeping basic platform and libraries open-source, not dependent on proprietary services with lock-in)\n(motivational case for FedWiki of browing and editing with mobile devices)\n",
            "id": "79159703612686729216"
          },
          {
            "type": "markdown",
            "text": "11:09:14 From Marc Pierson\nAll caps command works one word at a time.\n",
            "id": "40575912007178035200"
          },
          {
            "type": "markdown",
            "text": "11:09:33 From Jeff Miller\naha!\n",
            "id": "83075051955630342144"
          },
          {
            "type": "markdown",
            "text": "11:10:17 From Paul Rodwell\nhttps://www.siriuserguide.com/siri-dictation-guide\n",
            "id": "76118000831281987584"
          },
          {
            "type": "markdown",
            "text": "11:10:19 From Jeff Miller\nty for clarification: \"all caps marc bicycle\" -> \"MARC bicycle\"\n",
            "id": "46554638091092828160"
          },
          {
            "type": "markdown",
            "text": "11:11:59 From Jeff Miller\nEric's demo continues; the \"plugins\" registry by plugin type has a different renderer, starting with an \"unknown\" plugin handler using the enriched \"html\" handler defined to include the DOMPurify wrapper around the Observable html renderer.\n",
            "id": "87770667944619687936"
          },
          {
            "type": "markdown",
            "text": "11:13:31 From Jeff Miller\nand the rendering logic says, \"open an Observable Inspector on the DOM constructed using the html() handler, marking it with \"Unknown type {$item.type}\"\n",
            "id": "13899069127743090688"
          },
          {
            "type": "pagefold",
            "text": "11:16:05",
            "id": "51381832814425784320"
          },
          {
            "type": "markdown",
            "text": "11:16:05 From Jeff Miller\n\"A 'paragraph' plugin depends on 'html', 'linked', and 'annotateLinks' as function names; then the plugin rendering function says: \"annotateLinks on the result of a sanitized HTML paragraph, on the item text processed with \"linked\".\n",
            "id": "92127614825340534784"
          },
          {
            "type": "markdown",
            "text": "11:17:06 From Jeff Miller\n\"I did a perfect Decorator pattern, so none of the Plugin code needed to change; injecting the dependencies as named functions was how I added the needed function dependencies for the plugin code.\"\n",
            "id": "96582057313657470976"
          },
          {
            "type": "markdown",
            "text": "11:18:44 From Jeff Miller\nMarc asks if the Observable client editor in an iPhone / mobile context will look the same as in the original FedWiki?\nEric: Yes, it will be the same two views, rendered as an item; rendered as editable source. The editable source doesn't have any sanitization step.\n",
            "id": "63899120557334577152"
          },
          {
            "type": "markdown",
            "text": "11:19:56 From Jeff Miller\nWhen the page gets loaded, it gets processed from the same wiki source on disk that the standard FedWiki client uses.\n<script>alert(\"hi marc!\")</script>\nas something that a sanitization pipeline would remove\n",
            "id": "24552907055593197568"
          },
          {
            "type": "markdown",
            "text": "11:21:22 From Jeff Miller\n\"no refactoring browser needed!\"\n",
            "id": "36136090273355382784"
          },
          {
            "type": "markdown",
            "text": "11:23:48 From Paul Rodwell\nI need to run, unfortunately.\n",
            "id": "25432176150875328512"
          },
          {
            "type": "markdown",
            "text": "11:25:19 From Jeff Miller\nEric demonstrates the results of a Clipboard event getting dropped into an inspector, and there is now a drop handler (\"drop inspector\" and \"paste inspector\") which allow events to be seen and inspected for their internal members and structure.\n",
            "id": "94114254486036398080"
          },
          {
            "type": "markdown",
            "text": "11:26:30 From Jeff Miller\nWard observes that the event inspection is something that we want to retain.\nIt supports vernacular programming.\n",
            "id": "23950410498387787776"
          },
          {
            "type": "markdown",
            "text": "11:28:07 From Jeff Miller\nJeff says: \"Who else is getting Smalltalk vibes?\" (from the Observable inspector making events visible and understandable in the context of regular data handling)\n",
            "id": "43585993109288378368"
          },
          {
            "type": "markdown",
            "text": "11:29:20 From Jeff Miller\nEric observes that the Observable Inspector is a remarkably simple mechanism, which wraps the input data in a <div> and possibly uses the \"inspect\" library to allow the user to navigate the details.\n(Oh wow -- also a way of inspecting your platforms and what is in the events)\n",
            "id": "27667479158186479616"
          },
          {
            "type": "markdown",
            "text": "11:30:40 From Jeff Miller\nWard says: \"We need to build the machinery that understands what you're intending by moving things around on the lineup, or on a page; then we'll use Observable to get a meaningful observation, AND that meaningless behavior will be exposed immediately in an inspector.\"\n(a meaningful representation, AND...)\n",
            "id": "69833855944661319680"
          },
          {
            "type": "markdown",
            "text": "11:31:47 From Jeff Miller\nWe have an environment that we have an opportunity to control [the programming environment] in ways that [support what we want to do for user programming and collaboration].\n",
            "id": "79795848612240310272"
          },
          {
            "type": "markdown",
            "text": "11:33:01 From Jeff Miller\nMarc recalls a comparison; Bostock is working on visualizations and data flow; Ward is working on colllaboration and history and connection of textual data and other data; Eric has connected these worlds.\n",
            "id": "21266325978741641216"
          },
          {
            "type": "markdown",
            "text": "11:34:05 From Jeff Miller\nEric says: \"One of the things that is in reach for me, is to take the SoFi doagram notebook which I created for myself; that I can name the top-level SoFi diagram \"panel\", and then render that as a page adjecent to a wiki lineup.\"\n",
            "id": "48987537507234488320"
          },
          {
            "type": "markdown",
            "text": "11:34:41 From Marc Pierson\nhttps://metapho.relocalizecreativity.net/view/welcome-visitors/view/index/view/sofi-vsm-sketch\n",
            "id": "50871233900146802688"
          },
          {
            "type": "markdown",
            "text": "11:34:54 From Jeff Miller\n\"I'm pausing that to make sure that how a special page is invoked, an embedded Observable notebook as a wiki page lineup, in a meaningful context as part of wiki. What's the COLLABORATIVE story around that move?\"\n",
            "id": "52306233811477864448"
          },
          {
            "type": "markdown",
            "text": "11:35:40 From Marc Pierson\nA programmer in this group will lean important things from a study of OPM that can become a third leg on this stool.\n",
            "id": "55644649433313378304"
          },
          {
            "type": "markdown",
            "text": "11:35:54 From Jeff Miller\nWard says: \"What does simple graphical manipulation do to, do _for_, collaborative work? Can we make small tweaks to the graphical representation which can be rolled up across pages? \" -> a site survey in Observable page form?\n",
            "id": "95654277956418093056"
          },
          {
            "type": "markdown",
            "text": "11:36:19 From Marc Pierson\nhttp://marc.relocalizecreativity.net/view/welcome-visitors/view/creativity-equipping/view/search-for-opm#\nI need to understand how to move from community CLDs into OPM models? All in fedwiki\n",
            "id": "92934855780786929664"
          },
          {
            "type": "markdown",
            "text": "11:37:28 From Jeff Miller\nMarc's use case: \"I want to be able to write a wiki with every leader's opinion on the SoFi relationshps, with a page on each\" driving Eric's DOM enrichment of SVG, and also prompting gathering data using FedWIki site surveys ... maybe there will be a family of pages? (a SoFi, a tetrahedron, a causal loop diagram?)\n",
            "id": "64844221515077427200"
          },
          {
            "type": "markdown",
            "text": "11:37:51 From Marc Pierson\nhttp://marc.relocalizecreativity.net/view/welcome-visitors/view/models-for-seeing-systems\n",
            "id": "46909714247462682624"
          },
          {
            "type": "markdown",
            "text": "11:37:55 From Jeff Miller\nand the result might be expressed as an embedded Observable page as a panel\nEric describes inspiration from Miller Columns as used in Smalltalk, in Tudor Girba's Glamorous Toolkit; we have a Javascript version that approaches GToolkit.\n",
            "id": "34203957603251531776"
          },
          {
            "type": "markdown",
            "text": "11:39:14 From Jeff Miller\nWard observes: a decade into an inquiry is when you start seeing distinctive results.\n",
            "id": "88782823051785994240"
          },
          {
            "type": "markdown",
            "text": "11:40:33 From Peter\nWhack on the side of my head about why 10y seems to be a timeframe for letting things simmer:\n\nLindy's Law - The older something is, the more conditions it must have been fit for, thus, the broader range of possible futures it is fit for, thus, the longer it is likely to survive (https://luca-dellanna.com/lindy/  Albert Goldman 1964, AntiFragile Talen 2012) : https://en.wikipedia.org/wiki/Lindy_effect\n",
            "id": "61112144555717337088"
          },
          {
            "type": "markdown",
            "text": "11:40:55 From Jeff Miller\n<3 ty Peter\ntime-tested and adapted\n",
            "id": "71736568865476902912"
          },
          {
            "type": "pagefold",
            "text": "11:46:50",
            "id": "35431313480153247744"
          },
          {
            "type": "markdown",
            "text": "11:46:50 From Jeff Miller\ntrying out the DOMPurify and seeing a <script> tag go poof!\nIs this appropriately sanitized?<script>alert(\"hi!\")</alert>\n(in an html item)\n",
            "id": "32914355411846053888"
          },
          {
            "type": "pagefold",
            "text": "11:51:03",
            "id": "97844395695267184640"
          },
          {
            "type": "markdown",
            "text": "11:51:03 From Jeff Miller\n\"Where is the alignment of other projects and libraries with what FedWiki needs?\" Ward: \"Paul is the best for finding those, and the change from Caja to DOMPurify was an example of one community going idle, and the other being vital.\"\ncytochrome-c oxidase is fit for conditions over a good long time\n",
            "id": "89238164001104871424"
          },
          {
            "type": "markdown",
            "text": "11:53:31 From Jeff Miller\nEric considers that the viability needs of telecom systems (like British Telecom; like Erlang/BEAM in Ericsson) to be good in shaping what choices are good long-term ones.\n",
            "id": "70861795478179160064"
          },
          {
            "type": "markdown",
            "text": "11:54:48 From Jeff Miller\nMechanical Orchard\n",
            "id": "56521390470425305088"
          },
          {
            "type": "markdown",
            "text": "11:57:14 From Jeff Miller\nhttps://www.mechanical-orchard.com/\n",
            "id": "10810587676949200896"
          },
          {
            "type": "markdown",
            "text": "11:57:22 From Peter\nMechanical Orchard origins with Pivotal (fixing Twitter Whale Fails using Ruby): https://www.mechanical-orchard.com/post/the-seeds-of-mechanical-orchard\n",
            "id": "40716595374531682304"
          },
          {
            "type": "markdown",
            "text": "11:57:58 From Jeff Miller\n(examples of Erlang, BEAM, etc.)\n(discussion of the history of Rob Mee's career in technologies, from Java/XP to Ruby/Rails, Cloud Foundry, Pivotal Labs, now Mechanical Orchard)\n",
            "id": "12275298687033896960"
          },
          {
            "type": "pagefold",
            "text": "12:06:12",
            "id": "38971802359586996224"
          },
          {
            "type": "markdown",
            "text": "12:06:12 From Jeff Miller\n\"And here we are.\" - my catchphrase for the last several years.\nI worked for Eric Allman at Sendmail dot com!\n(not very long, between layoffs in the dot-com crash era)\n",
            "id": "57790199553900404736"
          },
          {
            "type": "pagefold",
            "text": "12:09:49",
            "id": "46691803204775460864"
          },
          {
            "type": "markdown",
            "text": "12:09:49 From Jeff Miller\nDigital Ocean has been pretty solid for me (though I should be a better operator of my wiki farm\"\n",
            "id": "21269011655360425984"
          },
          {
            "type": "pagefold",
            "text": "12:14:32",
            "id": "59471702367647203328"
          },
          {
            "type": "markdown",
            "text": "12:14:32 From Jeff Miller\nStephen Wolfram: \"I can help you with LLMs' hopelessness at math and conceptual stuff: Wolfram Alpha!\"\n\n",
            "id": "36649431033641299968"
          }
        ]
      }
    },
    {
      "type": "fork",
      "date": 1693164857209
    },
    {
      "type": "add",
      "id": "16e2e2d8f998667f",
      "item": {
        "type": "paragraph",
        "id": "16e2e2d8f998667f",
        "text": "Prefatory notes (archive starts at first pagefold, 09:10:08)."
      },
      "after": "54187282310724648960",
      "date": 1693166069350
    },
    {
      "type": "add",
      "id": "e5a7c90d4316e6af",
      "item": {
        "type": "paragraph",
        "id": "e5a7c90d4316e6af",
        "text": "Sunday Explorers 2023-08-27. http://jeff.dojo.fed.wiki/view/welcome-visitors/view/typescript-2023-08-27/view/typescript-index-2023-08-27 using Ward's formatter and indexer.\nthere are some nonsense words picked up by the KWIC indexer that come from a long URL\nToday's Sunday Explorers was a really excellent overview of how many streams of work in information sharing, visual interaction, the browser as a platform, and collaborative work patterns have come together inside and outside Federated Wiki, with an \"aha!\" from Pete about why platforms and projects that are about ten years old start to look substantial, and digressions on folding bicycles, bicycle panniers, Burley bike trailers for dogs, the dangers of rocket bikes, and the challenges of online banking when paying a mortgage off. Also \"what's new in open source from Erlang/Beam\" and the technology and career arcs of Rob Mee and Erich Gamma. Bricolage and its two-way interaction with more formal design and production."
      },
      "after": "16e2e2d8f998667f",
      "date": 1693166080555
    },
    {
      "type": "add",
      "id": "91d27feb6e1e0b0f",
      "item": {
        "type": "paragraph",
        "id": "91d27feb6e1e0b0f",
        "text": "The heart of the discussion was that FedWiki has several current motivating use cases for technical development and for suitability to purpose.\n\n    Marc and Kerry's Systems Dynamics, OPM, SoFi, Causal Loop Diagrams (structured information representation to help community members / team members understand a common field of action and learning, whether a neighborhood or a town or a school system).\n    Thompson Morrison's collaborative learning and sense-making work, notably in educational systems, among learners. Partly this drives a need for easier deployment of template wikis and easier operational work related to collaborative FedWiki farms/neighborhoods of wikis.\n    Mobile view and edit as a way of bringing the collaborative environment with you in your pocket; an enabler for more use cases.\n    Site survey probes as a now-proven simple method of adding conversational, casual programming to wiki users.\n    The front-end library for event interaction and dependencies provided and developed as part of Observable (ObservableHQ.com) which Eric is using to prototype a new FedWiki client, and described how Observable is well-articulated to allow FedWiki logic for rendering and interacting with wiki page story items to work. Also that Observable's \"inspector\" functionality allows the user/programmer to see what's working in a more direct way, by rendering a view of unhandled events like \"paste\" and \"drag/drop\"."
      },
      "after": "e5a7c90d4316e6af",
      "date": 1693166083802
    },
    {
      "type": "edit",
      "id": "e5a7c90d4316e6af",
      "item": {
        "type": "paragraph",
        "id": "e5a7c90d4316e6af",
        "text": "Sunday Explorers 2023-08-27."
      },
      "date": 1693166105003
    },
    {
      "type": "add",
      "id": "efb11adc52ba6f42",
      "item": {
        "type": "paragraph",
        "id": "efb11adc52ba6f42",
        "text": "Today's Sunday Explorers was a really excellent overview of how many streams of work in information sharing, visual interaction, the browser as a platform, and collaborative work patterns have come together inside and outside Federated Wiki, with an \"aha!\" from Pete about why platforms and projects that are about ten years old start to look substantial, and digressions on folding bicycles, bicycle panniers, Burley bike trailers for dogs, the dangers of rocket bikes, and the challenges of online banking when paying a mortgage off. Also \"what's new in open source from Erlang/Beam\" and the technology and career arcs of Rob Mee and Erich Gamma. Bricolage and its two-way interaction with more formal design and production."
      },
      "after": "e5a7c90d4316e6af",
      "date": 1693166119562
    },
    {
      "type": "edit",
      "id": "16e2e2d8f998667f",
      "item": {
        "type": "paragraph",
        "id": "16e2e2d8f998667f",
        "text": "See also transcriber's notes at end. Archive starts at first pagefold, 09:10:08 ."
      },
      "date": 1693166174795
    },
    {
      "type": "edit",
      "id": "16e2e2d8f998667f",
      "item": {
        "type": "paragraph",
        "id": "16e2e2d8f998667f",
        "text": "Archive starts at first pagefold, 09:10:08 ."
      },
      "date": 1693166213563
    },
    {
      "type": "add",
      "id": "c7bac480b2766994",
      "item": {
        "type": "paragraph",
        "id": "c7bac480b2766994",
        "text": "TRANSCRIBER'S NOTES"
      },
      "after": "e5a7c90d4316e6af",
      "date": 1693166232346
    },
    {
      "type": "edit",
      "id": "91d27feb6e1e0b0f",
      "item": {
        "type": "paragraph",
        "id": "91d27feb6e1e0b0f",
        "text": "The heart of the discussion was that FedWiki has several current motivating use cases for technical development and for suitability to purpose."
      },
      "date": 1693166274623
    },
    {
      "type": "add",
      "id": "ac95e94037e82d4d",
      "item": {
        "type": "paragraph",
        "id": "ac95e94037e82d4d",
        "text": "Marc and Kerry's Systems Dynamics, OPM, SoFi, Causal Loop Diagrams (structured information representation to help community members / team members understand a common field of action and learning, whether a neighborhood or a town or a school system)."
      },
      "after": "91d27feb6e1e0b0f",
      "date": 1693166277885
    },
    {
      "type": "add",
      "id": "0722b5ac381aac76",
      "item": {
        "type": "paragraph",
        "id": "0722b5ac381aac76",
        "text": "Thompson Morrison's collaborative learning and sense-making work, notably in educational systems, among learners. Partly this drives a need for easier deployment of template wikis and easier operational work related to collaborative FedWiki farms/neighborhoods of wikis."
      },
      "after": "ac95e94037e82d4d",
      "date": 1693166281980
    },
    {
      "type": "add",
      "id": "44f2dfd1e688cc03",
      "item": {
        "type": "paragraph",
        "id": "44f2dfd1e688cc03",
        "text": "Mobile view and edit as a way of bringing the collaborative environment with you in your pocket; an enabler for more use cases."
      },
      "after": "0722b5ac381aac76",
      "date": 1693166283620
    },
    {
      "type": "add",
      "id": "f0e94ddaaf35f39c",
      "item": {
        "type": "paragraph",
        "id": "f0e94ddaaf35f39c",
        "text": "Site survey probes as a now-proven simple method of adding conversational, casual programming to wiki users."
      },
      "after": "44f2dfd1e688cc03",
      "date": 1693166286804
    },
    {
      "type": "add",
      "id": "b54338e55755d505",
      "item": {
        "type": "paragraph",
        "id": "b54338e55755d505",
        "text": "The front-end library for event interaction and dependencies provided and developed as part of Observable [ObservableHQ.com site] which Eric is using to prototype a new FedWiki client, and described how Observable is well-articulated to allow FedWiki logic for rendering and interacting with wiki page story items to work. Also that Observable's \"inspector\" functionality allows the user/programmer to see what's working in a more direct way, by rendering a view of unhandled events like \"paste\" and \"drag/drop\"."
      },
      "after": "f0e94ddaaf35f39c",
      "date": 1693166292942
    },
    {
      "type": "edit",
      "id": "b54338e55755d505",
      "item": {
        "type": "paragraph",
        "id": "b54338e55755d505",
        "text": "The front-end library for event interaction and dependencies provided and developed as part of Observable [ObservableHQ.com site] which Eric is using to prototype a new FedWiki client, and described how Observable is well-articulated to allow FedWiki logic for rendering and interacting with wiki page story items to work. Also that Observable's \"inspector\" functionality allows the user/programmer to see what's working in a more direct way, by rendering a view of unhandled events like \"paste\" and \"drag/drop\", reminiscent of the Smalltalk interactive environment."
      },
      "date": 1693166311408
    },
    {
      "type": "edit",
      "id": "c7bac480b2766994",
      "item": {
        "type": "paragraph",
        "id": "c7bac480b2766994",
        "text": "[[Transcriber Notes 2023-08-27]]"
      },
      "date": 1693166427813
    },
    {
      "id": "efb11adc52ba6f42",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166436385
    },
    {
      "id": "91d27feb6e1e0b0f",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166439592
    },
    {
      "id": "ac95e94037e82d4d",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166444513
    },
    {
      "id": "0722b5ac381aac76",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166446888
    },
    {
      "id": "44f2dfd1e688cc03",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166451265
    },
    {
      "id": "f0e94ddaaf35f39c",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166457259
    },
    {
      "id": "b54338e55755d505",
      "type": "remove",
      "removedTo": {
        "page": "Transcriber Notes 2023-08-27"
      },
      "date": 1693166461722
    },
    {
      "type": "fork",
      "site": "jeff.dojo.fed.wiki",
      "date": 1693234829647
    }
  ]
}