{
  "title": "How to Delete Structure",
  "story": [
    {
      "type": "paragraph",
      "id": "20e234fbf8290a9b",
      "text": "To open up this question, we fall back on a concept of structure based on [[William Bricken]]'s [[Iconic Arithmetic]]."
    },
    {
      "type": "reference",
      "id": "e4c9bbca230ac7a4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "delete",
      "title": "delete",
      "text": "[[Structure]] ⇒ [[Pattern-Matching]]"
    },
    {
      "type": "markdown",
      "id": "10313693f3e5e4bc",
      "text": "# Brackets"
    },
    {
      "type": "markdown",
      "id": "93ca20c35e353a1e",
      "text": "## Structure between [[Brackets]]"
    },
    {
      "type": "markdown",
      "id": "135e0eab7e2dbdb2",
      "text": "The [[Frame Type]] is structure *between* round- and square-brackets. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. ([[Iconic Arithmetic]], Vol. 1, p. 198)"
    },
    {
      "type": "paragraph",
      "id": "f94dfe97c527dd04",
      "text": "It can also collapse for legal reasons, misuse, malware or security reasons. "
    },
    {
      "type": "reference",
      "id": "28dcfc2087e59700",
      "site": "wiki.ralfbarkow.ch",
      "slug": "brackets",
      "title": "Brackets",
      "text": "The order of magnitude of a digit within a conventional number identifies …"
    },
    {
      "type": "reference",
      "id": "fc08017dd0cb73c2",
      "site": "wiki.ralfbarkow.ch",
      "slug": "order-of-magnitude",
      "title": "Order of Magnitude",
      "text": "of a digit within a conventional number identifies how many times that digit is multiplied by ten. Instead of increasing the power of a digit by moving to the next position on the left (thousands, hundreds, tens, units), depth-value increases power by depth of nesting. Crossing a boundary outward changes the order of magnitude by one power-of-ten, more generally by one power of an arbitrary base. 5283 in [[Positional Notation]] is (((5)2)8)3 in [[Depth-Value Notation]]. The depth-value form of 5003 is (((5)))3. …"
    },
    {
      "type": "markdown",
      "id": "d9c64011c613be17",
      "text": "> Do not be concerned by the extra burden of [[Brackets]]. Positional notation has the same burden. By convention we do not write the meanings of the left-to-right positions within the number. Instead we spend years as children learning to see them implicitly. With familiarity, the brackets too can be implicit. For example, the leading open parentheses can easily be omitted to yield, for example,"
    },
    {
      "type": "code",
      "id": "4c114d1da0daff3c",
      "text": "5)2)8)3 ☞ 5283"
    },
    {
      "type": "image",
      "id": "f11e0ecada79e426",
      "text": "Figure 3-1: Place-value to depth-value",
      "size": "wide",
      "width": 430,
      "height": 211,
      "url": "/assets/plugins/image/cde073ff9a9b9754a61fce3f2181da7f.jpg"
    },
    {
      "type": "paragraph",
      "id": "fb799776ac1ab3e5",
      "text": "Figure 3-1 shows an example of the conversion from place-value to depth-value notation. Place-value is an abbreviation for numbers rendered as polynomial expressions, while depth-value is an abbreviation for numbers rendered as factored expressions. For convenience, we’ll consider both ensemble and depth-value forms to be implicitly bounded by a value-neutral container."
    },
    {
      "type": "paragraph",
      "id": "51ae002e0d88f628",
      "text": "We consider forms to be implicitly limited by a value-neutral [[Container]]."
    },
    {
      "type": "markdown",
      "id": "9ec62c163c5c0c9a",
      "text": "> […], most of us do conceptualize sets in terms of Container schemas, […]. However, when we conceptualize sets as Container schemas, a constraint follows automatically: **Sets cannot be members of themselves**, since **containers cannot be inside themselves**. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
    },
    {
      "type": "reference",
      "id": "c0b007d5ac52724c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "container",
      "title": "Container",
      "text": "The concept of a container is tangible, not abstract."
    },
    {
      "type": "pagefold",
      "id": "84e033c82ecef16e",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "0a10b5f2c5a67164",
      "text": "The [[Two Level Diagram]] is one of the [[Guiding Diagrams]]. They are a means of drawing pictures of work in progress that can accompany this work until completion."
    },
    {
      "type": "reference",
      "id": "7598e27db30bff55",
      "site": "found.ward.bay.wiki.org",
      "slug": "guiding-diagrams",
      "title": "Guiding Diagrams",
      "text": "Bonus content, [[Wiki's Robot Scouts]]"
    },
    {
      "type": "paragraph",
      "id": "344d747161747bcc",
      "text": "[…] when they rave about how many lines of code they were able to delete. ([[Refactoring Improving The Design Of Existing Code]])"
    },
    {
      "type": "paragraph",
      "id": "3a148c9e7c669282",
      "text": "The [[Wiki's Robot Scouts]] should help us to delete code and/or text."
    },
    {
      "type": "reference",
      "id": "ce8e97d82ae63fc7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "wiki-refactoring",
      "title": "Wiki Refactoring",
      "text": "Sometimes Wiki pages get rearranged or reorganized. Sometimes we call this refactoring. Sometimes the information content of the Wiki is not being changed, it is just being reorganized, i.e. the design or architecture of the Wiki is being improved. Like [[Extreme Programming]] [[Re Factoring]] of code, this may be in preparation for more features being added, but …"
    },
    {
      "type": "reference",
      "id": "c6a676b59bd441fa",
      "site": "wiki.ralfbarkow.ch",
      "slug": "drag-refactoring",
      "title": "Drag Refactoring",
      "text": "We continue to suffer under one poor choice I (Ward) made early in the project: drag refactoring. This was a design goal. I had hoped that a carelessly organized set of pages could be drag and drop refactored into a better design."
    },
    {
      "type": "reference",
      "id": "731bf1d3e03d552e",
      "site": "ward.asia.wiki.org",
      "slug": "end-drag-refactoring",
      "title": "End Drag Refactoring",
      "text": "We continue to suffer under one poor choice I made early in the project: drag refactoring. This was a design goal. I had hoped that a carelessly organized set of pages could be drag and drop refactored into a better design."
    },
    {
      "type": "markdown",
      "id": "81a352a55f05f2b1",
      "text": "> [[Copy]]ing a paragraph is made hard too since you have to remember to hold the shift key down while dragging and ignore the fact that it seems to have moved the item anyway (It hasn't, refresh to see that.)\n"
    },
    {
      "type": "paragraph",
      "id": "2cc50b8d7e425041",
      "text": "Here we are not interested in the shift key down topic. We focus on putting a paragraph into separate frames (pages)."
    },
    {
      "type": "reference",
      "id": "48056bb9af49ae90",
      "site": "wiki.ralfbarkow.ch",
      "slug": "arrangement",
      "title": "Arrangement",
      "text": "To complete an operational description of round- and [[square-brackets]], we will need an axiom that specifies how the two boundaries interact in configurations more complex than the double nesting of [[Inversion]]. Here is the James axiom of Arrangement. The axiom specifies an invariant structure across frames."
    },
    {
      "type": "markdown",
      "id": "8529156add09189b",
      "text": "> The Arrangement axiom gives permission to take multiple forms out of the interior content of a frame and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their frame type, (A [...]) — along with them."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "How to Delete Structure",
        "story": []
      },
      "date": 1701957223325
    },
    {
      "item": {
        "type": "factory",
        "id": "e4c9bbca230ac7a4"
      },
      "id": "e4c9bbca230ac7a4",
      "type": "add",
      "date": 1701957225259
    },
    {
      "type": "edit",
      "id": "e4c9bbca230ac7a4",
      "item": {
        "type": "reference",
        "id": "e4c9bbca230ac7a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "delete",
        "title": "delete",
        "text": "* [[Structure]] ⇒ [[Pattern-Matching]]"
      },
      "date": 1701957230497
    },
    {
      "type": "edit",
      "id": "e4c9bbca230ac7a4",
      "item": {
        "type": "reference",
        "id": "e4c9bbca230ac7a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "delete",
        "title": "delete",
        "text": "[[Structure]] ⇒ [[Pattern-Matching]]"
      },
      "date": 1701957239688
    },
    {
      "item": {
        "type": "factory",
        "id": "ffcb7d9a945140aa"
      },
      "id": "ffcb7d9a945140aa",
      "type": "add",
      "after": "e4c9bbca230ac7a4",
      "date": 1701957844717
    },
    {
      "type": "edit",
      "id": "ffcb7d9a945140aa",
      "item": {
        "type": "graphviz",
        "id": "ffcb7d9a945140aa",
        "text": "DOT FROM two-level-diagram\n"
      },
      "date": 1701957847433
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1701957992748
    },
    {
      "item": {
        "type": "factory",
        "id": "20e234fbf8290a9b"
      },
      "id": "20e234fbf8290a9b",
      "type": "add",
      "after": "ffcb7d9a945140aa",
      "date": 1701966146366
    },
    {
      "id": "20e234fbf8290a9b",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "ffcb7d9a945140aa"
      ],
      "date": 1701966153622
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "conic Arithmetic"
      },
      "date": 1701966222712
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of structure based on Wiliam Bricken's i[[Iconic Arithmetic]]. "
      },
      "date": 1701966246260
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of structure based on Wiliam Bricken's [[Iconic Arithmetic]]. "
      },
      "date": 1701966256510
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of structure based on [[William Bricken]]'s [[Iconic Arithmetic]]. "
      },
      "date": 1701966302995
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of [[Structure]] based on [[William Bricken]]'s [[Iconic Arithmetic]]. "
      },
      "date": 1701966322172
    },
    {
      "type": "edit",
      "id": "e4c9bbca230ac7a4",
      "item": {
        "type": "reference",
        "id": "e4c9bbca230ac7a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "delete",
        "title": "delete",
        "text": "Structure ⇒ [[Pattern-Matching]]"
      },
      "date": 1701966455377
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of structure based on [[William Bricken]]'s [[Iconic Arithmetic]]. "
      },
      "date": 1701966464027
    },
    {
      "type": "edit",
      "id": "e4c9bbca230ac7a4",
      "item": {
        "type": "reference",
        "id": "e4c9bbca230ac7a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "delete",
        "title": "delete",
        "text": "Structure ⇒ Pattern-Matching"
      },
      "date": 1701966488733
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1701967092309
    },
    {
      "type": "fork",
      "date": 1701967094583
    },
    {
      "id": "135e0eab7e2dbdb2",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "135e0eab7e2dbdb2",
        "text": "The [[frame-type]] is [[Structure]] *between* round- and [[square-brackets]]. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. (p. 198)"
      },
      "after": "20e234fbf8290a9b",
      "attribution": {
        "page": "2023-12-07"
      },
      "date": 1701967449264
    },
    {
      "type": "edit",
      "id": "135e0eab7e2dbdb2",
      "item": {
        "type": "markdown",
        "id": "135e0eab7e2dbdb2",
        "text": "The [[frame-type]] is structure *between* round- and [[square-brackets]]. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. (p. 198)"
      },
      "date": 1701967466619
    },
    {
      "type": "edit",
      "id": "135e0eab7e2dbdb2",
      "item": {
        "type": "markdown",
        "id": "135e0eab7e2dbdb2",
        "text": "The [[frame-type]] is structure *between* round- and square-brackets. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. (p. 198)"
      },
      "date": 1701967505125
    },
    {
      "type": "edit",
      "id": "135e0eab7e2dbdb2",
      "item": {
        "type": "markdown",
        "id": "135e0eab7e2dbdb2",
        "text": "The [[Frame Type]] is structure *between* round- and square-brackets. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. (p. 198)"
      },
      "date": 1701967557120
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1701968522648
    },
    {
      "item": {
        "type": "factory",
        "id": "c6a676b59bd441fa"
      },
      "id": "c6a676b59bd441fa",
      "type": "add",
      "after": "ffcb7d9a945140aa",
      "date": 1701974921503
    },
    {
      "type": "edit",
      "id": "c6a676b59bd441fa",
      "item": {
        "type": "reference",
        "id": "c6a676b59bd441fa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "drag-refactoring",
        "title": "Drag Refactoring",
        "text": "We continue to suffer under one poor choice I made early in the project: drag refactoring. This was a design goal. I had hoped that a carelessly organized set of pages could be drag and drop refactored into a better design."
      },
      "date": 1701974931090
    },
    {
      "type": "edit",
      "id": "c6a676b59bd441fa",
      "item": {
        "type": "reference",
        "id": "c6a676b59bd441fa",
        "site": "wiki.ralfbarkow.ch",
        "slug": "drag-refactoring",
        "title": "Drag Refactoring",
        "text": "We continue to suffer under one poor choice I (Ward) made early in the project: drag refactoring. This was a design goal. I had hoped that a carelessly organized set of pages could be drag and drop refactored into a better design."
      },
      "date": 1701974960780
    },
    {
      "id": "81a352a55f05f2b1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "81a352a55f05f2b1",
        "text": "[[Copy]]ing a paragraph is made hard too since you have to remember to hold the shift key down while dragging and ignore the fact that it seems to have moved the item anyway (It hasn't, refresh to see that.)\n"
      },
      "after": "c6a676b59bd441fa",
      "attribution": {
        "page": "End Drag Refactoring"
      },
      "date": 1701975049715
    },
    {
      "item": {
        "type": "factory",
        "id": "731bf1d3e03d552e"
      },
      "id": "731bf1d3e03d552e",
      "type": "add",
      "after": "81a352a55f05f2b1",
      "date": 1701975172821
    },
    {
      "type": "edit",
      "id": "731bf1d3e03d552e",
      "item": {
        "type": "reference",
        "id": "731bf1d3e03d552e",
        "site": "ward.asia.wiki.org",
        "slug": "end-drag-refactoring",
        "title": "End Drag Refactoring",
        "text": "We continue to suffer under one poor choice I made early in the project: drag refactoring. This was a design goal. I had hoped that a carelessly organized set of pages could be drag and drop refactored into a better design."
      },
      "date": 1701975196550
    },
    {
      "id": "731bf1d3e03d552e",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "135e0eab7e2dbdb2",
        "ffcb7d9a945140aa",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1"
      ],
      "date": 1701975199162
    },
    {
      "type": "edit",
      "id": "81a352a55f05f2b1",
      "item": {
        "type": "paragraph",
        "id": "81a352a55f05f2b1",
        "text": "> Here we are not interested in the shift key down topic.[[Copy]]ing a paragraph is made hard too since you have to remember to hold the shift key down while dragging and ignore the fact that it seems to have moved the item anyway (It hasn't, refresh to see that.)\n"
      },
      "date": 1701975209782
    },
    {
      "type": "edit",
      "id": "81a352a55f05f2b1",
      "item": {
        "type": "paragraph",
        "id": "81a352a55f05f2b1",
        "text": "> [[Copy]]ing a paragraph is made hard too since you have to remember to hold the shift key down while dragging and ignore the fact that it seems to have moved the item anyway (It hasn't, refresh to see that.)\n"
      },
      "date": 1701975217700
    },
    {
      "type": "edit",
      "id": "748c438c3350f4c4",
      "item": {
        "type": "paragraph",
        "id": "748c438c3350f4c4",
        "text": "Here we are not interested in the shift key down topic."
      },
      "date": 1701975220706
    },
    {
      "type": "edit",
      "id": "81a352a55f05f2b1",
      "item": {
        "type": "markdown",
        "id": "81a352a55f05f2b1",
        "text": "> [[Copy]]ing a paragraph is made hard too since you have to remember to hold the shift key down while dragging and ignore the fact that it seems to have moved the item anyway (It hasn't, refresh to see that.)\n"
      },
      "date": 1701975223598
    },
    {
      "item": {
        "type": "factory",
        "id": "2cc50b8d7e425041"
      },
      "id": "2cc50b8d7e425041",
      "type": "add",
      "after": "81a352a55f05f2b1",
      "date": 1701975393899
    },
    {
      "type": "edit",
      "id": "2cc50b8d7e425041",
      "item": {
        "type": "paragraph",
        "id": "2cc50b8d7e425041",
        "text": "Here we are not interested in the shift key down topic."
      },
      "date": 1701975395566
    },
    {
      "item": {
        "type": "factory",
        "id": "48056bb9af49ae90"
      },
      "id": "48056bb9af49ae90",
      "type": "add",
      "after": "2cc50b8d7e425041",
      "date": 1701975493529
    },
    {
      "type": "edit",
      "id": "48056bb9af49ae90",
      "item": {
        "type": "reference",
        "id": "48056bb9af49ae90",
        "site": "wiki.ralfbarkow.ch",
        "slug": "arrangement",
        "title": "Arrangement",
        "text": "To complete an operational description of round- and [[square-brackets]], we will need an axiom that specifies how the two boundaries interact in configurations more complex than the double nesting of [[Inversion]]. Here is the James axiom of Arrangement. The axiom specifies an invariant structure across frames."
      },
      "date": 1701975499586
    },
    {
      "id": "8529156add09189b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8529156add09189b",
        "text": "The Arrangement axiom gives permission to take multiple forms out of the interior content of a frame and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their frame type, (A [...]) — along with them."
      },
      "after": "48056bb9af49ae90",
      "attribution": {
        "page": "Arrangement"
      },
      "date": 1701975507512
    },
    {
      "type": "edit",
      "id": "8529156add09189b",
      "item": {
        "type": "paragraph",
        "id": "8529156add09189b",
        "text": "> The Arrangement axiom gives permission to take multiple forms out of the interior content of a frame and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their frame type, (A [...]) — along with them."
      },
      "date": 1701975512626
    },
    {
      "type": "edit",
      "id": "2cc50b8d7e425041",
      "item": {
        "type": "paragraph",
        "id": "2cc50b8d7e425041",
        "text": "Here we are not interested in the shift key down topic. We focus on putting a paragraph into separate frames (pages)."
      },
      "date": 1701975592792
    },
    {
      "type": "edit",
      "id": "8529156add09189b",
      "item": {
        "type": "markdown",
        "id": "8529156add09189b",
        "text": "> The Arrangement axiom gives permission to take multiple forms out of the interior content of a frame and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their frame type, (A [...]) — along with them."
      },
      "date": 1701975594350
    },
    {
      "item": {
        "type": "factory",
        "id": "7598e27db30bff55"
      },
      "id": "7598e27db30bff55",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1701975656176
    },
    {
      "type": "edit",
      "id": "7598e27db30bff55",
      "item": {
        "type": "reference",
        "id": "7598e27db30bff55",
        "site": "found.ward.bay.wiki.org",
        "slug": "guiding-diagrams",
        "title": "Guiding Diagrams",
        "text": "We've equipped wiki with a means to draw pictures of work in progress that can guide this work to completion."
      },
      "date": 1701975659602
    },
    {
      "id": "7598e27db30bff55",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "135e0eab7e2dbdb2",
        "ffcb7d9a945140aa",
        "7598e27db30bff55",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1701975673925
    },
    {
      "item": {
        "type": "factory",
        "id": "0a10b5f2c5a67164"
      },
      "id": "0a10b5f2c5a67164",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1701975740297
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[two-level-diagram]] above is a"
      },
      "date": 1701975754767
    },
    {
      "id": "0a10b5f2c5a67164",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "135e0eab7e2dbdb2",
        "ffcb7d9a945140aa",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1701975760619
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[two-level-diagram]] above is one of the [[Guiding Diagrams]]"
      },
      "date": 1701975782224
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[Two Level Diagram]] above is one of the [[Guiding Diagrams]]"
      },
      "date": 1701975799480
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[Two Level Diagram]] above is one of the [[Guiding Diagrams]]. They are a means of drawing pictures of work in progress that can accompany this work until completion."
      },
      "date": 1701975860266
    },
    {
      "item": {
        "type": "factory",
        "id": "ce8e97d82ae63fc7"
      },
      "id": "ce8e97d82ae63fc7",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1701975899845
    },
    {
      "type": "edit",
      "id": "ce8e97d82ae63fc7",
      "item": {
        "type": "reference",
        "id": "ce8e97d82ae63fc7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "wiki-refactoring",
        "title": "Wiki Refactoring",
        "text": "Sometimes Wiki pages get rearranged or reorganized. Sometimes we call this refactoring. Sometimes the information content of the Wiki is not being changed, it is just being reorganized, i.e. the design or architecture of the Wiki is being improved. Like [[Extreme Programming]] [[Re Factoring]] of code, this may be in preparation for more features being added, but"
      },
      "date": 1701975905458
    },
    {
      "id": "ce8e97d82ae63fc7",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "135e0eab7e2dbdb2",
        "ffcb7d9a945140aa",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1701975913756
    },
    {
      "type": "add",
      "id": "344d747161747bcc",
      "item": {
        "type": "paragraph",
        "id": "344d747161747bcc",
        "text": "[…] when they rave about how many lines of code they were able to delete."
      },
      "after": "0a10b5f2c5a67164",
      "date": 1701984279204
    },
    {
      "id": "344d747161747bcc",
      "type": "move",
      "order": [
        "e4c9bbca230ac7a4",
        "20e234fbf8290a9b",
        "135e0eab7e2dbdb2",
        "ffcb7d9a945140aa",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1701984283361
    },
    {
      "type": "add",
      "id": "0a182a1f31e94c60",
      "item": {
        "type": "paragraph",
        "id": "0a182a1f31e94c60",
        "text": "FOWLER, Martin, BECK, Kent and BRANT, John, [no date]. Refactoring: Improving the Design of Existing Code.\n"
      },
      "after": "344d747161747bcc",
      "date": 1701984317630
    },
    {
      "type": "edit",
      "id": "344d747161747bcc",
      "item": {
        "type": "paragraph",
        "id": "344d747161747bcc",
        "text": "[…] when they rave about how many lines of code they were able to delete. ([[Refactoring Improving The Design Of Existing Code]])"
      },
      "date": 1701984463038
    },
    {
      "type": "remove",
      "id": "0a182a1f31e94c60",
      "date": 1701984466102
    },
    {
      "type": "edit",
      "id": "7598e27db30bff55",
      "item": {
        "type": "reference",
        "id": "7598e27db30bff55",
        "site": "found.ward.bay.wiki.org",
        "slug": "guiding-diagrams",
        "title": "Guiding Diagrams",
        "text": "Bonus content, [[Wiki's Robot Scouts]]"
      },
      "date": 1701984633392
    },
    {
      "type": "add",
      "id": "3a148c9e7c669282",
      "item": {
        "type": "paragraph",
        "id": "3a148c9e7c669282",
        "text": "The [[Wiki's Robot Scouts]] should help us to delete code and/or text."
      },
      "after": "344d747161747bcc",
      "date": 1701984702089
    },
    {
      "type": "edit",
      "id": "ce8e97d82ae63fc7",
      "item": {
        "type": "reference",
        "id": "ce8e97d82ae63fc7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "wiki-refactoring",
        "title": "Wiki Refactoring",
        "text": "Sometimes Wiki pages get rearranged or reorganized. Sometimes we call this refactoring. Sometimes the information content of the Wiki is not being changed, it is just being reorganized, i.e. the design or architecture of the Wiki is being improved. Like [[Extreme Programming]] [[Re Factoring]] of code, this may be in preparation for more features being added, but …"
      },
      "date": 1701984737196
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702016779247
    },
    {
      "type": "remove",
      "id": "ffcb7d9a945140aa",
      "date": 1702016789825
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[Two Level Diagram]]  is one of the [[Guiding Diagrams]]. They are a means of drawing pictures of work in progress that can accompany this work until completion."
      },
      "date": 1702016795770
    },
    {
      "type": "edit",
      "id": "0a10b5f2c5a67164",
      "item": {
        "type": "paragraph",
        "id": "0a10b5f2c5a67164",
        "text": "The [[Two Level Diagram]] is one of the [[Guiding Diagrams]]. They are a means of drawing pictures of work in progress that can accompany this work until completion."
      },
      "date": 1702016805281
    },
    {
      "id": "e4c9bbca230ac7a4",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "135e0eab7e2dbdb2",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702016816454
    },
    {
      "type": "edit",
      "id": "20e234fbf8290a9b",
      "item": {
        "type": "paragraph",
        "id": "20e234fbf8290a9b",
        "text": "To open up this question, we fall back on a concept of structure based on [[William Bricken]]'s [[Iconic Arithmetic]]."
      },
      "date": 1702017272129
    },
    {
      "type": "add",
      "id": "10313693f3e5e4bc",
      "item": {
        "type": "paragraph",
        "id": "10313693f3e5e4bc",
        "text": "Brackets"
      },
      "after": "20e234fbf8290a9b",
      "date": 1702017274966
    },
    {
      "id": "10313693f3e5e4bc",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "135e0eab7e2dbdb2",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017276985
    },
    {
      "type": "edit",
      "id": "10313693f3e5e4bc",
      "item": {
        "type": "paragraph",
        "id": "10313693f3e5e4bc",
        "text": "# Brackets"
      },
      "date": 1702017311211
    },
    {
      "type": "edit",
      "id": "10313693f3e5e4bc",
      "item": {
        "type": "markdown",
        "id": "10313693f3e5e4bc",
        "text": "# Brackets"
      },
      "date": 1702017312736
    },
    {
      "item": {
        "type": "factory",
        "id": "28dcfc2087e59700"
      },
      "id": "28dcfc2087e59700",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1702017317909
    },
    {
      "type": "edit",
      "id": "28dcfc2087e59700",
      "item": {
        "type": "reference",
        "id": "28dcfc2087e59700",
        "site": "wiki.ralfbarkow.ch",
        "slug": "brackets",
        "title": "Brackets",
        "text": "The order of magnitude of a digit within a conventional number identifies how many times that digit is multiplied by ten. Instead of increasing the power of a digit by moving to the next position on the left (thousands, hundreds, tens, units), depth-value increases power by depth of nesting. Crossing a boundary outward changes the order of magnitude by one power-of-ten, more generally by one power of an arbitrary base. 5283 in [[Positional Notation]] is (((5)2)8)3 in [[Depth-Value Notation]]. The depth-value form of 5003 is (((5)))3. …"
      },
      "date": 1702017320736
    },
    {
      "id": "28dcfc2087e59700",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "28dcfc2087e59700",
        "135e0eab7e2dbdb2",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017330027
    },
    {
      "item": {
        "type": "factory",
        "id": "84e033c82ecef16e"
      },
      "id": "84e033c82ecef16e",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1702017337418
    },
    {
      "id": "84e033c82ecef16e",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "28dcfc2087e59700",
        "135e0eab7e2dbdb2",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017353866
    },
    {
      "type": "edit",
      "id": "84e033c82ecef16e",
      "item": {
        "type": "pagefold",
        "id": "84e033c82ecef16e",
        "text": "~"
      },
      "date": 1702017357255
    },
    {
      "id": "135e0eab7e2dbdb2",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "135e0eab7e2dbdb2",
        "28dcfc2087e59700",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017414896
    },
    {
      "item": {
        "type": "factory",
        "id": "fc08017dd0cb73c2"
      },
      "id": "fc08017dd0cb73c2",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1702017422984
    },
    {
      "type": "edit",
      "id": "fc08017dd0cb73c2",
      "item": {
        "type": "reference",
        "id": "fc08017dd0cb73c2",
        "site": "wiki.ralfbarkow.ch",
        "slug": "order-of-magnitude",
        "title": "Order of Magnitude",
        "text": "The order of magnitude of a digit within a conventional number identifies how many times that digit is multiplied by ten. Instead of increasing the power of a digit by moving to the next position on the left (thousands, hundreds, tens, units), depth-value increases power by depth of nesting. Crossing a boundary outward changes the order of magnitude by one power-of-ten, more generally by one power of an arbitrary base. 5283 in [[Positional Notation]] is (((5)2)8)3 in [[Depth-Value Notation]]. The depth-value form of 5003 is (((5)))3. The absence of a dig"
      },
      "date": 1702017430245
    },
    {
      "id": "fc08017dd0cb73c2",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "135e0eab7e2dbdb2",
        "28dcfc2087e59700",
        "fc08017dd0cb73c2",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017442751
    },
    {
      "id": "d9c64011c613be17",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d9c64011c613be17",
        "text": "Do not be concerned by the extra burden of [[Brackets]]. Positional notation has the same burden. By convention we do not write the meanings of the left-to-right positions within the number. Instead we spend years as children learning to see them implicitly. With familiarity, the brackets too can be implicit. For example, the leading open parentheses can easily be omitted to yield, for example,"
      },
      "after": "fc08017dd0cb73c2",
      "attribution": {
        "page": "Order of Magnitude",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1702017451547
    },
    {
      "type": "edit",
      "id": "d9c64011c613be17",
      "item": {
        "type": "paragraph",
        "id": "d9c64011c613be17",
        "text": "> Do not be concerned by the extra burden of [[Brackets]]. Positional notation has the same burden. By convention we do not write the meanings of the left-to-right positions within the number. Instead we spend years as children learning to see them implicitly. With familiarity, the brackets too can be implicit. For example, the leading open parentheses can easily be omitted to yield, for example,"
      },
      "date": 1702017457177
    },
    {
      "type": "edit",
      "id": "d9c64011c613be17",
      "item": {
        "type": "markdown",
        "id": "d9c64011c613be17",
        "text": "> Do not be concerned by the extra burden of [[Brackets]]. Positional notation has the same burden. By convention we do not write the meanings of the left-to-right positions within the number. Instead we spend years as children learning to see them implicitly. With familiarity, the brackets too can be implicit. For example, the leading open parentheses can easily be omitted to yield, for example,"
      },
      "date": 1702017458377
    },
    {
      "id": "4c114d1da0daff3c",
      "type": "add",
      "item": {
        "type": "code",
        "id": "4c114d1da0daff3c",
        "text": "5)2)8)3 ☞ 5283"
      },
      "after": "d9c64011c613be17",
      "attribution": {
        "page": "Order of Magnitude",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1702017481923
    },
    {
      "id": "f11e0ecada79e426",
      "type": "add",
      "item": {
        "type": "image",
        "id": "f11e0ecada79e426",
        "text": "Figure 3-1: Place-value to depth-value",
        "size": "wide",
        "width": 430,
        "height": 211,
        "url": "/assets/plugins/image/cde073ff9a9b9754a61fce3f2181da7f.jpg"
      },
      "after": "4c114d1da0daff3c",
      "attribution": {
        "page": "Order of Magnitude",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1702017511431
    },
    {
      "id": "fb799776ac1ab3e5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "fb799776ac1ab3e5",
        "text": "Figure 3-1 shows an example of the conversion from place-value to depth-value notation. Place-value is an abbreviation for numbers rendered as polynomial expressions, while depth-value is an abbreviation for numbers rendered as factored expressions. For convenience, we’ll consider both ensemble and depth-value forms to be implicitly bounded by a value-neutral container.8"
      },
      "after": "f11e0ecada79e426",
      "attribution": {
        "page": "Order of Magnitude",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1702017516867
    },
    {
      "type": "edit",
      "id": "fb799776ac1ab3e5",
      "item": {
        "type": "paragraph",
        "id": "fb799776ac1ab3e5",
        "text": "Figure 3-1 shows an example of the conversion from place-value to depth-value notation. Place-value is an abbreviation for numbers rendered as polynomial expressions, while depth-value is an abbreviation for numbers rendered as factored expressions. For convenience, we’ll consider both ensemble and depth-value forms to be implicitly bounded by a value-neutral container."
      },
      "date": 1702017530852
    },
    {
      "type": "add",
      "id": "51ae002e0d88f628",
      "item": {
        "type": "paragraph",
        "id": "51ae002e0d88f628",
        "text": "We consider forms to be implicitly limited by a value-neutral container."
      },
      "after": "fb799776ac1ab3e5",
      "date": 1702017652768
    },
    {
      "type": "add",
      "id": "93ca20c35e353a1e",
      "item": {
        "type": "paragraph",
        "id": "93ca20c35e353a1e",
        "text": "Structure between [[Brackets]]"
      },
      "after": "20e234fbf8290a9b",
      "date": 1702017711049
    },
    {
      "id": "93ca20c35e353a1e",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "93ca20c35e353a1e",
        "135e0eab7e2dbdb2",
        "28dcfc2087e59700",
        "fc08017dd0cb73c2",
        "d9c64011c613be17",
        "4c114d1da0daff3c",
        "f11e0ecada79e426",
        "fb799776ac1ab3e5",
        "51ae002e0d88f628",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017713351
    },
    {
      "type": "edit",
      "id": "135e0eab7e2dbdb2",
      "item": {
        "type": "markdown",
        "id": "135e0eab7e2dbdb2",
        "text": "The [[Frame Type]] is structure *between* round- and square-brackets. The generic template collapses if either the type or the content is void-equivalent. There are categories of [[Frames]] that all have the same frame-type. In Arrangement [[collect]] gathers together framed-content that has in common the same frame-type. ([[Iconic Arithmetic]], Vol. 1, p. 198)"
      },
      "date": 1702017747788
    },
    {
      "type": "edit",
      "id": "51ae002e0d88f628",
      "item": {
        "type": "paragraph",
        "id": "51ae002e0d88f628",
        "text": "We consider forms to be implicitly limited by a value-neutral [[Container]]."
      },
      "date": 1702017805406
    },
    {
      "id": "9ec62c163c5c0c9a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9ec62c163c5c0c9a",
        "text": "Of course, most of us do conceptualize sets in terms of Container schemas, and that is perfectly consistent with the axioms given above. However, when we conceptualize sets as Container schemas, a constraint follows automatically: Sets cannot be members of themselves, since containers cannot be inside themselves. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "after": "51ae002e0d88f628",
      "attribution": {
        "page": "Container",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1702017893821
    },
    {
      "type": "edit",
      "id": "9ec62c163c5c0c9a",
      "item": {
        "type": "paragraph",
        "id": "9ec62c163c5c0c9a",
        "text": "> […], most of us do conceptualize sets in terms of Container schemas, and that is perfectly consistent with the axioms given above. However, when we conceptualize sets as Container schemas, a constraint follows automatically: Sets cannot be members of themselves, since containers cannot be inside themselves. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "date": 1702017918117
    },
    {
      "type": "edit",
      "id": "9ec62c163c5c0c9a",
      "item": {
        "type": "markdown",
        "id": "9ec62c163c5c0c9a",
        "text": "> […], most of us do conceptualize sets in terms of Container schemas, and that is perfectly consistent with the axioms given above. However, when we conceptualize sets as Container schemas, a constraint follows automatically: Sets cannot be members of themselves, since containers cannot be inside themselves. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "date": 1702017919640
    },
    {
      "item": {
        "type": "factory",
        "id": "c0b007d5ac52724c"
      },
      "id": "c0b007d5ac52724c",
      "type": "add",
      "after": "8529156add09189b",
      "date": 1702017926152
    },
    {
      "type": "edit",
      "id": "c0b007d5ac52724c",
      "item": {
        "type": "reference",
        "id": "c0b007d5ac52724c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container",
        "title": "Container",
        "text": "The concept of a container is tangible, not abstract."
      },
      "date": 1702017929059
    },
    {
      "id": "c0b007d5ac52724c",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "93ca20c35e353a1e",
        "135e0eab7e2dbdb2",
        "28dcfc2087e59700",
        "fc08017dd0cb73c2",
        "d9c64011c613be17",
        "4c114d1da0daff3c",
        "f11e0ecada79e426",
        "fb799776ac1ab3e5",
        "51ae002e0d88f628",
        "9ec62c163c5c0c9a",
        "c0b007d5ac52724c",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702017937842
    },
    {
      "type": "edit",
      "id": "9ec62c163c5c0c9a",
      "item": {
        "type": "markdown",
        "id": "9ec62c163c5c0c9a",
        "text": "> […], most of us do conceptualize sets in terms of Container schemas, […]. However, when we conceptualize sets as Container schemas, a constraint follows automatically: Sets cannot be members of themselves, since containers cannot be inside themselves. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "date": 1702017955785
    },
    {
      "type": "edit",
      "id": "9ec62c163c5c0c9a",
      "item": {
        "type": "markdown",
        "id": "9ec62c163c5c0c9a",
        "text": "> […], most of us do conceptualize sets in terms of Container schemas, […]. However, when we conceptualize sets as Container schemas, a constraint follows automatically: **Sets cannot be members of themselves**, since containers cannot be inside themselves. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "date": 1702017995996
    },
    {
      "type": "edit",
      "id": "9ec62c163c5c0c9a",
      "item": {
        "type": "markdown",
        "id": "9ec62c163c5c0c9a",
        "text": "> […], most of us do conceptualize sets in terms of Container schemas, […]. However, when we conceptualize sets as Container schemas, a constraint follows automatically: **Sets cannot be members of themselves**, since **containers cannot be inside themselves**. Strictly speaking, this constraint does not follow from the axioms but from our metaphorical understanding of sets in terms of containers. The axioms do not rule out sets that contain themselves. However, an extra axiom was proposed by von Neumann that does rule out this possibility."
      },
      "date": 1702018012582
    },
    {
      "type": "edit",
      "id": "93ca20c35e353a1e",
      "item": {
        "type": "paragraph",
        "id": "93ca20c35e353a1e",
        "text": "## Structure between [[Brackets]]"
      },
      "date": 1702018033681
    },
    {
      "type": "edit",
      "id": "93ca20c35e353a1e",
      "item": {
        "type": "markdown",
        "id": "93ca20c35e353a1e",
        "text": "## Structure between [[Brackets]]"
      },
      "date": 1702018035120
    },
    {
      "type": "add",
      "id": "f94dfe97c527dd04",
      "item": {
        "type": "paragraph",
        "id": "f94dfe97c527dd04",
        "text": "It can collapse"
      },
      "after": "20e234fbf8290a9b",
      "date": 1702018107764
    },
    {
      "type": "edit",
      "id": "f94dfe97c527dd04",
      "item": {
        "type": "paragraph",
        "id": "f94dfe97c527dd04",
        "text": "It can collapse because of legal, abuse, malware or security reasons as well."
      },
      "date": 1702018121255
    },
    {
      "type": "edit",
      "id": "f94dfe97c527dd04",
      "item": {
        "type": "paragraph",
        "id": "f94dfe97c527dd04",
        "text": "It can also collapse for legal reasons, misuse, malware or security reasons."
      },
      "date": 1702018134798
    },
    {
      "id": "f94dfe97c527dd04",
      "type": "move",
      "order": [
        "20e234fbf8290a9b",
        "e4c9bbca230ac7a4",
        "10313693f3e5e4bc",
        "93ca20c35e353a1e",
        "135e0eab7e2dbdb2",
        "f94dfe97c527dd04",
        "28dcfc2087e59700",
        "fc08017dd0cb73c2",
        "d9c64011c613be17",
        "4c114d1da0daff3c",
        "f11e0ecada79e426",
        "fb799776ac1ab3e5",
        "51ae002e0d88f628",
        "9ec62c163c5c0c9a",
        "c0b007d5ac52724c",
        "84e033c82ecef16e",
        "0a10b5f2c5a67164",
        "7598e27db30bff55",
        "344d747161747bcc",
        "3a148c9e7c669282",
        "ce8e97d82ae63fc7",
        "c6a676b59bd441fa",
        "731bf1d3e03d552e",
        "81a352a55f05f2b1",
        "2cc50b8d7e425041",
        "48056bb9af49ae90",
        "8529156add09189b"
      ],
      "date": 1702018137690
    },
    {
      "type": "edit",
      "id": "f94dfe97c527dd04",
      "item": {
        "type": "paragraph",
        "id": "f94dfe97c527dd04",
        "text": "It can also collapse because of legal, abuse, malware or security reasons. "
      },
      "date": 1702018163880
    },
    {
      "type": "edit",
      "id": "f94dfe97c527dd04",
      "item": {
        "type": "paragraph",
        "id": "f94dfe97c527dd04",
        "text": "It can also collapse for legal reasons, misuse, malware or security reasons. "
      },
      "date": 1702018183467
    },
    {
      "type": "edit",
      "id": "28dcfc2087e59700",
      "item": {
        "type": "reference",
        "id": "28dcfc2087e59700",
        "site": "wiki.ralfbarkow.ch",
        "slug": "brackets",
        "title": "Brackets",
        "text": "The order of magnitude of a digit within a conventional number identifies …"
      },
      "date": 1702018235065
    },
    {
      "type": "edit",
      "id": "fc08017dd0cb73c2",
      "item": {
        "type": "reference",
        "id": "fc08017dd0cb73c2",
        "site": "wiki.ralfbarkow.ch",
        "slug": "order-of-magnitude",
        "title": "Order of Magnitude",
        "text": "of a digit within a conventional number identifies how many times that digit is multiplied by ten. Instead of increasing the power of a digit by moving to the next position on the left (thousands, hundreds, tens, units), depth-value increases power by depth of nesting. Crossing a boundary outward changes the order of magnitude by one power-of-ten, more generally by one power of an arbitrary base. 5283 in [[Positional Notation]] is (((5)2)8)3 in [[Depth-Value Notation]]. The depth-value form of 5003 is (((5)))3. The absence of a dig"
      },
      "date": 1702018244848
    },
    {
      "type": "edit",
      "id": "fc08017dd0cb73c2",
      "item": {
        "type": "reference",
        "id": "fc08017dd0cb73c2",
        "site": "wiki.ralfbarkow.ch",
        "slug": "order-of-magnitude",
        "title": "Order of Magnitude",
        "text": "of a digit within a conventional number identifies how many times that digit is multiplied by ten. Instead of increasing the power of a digit by moving to the next position on the left (thousands, hundreds, tens, units), depth-value increases power by depth of nesting. Crossing a boundary outward changes the order of magnitude by one power-of-ten, more generally by one power of an arbitrary base. 5283 in [[Positional Notation]] is (((5)2)8)3 in [[Depth-Value Notation]]. The depth-value form of 5003 is (((5)))3. …"
      },
      "date": 1702018264373
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702018353093
    },
    {
      "type": "edit",
      "id": "e4c9bbca230ac7a4",
      "item": {
        "type": "reference",
        "id": "e4c9bbca230ac7a4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "delete",
        "title": "delete",
        "text": "[[Structure]] ⇒ [[Pattern-Matching]]"
      },
      "date": 1702018427477
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702045070231
    }
  ]
}