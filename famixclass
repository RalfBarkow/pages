{
  "title": "FAMIXClass",
  "story": [
    {
      "type": "paragraph",
      "id": "a2d742b4aa62d33c",
      "text": "[[FAMIXClass]] represents an entity which can build new instances. A FAMIXClass is a FAMIXType, therefore it is involved in super/sub types relationships (depending on the language) and it holds attributes, methods.\n\n[[FAMIX]] does not model explicitly interfaces, but a FAMIXClass can represent a Java interface by setting the isInterface property.\n\nA class is typically scoped in a namespace. To model nested or anonymous classes, extractors can set the container of classes to classes or methods, respectively."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "FAMIXClass",
        "story": []
      },
      "date": 1644231472184
    },
    {
      "item": {
        "type": "factory",
        "id": "a2d742b4aa62d33c"
      },
      "id": "a2d742b4aa62d33c",
      "type": "add",
      "date": 1644231480044
    },
    {
      "type": "edit",
      "id": "a2d742b4aa62d33c",
      "item": {
        "type": "paragraph",
        "id": "a2d742b4aa62d33c",
        "text": "FAMIXClass represents an entity which can build new instances. A FAMIXClass is a FAMIXType, therefore it is involved in super/sub types relationships (depending on the language) and it holds attributes, methods.\n\nFAMIX does not model explicitly interfaces, but a FAMIXClass can represent a Java interface by setting the isInterface property.\n\nA class is typically scoped in a namespace. To model nested or anonymous classes, extractors can set the container of classes to classes or methods, respectively."
      },
      "date": 1644231481240
    },
    {
      "type": "edit",
      "id": "a2d742b4aa62d33c",
      "item": {
        "type": "paragraph",
        "id": "a2d742b4aa62d33c",
        "text": "[[FAMIXClass]] represents an entity which can build new instances. A FAMIXClass is a FAMIXType, therefore it is involved in super/sub types relationships (depending on the language) and it holds attributes, methods.\n\n[[FAMIX]] does not model explicitly interfaces, but a FAMIXClass can represent a Java interface by setting the isInterface property.\n\nA class is typically scoped in a namespace. To model nested or anonymous classes, extractors can set the container of classes to classes or methods, respectively."
      },
      "date": 1644231510584
    }
  ]
}