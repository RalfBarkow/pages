{
  "title": "Automation Is Our Friend",
  "story": [
    {
      "type": "html",
      "text": "If you do it once, great.  If you do it twice, frown.  If you do it three times, automate it. [[Three Strikes And You Automate]].",
      "id": "3e757301e6cd3292957f3379c47b56f1"
    },
    {
      "type": "html",
      "text": "\nEven Unix adherents recognize how ugly and ill tempered their favorite child can be at times.  But no matter how ugly Unix gets, it has a philosophy that makes all that ugliness worthwhile: [[Automation Is Our Friend]].  Everyday tasks that you do over and over can be put into a script so that you can encapsulate the knowledge of how to do them, and invoke that knowledge with a single command.",
      "id": "a063eefd17ae68c7134e64b85c9a1918"
    },
    {
      "type": "html",
      "text": "<i>Find</i> is cryptic.  <i>Sed</i> is amazingly cryptic.  <i>Awk</i> is a world unto its own.  Why put up with these and other Unix tools?  Why do we want to live in a world where -s means something different from -S (and I have to remember which is which)?  Because in this world I can automate routine tasks.",
      "id": "2c13732770310fcd56213d49a8e25df0"
    },
    {
      "type": "html",
      "text": "<i>It would be nice if there were automatable tools that weren't quite so cryptic, though. If find, sed, and awk weren't so cumbersome, they probably would have made it into [[Wide Spread Use]] amongst the masses.</i>",
      "id": "2301e327a2de491e5578e8794b3b5974"
    },
    {
      "type": "html",
      "text": "-- Happily, you can use nice friendly languages like Python or Ruby as a replacement for unix shells and weird cryptic commands",
      "id": "93ac45fb1627a3e70ecbe3f929278f57"
    },
    {
      "type": "html",
      "text": "\nIf configuration files are text, then you can use built-in text manipulation tools to automate repeated processes.  If configuration files are binary, then I'm at the mercy of the configuration program that knows how to manipulate them (it seldom being practical to write a tool for that one type of file).  What manipulation of configuration files might you automate?  Well, how about being able to use <i>diff</i> to see what changed in the configuration file?  How about using <i>patch</i> to automatically change the stock configuration file to your favorite settings?",
      "id": "602bb3f7b3c86609698d638503bfbd33"
    },
    {
      "type": "html",
      "text": "\nAre you using a GUI development environment that turns into a half-hour click-fest when you need to deploy?  If there were command-line tools, you could automate it.  Just start the script and go have coffee.  Better yet, have a cron job start the script at night and send you email when it's done.",
      "id": "3e506486fce3b0c8421389b93d526a8a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8207a59d714f19004cde30ef8550450"
    },
    {
      "type": "html",
      "text": "<i>I personally like it when I've got a nice slick GUI tool for doing things interactively, coupled with an automatable interface such as a CLI. Give me the best of both worlds any day.</i>",
      "id": "672eb6c26c2889d68c9e9e93b07db8eb"
    },
    {
      "type": "html",
      "text": "\nOh, absolutely, yes.  But why do so few GUI tool makers provide CLI tools?",
      "id": "ee864a97378a8652da2820c03b53280a"
    },
    {
      "type": "html",
      "text": "\nHere's why: There is one best way to do it, and the GUI is it.  Providing a CLI tool to do the same things you can do in the GUI would be an admission of personal failure: because GUIs are inherently better, a failure of <i>my</i> GUI to be better for something must mean I didn't do it right.  Better not to provide the tool so I don't have to see the evidence of my failure.",
      "id": "4c6c1cb75fc2af5090a67ca9eb0bc669"
    },
    {
      "type": "html",
      "text": "\nProviding a CLI tool for tasks that need to be automated doesn't make the GUI any worse at what it does, but it openly admits that the GUI isn't the best tool for all tasks.  We'd rather not admit that, so let's not provide a CLI tool.",
      "id": "2e241d2e6a0aeae7b1700c67ace73ab8"
    },
    {
      "type": "html",
      "text": "\nThe other reason is more practical, but not as fun to rant about: The traditional breeding grounds of GUI development tools provide much a weaker command-line environment than Unix, making CLI tools harder to work with.  And yet that practical reason comes from the same mindset: Why do we need to provide a strong command-line environment when we've given you this superior GUI environment?",
      "id": "412e7aa13dcdb94fcdb56722bee853e9"
    },
    {
      "type": "html",
      "text": "<i>I would argue that the DOS command-line environment was weak long before Windows came along. :) That said, the vast majority of users (not programmers) don't really care too much for system-wide automation. At most, they're quite happy with being able to run a \"Record\" feature in their favorite GUI app and just maybe tinker with the resulting macro. Mind you, with the number of times I've seen people doing a [[Mail Merge]] by hand, it looks like they don't bother learning the automation they've already got. If a larger subsection of the market wanted automation, then they'd probably get it. (Note: automation != CLI by default. It's just that it's easier to automate on the command line in many cases)</i>",
      "id": "bbf3203657d7151ac1002ff63a4d84c2"
    },
    {
      "type": "html",
      "text": "<b>But of course.  The problem is, you don't miss what you never use, so how make the masses understand that they're throwing their effort down the waste basket by not automating?</b>",
      "id": "721ddf6488bb3d3eb5afb4a94b31682c"
    },
    {
      "type": "html",
      "text": "\nI rather think the problem is that we humans have pitiful utility functions, especially regarding activities that are incidental to our main goal.  This is why we fail to [[Sharpen The Saw]].  People really do start using automation once the 'price' of setting it up becomes close to the 'price' of one instance of the repeated activity.  ",
      "id": "e1c9d7c10bb338ada6f968d0c8bfc3c3"
    },
    {
      "type": "html",
      "text": " I rarely tell my email client to check for mail.  It was as easy to tell it 'check for mail every x minutes' as it was to tell it to 'check for mail'.  Actually, it was easier, as that was a default setting",
      "id": "44e2b18672dcd0d6298c729161e10fdf"
    },
    {
      "type": "html",
      "text": " I had a vcr, but I never ever taped shows, it was just too much effort.  I got a dvr, now recording shows is as easy as channel surfing, I record often.",
      "id": "248048474fac9bbe167abd6eb18c4d15"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8207a59d714f19004cde30ef8550450"
    },
    {
      "type": "html",
      "text": "<i>OK, Mr. Vendor, you're going to provide a GUI (and no CLI), for all the obvious reasons.  Please, please, please also provide an object model, accessible from external programs.  Then I can still automate things.  ...not nearly as easy, but possible.  [Note:  This is the [[Micro Soft]] solution.]</i>",
      "id": "af5bf757839a10c252377d69c39b6397"
    },
    {
      "type": "html",
      "text": "<i>As usual, Apple had this solution first</i>",
      "id": "30db651f2ce30e61dbf81622ba42f788"
    },
    {
      "type": "html",
      "text": "\nFor [[Windows Users]], if you've got a decent [[Component Object Model]] in your program, it's reasonably easy to automate it using javascript in the Windows Scripting Host. [Reasonably easy, in this context, meaning no harder than learning Perl or [[Bash Script]] to do something like this in a CLI] Of course, most [[Component Object Model]]s suck, and so do most [[Apple Script]] interfaces for [[Mac Users]].",
      "id": "6680de976e25f2dc3bca36a84d7317c9"
    },
    {
      "type": "html",
      "text": "\nA very simple example for applying the [[Automation Is Our Friend]] to \"Wiki navigating and editing\": if in browse-mode you see a typo for correction, then mark the text to be corrected and activate your command. The script reads window.location, isolates the part behind \"?\", inserts \"edit=\", browses to the corresponding [[Edit Text]] page and positions the cursor appropriately for editing. (Of course a [[Wysiwyg Wiki]] would be much more comfortable in this case ;-). -- [[Fridemar Pache]]",
      "id": "32178f16eb114ade1f50c98923e3d656"
    },
    {
      "type": "html",
      "text": "\nIs that simpler than just correcting the typo?  Automation works best for things that can be done without much input from you.  If the browser could find and correct typos automatically, that's great.  But the bottleneck here is you noticing the typo, not the actual correction.  If you make the correction easier then you are optimizing the non critical resource. -- [[Wayne Conrad]]",
      "id": "2220813e13c0ce8e72bffb9ed18da9df"
    },
    {
      "type": "html",
      "text": "\nThe most critical resource is our life-time, so each saved keystroke counts as long as there is no better automatic replacement. Count the keystrokes to correct the following typo and see how much time is wasted in a non-[[Wysiwyg Wiki]]. -- fp",
      "id": "af12a1a1777a4870124fd9c5535f7a4f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8207a59d714f19004cde30ef8550450"
    },
    {
      "type": "html",
      "text": "See also [[Alternate Hard And Soft Layers]]",
      "id": "61d8eef70c42a2209b6b9ad1e750d138"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8207a59d714f19004cde30ef8550450"
    },
    {
      "type": "html",
      "text": "[[Category Coding Conventions]] [[Category Automated]]",
      "id": "c0a05e78fd64b8fac785b21eb9c6d725"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?AutomationIsOurFriend c2.com]",
      "id": "fe2507f0eb1305339e7ec22fdb282f1d"
    }
  ],
  "journal": [
    {
      "date": 1248850358000,
      "id": "2c7509740fc9856c1cd4123c52e99ebb",
      "type": "create",
      "item": {
        "title": "Automation Is Our Friend",
        "story": [
          {
            "type": "html",
            "text": "If you do it once, great.  If you do it twice, frown.  If you do it three times, automate it. [[Three Strikes And You Automate]].",
            "id": "3e757301e6cd3292957f3379c47b56f1"
          },
          {
            "type": "html",
            "text": "\nEven Unix adherents recognize how ugly and ill tempered their favorite child can be at times.  But no matter how ugly Unix gets, it has a philosophy that makes all that ugliness worthwhile: [[Automation Is Our Friend]].  Everyday tasks that you do over and over can be put into a script so that you can encapsulate the knowledge of how to do them, and invoke that knowledge with a single command.",
            "id": "a063eefd17ae68c7134e64b85c9a1918"
          },
          {
            "type": "html",
            "text": "<i>Find</i> is cryptic.  <i>Sed</i> is amazingly cryptic.  <i>Awk</i> is a world unto its own.  Why put up with these and other Unix tools?  Why do we want to live in a world where -s means something different from -S (and I have to remember which is which)?  Because in this world I can automate routine tasks.",
            "id": "2c13732770310fcd56213d49a8e25df0"
          },
          {
            "type": "html",
            "text": "<i>It would be nice if there were automatable tools that weren't quite so cryptic, though. If find, sed, and awk weren't so cumbersome, they probably would have made it into [[Wide Spread Use]] amongst the masses.</i>",
            "id": "2301e327a2de491e5578e8794b3b5974"
          },
          {
            "type": "html",
            "text": "-- Happily, you can use nice friendly languages like Python or Ruby as a replacement for unix shells and weird cryptic commands",
            "id": "93ac45fb1627a3e70ecbe3f929278f57"
          },
          {
            "type": "html",
            "text": "\nIf configuration files are text, then you can use built-in text manipulation tools to automate repeated processes.  If configuration files are binary, then I'm at the mercy of the configuration program that knows how to manipulate them (it seldom being practical to write a tool for that one type of file).  What manipulation of configuration files might you automate?  Well, how about being able to use <i>diff</i> to see what changed in the configuration file?  How about using <i>patch</i> to automatically change the stock configuration file to your favorite settings?",
            "id": "602bb3f7b3c86609698d638503bfbd33"
          },
          {
            "type": "html",
            "text": "\nAre you using a GUI development environment that turns into a half-hour click-fest when you need to deploy?  If there were command-line tools, you could automate it.  Just start the script and go have coffee.  Better yet, have a cron job start the script at night and send you email when it's done.",
            "id": "3e506486fce3b0c8421389b93d526a8a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d8207a59d714f19004cde30ef8550450"
          },
          {
            "type": "html",
            "text": "<i>I personally like it when I've got a nice slick GUI tool for doing things interactively, coupled with an automatable interface such as a CLI. Give me the best of both worlds any day.</i>",
            "id": "672eb6c26c2889d68c9e9e93b07db8eb"
          },
          {
            "type": "html",
            "text": "\nOh, absolutely, yes.  But why do so few GUI tool makers provide CLI tools?",
            "id": "ee864a97378a8652da2820c03b53280a"
          },
          {
            "type": "html",
            "text": "\nHere's why: There is one best way to do it, and the GUI is it.  Providing a CLI tool to do the same things you can do in the GUI would be an admission of personal failure: because GUIs are inherently better, a failure of <i>my</i> GUI to be better for something must mean I didn't do it right.  Better not to provide the tool so I don't have to see the evidence of my failure.",
            "id": "4c6c1cb75fc2af5090a67ca9eb0bc669"
          },
          {
            "type": "html",
            "text": "\nProviding a CLI tool for tasks that need to be automated doesn't make the GUI any worse at what it does, but it openly admits that the GUI isn't the best tool for all tasks.  We'd rather not admit that, so let's not provide a CLI tool.",
            "id": "2e241d2e6a0aeae7b1700c67ace73ab8"
          },
          {
            "type": "html",
            "text": "\nThe other reason is more practical, but not as fun to rant about: The traditional breeding grounds of GUI development tools provide much a weaker command-line environment than Unix, making CLI tools harder to work with.  And yet that practical reason comes from the same mindset: Why do we need to provide a strong command-line environment when we've given you this superior GUI environment?",
            "id": "412e7aa13dcdb94fcdb56722bee853e9"
          },
          {
            "type": "html",
            "text": "<i>I would argue that the DOS command-line environment was weak long before Windows came along. :) That said, the vast majority of users (not programmers) don't really care too much for system-wide automation. At most, they're quite happy with being able to run a \"Record\" feature in their favorite GUI app and just maybe tinker with the resulting macro. Mind you, with the number of times I've seen people doing a [[Mail Merge]] by hand, it looks like they don't bother learning the automation they've already got. If a larger subsection of the market wanted automation, then they'd probably get it. (Note: automation != CLI by default. It's just that it's easier to automate on the command line in many cases)</i>",
            "id": "bbf3203657d7151ac1002ff63a4d84c2"
          },
          {
            "type": "html",
            "text": "<b>But of course.  The problem is, you don't miss what you never use, so how make the masses understand that they're throwing their effort down the waste basket by not automating?</b>",
            "id": "721ddf6488bb3d3eb5afb4a94b31682c"
          },
          {
            "type": "html",
            "text": "\nI rather think the problem is that we humans have pitiful utility functions, especially regarding activities that are incidental to our main goal.  This is why we fail to [[Sharpen The Saw]].  People really do start using automation once the 'price' of setting it up becomes close to the 'price' of one instance of the repeated activity.  ",
            "id": "e1c9d7c10bb338ada6f968d0c8bfc3c3"
          },
          {
            "type": "html",
            "text": " I rarely tell my email client to check for mail.  It was as easy to tell it 'check for mail every x minutes' as it was to tell it to 'check for mail'.  Actually, it was easier, as that was a default setting",
            "id": "44e2b18672dcd0d6298c729161e10fdf"
          },
          {
            "type": "html",
            "text": " I had a vcr, but I never ever taped shows, it was just too much effort.  I got a dvr, now recording shows is as easy as channel surfing, I record often.",
            "id": "248048474fac9bbe167abd6eb18c4d15"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d8207a59d714f19004cde30ef8550450"
          },
          {
            "type": "html",
            "text": "<i>OK, Mr. Vendor, you're going to provide a GUI (and no CLI), for all the obvious reasons.  Please, please, please also provide an object model, accessible from external programs.  Then I can still automate things.  ...not nearly as easy, but possible.  [Note:  This is the [[Micro Soft]] solution.]</i>",
            "id": "af5bf757839a10c252377d69c39b6397"
          },
          {
            "type": "html",
            "text": "<i>As usual, Apple had this solution first</i>",
            "id": "30db651f2ce30e61dbf81622ba42f788"
          },
          {
            "type": "html",
            "text": "\nFor [[Windows Users]], if you've got a decent [[Component Object Model]] in your program, it's reasonably easy to automate it using javascript in the Windows Scripting Host. [Reasonably easy, in this context, meaning no harder than learning Perl or [[Bash Script]] to do something like this in a CLI] Of course, most [[Component Object Model]]s suck, and so do most [[Apple Script]] interfaces for [[Mac Users]].",
            "id": "6680de976e25f2dc3bca36a84d7317c9"
          },
          {
            "type": "html",
            "text": "\nA very simple example for applying the [[Automation Is Our Friend]] to \"Wiki navigating and editing\": if in browse-mode you see a typo for correction, then mark the text to be corrected and activate your command. The script reads window.location, isolates the part behind \"?\", inserts \"edit=\", browses to the corresponding [[Edit Text]] page and positions the cursor appropriately for editing. (Of course a [[Wysiwyg Wiki]] would be much more comfortable in this case ;-). -- [[Fridemar Pache]]",
            "id": "32178f16eb114ade1f50c98923e3d656"
          },
          {
            "type": "html",
            "text": "\nIs that simpler than just correcting the typo?  Automation works best for things that can be done without much input from you.  If the browser could find and correct typos automatically, that's great.  But the bottleneck here is you noticing the typo, not the actual correction.  If you make the correction easier then you are optimizing the non critical resource. -- [[Wayne Conrad]]",
            "id": "2220813e13c0ce8e72bffb9ed18da9df"
          },
          {
            "type": "html",
            "text": "\nThe most critical resource is our life-time, so each saved keystroke counts as long as there is no better automatic replacement. Count the keystrokes to correct the following typo and see how much time is wasted in a non-[[Wysiwyg Wiki]]. -- fp",
            "id": "af12a1a1777a4870124fd9c5535f7a4f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d8207a59d714f19004cde30ef8550450"
          },
          {
            "type": "html",
            "text": "See also [[Alternate Hard And Soft Layers]]",
            "id": "61d8eef70c42a2209b6b9ad1e750d138"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d8207a59d714f19004cde30ef8550450"
          },
          {
            "type": "html",
            "text": "[[Category Coding Conventions]] [[Category Automated]]",
            "id": "c0a05e78fd64b8fac785b21eb9c6d725"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?AutomationIsOurFriend c2.com]",
            "id": "fe2507f0eb1305339e7ec22fdb282f1d"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1653815903303
    }
  ]
}