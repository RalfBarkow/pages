{
  "title": "Using Subresource Integrity",
  "story": [
    {
      "type": "paragraph",
      "id": "0c65a1406e8e2141",
      "text": "You use the Subresource Integrity feature by specifying a base64-encoded cryptographic hash of a resource (file) you're telling the browser to fetch, in the value of the integrity attribute of any <script> or <link> element. [https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity#using_subresource_integrity mdn]"
    },
    {
      "type": "paragraph",
      "id": "7019414ee1463217",
      "text": "bkil via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16928040421078ilOfc:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] You could standardize on scripts whose name is generated from the hash of its content. This would at the same time allow for caching with a long expiry and subresource integrity (without any additional effort if you chose the same algorithm). [https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity mdn]"
    }
  ],
  "journal": [
    {
      "type": "fork",
      "date": 1692805959743
    },
    {
      "item": {
        "type": "factory",
        "id": "0c65a1406e8e2141"
      },
      "id": "0c65a1406e8e2141",
      "type": "add",
      "date": 1692806032559
    },
    {
      "type": "edit",
      "id": "0c65a1406e8e2141",
      "item": {
        "type": "paragraph",
        "id": "0c65a1406e8e2141",
        "text": "You use the Subresource Integrity feature by specifying a base64-encoded cryptographic hash of a resource (file) you're telling the browser to fetch, in the value of the integrity attribute of any <script> or <link> element."
      },
      "date": 1692806034813
    },
    {
      "type": "edit",
      "id": "0c65a1406e8e2141",
      "item": {
        "type": "paragraph",
        "id": "0c65a1406e8e2141",
        "text": "You use the Subresource Integrity feature by specifying a base64-encoded cryptographic hash of a resource (file) you're telling the browser to fetch, in the value of the integrity attribute of any <script> or <link> element. [https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity#using_subresource_integrity mdn]"
      },
      "date": 1692806049508
    },
    {
      "item": {
        "type": "factory",
        "id": "7019414ee1463217"
      },
      "id": "7019414ee1463217",
      "type": "add",
      "after": "0c65a1406e8e2141",
      "date": 1692806064974
    },
    {
      "type": "edit",
      "id": "7019414ee1463217",
      "item": {
        "type": "paragraph",
        "id": "7019414ee1463217",
        "text": "You could standardize on scripts whose name is generated from the hash of its content. This would at the same time allow for caching with a long expiry and subresource integrity (without any additional effort if you chose the same algorithm). https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity"
      },
      "date": 1692806066443
    },
    {
      "type": "edit",
      "id": "7019414ee1463217",
      "item": {
        "type": "paragraph",
        "id": "7019414ee1463217",
        "text": "bkil via You could standardize on scripts whose name is generated from the hash of its content. This would at the same time allow for caching with a long expiry and subresource integrity (without any additional effort if you chose the same algorithm). https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity"
      },
      "date": 1692806077814
    },
    {
      "type": "edit",
      "id": "7019414ee1463217",
      "item": {
        "type": "paragraph",
        "id": "7019414ee1463217",
        "text": "bkil via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16928040421078ilOfc:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] You could standardize on scripts whose name is generated from the hash of its content. This would at the same time allow for caching with a long expiry and subresource integrity (without any additional effort if you chose the same algorithm). https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity"
      },
      "date": 1692806097548
    },
    {
      "type": "edit",
      "id": "7019414ee1463217",
      "item": {
        "type": "paragraph",
        "id": "7019414ee1463217",
        "text": "bkil via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16928040421078ilOfc:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] You could standardize on scripts whose name is generated from the hash of its content. This would at the same time allow for caching with a long expiry and subresource integrity (without any additional effort if you chose the same algorithm). [https://developer.mozilla.org/en-US/docs/Web/Security/Subresource_Integrity mdn]"
      },
      "date": 1692806659243
    }
  ]
}