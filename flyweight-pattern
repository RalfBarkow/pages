{
  "title": "Flyweight Pattern",
  "story": [
    {
      "type": "html",
      "text": "One of the [[Gang Of Four]] patterns.",
      "id": "c7891fdb5bd23cf70ab24569c8fd3c1d"
    },
    {
      "type": "html",
      "text": "<b>Intent:</b> Use sharing to support large numbers of fine-grained objects efficiently",
      "id": "01de900a7a6fe08e129a9af96097cd96"
    },
    {
      "type": "html",
      "text": "\nThe [[Flyweight Pattern]] describes how to support a large number of fine grained objects efficiently, by sharing commonalities in state. For example, when designing a word processor application, you might create an object for each character typed. Each Character object might contain information such as the font face, size and weight of each character. The problem here is that a lengthy document might contain tens of thousands of characters, and objects - quite a memory killer! The Flyweight pattern addresses the problem by creating a new object to store such information, which is shared by all characters with the same formatting. So, if I had a ten-thousand word document, with 800 characters in Bold Times-New-Roman, these 800 characters would contain a reference to a flyweight object that stores their common formatting information. The key here is that you only store the information once, so memory consumption is greatly reduced. -- [[Tobin Harris]]",
      "id": "f788d0a4ee2eda8420365d7b145cba1c"
    },
    {
      "type": "html",
      "text": "\nThe Flyweight pattern is often combined with the [[Composite Pattern]] (163) to implement a logically hierarchical structure in terms of a directed-acyclic graph with shared leaf nodes.",
      "id": "53beaa92b7b8ca7cc4a97892a288d33d"
    },
    {
      "type": "html",
      "text": "\nIt's often best to implement [[State Pattern]] (305) and [[Strategy Pattern]] (315) objects as flyweights.",
      "id": "81359f74a7d98b2e92732f4bfbac9835"
    },
    {
      "type": "html",
      "text": "<b>See also:</b> [[Lazy Evaluation]], [[Strategy Pattern]], [[Design Patterns]], [[Flyweight Pattern Discussion]] [[Flyweight Enum]]",
      "id": "2f7281e63ae47b2555f9f797cc9f7049"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cab412599ea2a44353c6e36587ff484a"
    },
    {
      "type": "html",
      "text": "\n[http://www.vincehuston.org/dp/flyweight.html www.vincehuston.org]",
      "id": "fded1bf6238c39e6243917bd64fe9c8e"
    },
    {
      "type": "html",
      "text": "\n[http://wiki.cs.uiuc.edu/patternStories/FlyweightPattern wiki.cs.uiuc.edu]",
      "id": "b80f19e44c856d23c50ac6913314b5ca"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "cab412599ea2a44353c6e36587ff484a"
    },
    {
      "type": "html",
      "text": "[[Category Pattern]] [[Category Structural Patterns]]",
      "id": "5642f6162fe3240d47705924c908c9c0"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?FlyweightPattern c2.com]",
      "id": "64229d449b0a790662b60a3e96b979b6"
    }
  ],
  "journal": [
    {
      "date": 1373891399000,
      "id": "3935f3193a263b1d708b371065f9c1a7",
      "type": "create",
      "item": {
        "title": "Flyweight Pattern",
        "story": [
          {
            "type": "html",
            "text": "One of the [[Gang Of Four]] patterns.",
            "id": "c7891fdb5bd23cf70ab24569c8fd3c1d"
          },
          {
            "type": "html",
            "text": "<b>Intent:</b> Use sharing to support large numbers of fine-grained objects efficiently",
            "id": "01de900a7a6fe08e129a9af96097cd96"
          },
          {
            "type": "html",
            "text": "\nThe [[Flyweight Pattern]] describes how to support a large number of fine grained objects efficiently, by sharing commonalities in state. For example, when designing a word processor application, you might create an object for each character typed. Each Character object might contain information such as the font face, size and weight of each character. The problem here is that a lengthy document might contain tens of thousands of characters, and objects - quite a memory killer! The Flyweight pattern addresses the problem by creating a new object to store such information, which is shared by all characters with the same formatting. So, if I had a ten-thousand word document, with 800 characters in Bold Times-New-Roman, these 800 characters would contain a reference to a flyweight object that stores their common formatting information. The key here is that you only store the information once, so memory consumption is greatly reduced. -- [[Tobin Harris]]",
            "id": "f788d0a4ee2eda8420365d7b145cba1c"
          },
          {
            "type": "html",
            "text": "\nThe Flyweight pattern is often combined with the [[Composite Pattern]] (163) to implement a logically hierarchical structure in terms of a directed-acyclic graph with shared leaf nodes.",
            "id": "53beaa92b7b8ca7cc4a97892a288d33d"
          },
          {
            "type": "html",
            "text": "\nIt's often best to implement [[State Pattern]] (305) and [[Strategy Pattern]] (315) objects as flyweights.",
            "id": "81359f74a7d98b2e92732f4bfbac9835"
          },
          {
            "type": "html",
            "text": "<b>See also:</b> [[Lazy Evaluation]], [[Strategy Pattern]], [[Design Patterns]], [[Flyweight Pattern Discussion]] [[Flyweight Enum]]",
            "id": "2f7281e63ae47b2555f9f797cc9f7049"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cab412599ea2a44353c6e36587ff484a"
          },
          {
            "type": "html",
            "text": "\n[http://www.vincehuston.org/dp/flyweight.html www.vincehuston.org]",
            "id": "fded1bf6238c39e6243917bd64fe9c8e"
          },
          {
            "type": "html",
            "text": "\n[http://wiki.cs.uiuc.edu/patternStories/FlyweightPattern wiki.cs.uiuc.edu]",
            "id": "b80f19e44c856d23c50ac6913314b5ca"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "cab412599ea2a44353c6e36587ff484a"
          },
          {
            "type": "html",
            "text": "[[Category Pattern]] [[Category Structural Patterns]]",
            "id": "5642f6162fe3240d47705924c908c9c0"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?FlyweightPattern c2.com]",
            "id": "64229d449b0a790662b60a3e96b979b6"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "pattern.sfw.c2.com",
      "date": 1709986893142
    }
  ]
}