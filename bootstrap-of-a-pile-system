{
  "title": "Bootstrap of a Pile System",
  "story": [
    {
      "type": "html",
      "id": "bfb85c232223263d",
      "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-P_D_Ob2defined.png?w=660\"\n>"
    },
    {
      "type": "paragraph",
      "id": "b632ce1f7455fac5",
      "text": "The figure above shows the situation in which Pile_Object No. 2 is identified. [https://ralfbarkow.wordpress.com/2006/05/21/bootstrap-of-a-pile-system/ post]"
    },
    {
      "type": "paragraph",
      "id": "63159303b1f61611",
      "text": "It \"is\" a child of two yet unidentified parents. While pointing to another Pile_Object by means of the Cp2 of Pile_Object No. 2, we let behave Pile_Object 2 as a parent. We let behave Cp2(No.3) as a parent too (can only point to the free place at No.1, left open by the decision — Cp0 or Cp1 — before). The result is shown in the next figure:"
    },
    {
      "type": "html",
      "id": "07ca8dbb8d9d9ed1",
      "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-CpA1-P_D_Ob1defined.png?w=660\"\n>"
    },
    {
      "type": "paragraph",
      "id": "c2286ecde44a1309",
      "text": "Let Pile_Object 1 now take the role of a parent, i.e. let point Cp2(No.1) to Pile_Object 3. Let Cp2(No.2) point to the free place at No.3, left open by the decision before:"
    },
    {
      "type": "html",
      "id": "aa5e27bc31bd5ceb",
      "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-CpA1-P_D_Ob3defined.png?w=660\"\n>"
    },
    {
      "type": "paragraph",
      "id": "87ffe4f3bf2b4836",
      "text": "⇒ [[Multiple Form Logic Revisited]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Bootstrap of a Pile System",
        "story": []
      },
      "date": 1660475466886
    },
    {
      "item": {
        "type": "factory",
        "id": "b632ce1f7455fac5"
      },
      "id": "b632ce1f7455fac5",
      "type": "add",
      "date": 1660475495655
    },
    {
      "type": "edit",
      "id": "b632ce1f7455fac5",
      "item": {
        "type": "paragraph",
        "id": "b632ce1f7455fac5",
        "text": "The figure above shows the situation in which Pile_Object No. 2 is identified. It \"is\" a child of two yet unidentified parents. While pointing to another Pile_Object by means of the Cp2 of Pile_Object No. 2, we let behave Pile_Object 2 as a parent. We let behave Cp2(No.3) as a parent too (can only point to the free place at No.1, left open by the decision — Cp0 or Cp1 — before). The result is shown in the next figure:"
      },
      "date": 1660475500660
    },
    {
      "type": "edit",
      "id": "b632ce1f7455fac5",
      "item": {
        "type": "paragraph",
        "id": "b632ce1f7455fac5",
        "text": "The figure above shows the situation in which Pile_Object No. 2 is identified. [https://ralfbarkow.wordpress.com/2006/05/21/bootstrap-of-a-pile-system/ post]"
      },
      "date": 1660475514278
    },
    {
      "type": "add",
      "id": "63159303b1f61611",
      "item": {
        "type": "paragraph",
        "id": "63159303b1f61611",
        "text": "It \"is\" a child of two yet unidentified parents. While pointing to another Pile_Object by means of the Cp2 of Pile_Object No. 2, we let behave Pile_Object 2 as a parent. We let behave Cp2(No.3) as a parent too (can only point to the free place at No.1, left open by the decision — Cp0 or Cp1 — before). The result is shown in the next figure:"
      },
      "after": "b632ce1f7455fac5",
      "date": 1660475515070
    },
    {
      "item": {
        "type": "factory",
        "id": "bfb85c232223263d"
      },
      "id": "bfb85c232223263d",
      "type": "add",
      "after": "63159303b1f61611",
      "date": 1660475531690
    },
    {
      "id": "bfb85c232223263d",
      "type": "move",
      "order": [
        "bfb85c232223263d",
        "b632ce1f7455fac5",
        "63159303b1f61611"
      ],
      "date": 1660475533857
    },
    {
      "type": "edit",
      "id": "bfb85c232223263d",
      "item": {
        "type": "html",
        "id": "bfb85c232223263d",
        "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-P_D_Ob2defined.png?w=660\"\n>"
      },
      "date": 1660475550868
    },
    {
      "item": {
        "type": "factory",
        "id": "07ca8dbb8d9d9ed1"
      },
      "id": "07ca8dbb8d9d9ed1",
      "type": "add",
      "after": "63159303b1f61611",
      "date": 1660475576357
    },
    {
      "type": "edit",
      "id": "07ca8dbb8d9d9ed1",
      "item": {
        "type": "html",
        "id": "07ca8dbb8d9d9ed1",
        "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-CpA1-P_D_Ob1defined.png?w=660\"\n>"
      },
      "date": 1660475591334
    },
    {
      "item": {
        "type": "factory",
        "id": "c2286ecde44a1309"
      },
      "id": "c2286ecde44a1309",
      "type": "add",
      "after": "07ca8dbb8d9d9ed1",
      "date": 1660475828376
    },
    {
      "type": "edit",
      "id": "c2286ecde44a1309",
      "item": {
        "type": "paragraph",
        "id": "c2286ecde44a1309",
        "text": "Let Pile_Object 1 now take the role of a parent, i.e. let point Cp2(No.1) to Pile_Object 3. Let Cp2(No.2) point to the free place at No.3, left open by the decision before:"
      },
      "date": 1660475830232
    },
    {
      "item": {
        "type": "factory",
        "id": "aa5e27bc31bd5ceb"
      },
      "id": "aa5e27bc31bd5ceb",
      "type": "add",
      "after": "c2286ecde44a1309",
      "date": 1660475839989
    },
    {
      "type": "edit",
      "id": "aa5e27bc31bd5ceb",
      "item": {
        "type": "html",
        "id": "aa5e27bc31bd5ceb",
        "text": "<img\n  width=\"100%\"\n  src=\"https://ralfbarkow.files.wordpress.com/2006/05/multiforms-CpA1-P_D_Ob3defined.png?w=660\"\n>"
      },
      "date": 1660475857057
    },
    {
      "item": {
        "type": "factory",
        "id": "87ffe4f3bf2b4836"
      },
      "id": "87ffe4f3bf2b4836",
      "type": "add",
      "after": "aa5e27bc31bd5ceb",
      "date": 1660476044209
    },
    {
      "type": "edit",
      "id": "87ffe4f3bf2b4836",
      "item": {
        "type": "paragraph",
        "id": "87ffe4f3bf2b4836",
        "text": "– [[Multiple Form Logic Revisited]]"
      },
      "date": 1660476055836
    },
    {
      "type": "edit",
      "id": "87ffe4f3bf2b4836",
      "item": {
        "type": "paragraph",
        "id": "87ffe4f3bf2b4836",
        "text": "⇒ [[Multiple Form Logic Revisited]]"
      },
      "date": 1660476070262
    }
  ]
}