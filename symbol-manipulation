{
  "title": "Symbol Manipulation",
  "story": [
    {
      "type": "paragraph",
      "id": "922c4335b29aecf4",
      "text": "Numerical computation is often thought to be the normal work carried out by the computer, whereas the manipulation of arbitrary symbols is regarded as exceptional. Symbol manipulation, however, is the basic capability from which the computer derives its formidable powers. If certain symbols are interpreted as numeric values in mathematical expressions, the result of computation is said to be numeric. If symbols are interpreted in other ways it is convenient to say that the computation is non-numeric."
    },
    {
      "type": "paragraph",
      "id": "0b2989cb42397472",
      "text": "Early practical applications of the computer, confined mainly to the sciences and commerce, were primarily numeric. With the application of the computer to other areas, such as artificial intelligence, the need to utilize the full symbol manipulation power of the machine became evident and serious attention was given to the design of languages oriented toward the processing of character sequences which might represent non-mathematical symbolic systems. For example, the language COMIT, developed at M.I.T. by V.H. Yngve and his associates in 1958, was designed to process linguistic and other non-numeric data. The LISP (List Processor) language designed by John McCarthy and his co-workers at M.I.T. provided powerful means for manipulating complex symbolic expressions in list structures. LISP programs have been written to solve problems in circuit theory, mathematical logic, and in a number of artificial intelligence projects."
    },
    {
      "type": "paragraph",
      "id": "be78e2b8a65c5120",
      "text": "The language SNOBOL (String-Oriented Symbolic Language) shares some of the characteristics of both COMIT and LISP, but it differs from them in many significant respects. SNOBOL has been used, for example, in linguistics research, in the construction of psychological models, in cryptanalysis, music research, theorem proving, and parsing algebraic expressions."
    },
    {
      "type": "pagefold",
      "id": "a11e904d2bb0daf7",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "09a695869dfa9bc6",
      "text": "\nFORTE, Allen, 1967. The Programming Language SNOBOL3: An Introduction. Computers and the Humanities. 1967. Vol. 1, no. 5, p. 157–163. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Symbol Manipulation",
        "story": []
      },
      "date": 1694344809745
    },
    {
      "item": {
        "type": "factory",
        "id": "922c4335b29aecf4"
      },
      "id": "922c4335b29aecf4",
      "type": "add",
      "date": 1694344825041
    },
    {
      "type": "edit",
      "id": "922c4335b29aecf4",
      "item": {
        "type": "paragraph",
        "id": "922c4335b29aecf4",
        "text": "Numerical computation is often thought to be the normal work carried out by the computer, whereas the manipulation of arbitrary symbols is regarded as exceptional. Symbol manipulation, however, is the basic capability from which the computer derives its formidable powers. If certain symbols are interpreted as numeric values in mathematical expressions, the result of computation is said to be numeric. If symbols are interpreted in other ways it is convenient to say that the computation is non-numeric."
      },
      "date": 1694344826751
    },
    {
      "item": {
        "type": "factory",
        "id": "0b2989cb42397472"
      },
      "id": "0b2989cb42397472",
      "type": "add",
      "after": "922c4335b29aecf4",
      "date": 1694344856118
    },
    {
      "type": "edit",
      "id": "0b2989cb42397472",
      "item": {
        "type": "paragraph",
        "id": "0b2989cb42397472",
        "text": "Early practical applications of the computer, confined mainly to the sciences and commerce, were primarily numeric. With the application of the computer to other areas, such as artificial intelligence, the need to utilize the full symbol manipulation power of the machine became evident and serious attention was given to the design of languages oriented toward the processing of character sequences which might represent non-mathematical symbolic systems. For example, the language COMIT,' developed at M.I.T. by V.H. Yngve and his associates in 1958, was designed to process linguistic and other non-numeric data. The LISP' (List Processor) language designed by John McCarthy and his co-workers at M.I.T. provided powerful means for manipulating complex symbolic expressions in list structures. LISP programs have been written to solve problems in circuit theory, mathematical logic, and in a number of artificial intelligence projects."
      },
      "date": 1694344857665
    },
    {
      "type": "edit",
      "id": "0b2989cb42397472",
      "item": {
        "type": "paragraph",
        "id": "0b2989cb42397472",
        "text": "Early practical applications of the computer, confined mainly to the sciences and commerce, were primarily numeric. With the application of the computer to other areas, such as artificial intelligence, the need to utilize the full symbol manipulation power of the machine became evident and serious attention was given to the design of languages oriented toward the processing of character sequences which might represent non-mathematical symbolic systems. For example, the language COMIT, developed at M.I.T. by V.H. Yngve and his associates in 1958, was designed to process linguistic and other non-numeric data. The LISP (List Processor) language designed by John McCarthy and his co-workers at M.I.T. provided powerful means for manipulating complex symbolic expressions in list structures. LISP programs have been written to solve problems in circuit theory, mathematical logic, and in a number of artificial intelligence projects."
      },
      "date": 1694344891358
    },
    {
      "item": {
        "type": "factory",
        "id": "be78e2b8a65c5120"
      },
      "id": "be78e2b8a65c5120",
      "type": "add",
      "after": "0b2989cb42397472",
      "date": 1694344922011
    },
    {
      "type": "edit",
      "id": "be78e2b8a65c5120",
      "item": {
        "type": "paragraph",
        "id": "be78e2b8a65c5120",
        "text": "The language SNOBOL (String-Oriented Symbolic Language) shares some of the characteristics of both COMIT and LISP, but it differs from them in many significant respects. SNOBOL has been used, for example, in linguistics research, in the construction of psychological models, in cryptanalysis, music research, theorem proving, and parsing algebraic expressions."
      },
      "date": 1694344923502
    },
    {
      "item": {
        "type": "factory",
        "id": "a11e904d2bb0daf7"
      },
      "id": "a11e904d2bb0daf7",
      "type": "add",
      "after": "be78e2b8a65c5120",
      "date": 1694344926230
    },
    {
      "type": "edit",
      "id": "a11e904d2bb0daf7",
      "item": {
        "type": "pagefold",
        "id": "a11e904d2bb0daf7",
        "text": "~"
      },
      "date": 1694344929611
    },
    {
      "id": "09a695869dfa9bc6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "09a695869dfa9bc6",
        "text": "\nFORTE, Allen, 1967. The Programming Language SNOBOL3: An Introduction. Computers and the Humanities. 1967. Vol. 1, no. 5, p. 157–163. \n"
      },
      "after": "a11e904d2bb0daf7",
      "attribution": {
        "page": "2023-09-10"
      },
      "date": 1694344934240
    }
  ]
}