{
  "title": "Smacc",
  "story": [
    {
      "type": "markdown",
      "id": "0e77d9629270696a",
      "text": "[[SmaCC]] (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code. [https://web.archive.org/web/20190915223146/http://www.refactoryworkers.com/SmaCC.html wayback] – A tutorial originally written by [[John Brant]] and [[Don Roberts]] (SmaCC)\n"
    },
    {
      "type": "markdown",
      "id": "8af56ee1a946d1ce",
      "text": "We have used SmaCC to write custom refactoring and transformation tools for several languages including Java, C#, and Delphi. These tools range from small scale refactorings to large scale migration projects. For example, we have used SmaCC to migrate a 1.5 million line Delphi program to C#. \n"
    },
    {
      "type": "markdown",
      "id": "d85c9997484784ff",
      "text": "SmaCC was developed under VisualWorks 7, Dolphin 6.0 Professional, and VASmalltalk 8.6.1 by John Brant and Don Roberts. While it currently only runs on these platforms, it should be relatively easy to port to other platforms. \n"
    },
    {
      "type": "markdown",
      "id": "77f42224c7b35ea7",
      "text": "To get started with SmaCC, you can download the files and read the [https://web.archive.org/web/20190901213034/http://www.refactoryworkers.com/SmaCC/Tutorial.html SmaCC Tutorial] (wayback). If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] (November 14, 2020). While it is written for Pharo, much of the information would be applicable to the other versions. \n"
    },
    {
      "type": "markdown",
      "id": "7a1230d3411f5216",
      "text": "If you find bugs or have questions about SmaCC, please contact us. We also write custom refactoring or transformation tools using SmaCC, so if your company needs such tools please contact us. Such jobs help us support SmaCC."
    },
    {
      "type": "pagefold",
      "id": "848c2e9239da94eb",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "fcf005d6fb1d727d",
      "text": "Smacc: a Compiler-Compiler. [https://books.pharo.org/booklet-Smacc/pdf/2018-10-21-Smacc-Compiler.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "6eea34cd44e5cd03",
      "text": "“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. [https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 post]\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Smacc",
        "story": []
      },
      "date": 1631734657858
    },
    {
      "item": {
        "type": "factory",
        "id": "0e77d9629270696a"
      },
      "id": "0e77d9629270696a",
      "type": "add",
      "date": 1631734665820
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "https://books.pharo.org/booklet-Smacc/pdf/2018-10-21-Smacc-Compiler.pdf"
      },
      "date": 1631734669293
    },
    {
      "item": {
        "type": "factory",
        "id": "445f3df55cece274"
      },
      "id": "445f3df55cece274",
      "type": "add",
      "after": "0e77d9629270696a",
      "date": 1631734733709
    },
    {
      "type": "edit",
      "id": "445f3df55cece274",
      "item": {
        "type": "paragraph",
        "id": "445f3df55cece274",
        "text": "“Smacc: a Compiler Compiler.” https://books.pharo.org/booklet-Smacc/ (accessed Jun. 03, 2021).\n"
      },
      "date": 1631734739429
    },
    {
      "item": {
        "type": "factory",
        "id": "6eea34cd44e5cd03"
      },
      "id": "6eea34cd44e5cd03",
      "type": "add",
      "after": "445f3df55cece274",
      "date": 1631734750459
    },
    {
      "type": "edit",
      "id": "6eea34cd44e5cd03",
      "item": {
        "type": "paragraph",
        "id": "6eea34cd44e5cd03",
        "text": "[1]“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 (accessed Jun. 01, 2021).\n"
      },
      "date": 1631734752677
    },
    {
      "type": "edit",
      "id": "6eea34cd44e5cd03",
      "item": {
        "type": "paragraph",
        "id": "6eea34cd44e5cd03",
        "text": "“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 (accessed Jun. 01, 2021).\n"
      },
      "date": 1631734760681
    },
    {
      "type": "edit",
      "id": "6eea34cd44e5cd03",
      "item": {
        "type": "markdown",
        "id": "6eea34cd44e5cd03",
        "text": "“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 (accessed Jun. 01, 2021).\n"
      },
      "date": 1650382635300
    },
    {
      "type": "edit",
      "id": "6eea34cd44e5cd03",
      "item": {
        "type": "markdown",
        "id": "6eea34cd44e5cd03",
        "text": "“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. [https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 post] (accessed Jun. 01, 2021).\n"
      },
      "date": 1652799647853
    },
    {
      "type": "edit",
      "id": "6eea34cd44e5cd03",
      "item": {
        "type": "markdown",
        "id": "6eea34cd44e5cd03",
        "text": "“Playing with the GtSmacc Parser · Glamorous Toolkit,” Spectrum, May 04, 2020. [https://spectrum.chat/gtoolkit/help/playing-with-the-gtsmacc-parser~6990c99d-49c7-433c-a0cd-a8ce74bcf7c0 post]\n"
      },
      "date": 1652799666536
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "Smacc: a Compiler-Compiler. [https://books.pharo.org/booklet-Smacc/pdf/2018-10-21-Smacc-Compiler.pdf pdf]"
      },
      "date": 1652799696750
    },
    {
      "type": "remove",
      "id": "445f3df55cece274",
      "date": 1652799713024
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "SmaCC (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code.\n"
      },
      "date": 1652799899236
    },
    {
      "type": "add",
      "id": "fcf005d6fb1d727d",
      "item": {
        "type": "markdown",
        "id": "fcf005d6fb1d727d",
        "text": "Smacc: a Compiler-Compiler. [https://books.pharo.org/booklet-Smacc/pdf/2018-10-21-Smacc-Compiler.pdf pdf]"
      },
      "after": "0e77d9629270696a",
      "date": 1652799899571
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "SmaCC (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code. [https://web.archive.org/web/20190915223146/http://www.refactoryworkers.com/SmaCC.html wayback]\n"
      },
      "date": 1652799923240
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "SmaCC (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code. [https://web.archive.org/web/20190915223146/http://www.refactoryworkers.com/SmaCC.html wayback] – A tutorial originally written by John Brant and Don Roberts (SmaCC1)\n"
      },
      "date": 1652799960722
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "SmaCC (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code. [https://web.archive.org/web/20190915223146/http://www.refactoryworkers.com/SmaCC.html wayback] – A tutorial originally written by [[John Brant]] and [[Don Roberts]] (SmaCC)\n"
      },
      "date": 1652799989209
    },
    {
      "type": "add",
      "id": "8af56ee1a946d1ce",
      "item": {
        "type": "markdown",
        "id": "8af56ee1a946d1ce",
        "text": "We have used SmaCC to write custom refactoring and transformation tools for several languages including Java, C#, and Delphi. These tools range from small scale refactorings to large scale migration projects. For example, we have used SmaCC to migrate a 1.5 million line Delphi program to C#. "
      },
      "after": "0e77d9629270696a",
      "date": 1652800001900
    },
    {
      "type": "edit",
      "id": "8af56ee1a946d1ce",
      "item": {
        "type": "markdown",
        "id": "8af56ee1a946d1ce",
        "text": "We have used SmaCC to write custom refactoring and transformation tools for several languages including Java, C#, and Delphi. These tools range from small scale refactorings to large scale migration projects. For example, we have used SmaCC to migrate a 1.5 million line Delphi program to C#. \n"
      },
      "date": 1652800025245
    },
    {
      "type": "add",
      "id": "d85c9997484784ff",
      "item": {
        "type": "markdown",
        "id": "d85c9997484784ff",
        "text": "SmaCC was developed under VisualWorks 7, Dolphin 6.0 Professional, and VASmalltalk 8.6.1 by John Brant and Don Roberts. While it currently only runs on these platforms, it should be relatively easy to port to other platforms. "
      },
      "after": "8af56ee1a946d1ce",
      "date": 1652800028520
    },
    {
      "type": "edit",
      "id": "d85c9997484784ff",
      "item": {
        "type": "markdown",
        "id": "d85c9997484784ff",
        "text": "SmaCC was developed under VisualWorks 7, Dolphin 6.0 Professional, and VASmalltalk 8.6.1 by John Brant and Don Roberts. While it currently only runs on these platforms, it should be relatively easy to port to other platforms. \n"
      },
      "date": 1652800038851
    },
    {
      "item": {
        "type": "factory",
        "id": "848c2e9239da94eb"
      },
      "id": "848c2e9239da94eb",
      "type": "add",
      "after": "6eea34cd44e5cd03",
      "date": 1652800041203
    },
    {
      "type": "add",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. While it is written for Pharo, much of the information would be applicable to the other versions. "
      },
      "after": "d85c9997484784ff",
      "date": 1652800042374
    },
    {
      "type": "edit",
      "id": "848c2e9239da94eb",
      "item": {
        "type": "pagefold",
        "id": "848c2e9239da94eb",
        "text": "~"
      },
      "date": 1652800043797
    },
    {
      "id": "848c2e9239da94eb",
      "type": "move",
      "order": [
        "0e77d9629270696a",
        "8af56ee1a946d1ce",
        "d85c9997484784ff",
        "77f42224c7b35ea7",
        "848c2e9239da94eb",
        "fcf005d6fb1d727d",
        "6eea34cd44e5cd03"
      ],
      "date": 1652800045897
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800079091
    },
    {
      "type": "add",
      "id": "7a1230d3411f5216",
      "item": {
        "type": "markdown",
        "id": "7a1230d3411f5216",
        "text": "If you find bugs or have questions about SmaCC, please contact us. We also write custom refactoring or transformation tools using SmaCC, so if your company needs such tools please contact us. Such jobs help us support SmaCC."
      },
      "after": "77f42224c7b35ea7",
      "date": 1652800081031
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github] While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800122931
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800145473
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] (November 14, 2020). While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800170303
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial [SmaCC Tutorial]. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] (November 14, 2020). While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800234787
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the tutorial [https://web.archive.org/web/20190901213034/http://www.refactoryworkers.com/SmaCC/Tutorial.html SmaCC Tutorial]. If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] (November 14, 2020). While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800242407
    },
    {
      "type": "edit",
      "id": "77f42224c7b35ea7",
      "item": {
        "type": "markdown",
        "id": "77f42224c7b35ea7",
        "text": "To get started with SmaCC, you can download the files and read the [https://web.archive.org/web/20190901213034/http://www.refactoryworkers.com/SmaCC/Tutorial.html SmaCC Tutorial] (wayback). If you want more information than the tutorial provides, we have more detailed sections for the scanner and parser as well as the directives that control the code generation. There is also a booklet for Pharo. [https://github.com/SquareBracketAssociates/Booklet-Smacc github], [https://github.com/SquareBracketAssociates/Booklet-Smacc/releases/download/continuous/smacc.pdf pdf] (November 14, 2020). While it is written for Pharo, much of the information would be applicable to the other versions. \n"
      },
      "date": 1652800261109
    },
    {
      "type": "edit",
      "id": "0e77d9629270696a",
      "item": {
        "type": "markdown",
        "id": "0e77d9629270696a",
        "text": "[[SmaCC]] (Smalltalk Compiler-Compiler) is a freely available parser generator for Smalltalk. It generates LR parsers and is a replacement for the T-Gen parser generator. SmaCC overcomes many of T-Gen's limitations that make it difficult to produce parsers. SmaCC can generate parsers for ambiguous grammars and grammars with overlapping tokens. Both of these are not possible using T-Gen. In addition to handling more grammars than T-Gen, SmaCC has a smaller runtime than T-Gen and is faster than T-Gen. The latest version of SmaCC has support for GLR parsing, generating abstract syntax trees (ASTs), and transforming code. [https://web.archive.org/web/20190915223146/http://www.refactoryworkers.com/SmaCC.html wayback] – A tutorial originally written by [[John Brant]] and [[Don Roberts]] (SmaCC)\n"
      },
      "date": 1652800550015
    }
  ]
}