{
  "title": "The (|>) Pipe",
  "story": [
    {
      "type": "paragraph",
      "id": "8e199ded90b9e8cb",
      "text": "In addition to the normal math operations for addition and subtraction, we have the (<|) and (|>) operators. They are aliases for function application, allowing you to write fewer parentheses. [https://elm-lang.org/docs/syntax page]"
    },
    {
      "type": "code",
      "id": "f417d3d89f2297aa",
      "text": "viewNames1 names =\n  String.join \", \" (List.sort names)\n\nviewNames2 names =\n  names\n    |> List.sort\n    |> String.join \", \"\n\n-- (arg |> func) is the same as (func arg)\n-- Just keep repeating that transformation!"
    },
    {
      "type": "pagefold",
      "id": "83b103c0f7a1b390",
      "text": "üî∫"
    },
    {
      "type": "paragraph",
      "id": "183e4b29c482a4c1",
      "text": "[[Funktionale Programmierung]] mit Elm [https://dev.inf-schule.de/deklarativ/fp_elm inf-schule] ‚áê P√§dagogisches Landesinstitut Rheinland-Pfalz [https://dev.inf-schule.de/impressum page]"
    },
    {
      "type": "paragraph",
      "id": "8367225a93250487",
      "text": "How To Use Elm Pipe Operator [https://blog.tentamen.eu/how-to-use-elm-pipe-operator/ page]"
    },
    {
      "type": "paragraph",
      "id": "f17bb00a687f47ee",
      "text": "Piping in Elm, Haskell, Python, and JavaScript [https://www.stackbuilders.com/blog/piping-in-elm-haskell-python-and-javascript/ page]"
    },
    {
      "type": "paragraph",
      "id": "45a79119771a0206",
      "text": "What does pipe `|` operator do in case expression of elm-lang? [https://stackoverflow.com/questions/62100643/what-does-pipe-operator-do-in-case-expression-of-elm-lang stackoverflow]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "The (|>) Pipe",
        "story": []
      },
      "date": 1694587285996
    },
    {
      "item": {
        "type": "factory",
        "id": "45a79119771a0206"
      },
      "id": "45a79119771a0206",
      "type": "add",
      "date": 1694587287380
    },
    {
      "type": "edit",
      "id": "45a79119771a0206",
      "item": {
        "type": "paragraph",
        "id": "45a79119771a0206",
        "text": "What does pipe `|` operator do in case expression of elm-lang?"
      },
      "date": 1694587289535
    },
    {
      "type": "edit",
      "id": "45a79119771a0206",
      "item": {
        "type": "paragraph",
        "id": "45a79119771a0206",
        "text": "What does pipe `|` operator do in case expression of elm-lang? [https://stackoverflow.com/questions/62100643/what-does-pipe-operator-do-in-case-expression-of-elm-lang stackoverflow]"
      },
      "date": 1694587300092
    },
    {
      "type": "add",
      "id": "8367225a93250487",
      "item": {
        "type": "paragraph",
        "id": "8367225a93250487",
        "text": "How To Use Elm Pipe Operator"
      },
      "after": "45a79119771a0206",
      "date": 1694587366841
    },
    {
      "type": "edit",
      "id": "8367225a93250487",
      "item": {
        "type": "paragraph",
        "id": "8367225a93250487",
        "text": "How To Use Elm Pipe Operator [https://blog.tentamen.eu/how-to-use-elm-pipe-operator/ page]"
      },
      "date": 1694587377723
    },
    {
      "item": {
        "type": "factory",
        "id": "8e199ded90b9e8cb"
      },
      "id": "8e199ded90b9e8cb",
      "type": "add",
      "after": "8367225a93250487",
      "date": 1694587447822
    },
    {
      "id": "8e199ded90b9e8cb",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "45a79119771a0206",
        "8367225a93250487"
      ],
      "date": 1694587450463
    },
    {
      "type": "edit",
      "id": "8e199ded90b9e8cb",
      "item": {
        "type": "paragraph",
        "id": "8e199ded90b9e8cb",
        "text": "In addition to the normal math operations for addition and subtraction, we have the (<|) and (|>) operators. They are aliases for function application, allowing you to write fewer parentheses."
      },
      "date": 1694587451862
    },
    {
      "item": {
        "type": "factory",
        "id": "83b103c0f7a1b390"
      },
      "id": "83b103c0f7a1b390",
      "type": "add",
      "after": "8367225a93250487",
      "date": 1694587452941
    },
    {
      "id": "83b103c0f7a1b390",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "83b103c0f7a1b390",
        "45a79119771a0206",
        "8367225a93250487"
      ],
      "date": 1694587454805
    },
    {
      "type": "edit",
      "id": "83b103c0f7a1b390",
      "item": {
        "type": "pagefold",
        "id": "83b103c0f7a1b390",
        "text": "~"
      },
      "date": 1694587457866
    },
    {
      "type": "edit",
      "id": "8e199ded90b9e8cb",
      "item": {
        "type": "paragraph",
        "id": "8e199ded90b9e8cb",
        "text": "In addition to the normal math operations for addition and subtraction, we have the (<|) and (|>) operators. They are aliases for function application, allowing you to write fewer parentheses. [https://elm-lang.org/docs/syntax page]"
      },
      "date": 1694587467145
    },
    {
      "item": {
        "type": "factory",
        "id": "f417d3d89f2297aa"
      },
      "id": "f417d3d89f2297aa",
      "type": "add",
      "after": "8367225a93250487",
      "date": 1694587488654
    },
    {
      "id": "f417d3d89f2297aa",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "f417d3d89f2297aa",
        "83b103c0f7a1b390",
        "45a79119771a0206",
        "8367225a93250487"
      ],
      "date": 1694587490446
    },
    {
      "type": "edit",
      "id": "f417d3d89f2297aa",
      "item": {
        "type": "code",
        "id": "f417d3d89f2297aa",
        "text": "viewNames1 names =\n  String.join \", \" (List.sort names)\n\nviewNames2 names =\n  names\n    |> List.sort\n    |> String.join \", \"\n\n-- (arg |> func) is the same as (func arg)\n-- Just keep repeating that transformation!"
      },
      "date": 1694587492091
    },
    {
      "item": {
        "type": "factory",
        "id": "f17bb00a687f47ee"
      },
      "id": "f17bb00a687f47ee",
      "type": "add",
      "after": "8367225a93250487",
      "date": 1694587614995
    },
    {
      "type": "edit",
      "id": "f17bb00a687f47ee",
      "item": {
        "type": "paragraph",
        "id": "f17bb00a687f47ee",
        "text": "Piping in Elm, Haskell, Python, and JavaScript"
      },
      "date": 1694587617315
    },
    {
      "type": "edit",
      "id": "f17bb00a687f47ee",
      "item": {
        "type": "paragraph",
        "id": "f17bb00a687f47ee",
        "text": "Piping in Elm, Haskell, Python, and JavaScript [https://www.stackbuilders.com/blog/piping-in-elm-haskell-python-and-javascript/ page]]"
      },
      "date": 1694587628042
    },
    {
      "item": {
        "type": "factory",
        "id": "183e4b29c482a4c1"
      },
      "id": "183e4b29c482a4c1",
      "type": "add",
      "after": "f17bb00a687f47ee",
      "date": 1694587857118
    },
    {
      "type": "edit",
      "id": "183e4b29c482a4c1",
      "item": {
        "type": "paragraph",
        "id": "183e4b29c482a4c1",
        "text": "Funktionale Programmierung mit Elm"
      },
      "date": 1694587859539
    },
    {
      "type": "edit",
      "id": "183e4b29c482a4c1",
      "item": {
        "type": "paragraph",
        "id": "183e4b29c482a4c1",
        "text": "Funktionale Programmierung mit Elm [https://dev.inf-schule.de/deklarativ/fp_elm page]"
      },
      "date": 1694587868066
    },
    {
      "type": "edit",
      "id": "183e4b29c482a4c1",
      "item": {
        "type": "paragraph",
        "id": "183e4b29c482a4c1",
        "text": "Funktionale Programmierung mit Elm [https://dev.inf-schule.de/deklarativ/fp_elm inf-schule]"
      },
      "date": 1694587882353
    },
    {
      "item": {
        "type": "factory",
        "id": "a6af2c5e2f29ca8e"
      },
      "id": "a6af2c5e2f29ca8e",
      "type": "add",
      "after": "183e4b29c482a4c1",
      "date": 1694588021588
    },
    {
      "type": "edit",
      "id": "a6af2c5e2f29ca8e",
      "item": {
        "type": "paragraph",
        "id": "a6af2c5e2f29ca8e",
        "text": "P√§dagogisches Landesinstitut Rheinland-Pfalz []"
      },
      "date": 1694588026257
    },
    {
      "type": "edit",
      "id": "a6af2c5e2f29ca8e",
      "item": {
        "type": "paragraph",
        "id": "a6af2c5e2f29ca8e",
        "text": "P√§dagogisches Landesinstitut Rheinland-Pfalz [https://dev.inf-schule.de/impressum page]"
      },
      "date": 1694588036948
    },
    {
      "type": "remove",
      "id": "a6af2c5e2f29ca8e",
      "date": 1694598722842
    },
    {
      "type": "edit",
      "id": "183e4b29c482a4c1",
      "item": {
        "type": "paragraph",
        "id": "183e4b29c482a4c1",
        "text": "Funktionale Programmierung mit Elm [https://dev.inf-schule.de/deklarativ/fp_elm inf-schule] ‚áê P√§dagogisches Landesinstitut Rheinland-Pfalz [https://dev.inf-schule.de/impressum page]"
      },
      "date": 1694598724144
    },
    {
      "id": "183e4b29c482a4c1",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "f417d3d89f2297aa",
        "83b103c0f7a1b390",
        "183e4b29c482a4c1",
        "45a79119771a0206",
        "8367225a93250487",
        "f17bb00a687f47ee"
      ],
      "date": 1694598758417
    },
    {
      "type": "edit",
      "id": "83b103c0f7a1b390",
      "item": {
        "type": "pagefold",
        "id": "83b103c0f7a1b390",
        "text": "üî∫"
      },
      "date": 1694598774152
    },
    {
      "id": "8367225a93250487",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "f417d3d89f2297aa",
        "83b103c0f7a1b390",
        "183e4b29c482a4c1",
        "8367225a93250487",
        "45a79119771a0206",
        "f17bb00a687f47ee"
      ],
      "date": 1694598788950
    },
    {
      "type": "edit",
      "id": "f17bb00a687f47ee",
      "item": {
        "type": "paragraph",
        "id": "f17bb00a687f47ee",
        "text": "Piping in Elm, Haskell, Python, and JavaScript [https://www.stackbuilders.com/blog/piping-in-elm-haskell-python-and-javascript/ page]"
      },
      "date": 1694598807893
    },
    {
      "id": "45a79119771a0206",
      "type": "move",
      "order": [
        "8e199ded90b9e8cb",
        "f417d3d89f2297aa",
        "83b103c0f7a1b390",
        "183e4b29c482a4c1",
        "8367225a93250487",
        "f17bb00a687f47ee",
        "45a79119771a0206"
      ],
      "date": 1694598819802
    },
    {
      "type": "edit",
      "id": "183e4b29c482a4c1",
      "item": {
        "type": "paragraph",
        "id": "183e4b29c482a4c1",
        "text": "[[Funktionale Programmierung]] mit Elm [https://dev.inf-schule.de/deklarativ/fp_elm inf-schule] ‚áê P√§dagogisches Landesinstitut Rheinland-Pfalz [https://dev.inf-schule.de/impressum page]"
      },
      "date": 1695115248767
    }
  ]
}