{
  "title": "Reliability and Complexity",
  "story": [
    {
      "id": "2dcaac00",
      "type": "paragraph",
      "text": "We consistently underestimate complexity. Yet somehow we also keep things running. Reliability is an emergent property of the entire system. It resides in the relationships between things. It remains profoundly difficult."
    },
    {
      "type": "paragraph",
      "id": "c18f703f06514889",
      "text": "An insight from How Complex Systems Fail. [https://how.complexsystems.fail site]"
    },
    {
      "type": "markdown",
      "id": "d105831f6d6d4699",
      "text": "> Catastrophe requires multiple failures – single point failures are not enough.\n> \n> The array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure.\n\n—How Complex Systems Fail. [https://how.complexsystems.fail/#3 #3]"
    },
    {
      "type": "paragraph",
      "id": "85d7b9822b87ed93",
      "text": "A tiny review of connected graphs. We've drawn a connected graph of seven nodes, each labeled [[Team]]. The same mathematics apply for Services, Objects, Classes, Functions, or any combination."
    },
    {
      "type": "markdown",
      "id": "e83df7e91f5c1f17",
      "text": "Nodes = 7\nEdges = (N * (N - 1))/2 = 21\nSubgraphs = it's complicated = 853\n_See number of connected graphs with n nodes in the Online Encyclopedia of Integer Sequences [https://oeis.org/A001349 oeis]_"
    },
    {
      "type": "graphviz",
      "id": "71a9302e772218c8",
      "text": "graph {\n layout=circo\n node [label=Team]\n 1 -- { 2 3 4 5 6 7}\n 2 -- { 3 4 5 6 7}\n 3 -- { 4 5 6 7}\n 4 -- { 5 6 7}\n 5 -- { 6 7}\n 6 -- { 7}\n\n}",
      "dot": "graph {\n layout=circo\n node [label=Team]\n 1 -- { 2 3 4 5 6 7}\n 2 -- { 3 4 5 6 7}\n 3 -- { 4 5 6 7}\n 4 -- { 5 6 7}\n 5 -- { 6 7}\n 6 -- { 7}\n\n}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.44.0 (20200518.1210)\n -->\n<!-- Pages: 1 -->\n<svg width=\"366pt\" height=\"344pt\"\n viewBox=\"0.00 0.00 366.40 343.87\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 339.87)\">\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-339.87 362.4,-339.87 362.4,4 -4,4\"/>\n<!-- 1 -->\n<g id=\"node1\" class=\"node\">\n<title>1</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"267.47\" cy=\"-47.7\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"267.47\" y=\"-43.5\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 2 -->\n<g id=\"node2\" class=\"node\">\n<title>2</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"325.37\" cy=\"-167.94\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"325.37\" y=\"-163.74\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;2 -->\n<g id=\"edge1\" class=\"edge\">\n<title>1&#45;&#45;2</title>\n<path fill=\"none\" stroke=\"black\" d=\"M275.89,-65.18C286.87,-87.98 305.96,-127.62 316.94,-150.43\"/>\n</g>\n<!-- 3 -->\n<g id=\"node3\" class=\"node\">\n<title>3</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"33.02\" cy=\"-101.21\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"33.02\" y=\"-97.01\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;3 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&#45;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M236.82,-54.69C191.89,-64.95 108.62,-83.95 63.68,-94.21\"/>\n</g>\n<!-- 4 -->\n<g id=\"node4\" class=\"node\">\n<title>4</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"33.02\" cy=\"-234.66\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"33.02\" y=\"-230.46\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;4 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M248.68,-62.68C204.78,-97.69 95.89,-184.53 51.9,-219.61\"/>\n</g>\n<!-- 5 -->\n<g id=\"node5\" class=\"node\">\n<title>5</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"137.36\" cy=\"-317.87\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.36\" y=\"-313.67\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;5 -->\n<g id=\"edge4\" class=\"edge\">\n<title>1&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M258.93,-65.42C235.3,-114.49 169.23,-251.7 145.76,-300.43\"/>\n</g>\n<!-- 6 -->\n<g id=\"node6\" class=\"node\">\n<title>6</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"267.47\" cy=\"-288.17\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"267.47\" y=\"-283.97\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;6 -->\n<g id=\"edge5\" class=\"edge\">\n<title>1&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M267.47,-65.77C267.47,-110.34 267.47,-225.1 267.47,-269.89\"/>\n</g>\n<!-- 7 -->\n<g id=\"node7\" class=\"node\">\n<title>7</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"137.36\" cy=\"-18\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.36\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;7 -->\n<g id=\"edge6\" class=\"edge\">\n<title>1&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M236.97,-40.73C216.24,-36 188.91,-29.77 168.13,-25.02\"/>\n</g>\n<!-- 2&#45;&#45;3 -->\n<g id=\"edge7\" class=\"edge\">\n<title>2&#45;&#45;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M294.91,-160.98C238.9,-148.2 120.14,-121.09 63.85,-108.24\"/>\n</g>\n<!-- 2&#45;&#45;4 -->\n<g id=\"edge8\" class=\"edge\">\n<title>2&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M294.91,-174.89C238.9,-187.67 120.14,-214.78 63.85,-227.63\"/>\n</g>\n<!-- 2&#45;&#45;5 -->\n<g id=\"edge9\" class=\"edge\">\n<title>2&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M306.66,-182.86C270.62,-211.6 191.98,-274.32 156,-303.01\"/>\n</g>\n<!-- 2&#45;&#45;6 -->\n<g id=\"edge10\" class=\"edge\">\n<title>2&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M316.95,-185.42C305.98,-208.22 286.88,-247.86 275.9,-270.67\"/>\n</g>\n<!-- 2&#45;&#45;7 -->\n<g id=\"edge11\" class=\"edge\">\n<title>2&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M306.66,-153.01C270.62,-124.27 191.98,-61.56 156,-32.86\"/>\n</g>\n<!-- 3&#45;&#45;4 -->\n<g id=\"edge12\" class=\"edge\">\n<title>3&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M33.02,-119.48C33.02,-145.04 33.02,-191.17 33.02,-216.61\"/>\n</g>\n<!-- 3&#45;&#45;5 -->\n<g id=\"edge13\" class=\"edge\">\n<title>3&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M41.56,-118.94C61.17,-159.67 109.26,-259.53 128.85,-300.2\"/>\n</g>\n<!-- 3&#45;&#45;6 -->\n<g id=\"edge14\" class=\"edge\">\n<title>3&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.81,-116.19C95.71,-151.2 204.6,-238.04 248.59,-273.12\"/>\n</g>\n<!-- 3&#45;&#45;7 -->\n<g id=\"edge15\" class=\"edge\">\n<title>3&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.68,-86.33C70.55,-71.28 99.57,-48.13 118.52,-33.03\"/>\n</g>\n<!-- 4&#45;&#45;5 -->\n<g id=\"edge16\" class=\"edge\">\n<title>4&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.68,-249.54C70.55,-264.59 99.57,-287.74 118.52,-302.84\"/>\n</g>\n<!-- 4&#45;&#45;6 -->\n<g id=\"edge17\" class=\"edge\">\n<title>4&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M63.67,-241.66C108.6,-251.91 191.88,-270.92 236.81,-281.18\"/>\n</g>\n<!-- 4&#45;&#45;7 -->\n<g id=\"edge18\" class=\"edge\">\n<title>4&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M41.56,-216.93C61.17,-176.2 109.26,-76.34 128.85,-35.67\"/>\n</g>\n<!-- 5&#45;&#45;6 -->\n<g id=\"edge19\" class=\"edge\">\n<title>5&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M167.87,-310.91C188.6,-306.18 215.92,-299.94 236.71,-295.2\"/>\n</g>\n<!-- 5&#45;&#45;7 -->\n<g id=\"edge20\" class=\"edge\">\n<title>5&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M137.36,-299.56C137.36,-245.9 137.36,-89.42 137.36,-36.07\"/>\n</g>\n<!-- 6&#45;&#45;7 -->\n<g id=\"edge21\" class=\"edge\">\n<title>6&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M258.93,-270.45C235.3,-221.38 169.23,-84.17 145.76,-35.44\"/>\n</g>\n</g>\n</svg>\n"
    },
    {
      "type": "paragraph",
      "id": "5e5fbbd32763a12b",
      "text": "Let us turn the dial up to 50."
    },
    {
      "type": "markdown",
      "id": "6f9578636d72af1e",
      "text": "Nodes = 50\nEdges = 1,225\nSubgraphs = 1.9e306\n_N.B. There are 1e78 to 1e82 atoms in the known universe_\n_See table of N=1 to N=75 [https://oeis.org/A001349/b001349.txt oeis]_"
    },
    {
      "type": "paragraph",
      "id": "20e7db7090433a8b",
      "text": "Two quick points to explain how we cope with such complexity. First, our actual systems are not completely connected. The sparse graph of connections collapses the numbers dramatically. Second, our human brains are more complex than the systems we create with them. We have around 1e11 neurons with 1e15 connections (clearly our brains are also not completely connected graphs of neurons)."
    },
    {
      "type": "paragraph",
      "id": "18025d0417e1502e",
      "text": "We leave behind the staggering numbers from graph theory to zoom in on a model of a couple teams in a software company. We can use this diagram to describe many examples of the challenges of software design.  Each team maintains a small graph of their own services or components which they understand to some degree. But outside of their own domain there are many unknown or misunderstood connections."
    },
    {
      "type": "html",
      "id": "66801cb6623f620c",
      "text": "<img width=\"100%\" src=\"/assets/pages/reliability-and-complexity/software-teams-model.svg\">"
    },
    {
      "type": "paragraph",
      "id": "bba98400a3a49e9e",
      "text": "In general terms, software companies staff themselves with many more software engineers than reliability engineers. The software engineers tend to know their own systems relatively well—the things inside the circles in this diagram. Reliability engineers tend to know more about how things are connected or they know ways to navigate these vast unknowns—the grey clouds in the diagram."
    },
    {
      "type": "paragraph",
      "id": "6a456d3aacc44d06",
      "text": "As a company grows all of the numbers grow accordingly. The number of product teams grow. The number of customers grow. The number of services grows. The number of projects grows. Requests handled by the web site grows. Storage consumed by the data grows. The customer service organization grows. The sales and marketing teams grow."
    },
    {
      "type": "paragraph",
      "id": "426b26574e0a9f0b",
      "text": "The complexity between all these  growing things grows much, much faster."
    },
    {
      "type": "paragraph",
      "id": "c83b1af1348e1335",
      "text": "Another dimension of this challenge is that the software industry doesn't really know how to teach these relationship skills. Mostly, we throw people in the deep end with no preparation."
    },
    {
      "type": "markdown",
      "id": "d6ab359b565cbcf3",
      "text": "> Failure free operations require experience with failure.\n> \n> Recognizing hazard and successfully manipulating system operations to remain inside the tolerable performance boundaries requires intimate contact with failure. More robust system performance is likely to arise in systems where operators can discern the “edge of the envelope”. This is where system performance begins to deteriorate, becomes difficult to predict, or cannot be readily recovered.\n\n— [[How Complex Systems Fail]]. [https://how.complexsystems.fail/#18 #18]"
    },
    {
      "type": "assets",
      "id": "f3367d08d99f5958",
      "text": "pages/reliability-and-complexity"
    },
    {
      "type": "pagefold",
      "id": "063842169997f01b",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "efb07772b4458615",
      "text": "Continue the story to connect this example from Netflix Vizceral."
    },
    {
      "type": "video",
      "id": "24cc5d33a69f4216",
      "text": "YOUTUBE MYHf_BXWuOc\nNetflix Vizceral Regional View (30s) [https://www.youtube.com/watch?v=MYHf_BXWuOc youtube]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reliability and Complexity",
        "story": [
          {
            "id": "2dcaac00",
            "type": "paragraph",
            "text": "We consistently underestimate complexity. Yet somehow we also keep things running."
          }
        ]
      },
      "date": 1663338076916
    },
    {
      "type": "fork",
      "date": 1663338086472
    },
    {
      "id": "85d7b9822b87ed93",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "85d7b9822b87ed93",
        "text": "A tiny review of connected graphs. Here we draw a connected graph of seven nodes. To ground our example, we've labeled each node [[Team]], but the same mathematics apply for Services, Objects, Classes, Functions, or any combination."
      },
      "after": "2dcaac00",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663339626782
    },
    {
      "id": "e83df7e91f5c1f17",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "e83df7e91f5c1f17",
        "text": "Nodes = 7\nEdges = (N * (N - 1))/2 = 21\nSubgraphs = it's complicated = 112\n_See number of connected graphs with n nodes in the Online Encyclopedia of Integer Sequences [https://oeis.org/A001349 oeis]_"
      },
      "after": "85d7b9822b87ed93",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663339630968
    },
    {
      "id": "71a9302e772218c8",
      "type": "add",
      "item": {
        "type": "graphviz",
        "id": "71a9302e772218c8",
        "text": "graph {\n layout=circo\n node [label=Team]\n 1 -- { 2 3 4 5 6 7}\n 2 -- { 3 4 5 6 7}\n 3 -- { 4 5 6 7}\n 4 -- { 5 6 7}\n 5 -- { 6 7}\n 6 -- { 7}\n\n}",
        "dot": "graph {\n layout=circo\n node [label=Team]\n 1 -- { 2 3 4 5 6 7}\n 2 -- { 3 4 5 6 7}\n 3 -- { 4 5 6 7}\n 4 -- { 5 6 7}\n 5 -- { 6 7}\n 6 -- { 7}\n\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.44.0 (20200518.1210)\n -->\n<!-- Pages: 1 -->\n<svg width=\"366pt\" height=\"344pt\"\n viewBox=\"0.00 0.00 366.40 343.87\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 339.87)\">\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-339.87 362.4,-339.87 362.4,4 -4,4\"/>\n<!-- 1 -->\n<g id=\"node1\" class=\"node\">\n<title>1</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"267.47\" cy=\"-47.7\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"267.47\" y=\"-43.5\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 2 -->\n<g id=\"node2\" class=\"node\">\n<title>2</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"325.37\" cy=\"-167.94\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"325.37\" y=\"-163.74\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;2 -->\n<g id=\"edge1\" class=\"edge\">\n<title>1&#45;&#45;2</title>\n<path fill=\"none\" stroke=\"black\" d=\"M275.89,-65.18C286.87,-87.98 305.96,-127.62 316.94,-150.43\"/>\n</g>\n<!-- 3 -->\n<g id=\"node3\" class=\"node\">\n<title>3</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"33.02\" cy=\"-101.21\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"33.02\" y=\"-97.01\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;3 -->\n<g id=\"edge2\" class=\"edge\">\n<title>1&#45;&#45;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M236.82,-54.69C191.89,-64.95 108.62,-83.95 63.68,-94.21\"/>\n</g>\n<!-- 4 -->\n<g id=\"node4\" class=\"node\">\n<title>4</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"33.02\" cy=\"-234.66\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"33.02\" y=\"-230.46\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;4 -->\n<g id=\"edge3\" class=\"edge\">\n<title>1&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M248.68,-62.68C204.78,-97.69 95.89,-184.53 51.9,-219.61\"/>\n</g>\n<!-- 5 -->\n<g id=\"node5\" class=\"node\">\n<title>5</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"137.36\" cy=\"-317.87\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.36\" y=\"-313.67\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;5 -->\n<g id=\"edge4\" class=\"edge\">\n<title>1&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M258.93,-65.42C235.3,-114.49 169.23,-251.7 145.76,-300.43\"/>\n</g>\n<!-- 6 -->\n<g id=\"node6\" class=\"node\">\n<title>6</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"267.47\" cy=\"-288.17\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"267.47\" y=\"-283.97\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;6 -->\n<g id=\"edge5\" class=\"edge\">\n<title>1&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M267.47,-65.77C267.47,-110.34 267.47,-225.1 267.47,-269.89\"/>\n</g>\n<!-- 7 -->\n<g id=\"node7\" class=\"node\">\n<title>7</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"137.36\" cy=\"-18\" rx=\"33.04\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.36\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">Team</text>\n</g>\n<!-- 1&#45;&#45;7 -->\n<g id=\"edge6\" class=\"edge\">\n<title>1&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M236.97,-40.73C216.24,-36 188.91,-29.77 168.13,-25.02\"/>\n</g>\n<!-- 2&#45;&#45;3 -->\n<g id=\"edge7\" class=\"edge\">\n<title>2&#45;&#45;3</title>\n<path fill=\"none\" stroke=\"black\" d=\"M294.91,-160.98C238.9,-148.2 120.14,-121.09 63.85,-108.24\"/>\n</g>\n<!-- 2&#45;&#45;4 -->\n<g id=\"edge8\" class=\"edge\">\n<title>2&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M294.91,-174.89C238.9,-187.67 120.14,-214.78 63.85,-227.63\"/>\n</g>\n<!-- 2&#45;&#45;5 -->\n<g id=\"edge9\" class=\"edge\">\n<title>2&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M306.66,-182.86C270.62,-211.6 191.98,-274.32 156,-303.01\"/>\n</g>\n<!-- 2&#45;&#45;6 -->\n<g id=\"edge10\" class=\"edge\">\n<title>2&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M316.95,-185.42C305.98,-208.22 286.88,-247.86 275.9,-270.67\"/>\n</g>\n<!-- 2&#45;&#45;7 -->\n<g id=\"edge11\" class=\"edge\">\n<title>2&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M306.66,-153.01C270.62,-124.27 191.98,-61.56 156,-32.86\"/>\n</g>\n<!-- 3&#45;&#45;4 -->\n<g id=\"edge12\" class=\"edge\">\n<title>3&#45;&#45;4</title>\n<path fill=\"none\" stroke=\"black\" d=\"M33.02,-119.48C33.02,-145.04 33.02,-191.17 33.02,-216.61\"/>\n</g>\n<!-- 3&#45;&#45;5 -->\n<g id=\"edge13\" class=\"edge\">\n<title>3&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M41.56,-118.94C61.17,-159.67 109.26,-259.53 128.85,-300.2\"/>\n</g>\n<!-- 3&#45;&#45;6 -->\n<g id=\"edge14\" class=\"edge\">\n<title>3&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.81,-116.19C95.71,-151.2 204.6,-238.04 248.59,-273.12\"/>\n</g>\n<!-- 3&#45;&#45;7 -->\n<g id=\"edge15\" class=\"edge\">\n<title>3&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.68,-86.33C70.55,-71.28 99.57,-48.13 118.52,-33.03\"/>\n</g>\n<!-- 4&#45;&#45;5 -->\n<g id=\"edge16\" class=\"edge\">\n<title>4&#45;&#45;5</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.68,-249.54C70.55,-264.59 99.57,-287.74 118.52,-302.84\"/>\n</g>\n<!-- 4&#45;&#45;6 -->\n<g id=\"edge17\" class=\"edge\">\n<title>4&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M63.67,-241.66C108.6,-251.91 191.88,-270.92 236.81,-281.18\"/>\n</g>\n<!-- 4&#45;&#45;7 -->\n<g id=\"edge18\" class=\"edge\">\n<title>4&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M41.56,-216.93C61.17,-176.2 109.26,-76.34 128.85,-35.67\"/>\n</g>\n<!-- 5&#45;&#45;6 -->\n<g id=\"edge19\" class=\"edge\">\n<title>5&#45;&#45;6</title>\n<path fill=\"none\" stroke=\"black\" d=\"M167.87,-310.91C188.6,-306.18 215.92,-299.94 236.71,-295.2\"/>\n</g>\n<!-- 5&#45;&#45;7 -->\n<g id=\"edge20\" class=\"edge\">\n<title>5&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M137.36,-299.56C137.36,-245.9 137.36,-89.42 137.36,-36.07\"/>\n</g>\n<!-- 6&#45;&#45;7 -->\n<g id=\"edge21\" class=\"edge\">\n<title>6&#45;&#45;7</title>\n<path fill=\"none\" stroke=\"black\" d=\"M258.93,-270.45C235.3,-221.38 169.23,-84.17 145.76,-35.44\"/>\n</g>\n</g>\n</svg>\n"
      },
      "after": "e83df7e91f5c1f17",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663339635106
    },
    {
      "type": "edit",
      "id": "85d7b9822b87ed93",
      "item": {
        "type": "paragraph",
        "id": "85d7b9822b87ed93",
        "text": "We begin with a tiny review of connected graphs. To ground our example, we've drawn a connected graph of seven nodes, each labeled [[Team]]. The same mathematics apply for Services, Objects, Classes, Functions, or any combination."
      },
      "date": 1663339786889
    },
    {
      "item": {
        "type": "factory",
        "id": "5e5fbbd32763a12b"
      },
      "id": "5e5fbbd32763a12b",
      "type": "add",
      "after": "71a9302e772218c8",
      "date": 1663356412498
    },
    {
      "type": "edit",
      "id": "5e5fbbd32763a12b",
      "item": {
        "type": "paragraph",
        "id": "5e5fbbd32763a12b",
        "text": "Let us turn the dial up to 50."
      },
      "date": 1663356440381
    },
    {
      "id": "6f9578636d72af1e",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "6f9578636d72af1e",
        "text": "Nodes = 50\nEdges = 1,225\nSubgraphs = 1.9e306\n_N.B. There are 1e78 to 1e82 atoms in the known universe_\n_See table of N=1 to N=75 [https://oeis.org/A001349/b001349.txt oeis]_"
      },
      "after": "5e5fbbd32763a12b",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663356445210
    },
    {
      "type": "edit",
      "id": "e83df7e91f5c1f17",
      "item": {
        "type": "markdown",
        "id": "e83df7e91f5c1f17",
        "text": "Nodes = 7\nEdges = (N * (N - 1))/2 = 21\nSubgraphs = it's complicated = 853\n_See number of connected graphs with n nodes in the Online Encyclopedia of Integer Sequences [https://oeis.org/A001349 oeis]_"
      },
      "date": 1663356564567
    },
    {
      "type": "add",
      "id": "20e7db7090433a8b",
      "item": {
        "type": "paragraph",
        "id": "20e7db7090433a8b",
        "text": "Two points to explain how we cope with such complexity. First, our actual systems are not completely connected. The sparse graph of connections collapses the numbers dramatically. Second, our human brains are more complex than the systems we create with them. We have around 1e11 neurons with 1e15 connections (clearly our brains are also not completely connected graphs)."
      },
      "after": "5e5fbbd32763a12b",
      "date": 1663358533205
    },
    {
      "id": "20e7db7090433a8b",
      "type": "move",
      "order": [
        "2dcaac00",
        "85d7b9822b87ed93",
        "e83df7e91f5c1f17",
        "71a9302e772218c8",
        "5e5fbbd32763a12b",
        "6f9578636d72af1e",
        "20e7db7090433a8b"
      ],
      "date": 1663358535508
    },
    {
      "type": "edit",
      "id": "20e7db7090433a8b",
      "item": {
        "type": "paragraph",
        "id": "20e7db7090433a8b",
        "text": "Two quick points to explain how we cope with such complexity. First, our actual systems are not completely connected. The sparse graph of connections collapses the numbers dramatically. Second, our human brains are more complex than the systems we create with them. We have around 1e11 neurons with 1e15 connections (clearly our brains are also not completely connected graphs of neurons)."
      },
      "date": 1663358642004
    },
    {
      "type": "add",
      "id": "18025d0417e1502e",
      "item": {
        "type": "paragraph",
        "id": "18025d0417e1502e",
        "text": "We leave behind the staggering numbers from graph theory to zoom in on a model of a couple teams in a software company. Each maintain a small graph of their own services or components which they understand to some degree. But outside of their own domain there are many unknown or misunderstood connections."
      },
      "after": "20e7db7090433a8b",
      "date": 1663360800849
    },
    {
      "type": "fork",
      "date": 1663361805046
    },
    {
      "item": {
        "type": "factory",
        "id": "f3367d08d99f5958"
      },
      "id": "f3367d08d99f5958",
      "type": "add",
      "after": "18025d0417e1502e",
      "date": 1663361827891
    },
    {
      "type": "edit",
      "id": "f3367d08d99f5958",
      "item": {
        "type": "assets",
        "id": "f3367d08d99f5958",
        "text": "pages/reliability-and-complexity"
      },
      "date": 1663361871618
    },
    {
      "type": "fork",
      "date": 1663361946553
    },
    {
      "type": "add",
      "id": "66801cb6623f620c",
      "item": {
        "type": "factory",
        "id": "66801cb6623f620c",
        "text": "..."
      },
      "after": "18025d0417e1502e",
      "date": 1663361984950
    },
    {
      "type": "edit",
      "id": "66801cb6623f620c",
      "item": {
        "type": "html",
        "id": "66801cb6623f620c",
        "text": "<img width=\"100%\" src=\"/assets/pages/reliability-and-complexity/software-teams-model.svg\">"
      },
      "date": 1663362027613
    },
    {
      "id": "46918a12ba7dba98",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "46918a12ba7dba98",
        "text": "Team B has a collection of services that they have inherited from a previous team that disbanded or left the company. The services they know well consume most of their attention which leaves the main adopted service a black box. They only know that there are three related services and a number of outside teams who depend on the black box. Those internal customers prevent them from just shutting it down. They've been in this situation for months (or for some teams, years) but can never get enough headroom in their schedule to learn or replace the adopted systems."
      },
      "after": "66801cb6623f620c",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663362056428
    },
    {
      "id": "1a5750384791c8e5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1a5750384791c8e5",
        "text": "Team A and Team B know about each other, though they don't work closely together. They have been in a few incidents together, so they know that their systems are a little entangled. But both are too busy with their internal systems to devote much time to understanding how they're connected. The shared incidents are infrequent enough that it never really becomes a priority."
      },
      "after": "46918a12ba7dba98",
      "attribution": {
        "page": "Scratch"
      },
      "date": 1663362060667
    },
    {
      "type": "fork",
      "date": 1663442591494
    },
    {
      "item": {
        "type": "factory",
        "id": "063842169997f01b"
      },
      "id": "063842169997f01b",
      "type": "add",
      "after": "f3367d08d99f5958",
      "date": 1663445698803
    },
    {
      "type": "edit",
      "id": "063842169997f01b",
      "item": {
        "type": "pagefold",
        "id": "063842169997f01b",
        "text": "."
      },
      "date": 1663445702408
    },
    {
      "item": {
        "type": "factory",
        "id": "efb07772b4458615"
      },
      "id": "efb07772b4458615",
      "type": "add",
      "after": "063842169997f01b",
      "date": 1663445704586
    },
    {
      "type": "edit",
      "id": "efb07772b4458615",
      "item": {
        "type": "paragraph",
        "id": "efb07772b4458615",
        "text": "Continue the story to connect this example from Netflix Vizceral."
      },
      "date": 1663445737209
    },
    {
      "type": "add",
      "id": "24cc5d33a69f4216",
      "item": {
        "type": "paragraph",
        "id": "24cc5d33a69f4216",
        "text": "YOUTUBE ..."
      },
      "after": "efb07772b4458615",
      "date": 1663445745179
    },
    {
      "type": "edit",
      "id": "24cc5d33a69f4216",
      "item": {
        "type": "factory",
        "id": "24cc5d33a69f4216",
        "text": "YOUTUBE MYHf_BXWuOc"
      },
      "date": 1663445767636
    },
    {
      "type": "edit",
      "id": "24cc5d33a69f4216",
      "item": {
        "type": "video",
        "id": "24cc5d33a69f4216",
        "text": "YOUTUBE MYHf_BXWuOc\nNetflix Vizceral Regional View [ source]"
      },
      "date": 1663445785772
    },
    {
      "type": "edit",
      "id": "24cc5d33a69f4216",
      "item": {
        "type": "video",
        "id": "24cc5d33a69f4216",
        "text": "YOUTUBE MYHf_BXWuOc\nNetflix Vizceral Regional View [https://www.youtube.com/watch?v=MYHf_BXWuOc youtube]"
      },
      "date": 1663445805391
    },
    {
      "type": "edit",
      "id": "24cc5d33a69f4216",
      "item": {
        "type": "video",
        "id": "24cc5d33a69f4216",
        "text": "YOUTUBE MYHf_BXWuOc\nNetflix Vizceral Regional View (30s) [https://www.youtube.com/watch?v=MYHf_BXWuOc youtube]"
      },
      "date": 1663445841878
    },
    {
      "id": "46918a12ba7dba98",
      "type": "remove",
      "date": 1663457612295
    },
    {
      "id": "1a5750384791c8e5",
      "type": "remove",
      "date": 1663457619651
    },
    {
      "type": "edit",
      "id": "18025d0417e1502e",
      "item": {
        "type": "paragraph",
        "id": "18025d0417e1502e",
        "text": "We leave behind the staggering numbers from graph theory to zoom in on a model of a couple teams in a software company. We can use this diagram to describe many examples of the challenges of software design.  Each team maintains a small graph of their own services or components which they understand to some degree. But outside of their own domain there are many unknown or misunderstood connections."
      },
      "date": 1663458031799
    },
    {
      "type": "add",
      "id": "bba98400a3a49e9e",
      "item": {
        "type": "paragraph",
        "id": "bba98400a3a49e9e",
        "text": "Product teams tend to have more software engineers than reliability engineers."
      },
      "after": "063842169997f01b",
      "date": 1663556710885
    },
    {
      "id": "bba98400a3a49e9e",
      "type": "move",
      "order": [
        "2dcaac00",
        "85d7b9822b87ed93",
        "e83df7e91f5c1f17",
        "71a9302e772218c8",
        "5e5fbbd32763a12b",
        "6f9578636d72af1e",
        "20e7db7090433a8b",
        "18025d0417e1502e",
        "66801cb6623f620c",
        "bba98400a3a49e9e",
        "f3367d08d99f5958",
        "063842169997f01b",
        "efb07772b4458615",
        "24cc5d33a69f4216"
      ],
      "date": 1663561762241
    },
    {
      "type": "edit",
      "id": "bba98400a3a49e9e",
      "item": {
        "type": "paragraph",
        "id": "bba98400a3a49e9e",
        "text": "In general terms, software companies staff themselves with many more software engineers than reliability engineers. The software engineers tend to know their own systems relatively well—the things inside the circles in this diagram. Reliability engineers tend to know more about how things are connected or they know ways to navigate these vast unknowns—the grey clouds in the diagram."
      },
      "date": 1663562213814
    },
    {
      "type": "add",
      "id": "6a456d3aacc44d06",
      "item": {
        "type": "paragraph",
        "id": "6a456d3aacc44d06",
        "text": "But every step of growth in teams, services, customers, the unknowns grow faster. Arguably, we need more reliability engineers than software engineers."
      },
      "after": "bba98400a3a49e9e",
      "date": 1663562349136
    },
    {
      "type": "add",
      "id": "c83b1af1348e1335",
      "item": {
        "type": "paragraph",
        "id": "c83b1af1348e1335",
        "text": "Another dimension of this challenge is that the software industry doesn't really know how to teach these relationship skills. Mostly, we throw people in the deep end with no preparation."
      },
      "after": "6a456d3aacc44d06",
      "date": 1663562561550
    },
    {
      "type": "edit",
      "id": "6a456d3aacc44d06",
      "item": {
        "type": "paragraph",
        "id": "6a456d3aacc44d06",
        "text": "As a company grows all of the numbers grow accordingly. The number of product teams grow. The number of customers grow. The number of services grows. The number of projects grows. Requests handled by the web site grows. Storage consumed by the data grows. The customer service organization grows. The sales and marketing teams grow. The complexity between all these  growing things grows much, much faster."
      },
      "date": 1663598756004
    },
    {
      "type": "edit",
      "id": "6a456d3aacc44d06",
      "item": {
        "type": "paragraph",
        "id": "6a456d3aacc44d06",
        "text": "As a company grows all of the numbers grow accordingly. The number of product teams grow. The number of customers grow. The number of services grows. The number of projects grows. Requests handled by the web site grows. Storage consumed by the data grows. The customer service organization grows. The sales and marketing teams grow."
      },
      "date": 1663600375399
    },
    {
      "type": "add",
      "id": "426b26574e0a9f0b",
      "item": {
        "type": "paragraph",
        "id": "426b26574e0a9f0b",
        "text": "The complexity between all these  growing things grows much, much faster."
      },
      "after": "6a456d3aacc44d06",
      "date": 1663600376530
    },
    {
      "type": "edit",
      "id": "2dcaac00",
      "item": {
        "id": "2dcaac00",
        "type": "paragraph",
        "text": "We consistently underestimate complexity. Yet somehow we also keep things running. Reliability must be addressed in the relationships between things. "
      },
      "date": 1663600476771
    },
    {
      "type": "edit",
      "id": "2dcaac00",
      "item": {
        "id": "2dcaac00",
        "type": "paragraph",
        "text": "We consistently underestimate complexity. Yet somehow we also keep things running. Reliability is an emergent property of the entire system. It resides in the relationships between things. That is why it remains profoundly difficult."
      },
      "date": 1663600646924
    },
    {
      "type": "edit",
      "id": "85d7b9822b87ed93",
      "item": {
        "type": "paragraph",
        "id": "85d7b9822b87ed93",
        "text": "A tiny review of connected graphs. We've drawn a connected graph of seven nodes, each labeled [[Team]]. The same mathematics apply for Services, Objects, Classes, Functions, or any combination."
      },
      "date": 1663600870834
    },
    {
      "type": "add",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "paragraph",
        "id": "d105831f6d6d4699",
        "text": "How Complex Systems Fail. [https://how.complexsystems.fail/#3 #3]"
      },
      "after": "2dcaac00",
      "date": 1663600919565
    },
    {
      "type": "add",
      "id": "d6ab359b565cbcf3",
      "item": {
        "type": "paragraph",
        "id": "d6ab359b565cbcf3",
        "text": "How Complex Systems Fail. [https://how.complexsystems.fail/#18 #18]"
      },
      "after": "d105831f6d6d4699",
      "date": 1663600939747
    },
    {
      "type": "edit",
      "id": "d6ab359b565cbcf3",
      "item": {
        "type": "markdown",
        "id": "d6ab359b565cbcf3",
        "text": "> 18. Failure free operations require experience with failure.\n> \n> Recognizing hazard and successfully manipulating system operations to remain inside the tolerable performance boundaries requires intimate contact with failure. More robust system performance is likely to arise in systems where operators can discern the “edge of the envelope”. This is where system performance begins to deteriorate, becomes difficult to predict, or cannot be readily recovered.\n—How Complex Systems Fail [https://how.complexsystems.fail/#18 #18]"
      },
      "date": 1663601036983
    },
    {
      "type": "edit",
      "id": "d6ab359b565cbcf3",
      "item": {
        "type": "markdown",
        "id": "d6ab359b565cbcf3",
        "text": "> 18. Failure free operations require experience with failure.\n> \n> Recognizing hazard and successfully manipulating system operations to remain inside the tolerable performance boundaries requires intimate contact with failure. More robust system performance is likely to arise in systems where operators can discern the “edge of the envelope”. This is where system performance begins to deteriorate, becomes difficult to predict, or cannot be readily recovered.\n\n—How Complex Systems Fail [https://how.complexsystems.fail/#18 #18]"
      },
      "date": 1663601049715
    },
    {
      "type": "edit",
      "id": "d6ab359b565cbcf3",
      "item": {
        "type": "markdown",
        "id": "d6ab359b565cbcf3",
        "text": "> Failure free operations require experience with failure.\n> \n> Recognizing hazard and successfully manipulating system operations to remain inside the tolerable performance boundaries requires intimate contact with failure. More robust system performance is likely to arise in systems where operators can discern the “edge of the envelope”. This is where system performance begins to deteriorate, becomes difficult to predict, or cannot be readily recovered.\n\n—How Complex Systems Fail [https://how.complexsystems.fail/#18 #18]"
      },
      "date": 1663601063115
    },
    {
      "type": "edit",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "paragraph",
        "id": "d105831f6d6d4699",
        "text": ">  Catastrophe requires multiple failures – single point failures are not enough.\n\nThe array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure."
      },
      "date": 1663601107269
    },
    {
      "type": "edit",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "factory",
        "id": "d105831f6d6d4699",
        "text": ">  Catastrophe requires multiple failures – single point failures are not enough.\n\nThe array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure.How Complex Systems Fail. [https://how.complexsystems.fail/#3 #3]"
      },
      "date": 1663601110050
    },
    {
      "type": "edit",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "markdown",
        "id": "d105831f6d6d4699",
        "text": "> Catastrophe requires multiple failures – single point failures are not enough.\n> \n> The array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure.\n"
      },
      "date": 1663601127576
    },
    {
      "type": "edit",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "markdown",
        "id": "d105831f6d6d4699",
        "text": "> Catastrophe requires multiple failures – single point failures are not enough.\n> \n> The array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure.\n\n—How Complex Systems Fail.\n[https://how.complexsystems.fail/#3 #3]"
      },
      "date": 1663601140701
    },
    {
      "type": "edit",
      "id": "d105831f6d6d4699",
      "item": {
        "type": "markdown",
        "id": "d105831f6d6d4699",
        "text": "> Catastrophe requires multiple failures – single point failures are not enough.\n> \n> The array of defenses works. System operations are generally successful. Overt catastrophic failure occurs when small, apparently innocuous failures join to create opportunity for a systemic accident. Each of these small failures is necessary to cause catastrophe but only the combination is sufficient to permit failure.\n\n—How Complex Systems Fail. [https://how.complexsystems.fail/#3 #3]"
      },
      "date": 1663601148917
    },
    {
      "type": "add",
      "id": "c18f703f06514889",
      "item": {
        "type": "paragraph",
        "id": "c18f703f06514889",
        "text": "We begin with two insights from How Complex Systems Fail."
      },
      "after": "2dcaac00",
      "date": 1663601194010
    },
    {
      "type": "edit",
      "id": "c18f703f06514889",
      "item": {
        "type": "paragraph",
        "id": "c18f703f06514889",
        "text": "We begin with two insights from How Complex Systems Fail. [https://how.complexsystems.fail site]"
      },
      "date": 1663601213874
    },
    {
      "type": "edit",
      "id": "c18f703f06514889",
      "item": {
        "type": "paragraph",
        "id": "c18f703f06514889",
        "text": "An insight from How Complex Systems Fail. [https://how.complexsystems.fail site]"
      },
      "date": 1663601271154
    },
    {
      "id": "d6ab359b565cbcf3",
      "type": "move",
      "order": [
        "2dcaac00",
        "c18f703f06514889",
        "d105831f6d6d4699",
        "85d7b9822b87ed93",
        "e83df7e91f5c1f17",
        "71a9302e772218c8",
        "5e5fbbd32763a12b",
        "6f9578636d72af1e",
        "20e7db7090433a8b",
        "18025d0417e1502e",
        "66801cb6623f620c",
        "bba98400a3a49e9e",
        "6a456d3aacc44d06",
        "426b26574e0a9f0b",
        "c83b1af1348e1335",
        "d6ab359b565cbcf3",
        "f3367d08d99f5958",
        "063842169997f01b",
        "efb07772b4458615",
        "24cc5d33a69f4216"
      ],
      "date": 1663601311120
    },
    {
      "type": "edit",
      "id": "2dcaac00",
      "item": {
        "id": "2dcaac00",
        "type": "paragraph",
        "text": "We consistently underestimate complexity. Yet somehow we also keep things running. Reliability is an emergent property of the entire system. It resides in the relationships between things. It remains profoundly difficult."
      },
      "date": 1663601491705
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1663617268428
    },
    {
      "type": "edit",
      "id": "d6ab359b565cbcf3",
      "item": {
        "type": "markdown",
        "id": "d6ab359b565cbcf3",
        "text": "> Failure free operations require experience with failure.\n> \n> Recognizing hazard and successfully manipulating system operations to remain inside the tolerable performance boundaries requires intimate contact with failure. More robust system performance is likely to arise in systems where operators can discern the “edge of the envelope”. This is where system performance begins to deteriorate, becomes difficult to predict, or cannot be readily recovered.\n\n— [[How Complex Systems Fail]]. [https://how.complexsystems.fail/#18 #18]"
      },
      "date": 1663617285286
    }
  ]
}