{
  "title": "Trojan Source",
  "story": [
    {
      "type": "markdown",
      "id": "e72d7e57c609628e",
      "text": " Attackers could Trojanize source code that still looks legitimate\n\nDue to vulnerabilities in the Unicode standard, attackers could place backdoors in source code that security researchers would not notice. "
    },
    {
      "type": "markdown",
      "id": "a3a127fe541e6179",
      "text": "Using certain tactics, attackers could theoretically add malicious functions to any source code without an examination of the code by security researchers revealing anything unusual. If the source code is then compiled and executed, attackers could, for example, use backdoors to infiltrate computers. Basically every programming language is affected by this."
    },
    {
      "type": "markdown",
      "id": "205b8d012f3e01fc",
      "text": "# Veiled back door"
    },
    {
      "type": "markdown",
      "id": "c18ff0ac6164e2cb",
      "text": "Security researchers from the University of Cambridge and University of Edinburgh warn against this in the detailed report \"Trojan Source Invisible Vulnerabilities\" [https://www.trojansource.codes/trojan-source.pdf pdf]. The core of the problem is the Unicode standard in connection with the Bidi algorithm. Unicode maps characters and text elements from all known script cultures and character systems. The Bidi override function ensures that languages such as German (read from left to right) and Arabic (read from right to left) are displayed correctly.\n"
    },
    {
      "type": "markdown",
      "id": "66f51a860f91b120",
      "text": "This is exactly where an attacker could start and maliciously rearrange certain groups of characters, for example in commented-out sections. The use of similar or identical-looking characters (homoglyph) for code manipulation is also conceivable.\n\nIf done well, the source code looks harmless to a human observer. However, when compiled to work despite the manipulation, the end result is a program with malicious functions. So far, the vulnerabilities (CVE-2021-42574, CVE-2021-42694) have not been assigned a threat level."
    },
    {
      "type": "markdown",
      "id": "1a966e0da1e7bbd1",
      "text": "# Supply chain attacks conceivable\n"
    },
    {
      "type": "markdown",
      "id": "6bf267662272dc1e",
      "text": "If this happens with widely used open source software, which in turn is used as a building block for other software, the consequences could be far-reaching. Developers would unknowingly spread the malicious functions in forks of software via copy-and-paste. This is especially tricky for large-scale projects like Linux, where basically anyone can submit code.\n"
    },
    {
      "type": "markdown",
      "id": "9c4b8bfe42cd1d99",
      "text": "The security researchers state that they have not documented any attacks of this type so far. They assure that they have held back the publication with details of attacks for 99 days so that developers can provide security updates for their programming languages. The patch wave has already begun and, for example, the programming language Rust is secured against Trojan source attacks in version 1.56.1, according to a report [https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html blog]. Security researchers expect platforms such as Github to react promptly and detect code in programming languages without bidi-protection and issue warnings.\n"
    },
    {
      "type": "markdown",
      "id": "141bce1ee6cd8243",
      "text": "By Dennis Schirrmacher, heise online [https://www.heise.de/news/Angreifer-koennten-Source-Code-trojanisieren-der-trotzdem-legitim-aussieht-6237686.html?utm_source=pocket_mylist news]. Automatically translated into English."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Trojan Source",
        "story": []
      },
      "date": 1635963022616
    },
    {
      "item": {
        "type": "factory",
        "id": "e72d7e57c609628e"
      },
      "id": "e72d7e57c609628e",
      "type": "add",
      "date": 1635963046749
    },
    {
      "type": "edit",
      "id": "e72d7e57c609628e",
      "item": {
        "type": "markdown",
        "id": "e72d7e57c609628e",
        "text": " Attackers could Trojanize source code that still looks legitimate\n\nDue to vulnerabilities in the Unicode standard, attackers could place backdoors in source code that security researchers would not notice. "
      },
      "date": 1635963048881
    },
    {
      "item": {
        "type": "factory",
        "id": "a3a127fe541e6179"
      },
      "id": "a3a127fe541e6179",
      "type": "add",
      "after": "e72d7e57c609628e",
      "date": 1635963075811
    },
    {
      "type": "edit",
      "id": "a3a127fe541e6179",
      "item": {
        "type": "markdown",
        "id": "a3a127fe541e6179",
        "text": "Using certain tactics, attackers could theoretically add malicious functions to any source code without an examination of the code by security researchers revealing anything unusual. If the source code is then compiled and executed, attackers could, for example, use backdoors to infiltrate computers. Basically every programming language is affected by this."
      },
      "date": 1635963079408
    },
    {
      "item": {
        "type": "factory",
        "id": "205b8d012f3e01fc"
      },
      "id": "205b8d012f3e01fc",
      "type": "add",
      "after": "a3a127fe541e6179",
      "date": 1635963112890
    },
    {
      "type": "edit",
      "id": "205b8d012f3e01fc",
      "item": {
        "type": "markdown",
        "id": "205b8d012f3e01fc",
        "text": "# Veiled back door"
      },
      "date": 1635963117992
    },
    {
      "item": {
        "type": "factory",
        "id": "c18ff0ac6164e2cb"
      },
      "id": "c18ff0ac6164e2cb",
      "type": "add",
      "after": "205b8d012f3e01fc",
      "date": 1635963133540
    },
    {
      "type": "edit",
      "id": "c18ff0ac6164e2cb",
      "item": {
        "type": "markdown",
        "id": "c18ff0ac6164e2cb",
        "text": "Security researchers from the University of Cambridge and University of Edinburgh warn against this in the detailed report \"Trojan Source Invisible Vulnerabilities\". The core of the problem is the Unicode standard in connection with the Bidi algorithm. Unicode maps characters and text elements from all known script cultures and character systems. The Bidi override function ensures that languages such as German (read from left to right) and Arabic (read from left to right) are displayed correctly."
      },
      "date": 1635963135706
    },
    {
      "type": "edit",
      "id": "c18ff0ac6164e2cb",
      "item": {
        "type": "markdown",
        "id": "c18ff0ac6164e2cb",
        "text": "Security researchers from the University of Cambridge and University of Edinburgh warn against this in the detailed report \"Trojan Source Invisible Vulnerabilities\" [https://www.trojansource.codes/trojan-source.pdf pdf]. The core of the problem is the Unicode standard in connection with the Bidi algorithm. Unicode maps characters and text elements from all known script cultures and character systems. The Bidi override function ensures that languages such as German (read from left to right) and Arabic (read from left to right) are displayed correctly."
      },
      "date": 1635963163056
    },
    {
      "type": "edit",
      "id": "c18ff0ac6164e2cb",
      "item": {
        "type": "markdown",
        "id": "c18ff0ac6164e2cb",
        "text": "Security researchers from the University of Cambridge and University of Edinburgh warn against this in the detailed report \"Trojan Source Invisible Vulnerabilities\" [https://www.trojansource.codes/trojan-source.pdf pdf]. The core of the problem is the Unicode standard in connection with the Bidi algorithm. Unicode maps characters and text elements from all known script cultures and character systems. The Bidi override function ensures that languages such as German (read from left to right) and Arabic (read from left to right) are displayed correctly.\n"
      },
      "date": 1635963191149
    },
    {
      "type": "add",
      "id": "66f51a860f91b120",
      "item": {
        "type": "markdown",
        "id": "66f51a860f91b120",
        "text": "This is exactly where an attacker could start and maliciously rearrange certain groups of characters, for example in commented-out sections. The use of similar or identical-looking characters (homoglyph) for code manipulation is also conceivable.\n\nIf done well, the source code looks harmless to a human observer. However, when compiled to work despite the manipulation, the end result is a program with malicious functions. So far, the vulnerabilities (CVE-2021-42574, CVE-2021-42694) have not been assigned a threat level."
      },
      "after": "c18ff0ac6164e2cb",
      "date": 1635963192210
    },
    {
      "item": {
        "type": "factory",
        "id": "1a966e0da1e7bbd1"
      },
      "id": "1a966e0da1e7bbd1",
      "type": "add",
      "after": "66f51a860f91b120",
      "date": 1635963208007
    },
    {
      "type": "edit",
      "id": "1a966e0da1e7bbd1",
      "item": {
        "type": "markdown",
        "id": "1a966e0da1e7bbd1",
        "text": "# Supply chain attacks conceivable\n"
      },
      "date": 1635963212245
    },
    {
      "item": {
        "type": "factory",
        "id": "6bf267662272dc1e"
      },
      "id": "6bf267662272dc1e",
      "type": "add",
      "after": "1a966e0da1e7bbd1",
      "date": 1635963224223
    },
    {
      "type": "edit",
      "id": "6bf267662272dc1e",
      "item": {
        "type": "markdown",
        "id": "6bf267662272dc1e",
        "text": "If this happens with widely used open source software, which in turn is used as a building block for other software, the consequences could be far-reaching. Developers would unknowingly spread the malicious functions in forks of software via copy-and-paste. This is especially tricky for large-scale projects like Linux, where basically anyone can submit code."
      },
      "date": 1635963227085
    },
    {
      "type": "edit",
      "id": "6bf267662272dc1e",
      "item": {
        "type": "markdown",
        "id": "6bf267662272dc1e",
        "text": "If this happens with widely used open source software, which in turn is used as a building block for other software, the consequences could be far-reaching. Developers would unknowingly spread the malicious functions in forks of software via copy-and-paste. This is especially tricky for large-scale projects like Linux, where basically anyone can submit code.\n"
      },
      "date": 1635963256793
    },
    {
      "type": "add",
      "id": "9c4b8bfe42cd1d99",
      "item": {
        "type": "markdown",
        "id": "9c4b8bfe42cd1d99",
        "text": "The security researchers state that they have not documented any attacks of this type so far. They assure that they have held back the publication with details of attacks for 99 days so that developers can provide security updates for their programming languages. The patch wave has already begun and, for example, the programming language Rust is secured against Trojan source attacks in version 1.56.1, according to a report. Security researchers expect platforms such as Github to react promptly and detect code in programming languages without bidi-protection and issue warnings."
      },
      "after": "6bf267662272dc1e",
      "date": 1635963257240
    },
    {
      "type": "edit",
      "id": "9c4b8bfe42cd1d99",
      "item": {
        "type": "markdown",
        "id": "9c4b8bfe42cd1d99",
        "text": "The security researchers state that they have not documented any attacks of this type so far. They assure that they have held back the publication with details of attacks for 99 days so that developers can provide security updates for their programming languages. The patch wave has already begun and, for example, the programming language Rust is secured against Trojan source attacks in version 1.56.1, according to a report [https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html blog. Security researchers expect platforms such as Github to react promptly and detect code in programming languages without bidi-protection and issue warnings."
      },
      "date": 1635963281248
    },
    {
      "type": "edit",
      "id": "9c4b8bfe42cd1d99",
      "item": {
        "type": "markdown",
        "id": "9c4b8bfe42cd1d99",
        "text": "The security researchers state that they have not documented any attacks of this type so far. They assure that they have held back the publication with details of attacks for 99 days so that developers can provide security updates for their programming languages. The patch wave has already begun and, for example, the programming language Rust is secured against Trojan source attacks in version 1.56.1, according to a report [https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html blog]. Security researchers expect platforms such as Github to react promptly and detect code in programming languages without bidi-protection and issue warnings."
      },
      "date": 1635963301709
    },
    {
      "type": "edit",
      "id": "9c4b8bfe42cd1d99",
      "item": {
        "type": "markdown",
        "id": "9c4b8bfe42cd1d99",
        "text": "The security researchers state that they have not documented any attacks of this type so far. They assure that they have held back the publication with details of attacks for 99 days so that developers can provide security updates for their programming languages. The patch wave has already begun and, for example, the programming language Rust is secured against Trojan source attacks in version 1.56.1, according to a report [https://blog.rust-lang.org/2021/11/01/cve-2021-42574.html blog]. Security researchers expect platforms such as Github to react promptly and detect code in programming languages without bidi-protection and issue warnings.\n"
      },
      "date": 1635963337501
    },
    {
      "type": "add",
      "id": "141bce1ee6cd8243",
      "item": {
        "type": "markdown",
        "id": "141bce1ee6cd8243",
        "text": "By Dennis Schirrmacher, heise online"
      },
      "after": "9c4b8bfe42cd1d99",
      "date": 1635963349446
    },
    {
      "type": "edit",
      "id": "141bce1ee6cd8243",
      "item": {
        "type": "markdown",
        "id": "141bce1ee6cd8243",
        "text": "By Dennis Schirrmacher, heise online [https://www.heise.de/news/Angreifer-koennten-Source-Code-trojanisieren-der-trotzdem-legitim-aussieht-6237686.html?utm_source=pocket_mylist news]. "
      },
      "date": 1635963382088
    },
    {
      "type": "edit",
      "id": "141bce1ee6cd8243",
      "item": {
        "type": "markdown",
        "id": "141bce1ee6cd8243",
        "text": "By Dennis Schirrmacher, heise online [https://www.heise.de/news/Angreifer-koennten-Source-Code-trojanisieren-der-trotzdem-legitim-aussieht-6237686.html?utm_source=pocket_mylist news]. Automatically translated into English."
      },
      "date": 1635963399319
    },
    {
      "type": "edit",
      "id": "c18ff0ac6164e2cb",
      "item": {
        "type": "markdown",
        "id": "c18ff0ac6164e2cb",
        "text": "Security researchers from the University of Cambridge and University of Edinburgh warn against this in the detailed report \"Trojan Source Invisible Vulnerabilities\" [https://www.trojansource.codes/trojan-source.pdf pdf]. The core of the problem is the Unicode standard in connection with the Bidi algorithm. Unicode maps characters and text elements from all known script cultures and character systems. The Bidi override function ensures that languages such as German (read from left to right) and Arabic (read from right to left) are displayed correctly.\n"
      },
      "date": 1635963648943
    }
  ]
}