{
  "title": "Base64MimeConverter",
  "story": [
    {
      "type": "markdown",
      "id": "67babd3202555ab4",
      "text": "This class encodes and decodes data in Base64 format.  This is MIME encoding.  We translate a whole stream at once, taking a Stream as input and giving one as output.  Returns a whole stream for the caller to use.\n           0 A            17 R            34 i            51 z\n           1 B            18 S            35 j            52 0\n           2 C            19 T            36 k            53 1\n           3 D            20 U            37 l            54 2\n           4 E            21 V            38 m            55 3\n           5 F            22 W            39 n            56 4\n           6 G            23 X            40 o            57 5\n           7 H            24 Y            41 p            58 6\n           8 I            25 Z            42 q            59 7\n           9 J            26 a            43 r            60 8\n          10 K            27 b            44 s            61 9\n          11 L            28 c            45 t            62 +\n          12 M            29 d            46 u            63 /\n          13 N            30 e            47 v\n          14 O            31 f            48 w         (pad) =\n          15 P            32 g            49 x\n          16 Q            33 h            50 y\nOutbound: bytes are broken into 6 bit chunks, and the 0-63 value is converted to a character.  3 data bytes go into 4 characters.\nInbound: Characters are translated in to 0-63 values and shifted into 8 bit bytes.\n\n(See: N. Borenstein, Bellcore, N. Freed, Innosoft, Network Working Group, Request for Comments: RFC 1521, September 1993, MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies. Sec 6.2)\n\nBy Ted Kaehler, based on Tim Olson's Base64Filter."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Base64MimeConverter",
        "story": []
      },
      "date": 1662451515745
    },
    {
      "item": {
        "type": "factory",
        "id": "67babd3202555ab4"
      },
      "id": "67babd3202555ab4",
      "type": "add",
      "date": 1662451518317
    },
    {
      "type": "edit",
      "id": "67babd3202555ab4",
      "item": {
        "type": "markdown",
        "id": "67babd3202555ab4",
        "text": "This class encodes and decodes data in Base64 format.  This is MIME encoding.  We translate a whole stream at once, taking a Stream as input and giving one as output.  Returns a whole stream for the caller to use.\n           0 A            17 R            34 i            51 z\n           1 B            18 S            35 j            52 0\n           2 C            19 T            36 k            53 1\n           3 D            20 U            37 l            54 2\n           4 E            21 V            38 m            55 3\n           5 F            22 W            39 n            56 4\n           6 G            23 X            40 o            57 5\n           7 H            24 Y            41 p            58 6\n           8 I            25 Z            42 q            59 7\n           9 J            26 a            43 r            60 8\n          10 K            27 b            44 s            61 9\n          11 L            28 c            45 t            62 +\n          12 M            29 d            46 u            63 /\n          13 N            30 e            47 v\n          14 O            31 f            48 w         (pad) =\n          15 P            32 g            49 x\n          16 Q            33 h            50 y\nOutbound: bytes are broken into 6 bit chunks, and the 0-63 value is converted to a character.  3 data bytes go into 4 characters.\nInbound: Characters are translated in to 0-63 values and shifted into 8 bit bytes.\n\n(See: N. Borenstein, Bellcore, N. Freed, Innosoft, Network Working Group, Request for Comments: RFC 1521, September 1993, MIME (Multipurpose Internet Mail Extensions) Part One: Mechanisms for Specifying and Describing the Format of Internet Message Bodies. Sec 6.2)\n\nBy Ted Kaehler, based on Tim Olson's Base64Filter."
      },
      "date": 1662451520891
    }
  ]
}