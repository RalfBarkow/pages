{
  "title": "TCR",
  "story": [
    {
      "type": "paragraph",
      "id": "e5d26c5c7883ce28",
      "text": "“test && commit || revert” "
    },
    {
      "type": "reference",
      "id": "5683ae7c363f384d",
      "site": "code.wiki.dbbs.co",
      "slug": "prioritize-tempo",
      "title": "Prioritize Tempo",
      "text": "A couple articles draw attention to making extremely small changes. Increase the frequency, make steps smaller and lower-risk. Take that to an extreme and enjoy the [[surprise]] that it actually works. [[Kent Beck]] and [[Ward Cunningham]] are not done changing the software world."
    },
    {
      "type": "markdown",
      "id": "82422ee81fd7aa49",
      "text": "> Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
    },
    {
      "type": "paragraph",
      "id": "6e282c3c7e62f944",
      "text": "\"A handful of bloggers and screencasters have replicated TCR in various languages and programming environments. Usage, so far, is confined to wild-eyed pioneers, but momentum is gathering. If you’re the sort of person who likes to try out new programming [[workflows]] for fun, TCR awaits you. If you like smooth, professional tool support, then you’ll need to write your own.\""
    },
    {
      "type": "paragraph",
      "id": "f19f2a77e9dc9c60",
      "text": "TCR workshop [https://github.com/islomar/tcr-workshop github], [https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864 medium], [https://speakerdeck.com/islomar/tcr-workshop slides]"
    },
    {
      "type": "video",
      "id": "4205ffee3feaf6c8",
      "text": "YOUTUBE ZrHBVTCbcE0\nsubstring, TCR style"
    },
    {
      "type": "paragraph",
      "id": "7a01c8f3fa2e9b9b",
      "text": "Demonstrates the TCR (test && commit || revert) programming workflow with a tricky bit of logic. The fundamental question of TCR is \"how can I make this change in smaller steps?\", because if you take a big step your code is going to disappear *poof*."
    },
    {
      "type": "pagefold",
      "id": "af529afe57099b5a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3dd3da311a40c9cf",
      "text": "[[Llewllyn Falco]] doing Gilded Rose kata with [[TCR]] and snapshot testing"
    },
    {
      "type": "video",
      "id": "25fe1f4ef1b3ce98",
      "text": "YOUTUBE wp6oSVDdbXQ\n[[Llewellyn Falco]]: From 0% to Cleanly Refactored 100% tested code - Craft Conference 2019"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "TCR",
        "story": []
      },
      "date": 1644912500541
    },
    {
      "id": "e5d26c5c7883ce28",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e5d26c5c7883ce28",
        "text": "“test && commit || revert” "
      },
      "date": 1644912577760
    },
    {
      "item": {
        "type": "factory",
        "id": "5683ae7c363f384d"
      },
      "id": "5683ae7c363f384d",
      "type": "add",
      "after": "e5d26c5c7883ce28",
      "date": 1644912616287
    },
    {
      "type": "edit",
      "id": "5683ae7c363f384d",
      "item": {
        "type": "reference",
        "id": "5683ae7c363f384d",
        "site": "code.wiki.dbbs.co",
        "slug": "prioritize-tempo",
        "title": "Prioritize Tempo",
        "text": "A couple articles draw attention to making extremely small changes. Increase the frequency, make steps smaller and lower-risk. Take that to an extreme and enjoy the surprise that it actually works. Kent Beck and Ward Cunningham are not done changing the software world."
      },
      "date": 1644912619145
    },
    {
      "type": "edit",
      "id": "5683ae7c363f384d",
      "item": {
        "type": "reference",
        "id": "5683ae7c363f384d",
        "site": "code.wiki.dbbs.co",
        "slug": "prioritize-tempo",
        "title": "Prioritize Tempo",
        "text": "A couple articles draw attention to making extremely small changes. Increase the frequency, make steps smaller and lower-risk. Take that to an extreme and enjoy the [[surprise]] that it actually works. [[Kent Beck]] and [[Ward Cunningham]] are not done changing the software world."
      },
      "date": 1644912659860
    },
    {
      "id": "82422ee81fd7aa49",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "82422ee81fd7aa49",
        "text": "Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
      },
      "after": "5683ae7c363f384d",
      "date": 1644912693568
    },
    {
      "type": "edit",
      "id": "82422ee81fd7aa49",
      "item": {
        "type": "paragraph",
        "id": "82422ee81fd7aa49",
        "text": "> Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
      },
      "date": 1644912699109
    },
    {
      "type": "edit",
      "id": "82422ee81fd7aa49",
      "item": {
        "type": "markdown",
        "id": "82422ee81fd7aa49",
        "text": "> Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
      },
      "date": 1644912700391
    },
    {
      "item": {
        "type": "factory",
        "id": "f19f2a77e9dc9c60"
      },
      "id": "f19f2a77e9dc9c60",
      "type": "add",
      "after": "82422ee81fd7aa49",
      "date": 1644914092636
    },
    {
      "type": "edit",
      "id": "f19f2a77e9dc9c60",
      "item": {
        "type": "paragraph",
        "id": "f19f2a77e9dc9c60",
        "text": "[https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864 medium]"
      },
      "date": 1644914099362
    },
    {
      "type": "edit",
      "id": "f19f2a77e9dc9c60",
      "item": {
        "type": "paragraph",
        "id": "f19f2a77e9dc9c60",
        "text": "TCR workshop [github], [https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864 medium]"
      },
      "date": 1644914126780
    },
    {
      "type": "edit",
      "id": "f19f2a77e9dc9c60",
      "item": {
        "type": "paragraph",
        "id": "f19f2a77e9dc9c60",
        "text": "TCR workshop [https://github.com/islomar/tcr-workshop github], [https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864 medium]"
      },
      "date": 1644914133183
    },
    {
      "type": "edit",
      "id": "f19f2a77e9dc9c60",
      "item": {
        "type": "paragraph",
        "id": "f19f2a77e9dc9c60",
        "text": "TCR workshop [https://github.com/islomar/tcr-workshop github], [https://medium.com/@kentbeck_7670/test-commit-revert-870bbd756864 medium], [https://speakerdeck.com/islomar/tcr-workshop slides]"
      },
      "date": 1644914167635
    },
    {
      "item": {
        "type": "factory",
        "id": "4205ffee3feaf6c8"
      },
      "id": "4205ffee3feaf6c8",
      "type": "add",
      "after": "f19f2a77e9dc9c60",
      "date": 1644914309369
    },
    {
      "type": "edit",
      "id": "4205ffee3feaf6c8",
      "item": {
        "type": "video",
        "id": "4205ffee3feaf6c8",
        "text": "YOUTUBE ZrHBVTCbcE0"
      },
      "date": 1644914320229
    },
    {
      "type": "edit",
      "id": "4205ffee3feaf6c8",
      "item": {
        "type": "video",
        "id": "4205ffee3feaf6c8",
        "text": "YOUTUBE ZrHBVTCbcE0\nsubstring, TCR style"
      },
      "date": 1644914334745
    },
    {
      "item": {
        "type": "factory",
        "id": "6e282c3c7e62f944"
      },
      "id": "6e282c3c7e62f944",
      "type": "add",
      "after": "4205ffee3feaf6c8",
      "date": 1644914351674
    },
    {
      "type": "edit",
      "id": "6e282c3c7e62f944",
      "item": {
        "type": "paragraph",
        "id": "6e282c3c7e62f944",
        "text": "\"A handful of bloggers and screencasters have replicated TCR in various languages and programming environments. Usage, so far, is confined to wild-eyed pioneers, but momentum is gathering. If you’re the sort of person who likes to try out new programming workflows for fun, TCR awaits you. If you like smooth, professional tool support, then you’ll need to write your own.\""
      },
      "date": 1644914354641
    },
    {
      "id": "6e282c3c7e62f944",
      "type": "move",
      "order": [
        "e5d26c5c7883ce28",
        "5683ae7c363f384d",
        "82422ee81fd7aa49",
        "6e282c3c7e62f944",
        "f19f2a77e9dc9c60",
        "4205ffee3feaf6c8"
      ],
      "date": 1644914363669
    },
    {
      "item": {
        "type": "factory",
        "id": "7a01c8f3fa2e9b9b"
      },
      "id": "7a01c8f3fa2e9b9b",
      "type": "add",
      "after": "4205ffee3feaf6c8",
      "date": 1644915705715
    },
    {
      "type": "edit",
      "id": "7a01c8f3fa2e9b9b",
      "item": {
        "type": "paragraph",
        "id": "7a01c8f3fa2e9b9b",
        "text": "Demonstrates the TCR (test && commit || revert) programming workflow with a tricky bit of logic. The fundamental question of TCR is \"how can I make this change in smaller steps?\", because if you take a big step your code is going to disappear *poof*."
      },
      "date": 1644915707930
    },
    {
      "item": {
        "type": "factory",
        "id": "af529afe57099b5a"
      },
      "id": "af529afe57099b5a",
      "type": "add",
      "after": "7a01c8f3fa2e9b9b",
      "date": 1645083797416
    },
    {
      "type": "edit",
      "id": "af529afe57099b5a",
      "item": {
        "type": "pagefold",
        "id": "af529afe57099b5a",
        "text": "~"
      },
      "date": 1645083800458
    },
    {
      "id": "3dd3da311a40c9cf",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3dd3da311a40c9cf",
        "text": "[[Llewllyn Falco]] doing Gilded Rose kata with [[TCR]] and snapshot testing"
      },
      "after": "af529afe57099b5a",
      "date": 1645083804099
    },
    {
      "id": "25fe1f4ef1b3ce98",
      "type": "add",
      "item": {
        "type": "video",
        "id": "25fe1f4ef1b3ce98",
        "text": "YOUTUBE wp6oSVDdbXQ\n[[Llewellyn Falco]]: From 0% to Cleanly Refactored 100% tested code - Craft Conference 2019"
      },
      "after": "7a01c8f3fa2e9b9b",
      "date": 1645083810556
    },
    {
      "id": "25fe1f4ef1b3ce98",
      "type": "move",
      "order": [
        "e5d26c5c7883ce28",
        "5683ae7c363f384d",
        "82422ee81fd7aa49",
        "6e282c3c7e62f944",
        "f19f2a77e9dc9c60",
        "4205ffee3feaf6c8",
        "7a01c8f3fa2e9b9b",
        "af529afe57099b5a",
        "3dd3da311a40c9cf",
        "25fe1f4ef1b3ce98"
      ],
      "date": 1645083816530
    },
    {
      "type": "edit",
      "id": "6e282c3c7e62f944",
      "item": {
        "type": "paragraph",
        "id": "6e282c3c7e62f944",
        "text": "\"A handful of bloggers and screencasters have replicated TCR in various languages and programming environments. Usage, so far, is confined to wild-eyed pioneers, but momentum is gathering. If you’re the sort of person who likes to try out new programming [[workflows]] for fun, TCR awaits you. If you like smooth, professional tool support, then you’ll need to write your own.\""
      },
      "date": 1661403472188
    }
  ]
}