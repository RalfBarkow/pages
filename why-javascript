{
  "title": "Why JavaScript",
  "story": [
    {
      "type": "paragraph",
      "id": "d3197fcb17c314af",
      "text": "Learning to program in any language is awesome, but what language first? Really there are four I consider, [[Racket]], [[Python]], [[Ruby]], and [[JavaScript]]. But my advice always ends up being: learn JavaScript, unless you are really motivated by another language, then learn that language first :)"
    },
    {
      "type": "paragraph",
      "id": "e6b785796d8493ac",
      "text": "[[Racket]] is an all inclusive educational dialect of Scheme. It is a very cool language with a slick environment for getting started, including great examples and tutorials. Racket is by far the smallest language on this list, which is a big advantage for getting started, but it also is the least popular, and least production focused."
    },
    {
      "type": "paragraph",
      "id": "cbae8b1747b129f2",
      "text": "[[Python]] and [[Ruby]] are wonderful languages. They fall in the middle of the scale of educational to practical. Both are some of the cleanest and clearest languages to read and write, and have a lot of resources that are good for learning. Python also has a large and robust standard library (they refer to it as batteries included, same as Racket), which has good documentation. While Ruby has a very active community of third party modules, including the Rails web framework."
    },
    {
      "type": "paragraph",
      "id": "96a453bc46364a44",
      "text": "[[JavaScript]] on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny."
    },
    {
      "type": "paragraph",
      "id": "ad4ba916175e2e56",
      "text": "However, JavaScript is fun, and it's everywhere. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast. It is an extremely practical language."
    },
    {
      "type": "paragraph",
      "id": "46d0cf21a3f6d58a",
      "text": "JS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in, they pop up out of no where and iterate quickly. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can imagine. "
    },
    {
      "type": "paragraph",
      "id": "b70f377cb8bcc897",
      "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called [[Node.js]], which is much easier to install and deal with dependencies and versions and library dependencies and versions then any other language (this is pain point in both ruby and python)."
    },
    {
      "type": "paragraph",
      "id": "60c0ee11cd990f23",
      "text": "In the end there are no wrong answers for which language to choose first. The most valuable learning tools are motivation and support, so make a language choice to maximize those. And remember you aren't stuck with it forever."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Why JavaScript"
      },
      "date": 1357874790228
    },
    {
      "item": {
        "type": "factory",
        "id": "d3197fcb17c314af"
      },
      "id": "d3197fcb17c314af",
      "type": "add",
      "date": 1357874803029
    },
    {
      "type": "edit",
      "id": "d3197fcb17c314af",
      "item": {
        "type": "paragraph",
        "id": "d3197fcb17c314af",
        "text": "When asked what programming langage I recommend to learn first, I answer JavaScript.  Really there are only three I consider, Racket, Python, and JavaScript. This is my attempt at explaining why:"
      },
      "date": 1357874940579
    },
    {
      "item": {
        "type": "factory",
        "id": "08c521c6dac9a600"
      },
      "id": "08c521c6dac9a600",
      "type": "add",
      "after": "d3197fcb17c314af",
      "date": 1357874983302
    },
    {
      "type": "edit",
      "id": "08c521c6dac9a600",
      "item": {
        "type": "paragraph",
        "id": "08c521c6dac9a600",
        "text": "tl:dr learning to program in any language is awesome\n, I would recommend learning JavaScript, unless you are really motivated by another language, then learn that language first :)"
      },
      "date": 1357875121737
    },
    {
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "Racket (http://racket-lang.org/) an all inclusive educational language. ( I haven't figured out if it's better to learn an educational langage first, or just jump into a practical one, but I've been leaning towards practical.)\n\nPython is a wonderful language. One of the cleanest and clearest to read and write, and has a lot of resources that are good for learning it. It also has a large and robust standard library (they refer to it as batteries included), which has good documentation.\n\nJavaScript on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny.\n\nHowever, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast.\n\nJS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. \n\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "e6b785796d8493ac",
      "type": "add",
      "after": "08c521c6dac9a600",
      "date": 1357875122243
    },
    {
      "type": "edit",
      "id": "e6b785796d8493ac",
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "Racket (http://racket-lang.org/) is an all inclusive educational language. I haven't figured out if it's better to learn an educational langage first, or just jump into a practical one, but I've been leaning towards practical, however this is a very cool language with a slick environment for getting started."
      },
      "date": 1357875275742
    },
    {
      "item": {
        "type": "paragraph",
        "id": "cbae8b1747b129f2",
        "text": "\n\nPython is a wonderful language. One of the cleanest and clearest to read and write, and has a lot of resources that are good for learning it. It also has a large and robust standard library (they refer to it as batteries included), which has good documentation.\n\nJavaScript on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny.\n\nHowever, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast.\n\nJS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. \n\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "cbae8b1747b129f2",
      "type": "add",
      "after": "e6b785796d8493ac",
      "date": 1357875276248
    },
    {
      "type": "edit",
      "id": "cbae8b1747b129f2",
      "item": {
        "type": "paragraph",
        "id": "cbae8b1747b129f2",
        "text": "Python is a wonderful language. One of the cleanest and clearest to read and write, and has a lot of resources that are good for learning it. It also has a large and robust standard library (they refer to it as batteries included, same as Racket), which has good documentation."
      },
      "date": 1357875372084
    },
    {
      "item": {
        "type": "paragraph",
        "id": "96a453bc46364a44",
        "text": "\n\nJavaScript on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny.\n\nHowever, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast.\n\nJS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. \n\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "96a453bc46364a44",
      "type": "add",
      "after": "cbae8b1747b129f2",
      "date": 1357875372589
    },
    {
      "type": "edit",
      "id": "96a453bc46364a44",
      "item": {
        "type": "paragraph",
        "id": "96a453bc46364a44",
        "text": "JavaScript on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny."
      },
      "date": 1357875388125
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ad4ba916175e2e56",
        "text": "\nHowever, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast.\n\nJS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. \n\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "ad4ba916175e2e56",
      "type": "add",
      "after": "96a453bc46364a44",
      "date": 1357875388629
    },
    {
      "type": "edit",
      "id": "ad4ba916175e2e56",
      "item": {
        "type": "paragraph",
        "id": "ad4ba916175e2e56",
        "text": "However, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast."
      },
      "date": 1357875394990
    },
    {
      "item": {
        "type": "paragraph",
        "id": "46d0cf21a3f6d58a",
        "text": "\nJS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. \n\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "46d0cf21a3f6d58a",
      "type": "add",
      "after": "ad4ba916175e2e56",
      "date": 1357875395494
    },
    {
      "type": "edit",
      "id": "46d0cf21a3f6d58a",
      "item": {
        "type": "paragraph",
        "id": "46d0cf21a3f6d58a",
        "text": "JS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. "
      },
      "date": 1357875417032
    },
    {
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "\nJavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "id": "b70f377cb8bcc897",
      "type": "add",
      "after": "46d0cf21a3f6d58a",
      "date": 1357875417536
    },
    {
      "type": "edit",
      "id": "b70f377cb8bcc897",
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in python)."
      },
      "date": 1357875449349
    },
    {
      "type": "remove",
      "id": "08c521c6dac9a600",
      "date": 1357875469422
    },
    {
      "type": "edit",
      "id": "d3197fcb17c314af",
      "item": {
        "type": "paragraph",
        "id": "d3197fcb17c314af",
        "text": "Learning to program in any language is awesome, but what language first? Really there are three I consider, Racket, Python, and JavaScript. But my advice always ends up being: learn JavaScript, unless you are really motivated by another language, then learn that language first :)"
      },
      "date": 1357875987410
    },
    {
      "type": "edit",
      "id": "e6b785796d8493ac",
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "Racket is an all inclusive educational dialect of Scheme. I haven't figured out if it's better to learn an educational langage first, or just jump into a practical one, but I've been leaning towards practical, however this is a very cool language with a slick environment for getting started."
      },
      "date": 1357876097596
    },
    {
      "type": "fork",
      "site": "nrn.io"
    },
    {
      "type": "edit",
      "id": "46d0cf21a3f6d58a",
      "item": {
        "type": "paragraph",
        "id": "46d0cf21a3f6d58a",
        "text": "JS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in and when they pop up out of no where and iterate quickly. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can immagine. "
      },
      "site": "nrn.io",
      "date": 1362256438546
    },
    {
      "type": "fork",
      "date": 1362256464054
    },
    {
      "type": "edit",
      "id": "d3197fcb17c314af",
      "item": {
        "type": "paragraph",
        "id": "d3197fcb17c314af",
        "text": "Learning to program in any language is awesome, but what language first? Really there are four I consider, Racket, Python, Ruby, and JavaScript. But my advice always ends up being: learn JavaScript, unless you are really motivated by another language, then learn that language first :)"
      },
      "date": 1405578752009
    },
    {
      "item": {
        "type": "paragraph",
        "id": "cdcb4f4189eef39e",
        "text": ""
      },
      "id": "cdcb4f4189eef39e",
      "type": "add",
      "after": "d3197fcb17c314af",
      "date": 1405578752516
    },
    {
      "type": "remove",
      "id": "cdcb4f4189eef39e",
      "date": 1405578764545
    },
    {
      "item": {
        "type": "paragraph",
        "id": "753e8eb1da19c574",
        "text": ""
      },
      "id": "753e8eb1da19c574",
      "type": "add",
      "after": "cbae8b1747b129f2",
      "date": 1405578786857
    },
    {
      "type": "remove",
      "id": "753e8eb1da19c574",
      "date": 1405579033622
    },
    {
      "type": "edit",
      "id": "cbae8b1747b129f2",
      "item": {
        "type": "paragraph",
        "id": "cbae8b1747b129f2",
        "text": "Python and Ruby are wonderful languages. They ar both some of the cleanest and clearest to read and write, and have a lot of resources that are good for learning. Python also has a large and robust standard library (they refer to it as batteries included, same as Racket), which has good documentation. While Ruby has a very active community of third party modules, including the Rails web framework."
      },
      "date": 1405579146012
    },
    {
      "type": "edit",
      "id": "cbae8b1747b129f2",
      "item": {
        "type": "paragraph",
        "id": "cbae8b1747b129f2",
        "text": "Python and Ruby are wonderful languages. They fall in the middle of the scale of educational to practical. Both are some of the cleanest and clearest languages to read and write, and have a lot of resources that are good for learning. Python also has a large and robust standard library (they refer to it as batteries included, same as Racket), which has good documentation. While Ruby has a very active community of third party modules, including the Rails web framework."
      },
      "date": 1405579332346
    },
    {
      "type": "edit",
      "id": "e6b785796d8493ac",
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "Racket is an all inclusive educational dialect of Scheme. It is a very cool language with a slick environment for getting started, including great examples and tutorials. Racket is by far the smallest language on this list, which is a big advantage for getting started, but it also is the least popular, and least production focused."
      },
      "date": 1405579597088
    },
    {
      "type": "edit",
      "id": "ad4ba916175e2e56",
      "item": {
        "type": "paragraph",
        "id": "ad4ba916175e2e56",
        "text": "However, JavaScript is fun, and it's every where. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast. It is an extremely practical language."
      },
      "date": 1405579641460
    },
    {
      "item": {
        "type": "paragraph",
        "id": "60c0ee11cd990f23",
        "text": ""
      },
      "id": "60c0ee11cd990f23",
      "type": "add",
      "after": "b70f377cb8bcc897",
      "date": 1413184646462
    },
    {
      "type": "edit",
      "id": "60c0ee11cd990f23",
      "item": {
        "type": "paragraph",
        "id": "60c0ee11cd990f23",
        "text": "In he end there are no wrong answers for which language to choose first. The most valuable learning tools are motivation and support, so choose a language choice to maximize those. And remember you aren't stuck with it forever."
      },
      "date": 1413184814332
    },
    {
      "type": "edit",
      "id": "46d0cf21a3f6d58a",
      "item": {
        "type": "paragraph",
        "id": "46d0cf21a3f6d58a",
        "text": "JS also has the most vibrant community of people independently making and maintaining modules and libraries. Since each one is small they are easy to learn about one at a time, and because there is no committee deciding what gets in, they pop up out of no where and iterate quickly. These things are also more likely to work together then modules in any other language. There are a lot of people in the JS community who have come around to the idea that these libraries should be like legos, and you should be able to plug them together in any way you want to build any kind of crazy thing you can imagine. "
      },
      "date": 1428945434582
    },
    {
      "type": "edit",
      "id": "b70f377cb8bcc897",
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called Node.js, which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in both ruby and python)."
      },
      "date": 1428945471822
    },
    {
      "type": "edit",
      "id": "60c0ee11cd990f23",
      "item": {
        "type": "paragraph",
        "id": "60c0ee11cd990f23",
        "text": "In the end there are no wrong answers for which language to choose first. The most valuable learning tools are motivation and support, so make a language choice to maximize those. And remember you aren't stuck with it forever."
      },
      "date": 1428945529809
    },
    {
      "type": "fork",
      "site": "nrn.io",
      "date": 1638001139028
    },
    {
      "type": "edit",
      "id": "ad4ba916175e2e56",
      "item": {
        "type": "paragraph",
        "id": "ad4ba916175e2e56",
        "text": "However, JavaScript is fun, and it's everywhere. It is the language of the browser, and thanks to the large number of competing implementations is crazy fast. It is an extremely practical language."
      },
      "date": 1652067136104
    },
    {
      "type": "edit",
      "id": "e6b785796d8493ac",
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "[[Racket]] is an all inclusive educational dialect of Scheme. It is a very cool language with a slick environment for getting started, including great examples and tutorials. Racket is by far the smallest language on this list, which is a big advantage for getting started, but it also is the least popular, and least production focused."
      },
      "date": 1652067597337
    },
    {
      "type": "edit",
      "id": "d3197fcb17c314af",
      "item": {
        "type": "paragraph",
        "id": "d3197fcb17c314af",
        "text": "Learning to program in any language is awesome, but what language first? Really there are four I consider, [[Racket]], [[Python]], [[Ruby]], and [[JavaScript]]. But my advice always ends up being: learn JavaScript, unless you are really motivated by another language, then learn that language first :)"
      },
      "date": 1652067655582
    },
    {
      "type": "edit",
      "id": "cbae8b1747b129f2",
      "item": {
        "type": "paragraph",
        "id": "cbae8b1747b129f2",
        "text": "[[Python]] and [[Ruby]] are wonderful languages. They fall in the middle of the scale of educational to practical. Both are some of the cleanest and clearest languages to read and write, and have a lot of resources that are good for learning. Python also has a large and robust standard library (they refer to it as batteries included, same as Racket), which has good documentation. While Ruby has a very active community of third party modules, including the Rails web framework."
      },
      "date": 1652086156334
    },
    {
      "type": "edit",
      "id": "96a453bc46364a44",
      "item": {
        "type": "paragraph",
        "id": "96a453bc46364a44",
        "text": "[[JavaScript]] on the other hand has a kind of confusing syntax, there is almost as much bad advice on how to write it as there is good, and the standard library is tiny."
      },
      "date": 1652086166386
    },
    {
      "type": "edit",
      "id": "b70f377cb8bcc897",
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called [[Node.js]], which is much easier to install and deal with dependancies and versions and library dependancies and versions then any other language (this is pain point in both ruby and python)."
      },
      "date": 1652086201137
    },
    {
      "type": "edit",
      "id": "b70f377cb8bcc897",
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called [[Node.js]], which is much easier to install and deal with dependencies and versions and library dependancies and versions then any other language (this is pain point in both ruby and python)."
      },
      "date": 1652086238491
    },
    {
      "type": "edit",
      "id": "b70f377cb8bcc897",
      "item": {
        "type": "paragraph",
        "id": "b70f377cb8bcc897",
        "text": "JavaScript is also far and away the easiest language to share the programs you have written. You can just put it in a web page. It also has an environment for systems programming, called [[Node.js]], which is much easier to install and deal with dependencies and versions and library dependencies and versions then any other language (this is pain point in both ruby and python)."
      },
      "date": 1652086305406
    }
  ]
}