{
  "title": "contain",
  "story": [
    {
      "type": "markdown",
      "id": "62fd56372bcbcab1",
      "text": "contain | BrE kənˈteɪn, AmE kənˈteɪn |\ntransitive verb\n1 (hold as contents, include) enthalten; (comprise) umfassen\n▸ be contained within a space/between limits\nsich in einem Gebiet/zwischen Grenzen befinden\n2 (prevent from moving) halten\n3 (prevent from spreading) (also Military) aufhalten; eindämmen ‹Krankheit›\n4 (restrain) unterdrücken\n▸ he could hardly contain himself for joy\ner konnte vor Freude kaum an sich (Akk.) halten"
    },
    {
      "type": "reference",
      "id": "ec7d361243aeea47",
      "site": "wiki.ralfbarkow.ch",
      "slug": "containment",
      "title": "Containment",
      "text": "a single concept system that of containment"
    },
    {
      "type": "reference",
      "id": "2b845b913b1c6149",
      "site": "wiki.ralfbarkow.ch",
      "slug": "container-and-contained",
      "title": "Container and Contained",
      "text": "a [[Distinction]] between [[Container]] and contained"
    },
    {
      "type": "reference",
      "id": "a4ddea7972b6707d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "example-contains-rules",
      "title": "Example Contains Rules",
      "text": "A [[Child]] does not discover the world by learning abstract rules. Instead it learns by looking at concrete examples. An example contains the rules as well. In contrast to rules, the recognition of examples can be based on tangible reality. The knowledge extracted from an example serves as a [[Pattern]] that is used to remember facts and to construct new solutions. When grown-ups are about to learn something or have to apply unknown tools, they are put into a child’s position again. They will favor concrete examples over abstract rules. …"
    },
    {
      "type": "reference",
      "id": "fb5c0e997f1443ca",
      "site": "wiki.ralfbarkow.ch",
      "slug": "what-high-abstractions-do",
      "title": "What High-Abstractions Do",
      "text": "For some decades now, the world of social and human sciences has been dealing with a theory of social systems that many people find scandalous, while others are fascinated, even enthusiastic, about this very theory. It is associated with the name [[Niklas Luhmann]] and was essentially developed in Bielefeld, which is why it is sometimes referred to as systems theory of 'Bielefeld provenance', to distinguish it from other theories that also use the term system."
    },
    {
      "type": "reference",
      "id": "bcf61fdf790dd4bf",
      "site": "wiki.ralfbarkow.ch",
      "slug": "traits-in-a-nushell",
      "title": "Traits in a Nushell",
      "text": "Reusable groups of methods: Traits are units of behavior. They are sets of methods that serve as the behavioral building block of classes and primitive units of [[Code Reuse]] [2]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "contain",
        "story": []
      },
      "date": 1673660864268
    },
    {
      "item": {
        "type": "factory",
        "id": "fb5c0e997f1443ca"
      },
      "id": "fb5c0e997f1443ca",
      "type": "add",
      "date": 1673660866532
    },
    {
      "type": "edit",
      "id": "fb5c0e997f1443ca",
      "item": {
        "type": "reference",
        "id": "fb5c0e997f1443ca",
        "site": "wiki.ralfbarkow.ch",
        "slug": "what-high-abstractions-do",
        "title": "What High-Abstractions Do",
        "text": "For some decades now, the world of social and human sciences has been dealing with a theory of social systems that many people find scandalous, while others are fascinated, even enthusiastic, about this very theory. It is associated with the name [[Niklas Luhmann]] and was essentially developed in Bielefeld, which is why it is sometimes referred to as systems theory of 'Bielefeld provenance', to distinguish it from other theories that also use the term system."
      },
      "date": 1673660870229
    },
    {
      "item": {
        "type": "factory",
        "id": "bcf61fdf790dd4bf"
      },
      "id": "bcf61fdf790dd4bf",
      "type": "add",
      "after": "fb5c0e997f1443ca",
      "date": 1673883951254
    },
    {
      "type": "edit",
      "id": "bcf61fdf790dd4bf",
      "item": {
        "type": "reference",
        "id": "bcf61fdf790dd4bf",
        "site": "wiki.ralfbarkow.ch",
        "slug": "traits-in-a-nushell",
        "title": "Traits in a Nushell",
        "text": "Reusable groups of methods: Traits are units of behavior. They are sets of methods that serve as the behavioral building block of classes and primitive units of [[Code Reuse]] [2]."
      },
      "date": 1673883953655
    },
    {
      "item": {
        "type": "factory",
        "id": "a4ddea7972b6707d"
      },
      "id": "a4ddea7972b6707d",
      "type": "add",
      "after": "bcf61fdf790dd4bf",
      "date": 1673883981108
    },
    {
      "type": "edit",
      "id": "a4ddea7972b6707d",
      "item": {
        "type": "reference",
        "id": "a4ddea7972b6707d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "example-contains-rules",
        "title": "Example Contains Rules",
        "text": "A child does not discover the world by learning abstract rules. Instead it learns by looking at concrete examples. An example contains the rules as well. In contrast to rules, the recognition of examples can be based on tangible reality. The knowledge extracted from an example serves as a [[Pattern]] that is used to remember facts and to construct new solutions. When grown-ups are about to learn something or have to apply unknown tools, they are put into a child’s position again. They will favor concrete examples over abstract rules. The rules will happi"
      },
      "date": 1673883984073
    },
    {
      "type": "edit",
      "id": "a4ddea7972b6707d",
      "item": {
        "type": "reference",
        "id": "a4ddea7972b6707d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "example-contains-rules",
        "title": "Example Contains Rules",
        "text": "A child does not discover the world by learning abstract rules. Instead it learns by looking at concrete examples. An example contains the rules as well. In contrast to rules, the recognition of examples can be based on tangible reality. The knowledge extracted from an example serves as a [[Pattern]] that is used to remember facts and to construct new solutions. When grown-ups are about to learn something or have to apply unknown tools, they are put into a child’s position again. They will favor concrete examples over abstract rules. T…"
      },
      "date": 1673884018395
    },
    {
      "type": "edit",
      "id": "a4ddea7972b6707d",
      "item": {
        "type": "reference",
        "id": "a4ddea7972b6707d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "example-contains-rules",
        "title": "Example Contains Rules",
        "text": "A child does not discover the world by learning abstract rules. Instead it learns by looking at concrete examples. An example contains the rules as well. In contrast to rules, the recognition of examples can be based on tangible reality. The knowledge extracted from an example serves as a [[Pattern]] that is used to remember facts and to construct new solutions. When grown-ups are about to learn something or have to apply unknown tools, they are put into a child’s position again. They will favor concrete examples over abstract rules. …"
      },
      "date": 1673884023208
    },
    {
      "item": {
        "type": "factory",
        "id": "ec7d361243aeea47"
      },
      "id": "ec7d361243aeea47",
      "type": "add",
      "after": "a4ddea7972b6707d",
      "date": 1675168521014
    },
    {
      "type": "edit",
      "id": "ec7d361243aeea47",
      "item": {
        "type": "reference",
        "id": "ec7d361243aeea47",
        "site": "wiki.ralfbarkow.ch",
        "slug": "containment",
        "title": "Containment",
        "text": "a single concept system that of containment"
      },
      "date": 1675168528914
    },
    {
      "id": "ec7d361243aeea47",
      "type": "move",
      "order": [
        "ec7d361243aeea47",
        "fb5c0e997f1443ca",
        "bcf61fdf790dd4bf",
        "a4ddea7972b6707d"
      ],
      "date": 1675168531095
    },
    {
      "item": {
        "type": "factory",
        "id": "2b845b913b1c6149"
      },
      "id": "2b845b913b1c6149",
      "type": "add",
      "after": "a4ddea7972b6707d",
      "date": 1678197451330
    },
    {
      "type": "edit",
      "id": "2b845b913b1c6149",
      "item": {
        "type": "reference",
        "id": "2b845b913b1c6149",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container-and-contained",
        "title": "Container and Contained",
        "text": "a [[Distinction]] between [[Container]] and [[contain]]ed"
      },
      "date": 1678197455452
    },
    {
      "type": "edit",
      "id": "2b845b913b1c6149",
      "item": {
        "type": "reference",
        "id": "2b845b913b1c6149",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container-and-contained",
        "title": "Container and Contained",
        "text": "a [[Distinction]] between [[Container]] and contained"
      },
      "date": 1678197462823
    },
    {
      "id": "2b845b913b1c6149",
      "type": "move",
      "order": [
        "ec7d361243aeea47",
        "2b845b913b1c6149",
        "fb5c0e997f1443ca",
        "bcf61fdf790dd4bf",
        "a4ddea7972b6707d"
      ],
      "date": 1678197468833
    },
    {
      "id": "a4ddea7972b6707d",
      "type": "move",
      "order": [
        "ec7d361243aeea47",
        "2b845b913b1c6149",
        "a4ddea7972b6707d",
        "fb5c0e997f1443ca",
        "bcf61fdf790dd4bf"
      ],
      "date": 1678197477036
    },
    {
      "type": "edit",
      "id": "a4ddea7972b6707d",
      "item": {
        "type": "reference",
        "id": "a4ddea7972b6707d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "example-contains-rules",
        "title": "Example Contains Rules",
        "text": "A [[Child]] does not discover the world by learning abstract rules. Instead it learns by looking at concrete examples. An example contains the rules as well. In contrast to rules, the recognition of examples can be based on tangible reality. The knowledge extracted from an example serves as a [[Pattern]] that is used to remember facts and to construct new solutions. When grown-ups are about to learn something or have to apply unknown tools, they are put into a child’s position again. They will favor concrete examples over abstract rules. …"
      },
      "date": 1678197523513
    },
    {
      "id": "62fd56372bcbcab1",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "62fd56372bcbcab1",
        "text": "contain | BrE kənˈteɪn, AmE kənˈteɪn |\ntransitive verb\n1 (hold as contents, include) enthalten; (comprise) umfassen\n▸ be contained within a space/between limits\nsich in einem Gebiet/zwischen Grenzen befinden\n2 (prevent from moving) halten\n3 (prevent from spreading) (also Military) aufhalten; eindämmen ‹Krankheit›\n4 (restrain) unterdrücken\n▸ he could hardly contain himself for joy\ner konnte vor Freude kaum an sich (Akk.) halten"
      },
      "attribution": {
        "page": "scratch"
      },
      "date": 1713350854158
    }
  ]
}