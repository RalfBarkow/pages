{
  "title": "Adjacency Matrix",
  "story": [
    {
      "type": "paragraph",
      "id": "f869104571e1cccc",
      "text": "Representing a Weighted [[Graph]] with an adjacency matrix in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]"
    },
    {
      "type": "paragraph",
      "id": "3e2d05dbf43dc24d",
      "text": "So to represent a graph as an adjacency matrix, we will use the intersections of the columns and rows to represent an edge. For an unweighted graph, that intersection will just have a value of 1 to represent an edge between two vertices. For a weighted graph, we will simply put the weight as the value at that intersection. Let’s take this undirected, weighted graph:"
    },
    {
      "type": "html",
      "id": "077971eb315963db",
      "text": "<img\n  width=\"100%\"\n  src=\"https://miro.medium.com/max/1400/1*1NdEf2c88XIkr4FIcoNGzQ.webp\"\n>"
    },
    {
      "type": "paragraph",
      "id": "8d0e4f67b32435ab",
      "text": "First let’s just look at it represented as a grid, so you can see what I mean when I say ‘column’ and ‘row’."
    },
    {
      "type": "code",
      "id": "e54c96639e210231",
      "text": "  A B C D\nA 0 2 3 0\nB 2 0 0 2\nC 3 0 0 6\nD 0 2 6 0"
    },
    {
      "type": "paragraph",
      "id": "9807292b12a78771",
      "text": "Now, as an actual matrix:"
    },
    {
      "type": "code",
      "id": "73b1cec64391324a",
      "text": "[[0, 2, 3, 0],\n [2, 0, 0, 2],\n [3, 0, 0, 6],\n [0, 2, 6, 0]]"
    },
    {
      "type": "markdown",
      "id": "5a28f60a75cf5d3f",
      "text": "You can see an undirected graph will be symmetrical across the top left to bottom right diagonal. Which means, if we have two vertices, i and j, which are connected by an edge, that means `matrix[i][j]` will be equal to `matrix[j][i]`."
    },
    {
      "type": "markdown",
      "id": "b8e5305208cc4bed",
      "text": "# Code"
    },
    {
      "type": "paragraph",
      "id": "1c726ccff155714d",
      "text": "Let’s start with our class constructor. ⇒ [[Graph]]"
    },
    {
      "type": "code",
      "id": "7ca6698985dc3e92",
      "text": "class Graph {\n    constructor(size = 1) {\n        this.size = size;\n        this.matrix = [];\n        for (let i = 0; i < size; i++) {\n            this.matrix.push([]);\n            for (let j = 0; j < size; j++) {\n                this.matrix[i][j] = 0;\n            }\n        }\n    }\n}"
    },
    {
      "type": "paragraph",
      "id": "648ff2a57d55c7fa",
      "text": "[…]"
    },
    {
      "type": "pagefold",
      "id": "2d68515a2327f320",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4619a9dc821d1418",
      "text": "Representing a Weighted [[Graph]] with an adjacency matrix in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]",
      "alias": "f869104571e1cccc"
    },
    {
      "type": "reference",
      "id": "6b28b961d23b3f4d",
      "site": "don.noyes.asia.wiki.org",
      "slug": "network-visualisation",
      "title": "Network Visualisation",
      "text": "Here we list a few pages and sites about graph and network visualisation as it relates to [[FedWiki]]."
    },
    {
      "id": "ad46c28785353297",
      "type": "reference",
      "site": "c0de.academy",
      "slug": "centrality-measures",
      "title": "Centrality measures",
      "text": "Information about the relative importance of nodes and edges in a graph can be obtained through [[Centrality]] measures, widely used in disciplines like [[Sociology]]. For example, [[eigenvector centrality]] uses the [[eigenvectors]] of the adjacency matrix corresponding to a network, to determine nodes that tend to be frequently visited. Formally established measures of centrality are [[degree centrality]], [[closeness centrality]], [[betweenness centrality]], [[eigenvector centrality]], [[subgraph centrality]] and [[Katz centrality]]. The purpose or objective of analysis generally determines the type of centrality measure to be used. For example, if one is interested in dynamics on networks or the robustness of a network to node/link removal, often the [[dynamical importance]][http://prl.aps.org/abstract/PRL/v97/i9/e094102 Characterizing the Dynamical Importance of Network Nodes and Links]  of a node is the most relevant centrality measure.For a centrality measure based on k-core analysis see ref.[ A model of Internet topology using k-shell decomposition]"
    },
    {
      "type": "reference",
      "id": "281ee390046a9ca3",
      "site": "wiki.ralfbarkow.ch",
      "slug": "representation-of-a-graph-via-a-matrix",
      "title": "Representation of a Graph via a Matrix",
      "text": "⇒ [[Matrices are Graphs]]."
    },
    {
      "type": "reference",
      "id": "03e4503e01b61936",
      "site": "found.ward.bay.wiki.org",
      "slug": "matrices-are-graphs",
      "title": "Matrices are Graphs",
      "text": "The single most undervalued fact of linear algebra: matrices are graphs, and graphs are matrices."
    },
    {
      "type": "paragraph",
      "id": "c0c9da24895f49cf",
      "text": "⇒ [[Data Import with Vizaj]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Adjacency Matrix",
        "story": []
      },
      "date": 1674460917502
    },
    {
      "item": {
        "type": "factory",
        "id": "6b28b961d23b3f4d"
      },
      "id": "6b28b961d23b3f4d",
      "type": "add",
      "date": 1674460924990
    },
    {
      "type": "edit",
      "id": "6b28b961d23b3f4d",
      "item": {
        "type": "reference",
        "id": "6b28b961d23b3f4d",
        "site": "don.noyes.asia.wiki.org",
        "slug": "network-visualisation",
        "title": "Network Visualisation",
        "text": "Here we list a few pages and sites about graph and network visualisation as it relates to [[FedWiki]]."
      },
      "date": 1674460929230
    },
    {
      "id": "ad46c28785353297",
      "type": "add",
      "item": {
        "id": "ad46c28785353297",
        "type": "reference",
        "site": "c0de.academy",
        "slug": "centrality-measures",
        "title": "Centrality measures",
        "text": "Information about the relative importance of nodes and edges in a graph can be obtained through [[centrality]] measures, widely used in disciplines like [[sociology]]. For example, [[eigenvector centrality]] uses the [[eigenvectors]] of the [[adjacency matrix]] corresponding to a network, to determine nodes that tend to be frequently visited. Formally established measures of centrality are [[degree centrality]], [[closeness centrality]], [[betweenness centrality]], [[eigenvector centrality]], [[subgraph centrality]] and [[Katz centrality]]. The purpose or objective of analysis generally determines the type of centrality measure to be used. For example, if one is interested in dynamics on networks or the robustness of a network to node/link removal, often the [[dynamical importance]][http://prl.aps.org/abstract/PRL/v97/i9/e094102 Characterizing the Dynamical Importance of Network Nodes and Links]  of a node is the most relevant centrality measure.For a centrality measure based on k-core analysis see ref.[ A model of Internet topology using k-shell decomposition]"
      },
      "after": "6b28b961d23b3f4d",
      "date": 1674460940840
    },
    {
      "id": "f869104571e1cccc",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f869104571e1cccc",
        "text": "Representing a Weighted [[Graph]] with an [[Adjacency Matrix]] in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]"
      },
      "date": 1674461014057
    },
    {
      "item": {
        "type": "factory",
        "id": "8a462ef1241def6d"
      },
      "id": "8a462ef1241def6d",
      "type": "add",
      "after": "ad46c28785353297",
      "date": 1674461018300
    },
    {
      "type": "remove",
      "id": "8a462ef1241def6d",
      "date": 1674461022158
    },
    {
      "item": {
        "type": "factory",
        "id": "2d68515a2327f320"
      },
      "id": "2d68515a2327f320",
      "type": "add",
      "after": "ad46c28785353297",
      "date": 1674461024960
    },
    {
      "type": "edit",
      "id": "2d68515a2327f320",
      "item": {
        "type": "pagefold",
        "id": "2d68515a2327f320",
        "text": "~"
      },
      "date": 1674461028305
    },
    {
      "id": "2d68515a2327f320",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297"
      ],
      "date": 1674461033155
    },
    {
      "item": {
        "type": "factory",
        "id": "3e2d05dbf43dc24d"
      },
      "id": "3e2d05dbf43dc24d",
      "type": "add",
      "after": "ad46c28785353297",
      "date": 1674462498000
    },
    {
      "id": "3e2d05dbf43dc24d",
      "type": "move",
      "order": [
        "3e2d05dbf43dc24d",
        "f869104571e1cccc",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297"
      ],
      "date": 1674462500217
    },
    {
      "type": "edit",
      "id": "3e2d05dbf43dc24d",
      "item": {
        "type": "paragraph",
        "id": "3e2d05dbf43dc24d",
        "text": "So to represent a graph as an adjacency matrix, we will use the intersections of the columns and rows to represent an edge. For an unweighted graph, that intersection will just have a value of 1 to represent an edge between two vertices. For a weighted graph, we will simply put the weight as the value at that intersection. Let’s take this undirected, weighted graph:"
      },
      "date": 1674462503826
    },
    {
      "id": "f869104571e1cccc",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297"
      ],
      "date": 1674462506210
    },
    {
      "item": {
        "type": "factory",
        "id": "077971eb315963db"
      },
      "id": "077971eb315963db",
      "type": "add",
      "after": "ad46c28785353297",
      "date": 1674462536864
    },
    {
      "id": "077971eb315963db",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297"
      ],
      "date": 1674462541609
    },
    {
      "type": "edit",
      "id": "077971eb315963db",
      "item": {
        "type": "html",
        "id": "077971eb315963db",
        "text": "<img\n  width=\"100%\"\n  src=\"https://miro.medium.com/max/1400/1*1NdEf2c88XIkr4FIcoNGzQ.webp\"\n>"
      },
      "date": 1674462565075
    },
    {
      "item": {
        "type": "factory",
        "id": "8d0e4f67b32435ab"
      },
      "id": "8d0e4f67b32435ab",
      "type": "add",
      "after": "ad46c28785353297",
      "date": 1674462580385
    },
    {
      "id": "8d0e4f67b32435ab",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297"
      ],
      "date": 1674462583238
    },
    {
      "type": "edit",
      "id": "8d0e4f67b32435ab",
      "item": {
        "type": "paragraph",
        "id": "8d0e4f67b32435ab",
        "text": "First let’s just look at it represented as a grid, so you can see what I mean when I say ‘column’ and ‘row’."
      },
      "date": 1674462585209
    },
    {
      "id": "281ee390046a9ca3",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "281ee390046a9ca3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "representation-of-a-graph-via-a-matrix",
        "title": "Representation of a Graph via a Matrix",
        "text": "⇒ [[Matrices are Graphs]]."
      },
      "after": "ad46c28785353297",
      "date": 1674462614417
    },
    {
      "id": "03e4503e01b61936",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "03e4503e01b61936",
        "site": "found.ward.bay.wiki.org",
        "slug": "matrices-are-graphs",
        "title": "Matrices are Graphs",
        "text": "The single most undervalued fact of linear algebra: matrices are graphs, and graphs are matrices."
      },
      "after": "281ee390046a9ca3",
      "date": 1674462619055
    },
    {
      "item": {
        "type": "factory",
        "id": "e54c96639e210231"
      },
      "id": "e54c96639e210231",
      "type": "add",
      "after": "03e4503e01b61936",
      "date": 1674462639951
    },
    {
      "id": "e54c96639e210231",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "e54c96639e210231",
        "03e4503e01b61936"
      ],
      "date": 1674462644072
    },
    {
      "id": "e54c96639e210231",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462647211
    },
    {
      "type": "edit",
      "id": "e54c96639e210231",
      "item": {
        "type": "code",
        "id": "e54c96639e210231",
        "text": "  A B C D\nA 0 2 3 0\nB 2 0 0 2\nC 3 0 0 6\nD 0 2 6 0"
      },
      "date": 1674462648913
    },
    {
      "type": "add",
      "id": "9807292b12a78771",
      "item": {
        "type": "paragraph",
        "id": "9807292b12a78771",
        "text": "Now, as an actual matrix:"
      },
      "after": "8d0e4f67b32435ab",
      "date": 1674462665546
    },
    {
      "id": "9807292b12a78771",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462667848
    },
    {
      "item": {
        "type": "factory",
        "id": "73b1cec64391324a"
      },
      "id": "73b1cec64391324a",
      "type": "add",
      "after": "03e4503e01b61936",
      "date": 1674462676206
    },
    {
      "id": "73b1cec64391324a",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462681341
    },
    {
      "type": "edit",
      "id": "73b1cec64391324a",
      "item": {
        "type": "code",
        "id": "73b1cec64391324a",
        "text": "[[0, 2, 3, 0],\n [2, 0, 0, 2],\n [3, 0, 0, 6],\n [0, 2, 6, 0]]"
      },
      "date": 1674462689183
    },
    {
      "item": {
        "type": "factory",
        "id": "5a28f60a75cf5d3f"
      },
      "id": "5a28f60a75cf5d3f",
      "type": "add",
      "after": "03e4503e01b61936",
      "date": 1674462703646
    },
    {
      "id": "5a28f60a75cf5d3f",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "5a28f60a75cf5d3f",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462707747
    },
    {
      "id": "5a28f60a75cf5d3f",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "5a28f60a75cf5d3f",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462710523
    },
    {
      "type": "edit",
      "id": "5a28f60a75cf5d3f",
      "item": {
        "type": "paragraph",
        "id": "5a28f60a75cf5d3f",
        "text": "You can see an undirected graph will be symmetrical across the top left to bottom right diagonal. Which means, if we have two vertices, i and j, which are connected by an edge, that means matrix[i][j] will be equal to matrix[j][i]."
      },
      "date": 1674462712134
    },
    {
      "type": "edit",
      "id": "5a28f60a75cf5d3f",
      "item": {
        "type": "paragraph",
        "id": "5a28f60a75cf5d3f",
        "text": "You can see an undirected graph will be symmetrical across the top left to bottom right diagonal. Which means, if we have two vertices, i and j, which are connected by an edge, that means `matrix[i][j]` will be equal to `matrix[j][i]`."
      },
      "date": 1674462740934
    },
    {
      "type": "add",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "…"
      },
      "after": "5a28f60a75cf5d3f",
      "date": 1674462747600
    },
    {
      "type": "edit",
      "id": "5a28f60a75cf5d3f",
      "item": {
        "type": "markdown",
        "id": "5a28f60a75cf5d3f",
        "text": "You can see an undirected graph will be symmetrical across the top left to bottom right diagonal. Which means, if we have two vertices, i and j, which are connected by an edge, that means `matrix[i][j]` will be equal to `matrix[j][i]`."
      },
      "date": 1674462748491
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "Code\n\nLet’s start with our class constructor. […]"
      },
      "date": 1674462800997
    },
    {
      "item": {
        "type": "factory",
        "id": "7ca6698985dc3e92"
      },
      "id": "7ca6698985dc3e92",
      "type": "add",
      "after": "03e4503e01b61936",
      "date": 1674462812625
    },
    {
      "type": "edit",
      "id": "7ca6698985dc3e92",
      "item": {
        "type": "code",
        "id": "7ca6698985dc3e92",
        "text": "class Graph {\n    constructor(size = 1) {\n        this.size = size;\n        this.matrix = [];\n        for (let i = 0; i < size; i++) {\n            this.matrix.push([]);\n            for (let j = 0; j < size; j++) {\n                this.matrix[i][j] = 0;\n            }\n        }\n    }\n}"
      },
      "date": 1674462814929
    },
    {
      "id": "7ca6698985dc3e92",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "5a28f60a75cf5d3f",
        "b8e5305208cc4bed",
        "7ca6698985dc3e92",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462819856
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "Code\n\nLet’s start with our class constructor. "
      },
      "date": 1674462827633
    },
    {
      "type": "add",
      "id": "648ff2a57d55c7fa",
      "item": {
        "type": "paragraph",
        "id": "648ff2a57d55c7fa",
        "text": "[…]"
      },
      "after": "b8e5305208cc4bed",
      "date": 1674462828286
    },
    {
      "id": "648ff2a57d55c7fa",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "5a28f60a75cf5d3f",
        "b8e5305208cc4bed",
        "7ca6698985dc3e92",
        "648ff2a57d55c7fa",
        "2d68515a2327f320",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674462830518
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "Code\n\nLet’s start with our class constructor. ⇒ [[Graph]]"
      },
      "date": 1674462866633
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "Code"
      },
      "date": 1674463084679
    },
    {
      "type": "add",
      "id": "1c726ccff155714d",
      "item": {
        "type": "paragraph",
        "id": "1c726ccff155714d",
        "text": "\nLet’s start with our class constructor. ⇒ [[Graph]]"
      },
      "after": "b8e5305208cc4bed",
      "date": 1674463085967
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "paragraph",
        "id": "b8e5305208cc4bed",
        "text": "# Code"
      },
      "date": 1674463088898
    },
    {
      "type": "edit",
      "id": "b8e5305208cc4bed",
      "item": {
        "type": "markdown",
        "id": "b8e5305208cc4bed",
        "text": "# Code"
      },
      "date": 1674463090088
    },
    {
      "type": "edit",
      "id": "1c726ccff155714d",
      "item": {
        "type": "paragraph",
        "id": "1c726ccff155714d",
        "text": "Let’s start with our class constructor. ⇒ [[Graph]]"
      },
      "date": 1674463515048
    },
    {
      "id": "4619a9dc821d1418",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4619a9dc821d1418",
        "text": "Representing a Weighted [[Graph]] with an [[Adjacency Matrix]] in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]",
        "alias": "f869104571e1cccc"
      },
      "after": "e54c96639e210231",
      "date": 1674465688090
    },
    {
      "id": "4619a9dc821d1418",
      "type": "move",
      "order": [
        "f869104571e1cccc",
        "3e2d05dbf43dc24d",
        "077971eb315963db",
        "8d0e4f67b32435ab",
        "e54c96639e210231",
        "9807292b12a78771",
        "73b1cec64391324a",
        "5a28f60a75cf5d3f",
        "b8e5305208cc4bed",
        "1c726ccff155714d",
        "7ca6698985dc3e92",
        "648ff2a57d55c7fa",
        "2d68515a2327f320",
        "4619a9dc821d1418",
        "6b28b961d23b3f4d",
        "ad46c28785353297",
        "281ee390046a9ca3",
        "03e4503e01b61936"
      ],
      "date": 1674465693830
    },
    {
      "type": "edit",
      "id": "f869104571e1cccc",
      "item": {
        "type": "paragraph",
        "id": "f869104571e1cccc",
        "text": "Representing a Weighted [[Graph]] with an adjacency matrix in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]"
      },
      "date": 1674467921039
    },
    {
      "type": "edit",
      "id": "4619a9dc821d1418",
      "item": {
        "type": "paragraph",
        "id": "4619a9dc821d1418",
        "text": "Representing a Weighted [[Graph]] with an adjacency matrix in JavaScript [https://reginafurness.medium.com/representing-a-weighted-graph-with-an-adjacency-matrix-in-javascript-8a803bfbc36f post] by [[Regina Furness]]",
        "alias": "f869104571e1cccc"
      },
      "date": 1674467934564
    },
    {
      "type": "edit",
      "id": "ad46c28785353297",
      "item": {
        "id": "ad46c28785353297",
        "type": "reference",
        "site": "c0de.academy",
        "slug": "centrality-measures",
        "title": "Centrality measures",
        "text": "Information about the relative importance of nodes and edges in a graph can be obtained through [[centrality]] measures, widely used in disciplines like [[sociology]]. For example, [[eigenvector centrality]] uses the [[eigenvectors]] of the adjacency matrix corresponding to a network, to determine nodes that tend to be frequently visited. Formally established measures of centrality are [[degree centrality]], [[closeness centrality]], [[betweenness centrality]], [[eigenvector centrality]], [[subgraph centrality]] and [[Katz centrality]]. The purpose or objective of analysis generally determines the type of centrality measure to be used. For example, if one is interested in dynamics on networks or the robustness of a network to node/link removal, often the [[dynamical importance]][http://prl.aps.org/abstract/PRL/v97/i9/e094102 Characterizing the Dynamical Importance of Network Nodes and Links]  of a node is the most relevant centrality measure.For a centrality measure based on k-core analysis see ref.[ A model of Internet topology using k-shell decomposition]"
      },
      "date": 1674468011290
    },
    {
      "type": "edit",
      "id": "ad46c28785353297",
      "item": {
        "id": "ad46c28785353297",
        "type": "reference",
        "site": "c0de.academy",
        "slug": "centrality-measures",
        "title": "Centrality measures",
        "text": "Information about the relative importance of nodes and edges in a graph can be obtained through [[centrality]] measures, widely used in disciplines like [[Sociology]]. For example, [[eigenvector centrality]] uses the [[eigenvectors]] of the adjacency matrix corresponding to a network, to determine nodes that tend to be frequently visited. Formally established measures of centrality are [[degree centrality]], [[closeness centrality]], [[betweenness centrality]], [[eigenvector centrality]], [[subgraph centrality]] and [[Katz centrality]]. The purpose or objective of analysis generally determines the type of centrality measure to be used. For example, if one is interested in dynamics on networks or the robustness of a network to node/link removal, often the [[dynamical importance]][http://prl.aps.org/abstract/PRL/v97/i9/e094102 Characterizing the Dynamical Importance of Network Nodes and Links]  of a node is the most relevant centrality measure.For a centrality measure based on k-core analysis see ref.[ A model of Internet topology using k-shell decomposition]"
      },
      "date": 1674468123521
    },
    {
      "item": {
        "type": "factory",
        "id": "c0c9da24895f49cf"
      },
      "id": "c0c9da24895f49cf",
      "type": "add",
      "after": "03e4503e01b61936",
      "date": 1674509646959
    },
    {
      "type": "edit",
      "id": "c0c9da24895f49cf",
      "item": {
        "type": "paragraph",
        "id": "c0c9da24895f49cf",
        "text": "⇒ [[Data Import with Vizaj]]"
      },
      "date": 1674509649508
    },
    {
      "type": "edit",
      "id": "ad46c28785353297",
      "item": {
        "id": "ad46c28785353297",
        "type": "reference",
        "site": "c0de.academy",
        "slug": "centrality-measures",
        "title": "Centrality measures",
        "text": "Information about the relative importance of nodes and edges in a graph can be obtained through [[Centrality]] measures, widely used in disciplines like [[Sociology]]. For example, [[eigenvector centrality]] uses the [[eigenvectors]] of the adjacency matrix corresponding to a network, to determine nodes that tend to be frequently visited. Formally established measures of centrality are [[degree centrality]], [[closeness centrality]], [[betweenness centrality]], [[eigenvector centrality]], [[subgraph centrality]] and [[Katz centrality]]. The purpose or objective of analysis generally determines the type of centrality measure to be used. For example, if one is interested in dynamics on networks or the robustness of a network to node/link removal, often the [[dynamical importance]][http://prl.aps.org/abstract/PRL/v97/i9/e094102 Characterizing the Dynamical Importance of Network Nodes and Links]  of a node is the most relevant centrality measure.For a centrality measure based on k-core analysis see ref.[ A model of Internet topology using k-shell decomposition]"
      },
      "date": 1674549949238
    }
  ]
}