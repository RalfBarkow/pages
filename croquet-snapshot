{
  "title": "Croquet Snapshot",
  "story": [
    {
      "type": "paragraph",
      "id": "9587fbe2ed37c46f",
      "text": "Snapshots are copies of the model state that are saved to the cloud. [https://croquet.studio/docs/croquet/tutorial-2_7_snapshots.html page]"
    },
    {
      "type": "paragraph",
      "id": "a8f1bd7ab787ca05",
      "text": "When your [[Croquet]] application is running, the [[Reflector]] will periodically request one of the participants to perform a snapshot.\n\n"
    },
    {
      "type": "markdown",
      "id": "b44f5e7830405d88",
      "text": "Snapshots provide automatic save functionality for your application. If you quit or reload while your application is running, it will automatically reload the last snapshot when the application restarts.\n\n(When you write your initialization routine for your View, take into account that the Model may just have reloaded from a prior snapshot.)\n\nMore importantly, snapshots are how new users synchronize when they join an existing session. When you join an existing session, the following series of events will occur:\n\n1. The local model is initialized with data from the last snapshot.\n1. The reflector resends the local model all events that were transmitted after the last snapshot was taken.\n1. The model simulates all the events to bring the snapshot up-to-date\n1. The local view initializes itself to match the state of the model and subscribes to model events\n\nThe combination of loading the last snapshot and replaying all the intervening events brings the new user in sync with the other users in the session.\n\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Croquet Snapshot",
        "story": []
      },
      "date": 1655385229793
    },
    {
      "item": {
        "type": "factory",
        "id": "9587fbe2ed37c46f"
      },
      "id": "9587fbe2ed37c46f",
      "type": "add",
      "date": 1655385243462
    },
    {
      "type": "edit",
      "id": "9587fbe2ed37c46f",
      "item": {
        "type": "paragraph",
        "id": "9587fbe2ed37c46f",
        "text": "Snapshots are copies of the model state that are saved to the cloud. When your Croquet application is running, the reflector will periodically request one of the participants to perform a snapshot.\n\n"
      },
      "date": 1655385246003
    },
    {
      "type": "edit",
      "id": "9587fbe2ed37c46f",
      "item": {
        "type": "paragraph",
        "id": "9587fbe2ed37c46f",
        "text": "Snapshots are copies of the model state that are saved to the cloud. [https://croquet.studio/docs/croquet/tutorial-2_7_snapshots.html page]"
      },
      "date": 1655385260446
    },
    {
      "type": "add",
      "id": "a8f1bd7ab787ca05",
      "item": {
        "type": "paragraph",
        "id": "a8f1bd7ab787ca05",
        "text": "When your Croquet application is running, the reflector will periodically request one of the participants to perform a snapshot.\n\n"
      },
      "after": "9587fbe2ed37c46f",
      "date": 1655385261727
    },
    {
      "type": "edit",
      "id": "a8f1bd7ab787ca05",
      "item": {
        "type": "paragraph",
        "id": "a8f1bd7ab787ca05",
        "text": "When your Croquet application is running, the [[Reflector]] will periodically request one of the participants to perform a snapshot.\n\n"
      },
      "date": 1655385280109
    },
    {
      "type": "edit",
      "id": "a8f1bd7ab787ca05",
      "item": {
        "type": "paragraph",
        "id": "a8f1bd7ab787ca05",
        "text": "When your [[Croquet]] application is running, the [[Reflector]] will periodically request one of the participants to perform a snapshot.\n\n"
      },
      "date": 1655385396004
    },
    {
      "item": {
        "type": "factory",
        "id": "b44f5e7830405d88"
      },
      "id": "b44f5e7830405d88",
      "type": "add",
      "after": "a8f1bd7ab787ca05",
      "date": 1655385424858
    },
    {
      "type": "edit",
      "id": "b44f5e7830405d88",
      "item": {
        "type": "markdown",
        "id": "b44f5e7830405d88",
        "text": "Snapshots provide automatic save functionality for your application. If you quit or reload while your application is running, it will automatically reload the last snapshot when the application restarts.\n\n(When you write your initialization routine for your View, take into account that the Model may just have reloaded from a prior snapshot.)\n\nMore importantly, snapshots are how new users synchronize when they join an existing session. When you join an existing session, the following series of events will occur:\n\nThe local model is initialized with data from the last snapshot.\nThe reflector resends the local model all events that were transmitted after the last snapshot was taken.\nThe model simulates all the events to bring the snapshot up-to-date\nThe local view initializes itself to match the state of the model and subscribes to model events\nThe combination of loading the last snapshot and replaying all the intervening events brings the new user in sync with the other users in the session.\n\n"
      },
      "date": 1655385426736
    },
    {
      "type": "edit",
      "id": "b44f5e7830405d88",
      "item": {
        "type": "markdown",
        "id": "b44f5e7830405d88",
        "text": "Snapshots provide automatic save functionality for your application. If you quit or reload while your application is running, it will automatically reload the last snapshot when the application restarts.\n\n(When you write your initialization routine for your View, take into account that the Model may just have reloaded from a prior snapshot.)\n\nMore importantly, snapshots are how new users synchronize when they join an existing session. When you join an existing session, the following series of events will occur:\n\n1. The local model is initialized with data from the last snapshot.\n1. The reflector resends the local model all events that were transmitted after the last snapshot was taken.\n1. The model simulates all the events to bring the snapshot up-to-date\n1. The local view initializes itself to match the state of the model and subscribes to model events\n1. The combination of loading the last snapshot and replaying all the intervening events brings the new user in sync with the other users in the session.\n\n"
      },
      "date": 1655385453312
    },
    {
      "type": "edit",
      "id": "b44f5e7830405d88",
      "item": {
        "type": "markdown",
        "id": "b44f5e7830405d88",
        "text": "Snapshots provide automatic save functionality for your application. If you quit or reload while your application is running, it will automatically reload the last snapshot when the application restarts.\n\n(When you write your initialization routine for your View, take into account that the Model may just have reloaded from a prior snapshot.)\n\nMore importantly, snapshots are how new users synchronize when they join an existing session. When you join an existing session, the following series of events will occur:\n\n1. The local model is initialized with data from the last snapshot.\n1. The reflector resends the local model all events that were transmitted after the last snapshot was taken.\n1. The model simulates all the events to bring the snapshot up-to-date\n1. The local view initializes itself to match the state of the model and subscribes to model events\n\nThe combination of loading the last snapshot and replaying all the intervening events brings the new user in sync with the other users in the session.\n\n"
      },
      "date": 1655385469706
    }
  ]
}