{
  "title": "Decode into a Record",
  "story": [
    {
      "type": "paragraph",
      "id": "7cd5d37e71d58b18",
      "text": "Use pipelines to build JSON Decoders in [[Elm]]. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. "
    },
    {
      "type": "code",
      "id": "1904094fbbecf68d",
      "text": "type alias Page =\n    { title : String\n    , story : List Story\n    , journal : List Journal\n    }\n\ndecodePage : Decoder Page\ndecodePage =\n    map3 Page\n        (field \"title\" string)\n        (field \"story\" (list decodeStory))\n        (field \"journal\" (list decodeStoryEdit))\n\n"
    },
    {
      "type": "paragraph",
      "id": "e6df56bb5c6aac3c",
      "text": "This works because a record type alias can be called as a normal function. In that case it accepts one argument for each field (in whatever order the fields are declared in the type alias) and then returns an appropriate record built with those arguments."
    },
    {
      "type": "paragraph",
      "id": "5041a99eeb8dc900",
      "text": "The mapN decoders are straightforward, but require manually changing N whenever the field count changes. The json-decode-pipeline library provides functions designed to be used with the |> operator, with the goal of having decoders that are both easy to read and easy to modify."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Decode into a Record",
        "story": []
      },
      "date": 1685710892394
    },
    {
      "id": "7cd5d37e71d58b18",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. â‡’ [[Decode into a Record]]"
      },
      "attribution": {
        "page": "2023-06-02"
      },
      "date": 1685710897765
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. "
      },
      "date": 1685710903143
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in [[Elm]]. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. "
      },
      "date": 1685710914069
    },
    {
      "item": {
        "type": "factory",
        "id": "1904094fbbecf68d"
      },
      "id": "1904094fbbecf68d",
      "type": "add",
      "after": "7cd5d37e71d58b18",
      "date": 1685712036438
    },
    {
      "type": "edit",
      "id": "1904094fbbecf68d",
      "item": {
        "type": "code",
        "id": "1904094fbbecf68d",
        "text": "type alias Page =\n    { title : String\n    , story : List Story\n    , journal : List Journal\n    }\n\n\n"
      },
      "date": 1685712038802
    },
    {
      "type": "edit",
      "id": "1904094fbbecf68d",
      "item": {
        "type": "code",
        "id": "1904094fbbecf68d",
        "text": "type alias Page =\n    { title : String\n    , story : List Story\n    , journal : List Journal\n    }\n\ndecodePage : Decoder Page\ndecodePage =\n    map3 Page\n        (field \"title\" string)\n        (field \"story\" (list decodeStory))\n        (field \"journal\" (list decodeStoryEdit))\n\n"
      },
      "date": 1685712119243
    },
    {
      "item": {
        "type": "factory",
        "id": "e6df56bb5c6aac3c"
      },
      "id": "e6df56bb5c6aac3c",
      "type": "add",
      "after": "1904094fbbecf68d",
      "date": 1685712137168
    },
    {
      "type": "edit",
      "id": "e6df56bb5c6aac3c",
      "item": {
        "type": "paragraph",
        "id": "e6df56bb5c6aac3c",
        "text": "This works because a record type alias can be called as a normal function. In that case it accepts one argument for each field (in whatever order the fields are declared in the type alias) and then returns an appropriate record built with those arguments."
      },
      "date": 1685712138477
    },
    {
      "item": {
        "type": "factory",
        "id": "5041a99eeb8dc900"
      },
      "id": "5041a99eeb8dc900",
      "type": "add",
      "after": "e6df56bb5c6aac3c",
      "date": 1685712231840
    },
    {
      "type": "edit",
      "id": "5041a99eeb8dc900",
      "item": {
        "type": "paragraph",
        "id": "5041a99eeb8dc900",
        "text": "The mapN decoders are straightforward, but require manually changing N whenever the field count changes. This library provides functions designed to be used with the |> operator, with the goal of having decoders that are both easy to read and easy to modify."
      },
      "date": 1685712236566
    },
    {
      "type": "edit",
      "id": "5041a99eeb8dc900",
      "item": {
        "type": "paragraph",
        "id": "5041a99eeb8dc900",
        "text": "The mapN decoders are straightforward, but require manually changing N whenever the field count changes. The json-decode-pipeline library provides functions designed to be used with the |> operator, with the goal of having decoders that are both easy to read and easy to modify."
      },
      "date": 1685712267861
    }
  ]
}