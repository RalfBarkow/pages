{
  "title": "Elmstatic",
  "story": [
    {
      "type": "paragraph",
      "id": "12c4644a87ff9166",
      "text": "an Elm-to-HTML static site generator [https://korban.net/elm/elmstatic/ page] [https://www.npmjs.com/package/elmstatic npm]"
    },
    {
      "type": "paragraph",
      "id": "6fff7aec848ee1d0",
      "text": "Elmstatic allows you to write the HTML layouts and the styles for the pages of your site in Elm. It’s fairly unopinionated: you can generate whatever HTML you want, however you want — all you need to do is define a suitable main function in each layout. "
    },
    {
      "type": "markdown",
      "id": "c212e5e0a31affff",
      "text": "# Application Frame"
    },
    {
      "type": "frame",
      "id": "3ead459eca190104",
      "text": "//wiki.ralfbarkow.ch/assets/pages/elmstatic/_site/index.html"
    },
    {
      "type": "markdown",
      "id": "fd277b8681288ded",
      "text": "# Assets"
    },
    {
      "type": "assets",
      "id": "6618717e3234ec73",
      "text": "pages/elmstatic/_site"
    },
    {
      "type": "paragraph",
      "id": "ec4ad2e184bae16a",
      "text": "See the \"How to use it\" section on [https://korban.net/elm/elmstatic/ page]"
    },
    {
      "type": "code",
      "id": "950699decfebd1e0",
      "text": "Success! Compiled 7 modules.\n\n    Tag ─────┬──> elm.js\n    Page ────┤\n    Post ────┤\n    Posts ───┘\n"
    },
    {
      "type": "assets",
      "id": "762fb5b2b4c485ea",
      "text": "pages/elmstatic/"
    },
    {
      "type": "paragraph",
      "id": "15a32a243ae444c0",
      "text": "Note: We use the Markdown scaffold. See the \"How things are organised\" section on [https://korban.net/elm/elmstatic/ page]"
    },
    {
      "type": "markdown",
      "id": "c94a04a21ffdf868",
      "text": "# Features"
    },
    {
      "type": "paragraph",
      "id": "2de86b68c97e0275",
      "text": "A summary of current features:"
    },
    {
      "type": "paragraph",
      "id": "3c706c54aaa7cdf3",
      "text": "Pages are generated from Elm code (you can use elm-ui, html or any other package that generates Html msg values)"
    },
    {
      "type": "paragraph",
      "id": "c1fb5e49986e4b6b",
      "text": "CSS is generated from elm-css stylesheets in Elm code (but you can use plain old stylesheets if you like)"
    },
    {
      "type": "paragraph",
      "id": "36b72c789f3034ee",
      "text": "Fully customisable layouts for posts and lists of posts"
    },
    {
      "type": "paragraph",
      "id": "d4d3e87a509bac3d",
      "text": "Optional subsections with their own posts (eg /postgres and /elm on this site)"
    },
    {
      "type": "paragraph",
      "id": "b93336c4584ec7ed",
      "text": "Posts can be written in Markdown or [[elm-markup]] (but you can actually treat content as any format if you like)"
    },
    {
      "type": "paragraph",
      "id": "73e53cd5adefd3bc",
      "text": "Posts can have multiple tags"
    },
    {
      "type": "paragraph",
      "id": "0e09ed7a90317505",
      "text": "Future-dated posts are considered to be drafts and excluded from the build by default (or included with a flag)"
    },
    {
      "type": "paragraph",
      "id": "656ae243b7d6fd18",
      "text": "A page with a list of posts is generated for each tag"
    },
    {
      "type": "paragraph",
      "id": "f092264c21812c83",
      "text": "RSS is generated for the posts, including a feed with all posts and a feed per subsection"
    },
    {
      "type": "paragraph",
      "id": "e90f89016e06e39a",
      "text": "Code blocks have syntax highlighting via Highlight.js (but you can set up something else)"
    },
    {
      "type": "paragraph",
      "id": "78910e88ff529ea7",
      "text": "Watch mode where Elmstatic watches for file changes and rebuilds the site (live reload can be achieved by combining with browser-sync)."
    },
    {
      "type": "paragraph",
      "id": "6ce8af4c60519951",
      "text": "⇒ [[Elm Markup]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Elmstatic",
        "story": []
      },
      "date": 1711518775607
    },
    {
      "item": {
        "type": "factory",
        "id": "12c4644a87ff9166"
      },
      "id": "12c4644a87ff9166",
      "type": "add",
      "date": 1711518777442
    },
    {
      "type": "edit",
      "id": "12c4644a87ff9166",
      "item": {
        "type": "paragraph",
        "id": "12c4644a87ff9166",
        "text": "an Elm-to-HTML static site generator"
      },
      "date": 1711518780233
    },
    {
      "type": "edit",
      "id": "12c4644a87ff9166",
      "item": {
        "type": "paragraph",
        "id": "12c4644a87ff9166",
        "text": "an Elm-to-HTML static site generator [https://korban.net/elm/elmstatic/ page]"
      },
      "date": 1711518791102
    },
    {
      "item": {
        "type": "factory",
        "id": "6618717e3234ec73"
      },
      "id": "6618717e3234ec73",
      "type": "add",
      "after": "12c4644a87ff9166",
      "date": 1711519209232
    },
    {
      "type": "edit",
      "id": "6618717e3234ec73",
      "item": {
        "type": "assets",
        "id": "6618717e3234ec73",
        "text": "pages/elmstatic"
      },
      "date": 1711519221843
    },
    {
      "type": "edit",
      "id": "6618717e3234ec73",
      "item": {
        "type": "assets",
        "id": "6618717e3234ec73",
        "text": "pages/elmstatic/_site"
      },
      "date": 1711519276649
    },
    {
      "item": {
        "type": "factory",
        "id": "3ead459eca190104"
      },
      "id": "3ead459eca190104",
      "type": "add",
      "after": "6618717e3234ec73",
      "date": 1711519284372
    },
    {
      "type": "edit",
      "id": "3ead459eca190104",
      "item": {
        "type": "frame",
        "id": "3ead459eca190104",
        "text": "http://localhost:3000/assets/pages/elmstatic/_site/index.html"
      },
      "date": 1711519287553
    },
    {
      "item": {
        "type": "factory",
        "id": "c212e5e0a31affff"
      },
      "id": "c212e5e0a31affff",
      "type": "add",
      "after": "3ead459eca190104",
      "date": 1711519326329
    },
    {
      "type": "edit",
      "id": "c212e5e0a31affff",
      "item": {
        "type": "markdown",
        "id": "c212e5e0a31affff",
        "text": "# Application Frame"
      },
      "date": 1711519335070
    },
    {
      "id": "c212e5e0a31affff",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6618717e3234ec73",
        "c212e5e0a31affff",
        "3ead459eca190104"
      ],
      "date": 1711519337818
    },
    {
      "item": {
        "type": "factory",
        "id": "fd277b8681288ded"
      },
      "id": "fd277b8681288ded",
      "type": "add",
      "after": "3ead459eca190104",
      "date": 1711519339223
    },
    {
      "type": "edit",
      "id": "fd277b8681288ded",
      "item": {
        "type": "markdown",
        "id": "fd277b8681288ded",
        "text": "# Assets"
      },
      "date": 1711519346066
    },
    {
      "id": "6618717e3234ec73",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73"
      ],
      "date": 1711519350973
    },
    {
      "type": "add",
      "id": "6fff7aec848ee1d0",
      "item": {
        "type": "paragraph",
        "id": "6fff7aec848ee1d0",
        "text": "Elmstatic allows you to write the HTML layouts and the styles for the pages of your site in Elm. It’s fairly unopinionated: you can generate whatever HTML you want, however you want — all you need to do is define a suitable main function in each layout. "
      },
      "after": "12c4644a87ff9166",
      "date": 1711519434614
    },
    {
      "item": {
        "type": "factory",
        "id": "2de86b68c97e0275"
      },
      "id": "2de86b68c97e0275",
      "type": "add",
      "after": "6618717e3234ec73",
      "date": 1711519637963
    },
    {
      "type": "edit",
      "id": "2de86b68c97e0275",
      "item": {
        "type": "paragraph",
        "id": "2de86b68c97e0275",
        "text": "A summary of current features:"
      },
      "date": 1711519639483
    },
    {
      "item": {
        "type": "factory",
        "id": "3c706c54aaa7cdf3"
      },
      "id": "3c706c54aaa7cdf3",
      "type": "add",
      "after": "2de86b68c97e0275",
      "date": 1711519687792
    },
    {
      "type": "edit",
      "id": "3c706c54aaa7cdf3",
      "item": {
        "type": "paragraph",
        "id": "3c706c54aaa7cdf3",
        "text": "Pages are generated from Elm code (you can use elm-ui, html or any other package that generates Html msg values)"
      },
      "date": 1711519693903
    },
    {
      "type": "add",
      "id": "c1fb5e49986e4b6b",
      "item": {
        "type": "paragraph",
        "id": "c1fb5e49986e4b6b",
        "text": "CSS is generated from elm-css stylesheets in Elm code (but you can use plain old stylesheets if you like)\nFully customisable layouts for posts and lists of posts"
      },
      "after": "3c706c54aaa7cdf3",
      "date": 1711519695951
    },
    {
      "type": "add",
      "id": "d4d3e87a509bac3d",
      "item": {
        "type": "paragraph",
        "id": "d4d3e87a509bac3d",
        "text": "Optional subsections with their own posts (eg /postgres and /elm on this site)\nPosts can be written in Markdown or elm-markup (but you can actually treat content as any format if you like)"
      },
      "after": "c1fb5e49986e4b6b",
      "date": 1711519702538
    },
    {
      "type": "add",
      "id": "73e53cd5adefd3bc",
      "item": {
        "type": "paragraph",
        "id": "73e53cd5adefd3bc",
        "text": "Posts can have multiple tags\nFuture-dated posts are considered to be drafts and excluded from the build by default (or included with a flag)"
      },
      "after": "d4d3e87a509bac3d",
      "date": 1711519705319
    },
    {
      "type": "add",
      "id": "656ae243b7d6fd18",
      "item": {
        "type": "paragraph",
        "id": "656ae243b7d6fd18",
        "text": "A page with a list of posts is generated for each tag\nRSS is generated for the posts, including a feed with all posts and a feed per subsection\nCode blocks have syntax highlighting via Highlight.js (but you can set up something else)\nWatch mode where Elmstatic watches for file changes and rebuilds the site (live reload can be achieved by combining with browser-sync)."
      },
      "after": "73e53cd5adefd3bc",
      "date": 1711519708214
    },
    {
      "type": "edit",
      "id": "c1fb5e49986e4b6b",
      "item": {
        "type": "paragraph",
        "id": "c1fb5e49986e4b6b",
        "text": "CSS is generated from elm-css stylesheets in Elm code (but you can use plain old stylesheets if you like)"
      },
      "date": 1711519754869
    },
    {
      "type": "add",
      "id": "36b72c789f3034ee",
      "item": {
        "type": "paragraph",
        "id": "36b72c789f3034ee",
        "text": "Fully customisable layouts for posts and lists of posts"
      },
      "after": "c1fb5e49986e4b6b",
      "date": 1711519756057
    },
    {
      "type": "edit",
      "id": "d4d3e87a509bac3d",
      "item": {
        "type": "paragraph",
        "id": "d4d3e87a509bac3d",
        "text": "Optional subsections with their own posts (eg /postgres and /elm on this site)"
      },
      "date": 1711519775183
    },
    {
      "type": "add",
      "id": "b93336c4584ec7ed",
      "item": {
        "type": "paragraph",
        "id": "b93336c4584ec7ed",
        "text": "Posts can be written in Markdown or elm-markup (but you can actually treat content as any format if you like)"
      },
      "after": "d4d3e87a509bac3d",
      "date": 1711519782488
    },
    {
      "type": "edit",
      "id": "73e53cd5adefd3bc",
      "item": {
        "type": "paragraph",
        "id": "73e53cd5adefd3bc",
        "text": "Posts can have multiple tags"
      },
      "date": 1711519789528
    },
    {
      "type": "add",
      "id": "0e09ed7a90317505",
      "item": {
        "type": "paragraph",
        "id": "0e09ed7a90317505",
        "text": "Future-dated posts are considered to be drafts and excluded from the build by default (or included with a flag)"
      },
      "after": "73e53cd5adefd3bc",
      "date": 1711519789942
    },
    {
      "type": "edit",
      "id": "656ae243b7d6fd18",
      "item": {
        "type": "paragraph",
        "id": "656ae243b7d6fd18",
        "text": "A page with a list of posts is generated for each tag"
      },
      "date": 1711519814478
    },
    {
      "type": "add",
      "id": "f092264c21812c83",
      "item": {
        "type": "paragraph",
        "id": "f092264c21812c83",
        "text": "RSS is generated for the posts, including a feed with all posts and a feed per subsection"
      },
      "after": "656ae243b7d6fd18",
      "date": 1711519820741
    },
    {
      "type": "add",
      "id": "e90f89016e06e39a",
      "item": {
        "type": "paragraph",
        "id": "e90f89016e06e39a",
        "text": "Code blocks have syntax highlighting via Highlight.js (but you can set up something else)"
      },
      "after": "f092264c21812c83",
      "date": 1711519828894
    },
    {
      "type": "add",
      "id": "78910e88ff529ea7",
      "item": {
        "type": "paragraph",
        "id": "78910e88ff529ea7",
        "text": "Watch mode where Elmstatic watches for file changes and rebuilds the site (live reload can be achieved by combining with browser-sync)."
      },
      "after": "e90f89016e06e39a",
      "date": 1711519836342
    },
    {
      "item": {
        "type": "factory",
        "id": "bc04aa1f998c5a13"
      },
      "id": "bc04aa1f998c5a13",
      "type": "add",
      "after": "78910e88ff529ea7",
      "date": 1711519962741
    },
    {
      "type": "edit",
      "id": "bc04aa1f998c5a13",
      "item": {
        "type": "markdown",
        "id": "bc04aa1f998c5a13",
        "text": "Success! Compiled 7 modules.\n\n    Tag ─────┬──> elm.js\n    Page ────┤\n    Post ────┤\n    Posts ───┘\n"
      },
      "date": 1711519966510
    },
    {
      "item": {
        "type": "factory",
        "id": "950699decfebd1e0"
      },
      "id": "950699decfebd1e0",
      "type": "add",
      "after": "bc04aa1f998c5a13",
      "date": 1711519974826
    },
    {
      "type": "edit",
      "id": "950699decfebd1e0",
      "item": {
        "type": "code",
        "id": "950699decfebd1e0",
        "text": "Success! Compiled 7 modules.\n\n    Tag ─────┬──> elm.js\n    Page ────┤\n    Post ────┤\n    Posts ───┘\n"
      },
      "date": 1711519977254
    },
    {
      "type": "remove",
      "id": "bc04aa1f998c5a13",
      "date": 1711519982556
    },
    {
      "item": {
        "type": "factory",
        "id": "762fb5b2b4c485ea"
      },
      "id": "762fb5b2b4c485ea",
      "type": "add",
      "after": "950699decfebd1e0",
      "date": 1711520014518
    },
    {
      "id": "950699decfebd1e0",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "950699decfebd1e0",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7",
        "762fb5b2b4c485ea"
      ],
      "date": 1711520037984
    },
    {
      "id": "950699decfebd1e0",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "950699decfebd1e0",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7",
        "762fb5b2b4c485ea"
      ],
      "date": 1711520165049
    },
    {
      "id": "762fb5b2b4c485ea",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "950699decfebd1e0",
        "762fb5b2b4c485ea",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7"
      ],
      "date": 1711520173571
    },
    {
      "type": "edit",
      "id": "762fb5b2b4c485ea",
      "item": {
        "type": "assets",
        "id": "762fb5b2b4c485ea",
        "text": "pages/elmstatic/"
      },
      "date": 1711520183305
    },
    {
      "item": {
        "type": "factory",
        "id": "ec4ad2e184bae16a"
      },
      "id": "ec4ad2e184bae16a",
      "type": "add",
      "after": "78910e88ff529ea7",
      "date": 1711520250011
    },
    {
      "type": "edit",
      "id": "ec4ad2e184bae16a",
      "item": {
        "type": "paragraph",
        "id": "ec4ad2e184bae16a",
        "text": "See the \"How to use it\" section on "
      },
      "date": 1711520262163
    },
    {
      "type": "edit",
      "id": "ec4ad2e184bae16a",
      "item": {
        "type": "paragraph",
        "id": "ec4ad2e184bae16a",
        "text": "See the \"How to use it\" section on [https://korban.net/elm/elmstatic/ page]"
      },
      "date": 1711520269889
    },
    {
      "id": "ec4ad2e184bae16a",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "ec4ad2e184bae16a",
        "950699decfebd1e0",
        "762fb5b2b4c485ea",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7"
      ],
      "date": 1711520274772
    },
    {
      "type": "edit",
      "id": "12c4644a87ff9166",
      "item": {
        "type": "paragraph",
        "id": "12c4644a87ff9166",
        "text": "an Elm-to-HTML static site generator [https://korban.net/elm/elmstatic/ page] [https://www.npmjs.com/package/elmstatic npm]"
      },
      "date": 1711520669166
    },
    {
      "type": "edit",
      "id": "b93336c4584ec7ed",
      "item": {
        "type": "paragraph",
        "id": "b93336c4584ec7ed",
        "text": "Posts can be written in Markdown or [[elm-markup]] (but you can actually treat content as any format if you like)"
      },
      "date": 1711520728545
    },
    {
      "type": "add",
      "id": "15a32a243ae444c0",
      "item": {
        "type": "paragraph",
        "id": "15a32a243ae444c0",
        "text": "Note: We use the Markdown scaffold."
      },
      "after": "ec4ad2e184bae16a",
      "date": 1711520818190
    },
    {
      "id": "15a32a243ae444c0",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "ec4ad2e184bae16a",
        "950699decfebd1e0",
        "15a32a243ae444c0",
        "762fb5b2b4c485ea",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7"
      ],
      "date": 1711520820307
    },
    {
      "id": "15a32a243ae444c0",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "ec4ad2e184bae16a",
        "950699decfebd1e0",
        "762fb5b2b4c485ea",
        "15a32a243ae444c0",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7"
      ],
      "date": 1711520828377
    },
    {
      "type": "edit",
      "id": "15a32a243ae444c0",
      "item": {
        "type": "paragraph",
        "id": "15a32a243ae444c0",
        "text": "Note: We use the Markdown scaffold. See the \"How things are organised\" section on "
      },
      "date": 1711520861060
    },
    {
      "type": "edit",
      "id": "15a32a243ae444c0",
      "item": {
        "type": "paragraph",
        "id": "15a32a243ae444c0",
        "text": "Note: We use the Markdown scaffold. See the \"How things are organised\" section on [https://korban.net/elm/elmstatic/ page]"
      },
      "date": 1711520868300
    },
    {
      "item": {
        "type": "factory",
        "id": "c94a04a21ffdf868"
      },
      "id": "c94a04a21ffdf868",
      "type": "add",
      "after": "78910e88ff529ea7",
      "date": 1711557155402
    },
    {
      "type": "edit",
      "id": "c94a04a21ffdf868",
      "item": {
        "type": "markdown",
        "id": "c94a04a21ffdf868",
        "text": "# Features"
      },
      "date": 1711557162136
    },
    {
      "id": "c94a04a21ffdf868",
      "type": "move",
      "order": [
        "12c4644a87ff9166",
        "6fff7aec848ee1d0",
        "c212e5e0a31affff",
        "3ead459eca190104",
        "fd277b8681288ded",
        "6618717e3234ec73",
        "ec4ad2e184bae16a",
        "950699decfebd1e0",
        "762fb5b2b4c485ea",
        "15a32a243ae444c0",
        "c94a04a21ffdf868",
        "2de86b68c97e0275",
        "3c706c54aaa7cdf3",
        "c1fb5e49986e4b6b",
        "36b72c789f3034ee",
        "d4d3e87a509bac3d",
        "b93336c4584ec7ed",
        "73e53cd5adefd3bc",
        "0e09ed7a90317505",
        "656ae243b7d6fd18",
        "f092264c21812c83",
        "e90f89016e06e39a",
        "78910e88ff529ea7"
      ],
      "date": 1711557168070
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711561920694
    },
    {
      "type": "edit",
      "id": "3ead459eca190104",
      "item": {
        "type": "frame",
        "id": "3ead459eca190104",
        "text": "//wiki.ralfbarkow.ch/assets/pages/elmstatic/_site/index.html"
      },
      "date": 1711561949896
    },
    {
      "item": {
        "type": "factory",
        "id": "6ce8af4c60519951"
      },
      "id": "6ce8af4c60519951",
      "type": "add",
      "after": "78910e88ff529ea7",
      "date": 1711562707200
    },
    {
      "type": "edit",
      "id": "6ce8af4c60519951",
      "item": {
        "type": "paragraph",
        "id": "6ce8af4c60519951",
        "text": "⇒ [[Elm Markup]]"
      },
      "date": 1711562715298
    }
  ]
}