{
  "title": "LeDatabaseReload",
  "story": [
    {
      "type": "markdown",
      "id": "5e20bf85fef3edc6",
      "text": "updates a database to match the on-disk storage.\n\n### Notes\n\nPages that have been deleted on disk are not removed from the in-memory copy by default.  This is to prevent pages that are added prior to the reload completing from being incorrectly removed.  Most people move to a new image fairly regularly and the deleted page will be lost at that point.  Keeping the deleted page in memory is considered less of an evil than removing a page that someone has just added (and which hasn't been saved to disk).\n\n\n"
    },
    {
      "type": "markdown",
      "id": "fca0fc82568e840c",
      "text": "The intention is to implement all changes as commands and store a transaction log.  At this point, reloading the database will be a replay of the transaction log, so this problem is avoided (and is also much faster)."
    },
    {
      "type": "markdown",
      "id": "ff3cc50d4d4d835f",
      "text": "See: <https://github.com/feenkcom/gtoolkit/issues/2163>"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "LeDatabaseReload",
        "story": []
      },
      "date": 1669940577286
    },
    {
      "item": {
        "type": "factory",
        "id": "5e20bf85fef3edc6"
      },
      "id": "5e20bf85fef3edc6",
      "type": "add",
      "date": 1669940584337
    },
    {
      "type": "edit",
      "id": "5e20bf85fef3edc6",
      "item": {
        "type": "markdown",
        "id": "5e20bf85fef3edc6",
        "text": "updates a database to match the on-disk storage.\n\n### Notes\n\nPages that have been deleted on disk are not removed from the in-memory copy by default.  This is to prevent pages that are added prior to the reload completing from being incorrectly removed.  Most people move to a new image fairly regularly and the deleted page will be lost at that point.  Keeping the deleted page in memory is considered less of an evil than removing a page that someone has just added (and which hasn't been saved to disk).\n\nThe intention is to move to implementing all changes as commands and saving a transaction log.  At that point, reloading the database will be a replay of the transaction log, and so will avoid this issue (we well as being much faster).\n\nSee: <https://github.com/feenkcom/gtoolkit/issues/2163>"
      },
      "date": 1669940586075
    },
    {
      "type": "edit",
      "id": "5e20bf85fef3edc6",
      "item": {
        "type": "markdown",
        "id": "5e20bf85fef3edc6",
        "text": "updates a database to match the on-disk storage.\n\n### Notes\n\nPages that have been deleted on disk are not removed from the in-memory copy by default.  This is to prevent pages that are added prior to the reload completing from being incorrectly removed.  Most people move to a new image fairly regularly and the deleted page will be lost at that point.  Keeping the deleted page in memory is considered less of an evil than removing a page that someone has just added (and which hasn't been saved to disk).\n\n\n"
      },
      "date": 1669940640859
    },
    {
      "type": "add",
      "id": "fca0fc82568e840c",
      "item": {
        "type": "markdown",
        "id": "fca0fc82568e840c",
        "text": "The intention is to move to implementing all changes as commands and saving a transaction log.  At that point, reloading the database will be a replay of the transaction log, and so will avoid this issue (we well as being much faster).\n\n\n"
      },
      "after": "5e20bf85fef3edc6",
      "date": 1669940643408
    },
    {
      "type": "add",
      "id": "ff3cc50d4d4d835f",
      "item": {
        "type": "markdown",
        "id": "ff3cc50d4d4d835f",
        "text": "See: <https://github.com/feenkcom/gtoolkit/issues/2163>"
      },
      "after": "fca0fc82568e840c",
      "date": 1669940644043
    },
    {
      "type": "edit",
      "id": "fca0fc82568e840c",
      "item": {
        "type": "markdown",
        "id": "fca0fc82568e840c",
        "text": "The intention is to implement all changes as commands and store a transaction log.  At this point, reloading the database will be a replay of the transaction log, so this problem is avoided (and is also much faster)."
      },
      "date": 1669940981543
    }
  ]
}