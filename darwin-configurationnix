{
  "title": "darwin-configuration.nix",
  "story": [
    {
      "type": "paragraph",
      "id": "e111317959f7d443",
      "text": "Configuration lives in ~/.nixpkgs/darwin-configuration.nix [https://daiderd.com/nix-darwin/ page]\n"
    },
    {
      "type": "code",
      "id": "839abf1e0142857a",
      "text": "{ config, pkgs, ... }:\n\n{\n  # List packages installed in system profile. To search by name, run:\n  # $ nix-env -qaP | grep wget\n  environment.systemPackages = with pkgs; [\n    emacs-unstable\n    zsh\n    nix-zsh-completions\n    source-code-pro\n    w3m\n    wget\n    pandoc\n  ]\n\n\n  # Use a custom configuration.nix location.\n  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix\n  # environment.darwinConfig = \"$HOME/.config/nixpkgs/darwin/configuration.nix\";\n\n  # Auto upgrade nix package and the daemon service.\n  services.nix-daemon.enable = true;\n  # nix.package = pkgs.nix;\n\n  # Create /etc/bashrc that loads the nix-darwin environment.\n  programs.zsh.enable = true;  # default shell on catalina\n  programs.zsh.enableBashCompletion = true;\n  # programs.fish.enable = true;\n\n  # Used for backwards compatibility, please read the changelog before changing.\n  # $ darwin-rebuild changelog\n  system.stateVersion = 4;\n\n  imports = [\n    <home-manager/nix-darwin>\n  ];\n\n  networking.computerName = \"mbp-rgb\";\n  networking.hostName = \"mbp-rgb\";\n  time.timeZone = \"Europe/Zurich\";\n\n  # Emacs Overlay\n  # services.emacs.package = pkgs.emacsNativeComp;\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchGit {\n      url = \"https://github.com/nix-community/emacs-overlay.git\";\n      ref = \"master\";\n      rev = \"c6b64ca167953829cc318920f7e254d751d08295\"\"; # change the revision\n    }))\n  ];\n\n}\n"
    },
    {
      "type": "paragraph",
      "id": "10180073e5d2abbd",
      "text": "/nix/store/scrp34hvpd7vsvdmk7jx9kdqwn543bv2-emacs-unstable-29.1/bin/emacs-29.1 @mbp-rgb"
    },
    {
      "type": "paragraph",
      "id": "59f53401ebfead39",
      "text": "[[Emacs Overlay for Nixpkgs]] [https://github.com/nix-community/emacs-overlay#emacs-overlay-for-nixpkgs github]"
    },
    {
      "type": "code",
      "id": "9a459e1fb24621a7",
      "text": "{config, pkgs, callPackage, ... }:\n{\n# ...\n\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchTarball {\n      url = https://github.com/nix-community/emacs-overlay/archive/master.tar.gz;\n    }))\n  ];\n\n# ...\n}"
    },
    {
      "type": "pagefold",
      "id": "65d3f5eeef572836",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "020a4ea211ca3ddf",
      "text": "Example Darwin system flake [https://github.com/LnL7/nix-darwin/blob/master/modules/examples/flake/flake.nix github]"
    },
    {
      "type": "reference",
      "id": "dca6b25dad9fd087",
      "site": "wiki.ralfbarkow.ch",
      "slug": "w3m",
      "title": "w3m",
      "text": "is a pager with WWW capability.  It IS a pager, but it can be used as a text-mode WWW browser. [https://salsa.debian.org/debian/w3m salsa]"
    },
    {
      "type": "paragraph",
      "id": "77fbe9edf48b7664",
      "text": "â‡’ [[Binary Cache]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "darwin-configuration.nix",
        "story": []
      },
      "date": 1697051856508
    },
    {
      "item": {
        "type": "factory",
        "id": "90f7f06f28077365"
      },
      "id": "90f7f06f28077365",
      "type": "add",
      "date": 1697051858934
    },
    {
      "type": "edit",
      "id": "90f7f06f28077365",
      "item": {
        "type": "code",
        "id": "90f7f06f28077365",
        "text": "~/.nixpkgs/darwin-configuration.nix\n"
      },
      "date": 1697051861288
    },
    {
      "item": {
        "type": "factory",
        "id": "839abf1e0142857a"
      },
      "id": "839abf1e0142857a",
      "type": "add",
      "after": "90f7f06f28077365",
      "date": 1697051879591
    },
    {
      "type": "edit",
      "id": "839abf1e0142857a",
      "item": {
        "type": "code",
        "id": "839abf1e0142857a",
        "text": "{ config, pkgs, ... }:\n\n{\n  # List packages installed in system profile. To search by name, run:\n  # $ nix-env -qaP | grep wget\n  environment.systemPackages = with pkgs; [\n    zsh\n    nix-zsh-completions\n    source-code-pro\n    w3m\n    maven\n    wget\n    pandoc\n    ];\n\n\n  # Use a custom configuration.nix location.\n  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix\n  # environment.darwinConfig = \"$HOME/.config/nixpkgs/darwin/configuration.nix\";\n\n  # Auto upgrade nix package and the daemon service.\n  services.nix-daemon.enable = true;\n  # nix.package = pkgs.nix;\n\n  # Create /etc/bashrc that loads the nix-darwin environment.\n  programs.zsh.enable = true;  # default shell on catalina\n  programs.zsh.enableBashCompletion = true;\n  # programs.fish.enable = true;\n\n  # Used for backwards compatibility, please read the changelog before changing.\n  # $ darwin-rebuild changelog\n  system.stateVersion = 4;\n\n  imports = [\n    <home-manager/nix-darwin>\n  ];\n\n  networking.computerName = \"mbp-rgb\";\n  networking.hostName = \"mbp-rgb\";\n  time.timeZone = \"Europe/Zurich\";\n\n  # Emacs Overlay\n  # services.emacs.package = pkgs.emacsNativeComp;\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchGit {\n      url = \"https://github.com/nix-community/emacs-overlay.git\";\n      ref = \"master\";\n      rev = \"bfc5d3e3517818755933a73cc736920e06092996\"; # change the revision\n    }))\n  ];\n\n}\n"
      },
      "date": 1697051881357
    },
    {
      "type": "remove",
      "id": "90f7f06f28077365",
      "date": 1697051885692
    },
    {
      "id": "e111317959f7d443",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e111317959f7d443",
        "text": "~/.nixpkgs/darwin-configuration.nix\n"
      },
      "attribution": {
        "page": "2023-10-11"
      },
      "date": 1697051900742
    },
    {
      "type": "edit",
      "id": "e111317959f7d443",
      "item": {
        "type": "paragraph",
        "id": "e111317959f7d443",
        "text": "~/.nixpkgs/darwin-configuration.nix [https://daiderd.com/nix-darwin/ page]\n"
      },
      "date": 1697051978965
    },
    {
      "type": "edit",
      "id": "e111317959f7d443",
      "item": {
        "type": "paragraph",
        "id": "e111317959f7d443",
        "text": "Configuration lives in ~/.nixpkgs/darwin-configuration.nix [https://daiderd.com/nix-darwin/ page]\n"
      },
      "date": 1697052056592
    },
    {
      "item": {
        "type": "factory",
        "id": "65d3f5eeef572836"
      },
      "id": "65d3f5eeef572836",
      "type": "add",
      "after": "839abf1e0142857a",
      "date": 1697052093208
    },
    {
      "type": "edit",
      "id": "65d3f5eeef572836",
      "item": {
        "type": "pagefold",
        "id": "65d3f5eeef572836",
        "text": "~"
      },
      "date": 1697052095612
    },
    {
      "item": {
        "type": "factory",
        "id": "020a4ea211ca3ddf"
      },
      "id": "020a4ea211ca3ddf",
      "type": "add",
      "after": "65d3f5eeef572836",
      "date": 1697052096774
    },
    {
      "type": "edit",
      "id": "020a4ea211ca3ddf",
      "item": {
        "type": "paragraph",
        "id": "020a4ea211ca3ddf",
        "text": "Example Darwin system flake"
      },
      "date": 1697052099392
    },
    {
      "type": "edit",
      "id": "020a4ea211ca3ddf",
      "item": {
        "type": "paragraph",
        "id": "020a4ea211ca3ddf",
        "text": "Example Darwin system flake [https://github.com/LnL7/nix-darwin/blob/master/modules/examples/flake/flake.nix github]"
      },
      "date": 1697052114981
    },
    {
      "item": {
        "type": "factory",
        "id": "10180073e5d2abbd"
      },
      "id": "10180073e5d2abbd",
      "type": "add",
      "after": "020a4ea211ca3ddf",
      "date": 1697054545139
    },
    {
      "id": "10180073e5d2abbd",
      "type": "move",
      "order": [
        "e111317959f7d443",
        "839abf1e0142857a",
        "10180073e5d2abbd",
        "65d3f5eeef572836",
        "020a4ea211ca3ddf"
      ],
      "date": 1697054547254
    },
    {
      "type": "edit",
      "id": "10180073e5d2abbd",
      "item": {
        "type": "paragraph",
        "id": "10180073e5d2abbd",
        "text": "/nix/store/scrp34hvpd7vsvdmk7jx9kdqwn543bv2-emacs-unstable-29.1/bin/emacs-29.1"
      },
      "date": 1697054554909
    },
    {
      "type": "edit",
      "id": "10180073e5d2abbd",
      "item": {
        "type": "paragraph",
        "id": "10180073e5d2abbd",
        "text": "/nix/store/scrp34hvpd7vsvdmk7jx9kdqwn543bv2-emacs-unstable-29.1/bin/emacs-29.1 @mbp-rgb"
      },
      "date": 1697054578271
    },
    {
      "item": {
        "type": "factory",
        "id": "59f53401ebfead39"
      },
      "id": "59f53401ebfead39",
      "type": "add",
      "after": "020a4ea211ca3ddf",
      "date": 1697054659140
    },
    {
      "id": "59f53401ebfead39",
      "type": "move",
      "order": [
        "e111317959f7d443",
        "839abf1e0142857a",
        "10180073e5d2abbd",
        "59f53401ebfead39",
        "65d3f5eeef572836",
        "020a4ea211ca3ddf"
      ],
      "date": 1697054662173
    },
    {
      "type": "edit",
      "id": "59f53401ebfead39",
      "item": {
        "type": "paragraph",
        "id": "59f53401ebfead39",
        "text": "[[Emacs overlay for Nixpkgs]]"
      },
      "date": 1697054665605
    },
    {
      "type": "edit",
      "id": "59f53401ebfead39",
      "item": {
        "type": "paragraph",
        "id": "59f53401ebfead39",
        "text": "[[Emacs Overlay for Nixpkgs]]"
      },
      "date": 1697054711089
    },
    {
      "item": {
        "type": "factory",
        "id": "77e6a1356c48d187"
      },
      "id": "77e6a1356c48d187",
      "type": "add",
      "after": "020a4ea211ca3ddf",
      "date": 1697054796573
    },
    {
      "type": "edit",
      "id": "77e6a1356c48d187",
      "item": {
        "type": "paragraph",
        "id": "77e6a1356c48d187",
        "text": "[[w3m]]"
      },
      "date": 1697054800501
    },
    {
      "item": {
        "type": "factory",
        "id": "dca6b25dad9fd087"
      },
      "id": "dca6b25dad9fd087",
      "type": "add",
      "after": "77e6a1356c48d187",
      "date": 1697054853756
    },
    {
      "type": "edit",
      "id": "dca6b25dad9fd087",
      "item": {
        "type": "reference",
        "id": "dca6b25dad9fd087",
        "site": "wiki.ralfbarkow.ch",
        "slug": "w3m",
        "title": "w3m",
        "text": "is a pager with WWW capability.  It IS a pager, but it can be used as a text-mode WWW browser. [https://salsa.debian.org/debian/w3m salsa]"
      },
      "date": 1697054855844
    },
    {
      "type": "remove",
      "id": "77e6a1356c48d187",
      "date": 1697054857508
    },
    {
      "type": "edit",
      "id": "59f53401ebfead39",
      "item": {
        "type": "paragraph",
        "id": "59f53401ebfead39",
        "text": "[[Emacs Overlay for Nixpkgs]] [https://github.com/nix-community/emacs-overlay#emacs-overlay-for-nixpkgs github]"
      },
      "date": 1697054897280
    },
    {
      "item": {
        "type": "factory",
        "id": "9a459e1fb24621a7"
      },
      "id": "9a459e1fb24621a7",
      "type": "add",
      "after": "dca6b25dad9fd087",
      "date": 1697054903572
    },
    {
      "id": "9a459e1fb24621a7",
      "type": "move",
      "order": [
        "e111317959f7d443",
        "839abf1e0142857a",
        "10180073e5d2abbd",
        "59f53401ebfead39",
        "9a459e1fb24621a7",
        "65d3f5eeef572836",
        "020a4ea211ca3ddf",
        "dca6b25dad9fd087"
      ],
      "date": 1697054905206
    },
    {
      "type": "edit",
      "id": "9a459e1fb24621a7",
      "item": {
        "type": "code",
        "id": "9a459e1fb24621a7",
        "text": "{config, pkgs, callPackage, ... }:\n{\n# ...\n\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchTarball {\n      url = https://github.com/nix-community/emacs-overlay/archive/master.tar.gz;\n    }))\n  ];\n\n# ...\n}"
      },
      "date": 1697054906739
    },
    {
      "item": {
        "type": "factory",
        "id": "77fbe9edf48b7664"
      },
      "id": "77fbe9edf48b7664",
      "type": "add",
      "after": "dca6b25dad9fd087",
      "date": 1697057553720
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "nix-env -iA cachix -f https://cachix.org/api/v1/install"
      },
      "date": 1697057560350
    },
    {
      "item": {
        "type": "factory",
        "id": "6e366574aeaf441b"
      },
      "id": "6e366574aeaf441b",
      "type": "add",
      "after": "77fbe9edf48b7664",
      "date": 1697057561714
    },
    {
      "type": "edit",
      "id": "6e366574aeaf441b",
      "item": {
        "type": "code",
        "id": "6e366574aeaf441b",
        "text": "nix-env -iA cachix -f https://cachix.org/api/v1/install"
      },
      "date": 1697057563817
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "Binary cache"
      },
      "date": 1697057589752
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "Binary cache [https://github.com/nix-community/emacs-overlay#binary-cache github]"
      },
      "date": 1697057610479
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "Binary cache [https://github.com/nix-community/emacs-overlay#binary-cache github] [https://app.cachix.org/cache/nix-community cachix]"
      },
      "date": 1697057631433
    },
    {
      "item": {
        "type": "factory",
        "id": "5e0326350ebd2157"
      },
      "id": "5e0326350ebd2157",
      "type": "add",
      "after": "6e366574aeaf441b",
      "date": 1697057655864
    },
    {
      "type": "edit",
      "id": "5e0326350ebd2157",
      "item": {
        "type": "code",
        "id": "5e0326350ebd2157",
        "text": "cachix use nix-community"
      },
      "date": 1697057658116
    },
    {
      "item": {
        "type": "factory",
        "id": "d7a9cf175ebf751b"
      },
      "id": "d7a9cf175ebf751b",
      "type": "add",
      "after": "5e0326350ebd2157",
      "date": 1697057772636
    },
    {
      "type": "edit",
      "id": "d7a9cf175ebf751b",
      "item": {
        "type": "paragraph",
        "id": "d7a9cf175ebf751b",
        "text": "This user doesn't have permissions to configure binary caches.\n\nYou can either:\n\na) Run the same command as root to configure them globally.\n\nb) Run the following command to add your user as trusted\n   and then try again:\n\n  echo \"trusted-users = root rgb\" | sudo tee -a /etc/nix/nix.conf && sudo pkill nix-daemon\nâžœ  ~ sudo cachix use nix-community                                                                                                                          ~\nPassword:\nwarning: $HOME ('/Users/rgb') is not owned by you, falling back to the one defined in the 'passwd' file ('/var/root')\nConfigured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf"
      },
      "date": 1697057774445
    },
    {
      "type": "edit",
      "id": "d7a9cf175ebf751b",
      "item": {
        "type": "paragraph",
        "id": "d7a9cf175ebf751b",
        "text": "This user doesn't have permissions to configure binary caches.\n\nYou can either:\n\na) Run the same command as root to configure them globally.\n\nb) Run the following command to add your user as trusted\n   and then try again:\n\n  echo \"trusted-users = root rgb\" | sudo tee -a /etc/nix/nix.conf && sudo pkill nix-daemon"
      },
      "date": 1697057819690
    },
    {
      "type": "add",
      "id": "4a0a8d2f4f4935d9",
      "item": {
        "type": "paragraph",
        "id": "4a0a8d2f4f4935d9",
        "text": "âžœ  ~ sudo cachix use nix-community                                                                                                                          ~\nPassword:\nwarning: $HOME ('/Users/rgb') is not owned by you, falling back to the one defined in the 'passwd' file ('/var/root')\nConfigured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf"
      },
      "after": "d7a9cf175ebf751b",
      "date": 1697057820955
    },
    {
      "type": "edit",
      "id": "4a0a8d2f4f4935d9",
      "item": {
        "type": "paragraph",
        "id": "4a0a8d2f4f4935d9",
        "text": "âžœ  ~ sudo cachix use nix-community"
      },
      "date": 1697057838291
    },
    {
      "type": "add",
      "id": "b7b7da7da008afc6",
      "item": {
        "type": "paragraph",
        "id": "b7b7da7da008afc6",
        "text": "warning: $HOME ('/Users/rgb') is not owned by you, falling back to the one defined in the 'passwd' file ('/var/root')\nConfigured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf"
      },
      "after": "4a0a8d2f4f4935d9",
      "date": 1697057842535
    },
    {
      "type": "edit",
      "id": "839abf1e0142857a",
      "item": {
        "type": "code",
        "id": "839abf1e0142857a",
        "text": "{ config, pkgs, ... }:\n\n{\n  # List packages installed in system profile. To search by name, run:\n  # $ nix-env -qaP | grep wget\n  environment.systemPackages = with pkgs; [\n    emacs-unstable\n    zsh\n    nix-zsh-completions\n    source-code-pro\n    w3m\n    maven\n    wget\n    pandoc\n    ];\n\n\n  # Use a custom configuration.nix location.\n  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix\n  # environment.darwinConfig = \"$HOME/.config/nixpkgs/darwin/configuration.nix\";\n\n  # Auto upgrade nix package and the daemon service.\n  services.nix-daemon.enable = true;\n  # nix.package = pkgs.nix;\n\n  # Create /etc/bashrc that loads the nix-darwin environment.\n  programs.zsh.enable = true;  # default shell on catalina\n  programs.zsh.enableBashCompletion = true;\n  # programs.fish.enable = true;\n\n  # Used for backwards compatibility, please read the changelog before changing.\n  # $ darwin-rebuild changelog\n  system.stateVersion = 4;\n\n  imports = [\n    <home-manager/nix-darwin>\n  ];\n\n  networking.computerName = \"mbp-rgb\";\n  networking.hostName = \"mbp-rgb\";\n  time.timeZone = \"Europe/Zurich\";\n\n  # Emacs Overlay\n  # services.emacs.package = pkgs.emacsNativeComp;\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchGit {\n      url = \"https://github.com/nix-community/emacs-overlay.git\";\n      ref = \"master\";\n      rev = \"bfc5d3e3517818755933a73cc736920e06092996\"; # change the revision\n    }))\n  ];\n\n}\n"
      },
      "date": 1697058943173
    },
    {
      "type": "edit",
      "id": "839abf1e0142857a",
      "item": {
        "type": "code",
        "id": "839abf1e0142857a",
        "text": "{ config, pkgs, ... }:\n\n{\n  # List packages installed in system profile. To search by name, run:\n  # $ nix-env -qaP | grep wget\n  environment.systemPackages = with pkgs; [\n    emacs-unstable\n    zsh\n    nix-zsh-completions\n    source-code-pro\n    w3m\n    maven\n    wget\n    pandoc\n    ];\n\n\n  # Use a custom configuration.nix location.\n  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix\n  # environment.darwinConfig = \"$HOME/.config/nixpkgs/darwin/configuration.nix\";\n\n  # Auto upgrade nix package and the daemon service.\n  services.nix-daemon.enable = true;\n  # nix.package = pkgs.nix;\n\n  # Create /etc/bashrc that loads the nix-darwin environment.\n  programs.zsh.enable = true;  # default shell on catalina\n  programs.zsh.enableBashCompletion = true;\n  # programs.fish.enable = true;\n\n  # Used for backwards compatibility, please read the changelog before changing.\n  # $ darwin-rebuild changelog\n  system.stateVersion = 4;\n\n  imports = [\n    <home-manager/nix-darwin>\n  ];\n\n  networking.computerName = \"mbp-rgb\";\n  networking.hostName = \"mbp-rgb\";\n  time.timeZone = \"Europe/Zurich\";\n\n  # Emacs Overlay\n  # services.emacs.package = pkgs.emacsNativeComp;\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchGit {\n      url = \"https://github.com/nix-community/emacs-overlay.git\";\n      ref = \"master\";\n      rev = \"c6b64ca167953829cc318920f7e254d751d08295\"\"; # change the revision\n    }))\n  ];\n\n}\n"
      },
      "date": 1697059127548
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "[[Binary cache]] [https://github.com/nix-community/emacs-overlay#binary-cache github] [https://app.cachix.org/cache/nix-community cachix]"
      },
      "date": 1697130906560
    },
    {
      "type": "edit",
      "id": "839abf1e0142857a",
      "item": {
        "type": "code",
        "id": "839abf1e0142857a",
        "text": "{ config, pkgs, ... }:\n\n{\n  # List packages installed in system profile. To search by name, run:\n  # $ nix-env -qaP | grep wget\n  environment.systemPackages = with pkgs; [\n    emacs-unstable\n    zsh\n    nix-zsh-completions\n    source-code-pro\n    w3m\n    wget\n    pandoc\n  ]\n\n\n  # Use a custom configuration.nix location.\n  # $ darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix\n  # environment.darwinConfig = \"$HOME/.config/nixpkgs/darwin/configuration.nix\";\n\n  # Auto upgrade nix package and the daemon service.\n  services.nix-daemon.enable = true;\n  # nix.package = pkgs.nix;\n\n  # Create /etc/bashrc that loads the nix-darwin environment.\n  programs.zsh.enable = true;  # default shell on catalina\n  programs.zsh.enableBashCompletion = true;\n  # programs.fish.enable = true;\n\n  # Used for backwards compatibility, please read the changelog before changing.\n  # $ darwin-rebuild changelog\n  system.stateVersion = 4;\n\n  imports = [\n    <home-manager/nix-darwin>\n  ];\n\n  networking.computerName = \"mbp-rgb\";\n  networking.hostName = \"mbp-rgb\";\n  time.timeZone = \"Europe/Zurich\";\n\n  # Emacs Overlay\n  # services.emacs.package = pkgs.emacsNativeComp;\n  services.emacs.package = pkgs.emacs-unstable;\n\n  nixpkgs.overlays = [\n    (import (builtins.fetchGit {\n      url = \"https://github.com/nix-community/emacs-overlay.git\";\n      ref = \"master\";\n      rev = \"c6b64ca167953829cc318920f7e254d751d08295\"\"; # change the revision\n    }))\n  ];\n\n}\n"
      },
      "date": 1697131275736
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "â‡’ [[Binary cache]]"
      },
      "date": 1697132259294
    },
    {
      "id": "6e366574aeaf441b",
      "type": "remove",
      "removedTo": {
        "page": "Binary cache"
      },
      "date": 1697132263312
    },
    {
      "id": "5e0326350ebd2157",
      "type": "remove",
      "removedTo": {
        "page": "Binary cache"
      },
      "date": 1697132282851
    },
    {
      "id": "b7b7da7da008afc6",
      "type": "remove",
      "removedTo": {
        "page": "Binary cache"
      },
      "date": 1697132406390
    },
    {
      "type": "remove",
      "id": "d7a9cf175ebf751b",
      "date": 1697132408676
    },
    {
      "type": "remove",
      "id": "4a0a8d2f4f4935d9",
      "date": 1697132412223
    },
    {
      "type": "edit",
      "id": "77fbe9edf48b7664",
      "item": {
        "type": "paragraph",
        "id": "77fbe9edf48b7664",
        "text": "â‡’ [[Binary Cache]]"
      },
      "date": 1697132470302
    },
    {
      "id": "073b37ac5fde701a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "073b37ac5fde701a",
        "text": "You will want to use the nix-community binary cache. [https://github.com/nix-community/emacs-overlay#binary-cache github] [https://app.cachix.org/cache/nix-community cachix]",
        "alias": "77fbe9edf48b7664"
      },
      "after": "77fbe9edf48b7664",
      "attribution": {
        "page": "Binary cache"
      },
      "date": 1697132473094
    },
    {
      "id": "6e366574aeaf441b",
      "type": "add",
      "item": {
        "type": "code",
        "id": "6e366574aeaf441b",
        "text": "nix-env -iA cachix -f https://cachix.org/api/v1/install"
      },
      "after": "073b37ac5fde701a",
      "attribution": {
        "page": "Binary cache"
      },
      "date": 1697132475579
    },
    {
      "id": "5e0326350ebd2157",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5e0326350ebd2157",
        "text": "sudo cachix use nix-community"
      },
      "after": "6e366574aeaf441b",
      "attribution": {
        "page": "Binary cache"
      },
      "date": 1697132478125
    },
    {
      "id": "b7b7da7da008afc6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b7b7da7da008afc6",
        "text": "warning: $HOME ('/Users/rgb') is not owned by you, falling back to the one defined in the 'passwd' file ('/var/root')\nConfigured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf"
      },
      "after": "5e0326350ebd2157",
      "attribution": {
        "page": "Binary cache"
      },
      "date": 1697132480648
    },
    {
      "id": "073b37ac5fde701a",
      "type": "remove",
      "removedTo": {
        "page": "Binary Cache"
      },
      "date": 1697132497278
    },
    {
      "id": "6e366574aeaf441b",
      "type": "remove",
      "removedTo": {
        "page": "Binary Cache"
      },
      "date": 1697132499186
    },
    {
      "id": "5e0326350ebd2157",
      "type": "remove",
      "removedTo": {
        "page": "Binary Cache"
      },
      "date": 1697132500921
    },
    {
      "id": "b7b7da7da008afc6",
      "type": "remove",
      "removedTo": {
        "page": "Binary Cache"
      },
      "date": 1697132504905
    }
  ]
}