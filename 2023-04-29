{
  "title": "2023-04-29",
  "story": [
    {
      "type": "paragraph",
      "id": "f13ffc255c14aa93",
      "text": "⇒ [[Brian Marick]] @jmeowmeow Just a random thought: the community of practice might have goals askew from the goals of the enclosing organization. Makes sense for the community to be organized around achieving refuge. (I think you could interpret both Orr and Wenger as showing communities both about doing the job and surviving the job.)"
    },
    {
      "type": "paragraph",
      "id": "cc2ec25fc6a76456",
      "text": "⇒ [[Dillon Kearns]] Okay, thanks to your input, I realize that I lack understanding of some concepts (yet?). And I realize more clearly what I actually want to achieve: to integrate elm-pages with my Federated Wiki sites. At the moment I guess I'm screwing around with a very awkward form of a link to a hello page. Now I think I'm probably better off looking at the wiki sites as data. They are stored in the pages directory of the wiki server as JSON files. I should load these as DataSource/BackendTask before rendering the so assembled page then in elm-pages, right? [https://elmlang.slack.com/archives/CNSNETV37/p1682753884373069?thread_ts=1682671301.861339&cid=CNSNETV37 slack]"
    },
    {
      "type": "markdown",
      "id": "aa6853bb8c12d065",
      "text": "http://vite.elm.dreyeck.ch – Hello, Vite + Elm!"
    },
    {
      "type": "paragraph",
      "id": "d40647c984d98210",
      "text": "At the very basic level, developing using [[Vite]] is not that much different from using a static file server. However, Vite provides many enhancements over native ESM imports to support various features that are typically seen in bundler-based setups."
    },
    {
      "type": "reference",
      "id": "7f13d0e731f5b68a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "vite",
      "title": "Vite",
      "text": "Vite serves source code over native ESM. [https://vitejs.dev/guide/why.html page], [[Javascript Modules]] [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules mdn]"
    },
    {
      "type": "reference",
      "id": "bbf7d1acefe672c1",
      "site": "wiki.dbbs.co",
      "slug": "javascript-modules",
      "title": "Javascript Modules",
      "text": "In the most ubiquitous programming ecosystem, modules have been shoehorned in where they were originally lacking.  As of early 2018, nodejs gradually builds toward ECMAScript Modules.  Guidance for transition from CommonJS to ESM: [https://medium.com/@giltayar/native-es-modules-in-nodejs-status-and-future-directions-part-i-ee5ea3001f71 link]"
    },
    {
      "type": "paragraph",
      "id": "af0680888a377355",
      "text": "Will wiki need to adopt ECMAScript Module conventions?  [[Eric Dobbs]] thinks `grunt` and `browserify` produce CommonJS-style behavior.  Will we need to adopt different build tools?"
    },
    {
      "type": "pagefold",
      "id": "b6a18ef6af4c908f",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "b87242b1e64e97cd",
      "text": "https://elm-lang.org/examples/buttons [https://github.com/elm/elm-lang.org github]\n"
    },
    {
      "type": "markdown",
      "id": "95f18c471b347dfc",
      "text": "Running bash `build.sh` should generate the static website in _site.\n\nAfter that, you can run (cd _site ; elm reactor) to see it at http://localhost:8000 in your browser. Not all the links work with this setup, but you should be able to get to all the pages nonetheless!"
    },
    {
      "type": "pagefold",
      "id": "35a9be794f61fb71",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "f2cac9ccd89cdbaa",
      "site": "plugins.fed.wiki.org",
      "slug": "about-plugins",
      "title": "About Plugins",
      "text": "We explain federated wiki plugins. We define their role interpreting content, recount our experience writing many, describe principles and strategies for future plugins, and offer a step-by-step guide for new plugin authors. We'll also collect pointers here to good plugins when they emerge."
    },
    {
      "type": "reference",
      "id": "d3ea0ba0acf3e654",
      "site": "plugins.fed.wiki.org",
      "slug": "maintaining-a-custom-wiki",
      "title": "Maintaining a Custom Wiki",
      "text": "You will want to include your custom plugins in some or all of the servers you operate. Here we explore various workflows that simplify this task."
    },
    {
      "type": "paragraph",
      "id": "9ecd1002797f4dff",
      "text": "If you have just built a new version of a plugin you can load it into a locally installed version of wiki."
    },
    {
      "type": "code",
      "id": "b4bde3a6e8b04644",
      "text": "npm install $(npm pack ../wiki-plugin-foo/ -1)\nnode index.js -p 3000 -f --security_type friends"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-04-29",
        "story": []
      },
      "date": 1682751515941
    },
    {
      "item": {
        "type": "factory",
        "id": "24b42c1a24769289"
      },
      "id": "24b42c1a24769289",
      "type": "add",
      "date": 1682751517234
    },
    {
      "type": "edit",
      "id": "24b42c1a24769289",
      "item": {
        "type": "html",
        "id": "24b42c1a24769289",
        "text": "<img\n  src=\"https://cf-assets.www.cloudflare.com/slt3lc6tev37/5NZgvmn3uyoMIk3nwSEqpy/b6750f0cffa0cee5e63eee8d38482fe0/global-network-connection-hero-illustration-01.svg\"\n>"
      },
      "date": 1682751544073
    },
    {
      "item": {
        "type": "factory",
        "id": "7c1de6426468f589"
      },
      "id": "7c1de6426468f589",
      "type": "add",
      "after": "24b42c1a24769289",
      "date": 1682751706528
    },
    {
      "type": "edit",
      "id": "7c1de6426468f589",
      "item": {
        "type": "image",
        "id": "7c1de6426468f589",
        "text": "Uploaded image",
        "size": "wide",
        "width": 416,
        "height": 409,
        "url": "/assets/plugins/image/b87a9b157014b4a6ac26839a2ecbad36.jpg"
      },
      "date": 1682751728944
    },
    {
      "type": "remove",
      "id": "24b42c1a24769289",
      "date": 1682751730621
    },
    {
      "type": "edit",
      "id": "7c1de6426468f589",
      "item": {
        "type": "image",
        "id": "7c1de6426468f589",
        "text": "Cloudflare",
        "size": "wide",
        "width": 416,
        "height": 409,
        "url": "/assets/plugins/image/b87a9b157014b4a6ac26839a2ecbad36.jpg"
      },
      "date": 1682751747621
    },
    {
      "type": "edit",
      "id": "7c1de6426468f589",
      "item": {
        "type": "image",
        "id": "7c1de6426468f589",
        "text": "Cloudflare [https://cf-assets.www.cloudflare.com/slt3lc6tev37/5NZgvmn3uyoMIk3nwSEqpy/b6750f0cffa0cee5e63eee8d38482fe0/global-network-connection-hero-illustration-01.svg svg]",
        "size": "wide",
        "width": 416,
        "height": 409,
        "url": "/assets/plugins/image/b87a9b157014b4a6ac26839a2ecbad36.jpg"
      },
      "date": 1682751762248
    },
    {
      "type": "edit",
      "id": "7c1de6426468f589",
      "item": {
        "type": "image",
        "id": "7c1de6426468f589",
        "text": "[[Cloudflare]] [https://cf-assets.www.cloudflare.com/slt3lc6tev37/5NZgvmn3uyoMIk3nwSEqpy/b6750f0cffa0cee5e63eee8d38482fe0/global-network-connection-hero-illustration-01.svg svg]",
        "size": "wide",
        "width": 416,
        "height": 409,
        "url": "/assets/plugins/image/b87a9b157014b4a6ac26839a2ecbad36.jpg"
      },
      "date": 1682751769688
    },
    {
      "type": "remove",
      "id": "7c1de6426468f589",
      "date": 1682752076776
    },
    {
      "item": {
        "type": "factory",
        "id": "f13ffc255c14aa93"
      },
      "id": "f13ffc255c14aa93",
      "type": "add",
      "date": 1682752078242
    },
    {
      "type": "edit",
      "id": "f13ffc255c14aa93",
      "item": {
        "type": "paragraph",
        "id": "f13ffc255c14aa93",
        "text": "[[Cloudflare]] [https://cf-assets.www.cloudflare.com/slt3lc6tev37/5NZgvmn3uyoMIk3nwSEqpy/b6750f0cffa0cee5e63eee8d38482fe0/global-network-connection-hero-illustration-01.svg svg]"
      },
      "date": 1682752084013
    },
    {
      "type": "edit",
      "id": "f13ffc255c14aa93",
      "item": {
        "type": "paragraph",
        "id": "f13ffc255c14aa93",
        "text": "@jmeowmeow Just a random thought: the community of practice might have goals askew from the goals of the enclosing organization. Makes sense for the community to be organized around achieving refuge. (I think you could interpret both Orr and Wenger as showing communities both about doing the job and surviving the job.)"
      },
      "date": 1682752104025
    },
    {
      "type": "edit",
      "id": "f13ffc255c14aa93",
      "item": {
        "type": "paragraph",
        "id": "f13ffc255c14aa93",
        "text": "⇒ [[Brian Marick]] @jmeowmeow Just a random thought: the community of practice might have goals askew from the goals of the enclosing organization. Makes sense for the community to be organized around achieving refuge. (I think you could interpret both Orr and Wenger as showing communities both about doing the job and surviving the job.)"
      },
      "date": 1682752489485
    },
    {
      "item": {
        "type": "factory",
        "id": "cc2ec25fc6a76456"
      },
      "id": "cc2ec25fc6a76456",
      "type": "add",
      "after": "f13ffc255c14aa93",
      "date": 1682753971135
    },
    {
      "type": "edit",
      "id": "cc2ec25fc6a76456",
      "item": {
        "type": "paragraph",
        "id": "cc2ec25fc6a76456",
        "text": "⇒ [[Dillon Kearns[[ Okay, thanks to your input, I realize that I lack understanding of some concepts (yet?). And I realize more clearly what I actually want to achieve: to integrate elm-pages with my Federated Wiki sites. At the moment I guess I'm screwing around with a very awkward form of a link to a hello page. Now I think I'm probably better off looking at the wiki sites as data. They are stored in the pages directory of the wiki server as JSON files. I should load these as DataSource/BackendTask before rendering the so assembled page then in elm-pages, right?"
      },
      "date": 1682753990045
    },
    {
      "type": "edit",
      "id": "cc2ec25fc6a76456",
      "item": {
        "type": "paragraph",
        "id": "cc2ec25fc6a76456",
        "text": "⇒ [[Dillon Kearns[[ Okay, thanks to your input, I realize that I lack understanding of some concepts (yet?). And I realize more clearly what I actually want to achieve: to integrate elm-pages with my Federated Wiki sites. At the moment I guess I'm screwing around with a very awkward form of a link to a hello page. Now I think I'm probably better off looking at the wiki sites as data. They are stored in the pages directory of the wiki server as JSON files. I should load these as DataSource/BackendTask before rendering the so assembled page then in elm-pages, right? [https://elmlang.slack.com/archives/CNSNETV37/p1682753884373069?thread_ts=1682671301.861339&cid=CNSNETV37 slack]"
      },
      "date": 1682754008290
    },
    {
      "type": "edit",
      "id": "cc2ec25fc6a76456",
      "item": {
        "type": "paragraph",
        "id": "cc2ec25fc6a76456",
        "text": "⇒ [[Dillon Kearns]] Okay, thanks to your input, I realize that I lack understanding of some concepts (yet?). And I realize more clearly what I actually want to achieve: to integrate elm-pages with my Federated Wiki sites. At the moment I guess I'm screwing around with a very awkward form of a link to a hello page. Now I think I'm probably better off looking at the wiki sites as data. They are stored in the pages directory of the wiki server as JSON files. I should load these as DataSource/BackendTask before rendering the so assembled page then in elm-pages, right? [https://elmlang.slack.com/archives/CNSNETV37/p1682753884373069?thread_ts=1682671301.861339&cid=CNSNETV37 slack]"
      },
      "date": 1682754018516
    },
    {
      "item": {
        "type": "factory",
        "id": "aa6853bb8c12d065"
      },
      "id": "aa6853bb8c12d065",
      "type": "add",
      "after": "cc2ec25fc6a76456",
      "date": 1682754020234
    },
    {
      "type": "edit",
      "id": "aa6853bb8c12d065",
      "item": {
        "type": "paragraph",
        "id": "aa6853bb8c12d065",
        "text": "http://vite.elm.dreyeck.ch"
      },
      "date": 1682754028820
    },
    {
      "type": "edit",
      "id": "aa6853bb8c12d065",
      "item": {
        "type": "markdown",
        "id": "aa6853bb8c12d065",
        "text": "http://vite.elm.dreyeck.ch"
      },
      "date": 1682754034198
    },
    {
      "type": "edit",
      "id": "aa6853bb8c12d065",
      "item": {
        "type": "markdown",
        "id": "aa6853bb8c12d065",
        "text": "http://vite.elm.dreyeck.ch – Hello, Vite + Elm!"
      },
      "date": 1682754066570
    },
    {
      "item": {
        "type": "factory",
        "id": "d40647c984d98210"
      },
      "id": "d40647c984d98210",
      "type": "add",
      "after": "aa6853bb8c12d065",
      "date": 1682754119291
    },
    {
      "type": "edit",
      "id": "d40647c984d98210",
      "item": {
        "type": "paragraph",
        "id": "d40647c984d98210",
        "text": "At the very basic level, developing using Vite is not that much different from using a static file server. However, Vite provides many enhancements over native ESM imports to support various features that are typically seen in bundler-based setups."
      },
      "date": 1682754120641
    },
    {
      "type": "edit",
      "id": "d40647c984d98210",
      "item": {
        "type": "paragraph",
        "id": "d40647c984d98210",
        "text": "At the very basic level, developing using [[Vite]] is not that much different from using a static file server. However, Vite provides many enhancements over native ESM imports to support various features that are typically seen in bundler-based setups."
      },
      "date": 1682754129148
    },
    {
      "item": {
        "type": "factory",
        "id": "7f13d0e731f5b68a"
      },
      "id": "7f13d0e731f5b68a",
      "type": "add",
      "after": "d40647c984d98210",
      "date": 1682754407950
    },
    {
      "type": "edit",
      "id": "7f13d0e731f5b68a",
      "item": {
        "type": "reference",
        "id": "7f13d0e731f5b68a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "vite",
        "title": "Vite",
        "text": "Vite serves source code over native ESM. [https://vitejs.dev/guide/why.html page], [[Javascript Modules]] [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules mdn]"
      },
      "date": 1682754410188
    },
    {
      "item": {
        "type": "factory",
        "id": "bbf7d1acefe672c1"
      },
      "id": "bbf7d1acefe672c1",
      "type": "add",
      "after": "7f13d0e731f5b68a",
      "date": 1682754426883
    },
    {
      "type": "edit",
      "id": "bbf7d1acefe672c1",
      "item": {
        "type": "reference",
        "id": "bbf7d1acefe672c1",
        "site": "wiki.dbbs.co",
        "slug": "javascript-modules",
        "title": "Javascript Modules",
        "text": "In the most ubiquitous programming ecosystem, modules have been shoehorned in where they were originally lacking.  As of early 2018, nodejs gradually builds toward ECMAScript Modules.  Guidance for transition from CommonJS to ESM: [https://medium.com/@giltayar/native-es-modules-in-nodejs-status-and-future-directions-part-i-ee5ea3001f71 link]"
      },
      "date": 1682754429773
    },
    {
      "id": "af0680888a377355",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "af0680888a377355",
        "text": "Will wiki need to adopt ECMAScript Module conventions?  I think `grunt` and `browserify` produce CommonJS-style behavior.  Will we need to adopt different build tools?"
      },
      "after": "bbf7d1acefe672c1",
      "attribution": {
        "page": "Javascript Modules"
      },
      "date": 1682754521482
    },
    {
      "id": "413abcd3264d1a1f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "413abcd3264d1a1f",
        "text": "Will wiki need to adopt ECMAScript Module conventions?  [[Eric Dobbs]] thinks `grunt` and `browserify` produce CommonJS-style behavior.  Will we need to adopt different build tools?",
        "alias": "af0680888a377355"
      },
      "after": "bbf7d1acefe672c1",
      "attribution": {
        "page": "Javascript Modules"
      },
      "date": 1682754594315
    },
    {
      "type": "remove",
      "id": "af0680888a377355",
      "date": 1682754596706
    },
    {
      "type": "remove",
      "id": "413abcd3264d1a1f",
      "date": 1682754601440
    },
    {
      "id": "af0680888a377355",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "af0680888a377355",
        "text": "Will wiki need to adopt ECMAScript Module conventions?  [[Eric Dobbs]] thinks `grunt` and `browserify` produce CommonJS-style behavior.  Will we need to adopt different build tools?"
      },
      "after": "bbf7d1acefe672c1",
      "attribution": {
        "page": "Javascript Modules"
      },
      "date": 1682754603957
    },
    {
      "item": {
        "type": "factory",
        "id": "b6a18ef6af4c908f"
      },
      "id": "b6a18ef6af4c908f",
      "type": "add",
      "after": "af0680888a377355",
      "date": 1682754909588
    },
    {
      "type": "edit",
      "id": "b6a18ef6af4c908f",
      "item": {
        "type": "pagefold",
        "id": "b6a18ef6af4c908f",
        "text": "~"
      },
      "date": 1682754912292
    },
    {
      "item": {
        "type": "factory",
        "id": "b87242b1e64e97cd"
      },
      "id": "b87242b1e64e97cd",
      "type": "add",
      "after": "b6a18ef6af4c908f",
      "date": 1682754913999
    },
    {
      "type": "edit",
      "id": "b87242b1e64e97cd",
      "item": {
        "type": "paragraph",
        "id": "b87242b1e64e97cd",
        "text": "https://elm-lang.org/examples/buttons"
      },
      "date": 1682754915289
    },
    {
      "type": "edit",
      "id": "b87242b1e64e97cd",
      "item": {
        "type": "markdown",
        "id": "b87242b1e64e97cd",
        "text": "https://elm-lang.org/examples/buttons"
      },
      "date": 1682754917850
    },
    {
      "type": "edit",
      "id": "b87242b1e64e97cd",
      "item": {
        "type": "markdown",
        "id": "b87242b1e64e97cd",
        "text": "https://elm-lang.org/examples/buttons [https://github.com/elm/elm-lang.org github]"
      },
      "date": 1682755154437
    },
    {
      "item": {
        "type": "factory",
        "id": "35a9be794f61fb71"
      },
      "id": "35a9be794f61fb71",
      "type": "add",
      "after": "b87242b1e64e97cd",
      "date": 1682755182728
    },
    {
      "type": "edit",
      "id": "b87242b1e64e97cd",
      "item": {
        "type": "markdown",
        "id": "b87242b1e64e97cd",
        "text": "https://elm-lang.org/examples/buttons [https://github.com/elm/elm-lang.org github]\n"
      },
      "date": 1682755186593
    },
    {
      "type": "add",
      "id": "95f18c471b347dfc",
      "item": {
        "type": "markdown",
        "id": "95f18c471b347dfc",
        "text": "Running bash build.sh should generate the static website in _site.\n\nAfter that, you can run (cd _site ; elm reactor) to see it at http://localhost:8000 in your browser. Not all the links work with this setup, but you should be able to get to all the pages nonetheless!"
      },
      "after": "b87242b1e64e97cd",
      "date": 1682755187900
    },
    {
      "type": "edit",
      "id": "95f18c471b347dfc",
      "item": {
        "type": "markdown",
        "id": "95f18c471b347dfc",
        "text": "Running bash `build.sh` should generate the static website in _site.\n\nAfter that, you can run (cd _site ; elm reactor) to see it at http://localhost:8000 in your browser. Not all the links work with this setup, but you should be able to get to all the pages nonetheless!"
      },
      "date": 1682755200698
    },
    {
      "type": "edit",
      "id": "35a9be794f61fb71",
      "item": {
        "type": "pagefold",
        "id": "35a9be794f61fb71",
        "text": "~"
      },
      "date": 1682785547568
    },
    {
      "item": {
        "type": "factory",
        "id": "f2cac9ccd89cdbaa"
      },
      "id": "f2cac9ccd89cdbaa",
      "type": "add",
      "after": "35a9be794f61fb71",
      "date": 1682785549287
    },
    {
      "type": "edit",
      "id": "f2cac9ccd89cdbaa",
      "item": {
        "type": "reference",
        "id": "f2cac9ccd89cdbaa",
        "site": "plugins.fed.wiki.org",
        "slug": "about-plugins",
        "title": "About Plugins",
        "text": "We explain federated wiki plugins. We define their role interpreting content, recount our experience writing many, describe principles and strategies for future plugins, and offer a step-by-step guide for new plugin authors. We'll also collect pointers here to good plugins when they emerge."
      },
      "date": 1682785555229
    },
    {
      "item": {
        "type": "factory",
        "id": "d3ea0ba0acf3e654"
      },
      "id": "d3ea0ba0acf3e654",
      "type": "add",
      "after": "f2cac9ccd89cdbaa",
      "date": 1682785561935
    },
    {
      "type": "edit",
      "id": "d3ea0ba0acf3e654",
      "item": {
        "type": "reference",
        "id": "d3ea0ba0acf3e654",
        "site": "plugins.fed.wiki.org",
        "slug": "maintaining-a-custom-wiki",
        "title": "Maintaining a Custom Wiki",
        "text": "You will want to include your custom plugins in some or all of the servers you operate. Here we explore various workflows that simplify this task."
      },
      "date": 1682785568183
    },
    {
      "id": "9ecd1002797f4dff",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9ecd1002797f4dff",
        "text": "If you have just built a new version of a plugin you can load it into a locally installed version of wiki."
      },
      "after": "d3ea0ba0acf3e654",
      "attribution": {
        "page": "Maintaining a Custom Wiki",
        "site": "plugins.fed.wiki.org"
      },
      "date": 1682785594039
    },
    {
      "id": "b4bde3a6e8b04644",
      "type": "add",
      "item": {
        "type": "code",
        "id": "b4bde3a6e8b04644",
        "text": "npm install $(npm pack ../wiki-plugin-foo/ -1)\nnode index.js -p 3000 -f --security_type friends"
      },
      "after": "9ecd1002797f4dff",
      "attribution": {
        "page": "Maintaining a Custom Wiki",
        "site": "plugins.fed.wiki.org"
      },
      "date": 1682785597087
    }
  ]
}