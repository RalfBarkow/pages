{
  "title": "Strongtalk-2020",
  "story": [
    {
      "type": "markdown",
      "id": "555de3d521287068",
      "text": "http://iam.georgecox.com/2020/09/15/strongtalk-2020-beginnings/"
    },
    {
      "type": "markdown",
      "id": "2079a6e36c87ffe4",
      "text": "https://github.com/gjvc/strongtalk-2020"
    },
    {
      "type": "markdown",
      "id": "3e0fcbb58b5ea3ef",
      "text": "The Strongtalk programming environment (mostly written by Steffen Grarup; Gilad Bracha added the typechecking stuff) is quite different than the ones in traditional Smalltalk systems. It uses an outliner design, where constructs are represented in an indented, bullet-list tree format, which is familiar to users of Windows Explorer, and other similar programs. This format has several advantages, including the fact that it allows you to see the whole interface for a class at once, and open multiple methods at the same time in the same browser.\n\nTo understand the Strongtalk system, it will be helpful to have a relatively small, self-contained application to examine, that uses many of the major features of the system. So let's use use the Strongtalk HTML browser itself for this purpose. This browser, which is the same one that you should be viewing this tour in, is very primitive, and doesn't have the right architecture for a full-blown HTML browser. It can't even support http at the moment, so it is only good for viewing pages on the local disk (its only excuse is that it was written in a few weeks when Lars Bak bet me I couldn't write one in less than two weeks. I lost the bet). However, it is a real application; it is written in Strongtalk; it is typesafe; it is written in a normal Smalltalk style; and it uses most of the basic libraries as well as the UI libraries. So it is not a bad application to look at if you want to see how the Strongtalk system 'feels' in use."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Strongtalk-2020",
        "story": []
      },
      "date": 1631460917634
    },
    {
      "item": {
        "type": "factory",
        "id": "555de3d521287068"
      },
      "id": "555de3d521287068",
      "type": "add",
      "date": 1631460919579
    },
    {
      "type": "edit",
      "id": "555de3d521287068",
      "item": {
        "type": "markdown",
        "id": "555de3d521287068",
        "text": "http://iam.georgecox.com/2020/09/15/strongtalk-2020-beginnings/"
      },
      "date": 1631460922706
    },
    {
      "item": {
        "type": "factory",
        "id": "2079a6e36c87ffe4"
      },
      "id": "2079a6e36c87ffe4",
      "type": "add",
      "after": "555de3d521287068",
      "date": 1631461165087
    },
    {
      "type": "edit",
      "id": "2079a6e36c87ffe4",
      "item": {
        "type": "markdown",
        "id": "2079a6e36c87ffe4",
        "text": "https://github.com/gjvc/strongtalk-2020"
      },
      "date": 1631461167919
    },
    {
      "item": {
        "type": "factory",
        "id": "3e0fcbb58b5ea3ef"
      },
      "id": "3e0fcbb58b5ea3ef",
      "type": "add",
      "after": "2079a6e36c87ffe4",
      "date": 1631462031115
    },
    {
      "type": "edit",
      "id": "3e0fcbb58b5ea3ef",
      "item": {
        "type": "markdown",
        "id": "3e0fcbb58b5ea3ef",
        "text": "The Strongtalk programming environment (mostly written by Steffen Grarup; Gilad Bracha added the typechecking stuff) is quite different than the ones in traditional Smalltalk systems. It uses an outliner design, where constructs are represented in an indented, bullet-list tree format, which is familiar to users of Windows Explorer, and other similar programs. This format has several advantages, including the fact that it allows you to see the whole interface for a class at once, and open multiple methods at the same time in the same browser.\n\nTo understand the Strongtalk system, it will be helpful to have a relatively small, self-contained application to examine, that uses many of the major features of the system. So let's use use the Strongtalk HTML browser itself for this purpose. This browser, which is the same one that you should be viewing this tour in, is very primitive, and doesn't have the right architecture for a full-blown HTML browser. It can't even support http at the moment, so it is only good for viewing pages on the local disk (its only excuse is that it was written in a few weeks when Lars Bak bet me I couldn't write one in less than two weeks. I lost the bet). However, it is a real application; it is written in Strongtalk; it is typesafe; it is written in a normal Smalltalk style; and it uses most of the basic libraries as well as the UI libraries. So it is not a bad application to look at if you want to see how the Strongtalk system 'feels' in use."
      },
      "date": 1631462033706
    }
  ]
}