{
  "title": "VWF",
  "story": [
    {
      "type": "paragraph",
      "id": "ce9008d74dae50a9",
      "text": "croqueteer â€” [https://discord.com/channels/694586717247635488/971124719271166072/978309449183793272 discord]\nActually, there is a very strong connection to VWF - it was a prototype for the current Croquet OS and the lessons I learned there were incorporated into the current system."
    },
    {
      "type": "paragraph",
      "id": "641184577ff05d1f",
      "text": "synchromesh â€” [https://discord.com/channels/694586717247635488/971124719271166072/975610777383891045 discord]\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's [[TeaTime]] protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project? [https://github.com/virtual-world-framework/vwf github] Cheers!\n"
    },
    {
      "type": "paragraph",
      "id": "5bdf72fa0163406f",
      "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/971124719271166072/975615529215737937 discord]\nThis version is a complete from-scratch implementation, no direct connection to VWF. It's inspired by the Smalltalk version but tailored to the capabilities of JavaScript. The snapshot mechanism (which is used to replicate all state to a new client joining an ongoing session) is pretty similar semantically to how the Smalltalk version worked. The publish/subscribe event mechanism on the other hand is very different from the proxy-based messaging in Smalltalk. And the server-side is rather different â€“ the Smalltalk version was peer-to-peer, which does not work well on the web. Instead, I made it \"as peer-to-peer as sensible\" where all computation is performed on the clients and only some events are sent via a reflector server. Our global scalable reflector network is completely new. \n"
    },
    {
      "type": "paragraph",
      "id": "0e8912b186bc7bc8",
      "text": "yoshiki â€” [https://discord.com/channels/694586717247635488/971124719271166072/982684470433964047 discord]\nAs [[David A Smith]] wrote in above, there was another interim attempt called VWF also\n"
    },
    {
      "type": "paragraph",
      "id": "e0ba998fd999168f",
      "text": "â‡’ [[Virtus ICE 2 1994]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "VWF",
        "story": []
      },
      "date": 1655295244651
    },
    {
      "item": {
        "type": "factory",
        "id": "0e8912b186bc7bc8"
      },
      "id": "0e8912b186bc7bc8",
      "type": "add",
      "date": 1655295293545
    },
    {
      "type": "edit",
      "id": "0e8912b186bc7bc8",
      "item": {
        "type": "paragraph",
        "id": "0e8912b186bc7bc8",
        "text": "yoshiki â€” 04.06.2022\nAs David wrote in above, there was another interim attempt called VWF also\n"
      },
      "date": 1655295296242
    },
    {
      "type": "edit",
      "id": "0e8912b186bc7bc8",
      "item": {
        "type": "paragraph",
        "id": "0e8912b186bc7bc8",
        "text": "yoshiki â€” [https://discord.com/channels/694586717247635488/971124719271166072/982684470433964047 discord]\nAs David wrote in above, there was another interim attempt called VWF also\n"
      },
      "date": 1655295308733
    },
    {
      "type": "edit",
      "id": "0e8912b186bc7bc8",
      "item": {
        "type": "paragraph",
        "id": "0e8912b186bc7bc8",
        "text": "yoshiki â€” [https://discord.com/channels/694586717247635488/971124719271166072/982684470433964047 discord]\nAs [[David A Smith]] wrote in above, there was another interim attempt called VWF also\n"
      },
      "date": 1655295376014
    },
    {
      "item": {
        "type": "factory",
        "id": "e0ba998fd999168f"
      },
      "id": "e0ba998fd999168f",
      "type": "add",
      "after": "0e8912b186bc7bc8",
      "date": 1655295408696
    },
    {
      "type": "edit",
      "id": "e0ba998fd999168f",
      "item": {
        "type": "paragraph",
        "id": "e0ba998fd999168f",
        "text": "â‡’ [[Virtus ICE 2 1994]]"
      },
      "date": 1655295419187
    },
    {
      "item": {
        "type": "factory",
        "id": "ce9008d74dae50a9"
      },
      "id": "ce9008d74dae50a9",
      "type": "add",
      "after": "e0ba998fd999168f",
      "date": 1655295556693
    },
    {
      "id": "ce9008d74dae50a9",
      "type": "move",
      "order": [
        "ce9008d74dae50a9",
        "0e8912b186bc7bc8",
        "e0ba998fd999168f"
      ],
      "date": 1655295559103
    },
    {
      "type": "edit",
      "id": "ce9008d74dae50a9",
      "item": {
        "type": "paragraph",
        "id": "ce9008d74dae50a9",
        "text": "croqueteer â€” 23.05.2022\nActually, there is a very strong connection to VWF - it was a prototype for the current Croquet OS and the lessons I learned there were incorporated into the current system."
      },
      "date": 1655295561021
    },
    {
      "type": "edit",
      "id": "ce9008d74dae50a9",
      "item": {
        "type": "paragraph",
        "id": "ce9008d74dae50a9",
        "text": "croqueteer â€” [https://discord.com/channels/694586717247635488/971124719271166072/978309449183793272 discord]\nActually, there is a very strong connection to VWF - it was a prototype for the current Croquet OS and the lessons I learned there were incorporated into the current system."
      },
      "date": 1655295574489
    },
    {
      "type": "add",
      "id": "5bdf72fa0163406f",
      "item": {
        "type": "paragraph",
        "id": "5bdf72fa0163406f",
        "text": "codefrau ðŸ¦© â€” 16.05.2022\nThis version is a complete from-scratch implementation, no direct connection to VWF. It's inspired by the Smalltalk version but tailored to the capabilities of JavaScript. The snapshot mechanism (which is used to replicate all state to a new client joining an ongoing session) is pretty similar semantically to how the Smalltalk version worked. The publish/subscribe event mechanism on the other hand is very different from the proxy-based messaging in Smalltalk. And the server-side is rather different â€“ the Smalltalk version was peer-to-peer, which does not work well on the web. Instead, I made it \"as peer-to-peer as sensible\" where all computation is performed on the clients and only some events are sent via a reflector server. Our global scalable reflector network is completely new. \n"
      },
      "after": "ce9008d74dae50a9",
      "date": 1655295596145
    },
    {
      "type": "edit",
      "id": "5bdf72fa0163406f",
      "item": {
        "type": "paragraph",
        "id": "5bdf72fa0163406f",
        "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/971124719271166072/975615529215737937 discord]\nThis version is a complete from-scratch implementation, no direct connection to VWF. It's inspired by the Smalltalk version but tailored to the capabilities of JavaScript. The snapshot mechanism (which is used to replicate all state to a new client joining an ongoing session) is pretty similar semantically to how the Smalltalk version worked. The publish/subscribe event mechanism on the other hand is very different from the proxy-based messaging in Smalltalk. And the server-side is rather different â€“ the Smalltalk version was peer-to-peer, which does not work well on the web. Instead, I made it \"as peer-to-peer as sensible\" where all computation is performed on the clients and only some events are sent via a reflector server. Our global scalable reflector network is completely new. \n"
      },
      "date": 1655295612922
    },
    {
      "type": "add",
      "id": "641184577ff05d1f",
      "item": {
        "type": "paragraph",
        "id": "641184577ff05d1f",
        "text": "synchromesh â€” 16.05.2022\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's TeaTime protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project (https://github.com/virtual-world-framework/vwf)? Cheers!\n"
      },
      "after": "ce9008d74dae50a9",
      "date": 1655295685099
    },
    {
      "type": "edit",
      "id": "641184577ff05d1f",
      "item": {
        "type": "paragraph",
        "id": "641184577ff05d1f",
        "text": "synchromesh â€” [https://discord.com/channels/694586717247635488/971124719271166072/975610777383891045 discord]\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's TeaTime protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project (https://github.com/virtual-world-framework/vwf)? Cheers!\n"
      },
      "date": 1655295702987
    },
    {
      "type": "edit",
      "id": "641184577ff05d1f",
      "item": {
        "type": "paragraph",
        "id": "641184577ff05d1f",
        "text": "synchromesh â€” [https://discord.com/channels/694586717247635488/971124719271166072/975610777383891045 discord]\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's [[TeaTime]] protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project (https://github.com/virtual-world-framework/vwf)? Cheers!\n"
      },
      "date": 1655295720409
    },
    {
      "type": "edit",
      "id": "641184577ff05d1f",
      "item": {
        "type": "paragraph",
        "id": "641184577ff05d1f",
        "text": "synchromesh â€” [https://discord.com/channels/694586717247635488/971124719271166072/975610777383891045 discord]\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's [[TeaTime]] protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project [https://github.com/virtual-world-framework/vwf github]? Cheers!\n"
      },
      "date": 1655295767966
    },
    {
      "type": "edit",
      "id": "641184577ff05d1f",
      "item": {
        "type": "paragraph",
        "id": "641184577ff05d1f",
        "text": "synchromesh â€” [https://discord.com/channels/694586717247635488/971124719271166072/975610777383891045 discord]\nThanks for the background, it's great to see some of the names behind the current generation. I remember coming across David Reed's [[TeaTime]] protocol and thinking \"aha, wow!\", and Croquet always seemed like a validation of Smalltalk's \"bitwise-identical on all platforms\" approach. Indeed all the VPRI work is amazing. I'd be interested to know how Croquet \"made the jump\" to the JavaScript world - and is there any connection to the  Virtual World Framework project? [https://github.com/virtual-world-framework/vwf github] Cheers!\n"
      },
      "date": 1655295850255
    }
  ]
}