{
  "title": "Beck Cycle",
  "story": [
    {
      "type": "paragraph",
      "id": "f144f002568247c6",
      "text": "Programming by experimentation is exemplified by a Beck cycle which is a week long. A Beck cycle starts Monday morning with an idea. Without any planning, a programmer starts coding to see if the idea can be implemented. By the end of Monday, he will have convinced himself of the idea's feasibility. Tuesday, and Wednesday are spend finishing a prototype implementation. Thursday, and Friday are spent showing the prototype to his colleagues, and fixing any bugs that are found. If a colleague likes the idea, he wil l pick up the prototype, modify it, and use it in his next project . "
    },
    {
      "type": "paragraph",
      "id": "2192a49a101428f9",
      "text": "When the idea is no good, the Beck Cycle is aborted . This could happen when the programmer discovers that he doesn't know how to implement the prototype, or when the prototype uncovers some basic flaw. In conventional environments, projects are seldom aborted because the effort invested is high. In Smalltalk, the effort invested is much less, and I can discard the code and try something else instead of trying to make the idea work by adding patch after patch. Since I throw away my failures, and show off the good ideas, I have acquired a reputation as an very good Smalltalk programmer."
    },
    {
      "type": "pagefold",
      "id": "8b9c99fcdc4a683d",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "96b6187a7fbc552b",
      "text": "Sandberg, D. W. Smalltalk and [[Exploratory Programming]]. ACM SIGPLAN Notices 23, Nr. 10 (1. Oktober 1988): 85–92. [https://doi.org/10.1145/51607.51614 doi].\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Beck Cycle",
        "story": []
      },
      "date": 1667197643062
    },
    {
      "item": {
        "type": "factory",
        "id": "f144f002568247c6"
      },
      "id": "f144f002568247c6",
      "type": "add",
      "date": 1667197645113
    },
    {
      "type": "edit",
      "id": "f144f002568247c6",
      "item": {
        "type": "paragraph",
        "id": "f144f002568247c6",
        "text": "Programming by experimentation is exemplified by a Beck cycle which is a week long .A Beck cycle starts Monday morning with an idea . Without any planning, a programme r starts coding to see if the idea can be implemented . By the end of Monday, he will have convinced himself of the idea's feasibility . Tuesday, and Wednesday are spend finishin g a prototype implementation . Thursday, and Friday are spent showing the prototype t o his colleagues, and fixing any bugs that are found . If a colleague likes the idea, he wil l pick up the prototype, modify it, and use it in his next project . When the idea is no good, the Beck Cycle is aborted . This could happen when th e programmer discovers that he doesn't know how to implement the prototype, or whe n the prototype uncovers some basic flaw . In conventional environments, projects are seldom aborted because the effort invested is high . In Smalltalk, the effort invested i s much less, and I can discard the code and try something else instead of trying to make the idea work by adding patch after patch . Since I throw away my failures, and sho w off the good ideas, I have acquired a reputation as an very good Smalltalk programmer ."
      },
      "date": 1667197663020
    },
    {
      "item": {
        "type": "factory",
        "id": "8b9c99fcdc4a683d"
      },
      "id": "8b9c99fcdc4a683d",
      "type": "add",
      "after": "f144f002568247c6",
      "date": 1667197685910
    },
    {
      "type": "edit",
      "id": "8b9c99fcdc4a683d",
      "item": {
        "type": "pagefold",
        "id": "8b9c99fcdc4a683d",
        "text": "~"
      },
      "date": 1667197691805
    },
    {
      "item": {
        "type": "factory",
        "id": "96b6187a7fbc552b"
      },
      "id": "96b6187a7fbc552b",
      "type": "add",
      "after": "8b9c99fcdc4a683d",
      "date": 1667197694769
    },
    {
      "type": "edit",
      "id": "96b6187a7fbc552b",
      "item": {
        "type": "paragraph",
        "id": "96b6187a7fbc552b",
        "text": "Sandberg, D. W. „Smalltalk and exploratory programming“. ACM SIGPLAN Notices 23, Nr. 10 (1. Oktober 1988): 85–92. https://doi.org/10.1145/51607.51614.\n"
      },
      "date": 1667197696883
    },
    {
      "type": "edit",
      "id": "f144f002568247c6",
      "item": {
        "type": "paragraph",
        "id": "f144f002568247c6",
        "text": "Programming by experimentation is exemplified by a Beck cycle which is a week long. A Beck cycle starts Monday morning with an idea. Without any planning, a programmer starts coding to see if the idea can be implemented. By the end of Monday, he will have convinced himself of the idea's feasibility. Tuesday, and Wednesday are spend finishing a prototype implementation. Thursday, and Friday are spent showing the prototype to his colleagues, and fixing any bugs that are found. If a colleague likes the idea, he wil l pick up the prototype, modify it, and use it in his next project . "
      },
      "date": 1667197843062
    },
    {
      "type": "add",
      "id": "2192a49a101428f9",
      "item": {
        "type": "paragraph",
        "id": "2192a49a101428f9",
        "text": "When the idea is no good, the Beck Cycle is aborted . This could happen when the programmer discovers that he doesn't know how to implement the prototype, or when the prototype uncovers some basic flaw. In conventional environments, projects are seldom aborted because the effort invested is high. In Smalltalk, the effort invested is much less, and I can discard the code and try something else instead of trying to make the idea work by adding patch after patch. Since I throw away my failures, and show off the good ideas, I have acquired a reputation as an very good Smalltalk programmer."
      },
      "after": "f144f002568247c6",
      "date": 1667197930402
    },
    {
      "type": "edit",
      "id": "96b6187a7fbc552b",
      "item": {
        "type": "paragraph",
        "id": "96b6187a7fbc552b",
        "text": "Sandberg, D. W. „Smalltalk and exploratory programming“. ACM SIGPLAN Notices 23, Nr. 10 (1. Oktober 1988): 85–92. [https://doi.org/10.1145/51607.51614 doi].\n"
      },
      "date": 1667197950378
    },
    {
      "type": "edit",
      "id": "96b6187a7fbc552b",
      "item": {
        "type": "paragraph",
        "id": "96b6187a7fbc552b",
        "text": "Sandberg, D. W. [[Smalltalk and Exploratory Programming]]. ACM SIGPLAN Notices 23, Nr. 10 (1. Oktober 1988): 85–92. [https://doi.org/10.1145/51607.51614 doi].\n"
      },
      "date": 1667198008587
    },
    {
      "type": "edit",
      "id": "96b6187a7fbc552b",
      "item": {
        "type": "paragraph",
        "id": "96b6187a7fbc552b",
        "text": "Sandberg, D. W. Smalltalk and [[Exploratory Programming]]. ACM SIGPLAN Notices 23, Nr. 10 (1. Oktober 1988): 85–92. [https://doi.org/10.1145/51607.51614 doi].\n"
      },
      "date": 1667198033685
    }
  ]
}