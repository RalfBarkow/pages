{
  "title": "Multiple Tracks",
  "story": [
    {
      "type": "paragraph",
      "id": "6f32b50c65a07e79",
      "text": "Track setters don't necessarily correspond directly to an actual setter name. For example, {{gtMethod:GsRotationProp>>write:to:}}uses an intermediate builder object, and {{gtMethod:BlElement>>position:}} is explicitly deprecated in favor of {{gtMethod:BlElement>>relocate:}}, which makes for a weird track name."
    },
    {
      "type": "paragraph",
      "id": "c6540fae1489403f",
      "text": "To combine the two lists, smalltalk doesn't have a `zip` function, but we can instead use a `readStream` on one of the collections to iterate through both in parallel."
    },
    {
      "type": "paragraph",
      "id": "32ea0d4937e54e9c",
      "text": "This \"zipping\" logic is performed in {{gtMethod:GsAnimation>>gotoFrame:}}"
    },
    {
      "type": "code",
      "id": "be98a1ef4ba7fd0e",
      "text": "gotoFrame: i\n  | values |\n  values  := (self valuesForFrame: i) readStream.\n  self animatedProps do: [:prop| prop set: values next]"
    },
    {
      "type": "markdown",
      "id": "4724878b7bb36ca4",
      "text": "**Note**: [[Michal Wallace]]'s demos do not yet work on the GT Dynabook. Magritte conflict?"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Multiple Tracks",
        "story": []
      },
      "date": 1702409964211
    },
    {
      "type": "edit",
      "id": "839d05d21dd41398",
      "item": {
        "type": "paragraph",
        "id": "839d05d21dd41398",
        "text": "To handle mupltiple tracks, we need to \"zip\" the list of property values for the current frame (from {{gtMethod:GsAnimation>>valuesForFrame:}}) with the accessor objects (\"props\") from {{gtMethod:GsAnimation>>animatedProps}}."
      },
      "date": 1702409966585
    },
    {
      "item": {
        "type": "factory",
        "id": "6f32b50c65a07e79"
      },
      "id": "6f32b50c65a07e79",
      "type": "add",
      "after": "839d05d21dd41398",
      "date": 1702409983390
    },
    {
      "type": "edit",
      "id": "6f32b50c65a07e79",
      "item": {
        "type": "paragraph",
        "id": "6f32b50c65a07e79",
        "text": "Track setters don't necessarily correspond directly to an actual setter name. For example, {{gtMethod:GsRotationProp>>write:to:}}uses an intermediate builder object, and {{gtMethod:BlElement>>position:}} is explicitly deprecated in favor of {{gtMethod:BlElement>>relocate:}}, which makes for a weird track name."
      },
      "date": 1702409984727
    },
    {
      "item": {
        "type": "factory",
        "id": "c6540fae1489403f"
      },
      "id": "c6540fae1489403f",
      "type": "add",
      "after": "6f32b50c65a07e79",
      "date": 1702410011715
    },
    {
      "type": "edit",
      "id": "c6540fae1489403f",
      "item": {
        "type": "paragraph",
        "id": "c6540fae1489403f",
        "text": "To combine the two lists, smalltalk doesn't have a `zip` function, but we can instead use a `readStream` on one of the collections to iterate through both in parallel."
      },
      "date": 1702410013332
    },
    {
      "item": {
        "type": "factory",
        "id": "32ea0d4937e54e9c"
      },
      "id": "32ea0d4937e54e9c",
      "type": "add",
      "after": "c6540fae1489403f",
      "date": 1702410023995
    },
    {
      "type": "edit",
      "id": "32ea0d4937e54e9c",
      "item": {
        "type": "paragraph",
        "id": "32ea0d4937e54e9c",
        "text": "This \"zipping\" logic is performed in {{gtMethod:GsAnimation>>gotoFrame:}}"
      },
      "date": 1702410025413
    },
    {
      "id": "be98a1ef4ba7fd0e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "be98a1ef4ba7fd0e",
        "text": "gotoFrame: i\n  | values |\n  values  := (self valuesForFrame: i) readStream.\n  self animatedProps do: [:prop| prop set: values next]"
      },
      "after": "32ea0d4937e54e9c",
      "attribution": {
        "page": "Controlled Evolution"
      },
      "date": 1702410033261
    },
    {
      "item": {
        "type": "factory",
        "id": "4724878b7bb36ca4"
      },
      "id": "4724878b7bb36ca4",
      "type": "add",
      "after": "be98a1ef4ba7fd0e",
      "date": 1702410068212
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "paragraph",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: "
      },
      "date": 1702410078993
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "paragraph",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: Demos do not work in GT Dynabook"
      },
      "date": 1702410096178
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "paragraph",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: Demos do not work in GT Dynabook. Magritte conflict?"
      },
      "date": 1702410106601
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "markdown",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: Demos do not work in GT Dynabook. Magritte conflict?"
      },
      "date": 1702410113617
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "markdown",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: The demos do not yet work on the GT Dynabook. Magritte conflict?"
      },
      "date": 1702410135249
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702410556716
    },
    {
      "type": "edit",
      "id": "4724878b7bb36ca4",
      "item": {
        "type": "markdown",
        "id": "4724878b7bb36ca4",
        "text": "**Note**: [[Michal Wallace]]'s demos do not yet work on the GT Dynabook. Magritte conflict?"
      },
      "date": 1702410616046
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702410635002
    }
  ]
}