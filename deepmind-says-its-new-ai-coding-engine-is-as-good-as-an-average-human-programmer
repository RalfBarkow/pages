{
  "title": "DeepMind says its new AI coding engine is as good as an average human programmer",
  "story": [
    {
      "type": "paragraph",
      "id": "0a3c127e6293c3f1",
      "text": "[https://www.theverge.com/2022/2/2/22914085/alphacode-ai-coding-program-automatic-deepmind-codeforce https://www.theverge.com/2022/2/2/22914085/alphacode-ai-coding-program-automatic-deepmind-codeforce]"
    },
    {
      "type": "paragraph",
      "id": "c815d0cdeb099d2c",
      "text": "If an AI is as good as an average human programmer, then the average human programmer is no better than an AI which doesn't actually understand anything about what it is doing."
    },
    {
      "type": "markdown",
      "id": "22c3c6c902f9596d",
      "text": "For some time now I have suspected that the average human programmer just fiddles with the code until it seems to work and calls it &quot;done&quot;, without having any real understanding of exactly what the program is supposed to do or how the implementation actually works.  This is my rather cynical take on &quot;test-driven development, or TDD."
    },
    {
      "type": "paragraph",
      "id": "9e3fe44efd5b15b8",
      "text": "The above research appears to provide scientific confirmation of my view. If an AI can perform as well as an average programmer, then given that the AI has no understanding of the program or its implementation and is just fiddling with the code until it appears to work (i.e., until it passes the provided set of acceptance tests), then it seems that the average human programmer also has no understanding and is also just fiddling with the code until it appears to work."
    },
    {
      "type": "markdown",
      "id": "62023d40f17ce8b2",
      "text": "According to the Wikipedia page on TDD, step 3 is &quot;Write the simplest code that passes the new test&quot;. A suitable candidate for this is code which scans the test data file for the provided input parameters and returns the required output (as given in the test file).  Step 3 says explicitly &#8220;Inelegant or hard code is acceptable, as long as it passes the test.'' So, this hard coding should be acceptable. The suggested implementation also follows the principles of *keep it simple, stupid* (KISS) and *You aren't gonna need it.* (YAGNI) It has the further advantage of passing any additional tests that may be added to the test harness in the future."
    },
    {
      "type": "paragraph",
      "id": "01e1b7dce93b92a3",
      "text": "  [Unfortunately, it massively violates the Einstein Principle that   everything should be made as simple as possible, BUT NO SIMPLER.   I think most RISKS readers by now understand that it is the NO SIMPLER   that is the killer here for trustworthy systems.  PGN]"
    },
    {
      "type": "markdown",
      "id": "582de84ac42e05e7",
      "text": "Source: The Verge via [https://catless.ncl.ac.uk/Risks/33/53/#subj13.1 The Risks Digest]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "date": 1669179664000,
      "item": {
        "title": "DeepMind says its new AI coding engine is as good as an average human programmer",
        "story": [
          {
            "type": "paragraph",
            "id": "0a3c127e6293c3f1",
            "text": "[https://www.theverge.com/2022/2/2/22914085/alphacode-ai-coding-program-automatic-deepmind-codeforce https://www.theverge.com/2022/2/2/22914085/alphacode-ai-coding-program-automatic-deepmind-codeforce]"
          },
          {
            "type": "paragraph",
            "id": "c815d0cdeb099d2c",
            "text": "If an AI is as good as an average human programmer, then the average human programmer is no better than an AI which doesn't actually understand anything about what it is doing."
          },
          {
            "type": "markdown",
            "id": "22c3c6c902f9596d",
            "text": "For some time now I have suspected that the average human programmer just fiddles with the code until it seems to work and calls it &quot;done&quot;, without having any real understanding of exactly what the program is supposed to do or how the implementation actually works.  This is my rather cynical take on &quot;test-driven development, or TDD."
          },
          {
            "type": "paragraph",
            "id": "9e3fe44efd5b15b8",
            "text": "The above research appears to provide scientific confirmation of my view. If an AI can perform as well as an average programmer, then given that the AI has no understanding of the program or its implementation and is just fiddling with the code until it appears to work (i.e., until it passes the provided set of acceptance tests), then it seems that the average human programmer also has no understanding and is also just fiddling with the code until it appears to work."
          },
          {
            "type": "markdown",
            "id": "62023d40f17ce8b2",
            "text": "According to the Wikipedia page on TDD, step 3 is &quot;Write the simplest code that passes the new test&quot;. A suitable candidate for this is code which scans the test data file for the provided input parameters and returns the required output (as given in the test file).  Step 3 says explicitly &#8220;Inelegant or hard code is acceptable, as long as it passes the test.'' So, this hard coding should be acceptable. The suggested implementation also follows the principles of *keep it simple, stupid* (KISS) and *You aren't gonna need it.* (YAGNI) It has the further advantage of passing any additional tests that may be added to the test harness in the future."
          },
          {
            "type": "paragraph",
            "id": "01e1b7dce93b92a3",
            "text": "  [Unfortunately, it massively violates the Einstein Principle that   everything should be made as simple as possible, BUT NO SIMPLER.   I think most RISKS readers by now understand that it is the NO SIMPLER   that is the killer here for trustworthy systems.  PGN]"
          },
          {
            "type": "markdown",
            "id": "582de84ac42e05e7",
            "text": "Source: The Verge via [https://catless.ncl.ac.uk/Risks/33/53/#subj13.1 The Risks Digest]"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "risks.rodwell.me",
      "date": 1669332060459
    }
  ]
}