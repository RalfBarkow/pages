{
  "title": "Croquet",
  "story": [
    {
      "type": "markdown",
      "id": "d42a36fa02ab7f6a",
      "text": "[[Croquet]]: A Unique Collaboration Architecture \n"
    },
    {
      "type": "markdown",
      "id": "8f196c9cee475ea3",
      "text": "The next generation of our connected world calls for a low-latency, low-bandwidth, low-development-effort platform for synchronized interactions. The platform must also enforce privacy from the ground up, in particular in anticipation of an always-on Augmented Reality future.\n"
    },
    {
      "type": "video",
      "id": "805b61d73d5faf3b",
      "text": "YOUTUBE ujOVHVAjXj4\nDLS 2020 Keynote by [[Vanessa Freudenberg]]: Croquet. A Unique Collaboration Architecture"
    },
    {
      "type": "markdown",
      "id": "207ce8f88b1a0a28",
      "text": "\nIn traditional synchronization approaches, computations are performed on a server and results are continuously distributed to clients. Croquet moves all computation to the clients. A lightweight “reflector” server directs the clients to advance time in sync, and ensures that any external event is incorporated by all clients at exactly the same point in the computation, leading to synchronized, bit-identical state. All data is end-to-end encrypted by the clients; the server stores and distributes data, but can never peek inside.\n\nCroquet’s programming model separates the synchronized computation of “models” from individually computed “views”. This means the world is the same for everyone, but the display of the world can be tailored to each device and user. Models and views communicate using a publish/subscribe mechanism that routes certain events via the reflector. This model/view separation and pub/sub communication is a major departure from the previous, proxy-based Smalltalk implementation of Croquet. It retains the ability for live programming by atomically incorporating new code.\n\nVanessa is the chief architect of the current JavaScript-based implementation. She gives an overview of the system, highlights challenges in designing the API, and explores the far-reaching implications of the shift from server to client."
    },
    {
      "type": "markdown",
      "id": "fdc6d9fd11ba091d",
      "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020, Wed 18 Nov 2020\n"
    },
    {
      "type": "pagefold",
      "id": "d349ce9931308d18",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4c4a28366c9941c1",
      "text": "⇒ [[Croquet Tutorial]]"
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "fdc6d9fd11ba091d",
      "item": {
        "type": "markdown",
        "id": "fdc6d9fd11ba091d",
        "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020, Wed 18 Nov 2020\n"
      },
      "date": 1644309695146
    },
    {
      "type": "edit",
      "id": "d42a36fa02ab7f6a",
      "item": {
        "type": "markdown",
        "id": "d42a36fa02ab7f6a",
        "text": "[[Croquet]]: A Unique Collaboration Architecture \n"
      },
      "date": 1644309672719
    },
    {
      "id": "d42a36fa02ab7f6a",
      "type": "move",
      "order": [
        "d42a36fa02ab7f6a",
        "8f196c9cee475ea3",
        "805b61d73d5faf3b",
        "fdc6d9fd11ba091d",
        "b11624af17727926",
        "207ce8f88b1a0a28"
      ],
      "date": 1644309665697
    },
    {
      "type": "add",
      "id": "d42a36fa02ab7f6a",
      "item": {
        "type": "markdown",
        "id": "d42a36fa02ab7f6a",
        "text": "[[Croquet]]: A Unique Collaboration Architecture \n"
      },
      "after": "fdc6d9fd11ba091d",
      "date": 1644309663296
    },
    {
      "type": "edit",
      "id": "fdc6d9fd11ba091d",
      "item": {
        "type": "markdown",
        "id": "fdc6d9fd11ba091d",
        "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020, Wed 18 Nov 2020\n"
      },
      "date": 1644309661716
    },
    {
      "type": "add",
      "id": "b11624af17727926",
      "item": {
        "type": "markdown",
        "id": "b11624af17727926",
        "text": "Dr. Vanessa Freudenberg\nChief Architect, Croquet Corp\n"
      },
      "after": "fdc6d9fd11ba091d",
      "date": 1644309658979
    },
    {
      "type": "edit",
      "id": "fdc6d9fd11ba091d",
      "item": {
        "type": "markdown",
        "id": "fdc6d9fd11ba091d",
        "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020, Wed 18 Nov 2020\n"
      },
      "date": 1644309656907
    },
    {
      "type": "edit",
      "id": "805b61d73d5faf3b",
      "item": {
        "type": "video",
        "id": "805b61d73d5faf3b",
        "text": "YOUTUBE ujOVHVAjXj4\nDLS 2020 Keynote by [[Vanessa Freudenberg]]: Croquet. A Unique Collaboration Architecture"
      },
      "date": 1644309632691
    },
    {
      "type": "add",
      "id": "207ce8f88b1a0a28",
      "item": {
        "type": "markdown",
        "id": "207ce8f88b1a0a28",
        "text": "\nIn traditional synchronization approaches, computations are performed on a server and results are continuously distributed to clients. Croquet moves all computation to the clients. A lightweight “reflector” server directs the clients to advance time in sync, and ensures that any external event is incorporated by all clients at exactly the same point in the computation, leading to synchronized, bit-identical state. All data is end-to-end encrypted by the clients; the server stores and distributes data, but can never peek inside.\n\nCroquet’s programming model separates the synchronized computation of “models” from individually computed “views”. This means the world is the same for everyone, but the display of the world can be tailored to each device and user. Models and views communicate using a publish/subscribe mechanism that routes certain events via the reflector. This model/view separation and pub/sub communication is a major departure from the previous, proxy-based Smalltalk implementation of Croquet. It retains the ability for live programming by atomically incorporating new code.\n\nVanessa is the chief architect of the current JavaScript-based implementation. She gives an overview of the system, highlights challenges in designing the API, and explores the far-reaching implications of the shift from server to client."
      },
      "after": "8f196c9cee475ea3",
      "date": 1644309623991
    },
    {
      "type": "fork",
      "date": 1644309592585
    },
    {
      "id": "8f196c9cee475ea3",
      "type": "move",
      "order": [
        "8f196c9cee475ea3",
        "805b61d73d5faf3b",
        "fdc6d9fd11ba091d",
        "207ce8f88b1a0a28"
      ],
      "date": 1644309589651,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "8f196c9cee475ea3",
      "item": {
        "type": "markdown",
        "id": "8f196c9cee475ea3",
        "text": "The next generation of our connected world calls for a low-latency, low-bandwidth, low-development-effort platform for synchronized interactions. The platform must also enforce privacy from the ground up, in particular in anticipation of an always-on Augmented Reality future.\n"
      },
      "after": "fdc6d9fd11ba091d",
      "date": 1644309586948
    },
    {
      "type": "edit",
      "id": "fdc6d9fd11ba091d",
      "item": {
        "type": "markdown",
        "id": "fdc6d9fd11ba091d",
        "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020, Wed 18 Nov 2020\n"
      },
      "date": 1644309578445
    },
    {
      "type": "edit",
      "id": "fdc6d9fd11ba091d",
      "item": {
        "type": "markdown",
        "id": "fdc6d9fd11ba091d",
        "text": "Keynote for the 16th Dynamic Languages Symposium (DLS) at SPLASH 2020\nWed 18 Nov 2020\n\nCroquet: A Unique Collaboration Architecture \nDr. Vanessa Freudenberg\nChief Architect, Croquet Corp\n\nThe next generation of our connected world calls for a low-latency, low-bandwidth, low-development-effort platform for synchronized interactions. The platform must also enforce privacy from the ground up, in particular in anticipation of an always-on Augmented Reality future.\n\nIn traditional synchronization approaches, computations are performed on a server and results are continuously distributed to clients. Croquet moves all computation to the clients. A lightweight “reflector” server directs the clients to advance time in sync, and ensures that any external event is incorporated by all clients at exactly the same point in the computation, leading to synchronized, bit-identical state. All data is end-to-end encrypted by the clients; the server stores and distributes data, but can never peek inside.\n\nCroquet’s programming model separates the synchronized computation of “models” from individually computed “views”. This means the world is the same for everyone, but the display of the world can be tailored to each device and user. Models and views communicate using a publish/subscribe mechanism that routes certain events via the reflector. This model/view separation and pub/sub communication is a major departure from the previous, proxy-based Smalltalk implementation of Croquet. It retains the ability for live programming by atomically incorporating new code.\n\nVanessa is the chief architect of the current JavaScript-based implementation. She gives an overview of the system, highlights challenges in designing the API, and explores the far-reaching implications of the shift from server to client."
      },
      "date": 1631631660421
    },
    {
      "item": {
        "type": "factory",
        "id": "fdc6d9fd11ba091d"
      },
      "id": "fdc6d9fd11ba091d",
      "type": "add",
      "after": "805b61d73d5faf3b",
      "date": 1631631657947
    },
    {
      "type": "remove",
      "id": "055c07bc457b0d28",
      "date": 1631631656460
    },
    {
      "item": {
        "type": "factory",
        "id": "055c07bc457b0d28"
      },
      "id": "055c07bc457b0d28",
      "type": "add",
      "after": "805b61d73d5faf3b",
      "date": 1631631654927
    },
    {
      "type": "edit",
      "id": "805b61d73d5faf3b",
      "item": {
        "type": "video",
        "id": "805b61d73d5faf3b",
        "text": "YOUTUBE ujOVHVAjXj4\nDLS 2020 Keynote by Vanessa Freudenberg: Croquet. A Unique Collaboration Architecture"
      },
      "date": 1631631641792
    },
    {
      "type": "edit",
      "id": "805b61d73d5faf3b",
      "item": {
        "type": "video",
        "id": "805b61d73d5faf3b",
        "text": "YOUTUBE ujOVHVAjXj4"
      },
      "date": 1631631630260
    },
    {
      "item": {
        "type": "factory",
        "id": "805b61d73d5faf3b"
      },
      "id": "805b61d73d5faf3b",
      "type": "add",
      "date": 1631631614014
    },
    {
      "type": "create",
      "item": {
        "title": "Croquet",
        "story": []
      },
      "date": 1631631612189
    },
    {
      "id": "b11624af17727926",
      "type": "remove",
      "date": 1644309706637
    },
    {
      "id": "fdc6d9fd11ba091d",
      "type": "move",
      "order": [
        "d42a36fa02ab7f6a",
        "8f196c9cee475ea3",
        "805b61d73d5faf3b",
        "207ce8f88b1a0a28",
        "fdc6d9fd11ba091d"
      ],
      "date": 1644309743570
    },
    {
      "type": "fork",
      "date": 1644309775137
    },
    {
      "type": "fork",
      "date": 1644309889483
    },
    {
      "id": "805b61d73d5faf3b",
      "type": "move",
      "order": [
        "d42a36fa02ab7f6a",
        "8f196c9cee475ea3",
        "805b61d73d5faf3b",
        "207ce8f88b1a0a28",
        "fdc6d9fd11ba091d"
      ],
      "date": 1644309902172
    },
    {
      "type": "fork",
      "date": 1644309929000
    },
    {
      "item": {
        "type": "factory",
        "id": "d349ce9931308d18"
      },
      "id": "d349ce9931308d18",
      "type": "add",
      "after": "fdc6d9fd11ba091d",
      "date": 1653908403077
    },
    {
      "type": "edit",
      "id": "d349ce9931308d18",
      "item": {
        "type": "pagefold",
        "id": "d349ce9931308d18",
        "text": "~"
      },
      "date": 1653908406153
    },
    {
      "item": {
        "type": "factory",
        "id": "4c4a28366c9941c1"
      },
      "id": "4c4a28366c9941c1",
      "type": "add",
      "after": "d349ce9931308d18",
      "date": 1653908407348
    },
    {
      "type": "edit",
      "id": "4c4a28366c9941c1",
      "item": {
        "type": "paragraph",
        "id": "4c4a28366c9941c1",
        "text": "⇒ [[Croquet Tutorial]]"
      },
      "date": 1653908429169
    }
  ]
}