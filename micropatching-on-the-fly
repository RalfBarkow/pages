{
  "title": "Micropatching on the fly",
  "story": [
    {
      "type": "paragraph",
      "id": "fd1b8d981d608173",
      "text": "People who are running computers with a lot of old and buggy software are being wooed by services that will apply binary patches to their code while it is running."
    },
    {
      "type": "paragraph",
      "id": "8b657f4e81b4194e",
      "text": "If a site is running an old down-rev version and can't afford the time, cost, and effort to upgrade to a later version, the micropatching service can apply fixes on the fly."
    },
    {
      "type": "paragraph",
      "id": "532a519796a4e495",
      "text": "  [No flies are injured in the process.  PGN]"
    },
    {
      "type": "paragraph",
      "id": "1562236d0abd54ec",
      "text": "They patch in storage to avoid verification of code signatures.  Sometimes they extract patches from later versions of the code and back-port them to older code."
    },
    {
      "type": "paragraph",
      "id": "7f79a577b1bd9830",
      "text": "There is a DARPA/I2O program that is awarding ways to patch IoT appliances and heavy truck engines:   [https://www.darpa.mil/program/assured-micropatching https://www.darpa.mil/program/assured-micropatching]"
    },
    {
      "type": "paragraph",
      "id": "0fa00a90b00f844c",
      "text": "  What could possibly go wrong?  THVV"
    },
    {
      "type": "paragraph",
      "id": "a9fcb7d29c7f2107",
      "text": "    [Risks? This reminds me of Doug McIlroy and Bob Morris patching the live     object code of their EPL compiler (early PL/I, starkly subset for     Multics) at the same time Molly Wagner was compiling Multics     memory-management code in 1967.  What a mess.  (Tom, Thanks for this     item.)  Note for younger RISKS readers: Tom dates back to pre-Multics on     CTSS, with what appears to be the very first e-mail system, which he and     Noel Morris developed at MIT.  PGN]"
    },
    {
      "type": "markdown",
      "id": "615f5859c473b32a",
      "text": "Source: Tom Van Vleck via [https://catless.ncl.ac.uk/Risks/33/30/#subj5.1 The Risks Digest]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "date": 1655769663000,
      "item": {
        "title": "Micropatching on the fly",
        "story": [
          {
            "type": "paragraph",
            "id": "fd1b8d981d608173",
            "text": "People who are running computers with a lot of old and buggy software are being wooed by services that will apply binary patches to their code while it is running."
          },
          {
            "type": "paragraph",
            "id": "8b657f4e81b4194e",
            "text": "If a site is running an old down-rev version and can't afford the time, cost, and effort to upgrade to a later version, the micropatching service can apply fixes on the fly."
          },
          {
            "type": "paragraph",
            "id": "532a519796a4e495",
            "text": "  [No flies are injured in the process.  PGN]"
          },
          {
            "type": "paragraph",
            "id": "1562236d0abd54ec",
            "text": "They patch in storage to avoid verification of code signatures.  Sometimes they extract patches from later versions of the code and back-port them to older code."
          },
          {
            "type": "paragraph",
            "id": "7f79a577b1bd9830",
            "text": "There is a DARPA/I2O program that is awarding ways to patch IoT appliances and heavy truck engines:   [https://www.darpa.mil/program/assured-micropatching https://www.darpa.mil/program/assured-micropatching]"
          },
          {
            "type": "paragraph",
            "id": "0fa00a90b00f844c",
            "text": "  What could possibly go wrong?  THVV"
          },
          {
            "type": "paragraph",
            "id": "a9fcb7d29c7f2107",
            "text": "    [Risks? This reminds me of Doug McIlroy and Bob Morris patching the live     object code of their EPL compiler (early PL/I, starkly subset for     Multics) at the same time Molly Wagner was compiling Multics     memory-management code in 1967.  What a mess.  (Tom, Thanks for this     item.)  Note for younger RISKS readers: Tom dates back to pre-Multics on     CTSS, with what appears to be the very first e-mail system, which he and     Noel Morris developed at MIT.  PGN]"
          },
          {
            "type": "markdown",
            "id": "615f5859c473b32a",
            "text": "Source: Tom Van Vleck via [https://catless.ncl.ac.uk/Risks/33/30/#subj5.1 The Risks Digest]"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "risks.rodwell.me",
      "date": 1655879150139
    }
  ]
}