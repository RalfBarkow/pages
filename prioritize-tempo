{
  "title": "Prioritize Tempo",
  "story": [
    {
      "type": "paragraph",
      "id": "7cf0c047de3c5db8",
      "text": "A couple articles draw attention to making extremely small changes. Increase the frequency, make steps smaller and lower-risk. Take that to an extreme and enjoy the surprise that it actually works. Kent Beck and Ward Cunningham are not done changing the software world."
    },
    {
      "type": "paragraph",
      "id": "82422ee81fd7aa49",
      "text": "Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
    },
    {
      "type": "paragraph",
      "id": "09a53e435eccc845",
      "text": "[[Joshua Kerievsky]] reminisces about Ward Cunningham teaching test-driven development. Ward challenged the students to see which pair could code with the smallest spans of time with tests failing. The winners thought they were cheating by reverting their changes if they couldn't get the tests to pass within one minute. Ward said nope, not cheating. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
    },
    {
      "type": "paragraph",
      "id": "c819b27d9fbfa9a2",
      "text": "Both examples prioritize the development experience of maintaining a tempo—and encouraging a high-frequency tempo—over the code produced each cycle."
    },
    {
      "type": "paragraph",
      "id": "5ef4f3982323292d",
      "text": "Contrast [[Tempo Interruptions]]"
    },
    {
      "type": "paragraph",
      "id": "ebbc9c109a4b78ea",
      "text": "Seems worth noting that there's a lot more in Kent's article than just a story about test && commit || revert. He takes us on a journey of the long, patient, meandering journey that lead to his willingness to try such a radical practice. And because we know something about the history of the author, we know he has experience much earlier in his career working with Ward on radical innovation in software development. There's a history of challenging dogma and convention."
    },
    {
      "type": "paragraph",
      "id": "e85fdaeb95ddf1ff",
      "text": "Also notable in Kent's article is a theme we find in our own project of re-envisioning software development. Extreme programming was born at the beginning of the personal computer revolution. Software built by small teams to run in isolation on small computers. Our world has changed and Facebook, where Kent was working, had grown from 700 developers to 5,000. He was wondering how to coordinate the work of 10,000 developers. And worth noticing that the linux kernel has seen contributions from 15,000 developers."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Prioritize Tempo",
        "story": []
      },
      "date": 1567780586019
    },
    {
      "item": {
        "type": "factory",
        "id": "7cf0c047de3c5db8"
      },
      "id": "7cf0c047de3c5db8",
      "type": "add",
      "date": 1567780588036
    },
    {
      "type": "edit",
      "id": "7cf0c047de3c5db8",
      "item": {
        "type": "paragraph",
        "id": "7cf0c047de3c5db8",
        "text": "A couple articles draw attention to making extremely small changes. Increase the frequency, make steps smaller and lower-risk. Take that to an extreme and enjoy the surprise that it actually works. Kent Beck and Ward Cunningham are not done changing the software world."
      },
      "date": 1567780741098
    },
    {
      "type": "add",
      "id": "82422ee81fd7aa49",
      "item": {
        "type": "paragraph",
        "id": "82422ee81fd7aa49",
        "text": "Kent Beck on Testing the Boundaries of Collaboration [https://increment.com/testing/testing-the-boundaries-of-collaboration/ article] with test && commit || revert (TCR)"
      },
      "after": "7cf0c047de3c5db8",
      "date": 1567780795769
    },
    {
      "type": "add",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Author reminisces about Ward Cunningham teaching test-driven development and challenging the students to see who can code with the smallest spans of time with tests failing. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "after": "82422ee81fd7aa49",
      "date": 1567780876159
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Joshua Kerievsky reminisces about Ward Cunningham teaching test-driven development. Ward challened the students to see which pair could code with the smallest spans of time with tests failing. The winners were \"cheating\" by reverting their changes if they couldn't get the tests to pass within one minute.[https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1567780953263
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Joshua Kerievsky reminisces about Ward Cunningham teaching test-driven development. Ward challened the students to see which pair could code with the smallest spans of time with tests failing. The winners were \"cheating\" by reverting their changes if they couldn't get the tests to pass within one minute. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1567780959773
    },
    {
      "type": "add",
      "id": "c819b27d9fbfa9a2",
      "item": {
        "type": "paragraph",
        "id": "c819b27d9fbfa9a2",
        "text": "Both examples prioritize the development experience of maintaining a tempo—and encouraging a high-frequency tempo—over the code produced each cycle."
      },
      "after": "09a53e435eccc845",
      "date": 1567781029193
    },
    {
      "type": "add",
      "id": "5ef4f3982323292d",
      "item": {
        "type": "paragraph",
        "id": "5ef4f3982323292d",
        "text": "Contrast [[Tempo Interruptions]]"
      },
      "after": "c819b27d9fbfa9a2",
      "date": 1567781040443
    },
    {
      "item": {
        "type": "factory",
        "id": "ebbc9c109a4b78ea"
      },
      "id": "ebbc9c109a4b78ea",
      "type": "add",
      "after": "5ef4f3982323292d",
      "date": 1567781080851
    },
    {
      "type": "edit",
      "id": "ebbc9c109a4b78ea",
      "item": {
        "type": "paragraph",
        "id": "ebbc9c109a4b78ea",
        "text": "Seems worth noting that there's a lot more in Kent's article than just a story about test && commit || revert. He takes us on a journey of the long, patient, meandering journey that lead to his willingness to try such a radical practice. And because we know something about the history of the author, we know he has experience much earlier in his career working with Ward on radical innovation in software development. There's a history of challenging dogma and convention."
      },
      "date": 1567781245291
    },
    {
      "type": "add",
      "id": "e85fdaeb95ddf1ff",
      "item": {
        "type": "paragraph",
        "id": "e85fdaeb95ddf1ff",
        "text": "Also notable in Kent's article is a theme we find in our own project of re-envisioning software development. Extreme programming was born at the beginning of the personal computer revolution. Software built by small teams to run in isolation on small computers. Our world has changed and Facebook, where Kent was working, had grown from 700 developers to 10,000."
      },
      "after": "ebbc9c109a4b78ea",
      "date": 1567781474689
    },
    {
      "type": "edit",
      "id": "e85fdaeb95ddf1ff",
      "item": {
        "type": "paragraph",
        "id": "e85fdaeb95ddf1ff",
        "text": "Also notable in Kent's article is a theme we find in our own project of re-envisioning software development. Extreme programming was born at the beginning of the personal computer revolution. Software built by small teams to run in isolation on small computers. Our world has changed and Facebook, where Kent was working, had grown from 700 developers to 5,000. He was wondering how to coordinate the work of 10,000 developers."
      },
      "date": 1567781536646
    },
    {
      "type": "edit",
      "id": "e85fdaeb95ddf1ff",
      "item": {
        "type": "paragraph",
        "id": "e85fdaeb95ddf1ff",
        "text": "Also notable in Kent's article is a theme we find in our own project of re-envisioning software development. Extreme programming was born at the beginning of the personal computer revolution. Software built by small teams to run in isolation on small computers. Our world has changed and Facebook, where Kent was working, had grown from 700 developers to 5,000. He was wondering how to coordinate the work of 10,000 developers. And worth noticing that the linux kernel has seen contributions from 15,000 developers."
      },
      "date": 1567781614709
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Joshua Kerievsky reminisces about Ward Cunningham teaching test-driven development. Ward challenged the students to see which pair could code with the smallest spans of time with tests failing. The winners were \"cheating\" by reverting their changes if they couldn't get the tests to pass within one minute. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1567782699129
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Joshua Kerievsky reminisces about Ward Cunningham teaching test-driven development. Ward challenged the students to see which pair could code with the smallest spans of time with tests failing. The winners thought they were \"cheating\" by reverting their changes if they couldn't get the tests to pass within one minute. Ward said nope, not cheating. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1567782732050
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "Joshua Kerievsky reminisces about Ward Cunningham teaching test-driven development. Ward challenged the students to see which pair could code with the smallest spans of time with tests failing. The winners thought they were cheating by reverting their changes if they couldn't get the tests to pass within one minute. Ward said nope, not cheating. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1567782749776
    },
    {
      "type": "fork",
      "site": "code.wiki.dbbs.co",
      "date": 1568241909251
    },
    {
      "type": "fork",
      "site": "code.fed.wiki",
      "date": 1627362982418
    },
    {
      "type": "edit",
      "id": "09a53e435eccc845",
      "item": {
        "type": "paragraph",
        "id": "09a53e435eccc845",
        "text": "[[Joshua Kerievsky]] reminisces about Ward Cunningham teaching test-driven development. Ward challenged the students to see which pair could code with the smallest spans of time with tests failing. The winners thought they were cheating by reverting their changes if they couldn't get the tests to pass within one minute. Ward said nope, not cheating. [https://www.industriallogic.com/blog/shortest-longest-red/ post]"
      },
      "date": 1644929670984
    }
  ]
}