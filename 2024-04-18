{
  "title": "2024-04-18",
  "story": [
    {
      "type": "paragraph",
      "id": "ec8b0f776fccacc2",
      "text": "⇐ [[rstream-system-bus]]"
    },
    {
      "type": "image",
      "id": "d8095a8ea55b96fa",
      "text": "rstream-system-bus",
      "size": "wide",
      "width": 418,
      "height": 159,
      "url": "/assets/plugins/image/448f26df852a0d9aa11edfaeba2eafc3.jpg"
    },
    {
      "type": "graphviz",
      "id": "09e5fd7084ff9ae0",
      "text": "digraph g {\nrankdir=\"RL\";\n\"bus\"[label=\"bus\"];\n\"config\"[label=\"config\"];\n\"logger\"[label=\"logger\"];\n\"state\"[label=\"state\"];\n\"ui\"[label=\"ui\"];\n\"bus\" -> \"config\";\n\"bus\" -> \"logger\";\n\"logger\" -> \"config\";\n\"state\" -> \"bus\";\n\"state\" -> \"config\";\n\"state\" -> \"logger\";\n\"ui\" -> \"bus\";\n\"ui\" -> \"config\";\n\"ui\" -> \"state\";\n}",
      "dot": "digraph g {\nrankdir=\"RL\";\n\"bus\"[label=\"bus\"];\n\"config\"[label=\"config\"];\n\"logger\"[label=\"logger\"];\n\"state\"[label=\"state\"];\n\"ui\"[label=\"ui\"];\n\"bus\" -> \"config\";\n\"bus\" -> \"logger\";\n\"logger\" -> \"config\";\n\"state\" -> \"bus\";\n\"state\" -> \"config\";\n\"state\" -> \"logger\";\n\"ui\" -> \"bus\";\n\"ui\" -> \"config\";\n\"ui\" -> \"state\";\n}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Title: g Pages: 1 -->\n<svg width=\"460pt\" height=\"110pt\"\n viewBox=\"0.00 0.00 460.29 110.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 106)\">\n<title>g</title>\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-106 456.29,-106 456.29,4 -4,4\"/>\n<!-- bus -->\n<g id=\"node1\" class=\"node\">\n<title>bus</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"241.83\" cy=\"-84\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"241.83\" y=\"-79.8\" font-family=\"Times,serif\" font-size=\"14.00\">bus</text>\n</g>\n<!-- config -->\n<g id=\"node2\" class=\"node\">\n<title>config</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"35.71\" cy=\"-23\" rx=\"35.71\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"35.71\" y=\"-18.8\" font-family=\"Times,serif\" font-size=\"14.00\">config</text>\n</g>\n<!-- bus&#45;&gt;config -->\n<g id=\"edge1\" class=\"edge\">\n<title>bus&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M214.64,-85.83C187.1,-86.86 142.9,-85.91 107.41,-73 90.77,-66.94 74.47,-55.87 61.72,-45.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"64.43,-42.55 54.5,-38.84 59.95,-47.93 64.43,-42.55\"/>\n</g>\n<!-- logger -->\n<g id=\"node3\" class=\"node\">\n<title>logger</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"143.12\" cy=\"-46\" rx=\"35.71\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"143.12\" y=\"-41.8\" font-family=\"Times,serif\" font-size=\"14.00\">logger</text>\n</g>\n<!-- bus&#45;&gt;logger -->\n<g id=\"edge2\" class=\"edge\">\n<title>bus&#45;&gt;logger</title>\n<path fill=\"none\" stroke=\"black\" d=\"M217.91,-74.99C207.18,-70.77 194.1,-65.64 181.96,-60.86\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"183.64,-57.37 173.05,-56.97 181.08,-63.89 183.64,-57.37\"/>\n</g>\n<!-- logger&#45;&gt;config -->\n<g id=\"edge3\" class=\"edge\">\n<title>logger&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M109.92,-38.97C100.41,-36.89 89.83,-34.59 79.75,-32.39\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"80.59,-28.77 70.07,-30.06 79.1,-35.61 80.59,-28.77\"/>\n</g>\n<!-- state -->\n<g id=\"node4\" class=\"node\">\n<title>state</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"333.56\" cy=\"-38\" rx=\"28.73\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"333.56\" y=\"-33.8\" font-family=\"Times,serif\" font-size=\"14.00\">state</text>\n</g>\n<!-- state&#45;&gt;bus -->\n<g id=\"edge4\" class=\"edge\">\n<title>state&#45;&gt;bus</title>\n<path fill=\"none\" stroke=\"black\" d=\"M310.84,-49.13C299.62,-54.88 285.75,-61.99 273.47,-68.29\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.34,-65.45 265.04,-73.12 275.54,-71.68 272.34,-65.45\"/>\n</g>\n<!-- state&#45;&gt;config -->\n<g id=\"edge5\" class=\"edge\">\n<title>state&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M305.44,-33.62C274.8,-28.91 223.39,-21.74 178.83,-19 147.15,-17.05 139.14,-18.1 107.41,-19 99.3,-19.23 90.66,-19.6 82.31,-20.04\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"82.37,-16.58 72.58,-20.63 82.75,-23.57 82.37,-16.58\"/>\n</g>\n<!-- state&#45;&gt;logger -->\n<g id=\"edge6\" class=\"edge\">\n<title>state&#45;&gt;logger</title>\n<path fill=\"none\" stroke=\"black\" d=\"M304.76,-39.18C274.51,-40.46 225.68,-42.53 189.79,-44.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"189.95,-40.59 180.1,-44.51 190.24,-47.58 189.95,-40.59\"/>\n</g>\n<!-- ui -->\n<g id=\"node5\" class=\"node\">\n<title>ui</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"425.29\" cy=\"-38\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"425.29\" y=\"-33.8\" font-family=\"Times,serif\" font-size=\"14.00\">ui</text>\n</g>\n<!-- ui&#45;&gt;bus -->\n<g id=\"edge7\" class=\"edge\">\n<title>ui&#45;&gt;bus</title>\n<path fill=\"none\" stroke=\"black\" d=\"M403.27,-48.74C391.49,-54.35 376.38,-60.88 362.29,-65 335.15,-72.93 303.5,-77.77 279.6,-80.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"279.43,-77.19 269.88,-81.77 280.2,-84.15 279.43,-77.19\"/>\n</g>\n<!-- ui&#45;&gt;config -->\n<g id=\"edge8\" class=\"edge\">\n<title>ui&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M403.77,-26.51C392.02,-20.6 376.78,-14.01 362.29,-11 263.04,9.68 143.17,-4.48 80.2,-14.83\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.77,-11.52 70.49,-16.64 80.94,-18.43 79.77,-11.52\"/>\n</g>\n<!-- ui&#45;&gt;state -->\n<g id=\"edge9\" class=\"edge\">\n<title>ui&#45;&gt;state</title>\n<path fill=\"none\" stroke=\"black\" d=\"M397.86,-38C390.25,-38 381.79,-38 373.59,-38\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"373.68,-34.5 363.68,-38 373.68,-41.5 373.68,-34.5\"/>\n</g>\n</g>\n</svg>\n"
    },
    {
      "type": "reference",
      "id": "1ab68aa2c17d72ad",
      "site": "localhost:3000",
      "slug": "playground-rdom",
      "title": "Playground: rdom",
      "text": "dennemark via [https://github.com/thi-ng/umbrella/discussions/456#discussioncomment-8690325 github]: […] the click counter on rdom [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom github] could be made much simpler, but I guess it is only used as an example to show the inputTrigger function?"
    },
    {
      "type": "paragraph",
      "id": "9fb57401bc7f4696",
      "text": "– [[geom]]: create [[hiccup-svg]] via convertTree"
    },
    {
      "type": "pagefold",
      "id": "35016eeb72b45d4d",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "0bdd8233c48807d4",
      "site": "wiki.dbbs.co",
      "slug": "enrich-vensim-svg",
      "title": "Enrich Vensim SVG",
      "text": "Here we offer a tool which makes a best effort to enrich SVG diagrams exported from Vensim with hyperlinks that conform to wiki's internal link conventions."
    },
    {
      "type": "image",
      "id": "b4db31dc86cc7809",
      "text": "getSvg(url)",
      "size": "wide",
      "width": 418,
      "height": 261,
      "url": "/assets/plugins/image/1387b773a7807848aa53ad49ea13e8da.jpg"
    },
    {
      "type": "paragraph",
      "id": "7c1cd355f40a10e6",
      "text": "a [[Dictionary]]('__jsclass__'->'AsyncFunction' '__registryid__'->'9fd97ef0-fd56-11ee-9e84-f1a109a8a823' )"
    },
    {
      "type": "paragraph",
      "id": "06634417b4e36848",
      "text": "NB. What [[Registry]]?"
    },
    {
      "type": "paragraph",
      "id": "d85339ce5ea3b75e",
      "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a [[Collision]].\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]]s.\n\nI ([[Sarino Suon]]) notice that {{gtMethod:[[PBDeserializer]]>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:[[PharoLinkRegistry]]>>#jsonSerializationFor:}}"
    },
    {
      "type": "paragraph",
      "id": "4ad1edcd5c6f2149",
      "text": "⇒ [[JSLink]]"
    },
    {
      "type": "paragraph",
      "id": "6a058c8df0761a06",
      "text": "⇒ [[ZnManagingMultithreadedServer]]"
    },
    {
      "type": "pagefold",
      "id": "33161c86f8511647",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "15ea359f51575817",
      "text": "[[Dynamic Binding]] frees object-oriented programmers from having to manually [[encode]] [[Message Dispatch]] to different receiver types."
    },
    {
      "type": "reference",
      "id": "d3c1ea710d029159",
      "site": "found.ward.bay.wiki.org",
      "slug": "async-polymorphic-fetch",
      "title": "Async Polymorphic Fetch",
      "text": "Modern client-side javascript offers a function, fetch, which returns a Promise to the response of an http request. I (Ward) have launched as many as 450 simultaneous fetches and gotten good results. Amazing. Now we generalize fetch to operate as a federation citizen where the history of one page offers good advice as to where to find another. We call this searching \"[[Polymorphism]]\" because of the similarity to object-oriented polymorphic [[Message Dispatch]]."
    },
    {
      "type": "paragraph",
      "id": "b4dab49e4574a731",
      "text": "[[Join Point]]"
    },
    {
      "type": "pagefold",
      "id": "6987ce8957063919",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "fe69ab1401d9de75",
      "text": "[[hiccup-svg]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-04-18",
        "story": []
      },
      "date": 1713419474870
    },
    {
      "item": {
        "type": "factory",
        "id": "ade7bbaf91a5fd89"
      },
      "id": "ade7bbaf91a5fd89",
      "type": "add",
      "date": 1713419480527
    },
    {
      "type": "edit",
      "id": "ade7bbaf91a5fd89",
      "item": {
        "type": "reference",
        "id": "ade7bbaf91a5fd89",
        "site": "wiki.dbbs.co",
        "slug": "welcome-visitors",
        "title": "Welcome Visitors",
        "text": "Welcome to this [[Federated Wiki]] site. From this page you can find who we are and what we do. New sites provide this information and then claim the site as their own. You will need your own site to participate."
      },
      "date": 1713419483269
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713424693590
    },
    {
      "item": {
        "type": "image",
        "id": "d8095a8ea55b96fa",
        "text": "rstream-system-bus",
        "size": "wide",
        "width": 418,
        "height": 159,
        "url": "/assets/plugins/image/448f26df852a0d9aa11edfaeba2eafc3.jpg"
      },
      "id": "d8095a8ea55b96fa",
      "type": "add",
      "after": "ade7bbaf91a5fd89",
      "date": 1713424695269
    },
    {
      "type": "edit",
      "id": "d8095a8ea55b96fa",
      "item": {
        "type": "image",
        "id": "d8095a8ea55b96fa",
        "text": "rstream-system-bus",
        "size": "wide",
        "width": 418,
        "height": 159,
        "url": "/assets/plugins/image/448f26df852a0d9aa11edfaeba2eafc3.jpg"
      },
      "date": 1713424714458
    },
    {
      "type": "edit",
      "id": "d8095a8ea55b96fa",
      "item": {
        "type": "image",
        "id": "d8095a8ea55b96fa",
        "text": "rstream-system-bus",
        "size": "wide",
        "width": 418,
        "height": 159,
        "url": "/assets/plugins/image/448f26df852a0d9aa11edfaeba2eafc3.jpg"
      },
      "date": 1713424718891
    },
    {
      "type": "fork",
      "date": 1713424798868
    },
    {
      "item": {
        "type": "factory",
        "id": "ec8b0f776fccacc2"
      },
      "id": "ec8b0f776fccacc2",
      "type": "add",
      "after": "d8095a8ea55b96fa",
      "date": 1713424812279
    },
    {
      "id": "ec8b0f776fccacc2",
      "type": "move",
      "order": [
        "ade7bbaf91a5fd89",
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa"
      ],
      "date": 1713424814572
    },
    {
      "type": "edit",
      "id": "ec8b0f776fccacc2",
      "item": {
        "type": "paragraph",
        "id": "ec8b0f776fccacc2",
        "text": "⇐"
      },
      "date": 1713424832903
    },
    {
      "type": "edit",
      "id": "ec8b0f776fccacc2",
      "item": {
        "type": "paragraph",
        "id": "ec8b0f776fccacc2",
        "text": "⇐ [[rstream-system-bus]]"
      },
      "date": 1713424852019
    },
    {
      "item": {
        "type": "factory",
        "id": "0bdd8233c48807d4"
      },
      "id": "0bdd8233c48807d4",
      "type": "add",
      "after": "d8095a8ea55b96fa",
      "date": 1713424992920
    },
    {
      "type": "edit",
      "id": "0bdd8233c48807d4",
      "item": {
        "type": "reference",
        "id": "0bdd8233c48807d4",
        "site": "wiki.dbbs.co",
        "slug": "enrich-vensim-svg",
        "title": "Enrich Vensim SVG",
        "text": "Here we offer a tool which makes a best effort to enrich SVG diagrams exported from Vensim with hyperlinks that conform to wiki's internal link conventions."
      },
      "date": 1713424996641
    },
    {
      "id": "0bdd8233c48807d4",
      "type": "move",
      "order": [
        "ade7bbaf91a5fd89",
        "0bdd8233c48807d4",
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa"
      ],
      "date": 1713425100580
    },
    {
      "type": "remove",
      "id": "ade7bbaf91a5fd89",
      "date": 1713425104752
    },
    {
      "id": "0bdd8233c48807d4",
      "type": "move",
      "order": [
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa",
        "0bdd8233c48807d4"
      ],
      "date": 1713425989612
    },
    {
      "item": {
        "type": "factory",
        "id": "b4db31dc86cc7809"
      },
      "id": "b4db31dc86cc7809",
      "type": "add",
      "after": "0bdd8233c48807d4",
      "date": 1713425996118
    },
    {
      "type": "edit",
      "id": "b4db31dc86cc7809",
      "item": {
        "type": "image",
        "id": "b4db31dc86cc7809",
        "text": "Uploaded image",
        "size": "wide",
        "width": 418,
        "height": 261,
        "url": "/assets/plugins/image/1387b773a7807848aa53ad49ea13e8da.jpg"
      },
      "date": 1713426025860
    },
    {
      "type": "edit",
      "id": "b4db31dc86cc7809",
      "item": {
        "type": "image",
        "id": "b4db31dc86cc7809",
        "text": "getSvg(url)",
        "size": "wide",
        "width": 418,
        "height": 261,
        "url": "/assets/plugins/image/1387b773a7807848aa53ad49ea13e8da.jpg"
      },
      "date": 1713426036520
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713426168445
    },
    {
      "id": "09e5fd7084ff9ae0",
      "type": "add",
      "item": {
        "type": "graphviz",
        "id": "09e5fd7084ff9ae0",
        "text": "digraph g {\nrankdir=\"RL\";\n\"bus\"[label=\"bus\"];\n\"config\"[label=\"config\"];\n\"logger\"[label=\"logger\"];\n\"state\"[label=\"state\"];\n\"ui\"[label=\"ui\"];\n\"bus\" -> \"config\";\n\"bus\" -> \"logger\";\n\"logger\" -> \"config\";\n\"state\" -> \"bus\";\n\"state\" -> \"config\";\n\"state\" -> \"logger\";\n\"ui\" -> \"bus\";\n\"ui\" -> \"config\";\n\"ui\" -> \"state\";\n}",
        "dot": "digraph g {\nrankdir=\"RL\";\n\"bus\"[label=\"bus\"];\n\"config\"[label=\"config\"];\n\"logger\"[label=\"logger\"];\n\"state\"[label=\"state\"];\n\"ui\"[label=\"ui\"];\n\"bus\" -> \"config\";\n\"bus\" -> \"logger\";\n\"logger\" -> \"config\";\n\"state\" -> \"bus\";\n\"state\" -> \"config\";\n\"state\" -> \"logger\";\n\"ui\" -> \"bus\";\n\"ui\" -> \"config\";\n\"ui\" -> \"state\";\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Title: g Pages: 1 -->\n<svg width=\"460pt\" height=\"110pt\"\n viewBox=\"0.00 0.00 460.29 110.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 106)\">\n<title>g</title>\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-106 456.29,-106 456.29,4 -4,4\"/>\n<!-- bus -->\n<g id=\"node1\" class=\"node\">\n<title>bus</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"241.83\" cy=\"-84\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"241.83\" y=\"-79.8\" font-family=\"Times,serif\" font-size=\"14.00\">bus</text>\n</g>\n<!-- config -->\n<g id=\"node2\" class=\"node\">\n<title>config</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"35.71\" cy=\"-23\" rx=\"35.71\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"35.71\" y=\"-18.8\" font-family=\"Times,serif\" font-size=\"14.00\">config</text>\n</g>\n<!-- bus&#45;&gt;config -->\n<g id=\"edge1\" class=\"edge\">\n<title>bus&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M214.64,-85.83C187.1,-86.86 142.9,-85.91 107.41,-73 90.77,-66.94 74.47,-55.87 61.72,-45.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"64.43,-42.55 54.5,-38.84 59.95,-47.93 64.43,-42.55\"/>\n</g>\n<!-- logger -->\n<g id=\"node3\" class=\"node\">\n<title>logger</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"143.12\" cy=\"-46\" rx=\"35.71\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"143.12\" y=\"-41.8\" font-family=\"Times,serif\" font-size=\"14.00\">logger</text>\n</g>\n<!-- bus&#45;&gt;logger -->\n<g id=\"edge2\" class=\"edge\">\n<title>bus&#45;&gt;logger</title>\n<path fill=\"none\" stroke=\"black\" d=\"M217.91,-74.99C207.18,-70.77 194.1,-65.64 181.96,-60.86\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"183.64,-57.37 173.05,-56.97 181.08,-63.89 183.64,-57.37\"/>\n</g>\n<!-- logger&#45;&gt;config -->\n<g id=\"edge3\" class=\"edge\">\n<title>logger&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M109.92,-38.97C100.41,-36.89 89.83,-34.59 79.75,-32.39\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"80.59,-28.77 70.07,-30.06 79.1,-35.61 80.59,-28.77\"/>\n</g>\n<!-- state -->\n<g id=\"node4\" class=\"node\">\n<title>state</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"333.56\" cy=\"-38\" rx=\"28.73\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"333.56\" y=\"-33.8\" font-family=\"Times,serif\" font-size=\"14.00\">state</text>\n</g>\n<!-- state&#45;&gt;bus -->\n<g id=\"edge4\" class=\"edge\">\n<title>state&#45;&gt;bus</title>\n<path fill=\"none\" stroke=\"black\" d=\"M310.84,-49.13C299.62,-54.88 285.75,-61.99 273.47,-68.29\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.34,-65.45 265.04,-73.12 275.54,-71.68 272.34,-65.45\"/>\n</g>\n<!-- state&#45;&gt;config -->\n<g id=\"edge5\" class=\"edge\">\n<title>state&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M305.44,-33.62C274.8,-28.91 223.39,-21.74 178.83,-19 147.15,-17.05 139.14,-18.1 107.41,-19 99.3,-19.23 90.66,-19.6 82.31,-20.04\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"82.37,-16.58 72.58,-20.63 82.75,-23.57 82.37,-16.58\"/>\n</g>\n<!-- state&#45;&gt;logger -->\n<g id=\"edge6\" class=\"edge\">\n<title>state&#45;&gt;logger</title>\n<path fill=\"none\" stroke=\"black\" d=\"M304.76,-39.18C274.51,-40.46 225.68,-42.53 189.79,-44.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"189.95,-40.59 180.1,-44.51 190.24,-47.58 189.95,-40.59\"/>\n</g>\n<!-- ui -->\n<g id=\"node5\" class=\"node\">\n<title>ui</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"425.29\" cy=\"-38\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"425.29\" y=\"-33.8\" font-family=\"Times,serif\" font-size=\"14.00\">ui</text>\n</g>\n<!-- ui&#45;&gt;bus -->\n<g id=\"edge7\" class=\"edge\">\n<title>ui&#45;&gt;bus</title>\n<path fill=\"none\" stroke=\"black\" d=\"M403.27,-48.74C391.49,-54.35 376.38,-60.88 362.29,-65 335.15,-72.93 303.5,-77.77 279.6,-80.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"279.43,-77.19 269.88,-81.77 280.2,-84.15 279.43,-77.19\"/>\n</g>\n<!-- ui&#45;&gt;config -->\n<g id=\"edge8\" class=\"edge\">\n<title>ui&#45;&gt;config</title>\n<path fill=\"none\" stroke=\"black\" d=\"M403.77,-26.51C392.02,-20.6 376.78,-14.01 362.29,-11 263.04,9.68 143.17,-4.48 80.2,-14.83\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.77,-11.52 70.49,-16.64 80.94,-18.43 79.77,-11.52\"/>\n</g>\n<!-- ui&#45;&gt;state -->\n<g id=\"edge9\" class=\"edge\">\n<title>ui&#45;&gt;state</title>\n<path fill=\"none\" stroke=\"black\" d=\"M397.86,-38C390.25,-38 381.79,-38 373.59,-38\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"373.68,-34.5 363.68,-38 373.68,-41.5 373.68,-34.5\"/>\n</g>\n</g>\n</svg>\n"
      },
      "after": "d8095a8ea55b96fa",
      "attribution": {
        "page": "rstream-system-bus",
        "site": "localhost:3000"
      },
      "date": 1713426192906
    },
    {
      "item": {
        "type": "factory",
        "id": "35016eeb72b45d4d"
      },
      "id": "35016eeb72b45d4d",
      "type": "add",
      "after": "b4db31dc86cc7809",
      "date": 1713426291479
    },
    {
      "type": "edit",
      "id": "35016eeb72b45d4d",
      "item": {
        "type": "pagefold",
        "id": "35016eeb72b45d4d",
        "text": "~"
      },
      "date": 1713426295522
    },
    {
      "id": "35016eeb72b45d4d",
      "type": "move",
      "order": [
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa",
        "09e5fd7084ff9ae0",
        "35016eeb72b45d4d",
        "0bdd8233c48807d4",
        "b4db31dc86cc7809"
      ],
      "date": 1713426319995
    },
    {
      "item": {
        "type": "factory",
        "id": "7c1cd355f40a10e6"
      },
      "id": "7c1cd355f40a10e6",
      "type": "add",
      "after": "b4db31dc86cc7809",
      "date": 1713426435208
    },
    {
      "type": "edit",
      "id": "7c1cd355f40a10e6",
      "item": {
        "type": "paragraph",
        "id": "7c1cd355f40a10e6",
        "text": "a Dictionary('__jsclass__'->'AsyncFunction' '__registryid__'->'9fd97ef0-fd56-11ee-9e84-f1a109a8a823' )"
      },
      "date": 1713426437164
    },
    {
      "type": "edit",
      "id": "7c1cd355f40a10e6",
      "item": {
        "type": "paragraph",
        "id": "7c1cd355f40a10e6",
        "text": "a [[Dictionary]]('__jsclass__'->'AsyncFunction' '__registryid__'->'9fd97ef0-fd56-11ee-9e84-f1a109a8a823' )"
      },
      "date": 1713426450899
    },
    {
      "type": "add",
      "id": "06634417b4e36848",
      "item": {
        "type": "paragraph",
        "id": "06634417b4e36848",
        "text": "NB. What [[Registry]]?"
      },
      "after": "7c1cd355f40a10e6",
      "date": 1713426483008
    },
    {
      "item": {
        "type": "factory",
        "id": "d85339ce5ea3b75e"
      },
      "id": "d85339ce5ea3b75e",
      "type": "add",
      "after": "06634417b4e36848",
      "date": 1713427691866
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a collision.\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid collisions.\n\nI notice that {{gtMethod:PBDeserializer>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:PharoLinkRegistry>>#jsonSerializationFor:}}"
      },
      "date": 1713427694656
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a collision.\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]s.\n\nI notice that {{gtMethod:PBDeserializer>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:PharoLinkRegistry>>#jsonSerializationFor:}}"
      },
      "date": 1713427726078
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a [[Collision]].\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]]s.\n\nI notice that {{gtMethod:PBDeserializer>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:PharoLinkRegistry>>#jsonSerializationFor:}}"
      },
      "date": 1713427743280
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a [[Collision]].\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]]s.\n\nI notice that {{gtMethod:PBDeserializer>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:[[PharoLinkRegistry]]>>#jsonSerializationFor:}}"
      },
      "date": 1713429319724
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a [[Collision]].\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]]s.\n\nI ([[Sarino Suon]]) notice that {{gtMethod:PBDeserializer>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:[[PharoLinkRegistry]]>>#jsonSerializationFor:}}"
      },
      "date": 1713429574673
    },
    {
      "type": "edit",
      "id": "d85339ce5ea3b75e",
      "item": {
        "type": "paragraph",
        "id": "d85339ce5ea3b75e",
        "text": "GT allows mirroring a Python object through a subclass of PBProxyObject. It should implement method pythonClass to return the name of the class as a string or a symbol.\n\nUnfortunately, if different libraries have a class with the same name, there will be a [[Collision]].\n\nCan we store the fully-qualified class name, e.g. 'pandas.core.frame.DataFrame' in the metadata? This will avoid [[Collision]]s.\n\nI ([[Sarino Suon]]) notice that {{gtMethod:[[PBDeserializer]]>>#buildProxyFor:}} looks for #class in rawObject, which I assume is a meta dictionary. And I think that dictionary is put together here: {{gtMethod:[[PharoLinkRegistry]]>>#jsonSerializationFor:}}"
      },
      "date": 1713429604037
    },
    {
      "item": {
        "type": "factory",
        "id": "4ad1edcd5c6f2149"
      },
      "id": "4ad1edcd5c6f2149",
      "type": "add",
      "after": "d85339ce5ea3b75e",
      "date": 1713430340895
    },
    {
      "type": "edit",
      "id": "4ad1edcd5c6f2149",
      "item": {
        "type": "paragraph",
        "id": "4ad1edcd5c6f2149",
        "text": "⇒ [[JSLink]]"
      },
      "date": 1713430352325
    },
    {
      "type": "add",
      "id": "6a058c8df0761a06",
      "item": {
        "type": "paragraph",
        "id": "6a058c8df0761a06",
        "text": "⇒ [[ZnManagingMultithreadedServer]]"
      },
      "after": "4ad1edcd5c6f2149",
      "date": 1713430892966
    },
    {
      "item": {
        "type": "factory",
        "id": "33161c86f8511647"
      },
      "id": "33161c86f8511647",
      "type": "add",
      "after": "6a058c8df0761a06",
      "date": 1713434886702
    },
    {
      "item": {
        "type": "factory",
        "id": "15ea359f51575817"
      },
      "id": "15ea359f51575817",
      "type": "add",
      "after": "33161c86f8511647",
      "date": 1713434892379
    },
    {
      "type": "edit",
      "id": "15ea359f51575817",
      "item": {
        "type": "paragraph",
        "id": "15ea359f51575817",
        "text": "dynamic binding frees object-oriented programmers from having to manually encode message dispatch to different receiver types."
      },
      "date": 1713434898817
    },
    {
      "type": "add",
      "id": "b4dab49e4574a731",
      "item": {
        "type": "paragraph",
        "id": "b4dab49e4574a731",
        "text": "Join Point"
      },
      "after": "15ea359f51575817",
      "date": 1713435706108
    },
    {
      "type": "edit",
      "id": "15ea359f51575817",
      "item": {
        "type": "paragraph",
        "id": "15ea359f51575817",
        "text": "[[Dynamic Binding]] frees object-oriented programmers from having to manually encode message dispatch to different receiver types."
      },
      "date": 1713435715163
    },
    {
      "type": "edit",
      "id": "15ea359f51575817",
      "item": {
        "type": "paragraph",
        "id": "15ea359f51575817",
        "text": "[[Dynamic Binding]] frees object-oriented programmers from having to manually [[encode]] [[Message Dispatch]] to different receiver types."
      },
      "date": 1713435806611
    },
    {
      "item": {
        "type": "factory",
        "id": "d3c1ea710d029159"
      },
      "id": "d3c1ea710d029159",
      "type": "add",
      "after": "b4dab49e4574a731",
      "date": 1713435844275
    },
    {
      "type": "edit",
      "id": "d3c1ea710d029159",
      "item": {
        "type": "reference",
        "id": "d3c1ea710d029159",
        "site": "found.ward.bay.wiki.org",
        "slug": "async-polymorphic-fetch",
        "title": "Async Polymorphic Fetch",
        "text": "Modern client-side javascript offers a function, fetch, which returns a Promise to the response of an http request. I've launched as many as 450 simultaneous fetches and gotten good results. Amazing. Now we generalize fetch to operate as a federation citizen where the history of one page offers good advice as to where to find another. We call this searching \"polymorphism\" because of the similarity to object-oriented polymorphic message dispatch."
      },
      "date": 1713435850764
    },
    {
      "id": "d3c1ea710d029159",
      "type": "move",
      "order": [
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa",
        "09e5fd7084ff9ae0",
        "35016eeb72b45d4d",
        "0bdd8233c48807d4",
        "b4db31dc86cc7809",
        "7c1cd355f40a10e6",
        "06634417b4e36848",
        "d85339ce5ea3b75e",
        "4ad1edcd5c6f2149",
        "6a058c8df0761a06",
        "33161c86f8511647",
        "15ea359f51575817",
        "d3c1ea710d029159",
        "b4dab49e4574a731"
      ],
      "date": 1713435853099
    },
    {
      "type": "edit",
      "id": "d3c1ea710d029159",
      "item": {
        "type": "reference",
        "id": "d3c1ea710d029159",
        "site": "found.ward.bay.wiki.org",
        "slug": "async-polymorphic-fetch",
        "title": "Async Polymorphic Fetch",
        "text": "Modern client-side javascript offers a function, fetch, which returns a Promise to the response of an http request. I (Ward) have launched as many as 450 simultaneous fetches and gotten good results. Amazing. Now we generalize fetch to operate as a federation citizen where the history of one page offers good advice as to where to find another. We call this searching \"polymorphism\" because of the similarity to object-oriented polymorphic message dispatch."
      },
      "date": 1713435869306
    },
    {
      "type": "edit",
      "id": "d3c1ea710d029159",
      "item": {
        "type": "reference",
        "id": "d3c1ea710d029159",
        "site": "found.ward.bay.wiki.org",
        "slug": "async-polymorphic-fetch",
        "title": "Async Polymorphic Fetch",
        "text": "Modern client-side javascript offers a function, fetch, which returns a Promise to the response of an http request. I (Ward) have launched as many as 450 simultaneous fetches and gotten good results. Amazing. Now we generalize fetch to operate as a federation citizen where the history of one page offers good advice as to where to find another. We call this searching \"[[Polymorphism]]\" because of the similarity to object-oriented polymorphic [[Message Dispatch]]."
      },
      "date": 1713435917545
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713439063221
    },
    {
      "type": "edit",
      "id": "33161c86f8511647",
      "item": {
        "type": "pagefold",
        "id": "33161c86f8511647",
        "text": "~"
      },
      "date": 1713439069457
    },
    {
      "type": "edit",
      "id": "b4dab49e4574a731",
      "item": {
        "type": "paragraph",
        "id": "b4dab49e4574a731",
        "text": "[[Join Point]]"
      },
      "date": 1713439082441
    },
    {
      "item": {
        "type": "factory",
        "id": "6987ce8957063919"
      },
      "id": "6987ce8957063919",
      "type": "add",
      "after": "b4dab49e4574a731",
      "date": 1713439787559
    },
    {
      "type": "edit",
      "id": "6987ce8957063919",
      "item": {
        "type": "pagefold",
        "id": "6987ce8957063919",
        "text": "~"
      },
      "date": 1713439790488
    },
    {
      "item": {
        "type": "factory",
        "id": "fe69ab1401d9de75"
      },
      "id": "fe69ab1401d9de75",
      "type": "add",
      "after": "6987ce8957063919",
      "date": 1713439792790
    },
    {
      "type": "edit",
      "id": "fe69ab1401d9de75",
      "item": {
        "type": "paragraph",
        "id": "fe69ab1401d9de75",
        "text": "[[hiccup-svg]]"
      },
      "date": 1713439797898
    },
    {
      "type": "add",
      "id": "2c76e9af22dc32e3",
      "item": {
        "type": "paragraph",
        "id": "2c76e9af22dc32e3",
        "text": "[https://github.com/thi-ng/umbrella/tree/develop/packages/hiccup-svg#important github]"
      },
      "after": "fe69ab1401d9de75",
      "date": 1713440467992
    },
    {
      "id": "2c76e9af22dc32e3",
      "type": "remove",
      "removedTo": {
        "page": "hiccup-svg"
      },
      "date": 1713440471481
    },
    {
      "item": {
        "type": "factory",
        "id": "1ab68aa2c17d72ad"
      },
      "id": "1ab68aa2c17d72ad",
      "type": "add",
      "after": "fe69ab1401d9de75",
      "date": 1713455244507
    },
    {
      "type": "edit",
      "id": "1ab68aa2c17d72ad",
      "item": {
        "type": "reference",
        "id": "1ab68aa2c17d72ad",
        "site": "localhost:3000",
        "slug": "playground-rdom",
        "title": "Playground: rdom",
        "text": "dennemark via [https://github.com/thi-ng/umbrella/discussions/456#discussioncomment-8690325 github]: […] the click counter on rdom [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom github] could be made much simpler, but I guess it is only used as an example to show the inputTrigger function?"
      },
      "date": 1713455247593
    },
    {
      "id": "1ab68aa2c17d72ad",
      "type": "move",
      "order": [
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa",
        "09e5fd7084ff9ae0",
        "1ab68aa2c17d72ad",
        "35016eeb72b45d4d",
        "0bdd8233c48807d4",
        "b4db31dc86cc7809",
        "7c1cd355f40a10e6",
        "06634417b4e36848",
        "d85339ce5ea3b75e",
        "4ad1edcd5c6f2149",
        "6a058c8df0761a06",
        "33161c86f8511647",
        "15ea359f51575817",
        "d3c1ea710d029159",
        "b4dab49e4574a731",
        "6987ce8957063919",
        "fe69ab1401d9de75"
      ],
      "date": 1713455253416
    },
    {
      "type": "add",
      "id": "9fb57401bc7f4696",
      "item": {
        "type": "paragraph",
        "id": "9fb57401bc7f4696",
        "text": "create hiccup-svg via convertTree."
      },
      "after": "ec8b0f776fccacc2",
      "date": 1713455934204
    },
    {
      "id": "9fb57401bc7f4696",
      "type": "move",
      "order": [
        "ec8b0f776fccacc2",
        "d8095a8ea55b96fa",
        "09e5fd7084ff9ae0",
        "1ab68aa2c17d72ad",
        "9fb57401bc7f4696",
        "35016eeb72b45d4d",
        "0bdd8233c48807d4",
        "b4db31dc86cc7809",
        "7c1cd355f40a10e6",
        "06634417b4e36848",
        "d85339ce5ea3b75e",
        "4ad1edcd5c6f2149",
        "6a058c8df0761a06",
        "33161c86f8511647",
        "15ea359f51575817",
        "d3c1ea710d029159",
        "b4dab49e4574a731",
        "6987ce8957063919",
        "fe69ab1401d9de75"
      ],
      "date": 1713455936997
    },
    {
      "type": "edit",
      "id": "9fb57401bc7f4696",
      "item": {
        "type": "paragraph",
        "id": "9fb57401bc7f4696",
        "text": "– create [[hiccup-svg]] via convertTree"
      },
      "date": 1713455951249
    },
    {
      "type": "edit",
      "id": "9fb57401bc7f4696",
      "item": {
        "type": "paragraph",
        "id": "9fb57401bc7f4696",
        "text": "– [[geom]]: create [[hiccup-svg]] via convertTree"
      },
      "date": 1713456000555
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713513885737
    }
  ]
}