{
  "title": "JSON",
  "story": [
    {
      "type": "paragraph",
      "id": "26d8949921fb77ea",
      "text": "short for JavaScript Object Notation is a popular data exchange format"
    },
    {
      "type": "paragraph",
      "id": "7ad9db0d37f6745a",
      "text": "It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages."
    },
    {
      "type": "paragraph",
      "id": "f355dd8bbb4c1b2b",
      "text": "[[Backup]] brought us here"
    },
    {
      "type": "markdown",
      "id": "de27c0371d3eeffb",
      "text": "> An export.json file can be constructed from pages backed up with rsync using the [[jq]] utility."
    },
    {
      "type": "pagefold",
      "id": "fa30149e3d91095d",
      "text": "STON"
    },
    {
      "type": "markdown",
      "id": "4b6b33518bf7d612",
      "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to [[encode]] arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation]] (STON)"
    },
    {
      "type": "pagefold",
      "id": "32dae6a2a31602ad",
      "text": "."
    },
    {
      "type": "reference",
      "id": "1bc5b46b22c5ffbc",
      "site": "c0de.academy",
      "slug": "json",
      "title": "JSON",
      "text": "In [[computing]], __JavaScript Object Notation__ (__JSON__)  is an [[open standard]] [[file format]] that uses [[Human-readable medium]] text to transmit data objects consisting of [[attribute–value pair]]s and [[array data type]]s (or any other [[Serialization ]] value). It is a very common data format used for [[Asynchronous I/O]] browser–server communication, including as a replacement for [[XML]] in some [[Ajax (programming)]]-style systems - [https://en.wikipedia.org/wiki/JSON wikipedia]"
    },
    {
      "type": "pagefold",
      "id": "38b086d31f42a206",
      "text": "NeoJSON"
    },
    {
      "type": "paragraph",
      "id": "2529b7c8a425817d",
      "text": "NeoJSON is an elegant and efficient standalone Smalltalk library to read and write JSON converting to and from Smalltalk objects. The library is developed and actively maintained by [[Sven Van Caekenberghe]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "JSON",
        "story": []
      },
      "date": 1626528602528
    },
    {
      "item": {
        "type": "factory",
        "id": "26d8949921fb77ea"
      },
      "id": "26d8949921fb77ea",
      "type": "add",
      "date": 1626528618474
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "[[Backup]] brought us here"
      },
      "date": 1626528631396
    },
    {
      "type": "add",
      "id": "f41f4bf1e59cc627",
      "item": {
        "type": "paragraph",
        "id": "f41f4bf1e59cc627",
        "text": "> An export.json file can be constructed from pages backed up with rsync using the jq utility."
      },
      "after": "26d8949921fb77ea",
      "date": 1626528649311
    },
    {
      "item": {
        "type": "factory",
        "id": "de27c0371d3eeffb"
      },
      "id": "de27c0371d3eeffb",
      "type": "add",
      "after": "f41f4bf1e59cc627",
      "date": 1626528651519
    },
    {
      "type": "edit",
      "id": "de27c0371d3eeffb",
      "item": {
        "type": "markdown",
        "id": "de27c0371d3eeffb",
        "text": "> An export.json file can be constructed from pages backed up with rsync using the jq utility."
      },
      "date": 1626528658578
    },
    {
      "type": "remove",
      "id": "f41f4bf1e59cc627",
      "date": 1626528662401
    },
    {
      "type": "edit",
      "id": "de27c0371d3eeffb",
      "item": {
        "type": "markdown",
        "id": "de27c0371d3eeffb",
        "text": "> An export.json file can be constructed from pages backed up with rsync using the [[jq]] utility."
      },
      "date": 1626528733627
    },
    {
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to encode arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation (STON)]]"
      },
      "id": "4b6b33518bf7d612",
      "type": "add",
      "after": "de27c0371d3eeffb",
      "date": 1628758151685
    },
    {
      "type": "edit",
      "id": "4b6b33518bf7d612",
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to encode arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation (STON)]]"
      },
      "date": 1628758155903
    },
    {
      "type": "edit",
      "id": "4b6b33518bf7d612",
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to encode arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation (STON)]]"
      },
      "date": 1628758185938
    },
    {
      "item": {
        "type": "pagefold",
        "id": "fa30149e3d91095d",
        "text": "STON"
      },
      "id": "fa30149e3d91095d",
      "type": "add",
      "after": "4b6b33518bf7d612",
      "date": 1628758219068
    },
    {
      "type": "edit",
      "id": "fa30149e3d91095d",
      "item": {
        "type": "pagefold",
        "id": "fa30149e3d91095d",
        "text": "STON"
      },
      "date": 1628758222872
    },
    {
      "id": "fa30149e3d91095d",
      "type": "move",
      "order": [
        "26d8949921fb77ea",
        "de27c0371d3eeffb",
        "fa30149e3d91095d",
        "4b6b33518bf7d612"
      ],
      "date": 1628758225551
    },
    {
      "type": "edit",
      "id": "4b6b33518bf7d612",
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to encode arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation (STON)]]"
      },
      "date": 1628758250937
    },
    {
      "type": "fork",
      "date": 1628758254338
    },
    {
      "item": {
        "type": "factory",
        "id": "32dae6a2a31602ad"
      },
      "id": "32dae6a2a31602ad",
      "type": "add",
      "after": "4b6b33518bf7d612",
      "date": 1628758255664
    },
    {
      "type": "edit",
      "id": "32dae6a2a31602ad",
      "item": {
        "type": "pagefold",
        "id": "32dae6a2a31602ad",
        "text": "."
      },
      "date": 1628758258836
    },
    {
      "item": {
        "type": "factory",
        "id": "1bc5b46b22c5ffbc"
      },
      "id": "1bc5b46b22c5ffbc",
      "type": "add",
      "after": "32dae6a2a31602ad",
      "date": 1637918655250
    },
    {
      "type": "edit",
      "id": "1bc5b46b22c5ffbc",
      "item": {
        "type": "reference",
        "id": "1bc5b46b22c5ffbc",
        "site": "c0de.academy",
        "slug": "json",
        "title": "JSON",
        "text": "In [[computing]], __JavaScript Object Notation__ (__JSON__)  is an [[open standard]] [[file format]] that uses [[Human-readable medium]] text to transmit data objects consisting of [[attribute–value pair]]s and [[array data type]]s (or any other [[Serialization ]] value). It is a very common [[data]] format used for [[Asynchronous I/O]] browser–server communication, including as a replacement for [[XML]] in some [[Ajax (programming)]]-style systems - [https://en.wikipedia.org/wiki/JSON wikipedia]"
      },
      "date": 1637918658903
    },
    {
      "type": "edit",
      "id": "4b6b33518bf7d612",
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to [[encode]] arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation (STON)]]"
      },
      "date": 1637918712983
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "JSON is a lightweight text-based open standard designed for human-readable data interchange. It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages. "
      },
      "date": 1650896508904
    },
    {
      "type": "add",
      "id": "f355dd8bbb4c1b2b",
      "item": {
        "type": "paragraph",
        "id": "f355dd8bbb4c1b2b",
        "text": "[[Backup]] brought us here"
      },
      "after": "26d8949921fb77ea",
      "date": 1650896509493
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "[[JSON]] is a lightweight text-based open standard designed for human-readable data interchange. It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages. "
      },
      "date": 1650896518056
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "[[JSON]] (JavaScript Object Notation) is a popular data-interchange format. It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages. "
      },
      "date": 1656085260605
    },
    {
      "item": {
        "type": "factory",
        "id": "38b086d31f42a206"
      },
      "id": "38b086d31f42a206",
      "type": "add",
      "after": "1bc5b46b22c5ffbc",
      "date": 1656085305726
    },
    {
      "type": "edit",
      "id": "38b086d31f42a206",
      "item": {
        "type": "pagefold",
        "id": "38b086d31f42a206",
        "text": "NeoJSON"
      },
      "date": 1656085309851
    },
    {
      "item": {
        "type": "factory",
        "id": "2529b7c8a425817d"
      },
      "id": "2529b7c8a425817d",
      "type": "add",
      "after": "38b086d31f42a206",
      "date": 1656085317972
    },
    {
      "type": "edit",
      "id": "2529b7c8a425817d",
      "item": {
        "type": "paragraph",
        "id": "2529b7c8a425817d",
        "text": "NeoJSON is an elegant and efficient standalone Smalltalk library to read and write JSON converting to and from Smalltalk objects. The library is developed and actively maintained by [[Sven Van Caekenberghe]]."
      },
      "date": 1656085326246
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "JSON (JavaScript Object Notation) is a popular data-interchange format. It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages. "
      },
      "date": 1661611457769
    },
    {
      "type": "edit",
      "id": "1bc5b46b22c5ffbc",
      "item": {
        "type": "reference",
        "id": "1bc5b46b22c5ffbc",
        "site": "c0de.academy",
        "slug": "json",
        "title": "JSON",
        "text": "In [[computing]], __JavaScript Object Notation__ (__JSON__)  is an [[open standard]] [[file format]] that uses [[Human-readable medium]] text to transmit data objects consisting of [[attribute–value pair]]s and [[array data type]]s (or any other [[Serialization ]] value). It is a very common data format used for [[Asynchronous I/O]] browser–server communication, including as a replacement for [[XML]] in some [[Ajax (programming)]]-style systems - [https://en.wikipedia.org/wiki/JSON wikipedia]"
      },
      "date": 1661611537862
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "(JavaScript Object Notation) is a popular data-interchange format. It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages. "
      },
      "date": 1692961727435
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "(JavaScript Object Notation) is a popular data-interchange format."
      },
      "date": 1692961740846
    },
    {
      "type": "add",
      "id": "7ad9db0d37f6745a",
      "item": {
        "type": "paragraph",
        "id": "7ad9db0d37f6745a",
        "text": "It was derived from the JavaScript scripting language for representing simple data structures and associative arrays, called objects. Despite its relationship to JavaScript, it is language independent, with parsers available for many languages."
      },
      "after": "26d8949921fb77ea",
      "date": 1692961741327
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "JavaScript Object Notation is a popular data-interchange format."
      },
      "date": 1692961763161
    },
    {
      "type": "edit",
      "id": "4b6b33518bf7d612",
      "item": {
        "type": "markdown",
        "id": "4b6b33518bf7d612",
        "text": "JSON seems to have hit a sweet spot: it is very simple, yet just powerful enough to represent some of the most common data structures across many different languages. JSON is very readable and relatively easy to type.\n\nHowever, JSON knows only about lists and maps. There is no concept of object types or classes. This means that it is not easy to [[encode]] arbitrary objects, and some of the possible solutions are quite verbose (Encoding the type or class as a property and/or adding an indirection to encode the object's contents). -- [[Smalltalk Object Notation]] (STON)"
      },
      "date": 1703386998314
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "short for JavaScript Object Notation is a popular data-interchange format"
      },
      "date": 1703387328283
    },
    {
      "type": "edit",
      "id": "26d8949921fb77ea",
      "item": {
        "type": "paragraph",
        "id": "26d8949921fb77ea",
        "text": "short for JavaScript Object Notation is a popular data exchange format"
      },
      "date": 1703387355486
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704633837378
    }
  ]
}