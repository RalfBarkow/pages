{
  "title": "Breadth-First Search",
  "story": [
    {
      "type": "code",
      "id": "526ce074a4834b79",
      "text": "bfs := AIBFS new\n\t\t\tnodes: #( 1 2 3 4);\n\t\t\tedges: { (1 -> 4) . (1 -> 2) . (2 -> 3) . (3 -> 4)} from: #key to: #value;\n\t\t\tyourself.\nshortestPath := bfs runFrom: 1 to: 4"
    },
    {
      "type": "paragraph",
      "id": "e3fe5f4a1523f299",
      "text": "See [[AIGraphAlgorithm]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Breadth-First Search",
        "story": []
      },
      "date": 1708258254030
    },
    {
      "type": "edit",
      "id": "7c7895c32e8b5149",
      "item": {
        "type": "paragraph",
        "id": "7c7895c32e8b5149",
        "text": "Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structures. It starts at the tree root (or some arbitrary node of a graph, sometimes referred to as a `search key') and explores the neighbor nodes first, before moving to the next level neighbours. (source: Wikipedia)\n\nThe `queue` instance variable uses a LinkedList. This is because the linked list has constant access times. The `removeFist`, `#add:`, `#addLast:` takes a constant time to operate.\n\nSee my test class examples of how to use me, but in a nutshell:"
      },
      "date": 1708258257345
    },
    {
      "item": {
        "type": "factory",
        "id": "526ce074a4834b79"
      },
      "id": "526ce074a4834b79",
      "type": "add",
      "after": "7c7895c32e8b5149",
      "date": 1708258263449
    },
    {
      "type": "edit",
      "id": "526ce074a4834b79",
      "item": {
        "type": "code",
        "id": "526ce074a4834b79",
        "text": "bfs := AIBFS new\n\t\t\tnodes: #( 1 2 3 4);\n\t\t\tedges: { (1 -> 4) . (1 -> 2) . (2 -> 3) . (3 -> 4)} from: #key to: #value;\n\t\t\tyourself.\nshortestPath := bfs runFrom: 1 to: 4"
      },
      "date": 1708258276027
    },
    {
      "item": {
        "type": "factory",
        "id": "e3fe5f4a1523f299"
      },
      "id": "e3fe5f4a1523f299",
      "type": "add",
      "after": "526ce074a4834b79",
      "date": 1708258325640
    },
    {
      "type": "edit",
      "id": "e3fe5f4a1523f299",
      "item": {
        "type": "paragraph",
        "id": "e3fe5f4a1523f299",
        "text": "See [[AIGraphAlgorithm]]"
      },
      "date": 1708258331540
    }
  ]
}