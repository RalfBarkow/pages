{
  "title": "Category Structural Patterns",
  "story": [
    {
      "type": "html",
      "text": "Press the title to see all [[Design Patterns]] that have been categorized as [[Structural Patterns]].  This is the [[Gang Of Four]] category of patterns that use various language mechanisms for structuring code and assembling objects.",
      "id": "02b9fdda654409382182f45ea508faf8"
    },
    {
      "type": "html",
      "text": "\nIt is suggested that structural patterns that are added to the wiki or are currently uncategorized should include a reference to this page.",
      "id": "eb2ca4452f61c4de4e64a4c4fd1b1d9f"
    },
    {
      "type": "html",
      "text": "\nA page that references this page will take a few days before being added to this listing.",
      "id": "b1efafd198ebf6ffb23ad57ee7207981"
    },
    {
      "type": "html",
      "text": "\nIf you don't want to click the title above, here's a manually-edited list of structural patterns.  The following are [[Gang Of Four]] patterns",
      "id": "fd16fbac274c4756fb4f614d8e49bde1"
    },
    {
      "type": "html",
      "text": " [[Adapter Pattern]]",
      "id": "59a08db68f2f8c5d3345efbc00d954db"
    },
    {
      "type": "html",
      "text": " [[Bridge Pattern]]",
      "id": "1286cc7756c870aa62acc4a062fe774a"
    },
    {
      "type": "html",
      "text": " [[Composite Pattern]]",
      "id": "500f517adb06cf873157ffb921810ed8"
    },
    {
      "type": "html",
      "text": " [[Decorator Pattern]]",
      "id": "b1b92890f023309a64201c773d5b9723"
    },
    {
      "type": "html",
      "text": " [[Facade Pattern]]",
      "id": "c108a18f97798d7e18264d84a29b0220"
    },
    {
      "type": "html",
      "text": " [[Flyweight Pattern]]",
      "id": "d512537be8b54eaeb6ada58b676d1b7a"
    },
    {
      "type": "html",
      "text": " [[Iterator Pattern]]",
      "id": "c1c9f126a60688e754879449b24bdf0c"
    },
    {
      "type": "html",
      "text": " [[Proxy Pattern]]",
      "id": "cd175bef172f55fba9e00a72afa97648"
    },
    {
      "type": "html",
      "text": " [[Retrofit Interface Pattern]]",
      "id": "6e66c0fa83f6f7d34335804199c753db"
    },
    {
      "type": "html",
      "text": "\nThe following are not in the [[Gang Of Four]] book.",
      "id": "2b6d764bd4cfa95137780e4054314be0"
    },
    {
      "type": "html",
      "text": " [[Bean Pattern]]",
      "id": "1062c8899ef8bf0b1e2aeff50fe57dd2"
    },
    {
      "type": "html",
      "text": " [[Engine Collection Class]]",
      "id": "32c023ebde2239a2cb2d780f5ea97342"
    },
    {
      "type": "html",
      "text": " [[Envelope Letter]]",
      "id": "f3f8d05526e20caacb32cd3854a0fd99"
    },
    {
      "type": "html",
      "text": " [[Externalize The Stack]]",
      "id": "8b188010c25ca3e94b4228959b3eb562"
    },
    {
      "type": "html",
      "text": " [[Protocol Stack]]",
      "id": "8a1d852967c4ac7b03e6343952f94a60"
    },
    {
      "type": "html",
      "text": " [[Tomb Stone]]",
      "id": "5f8125ea74bb3aca8067c7eaf9197d6f"
    },
    {
      "type": "html",
      "text": " [[Weak Reference Pattern]] ([[Weak Pointer]])",
      "id": "0db7c0944bc39dcea0699fe569d60b4c"
    },
    {
      "type": "html",
      "text": " [[Adapter Pipeline]]",
      "id": "f500d51002ed73b1f496f8084ae6512f"
    },
    {
      "type": "html",
      "text": " [[Abstract Server]]",
      "id": "f8f77f75cf95ee4b04be54b6537a2aed"
    },
    {
      "type": "html",
      "text": "(Do we really need to list these as 'GoF patterns' and 'not GoF patterns'??? -- [[Ashod Nakashian]])",
      "id": "5c8c61ade10e647e589b14fbfc441051"
    },
    {
      "type": "html",
      "text": "(Yes. It makes sense to keep the separate as people who are not in the know can learn about how the world has changed and evolved to expose new patterns and protopatterns -- raulrojas)",
      "id": "d0c45d42821504dd779751b800eee86d"
    },
    {
      "type": "html",
      "text": "<i>If Iterator is a pattern, what about Map and Collection? Throwing things into a Map is a common way of dealing with certain types of problems.</i>",
      "id": "12b51148aa977669747bdd75b557f3cb"
    },
    {
      "type": "html",
      "text": "\nAn iterator is itself a solution to a common problem, namely the problem of traversing members of an aggregate object without having to know the internal structures used. Map and Collection are data structures, not solutions to specific problems. However, they can be involved in certain solutions to certain problems; if the problem is common enough and the solution is proven, they (problem+solution) can grow into a pattern.",
      "id": "76b381674b144b86064dc9d4f25c037c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "6952279e9a476480562b34f587b4290c"
    },
    {
      "type": "html",
      "text": "[[Category Category]] [[Category Groups Of Patterns]]",
      "id": "30e7b88994cda37ae244cf38d9cdab1e"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?CategoryStructuralPatterns c2.com]",
      "id": "e6af7d8c78a5616a0530d737a11d9b16"
    }
  ],
  "journal": [
    {
      "date": 1217018337000,
      "id": "c837c2e4b2bf42a4bc5164091a50e2c4",
      "type": "create",
      "item": {
        "title": "Category Structural Patterns",
        "story": [
          {
            "type": "html",
            "text": "Press the title to see all [[Design Patterns]] that have been categorized as [[Structural Patterns]].  This is the [[Gang Of Four]] category of patterns that use various language mechanisms for structuring code and assembling objects.",
            "id": "02b9fdda654409382182f45ea508faf8"
          },
          {
            "type": "html",
            "text": "\nIt is suggested that structural patterns that are added to the wiki or are currently uncategorized should include a reference to this page.",
            "id": "eb2ca4452f61c4de4e64a4c4fd1b1d9f"
          },
          {
            "type": "html",
            "text": "\nA page that references this page will take a few days before being added to this listing.",
            "id": "b1efafd198ebf6ffb23ad57ee7207981"
          },
          {
            "type": "html",
            "text": "\nIf you don't want to click the title above, here's a manually-edited list of structural patterns.  The following are [[Gang Of Four]] patterns",
            "id": "fd16fbac274c4756fb4f614d8e49bde1"
          },
          {
            "type": "html",
            "text": " [[Adapter Pattern]]",
            "id": "59a08db68f2f8c5d3345efbc00d954db"
          },
          {
            "type": "html",
            "text": " [[Bridge Pattern]]",
            "id": "1286cc7756c870aa62acc4a062fe774a"
          },
          {
            "type": "html",
            "text": " [[Composite Pattern]]",
            "id": "500f517adb06cf873157ffb921810ed8"
          },
          {
            "type": "html",
            "text": " [[Decorator Pattern]]",
            "id": "b1b92890f023309a64201c773d5b9723"
          },
          {
            "type": "html",
            "text": " [[Facade Pattern]]",
            "id": "c108a18f97798d7e18264d84a29b0220"
          },
          {
            "type": "html",
            "text": " [[Flyweight Pattern]]",
            "id": "d512537be8b54eaeb6ada58b676d1b7a"
          },
          {
            "type": "html",
            "text": " [[Iterator Pattern]]",
            "id": "c1c9f126a60688e754879449b24bdf0c"
          },
          {
            "type": "html",
            "text": " [[Proxy Pattern]]",
            "id": "cd175bef172f55fba9e00a72afa97648"
          },
          {
            "type": "html",
            "text": " [[Retrofit Interface Pattern]]",
            "id": "6e66c0fa83f6f7d34335804199c753db"
          },
          {
            "type": "html",
            "text": "\nThe following are not in the [[Gang Of Four]] book.",
            "id": "2b6d764bd4cfa95137780e4054314be0"
          },
          {
            "type": "html",
            "text": " [[Bean Pattern]]",
            "id": "1062c8899ef8bf0b1e2aeff50fe57dd2"
          },
          {
            "type": "html",
            "text": " [[Engine Collection Class]]",
            "id": "32c023ebde2239a2cb2d780f5ea97342"
          },
          {
            "type": "html",
            "text": " [[Envelope Letter]]",
            "id": "f3f8d05526e20caacb32cd3854a0fd99"
          },
          {
            "type": "html",
            "text": " [[Externalize The Stack]]",
            "id": "8b188010c25ca3e94b4228959b3eb562"
          },
          {
            "type": "html",
            "text": " [[Protocol Stack]]",
            "id": "8a1d852967c4ac7b03e6343952f94a60"
          },
          {
            "type": "html",
            "text": " [[Tomb Stone]]",
            "id": "5f8125ea74bb3aca8067c7eaf9197d6f"
          },
          {
            "type": "html",
            "text": " [[Weak Reference Pattern]] ([[Weak Pointer]])",
            "id": "0db7c0944bc39dcea0699fe569d60b4c"
          },
          {
            "type": "html",
            "text": " [[Adapter Pipeline]]",
            "id": "f500d51002ed73b1f496f8084ae6512f"
          },
          {
            "type": "html",
            "text": " [[Abstract Server]]",
            "id": "f8f77f75cf95ee4b04be54b6537a2aed"
          },
          {
            "type": "html",
            "text": "(Do we really need to list these as 'GoF patterns' and 'not GoF patterns'??? -- [[Ashod Nakashian]])",
            "id": "5c8c61ade10e647e589b14fbfc441051"
          },
          {
            "type": "html",
            "text": "(Yes. It makes sense to keep the separate as people who are not in the know can learn about how the world has changed and evolved to expose new patterns and protopatterns -- raulrojas)",
            "id": "d0c45d42821504dd779751b800eee86d"
          },
          {
            "type": "html",
            "text": "<i>If Iterator is a pattern, what about Map and Collection? Throwing things into a Map is a common way of dealing with certain types of problems.</i>",
            "id": "12b51148aa977669747bdd75b557f3cb"
          },
          {
            "type": "html",
            "text": "\nAn iterator is itself a solution to a common problem, namely the problem of traversing members of an aggregate object without having to know the internal structures used. Map and Collection are data structures, not solutions to specific problems. However, they can be involved in certain solutions to certain problems; if the problem is common enough and the solution is proven, they (problem+solution) can grow into a pattern.",
            "id": "76b381674b144b86064dc9d4f25c037c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "6952279e9a476480562b34f587b4290c"
          },
          {
            "type": "html",
            "text": "[[Category Category]] [[Category Groups Of Patterns]]",
            "id": "30e7b88994cda37ae244cf38d9cdab1e"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?CategoryStructuralPatterns c2.com]",
            "id": "e6af7d8c78a5616a0530d737a11d9b16"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "pattern.sfw.c2.com",
      "date": 1710351951097
    }
  ]
}