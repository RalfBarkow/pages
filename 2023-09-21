{
  "title": "2023-09-21",
  "story": [
    {
      "type": "paragraph",
      "id": "aa06f219e7b51dab",
      "text": "⇒ [[Branching]] ⇒ [[Story Telling]] ⇒ [[Plexus]]: an interactive story telling system based on the small-world networks model, [no date]. Online. [Accessed 21 September 2023]. Available from: http://www.generativeart.com/on/cic/papers2005/13.francescabertacchini.htm"
    },
    {
      "type": "image",
      "id": "db9084bf18d8c9d3",
      "text": "Figure 1. Architecture of the interactive storytelling system.",
      "size": "wide",
      "width": 418,
      "height": 321,
      "url": "/assets/plugins/image/b3707a78ba202563c233535ecb4dc41b.jpg"
    },
    {
      "type": "paragraph",
      "id": "633d30a7c41d6aa7",
      "text": "⇒ [[learn]] ⇒ [[Learn to Parse]] ⇒ [[parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression [https://github.com/RalfBarkow/vite-elm-dojo/commit/b26f776c8e77c5e50dfdb33724321d3878425abe commit]"
    },
    {
      "type": "image",
      "id": "baeaee634fe343c8",
      "text": "Tokenize input, pare and show expression",
      "size": "wide",
      "width": 418,
      "height": 324,
      "url": "/assets/plugins/image/55e54d5bd5545bdb595b78640040d9e9.jpg"
    },
    {
      "type": "paragraph",
      "id": "6b861fd7cadae909",
      "text": "Tokenize and Parse Expression Functions [https://github.com/RalfBarkow/vite-elm-dojo/blob/b26f776c8e77c5e50dfdb33724321d3878425abe/src/Main.elm#L38-L40 code]"
    },
    {
      "type": "code",
      "id": "635170d2bec29660",
      "text": "update : Msg -> Model -> Model\nupdate msg model =\n    case msg of\n        ParseInput input ->\n            let\n                tokens = tokenize input\n                expression = parseExpression tokens\n                result = showExpression expression\n            in\n            { model | input = input, output = result }\n"
    },
    {
      "type": "paragraph",
      "id": "301594a6d906ff80",
      "text": "let tokens tokenize input in model …"
    },
    {
      "type": "paragraph",
      "id": "df2be9fb35d4fb5d",
      "text": "let expression parse expression tokens in model ……"
    },
    {
      "type": "paragraph",
      "id": "659e4dedcf401817",
      "text": "let result show expression …"
    },
    {
      "type": "paragraph",
      "id": "f7a717207ead987a",
      "text": "… [[Smalltalk]] ;-)"
    },
    {
      "type": "paragraph",
      "id": "0fe20d49546ca647",
      "text": "A [[Screen Capture Video]] (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16952929822jbzCP:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix], [https://www.linkedin.com/posts/ralfbarkow_elm-activity-7110573684007804928-x7wm linkedin]"
    },
    {
      "type": "paragraph",
      "id": "09586038907ea7ee",
      "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]] ⇒ [[Knowledge Management]] (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
    },
    {
      "type": "paragraph",
      "id": "91b7c810cdd007ce",
      "text": "[[Why Program Functionally?]] [https://www.linkedin.com/posts/ralfbarkow_elm-activity-7110549837040734208-i4KL?utm_source=share&utm_medium=member_desktop post]"
    },
    {
      "type": "reference",
      "id": "ef66758ffbd84fe3",
      "site": "de.dreyeck.ch",
      "slug": "warum-funktional-programmieren",
      "title": "Warum funktional programmieren?",
      "text": "Ein klare Definition was man unter funktionaler Programmierung versteht, gibt es nicht. Inzwischen bieten viele Programmiersprachen die Möglichkeit einzelne Aspekte der funktionalen Programmierung umzusetzen. Um die Vorzüge der funktionalen Programmierung zu erleben, ist es aber von Vorteil eine Sprache zu nutzen, die das funktionale Programmierparadigma sehr sauber umsetzt. Eine dieser Sprachen ist Elm. [https://dev.inf-schule.de/deklarativ/fp_elm/vorwort/warumfunktional inf-schule.de]\n"
    },
    {
      "type": "reference",
      "id": "3516a628c95f83af",
      "site": "wiki.ralfbarkow.ch",
      "slug": "pad",
      "title": "Pad",
      "text": "TPad Class Reference [https://root.cern.ch/doc/master/classTPad.html page]"
    },
    {
      "type": "paragraph",
      "id": "993c88a5a8db5ebf",
      "text": "⇒ [[Parser Extras]] ⇒ [[Parser Parser Combinators for Program Transformation]]"
    },
    {
      "type": "pagefold",
      "id": "33dc5f1dcf7a7056",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "17b83ab8197aab0e",
      "text": "⇒ [[Data Model]] ⇒  The [[CMS]] Event Data Model (EDM) is centered around the concept of an Event. Physically, an [[Event]] is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings. [https://cms-opendata-guide.web.cern.ch/cmssw/cmsswdatamodel/ page]"
    },
    {
      "type": "paragraph",
      "id": "d3086934625b07be",
      "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] ⇒ [[Deno]] now integrated with [[Jupyter Notebook]]s in support of data science with visualization in, wait for it, [[D3]].\n[https://deno.com/blog/v1.37#jupyter-notebook-integration page]"
    },
    {
      "type": "markdown",
      "id": "a29f7773e111dc8c",
      "text": "> ROOT comes with an incredible C++ interpreter, ideal for fast prototyping. Don’t like C++? ROOT integrates super-smoothly with Python thanks to its unique dynamic and powerful Python ⇄ C++ binding. Or what about using ROOT in a Jupyter notebook? [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page]"
    },
    {
      "type": "reference",
      "id": "b261df031407d1db",
      "site": "martech.dojo.fed.wiki",
      "slug": "infranodus",
      "title": "InfraNodus",
      "text": "Get an overview of any discourse, reveal the blind spots, enhance your perspective. [https://infranodus.com/ site]"
    },
    {
      "type": "reference",
      "id": "95191c8a94f18710",
      "site": "viki.wiki",
      "slug": "web-page-dom",
      "title": "Web Page Dom",
      "text": "Wiki renders into the dom as a side-scrolling lineup of wiki pages from various sources and a stationary web page footer with status information about the origin site and the neighborhood reached from it."
    },
    {
      "type": "image",
      "id": "cc921581dcfd5510",
      "text": "Uploaded image",
      "size": "wide",
      "width": 420,
      "height": 273,
      "url": "/assets/plugins/image/f4d7b0118312a20c56701f91babba86d.jpg"
    },
    {
      "type": "reference",
      "id": "449ed06528ca30e7",
      "site": "forage.linda.ustawi.wiki",
      "slug": "explaining-digs",
      "title": "Explaining DIGs",
      "text": "Here we seek to explain our understanding of the potential released through a DiG experience."
    },
    {
      "type": "reference",
      "id": "7e4657474d01c228",
      "site": "thompson.forage.ustawi.wiki",
      "slug": "ontological-schemas-and-system-complexity",
      "title": "Ontological Schemas and System Complexity",
      "text": "What is an ontological schema and how do organic systems regenerate them as they unfold into greater complexity?"
    },
    {
      "type": "paragraph",
      "id": "6eae2c57f0ed397b",
      "text": "TPad Class Reference [https://root.cern.ch/doc/master/classTPad.html page] ⇒ [[Pad]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-09-21",
        "story": []
      },
      "date": 1695273192651
    },
    {
      "item": {
        "type": "factory",
        "id": "aa06f219e7b51dab"
      },
      "id": "aa06f219e7b51dab",
      "type": "add",
      "date": 1695273194052
    },
    {
      "type": "edit",
      "id": "aa06f219e7b51dab",
      "item": {
        "type": "paragraph",
        "id": "aa06f219e7b51dab",
        "text": "⇒ [[Branching] ⇒ [[Story Telling]]"
      },
      "date": 1695273237246
    },
    {
      "item": {
        "type": "factory",
        "id": "e7e6d84a4a3f728a"
      },
      "id": "e7e6d84a4a3f728a",
      "type": "add",
      "after": "aa06f219e7b51dab",
      "date": 1695273337634
    },
    {
      "type": "edit",
      "id": "e7e6d84a4a3f728a",
      "item": {
        "type": "paragraph",
        "id": "e7e6d84a4a3f728a",
        "text": "\nINSTRUCTIONS FOR PREPARING PAPERS FOR GA2000, [no date]. Online. [Accessed 21 September 2023]. Available from: http://www.generativeart.com/on/cic/papers2005/13.francescabertacchini.htm\n"
      },
      "date": 1695273339686
    },
    {
      "type": "edit",
      "id": "aa06f219e7b51dab",
      "item": {
        "type": "paragraph",
        "id": "aa06f219e7b51dab",
        "text": "⇒ [[Branching]] ⇒ [[Story Telling]]"
      },
      "date": 1695273347837
    },
    {
      "item": {
        "type": "factory",
        "id": "633d30a7c41d6aa7"
      },
      "id": "633d30a7c41d6aa7",
      "type": "add",
      "after": "e7e6d84a4a3f728a",
      "date": 1695273356293
    },
    {
      "id": "633d30a7c41d6aa7",
      "type": "move",
      "order": [
        "633d30a7c41d6aa7",
        "aa06f219e7b51dab",
        "e7e6d84a4a3f728a"
      ],
      "date": 1695273358546
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "[[Expression Parser]]"
      },
      "date": 1695273372563
    },
    {
      "item": {
        "type": "factory",
        "id": "db9084bf18d8c9d3"
      },
      "id": "db9084bf18d8c9d3",
      "type": "add",
      "after": "e7e6d84a4a3f728a",
      "date": 1695273490464
    },
    {
      "type": "edit",
      "id": "db9084bf18d8c9d3",
      "item": {
        "type": "image",
        "id": "db9084bf18d8c9d3",
        "text": "Figure 1. Architecture of the interactive storytelling system.",
        "size": "wide",
        "width": 418,
        "height": 321,
        "url": "/assets/plugins/image/b3707a78ba202563c233535ecb4dc41b.jpg"
      },
      "date": 1695273555316
    },
    {
      "type": "edit",
      "id": "e7e6d84a4a3f728a",
      "item": {
        "type": "paragraph",
        "id": "e7e6d84a4a3f728a",
        "text": "[[Plexus]]: an interactive story telling system based on the small-world networks model, [no date]. Online. [Accessed 21 September 2023]. Available from: http://www.generativeart.com/on/cic/papers2005/13.francescabertacchini.htm"
      },
      "date": 1695273657896
    },
    {
      "item": {
        "type": "factory",
        "id": "baeaee634fe343c8"
      },
      "id": "baeaee634fe343c8",
      "type": "add",
      "after": "db9084bf18d8c9d3",
      "date": 1695273729362
    },
    {
      "id": "baeaee634fe343c8",
      "type": "move",
      "order": [
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "aa06f219e7b51dab",
        "e7e6d84a4a3f728a",
        "db9084bf18d8c9d3"
      ],
      "date": 1695273731757
    },
    {
      "type": "edit",
      "id": "baeaee634fe343c8",
      "item": {
        "type": "image",
        "id": "baeaee634fe343c8",
        "text": "Tokenize input, pare and show expression",
        "size": "wide",
        "width": 418,
        "height": 324,
        "url": "/assets/plugins/image/55e54d5bd5545bdb595b78640040d9e9.jpg"
      },
      "date": 1695273862424
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "⇒ [parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression"
      },
      "date": 1695273888977
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "⇒ [[parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression"
      },
      "date": 1695273894985
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "⇒ [[learn]] ⇒ [[Learn to Parse]]  ⇒ [[parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression"
      },
      "date": 1695274323672
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "⇒ [[learn]] ⇒ [[Learn to Parse]] ⇒ [[parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression"
      },
      "date": 1695274329610
    },
    {
      "item": {
        "type": "factory",
        "id": "20d04041ff4db211"
      },
      "id": "20d04041ff4db211",
      "type": "add",
      "after": "db9084bf18d8c9d3",
      "date": 1695274331819
    },
    {
      "type": "edit",
      "id": "20d04041ff4db211",
      "item": {
        "type": "graphviz",
        "id": "20d04041ff4db211",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1695274340666
    },
    {
      "id": "aa06f219e7b51dab",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "e7e6d84a4a3f728a",
        "db9084bf18d8c9d3",
        "20d04041ff4db211"
      ],
      "date": 1695274693299
    },
    {
      "id": "db9084bf18d8c9d3",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "633d30a7c41d6aa7",
        "db9084bf18d8c9d3",
        "baeaee634fe343c8",
        "e7e6d84a4a3f728a",
        "20d04041ff4db211"
      ],
      "date": 1695274698397
    },
    {
      "id": "db9084bf18d8c9d3",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "e7e6d84a4a3f728a",
        "20d04041ff4db211"
      ],
      "date": 1695274704086
    },
    {
      "id": "e7e6d84a4a3f728a",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "e7e6d84a4a3f728a",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "20d04041ff4db211"
      ],
      "date": 1695274712568
    },
    {
      "type": "remove",
      "id": "e7e6d84a4a3f728a",
      "date": 1695274728743
    },
    {
      "type": "edit",
      "id": "aa06f219e7b51dab",
      "item": {
        "type": "paragraph",
        "id": "aa06f219e7b51dab",
        "text": "⇒ [[Branching]] ⇒ [[Story Telling]] ⇒ [[Plexus]]: an interactive story telling system based on the small-world networks model, [no date]. Online. [Accessed 21 September 2023]. Available from: http://www.generativeart.com/on/cic/papers2005/13.francescabertacchini.htm"
      },
      "date": 1695274729772
    },
    {
      "type": "edit",
      "id": "633d30a7c41d6aa7",
      "item": {
        "type": "paragraph",
        "id": "633d30a7c41d6aa7",
        "text": "⇒ [[learn]] ⇒ [[Learn to Parse]] ⇒ [[parse]] ⇒ [[Expression Parser]]: Tokenize input, pare and show expression [https://github.com/RalfBarkow/vite-elm-dojo/commit/b26f776c8e77c5e50dfdb33724321d3878425abe commit]"
      },
      "date": 1695277080689
    },
    {
      "item": {
        "type": "factory",
        "id": "6b861fd7cadae909"
      },
      "id": "6b861fd7cadae909",
      "type": "add",
      "after": "20d04041ff4db211",
      "date": 1695277514244
    },
    {
      "id": "6b861fd7cadae909",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "20d04041ff4db211"
      ],
      "date": 1695277518218
    },
    {
      "type": "edit",
      "id": "6b861fd7cadae909",
      "item": {
        "type": "paragraph",
        "id": "6b861fd7cadae909",
        "text": "Tokenize and Parse Expression Functions:"
      },
      "date": 1695277532996
    },
    {
      "type": "edit",
      "id": "6b861fd7cadae909",
      "item": {
        "type": "paragraph",
        "id": "6b861fd7cadae909",
        "text": "Tokenize and Parse Expression Functions [https://github.com/RalfBarkow/vite-elm-dojo/blob/b26f776c8e77c5e50dfdb33724321d3878425abe/src/Main.elm#L38-L40 code]"
      },
      "date": 1695277811868
    },
    {
      "item": {
        "type": "factory",
        "id": "635170d2bec29660"
      },
      "id": "635170d2bec29660",
      "type": "add",
      "after": "20d04041ff4db211",
      "date": 1695277894244
    },
    {
      "type": "remove",
      "id": "20d04041ff4db211",
      "date": 1695277898552
    },
    {
      "type": "edit",
      "id": "635170d2bec29660",
      "item": {
        "type": "code",
        "id": "635170d2bec29660",
        "text": "DOT FROM lambda-browsing\n\nSTATIC\n\nstrict digraph {rankdir=LR\n\n\n\n\n\n\nnode [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n\"2023-09-21\"\nnode [style=filled fillcolor=lightblue]\n\"2023-09-21\" -> \"Branching\"\n\"2023-09-21\" -> \"Story\nTelling\"\n\"2023-09-21\" -> \"Plexus\"\n\"2023-09-21\" -> \"learn\"\n\"2023-09-21\" -> \"Learn\nto\nParse\"\n\"2023-09-21\" -> \"parse\"\n\"2023-09-21\" -> \"Expression\nParser\"\nnode [style=filled fillcolor=white]\n\"Branching\"\nnode [style=filled fillcolor=white]\n\"Story\nTelling\"\nnode [style=filled fillcolor=white]\n\"Plexus\"\nnode [style=filled fillcolor=white]\n\"learn\"\nnode [style=filled fillcolor=white]\nnode [style=filled fillcolor=white]\n\"parse\"\n\"parse\" -> \"Elm\nParser\"\n\"parse\" -> \"Parser\nPipelines\"\n\"parse\" -> \"Path\nDialect\"\n\"parse\" -> \"PetitParser\"\nnode [style=filled fillcolor=white]\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"2023-09-21\" -> \"Branching\"\n\"2023-09-21\" -> \"Story\nTelling\"\n\"2023-09-21\" -> \"Plexus\"\n\"2023-09-21\" -> \"learn\"\n\"2023-09-21\" -> \"Learn\nto\nParse\"\n\"2023-09-21\" -> \"parse\"\n\"2023-09-21\" -> \"Expression\nParser\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Branching\"\n\"Branching\" -> \"Story\"\n\"Branching\" -> \"Story\nTelling\"\n\"Branching\" -> \"Sequence\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Story\nTelling\"\n\"Story\nTelling\" -> \"Garden\nGrooming\"\n\"Story\nTelling\" -> \"Story\nTelling\nPunch\nList\"\n\"Story\nTelling\" -> \"Reconcile\nCopy\nEdits\"\n\"Story\nTelling\" -> \"Item\nHistory\"\n\"Story\nTelling\" -> \"Story\nTelling\nWorkflow\"\n\"Story\nTelling\" -> \"Speed\nBot\"\n\"Story\nTelling\" -> \"Deep\nin\nthe\nGarden\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Plexus\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"learn\"\n\"learn\" -> \"Code\"\n\"learn\" -> \"Qulturum\"\n\"learn\" -> \"Climatic\nPatterns\"\n\"learn\" -> \"Fact\nModeling\"\n\"learn\" -> \"Degree\"\n\"learn\" -> \"Degree\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"parse\"\n\"parse\" -> \"MiniLatex\"\n\"parse\" -> \"AST\"\n\"parse\" -> \"Evan\nCzaplicki\"\n\"parse\" -> \"Elm\nParser\"\n\"parse\" -> \"Elm\nParser\"\n\"parse\" -> \"Parser\nPipelines\"\n\"parse\" -> \"Demystifying\nParsers\"\n\"parse\" -> \"Tereza\nSokol\"\n\"parse\" -> \"Abstract\nSyntax\nTree\"\n\"parse\" -> \"Lukas\nRenggli\"\n\"parse\" -> \"PEG.js\"\n\"parse\" -> \"Sentence\"\n\"parse\" -> \"NavyTime\"\n\"parse\" -> \"Path\nDialect\"\n\"parse\" -> \"PetitParser\"\n\"parse\" -> \"JavaScript\"\n\"parse\" -> \"Abstract\nSyntax\nTree\"\n\"parse\" -> \"elm-pages\"\n\"parse\" -> \"Ward\"\n\"parse\" -> \"MiniLatex\"\n\"parse\" -> \"Render\nWiki\nLink\"\n\"parse\" -> \"Cypher\"\n\"parse\" -> \"cypher\"\n\"parse\" -> \"neo4j\"\n\"parse\" -> \"Import\nfrom\nArrow\"\n\"parse\" -> \"Seran\"\n\"parse\" -> \"Outpost\"\n\"parse\" -> \"Deno\"\n\"parse\" -> \"Tree\nParsers\"\n\"parse\" -> \"ANTLR\"\n\"parse\" -> \"ModelCC\"\n\"parse\" -> \"SmaCC\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"2023-09-21\"\n\"Zettelkasten\nJournal\" -> \"2023-09-21\"}"
      },
      "date": 1695277900795
    },
    {
      "type": "edit",
      "id": "635170d2bec29660",
      "item": {
        "type": "code",
        "id": "635170d2bec29660",
        "text": "update : Msg -> Model -> Model\nupdate msg model =\n    case msg of\n        ParseInput input ->\n            let\n                tokens = tokenize input\n                expression = parseExpression tokens\n                result = showExpression expression\n            in\n            { model | input = input, output = result }\n"
      },
      "date": 1695277910282
    },
    {
      "item": {
        "type": "factory",
        "id": "0fe20d49546ca647"
      },
      "id": "0fe20d49546ca647",
      "type": "add",
      "after": "635170d2bec29660",
      "date": 1695279611708
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "Made a .mov showing Elm Debugger."
      },
      "date": 1695279631222
    },
    {
      "item": {
        "type": "factory",
        "id": "301594a6d906ff80"
      },
      "id": "301594a6d906ff80",
      "type": "add",
      "after": "0fe20d49546ca647",
      "date": 1695279642951
    },
    {
      "id": "301594a6d906ff80",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "0fe20d49546ca647"
      ],
      "date": 1695279644854
    },
    {
      "type": "edit",
      "id": "301594a6d906ff80",
      "item": {
        "type": "paragraph",
        "id": "301594a6d906ff80",
        "text": "let tokens tokenize input"
      },
      "date": 1695279654377
    },
    {
      "type": "add",
      "id": "df2be9fb35d4fb5d",
      "item": {
        "type": "paragraph",
        "id": "df2be9fb35d4fb5d",
        "text": "let expression parse expression tokens"
      },
      "after": "301594a6d906ff80",
      "date": 1695279716270
    },
    {
      "type": "add",
      "id": "659e4dedcf401817",
      "item": {
        "type": "paragraph",
        "id": "659e4dedcf401817",
        "text": "let result show expression …"
      },
      "after": "df2be9fb35d4fb5d",
      "date": 1695279771973
    },
    {
      "type": "add",
      "id": "f7a717207ead987a",
      "item": {
        "type": "paragraph",
        "id": "f7a717207ead987a",
        "text": "… Smalltalk ;-)"
      },
      "after": "659e4dedcf401817",
      "date": 1695279808182
    },
    {
      "type": "edit",
      "id": "301594a6d906ff80",
      "item": {
        "type": "paragraph",
        "id": "301594a6d906ff80",
        "text": "let tokens tokenize input in model …"
      },
      "date": 1695279814814
    },
    {
      "type": "edit",
      "id": "df2be9fb35d4fb5d",
      "item": {
        "type": "paragraph",
        "id": "df2be9fb35d4fb5d",
        "text": "let expression parse expression tokens in model ……"
      },
      "date": 1695279831869
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A .mov file was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time."
      },
      "date": 1695280039859
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A screen caputure video (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time."
      },
      "date": 1695280130582
    },
    {
      "type": "add",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos"
      },
      "after": "0fe20d49546ca647",
      "date": 1695280185204
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page]"
      },
      "date": 1695280195889
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]]"
      },
      "date": 1695280249285
    },
    {
      "type": "add",
      "id": "700d7efa483933c2",
      "item": {
        "type": "paragraph",
        "id": "700d7efa483933c2",
        "text": "Knowledge management (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
      },
      "after": "09586038907ea7ee",
      "date": 1695280382679
    },
    {
      "type": "remove",
      "id": "700d7efa483933c2",
      "date": 1695280423056
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]] ⇒ [[Knowledge management]] (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
      },
      "date": 1695280424535
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]] ⇒ [[KKnowledge Managemen]] (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
      },
      "date": 1695280498955
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]] ⇒ [[Knowledge Managemen]] (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
      },
      "date": 1695280508506
    },
    {
      "type": "edit",
      "id": "09586038907ea7ee",
      "item": {
        "type": "paragraph",
        "id": "09586038907ea7ee",
        "text": "Teaching knowledge management by combining wikis and screen capture videos [https://www.emerald.com/insight/content/doi/10.1108/10650741111181625/full/html page] ⇒ [[Story Telling]] ⇒ [[Knowledge Management]] (KM) has been considered as the process of turning data (collection of facts, measurements or statistics) into information (timely and accurate processed data) and, further on, to knowledge (relevant and actionable information in context) (Kanter, 1999; Spiegler, 2000). Others consider KM to be the process for acquiring, organising and communicating both tacit and explicit knowledge of employees in an organisation in favour for other employees to make use of it (Alavi and Leidner, 2001). This knowledge sharing aims to develop more effective and productive students and employees."
      },
      "date": 1695280531087
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A screen capture video (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time."
      },
      "date": 1695282059221
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A [[Screen Capture Video]] (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time."
      },
      "date": 1695282103961
    },
    {
      "item": {
        "type": "factory",
        "id": "33dc5f1dcf7a7056"
      },
      "id": "33dc5f1dcf7a7056",
      "type": "add",
      "after": "09586038907ea7ee",
      "date": 1695282167656
    },
    {
      "type": "edit",
      "id": "33dc5f1dcf7a7056",
      "item": {
        "type": "pagefold",
        "id": "33dc5f1dcf7a7056",
        "text": "~"
      },
      "date": 1695282170392
    },
    {
      "item": {
        "type": "factory",
        "id": "cb8c52b49fd71ed8"
      },
      "id": "cb8c52b49fd71ed8",
      "type": "add",
      "after": "33dc5f1dcf7a7056",
      "date": 1695282172140
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "⇒ [[Data Model]]"
      },
      "date": 1695282195446
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "⇒ [[Data Model]] ⇒  The CMS Event Data Model (EDM) is centered around the concept of an Event. Physically, an event is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings."
      },
      "date": 1695282229546
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "⇒ [[Data Model]] ⇒  The CMS Event Data Model (EDM) is centered around the concept of an Event. Physically, an event is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings. [https://cms-opendata-guide.web.cern.ch/cmssw/cmsswdatamodel/ page]"
      },
      "date": 1695282242327
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "⇒ [[Data Model]] ⇒  The CMS Event Data Model (EDM) is centered around the concept of an Event. Physically, an [[Event]] is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings. [https://cms-opendata-guide.web.cern.ch/cmssw/cmsswdatamodel/ page]"
      },
      "date": 1695282260012
    },
    {
      "item": {
        "type": "factory",
        "id": "7e4657474d01c228"
      },
      "id": "7e4657474d01c228",
      "type": "add",
      "after": "cb8c52b49fd71ed8",
      "date": 1695283127639
    },
    {
      "type": "edit",
      "id": "7e4657474d01c228",
      "item": {
        "type": "reference",
        "id": "7e4657474d01c228",
        "site": "thompson.forage.ustawi.wiki",
        "slug": "ontological-schemas-and-system-complexity",
        "title": "Ontological Schemas and System Complexity",
        "text": "What is an ontological schema and how do organic systems regenerate them as they unfold into greater complexity?"
      },
      "date": 1695283134984
    },
    {
      "item": {
        "type": "factory",
        "id": "449ed06528ca30e7"
      },
      "id": "449ed06528ca30e7",
      "type": "add",
      "after": "7e4657474d01c228",
      "date": 1695283173481
    },
    {
      "type": "edit",
      "id": "449ed06528ca30e7",
      "item": {
        "type": "reference",
        "id": "449ed06528ca30e7",
        "site": "forage.linda.ustawi.wiki",
        "slug": "explaining-digs",
        "title": "Explaining DIGs",
        "text": "Here we seek to explain our understanding of the potential released through a DiG experience."
      },
      "date": 1695283178831
    },
    {
      "id": "449ed06528ca30e7",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "449ed06528ca30e7",
        "7e4657474d01c228"
      ],
      "date": 1695283182616
    },
    {
      "item": {
        "type": "factory",
        "id": "b261df031407d1db"
      },
      "id": "b261df031407d1db",
      "type": "add",
      "after": "7e4657474d01c228",
      "date": 1695283306689
    },
    {
      "type": "edit",
      "id": "b261df031407d1db",
      "item": {
        "type": "reference",
        "id": "b261df031407d1db",
        "site": "martech.dojo.fed.wiki",
        "slug": "infranodus",
        "title": "InfraNodus",
        "text": "Get an overview of any discourse, reveal the blind spots, enhance your perspective. [https://infranodus.com/ site]"
      },
      "date": 1695283313425
    },
    {
      "type": "add",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "Got attracted to ROOT "
      },
      "after": "cb8c52b49fd71ed8",
      "date": 1695284177840
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "Got attracted to ROOT by among other things this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page]."
      },
      "date": 1695284199710
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others."
      },
      "date": 1695284233651
    },
    {
      "type": "add",
      "id": "a29f7773e111dc8c",
      "item": {
        "type": "paragraph",
        "id": "a29f7773e111dc8c",
        "text": "> ROOT comes with an incredible C++ interpreter, ideal for fast prototyping. Don’t like C++? ROOT integrates super-smoothly with Python thanks to its unique dynamic and powerful Python ⇄ C++ binding. Or what about using ROOT in a Jupyter notebook?"
      },
      "after": "d3086934625b07be",
      "date": 1695284261060
    },
    {
      "type": "edit",
      "id": "a29f7773e111dc8c",
      "item": {
        "type": "markdown",
        "id": "a29f7773e111dc8c",
        "text": "> ROOT comes with an incredible C++ interpreter, ideal for fast prototyping. Don’t like C++? ROOT integrates super-smoothly with Python thanks to its unique dynamic and powerful Python ⇄ C++ binding. Or what about using ROOT in a Jupyter notebook?"
      },
      "date": 1695284262252
    },
    {
      "type": "edit",
      "id": "a29f7773e111dc8c",
      "item": {
        "type": "markdown",
        "id": "a29f7773e111dc8c",
        "text": "> ROOT comes with an incredible C++ interpreter, ideal for fast prototyping. Don’t like C++? ROOT integrates super-smoothly with Python thanks to its unique dynamic and powerful Python ⇄ C++ binding. Or what about using ROOT in a Jupyter notebook? [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page]"
      },
      "date": 1695284279654
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [Deno now integrated with Jupyter notebooks in support of data science with visualization in, wait for it, D3.\nhttps://deno.com/blog/v1.37#jupyter-notebook-integration "
      },
      "date": 1695284301000
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1695284320712
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] ⇒ [[Deno]] now integrated with Jupyter notebooks in support of data science with visualization in, wait for it, D3.\nhttps://deno.com/blog/v1.37#jupyter-notebook-integration "
      },
      "date": 1695284373133
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] ⇒ [[Deno]] now integrated with Jupyter notebooks in support of data science with visualization in, wait for it, D3.\n[https://deno.com/blog/v1.37#jupyter-notebook-integration page]"
      },
      "date": 1695284386441
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] ⇒ [[Deno]] now integrated with Jupyter notebooks in support of data science with visualization in, wait for it, [[D3]].\n[https://deno.com/blog/v1.37#jupyter-notebook-integration page]"
      },
      "date": 1695284447429
    },
    {
      "id": "b261df031407d1db",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "449ed06528ca30e7",
        "7e4657474d01c228"
      ],
      "date": 1695284474185
    },
    {
      "id": "cc921581dcfd5510",
      "type": "add",
      "item": {
        "type": "image",
        "id": "cc921581dcfd5510",
        "text": "Uploaded image",
        "size": "wide",
        "width": 420,
        "height": 273,
        "url": "/assets/plugins/image/f4d7b0118312a20c56701f91babba86d.jpg"
      },
      "after": "7e4657474d01c228",
      "attribution": {
        "page": "Web Page Dom",
        "site": "viki.wiki"
      },
      "date": 1695284571961
    },
    {
      "item": {
        "type": "factory",
        "id": "95191c8a94f18710"
      },
      "id": "95191c8a94f18710",
      "type": "add",
      "after": "cc921581dcfd5510",
      "date": 1695284582678
    },
    {
      "type": "edit",
      "id": "95191c8a94f18710",
      "item": {
        "type": "reference",
        "id": "95191c8a94f18710",
        "site": "viki.wiki",
        "slug": "web-page-dom",
        "title": "Web Page Dom",
        "text": "Wiki renders into the dom as a side-scrolling lineup of wiki pages from various sources and a stationary web page footer with status information about the origin site and the neighborhood reached from it."
      },
      "date": 1695284585023
    },
    {
      "type": "remove",
      "id": "cc921581dcfd5510",
      "date": 1695284591160
    },
    {
      "id": "cc921581dcfd5510",
      "type": "add",
      "item": {
        "type": "image",
        "id": "cc921581dcfd5510",
        "text": "Uploaded image",
        "size": "wide",
        "width": 420,
        "height": 273,
        "url": "/assets/plugins/image/f4d7b0118312a20c56701f91babba86d.jpg"
      },
      "after": "95191c8a94f18710",
      "attribution": {
        "page": "Web Page Dom",
        "site": "viki.wiki"
      },
      "date": 1695284599983
    },
    {
      "id": "95191c8a94f18710",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "449ed06528ca30e7",
        "7e4657474d01c228",
        "cc921581dcfd5510"
      ],
      "date": 1695284613162
    },
    {
      "id": "cc921581dcfd5510",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "cc921581dcfd5510",
        "449ed06528ca30e7",
        "7e4657474d01c228"
      ],
      "date": 1695284615789
    },
    {
      "id": "7aa5675c5155f6b8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7aa5675c5155f6b8",
        "text": "If we say resolution context then we are referring to the page context plus our origin and the remote site from which the page has been fetched."
      },
      "after": "7e4657474d01c228",
      "attribution": {
        "page": "Context",
        "site": "glossary.asia.wiki.org"
      },
      "date": 1695284976709
    },
    {
      "id": "7aa5675c5155f6b8",
      "type": "remove",
      "removedTo": {
        "page": "Context"
      },
      "date": 1695284983232
    },
    {
      "type": "edit",
      "id": "d3086934625b07be",
      "item": {
        "type": "paragraph",
        "id": "d3086934625b07be",
        "text": "I became aware of [[ROOT]] through this [https://nbviewer.org/url/root.cern/doc/master/notebooks/rf301_composition.C.nbconvert.ipynb page], among others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$169525577211274eZJHE:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] ⇒ [[Deno]] now integrated with [[Jupyter Notebook]]s in support of data science with visualization in, wait for it, [[D3]].\n[https://deno.com/blog/v1.37#jupyter-notebook-integration page]"
      },
      "date": 1695285312590
    },
    {
      "item": {
        "type": "factory",
        "id": "ef66758ffbd84fe3"
      },
      "id": "ef66758ffbd84fe3",
      "type": "add",
      "after": "7e4657474d01c228",
      "date": 1695286586077
    },
    {
      "type": "edit",
      "id": "ef66758ffbd84fe3",
      "item": {
        "type": "reference",
        "id": "ef66758ffbd84fe3",
        "site": "de.dreyeck.ch",
        "slug": "warum-funktional-programmieren",
        "title": "Warum funktional programmieren?",
        "text": "Ein klare Definition was man unter funktionaler Programmierung versteht, gibt es nicht. Inzwischen bieten viele Programmiersprachen die Möglichkeit einzelne Aspekte der funktionalen Programmierung umzusetzen. Um die Vorzüge der funktionalen Programmierung zu erleben, ist es aber von Vorteil eine Sprache zu nutzen, die das funktionale Programmierparadigma sehr sauber umsetzt. Eine dieser Sprachen ist Elm. [https://dev.inf-schule.de/deklarativ/fp_elm/vorwort/warumfunktional inf-schule.de]"
      },
      "date": 1695286590543
    },
    {
      "id": "ef66758ffbd84fe3",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "ef66758ffbd84fe3",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "cc921581dcfd5510",
        "449ed06528ca30e7",
        "7e4657474d01c228"
      ],
      "date": 1695286599836
    },
    {
      "type": "edit",
      "id": "ef66758ffbd84fe3",
      "item": {
        "type": "reference",
        "id": "ef66758ffbd84fe3",
        "site": "de.dreyeck.ch",
        "slug": "warum-funktional-programmieren",
        "title": "Warum funktional programmieren?",
        "text": "Ein klare Definition was man unter funktionaler Programmierung versteht, gibt es nicht. Inzwischen bieten viele Programmiersprachen die Möglichkeit einzelne Aspekte der funktionalen Programmierung umzusetzen. Um die Vorzüge der funktionalen Programmierung zu erleben, ist es aber von Vorteil eine Sprache zu nutzen, die das funktionale Programmierparadigma sehr sauber umsetzt. Eine dieser Sprachen ist Elm. [https://dev.inf-schule.de/deklarativ/fp_elm/vorwort/warumfunktional inf-schule.de]\n"
      },
      "date": 1695286676164
    },
    {
      "type": "add",
      "id": "91b7c810cdd007ce",
      "item": {
        "type": "paragraph",
        "id": "91b7c810cdd007ce",
        "text": "[[Why Program Functionally?]]"
      },
      "after": "09586038907ea7ee",
      "date": 1695286683921
    },
    {
      "type": "edit",
      "id": "91b7c810cdd007ce",
      "item": {
        "type": "paragraph",
        "id": "91b7c810cdd007ce",
        "text": "[[Why Program Functionally?]] [https://www.linkedin.com/posts/ralfbarkow_elm-activity-7110549837040734208-i4KL?utm_source=share&utm_medium=member_desktop post]"
      },
      "date": 1695287269732
    },
    {
      "type": "edit",
      "id": "f7a717207ead987a",
      "item": {
        "type": "paragraph",
        "id": "f7a717207ead987a",
        "text": "… [[Smalltalk]] ;-)"
      },
      "date": 1695289308912
    },
    {
      "item": {
        "type": "factory",
        "id": "6eae2c57f0ed397b"
      },
      "id": "6eae2c57f0ed397b",
      "type": "add",
      "after": "7e4657474d01c228",
      "date": 1695294143641
    },
    {
      "type": "edit",
      "id": "6eae2c57f0ed397b",
      "item": {
        "type": "paragraph",
        "id": "6eae2c57f0ed397b",
        "text": "TPad Class Reference"
      },
      "date": 1695294150085
    },
    {
      "type": "edit",
      "id": "6eae2c57f0ed397b",
      "item": {
        "type": "paragraph",
        "id": "6eae2c57f0ed397b",
        "text": "TPad Class Reference []"
      },
      "date": 1695294161368
    },
    {
      "type": "edit",
      "id": "6eae2c57f0ed397b",
      "item": {
        "type": "paragraph",
        "id": "6eae2c57f0ed397b",
        "text": "TPad Class Reference [https://root.cern.ch/doc/master/classTPad.html page]"
      },
      "date": 1695294167664
    },
    {
      "type": "edit",
      "id": "6eae2c57f0ed397b",
      "item": {
        "type": "paragraph",
        "id": "6eae2c57f0ed397b",
        "text": "TPad Class Reference [https://root.cern.ch/doc/master/classTPad.html page] ⇒ [[Pad]]"
      },
      "date": 1695294199385
    },
    {
      "item": {
        "type": "factory",
        "id": "3516a628c95f83af"
      },
      "id": "3516a628c95f83af",
      "type": "add",
      "after": "6eae2c57f0ed397b",
      "date": 1695294229491
    },
    {
      "id": "3516a628c95f83af",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "91b7c810cdd007ce",
        "ef66758ffbd84fe3",
        "3516a628c95f83af",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "cc921581dcfd5510",
        "449ed06528ca30e7",
        "7e4657474d01c228",
        "6eae2c57f0ed397b"
      ],
      "date": 1695294237642
    },
    {
      "type": "edit",
      "id": "3516a628c95f83af",
      "item": {
        "type": "reference",
        "id": "3516a628c95f83af",
        "site": "wiki.ralfbarkow.ch",
        "slug": "pad",
        "title": "Pad",
        "text": "TPad Class Reference [https://root.cern.ch/doc/master/classTPad.html page]"
      },
      "date": 1695294240512
    },
    {
      "type": "add",
      "id": "993c88a5a8db5ebf",
      "item": {
        "type": "paragraph",
        "id": "993c88a5a8db5ebf",
        "text": "Parser Extras"
      },
      "after": "91b7c810cdd007ce",
      "date": 1695303721155
    },
    {
      "id": "993c88a5a8db5ebf",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "91b7c810cdd007ce",
        "ef66758ffbd84fe3",
        "3516a628c95f83af",
        "993c88a5a8db5ebf",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "cc921581dcfd5510",
        "449ed06528ca30e7",
        "7e4657474d01c228",
        "6eae2c57f0ed397b"
      ],
      "date": 1695303723567
    },
    {
      "type": "edit",
      "id": "993c88a5a8db5ebf",
      "item": {
        "type": "paragraph",
        "id": "993c88a5a8db5ebf",
        "text": "[[Parser Extras]]"
      },
      "date": 1695303728981
    },
    {
      "type": "edit",
      "id": "993c88a5a8db5ebf",
      "item": {
        "type": "paragraph",
        "id": "993c88a5a8db5ebf",
        "text": "⇒ [[Parser Extras]]"
      },
      "date": 1695303743939
    },
    {
      "item": {
        "type": "factory",
        "id": "d7e9fe3f3cceb349"
      },
      "id": "d7e9fe3f3cceb349",
      "type": "add",
      "after": "6eae2c57f0ed397b",
      "date": 1695305657177
    },
    {
      "id": "d7e9fe3f3cceb349",
      "type": "move",
      "order": [
        "aa06f219e7b51dab",
        "db9084bf18d8c9d3",
        "633d30a7c41d6aa7",
        "baeaee634fe343c8",
        "6b861fd7cadae909",
        "635170d2bec29660",
        "301594a6d906ff80",
        "df2be9fb35d4fb5d",
        "659e4dedcf401817",
        "f7a717207ead987a",
        "0fe20d49546ca647",
        "09586038907ea7ee",
        "91b7c810cdd007ce",
        "ef66758ffbd84fe3",
        "3516a628c95f83af",
        "993c88a5a8db5ebf",
        "d7e9fe3f3cceb349",
        "33dc5f1dcf7a7056",
        "cb8c52b49fd71ed8",
        "d3086934625b07be",
        "a29f7773e111dc8c",
        "b261df031407d1db",
        "95191c8a94f18710",
        "cc921581dcfd5510",
        "449ed06528ca30e7",
        "7e4657474d01c228",
        "6eae2c57f0ed397b"
      ],
      "date": 1695305676778
    },
    {
      "type": "edit",
      "id": "d7e9fe3f3cceb349",
      "item": {
        "type": "video",
        "id": "d7e9fe3f3cceb349",
        "text": "YOUTUBE"
      },
      "date": 1695305683335
    },
    {
      "type": "edit",
      "id": "d7e9fe3f3cceb349",
      "item": {
        "type": "video",
        "id": "d7e9fe3f3cceb349",
        "text": "YOUTUBE JMZLBB_BFNg"
      },
      "date": 1695305698381
    },
    {
      "type": "edit",
      "id": "993c88a5a8db5ebf",
      "item": {
        "type": "paragraph",
        "id": "993c88a5a8db5ebf",
        "text": "⇒ [[Parser Extras]] ⇒ [[Parser Parser Combinators for Program Transformation]]"
      },
      "date": 1695305743498
    },
    {
      "id": "d7e9fe3f3cceb349",
      "type": "remove",
      "removedTo": {
        "page": "Parser Parser Combinators for Program Transformation"
      },
      "date": 1695305755194
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A [[Screen Capture Video]] (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16952929822jbzCP:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1695314403828
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A [[Screen Capture Video]] (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16952929822jbzCP:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix], "
      },
      "date": 1695314409931
    },
    {
      "type": "edit",
      "id": "0fe20d49546ca647",
      "item": {
        "type": "paragraph",
        "id": "0fe20d49546ca647",
        "text": "A [[Screen Capture Video]] (.mov file) was created that, along with the Elm debugger, shows the change in state of MESSAGE and MODEL over time. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16952929822jbzCP:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix], [https://www.linkedin.com/posts/ralfbarkow_elm-activity-7110573684007804928-x7wm linkedin]"
      },
      "date": 1695314433916
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "Our Event Store is the Journal"
      },
      "date": 1695324217569
    },
    {
      "type": "add",
      "id": "17b83ab8197aab0e",
      "item": {
        "type": "paragraph",
        "id": "17b83ab8197aab0e",
        "text": "⇒ [[Data Model]] ⇒  The CMS Event Data Model (EDM) is centered around the concept of an Event. Physically, an [[Event]] is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings. [https://cms-opendata-guide.web.cern.ch/cmssw/cmsswdatamodel/ page]"
      },
      "after": "cb8c52b49fd71ed8",
      "date": 1695324219407
    },
    {
      "type": "edit",
      "id": "cb8c52b49fd71ed8",
      "item": {
        "type": "paragraph",
        "id": "cb8c52b49fd71ed8",
        "text": "Our [[Event Store]] is the Journal"
      },
      "date": 1695324225468
    },
    {
      "id": "cb8c52b49fd71ed8",
      "type": "remove",
      "removedTo": {
        "page": "Event Store"
      },
      "date": 1695326877439
    },
    {
      "type": "edit",
      "id": "17b83ab8197aab0e",
      "item": {
        "type": "paragraph",
        "id": "17b83ab8197aab0e",
        "text": "⇒ [[Data Model]] ⇒  The [[CMS]] Event Data Model (EDM) is centered around the concept of an Event. Physically, an [[Event]] is the result of a single readout of the detector electronics and the signals that will (in general) have been generated by particles, tracks, energy deposits, present in a number of bunch crossings. [https://cms-opendata-guide.web.cern.ch/cmssw/cmsswdatamodel/ page]"
      },
      "date": 1695329268284
    }
  ]
}