{
  "title": "Image",
  "story": [
    {
      "type": "paragraph",
      "id": "33ac01597870cbed",
      "text": "The image consists of all the objects in your computer, both the ones you create and the ones [[Smalltalk]] already provides."
    },
    {
      "type": "markdown",
      "id": "a66ce5d2dbe2189c",
      "text": "Because “everything is an object,” the image contains unusual objects like compiled methods. That is, whenever you write and compile a Smalltalk method, Smalltalk's compiler produces an instance of the class *[[CompiledMethod]]*. Each of these objects consists of bytecodes, which are the machine instructions that the virtual machine knows how to execute."
    },
    {
      "type": "paragraph",
      "id": "6582b816e191e7fe",
      "text": "A running Smalltalk system therefore consists of these two pieces of software – a virtual machine running on your underlying computer hardware plus an image run­ning bytecodes on the virtual machine. This is really a familiar notion cloaked in a fancy name An interpreter – a BASIC interpreter, or a Pascal p-code interpreter – is also a virtual machine. Instead of executing the bytecodes in a Smalltalk image, it exe­cutes some other language, like BASIC or p-code. Sometimes people even refer to the Smalltalk virtual machine as the Smalltalk interpreter."
    },
    {
      "type": "factory",
      "id": "0921249cf742e2fc"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Image",
        "story": []
      },
      "date": 1654364029211
    },
    {
      "item": {
        "type": "factory",
        "id": "33ac01597870cbed"
      },
      "id": "33ac01597870cbed",
      "type": "add",
      "date": 1654364114833
    },
    {
      "type": "edit",
      "id": "33ac01597870cbed",
      "item": {
        "type": "paragraph",
        "id": "33ac01597870cbed",
        "text": "The image consists of all the objects in your computer» both the ones you create and the ones Smalltalk already provides."
      },
      "date": 1654364116534
    },
    {
      "type": "edit",
      "id": "33ac01597870cbed",
      "item": {
        "type": "paragraph",
        "id": "33ac01597870cbed",
        "text": "The image consists of all the objects in your computer, both the ones you create and the ones Smalltalk already provides."
      },
      "date": 1654364127755
    },
    {
      "type": "edit",
      "id": "33ac01597870cbed",
      "item": {
        "type": "paragraph",
        "id": "33ac01597870cbed",
        "text": "The image consists of all the objects in your computer, both the ones you create and the ones [[Smalltalk]] already provides."
      },
      "date": 1654364136743
    },
    {
      "item": {
        "type": "factory",
        "id": "a66ce5d2dbe2189c"
      },
      "id": "a66ce5d2dbe2189c",
      "type": "add",
      "after": "33ac01597870cbed",
      "date": 1654374608872
    },
    {
      "type": "edit",
      "id": "a66ce5d2dbe2189c",
      "item": {
        "type": "paragraph",
        "id": "a66ce5d2dbe2189c",
        "text": "Because “everything is an object»” the image contains unusual objects like compiled method}. That is» whenever you write and compile a Smalltalk method» Smalltalk's compiler produces an instance of the class CompiledMethod. Each of these objects consists of bytecodes, which are the machine instructions that the virtual machine knows how to execute."
      },
      "date": 1654374613574
    },
    {
      "type": "edit",
      "id": "a66ce5d2dbe2189c",
      "item": {
        "type": "paragraph",
        "id": "a66ce5d2dbe2189c",
        "text": "Because “everything is an object,” the image contains unusual objects like compiled methods. That is, whenever you write and compile a Smalltalk method, Smalltalk's compiler produces an instance of the class Compiled Method. Each of these objects consists of bytecodes, which are the machine instructions that the virtual machine knows how to execute."
      },
      "date": 1654374698351
    },
    {
      "item": {
        "type": "factory",
        "id": "6582b816e191e7fe"
      },
      "id": "6582b816e191e7fe",
      "type": "add",
      "after": "a66ce5d2dbe2189c",
      "date": 1654406924708
    },
    {
      "type": "edit",
      "id": "6582b816e191e7fe",
      "item": {
        "type": "paragraph",
        "id": "6582b816e191e7fe",
        "text": "A running Smalltalk system therefore consists of these two pieces of software—a virtual machine running on your underlying computer hardware plus an image run­ ning bytecodes on the virtual machine. This is really a familiar notion cloaked in a fancy name An interpreter—a BASIC interpreter, or a Pascal p-code interpreter—is also a virtual machine. Instead ofexecuting the bytecodes in a Smalltalk image, it exe­ cutes some other language, like BASIC or p-code. Sometimes people even refer to the Smalltalk virtual machine as the Smalltalk interpreter."
      },
      "date": 1654406935641
    },
    {
      "type": "edit",
      "id": "6582b816e191e7fe",
      "item": {
        "type": "paragraph",
        "id": "6582b816e191e7fe",
        "text": "A running Smalltalk system therefore consists of these two pieces of software – a virtual machine running on your underlying computer hardware plus an image run­ning bytecodes on the virtual machine. This is really a familiar notion cloaked in a fancy name An interpreter—a BASIC interpreter, or a Pascal p-code interpreter—is also a virtual machine. Instead of executing the bytecodes in a Smalltalk image, it exe­ cutes some other language, like BASIC or p-code. Sometimes people even refer to the Smalltalk virtual machine as the Smalltalk interpreter."
      },
      "date": 1654406988978
    },
    {
      "type": "edit",
      "id": "6582b816e191e7fe",
      "item": {
        "type": "paragraph",
        "id": "6582b816e191e7fe",
        "text": "A running Smalltalk system therefore consists of these two pieces of software – a virtual machine running on your underlying computer hardware plus an image run­ning bytecodes on the virtual machine. This is really a familiar notion cloaked in a fancy name An interpreter – a BASIC interpreter, or a Pascal p-code interpreter – is also a virtual machine. Instead of executing the bytecodes in a Smalltalk image, it exe­cutes some other language, like BASIC or p-code. Sometimes people even refer to the Smalltalk virtual machine as the Smalltalk interpreter."
      },
      "date": 1654407059754
    },
    {
      "item": {
        "type": "factory",
        "id": "0921249cf742e2fc"
      },
      "id": "0921249cf742e2fc",
      "type": "add",
      "after": "6582b816e191e7fe",
      "date": 1654407136632
    },
    {
      "type": "edit",
      "id": "a66ce5d2dbe2189c",
      "item": {
        "type": "paragraph",
        "id": "a66ce5d2dbe2189c",
        "text": "Because “everything is an object,” the image contains unusual objects like compiled methods. That is, whenever you write and compile a Smalltalk method, Smalltalk's compiler produces an instance of the class *[[CompiledMethod]]*. Each of these objects consists of bytecodes, which are the machine instructions that the virtual machine knows how to execute."
      },
      "date": 1654407159433
    },
    {
      "type": "edit",
      "id": "a66ce5d2dbe2189c",
      "item": {
        "type": "markdown",
        "id": "a66ce5d2dbe2189c",
        "text": "Because “everything is an object,” the image contains unusual objects like compiled methods. That is, whenever you write and compile a Smalltalk method, Smalltalk's compiler produces an instance of the class *[[CompiledMethod]]*. Each of these objects consists of bytecodes, which are the machine instructions that the virtual machine knows how to execute."
      },
      "date": 1654407161173
    }
  ]
}