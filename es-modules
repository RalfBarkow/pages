{
  "title": "ES Modules",
  "story": [
    {
      "type": "paragraph",
      "id": "cbe0be684b38d63b",
      "text": "ES modules bring an official, standardized module system to JavaScript. It took a while to get here, though — nearly 10 years of standardization work. [https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/ page]"
    },
    {
      "type": "reference",
      "id": "a181fe215f0b37b4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "outpost-thinking",
      "title": "Outpost Thinking",
      "text": "We've been itching to embrace the ES6 module structures and maybe leave jQuery and CoffeeScript behind in the process. When node inventor [[Ryan Dahl]] announced that he was taking a similar fresh look at server-side javascript runtimes, of course we were interested."
    },
    {
      "type": "reference",
      "id": "69a4a5d4eadc3ae7",
      "site": "found.ward.bay.wiki.org",
      "slug": "nodes-mistakes",
      "title": "Node's Mistakes",
      "text": "Node.js creator [[Ryan Dahl]] voiced some deep misgivings about his server-side JavaScript runtime engine at the EU JS conference earlier this week in Germany. [https://thenewstack.io/node-js-creator-blasts-node-js-offers-a-secure-typescript-based-alternative/ post]"
    },
    {
      "id": "06d8357fac7f2f52",
      "type": "reference",
      "site": "clive.tries.fed.wiki",
      "slug": "michael-jackson-script",
      "title": "Michael Jackson Script",
      "text": "Michael Jackson Script (mjs) is a file name the node js community ascribed to ES6 modules."
    },
    {
      "id": "d08b592f1815a966",
      "type": "reference",
      "site": "clive.tries.fed.wiki",
      "slug": "javascript-tooling",
      "title": "Javascript Tooling",
      "text": "One definitive answer (of many) for building javascript apps. Plausible recommendations and rationale, if you're just starting out (as of April 2018): use babel, webpack, & gulp.  Wiki's current tools are equally plausible: coffeescript, browserify, & grunt.  Related reading also recommend the yarn and webpack combination.  [http://jamesknelson.com/which-build-system-should-i-use-for-my-javascript-app/ blog]"
    },
    {
      "id": "11d49465b1e72c97",
      "type": "reference",
      "site": "clive.tries.fed.wiki",
      "slug": "javascript-modules",
      "title": "Javascript Modules",
      "text": "In the most ubiquitous programming ecosystem, modules have been shoehorned in where they were originally lacking.  As of early 2018, nodejs gradually builds toward ECMAScript Modules.  Guidance for transition from CommonJS to ESM: [https://medium.com/@giltayar/native-es-modules-in-nodejs-status-and-future-directions-part-i-ee5ea3001f71 link]"
    },
    {
      "id": "096c3c53ed275874",
      "type": "reference",
      "site": "clive.tries.fed.wiki",
      "slug": "es6-mixins",
      "title": "ES6 Mixins",
      "text": "Jan Miksovsky is an designer/developer expert at component.kitchen on Web Components. Only interested in coding approaches that can be shared with other people. With emphasis on stylin and reuse.  [https://twitter.com/janmiksovsky page]"
    },
    {
      "type": "reference",
      "id": "91896be32f3cfda4",
      "site": "wiki.dbbs.co",
      "slug": "elix-es6-mixins",
      "title": "Elix ES6 Mixins",
      "text": "Proof of concept loading a web component into wiki.  [https://component.kitchen/elix component.kitchen/elix] [https://github.com/elix/elix github]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "ES Modules",
        "story": []
      },
      "date": 1636030539759
    },
    {
      "item": {
        "type": "factory",
        "id": "a181fe215f0b37b4"
      },
      "id": "a181fe215f0b37b4",
      "type": "add",
      "date": 1636030577875
    },
    {
      "type": "edit",
      "id": "a181fe215f0b37b4",
      "item": {
        "type": "reference",
        "id": "a181fe215f0b37b4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "outpost-thinking",
        "title": "Outpost Thinking",
        "text": "We built the federation based on the promiscuous sharing of simple things with the hope that this would lead the community to save indefinitely things worth saving. Within a year we had moved from ruby to node without leaving ruby sites behind. Now, in the federation's ninth year, we consider how this process might be further distributed."
      },
      "date": 1636030580224
    },
    {
      "item": {
        "type": "factory",
        "id": "d2d785b1f94e416c"
      },
      "id": "d2d785b1f94e416c",
      "type": "add",
      "after": "a181fe215f0b37b4",
      "date": 1636030596168
    },
    {
      "type": "edit",
      "id": "d2d785b1f94e416c",
      "item": {
        "type": "reference",
        "id": "d2d785b1f94e416c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "nodes-mistakes",
        "title": "Node's Mistakes",
        "text": "Node.js creator Ryan Dahl voiced some deep misgivings about his server-side JavaScript runtime engine at the EU JS conference earlier this week in Germany. [https://thenewstack.io/node-js-creator-blasts-node-js-offers-a-secure-typescript-based-alternative/ post]"
      },
      "date": 1636030600314
    },
    {
      "item": {
        "type": "factory",
        "id": "69a4a5d4eadc3ae7"
      },
      "id": "69a4a5d4eadc3ae7",
      "type": "add",
      "after": "d2d785b1f94e416c",
      "date": 1636030620609
    },
    {
      "type": "edit",
      "id": "69a4a5d4eadc3ae7",
      "item": {
        "type": "reference",
        "id": "69a4a5d4eadc3ae7",
        "site": "found.ward.bay.wiki.org",
        "slug": "nodes-mistakes",
        "title": "Node's Mistakes",
        "text": "Node.js creator Ryan Dahl voiced some deep misgivings about his server-side JavaScript runtime engine at the EU JS conference earlier this week in Germany. [https://thenewstack.io/node-js-creator-blasts-node-js-offers-a-secure-typescript-based-alternative/ post]"
      },
      "date": 1636030622995
    },
    {
      "type": "remove",
      "id": "d2d785b1f94e416c",
      "date": 1636030625997
    },
    {
      "item": {
        "type": "factory",
        "id": "cbe0be684b38d63b"
      },
      "id": "cbe0be684b38d63b",
      "type": "add",
      "after": "69a4a5d4eadc3ae7",
      "date": 1636030701280
    },
    {
      "id": "11d49465b1e72c97",
      "type": "add",
      "item": {
        "id": "11d49465b1e72c97",
        "type": "reference",
        "site": "clive.tries.fed.wiki",
        "slug": "javascript-modules",
        "title": "Javascript Modules",
        "text": "In the most ubiquitous programming ecosystem, modules have been shoehorned in where they were originally lacking.  As of early 2018, nodejs gradually builds toward ECMAScript Modules.  Guidance for transition from CommonJS to ESM: [https://medium.com/@giltayar/native-es-modules-in-nodejs-status-and-future-directions-part-i-ee5ea3001f71 link]"
      },
      "after": "cbe0be684b38d63b",
      "date": 1636030703978
    },
    {
      "id": "cbe0be684b38d63b",
      "type": "move",
      "order": [
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "11d49465b1e72c97",
        "cbe0be684b38d63b"
      ],
      "date": 1636030707793
    },
    {
      "id": "096c3c53ed275874",
      "type": "add",
      "item": {
        "id": "096c3c53ed275874",
        "type": "reference",
        "site": "clive.tries.fed.wiki",
        "slug": "es6-mixins",
        "title": "ES6 Mixins",
        "text": "Jan Miksovsky is an designer/developer expert at component.kitchen on Web Components. Only interested in coding approaches that can be shared with other people. With emphasis on stylin and reuse.  [https://twitter.com/janmiksovsky page]"
      },
      "after": "cbe0be684b38d63b",
      "date": 1636030724449
    },
    {
      "id": "096c3c53ed275874",
      "type": "move",
      "order": [
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "11d49465b1e72c97",
        "096c3c53ed275874",
        "cbe0be684b38d63b"
      ],
      "date": 1636030728908
    },
    {
      "id": "06d8357fac7f2f52",
      "type": "add",
      "item": {
        "id": "06d8357fac7f2f52",
        "type": "reference",
        "site": "clive.tries.fed.wiki",
        "slug": "michael-jackson-script",
        "title": "Michael Jackson Script",
        "text": "Michael Jackson Script (mjs) is a file name the node js community ascribed to ES6 modules."
      },
      "after": "096c3c53ed275874",
      "date": 1636030735350
    },
    {
      "id": "d08b592f1815a966",
      "type": "add",
      "item": {
        "id": "d08b592f1815a966",
        "type": "reference",
        "site": "clive.tries.fed.wiki",
        "slug": "javascript-tooling",
        "title": "Javascript Tooling",
        "text": "One definitive answer (of many) for building javascript apps. Plausible recommendations and rationale, if you're just starting out (as of April 2018): use babel, webpack, & gulp.  Wiki's current tools are equally plausible: coffeescript, browserify, & grunt.  Related reading also recommend the yarn and webpack combination.  [http://jamesknelson.com/which-build-system-should-i-use-for-my-javascript-app/ blog]"
      },
      "after": "06d8357fac7f2f52",
      "date": 1636030750864
    },
    {
      "id": "cbe0be684b38d63b",
      "type": "move",
      "order": [
        "cbe0be684b38d63b",
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "11d49465b1e72c97",
        "096c3c53ed275874",
        "06d8357fac7f2f52",
        "d08b592f1815a966"
      ],
      "date": 1636030780830
    },
    {
      "type": "edit",
      "id": "cbe0be684b38d63b",
      "item": {
        "type": "paragraph",
        "id": "cbe0be684b38d63b",
        "text": "ES modules bring an official, standardized module system to JavaScript. It took a while to get here, though — nearly 10 years of standardization work."
      },
      "date": 1636030784865
    },
    {
      "type": "edit",
      "id": "cbe0be684b38d63b",
      "item": {
        "type": "paragraph",
        "id": "cbe0be684b38d63b",
        "text": "ES modules bring an official, standardized module system to JavaScript. It took a while to get here, though — nearly 10 years of standardization work. [https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/ page]"
      },
      "date": 1636030794200
    },
    {
      "type": "edit",
      "id": "a181fe215f0b37b4",
      "item": {
        "type": "reference",
        "id": "a181fe215f0b37b4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "outpost-thinking",
        "title": "Outpost Thinking",
        "text": "We've been itching to embrace the ES6 module structures and maybe leave jQuery and CoffeeScript behind in the process. When node inventor Ryan Dahl announced that he was taking a similar fresh look at server-side javascript runtimes, of course we were interested."
      },
      "date": 1636030822394
    },
    {
      "item": {
        "type": "factory",
        "id": "91896be32f3cfda4"
      },
      "id": "91896be32f3cfda4",
      "type": "add",
      "after": "d08b592f1815a966",
      "date": 1636030944849
    },
    {
      "id": "91896be32f3cfda4",
      "type": "move",
      "order": [
        "cbe0be684b38d63b",
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "11d49465b1e72c97",
        "096c3c53ed275874",
        "91896be32f3cfda4",
        "06d8357fac7f2f52",
        "d08b592f1815a966"
      ],
      "date": 1636030947692
    },
    {
      "type": "edit",
      "id": "91896be32f3cfda4",
      "item": {
        "type": "reference",
        "id": "91896be32f3cfda4",
        "site": "wiki.dbbs.co",
        "slug": "elix-es6-mixins",
        "title": "Elix ES6 Mixins",
        "text": "Proof of concept loading a web component into wiki.  [https://component.kitchen/elix component.kitchen/elix] [https://github.com/elix/elix github]"
      },
      "date": 1636030949988
    },
    {
      "id": "06d8357fac7f2f52",
      "type": "move",
      "order": [
        "cbe0be684b38d63b",
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "11d49465b1e72c97",
        "06d8357fac7f2f52",
        "096c3c53ed275874",
        "91896be32f3cfda4",
        "d08b592f1815a966"
      ],
      "date": 1636031146268
    },
    {
      "id": "d08b592f1815a966",
      "type": "move",
      "order": [
        "cbe0be684b38d63b",
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "d08b592f1815a966",
        "11d49465b1e72c97",
        "096c3c53ed275874",
        "91896be32f3cfda4",
        "06d8357fac7f2f52"
      ],
      "date": 1636031410869
    },
    {
      "id": "06d8357fac7f2f52",
      "type": "move",
      "order": [
        "cbe0be684b38d63b",
        "a181fe215f0b37b4",
        "69a4a5d4eadc3ae7",
        "06d8357fac7f2f52",
        "d08b592f1815a966",
        "11d49465b1e72c97",
        "096c3c53ed275874",
        "91896be32f3cfda4"
      ],
      "date": 1636031595688
    },
    {
      "type": "edit",
      "id": "a181fe215f0b37b4",
      "item": {
        "type": "reference",
        "id": "a181fe215f0b37b4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "outpost-thinking",
        "title": "Outpost Thinking",
        "text": "We've been itching to embrace the ES6 module structures and maybe leave jQuery and CoffeeScript behind in the process. When node inventor [[Ryan Dahl]] announced that he was taking a similar fresh look at server-side javascript runtimes, of course we were interested."
      },
      "date": 1669118593446
    },
    {
      "type": "edit",
      "id": "69a4a5d4eadc3ae7",
      "item": {
        "type": "reference",
        "id": "69a4a5d4eadc3ae7",
        "site": "found.ward.bay.wiki.org",
        "slug": "nodes-mistakes",
        "title": "Node's Mistakes",
        "text": "Node.js creator [[Ryan Dahl]] voiced some deep misgivings about his server-side JavaScript runtime engine at the EU JS conference earlier this week in Germany. [https://thenewstack.io/node-js-creator-blasts-node-js-offers-a-secure-typescript-based-alternative/ post]"
      },
      "date": 1669118629334
    }
  ]
}