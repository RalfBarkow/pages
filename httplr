{
  "title": "HTTPLR",
  "story": [
    {
      "type": "paragraph",
      "id": "e03ad803cf56b1ca",
      "text": "an application protocol for reliable transmission of messages using HTTP. [https://xml.coverpages.org/draft-httplr-01.html page]"
    },
    {
      "type": "paragraph",
      "id": "57808b1cd1933f99",
      "text": "The protocol provides a measure of reliability within the client server model of HTTP without recourse to a peer to peer model, where both communicators are HTTP servers."
    },
    {
      "type": "paragraph",
      "id": "9f2091280bf221cd",
      "text": "This document describes an application protocol for guaranteed once and only once transmission of messages using HTTP, something that HTTP alone does not guarantee. It describes a means for both downloading and uploading of messages. It is not concerned with endpoint availability, robustness of components, or details of persistent storage. It is not concerned with message order. "
    },
    {
      "type": "paragraph",
      "id": "e1123029c627c1c3",
      "text": "A characteristic of distributed systems is that senders and receivers of messages can't know with certainty what went wrong in the event of failure, and without catering for agreement, they might not know if anything did go wrong with a transmission. Our primary concern for failure is dealing with partial failure. Partial failure is where one component in the system fails while the others continue to function. The HTTP client-server model has three failing parts, the Client, the Network, and the Server. For example, if the Network fails mid-transmission, a request might be arrive to the Server but not a response to the Client. Or if the Server's firewall rules are mis-configured, Client requests might be rejected out of hand. "
    },
    {
      "type": "paragraph",
      "id": "93688df0fd1312fd",
      "text": "The techniques described here provides a measure of reliability within the client server model of HTTP. Reliable variants of HTTP or protocols layered upon HTTP often require a peer to peer model, where both communicators are HTTP servers. "
    },
    {
      "type": "paragraph",
      "id": "69e038fe0c27dd40",
      "text": "The first published description of a reliable protocol using a HTTP client and server is attributed to Paul Prescod [https://web.archive.org/web/20020603162448/http://www.prescod.net/reliable_http.html archive]. That document 'Reliable delivery in HTTP', along with the author's experiences implementing messaging systems with HTTP and anecdotal descriptions of ad-hoc applications created to handle reliability for HTTP were the basis for this protocol. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "HTTPLR",
        "story": []
      },
      "date": 1692855466525
    },
    {
      "item": {
        "type": "factory",
        "id": "e03ad803cf56b1ca"
      },
      "id": "e03ad803cf56b1ca",
      "type": "add",
      "date": 1692855467781
    },
    {
      "type": "edit",
      "id": "e03ad803cf56b1ca",
      "item": {
        "type": "paragraph",
        "id": "e03ad803cf56b1ca",
        "text": "This document describes HTTPLR revision 01, an application protocol for reliable transmission of messages using HTTP. The protocol provides a measure of reliability within the client server model of HTTP without recourse to a peer to peer model, where both communicators are HTTP servers."
      },
      "date": 1692855473223
    },
    {
      "type": "edit",
      "id": "e03ad803cf56b1ca",
      "item": {
        "type": "paragraph",
        "id": "e03ad803cf56b1ca",
        "text": "This document describes HTTPLR revision 01, an application protocol for reliable transmission of messages using HTTP. The protocol provides a measure of reliability within the client server model of HTTP without recourse to a peer to peer model, where both communicators are HTTP servers. [https://xml.coverpages.org/draft-httplr-01.html page]"
      },
      "date": 1692855480955
    },
    {
      "type": "edit",
      "id": "e03ad803cf56b1ca",
      "item": {
        "type": "paragraph",
        "id": "e03ad803cf56b1ca",
        "text": "an application protocol for reliable transmission of messages using HTTP. [https://xml.coverpages.org/draft-httplr-01.html page]"
      },
      "date": 1692855505609
    },
    {
      "type": "add",
      "id": "57808b1cd1933f99",
      "item": {
        "type": "paragraph",
        "id": "57808b1cd1933f99",
        "text": "The protocol provides a measure of reliability within the client server model of HTTP without recourse to a peer to peer model, where both communicators are HTTP servers."
      },
      "after": "e03ad803cf56b1ca",
      "date": 1692855506035
    },
    {
      "item": {
        "type": "factory",
        "id": "9f2091280bf221cd"
      },
      "id": "9f2091280bf221cd",
      "type": "add",
      "after": "57808b1cd1933f99",
      "date": 1692855583792
    },
    {
      "type": "edit",
      "id": "9f2091280bf221cd",
      "item": {
        "type": "paragraph",
        "id": "9f2091280bf221cd",
        "text": "This document describes an application protocol for guaranteed once and only once transmission of messages using HTTP, something that HTTP alone does not guarantee. It describes a means for both downloading and uploading of messages. It is not concerned with endpoint availability, robustness of components, or details of persistent storage. It is not concerned with message order. "
      },
      "date": 1692855585259
    },
    {
      "item": {
        "type": "factory",
        "id": "e1123029c627c1c3"
      },
      "id": "e1123029c627c1c3",
      "type": "add",
      "after": "9f2091280bf221cd",
      "date": 1692855653053
    },
    {
      "type": "edit",
      "id": "e1123029c627c1c3",
      "item": {
        "type": "paragraph",
        "id": "e1123029c627c1c3",
        "text": "A characteristic of distributed systems is that senders and receivers of messages can't know with certainty what went wrong in the event of failure, and without catering for agreement, they might not know if anything did go wrong with a transmission. Our primary concern for failure is dealing with partial failure. Partial failure is where one component in the system fails while the others continue to function. The HTTP client-server model has three failing parts, the Client, the Network, and the Server. For example, if the Network fails mid-transmission, a request might be arrive to the Server but not a response to the Client. Or if the Server's firewall rules are mis-configured, Client requests might be rejected out of hand. "
      },
      "date": 1692855654689
    },
    {
      "item": {
        "type": "factory",
        "id": "93688df0fd1312fd"
      },
      "id": "93688df0fd1312fd",
      "type": "add",
      "after": "e1123029c627c1c3",
      "date": 1692855663002
    },
    {
      "type": "edit",
      "id": "93688df0fd1312fd",
      "item": {
        "type": "paragraph",
        "id": "93688df0fd1312fd",
        "text": "The techniques described here provides a measure of reliability within the client server model of HTTP. Reliable variants of HTTP or protocols layered upon HTTP often require a peer to peer model, where both communicators are HTTP servers. "
      },
      "date": 1692855664371
    },
    {
      "item": {
        "type": "factory",
        "id": "69e038fe0c27dd40"
      },
      "id": "69e038fe0c27dd40",
      "type": "add",
      "after": "93688df0fd1312fd",
      "date": 1692855671458
    },
    {
      "type": "edit",
      "id": "69e038fe0c27dd40",
      "item": {
        "type": "paragraph",
        "id": "69e038fe0c27dd40",
        "text": "The first published description of a reliable protocol using a HTTP client and server is attributed to Paul Prescod [Prescod]. That document 'Reliable delivery in HTTP', along with the author's experiences implementing messaging systems with HTTP and anecdotal descriptions of ad-hoc applications created to handle reliability for HTTP were the basis for this protocol. "
      },
      "date": 1692855672816
    },
    {
      "type": "edit",
      "id": "69e038fe0c27dd40",
      "item": {
        "type": "paragraph",
        "id": "69e038fe0c27dd40",
        "text": "The first published description of a reliable protocol using a HTTP client and server is attributed to Paul Prescod [https://web.archive.org/web/20020603162448/http://www.prescod.net/reliable_http.html archive]. That document 'Reliable delivery in HTTP', along with the author's experiences implementing messaging systems with HTTP and anecdotal descriptions of ad-hoc applications created to handle reliability for HTTP were the basis for this protocol. "
      },
      "date": 1692855878345
    }
  ]
}