{
  "title": "Input",
  "story": [
    {
      "type": "reference",
      "id": "f085751b7ee3a71d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "entropy-on-a-data-stream",
      "title": "Entropy on a Data Stream",
      "text": "We consider the problem of computing information theoretic functions such as [[Entropy]] on a data stream, using sublinear space. Our first result deals with a measure we call the “entropy norm” of an input stream: it is closely related to entropy but is structurally similar to the well-studied notion of frequency moments. We give a polylogarithmic space one-pass algorithm for estimating this norm under certain conditions on the input stream. We also prove a lower bound that rules out such an algorithm if these conditions do not hold.…"
    },
    {
      "type": "paragraph",
      "id": "80afb83075632451",
      "text": "Algorithms for computational problems on data streams have been the focus of plenty of recent research in several communities, such as theory, databases and networks [1, 5, 2, 12]. In this model of computation, the input is a stream of “items” that is too long to be stored completely in memory, and a typical problem involves computing some statistics on this stream. The main challenge is to design algorithms that are efficient not only in terms of running time, but also in terms of space (i.e., memory usage): sublinear space is mandatory and polylogarithmic space is often the goal."
    },
    {
      "type": "pagefold",
      "id": "3583c4870929922f",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "47eec5ca8efe2437",
      "site": "wiki.ralfbarkow.ch",
      "slug": "peg",
      "title": "PEG",
      "text": "A [[Parser]] has an input stream, a set of rules (generated from an extended **PEG**) that [[recognise]] input [[Structure]] and generate output structures, an output stream to collect generated output, and a current result (semantic value from the most recent [[Expression]]) that can be read and written within rules."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Input",
        "story": []
      },
      "date": 1695448535199
    },
    {
      "item": {
        "type": "factory",
        "id": "f085751b7ee3a71d"
      },
      "id": "f085751b7ee3a71d",
      "type": "add",
      "date": 1695448540333
    },
    {
      "type": "edit",
      "id": "f085751b7ee3a71d",
      "item": {
        "type": "reference",
        "id": "f085751b7ee3a71d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "entropy-on-a-data-stream",
        "title": "Entropy on a Data Stream",
        "text": "We consider the problem of computing information theoretic functions such as entropy on a data stream, using sublinear space. Our first result deals with a measure we call the “entropy norm” of an input stream: it is closely related to entropy but is structurally similar to the well-studied notion of frequency moments. We give a polylogarithmic space one-pass algorithm for estimating this norm under certain conditions on the input stream. We also prove a lower bound that rules out such an algorithm if these conditions do not hold. Our second group of res"
      },
      "date": 1695448542700
    },
    {
      "type": "edit",
      "id": "f085751b7ee3a71d",
      "item": {
        "type": "reference",
        "id": "f085751b7ee3a71d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "entropy-on-a-data-stream",
        "title": "Entropy on a Data Stream",
        "text": "We consider the problem of computing information theoretic functions such as [[Entropy]] on a data stream, using sublinear space. Our first result deals with a measure we call the “entropy norm” of an input stream: it is closely related to entropy but is structurally similar to the well-studied notion of frequency moments. We give a polylogarithmic space one-pass algorithm for estimating this norm under certain conditions on the input stream. We also prove a lower bound that rules out such an algorithm if these conditions do not hold. Our second group of res"
      },
      "date": 1695448575548
    },
    {
      "type": "edit",
      "id": "f085751b7ee3a71d",
      "item": {
        "type": "reference",
        "id": "f085751b7ee3a71d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "entropy-on-a-data-stream",
        "title": "Entropy on a Data Stream",
        "text": "We consider the problem of computing information theoretic functions such as [[Entropy]] on a data stream, using sublinear space. Our first result deals with a measure we call the “entropy norm” of an input stream: it is closely related to entropy but is structurally similar to the well-studied notion of frequency moments. We give a polylogarithmic space one-pass algorithm for estimating this norm under certain conditions on the input stream. We also prove a lower bound that rules out such an algorithm if these conditions do not hold.…"
      },
      "date": 1695448606210
    },
    {
      "id": "80afb83075632451",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "80afb83075632451",
        "text": "Algorithms for computational problems on data streams have been the focus of plenty of recent research in several communities, such as theory, databases and networks [1, 5, 2, 12]. In this model of computation, the [[Input]] is a stream of “items” that is too long to be stored completely in memory, and a typical problem involves computing some statistics on this stream. The main challenge is to design algorithms that are efficient not only in terms of running time, but also in terms of space (i.e., memory usage): sublinear space is mandatory and polylogarithmic space is often the goal."
      },
      "after": "f085751b7ee3a71d",
      "attribution": {
        "page": "Entropy on a Data Stream"
      },
      "date": 1695448616130
    },
    {
      "type": "edit",
      "id": "80afb83075632451",
      "item": {
        "type": "paragraph",
        "id": "80afb83075632451",
        "text": "Algorithms for computational problems on data streams have been the focus of plenty of recent research in several communities, such as theory, databases and networks [1, 5, 2, 12]. In this model of computation, the input is a stream of “items” that is too long to be stored completely in memory, and a typical problem involves computing some statistics on this stream. The main challenge is to design algorithms that are efficient not only in terms of running time, but also in terms of space (i.e., memory usage): sublinear space is mandatory and polylogarithmic space is often the goal."
      },
      "date": 1695448643084
    },
    {
      "item": {
        "type": "factory",
        "id": "3583c4870929922f"
      },
      "id": "3583c4870929922f",
      "type": "add",
      "after": "80afb83075632451",
      "date": 1695454137734
    },
    {
      "type": "edit",
      "id": "3583c4870929922f",
      "item": {
        "type": "pagefold",
        "id": "3583c4870929922f",
        "text": "~"
      },
      "date": 1695454143596
    },
    {
      "item": {
        "type": "factory",
        "id": "47eec5ca8efe2437"
      },
      "id": "47eec5ca8efe2437",
      "type": "add",
      "after": "3583c4870929922f",
      "date": 1695454144961
    },
    {
      "type": "edit",
      "id": "47eec5ca8efe2437",
      "item": {
        "type": "reference",
        "id": "47eec5ca8efe2437",
        "site": "wiki.ralfbarkow.ch",
        "slug": "peg",
        "title": "PEG",
        "text": "A [[Parser]] has an input stream, a set of rules (generated from an extended **PEG**) that [[recognise]] input [[Structure]] and generate output structures, an output stream to collect generated output, and a current result (semantic value from the most recent [[Expression]]) that can be read and written within rules."
      },
      "date": 1695454147993
    }
  ]
}