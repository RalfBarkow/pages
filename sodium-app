{
  "title": "Sodium App",
  "story": [
    {
      "type": "paragraph",
      "id": "b91591a281ba469d",
      "text": "We add code from the [[Sodium]] FRP examples (typescript port) [https://github.com/graforlock/sodium-typescript-examples github] to the [[Speed Bot]] App."
    },
    {
      "type": "code",
      "id": "07cddfd6873a7c2d",
      "text": "class Button {\n    constructor(name) {\n        this.button = document.createElement('button');\n        this.button.textContent = name;\n        this.sClickedSink = new Sodium.StreamSink();\n        this.sClicked = this.sClickedSink;\n        this.button.addEventListener('click', (event) => {\n            this.sClickedSink.send(Sodium.Unit.UNIT);\n        });\n\n        this.render();\n    }\n\n    render() {\n        document.body.appendChild(this.button);\n        return this;\n    }\n}\n\nexport default Button;\n"
    },
    {
      "type": "markdown",
      "id": "d03dd1518431e50c",
      "text": "# Frame"
    },
    {
      "type": "frame",
      "id": "5dc076f0edb38ad0",
      "text": "//localhost:3000/assets/pages/sodium-cell/sodium-app.html"
    },
    {
      "type": "paragraph",
      "id": "3b98af7b8d5465cd",
      "text": "Uncaught TypeError: can't access property \"PriorityQueue\", f is undefined\n    i Transaction.ts:40\n    run Transaction.ts:213\n    send StreamSink.ts:28\n    Button Button.js:8\n    Button Button.js:7\n    init sodium-app.html:48\n    start sodium-app.html:478\n    <anonymous> sodium-app.html:492\nTransaction.ts:40:2\n"
    },
    {
      "type": "paragraph",
      "id": "2bcd2de13f86b503",
      "text": "StreamSink vs StreamWithSend [http://sodium.nz/t/streamsink-vs-streamwithsend/338 page]"
    },
    {
      "type": "paragraph",
      "id": "0ee5a24957db4e10",
      "text": "Add a runnable that will be executed whenever a transaction is started. That runnable may start transactions itself, which will not cause the hooks to be run recursively. The main use case of this is the implementation of a time/alarm system."
    },
    {
      "type": "paragraph",
      "id": "f39b7ed2aeb5470b",
      "text": "Priority Queue [https://github.com/davidnguyen11/p-queue-ts github] [https://en.wikipedia.org/wiki/Priority_queue wikipedia]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Sodium App",
        "story": []
      },
      "date": 1710152666264
    },
    {
      "id": "5dc076f0edb38ad0",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "5dc076f0edb38ad0",
        "text": "http://localhost:3000/assets/pages/sodium-cell/sodium-app.html"
      },
      "attribution": {
        "page": "2024-03-11"
      },
      "date": 1710152668831
    },
    {
      "type": "edit",
      "id": "5dc076f0edb38ad0",
      "item": {
        "type": "frame",
        "id": "5dc076f0edb38ad0",
        "text": "//localhost:3000/assets/pages/sodium-cell/sodium-app.html"
      },
      "date": 1710152681504
    },
    {
      "item": {
        "type": "factory",
        "id": "07cddfd6873a7c2d"
      },
      "id": "07cddfd6873a7c2d",
      "type": "add",
      "after": "5dc076f0edb38ad0",
      "date": 1710310796738
    },
    {
      "type": "edit",
      "id": "07cddfd6873a7c2d",
      "item": {
        "type": "code",
        "id": "07cddfd6873a7c2d",
        "text": "class Button {\n    constructor(name) {\n        this.button = document.createElement('button');\n        this.button.textContent = name;\n        this.sClickedSink = new Sodium.StreamSink();\n        this.sClicked = this.sClickedSink;\n        this.button.addEventListener('click', (event) => {\n            this.sClickedSink.send(Sodium.Unit.UNIT);\n        });\n\n        this.render();\n    }\n\n    render() {\n        document.body.appendChild(this.button);\n        return this;\n    }\n}\n\nexport default Button;\n"
      },
      "date": 1710310799022
    },
    {
      "id": "07cddfd6873a7c2d",
      "type": "move",
      "order": [
        "07cddfd6873a7c2d",
        "5dc076f0edb38ad0"
      ],
      "date": 1710310810550
    },
    {
      "item": {
        "type": "factory",
        "id": "d03dd1518431e50c"
      },
      "id": "d03dd1518431e50c",
      "type": "add",
      "after": "5dc076f0edb38ad0",
      "date": 1710310815921
    },
    {
      "type": "edit",
      "id": "d03dd1518431e50c",
      "item": {
        "type": "markdown",
        "id": "d03dd1518431e50c",
        "text": "# Frame"
      },
      "date": 1710310822844
    },
    {
      "id": "d03dd1518431e50c",
      "type": "move",
      "order": [
        "07cddfd6873a7c2d",
        "d03dd1518431e50c",
        "5dc076f0edb38ad0"
      ],
      "date": 1710310826725
    },
    {
      "item": {
        "type": "factory",
        "id": "2bcd2de13f86b503"
      },
      "id": "2bcd2de13f86b503",
      "type": "add",
      "after": "5dc076f0edb38ad0",
      "date": 1710310867057
    },
    {
      "type": "edit",
      "id": "2bcd2de13f86b503",
      "item": {
        "type": "paragraph",
        "id": "2bcd2de13f86b503",
        "text": "\nStreamSink vs StreamWithSend "
      },
      "date": 1710310870261
    },
    {
      "id": "2bcd2de13f86b503",
      "type": "move",
      "order": [
        "07cddfd6873a7c2d",
        "2bcd2de13f86b503",
        "d03dd1518431e50c",
        "5dc076f0edb38ad0"
      ],
      "date": 1710310874815
    },
    {
      "type": "edit",
      "id": "2bcd2de13f86b503",
      "item": {
        "type": "paragraph",
        "id": "2bcd2de13f86b503",
        "text": "StreamSink vs StreamWithSend [http://sodium.nz/t/streamsink-vs-streamwithsend/338 page]"
      },
      "date": 1710310887552
    },
    {
      "type": "fork",
      "date": 1710312281439
    },
    {
      "type": "add",
      "id": "f39b7ed2aeb5470b",
      "item": {
        "type": "paragraph",
        "id": "f39b7ed2aeb5470b",
        "text": "Priority Queue"
      },
      "after": "2bcd2de13f86b503",
      "date": 1710351236005
    },
    {
      "type": "edit",
      "id": "f39b7ed2aeb5470b",
      "item": {
        "type": "paragraph",
        "id": "f39b7ed2aeb5470b",
        "text": "Priority Queue [https://github.com/davidnguyen11/p-queue-ts github]"
      },
      "date": 1710351248245
    },
    {
      "type": "edit",
      "id": "f39b7ed2aeb5470b",
      "item": {
        "type": "paragraph",
        "id": "f39b7ed2aeb5470b",
        "text": "Priority Queue [https://github.com/davidnguyen11/p-queue-ts github] [https://en.wikipedia.org/wiki/Priority_queue wikipedia]"
      },
      "date": 1710351291669
    },
    {
      "id": "b91591a281ba469d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b91591a281ba469d",
        "text": "We add code from the "
      },
      "attribution": {
        "page": "scratch"
      },
      "date": 1710352818429
    },
    {
      "type": "edit",
      "id": "b91591a281ba469d",
      "item": {
        "type": "paragraph",
        "id": "b91591a281ba469d",
        "text": "We add code from the Sodium FRP examples (typescript port)"
      },
      "date": 1710352850343
    },
    {
      "type": "edit",
      "id": "b91591a281ba469d",
      "item": {
        "type": "paragraph",
        "id": "b91591a281ba469d",
        "text": "We add code from the Sodium FRP examples (typescript port) [https://github.com/graforlock/sodium-typescript-examples github] to the [[Speed Bot]]."
      },
      "date": 1710352868168
    },
    {
      "type": "edit",
      "id": "b91591a281ba469d",
      "item": {
        "type": "paragraph",
        "id": "b91591a281ba469d",
        "text": "We add code from the Sodium FRP examples (typescript port) [https://github.com/graforlock/sodium-typescript-examples github] to the [[Speed Bot]] App."
      },
      "date": 1710352884789
    },
    {
      "type": "edit",
      "id": "b91591a281ba469d",
      "item": {
        "type": "paragraph",
        "id": "b91591a281ba469d",
        "text": "We add code from the [[Sodium]] FRP examples (typescript port) [https://github.com/graforlock/sodium-typescript-examples github] to the [[Speed Bot]] App."
      },
      "date": 1710352921081
    },
    {
      "item": {
        "type": "factory",
        "id": "3b98af7b8d5465cd"
      },
      "id": "3b98af7b8d5465cd",
      "type": "add",
      "after": "5dc076f0edb38ad0",
      "date": 1710485711881
    },
    {
      "type": "edit",
      "id": "3b98af7b8d5465cd",
      "item": {
        "type": "paragraph",
        "id": "3b98af7b8d5465cd",
        "text": "Uncaught TypeError: can't access property \"PriorityQueue\", f is undefined\n    i Transaction.ts:40\n    run Transaction.ts:213\n    send StreamSink.ts:28\n    Button Button.js:8\n    Button Button.js:7\n    init sodium-app.html:48\n    start sodium-app.html:478\n    <anonymous> sodium-app.html:492\nTransaction.ts:40:2\n"
      },
      "date": 1710485713944
    },
    {
      "id": "2bcd2de13f86b503",
      "type": "move",
      "order": [
        "b91591a281ba469d",
        "07cddfd6873a7c2d",
        "f39b7ed2aeb5470b",
        "d03dd1518431e50c",
        "5dc076f0edb38ad0",
        "3b98af7b8d5465cd",
        "2bcd2de13f86b503"
      ],
      "date": 1710485828027
    },
    {
      "id": "f39b7ed2aeb5470b",
      "type": "move",
      "order": [
        "b91591a281ba469d",
        "07cddfd6873a7c2d",
        "d03dd1518431e50c",
        "5dc076f0edb38ad0",
        "3b98af7b8d5465cd",
        "2bcd2de13f86b503",
        "f39b7ed2aeb5470b"
      ],
      "date": 1710485831292
    },
    {
      "type": "add",
      "id": "0ee5a24957db4e10",
      "item": {
        "type": "paragraph",
        "id": "0ee5a24957db4e10",
        "text": "Add a runnable that will be executed whenever a transaction is started.\n   * That runnable may start transactions itself, which will not cause the\n   * hooks to be run recursively.\n   *\n   * The main use case of this is the implementation of a time/alarm system.\n   */"
      },
      "after": "2bcd2de13f86b503",
      "date": 1710485906143
    },
    {
      "type": "edit",
      "id": "0ee5a24957db4e10",
      "item": {
        "type": "paragraph",
        "id": "0ee5a24957db4e10",
        "text": "Add a runnable that will be executed whenever a transaction is started. That runnable may start transactions itself, which will not cause the hooks to be run recursively. The main use case of this is the implementation of a time/alarm system."
      },
      "date": 1710486020279
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1710491187038
    }
  ]
}