{
  "title": "Three Years of LFI",
  "story": [
    {
      "type": "paragraph",
      "id": "e2a3887d74b2cbf4",
      "text": "In which we ramble towards a vision for sustainable software development. What if you could organize engineering around learning and around incidents? Status of this page: scattered seeds, mostly incoherent"
    },
    {
      "type": "paragraph",
      "id": "bd38170d988c3888",
      "text": "Everything humans create becomes tangled and complex."
    },
    {
      "type": "paragraph",
      "id": "ba05deba1413923a",
      "text": "Complexity is the natural state. It is necessary for sustainability. Embrace it instead of resist it."
    },
    {
      "type": "paragraph",
      "id": "682d584f64724015",
      "text": "Insight: code, all code, is tightly coupled to the human brains that created it. It takes exceptional skill to write code that another programmer can get their heads around easily."
    },
    {
      "type": "paragraph",
      "id": "29184d2614574d31",
      "text": "New definition for tech debt and legacy code: any code you have that has been separated from its original authors."
    },
    {
      "type": "paragraph",
      "id": "e3941312e4f11e69",
      "text": "How Complex Systems Fail [https://how.complexsystems.fail fail]"
    },
    {
      "type": "paragraph",
      "id": "9aef3e0ebb2dd492",
      "text": "Complex systems cannot be understood completely, have emergent behavior, feature feedback loops with non-linear behavior. Efforts to manage the complexity with simplicity fail."
    },
    {
      "type": "paragraph",
      "id": "b97c8d49e5c0e061",
      "text": "Your business is in production. Everything else is a simulation."
    },
    {
      "type": "paragraph",
      "id": "49a491f8ae77a0bd",
      "text": "All software engineering has become operations. We do not ship software. We run the software. CS curriculum and bootcamps focus on learning how to write software. But we have to run it. The only place to learn to run software is in production."
    },
    {
      "type": "paragraph",
      "id": "fcb2486dc36ce21e",
      "text": "In a dev environment, we can reset the universe and start with an empty database. In production we have to migrate the data with every change to the schema."
    },
    {
      "type": "paragraph",
      "id": "4e147fbc72645274",
      "text": "Software development has never been sustainable. Businesses have demonstrated for decades their manifest preference for unmaintainable code."
    },
    {
      "type": "paragraph",
      "id": "35d11b3db5e2d6cf",
      "text": "Everyone builds a chicken bus [link]"
    },
    {
      "type": "paragraph",
      "id": "442df1d73522c8f2",
      "text": "Role of LFI"
    },
    {
      "type": "paragraph",
      "id": "25d7d2fbe609c738",
      "text": "Role of LFI for individual teams:"
    },
    {
      "type": "paragraph",
      "id": "57ea8148a9e9420a",
      "text": "Continuous apprenticeship with the experts helping bring novices up to a level of comfort working in production. The incident is anywhere reality surprises us. We invest extra effort around those moments of surprise to keep our design and our plan calibrated with production. We know the monitoring is incomplete and we have to get good, continually improving how we adjust to production."
    },
    {
      "type": "paragraph",
      "id": "9c2bdc5ba4424fc6",
      "text": "Role of LFI for CTO:"
    },
    {
      "type": "paragraph",
      "id": "4f61b4c261398680",
      "text": "Signal for CTO about where to allocate resources and how to monitor the balance of investment between reliability and sustainable engineering practice and new features."
    },
    {
      "type": "paragraph",
      "id": "6c5c3a23d9ad7166",
      "text": "Role of LFI for vendors:"
    },
    {
      "type": "paragraph",
      "id": "64970afef3a0ef41",
      "text": "Your company runs your software on someone else's hardware. This means that in addition to understanding loops, conditionals, variable assignment, functional and object-oriented abstractions, you have to also understand how to navigate the customer support of your vendors."
    },
    {
      "type": "paragraph",
      "id": "c2b6ca9ff51f8f5b",
      "text": "At some point you will have a problem affecting your customers where you can't tell if it is your code or something wrong with the vendor. And you will need to know how to reach them and how to run an incident with them. Coordination across vendors support portals will slow down your incident response. Plan for this. Or you are just at the whim of the vendor."
    },
    {
      "type": "paragraph",
      "id": "974793faacf84a58",
      "text": "Outsourcing a tech to vendors does not really get you out of requiring local expertise. You change the expertise, but do not escape the need for it."
    },
    {
      "type": "paragraph",
      "id": "28f48819208fb4bb",
      "text": "Role of LFI for platforms:"
    },
    {
      "type": "paragraph",
      "id": "650fe5dffc22c369",
      "text": "Your internal platforms are under funded. You don't have a cost model in place to justify the creation of effective docs or internal customer support."
    },
    {
      "type": "paragraph",
      "id": "e47d997b58465c40",
      "text": "as for vendors, so for internal platforms."
    },
    {
      "type": "paragraph",
      "id": "f5f943f9a59068f5",
      "text": "self serve means you're on your own when it breaks."
    },
    {
      "type": "paragraph",
      "id": "6e991004b4620435",
      "text": "self-serve also means tragedy of the commons."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Three Years of LFI",
        "story": []
      },
      "date": 1716263799203
    },
    {
      "item": {
        "type": "factory",
        "id": "e2a3887d74b2cbf4"
      },
      "id": "e2a3887d74b2cbf4",
      "type": "add",
      "date": 1716263800682
    },
    {
      "type": "edit",
      "id": "e2a3887d74b2cbf4",
      "item": {
        "type": "paragraph",
        "id": "e2a3887d74b2cbf4",
        "text": "In which we ramble towards a vision for sustainable software development. What if you could organize engineering around learning and around incidents?"
      },
      "date": 1716263857118
    },
    {
      "type": "add",
      "id": "bd38170d988c3888",
      "item": {
        "type": "paragraph",
        "id": "bd38170d988c3888",
        "text": "Everything humans create becomes tangled and complex."
      },
      "after": "e2a3887d74b2cbf4",
      "date": 1716263975278
    },
    {
      "type": "add",
      "id": "ba05deba1413923a",
      "item": {
        "type": "paragraph",
        "id": "ba05deba1413923a",
        "text": "Complexity is the natural state. It is necessary for sustainability. Embrace it instead of resist it."
      },
      "after": "bd38170d988c3888",
      "date": 1716264026303
    },
    {
      "type": "add",
      "id": "e3941312e4f11e69",
      "item": {
        "type": "paragraph",
        "id": "e3941312e4f11e69",
        "text": "[https://how.complexsystems.fail fail]"
      },
      "after": "ba05deba1413923a",
      "date": 1716264052712
    },
    {
      "type": "add",
      "id": "9aef3e0ebb2dd492",
      "item": {
        "type": "paragraph",
        "id": "9aef3e0ebb2dd492",
        "text": "Complex systems cannot be understood completely, have emergent behavior, feature feedback loops with non-linear behavior. Efforts to manage the complexity with simplicity fail."
      },
      "after": "e3941312e4f11e69",
      "date": 1716264143210
    },
    {
      "type": "add",
      "id": "b97c8d49e5c0e061",
      "item": {
        "type": "paragraph",
        "id": "b97c8d49e5c0e061",
        "text": "Your business is in production. Everything else is a simulation."
      },
      "after": "9aef3e0ebb2dd492",
      "date": 1716264273580
    },
    {
      "type": "add",
      "id": "49a491f8ae77a0bd",
      "item": {
        "type": "paragraph",
        "id": "49a491f8ae77a0bd",
        "text": "All software engineering has become operations. We do not ship software. We run the software. CS curriculum and bootcamps focus on learning how to write software. But we have to run it. The only place to learn to run software is in production."
      },
      "after": "b97c8d49e5c0e061",
      "date": 1716264381498
    },
    {
      "type": "add",
      "id": "fcb2486dc36ce21e",
      "item": {
        "type": "paragraph",
        "id": "fcb2486dc36ce21e",
        "text": "In a dev environment, we can reset the universe and start with an empty database. In production we have to migrate the data with every change to the schema."
      },
      "after": "49a491f8ae77a0bd",
      "date": 1716264429618
    },
    {
      "type": "edit",
      "id": "e3941312e4f11e69",
      "item": {
        "type": "paragraph",
        "id": "e3941312e4f11e69",
        "text": "How Complex Systems Fail [https://how.complexsystems.fail fail]"
      },
      "date": 1716264562984
    },
    {
      "type": "add",
      "id": "4e147fbc72645274",
      "item": {
        "type": "paragraph",
        "id": "4e147fbc72645274",
        "text": "Software development has never been sustainable. Businesses have demonstrated for decades their manifest preference for unmaintainable code."
      },
      "after": "fcb2486dc36ce21e",
      "date": 1716264753215
    },
    {
      "type": "add",
      "id": "35d11b3db5e2d6cf",
      "item": {
        "type": "paragraph",
        "id": "35d11b3db5e2d6cf",
        "text": "Everyone builds a chicken bus [link]"
      },
      "after": "4e147fbc72645274",
      "date": 1716264808261
    },
    {
      "type": "add",
      "id": "442df1d73522c8f2",
      "item": {
        "type": "paragraph",
        "id": "442df1d73522c8f2",
        "text": "Role of LFI"
      },
      "after": "35d11b3db5e2d6cf",
      "date": 1716264827591
    },
    {
      "type": "add",
      "id": "25d7d2fbe609c738",
      "item": {
        "type": "paragraph",
        "id": "25d7d2fbe609c738",
        "text": "Continuous apprenticeship with the experts helping bring novices up to a level of comfort working in production. The incident is anywhere reality surprises us. We invest extra effort around those moments of surprise to keep our design and our plan calibrated with production. We know the monitoring is incomplete and we have to get good, continually improving how we adjust to production."
      },
      "after": "442df1d73522c8f2",
      "date": 1716265007522
    },
    {
      "type": "add",
      "id": "9c2bdc5ba4424fc6",
      "item": {
        "type": "paragraph",
        "id": "9c2bdc5ba4424fc6",
        "text": "Signal for CTO about where to allocate resources and how to monitor the balance of investment between reliability and sustainable engineering practice and new features."
      },
      "after": "25d7d2fbe609c738",
      "date": 1716265106312
    },
    {
      "type": "edit",
      "id": "e2a3887d74b2cbf4",
      "item": {
        "type": "paragraph",
        "id": "e2a3887d74b2cbf4",
        "text": "In which we ramble towards a vision for sustainable software development. What if you could organize engineering around learning and around incidents? Status of this page: scattered seeds, mostly incoherent"
      },
      "date": 1716265145541
    },
    {
      "type": "edit",
      "id": "25d7d2fbe609c738",
      "item": {
        "type": "paragraph",
        "id": "25d7d2fbe609c738",
        "text": "Role of LFI for individual teams:"
      },
      "date": 1716265205216
    },
    {
      "type": "add",
      "id": "57ea8148a9e9420a",
      "item": {
        "type": "paragraph",
        "id": "57ea8148a9e9420a",
        "text": "Continuous apprenticeship with the experts helping bring novices up to a level of comfort working in production. The incident is anywhere reality surprises us. We invest extra effort around those moments of surprise to keep our design and our plan calibrated with production. We know the monitoring is incomplete and we have to get good, continually improving how we adjust to production."
      },
      "after": "25d7d2fbe609c738",
      "date": 1716265207657
    },
    {
      "type": "edit",
      "id": "9c2bdc5ba4424fc6",
      "item": {
        "type": "paragraph",
        "id": "9c2bdc5ba4424fc6",
        "text": "Role of LFI for CTO:"
      },
      "date": 1716265214934
    },
    {
      "type": "add",
      "id": "4f61b4c261398680",
      "item": {
        "type": "paragraph",
        "id": "4f61b4c261398680",
        "text": "Signal for CTO about where to allocate resources and how to monitor the balance of investment between reliability and sustainable engineering practice and new features."
      },
      "after": "9c2bdc5ba4424fc6",
      "date": 1716265216992
    },
    {
      "type": "add",
      "id": "6c5c3a23d9ad7166",
      "item": {
        "type": "paragraph",
        "id": "6c5c3a23d9ad7166",
        "text": "Role of LFI for vendors:"
      },
      "after": "4f61b4c261398680",
      "date": 1716265232205
    },
    {
      "type": "add",
      "id": "64970afef3a0ef41",
      "item": {
        "type": "paragraph",
        "id": "64970afef3a0ef41",
        "text": "Your company runs your software on someone else's hardware. This means that in addition to understanding loops, conditionals, variable assignment, functional and object-oriented abstractions, you have to also understand how to navigate the customer support of your vendors."
      },
      "after": "6c5c3a23d9ad7166",
      "date": 1716265321739
    },
    {
      "type": "add",
      "id": "28f48819208fb4bb",
      "item": {
        "type": "paragraph",
        "id": "28f48819208fb4bb",
        "text": "Role of LFI for platforms:"
      },
      "after": "64970afef3a0ef41",
      "date": 1716265326605
    },
    {
      "type": "add",
      "id": "650fe5dffc22c369",
      "item": {
        "type": "paragraph",
        "id": "650fe5dffc22c369",
        "text": "Your internal platforms are under funded. You don't have a cost model in place to justify the creation of effective docs or internal customer support."
      },
      "after": "28f48819208fb4bb",
      "date": 1716265396135
    },
    {
      "type": "add",
      "id": "f5f943f9a59068f5",
      "item": {
        "type": "paragraph",
        "id": "f5f943f9a59068f5",
        "text": "self serve means you're on your own when it breaks."
      },
      "after": "650fe5dffc22c369",
      "date": 1716265408281
    },
    {
      "type": "add",
      "id": "6e991004b4620435",
      "item": {
        "type": "paragraph",
        "id": "6e991004b4620435",
        "text": "self-serve also means tragedy of the commons."
      },
      "after": "f5f943f9a59068f5",
      "date": 1716265418519
    },
    {
      "type": "add",
      "id": "c2b6ca9ff51f8f5b",
      "item": {
        "type": "paragraph",
        "id": "c2b6ca9ff51f8f5b",
        "text": "At some point you will have a problem affecting your customers where you can't tell if it is your code or something wrong with the vendor. And you will need to know how to reach them and how to run an incident with them. Coordination across vendors support portals will slow down your incident response. Plan for this."
      },
      "after": "64970afef3a0ef41",
      "date": 1716265555385
    },
    {
      "type": "edit",
      "id": "c2b6ca9ff51f8f5b",
      "item": {
        "type": "paragraph",
        "id": "c2b6ca9ff51f8f5b",
        "text": "At some point you will have a problem affecting your customers where you can't tell if it is your code or something wrong with the vendor. And you will need to know how to reach them and how to run an incident with them. Coordination across vendors support portals will slow down your incident response. Plan for this. Or you are just at the whim of the vendor."
      },
      "date": 1716265594177
    },
    {
      "type": "add",
      "id": "e47d997b58465c40",
      "item": {
        "type": "paragraph",
        "id": "e47d997b58465c40",
        "text": "as for vendors, so for internal platforms."
      },
      "after": "650fe5dffc22c369",
      "date": 1716265613910
    },
    {
      "type": "add",
      "id": "974793faacf84a58",
      "item": {
        "type": "paragraph",
        "id": "974793faacf84a58",
        "text": "Outsourcing a tech to vendors does not really get you out of requiring local expertise. You change the expertise, but do not escape the need for it."
      },
      "after": "c2b6ca9ff51f8f5b",
      "date": 1716265697606
    },
    {
      "type": "add",
      "id": "682d584f64724015",
      "item": {
        "type": "paragraph",
        "id": "682d584f64724015",
        "text": "Insight: code, all code, is tightly coupled to the human brains that created it. It takes exceptional skill to write code that another programmer can get their heads around easily."
      },
      "after": "ba05deba1413923a",
      "date": 1716265805533
    },
    {
      "type": "add",
      "id": "29184d2614574d31",
      "item": {
        "type": "paragraph",
        "id": "29184d2614574d31",
        "text": "New definition for tech debt and legacy code: any code you have that has been separated from its original authors."
      },
      "after": "682d584f64724015",
      "date": 1716265854977
    },
    {
      "type": "fork",
      "site": "lfi.wiki.dbbs.co",
      "date": 1716471017095
    }
  ]
}