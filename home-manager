{
  "title": "Home Manager",
  "story": [
    {
      "type": "markdown",
      "id": "4b90b53135b07bab",
      "text": "# Installation"
    },
    {
      "type": "paragraph",
      "id": "dbdc99f61d4b7401",
      "text": "Follow the [https://github.com/nix-community/home-manager#installation official guide]"
    },
    {
      "type": "markdown",
      "id": "36f9e0e4922c2a94",
      "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\n1. Add the appropriate Home Manager channel\n\n1. Install Home Manager and create the first Home Manager generation\n\n"
    },
    {
      "type": "markdown",
      "id": "5d9849b0d2d92b41",
      "text": "Your configuration is stored in `~/.config/nixpkgs/home.nix`. Each time you modify it, rerun `home-manager switch` for changes to have effect. "
    },
    {
      "type": "markdown",
      "id": "1b6fd5658c01fe6d",
      "text": "Note that to work correctly, home-manager needs your shell to source `~/.nix-profile/etc/profile.d/hm-session-vars.sh`. The most convenient way to do so it to have home-manager manage your whole shell configuration, eg `programs.bash.enable = true;` or `programs.zsh.enable = true;`. But in this case your whole bashrc is managed with Home Manager: the years of customization you accumulated in your former .bashrc must be migrated to Home Manager options, which may take some time."
    },
    {
      "type": "pagefold",
      "id": "8a66a66d77e3b754",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "beb352151fdc694b",
      "text": "Home Manager using Nix. [https://github.com/nix-community/home-manager github]"
    },
    {
      "type": "paragraph",
      "id": "a259908fead00e8a",
      "text": "Home-Manager [https://github.com/MatthiasBenaets/nixos-config/blob/master/darwin.org#home-manager github] (nixos-config / darwin.org)"
    },
    {
      "type": "paragraph",
      "id": "6d20b82ffbcebb4d",
      "text": "nix-darwin module [https://nix-community.github.io/home-manager/index.html#sec-install-nix-darwin-module page]"
    },
    {
      "type": "code",
      "id": "cfdc05727a42e170",
      "text": "home-manager switch"
    },
    {
      "type": "paragraph",
      "id": "e1182821352cd620",
      "text": "Keeping your Home Manager home.nix in ~/.config/nixpkgs is deprecated.\nPlease move it to ~/.config/home-manager"
    },
    {
      "type": "code",
      "id": "5fd6ca688b280d58",
      "text": "nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager"
    },
    {
      "type": "code",
      "id": "2c97a3604c91dcc4",
      "text": "nix-channel --update"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Home Manager",
        "story": []
      },
      "date": 1636018791071
    },
    {
      "item": {
        "type": "factory",
        "id": "4b90b53135b07bab"
      },
      "id": "4b90b53135b07bab",
      "type": "add",
      "date": 1636018797891
    },
    {
      "type": "edit",
      "id": "4b90b53135b07bab",
      "item": {
        "type": "markdown",
        "id": "4b90b53135b07bab",
        "text": "# Installation"
      },
      "date": 1636018804357
    },
    {
      "item": {
        "type": "factory",
        "id": "36f9e0e4922c2a94"
      },
      "id": "36f9e0e4922c2a94",
      "type": "add",
      "after": "4b90b53135b07bab",
      "date": 1636018813175
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n    Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like nix-instantiate '<nixpkgs>' -A hello without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\n    Note that Nix 2.4 (nixUnstable) is not yet supported.\n"
      },
      "date": 1636018815156
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like nix-instantiate '<nixpkgs>' -A hello without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\nNote that Nix 2.4 (nixUnstable) is not yet supported.\n"
      },
      "date": 1636018839892
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\nNote that Nix 2.4 (nixUnstable) is not yet supported.\n"
      },
      "date": 1636018865432
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\n\n"
      },
      "date": 1636019433162
    },
    {
      "id": "dbdc99f61d4b7401",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dbdc99f61d4b7401",
        "text": "Follow the [https://github.com/nix-community/home-manager#installation official guide]"
      },
      "after": "4b90b53135b07bab",
      "date": 1636020603080
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n"
      },
      "date": 1636020642279
    },
    {
      "type": "add",
      "id": "1ecc842b36305825",
      "item": {
        "type": "markdown",
        "id": "1ecc842b36305825",
        "text": "1. Add the appropriate Home Manager channel. \n\n"
      },
      "after": "36f9e0e4922c2a94",
      "date": 1636020645710
    },
    {
      "type": "remove",
      "id": "1ecc842b36305825",
      "date": 1636020652247
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n1. Add the appropriate Home Manager channel. \n\n"
      },
      "date": 1636020653866
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\n1. Add the appropriate Home Manager channel. \n\n"
      },
      "date": 1636020659763
    },
    {
      "type": "edit",
      "id": "36f9e0e4922c2a94",
      "item": {
        "type": "markdown",
        "id": "36f9e0e4922c2a94",
        "text": "Currently the easiest way to install Home Manager is as follows:\n\n1. Make sure you have a working Nix installation. Specifically, make sure that your user is able to build and install Nix packages. For example, you should be able to successfully run a command like `nix-instantiate '<nixpkgs>' -A hello` without having to switch to the root user. For a multi-user install of Nix this means that your user must be covered by the allowed-users Nix option. On NixOS you can control this option using the nix.allowedUsers system option.\n\n1. Add the appropriate Home Manager channel\n\n1. Install Home Manager and create the first Home Manager generation\n\n"
      },
      "date": 1636020701282
    },
    {
      "item": {
        "type": "factory",
        "id": "9ce27fc32af6eb09"
      },
      "id": "9ce27fc32af6eb09",
      "type": "add",
      "after": "36f9e0e4922c2a94",
      "date": 1636020885445
    },
    {
      "type": "edit",
      "id": "9ce27fc32af6eb09",
      "item": {
        "type": "paragraph",
        "id": "9ce27fc32af6eb09",
        "text": "Your configuration is stored in ~/.config/nixpkgs/home.nix. Each time you modify it, rerun home-manager switch for changes to have effect. "
      },
      "date": 1636020888547
    },
    {
      "type": "remove",
      "id": "9ce27fc32af6eb09",
      "date": 1636020899741
    },
    {
      "item": {
        "type": "factory",
        "id": "5d9849b0d2d92b41"
      },
      "id": "5d9849b0d2d92b41",
      "type": "add",
      "after": "36f9e0e4922c2a94",
      "date": 1636020900864
    },
    {
      "type": "edit",
      "id": "5d9849b0d2d92b41",
      "item": {
        "type": "markdown",
        "id": "5d9849b0d2d92b41",
        "text": "Your configuration is stored in `~/.config/nixpkgs/home.nix`. Each time you modify it, rerun `home-manager switch` for changes to have effect. "
      },
      "date": 1636020920360
    },
    {
      "item": {
        "type": "factory",
        "id": "1b6fd5658c01fe6d"
      },
      "id": "1b6fd5658c01fe6d",
      "type": "add",
      "after": "5d9849b0d2d92b41",
      "date": 1636021044717
    },
    {
      "type": "edit",
      "id": "1b6fd5658c01fe6d",
      "item": {
        "type": "markdown",
        "id": "1b6fd5658c01fe6d",
        "text": "Note that to work correctly, home-manager needs your shell to source ~/.nix-profile/etc/profile.d/hm-session-vars.sh. The most convenient way to do so it to have home-manager manage your whole shell configuration, eg programs.bash.enable = true; or programs.zsh.enable = true;. But in this case your whole bashrc is managed with Home Manager: the years of customization you accumulated in your former .bashrc must be migrated to Home Manager options, which may take some time."
      },
      "date": 1636021047071
    },
    {
      "type": "edit",
      "id": "1b6fd5658c01fe6d",
      "item": {
        "type": "markdown",
        "id": "1b6fd5658c01fe6d",
        "text": "Note that to work correctly, home-manager needs your shell to source `~/.nix-profile/etc/profile.d/hm-session-vars.sh`. The most convenient way to do so it to have home-manager manage your whole shell configuration, eg programs.bash.enable = true; or programs.zsh.enable = true;. But in this case your whole bashrc is managed with Home Manager: the years of customization you accumulated in your former .bashrc must be migrated to Home Manager options, which may take some time."
      },
      "date": 1636021120129
    },
    {
      "type": "edit",
      "id": "1b6fd5658c01fe6d",
      "item": {
        "type": "markdown",
        "id": "1b6fd5658c01fe6d",
        "text": "Note that to work correctly, home-manager needs your shell to source `~/.nix-profile/etc/profile.d/hm-session-vars.sh`. The most convenient way to do so it to have home-manager manage your whole shell configuration, eg `programs.bash.enable = true;` or `programs.zsh.enable = true;`. But in this case your whole bashrc is managed with Home Manager: the years of customization you accumulated in your former .bashrc must be migrated to Home Manager options, which may take some time."
      },
      "date": 1636021152434
    },
    {
      "item": {
        "type": "factory",
        "id": "8a66a66d77e3b754"
      },
      "id": "8a66a66d77e3b754",
      "type": "add",
      "after": "1b6fd5658c01fe6d",
      "date": 1653682298989
    },
    {
      "item": {
        "type": "factory",
        "id": "358ae853411d2821"
      },
      "id": "358ae853411d2821",
      "type": "add",
      "after": "8a66a66d77e3b754",
      "date": 1653682305065
    },
    {
      "type": "edit",
      "id": "8a66a66d77e3b754",
      "item": {
        "type": "pagefold",
        "id": "8a66a66d77e3b754",
        "text": "~"
      },
      "date": 1653682307046
    },
    {
      "type": "remove",
      "id": "358ae853411d2821",
      "date": 1653682313015
    },
    {
      "item": {
        "type": "factory",
        "id": "beb352151fdc694b"
      },
      "id": "beb352151fdc694b",
      "type": "add",
      "after": "8a66a66d77e3b754",
      "date": 1653682415623
    },
    {
      "type": "edit",
      "id": "beb352151fdc694b",
      "item": {
        "type": "paragraph",
        "id": "beb352151fdc694b",
        "text": "– https://github.com/nix-community/home-manager github"
      },
      "date": 1653682435961
    },
    {
      "type": "edit",
      "id": "beb352151fdc694b",
      "item": {
        "type": "paragraph",
        "id": "beb352151fdc694b",
        "text": "Home Manager using Nix. [https://github.com/nix-community/home-manager github]"
      },
      "date": 1653682454397
    },
    {
      "item": {
        "type": "factory",
        "id": "a259908fead00e8a"
      },
      "id": "a259908fead00e8a",
      "type": "add",
      "after": "beb352151fdc694b",
      "date": 1696578857834
    },
    {
      "type": "edit",
      "id": "a259908fead00e8a",
      "item": {
        "type": "paragraph",
        "id": "a259908fead00e8a",
        "text": "[https://github.com/MatthiasBenaets/nixos-config/blob/master/darwin.org#home-manager github]"
      },
      "date": 1696578868678
    },
    {
      "type": "edit",
      "id": "a259908fead00e8a",
      "item": {
        "type": "paragraph",
        "id": "a259908fead00e8a",
        "text": "Home-Manager [https://github.com/MatthiasBenaets/nixos-config/blob/master/darwin.org#home-manager github]"
      },
      "date": 1696578899270
    },
    {
      "type": "edit",
      "id": "a259908fead00e8a",
      "item": {
        "type": "paragraph",
        "id": "a259908fead00e8a",
        "text": "Home-Manager [https://github.com/MatthiasBenaets/nixos-config/blob/master/darwin.org#home-manager github] (    nixos-config\n\n/darwin.org)"
      },
      "date": 1696578914870
    },
    {
      "type": "edit",
      "id": "a259908fead00e8a",
      "item": {
        "type": "paragraph",
        "id": "a259908fead00e8a",
        "text": "Home-Manager [https://github.com/MatthiasBenaets/nixos-config/blob/master/darwin.org#home-manager github] (nixos-config / darwin.org)"
      },
      "date": 1696578927463
    },
    {
      "item": {
        "type": "factory",
        "id": "940a3964f6c9d26c"
      },
      "id": "940a3964f6c9d26c",
      "type": "add",
      "after": "a259908fead00e8a",
      "date": 1696578949041
    },
    {
      "type": "remove",
      "id": "940a3964f6c9d26c",
      "date": 1696578951377
    },
    {
      "item": {
        "type": "factory",
        "id": "cfdc05727a42e170"
      },
      "id": "cfdc05727a42e170",
      "type": "add",
      "after": "a259908fead00e8a",
      "date": 1696578952423
    },
    {
      "type": "edit",
      "id": "cfdc05727a42e170",
      "item": {
        "type": "code",
        "id": "cfdc05727a42e170",
        "text": "home-manager switch"
      },
      "date": 1696578954627
    },
    {
      "type": "add",
      "id": "6d20b82ffbcebb4d",
      "item": {
        "type": "paragraph",
        "id": "6d20b82ffbcebb4d",
        "text": "nix-darwin module"
      },
      "after": "a259908fead00e8a",
      "date": 1696595518581
    },
    {
      "type": "edit",
      "id": "6d20b82ffbcebb4d",
      "item": {
        "type": "paragraph",
        "id": "6d20b82ffbcebb4d",
        "text": "nix-darwin module [https://nix-community.github.io/home-manager/index.html#sec-install-nix-darwin-module page]"
      },
      "date": 1696595526541
    },
    {
      "id": "e1182821352cd620",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e1182821352cd620",
        "text": "Das Beibehalten Ihres [[Home Manager]] home.nix in /Users/rgb/.config/nixpkgs ist veraltet.\nBitte verschieben Sie es nach /Users/rgb/.config/home-manager"
      },
      "after": "cfdc05727a42e170",
      "attribution": {
        "page": "2023-10-06"
      },
      "date": 1696595848213
    },
    {
      "type": "edit",
      "id": "e1182821352cd620",
      "item": {
        "type": "paragraph",
        "id": "e1182821352cd620",
        "text": "Keeping your Home Manager home.nix in ~/.config/nixpkgs is deprecated.\nPlease move it to ~/.config/home-manager"
      },
      "date": 1696595908844
    },
    {
      "item": {
        "type": "factory",
        "id": "5fd6ca688b280d58"
      },
      "id": "5fd6ca688b280d58",
      "type": "add",
      "after": "e1182821352cd620",
      "date": 1696596298480
    },
    {
      "type": "edit",
      "id": "5fd6ca688b280d58",
      "item": {
        "type": "code",
        "id": "5fd6ca688b280d58",
        "text": "nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager\n\nnix-channel --update"
      },
      "date": 1696596301641
    },
    {
      "type": "edit",
      "id": "5fd6ca688b280d58",
      "item": {
        "type": "code",
        "id": "5fd6ca688b280d58",
        "text": "nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager\n\n"
      },
      "date": 1696596320416
    },
    {
      "type": "edit",
      "id": "5fd6ca688b280d58",
      "item": {
        "type": "code",
        "id": "5fd6ca688b280d58",
        "text": "nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager"
      },
      "date": 1696596324466
    },
    {
      "item": {
        "type": "factory",
        "id": "2c97a3604c91dcc4"
      },
      "id": "2c97a3604c91dcc4",
      "type": "add",
      "after": "5fd6ca688b280d58",
      "date": 1696596326867
    },
    {
      "type": "edit",
      "id": "2c97a3604c91dcc4",
      "item": {
        "type": "code",
        "id": "2c97a3604c91dcc4",
        "text": "nix-channel --update"
      },
      "date": 1696596329989
    }
  ]
}