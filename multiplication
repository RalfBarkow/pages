{
  "title": "Multiplication",
  "story": [
    {
      "type": "paragraph",
      "id": "a09d49fd2c8cf929",
      "text": "While programmers today take multiplication for granted, most microprocessors in the 1970s could only add and subtract — multiplication required a slow and tedious loop implemented in assembly code."
    },
    {
      "type": "reference",
      "id": "2c7c87ad6de7a359",
      "site": "found.ward.fed.wiki",
      "slug": "intel-8086-multiply",
      "title": "Intel 8086 Multiply",
      "text": "[[Ken Shirriff]] explains the multiplication process inside the 8086, analyzes the microcode that it used, and discusses the hardware circuitry that helped it out. Analysis is based on reverse-engineering the 8086 from die photos. [https://www.righto.com/2023/03/8086-multiplication-microcode.html post]"
    },
    {
      "type": "reference",
      "id": "4036dca3ffa336e5",
      "site": "wiki.ralfbarkow.ch",
      "slug": "container-numbers",
      "title": "Container Numbers",
      "text": "This page is a tutorial on how iconic container numbers work. [http://iconicmath.com/arithmetic/containers/ page]"
    },
    {
      "type": "markdown",
      "id": "1c454b2b26a08023",
      "text": "> [[Addition]] is putting [[Outside]], while multiplication is putting [[Inside]]. "
    },
    {
      "type": "paragraph",
      "id": "e557427945855cd1",
      "text": "\"Intel Inside\" [https://www.intel.com/content/www/us/en/history/virtual-vault/articles/end-user-marketing-intel-inside.html page]"
    },
    {
      "type": "paragraph",
      "id": "3c7d0ba6d05314d8",
      "text": "How the 8086 processor's [[Microcode]] engine works [https://www.righto.com/2022/11/how-8086-processors-microcode-engine.html post]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Multiplication",
        "story": []
      },
      "date": 1679637737734
    },
    {
      "item": {
        "type": "factory",
        "id": "2c7c87ad6de7a359"
      },
      "id": "2c7c87ad6de7a359",
      "type": "add",
      "date": 1679637742381
    },
    {
      "type": "edit",
      "id": "2c7c87ad6de7a359",
      "item": {
        "type": "reference",
        "id": "2c7c87ad6de7a359",
        "site": "found.ward.fed.wiki",
        "slug": "intel-8086-multiply",
        "title": "Intel 8086 Multiply",
        "text": "Ken Shirriff explains the multiplication process inside the 8086, analyzes the microcode that it used, and discusses the hardware circuitry that helped it out. Analysis is based on reverse-engineering the 8086 from die photos. [https://www.righto.com/2023/03/8086-multiplication-microcode.html post]"
      },
      "date": 1679637744837
    },
    {
      "item": {
        "type": "factory",
        "id": "4036dca3ffa336e5"
      },
      "id": "4036dca3ffa336e5",
      "type": "add",
      "after": "2c7c87ad6de7a359",
      "date": 1679637754161
    },
    {
      "type": "edit",
      "id": "4036dca3ffa336e5",
      "item": {
        "type": "reference",
        "id": "4036dca3ffa336e5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container-numbers",
        "title": "Container Numbers",
        "text": "This page is a tutorial on how iconic container numbers work. [http://iconicmath.com/arithmetic/containers/ page]"
      },
      "date": 1679637756211
    },
    {
      "item": {
        "type": "factory",
        "id": "05ad0a9f57da8f84"
      },
      "id": "05ad0a9f57da8f84",
      "type": "add",
      "after": "4036dca3ffa336e5",
      "date": 1679637864486
    },
    {
      "type": "edit",
      "id": "05ad0a9f57da8f84",
      "item": {
        "type": "paragraph",
        "id": "05ad0a9f57da8f84",
        "text": "\"Intel Inside\" "
      },
      "date": 1679637871957
    },
    {
      "item": {
        "type": "factory",
        "id": "1475db5bc333d332"
      },
      "id": "1475db5bc333d332",
      "type": "add",
      "after": "05ad0a9f57da8f84",
      "date": 1679637904822
    },
    {
      "type": "edit",
      "id": "05ad0a9f57da8f84",
      "item": {
        "type": "paragraph",
        "id": "05ad0a9f57da8f84",
        "text": "\"Intel Inside\" [https://www.intel.com/content/www/us/en/history/virtual-vault/articles/end-user-marketing-intel-inside.html page]"
      },
      "date": 1679637912929
    },
    {
      "type": "remove",
      "id": "1475db5bc333d332",
      "date": 1679637914716
    },
    {
      "id": "1c454b2b26a08023",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1c454b2b26a08023",
        "text": "[[Addition]] is putting [[Outside]], while [[Multiplication]] is putting [[Inside]]. "
      },
      "after": "4036dca3ffa336e5",
      "attribution": {
        "page": "Container Numbers"
      },
      "date": 1679637940496
    },
    {
      "type": "edit",
      "id": "1c454b2b26a08023",
      "item": {
        "type": "paragraph",
        "id": "1c454b2b26a08023",
        "text": "> [[Addition]] is putting [[Outside]], while multiplication is putting [[Inside]]. "
      },
      "date": 1679637955179
    },
    {
      "type": "edit",
      "id": "1c454b2b26a08023",
      "item": {
        "type": "markdown",
        "id": "1c454b2b26a08023",
        "text": "> [[Addition]] is putting [[Outside]], while multiplication is putting [[Inside]]. "
      },
      "date": 1679637958478
    },
    {
      "item": {
        "type": "factory",
        "id": "a09d49fd2c8cf929"
      },
      "id": "a09d49fd2c8cf929",
      "type": "add",
      "after": "4036dca3ffa336e5",
      "date": 1679638117514
    },
    {
      "type": "edit",
      "id": "a09d49fd2c8cf929",
      "item": {
        "type": "paragraph",
        "id": "a09d49fd2c8cf929",
        "text": "While programmers today take multiplication for granted, most microprocessors in the 1970s could only add and subtract — multiplication required a slow and tedious loop implemented in assembly code."
      },
      "date": 1679638120350
    },
    {
      "id": "a09d49fd2c8cf929",
      "type": "move",
      "order": [
        "a09d49fd2c8cf929",
        "2c7c87ad6de7a359",
        "4036dca3ffa336e5"
      ],
      "date": 1679638122054
    },
    {
      "item": {
        "type": "factory",
        "id": "e557427945855cd1"
      },
      "id": "e557427945855cd1",
      "type": "add",
      "after": "4036dca3ffa336e5",
      "date": 1679638439400
    },
    {
      "type": "edit",
      "id": "e557427945855cd1",
      "item": {
        "type": "paragraph",
        "id": "e557427945855cd1",
        "text": "\"Intel Inside\""
      },
      "date": 1679638454481
    },
    {
      "type": "edit",
      "id": "e557427945855cd1",
      "item": {
        "type": "paragraph",
        "id": "e557427945855cd1",
        "text": "\"Intel Inside\" [https://www.intel.com/content/www/us/en/history/virtual-vault/articles/end-user-marketing-intel-inside.html page]"
      },
      "date": 1679638473125
    },
    {
      "id": "1c454b2b26a08023",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1c454b2b26a08023",
        "text": "[[Addition]] is putting [[Outside]], while [[Multiplication]] is putting [[Inside]]. "
      },
      "after": "4036dca3ffa336e5",
      "attribution": {
        "page": "Container Numbers"
      },
      "date": 1679638478258
    },
    {
      "type": "edit",
      "id": "1c454b2b26a08023",
      "item": {
        "type": "paragraph",
        "id": "1c454b2b26a08023",
        "text": "> [[Addition]] is putting [[Outside]], while multiplication is putting [[Inside]]. "
      },
      "date": 1679638487758
    },
    {
      "type": "edit",
      "id": "1c454b2b26a08023",
      "item": {
        "type": "markdown",
        "id": "1c454b2b26a08023",
        "text": "> [[Addition]] is putting [[Outside]], while multiplication is putting [[Inside]]. "
      },
      "date": 1679638489013
    },
    {
      "item": {
        "type": "factory",
        "id": "3c7d0ba6d05314d8"
      },
      "id": "3c7d0ba6d05314d8",
      "type": "add",
      "after": "e557427945855cd1",
      "date": 1679638533783
    },
    {
      "type": "edit",
      "id": "3c7d0ba6d05314d8",
      "item": {
        "type": "paragraph",
        "id": "3c7d0ba6d05314d8",
        "text": "How the 8086 processor's microcode engine works"
      },
      "date": 1679638538684
    },
    {
      "type": "edit",
      "id": "3c7d0ba6d05314d8",
      "item": {
        "type": "paragraph",
        "id": "3c7d0ba6d05314d8",
        "text": "How the 8086 processor's microcode engine works [https://www.righto.com/2022/11/how-8086-processors-microcode-engine.html post]"
      },
      "date": 1679638547729
    },
    {
      "type": "edit",
      "id": "3c7d0ba6d05314d8",
      "item": {
        "type": "paragraph",
        "id": "3c7d0ba6d05314d8",
        "text": "How the 8086 processor's [[Microcode]] engine works [https://www.righto.com/2022/11/how-8086-processors-microcode-engine.html post]"
      },
      "date": 1679638597064
    },
    {
      "type": "edit",
      "id": "2c7c87ad6de7a359",
      "item": {
        "type": "reference",
        "id": "2c7c87ad6de7a359",
        "site": "found.ward.fed.wiki",
        "slug": "intel-8086-multiply",
        "title": "Intel 8086 Multiply",
        "text": "[[Ken Shirriff]] explains the multiplication process inside the 8086, analyzes the microcode that it used, and discusses the hardware circuitry that helped it out. Analysis is based on reverse-engineering the 8086 from die photos. [https://www.righto.com/2023/03/8086-multiplication-microcode.html post]"
      },
      "date": 1679638769915
    }
  ]
}