{
  "title": "Monad Tutorials",
  "story": [
    {
      "type": "markdown",
      "id": "5ddca98220f1073c",
      "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. It plays a specific role in category theory and seems to play a major role in functional programming, although this role might have been played by [https://math.jhu.edu/~eriehl/lambda.pdf other structures]. This mismatch in perception is summarized by the joke quote [http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html monads are just monoids in the category of endofunctors, what is the problem?]"
    },
    {
      "type": "markdown",
      "id": "72152a9ccfd770bb",
      "text": "Since monads are closely related to functors it is important to understand functors first (see [[Functors from the Perspective of an Imperative Programmer]]). But still, there are many people who simply map an intuition onto the abstract concepts and conclude that monads are manifestations of this intuition. This became known as the [https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/ monad tutorial fallacy]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Monad Tutorials",
        "story": []
      },
      "date": 1676532423353
    },
    {
      "item": {
        "type": "factory",
        "id": "5ddca98220f1073c"
      },
      "id": "5ddca98220f1073c",
      "type": "add",
      "date": 1676532446170
    },
    {
      "type": "edit",
      "id": "5ddca98220f1073c",
      "item": {
        "type": "markdown",
        "id": "5ddca98220f1073c",
        "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. They play a specific role in category theory and seem to play a major role in functional programming. "
      },
      "date": 1676532544790
    },
    {
      "type": "edit",
      "id": "5ddca98220f1073c",
      "item": {
        "type": "markdown",
        "id": "5ddca98220f1073c",
        "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. They play a specific role in category theory and seem to play a major role in functional programming, although this role might have been played by [https://math.jhu.edu/~eriehl/lambda.pdf other structures]. "
      },
      "date": 1676532631681
    },
    {
      "type": "edit",
      "id": "5ddca98220f1073c",
      "item": {
        "type": "markdown",
        "id": "5ddca98220f1073c",
        "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. It plays a specific role in category theory and seems to play a major role in functional programming, although this role might have been played by [https://math.jhu.edu/~eriehl/lambda.pdf other structures]. This mismatch in perception is "
      },
      "date": 1676532688844
    },
    {
      "type": "edit",
      "id": "5ddca98220f1073c",
      "item": {
        "type": "markdown",
        "id": "5ddca98220f1073c",
        "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. It plays a specific role in category theory and seems to play a major role in functional programming, although this role might have been played by [https://math.jhu.edu/~eriehl/lambda.pdf other structures]. This mismatch in perception is summarized by the joke quote [http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html monads are just monoids in the category of endofunctors, so what is the problmen?]"
      },
      "date": 1676532753425
    },
    {
      "type": "edit",
      "id": "5ddca98220f1073c",
      "item": {
        "type": "markdown",
        "id": "5ddca98220f1073c",
        "text": "Monad is an abstract concept in [[Category Theory and Software Engineering]]. It plays a specific role in category theory and seems to play a major role in functional programming, although this role might have been played by [https://math.jhu.edu/~eriehl/lambda.pdf other structures]. This mismatch in perception is summarized by the joke quote [http://james-iry.blogspot.com/2009/05/brief-incomplete-and-mostly-wrong.html monads are just monoids in the category of endofunctors, what is the problem?]"
      },
      "date": 1676532770529
    },
    {
      "item": {
        "type": "factory",
        "id": "72152a9ccfd770bb"
      },
      "id": "72152a9ccfd770bb",
      "type": "add",
      "after": "5ddca98220f1073c",
      "date": 1676532796674
    },
    {
      "type": "edit",
      "id": "72152a9ccfd770bb",
      "item": {
        "type": "markdown",
        "id": "72152a9ccfd770bb",
        "text": "Since monads are functors it is important to understand functors first (see [Functors from the Perspective of an Imperative Programmer]). But still, many people "
      },
      "date": 1676532888133
    },
    {
      "type": "edit",
      "id": "72152a9ccfd770bb",
      "item": {
        "type": "markdown",
        "id": "72152a9ccfd770bb",
        "text": "Since monads are closely related functors it is important to understand functors first (see [Functors from the Perspective of an Imperative Programmer]). But still, there are many people who simply map an intuition onto the abstract concepts and conclude that monads are manifestations of this intuition. This became known as the [https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/ monad tutorial fallacy]."
      },
      "date": 1676533305423
    },
    {
      "type": "edit",
      "id": "72152a9ccfd770bb",
      "item": {
        "type": "markdown",
        "id": "72152a9ccfd770bb",
        "text": "Since monads are closely related functors it is important to understand functors first (see [[Functors from the Perspective of an Imperative Programmer]]). But still, there are many people who simply map an intuition onto the abstract concepts and conclude that monads are manifestations of this intuition. This became known as the [https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/ monad tutorial fallacy]."
      },
      "date": 1676533314007
    },
    {
      "type": "edit",
      "id": "72152a9ccfd770bb",
      "item": {
        "type": "markdown",
        "id": "72152a9ccfd770bb",
        "text": "Since monads are closely related to functors it is important to understand functors first (see [[Functors from the Perspective of an Imperative Programmer]]). But still, there are many people who simply map an intuition onto the abstract concepts and conclude that monads are manifestations of this intuition. This became known as the [https://byorgey.wordpress.com/2009/01/12/abstraction-intuition-and-the-monad-tutorial-fallacy/ monad tutorial fallacy]."
      },
      "date": 1676533353626
    },
    {
      "type": "fork",
      "site": "johannes.tries.fed.wiki",
      "date": 1676534321938
    }
  ]
}