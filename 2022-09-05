{
  "title": "2022-09-05",
  "story": [
    {
      "type": "paragraph",
      "id": "d91236b1002cfb75",
      "text": "[[Labor Day]]"
    },
    {
      "type": "paragraph",
      "id": "74cb9595484756dd",
      "text": "Duplicate entries in the default Lepiter database"
    },
    {
      "type": "markdown",
      "id": "f2895ec2deff0f7b",
      "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?\n﻿﻿\n"
    },
    {
      "type": "markdown",
      "id": "3643012f8435822e",
      "text": "> Raise an error if a page with the same title exists\n"
    },
    {
      "type": "pagefold",
      "id": "224bd3ad5902d272",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "572e787701f62d4c",
      "text": "Before the Apple Macintosh, Microsoft Windows, Python, Java, and Objective-C, there was [[Smalltalk]]. \n"
    },
    {
      "type": "video",
      "id": "b6398843422e45f3",
      "text": "YOUTUBE 3_bJyXfjztA\nMaking Smalltalk"
    },
    {
      "type": "markdown",
      "id": "ebab461b4ed020ca",
      "text": "50 years ago this September, Smalltalk, which ultimately revolutionized personal computing, graphical user interfaces, and programming languages, was first created at Xerox PARC in Alan Kay’s Learning Research Group as a way to help children learn by using computers. \n\nJoin us for a night with Smalltalk pioneers and 2022 CHM Fellows Adele Goldberg and Daniel Ingalls to celebrate Smalltalk’s 50th anniversary. In an interactive discussion with moderator John Markoff, Goldberg and Ingalls will explore Smalltalk’s original mission in education and its influence on the world of object-oriented programming languages, development environments, and software engineering methodologies. Adding to the conversation will be newly-recorded remarks for this historic occasion from Smalltalk creator Alan Kay."
    },
    {
      "type": "pagefold",
      "id": "da8f37d79433cd63",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "6bfe9bd5813e4ed0",
      "text": "⇒ [[Labels]]"
    },
    {
      "type": "paragraph",
      "id": "43e284bb4ef34666",
      "text": "[[Run-Time Reflection]]"
    },
    {
      "type": "paragraph",
      "id": "3f7370f0df66b320",
      "text": "[[BrPagerDataSource]]"
    },
    {
      "type": "video",
      "id": "8ab47166a024ebff",
      "text": "YOUTUBE _NB2_Q4bYEk\nVector Graphics in Cuis Smalltalk.\nA pixel independent Zoomable User Interface.\n[[Juan Vuletich]] – January 8th, 2021"
    },
    {
      "type": "markdown",
      "id": "81eda3bee6253a2b",
      "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). [[Bloc]] is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff\n⇒ [[One Rendering Tree]]"
    },
    {
      "type": "paragraph",
      "id": "1b15c34617212626",
      "text": "tudor girba — 05.03.2022\nYes, we know the history of Morphic :). Morphic was truly revolutionary in its time in many ways. And the model in self was ahead of its time (and, in some respects still is). GT is based on another engine called Bloc that takes the idea a little further and packages it in vector graphics, too. We built a graphic engine because we wanted to create a new experience that does not seem possible in the graphical engines of today. But the goal of Glamorous Toolkit is to enable a new way of programming through which to make systems explainable. We can look at parts of the environment like the \"notebook\" in isolation, but the interesting bit is in the whole experience. I'd be interested to learn how you see it."
    },
    {
      "type": "paragraph",
      "id": "5d61d217f85fc291",
      "text": "⇒ [[Tutorials for Bloc and Brick]]"
    },
    {
      "type": "markdown",
      "id": "105880ef81dd22b4",
      "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)\n* Visualizing Polymetric Graphs using Mondrian. [https://agilevisualization.com/AgileVisualization/Mondrian/0202-Mondrian.html page]\n>  Nesting"
    },
    {
      "type": "pagefold",
      "id": "e5bdac50ef2d49ee",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ff928a98fbc0a7df",
      "text": "Getting Started with OpenFPGA. [https://openfpga.readthedocs.io/en/master/ page], [https://github.com/lnis-uofu/OpenFPGA#getting-started-with-openfpga- github]"
    },
    {
      "type": "video",
      "id": "5dd0877a5ec7cf9a",
      "text": "YOUTUBE ocODUGcYGqo\nOpenFPGA: A Key to Agile Prototyping of Customizables FPGAs"
    },
    {
      "type": "markdown",
      "id": "a59f264fc6d011ad",
      "text": "# Toit docs"
    },
    {
      "type": "markdown",
      "id": "63d7143bf85750ec",
      "text": "* [[Get an ESP32]]. [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source [[Datalogger]] that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
    },
    {
      "type": "video",
      "id": "873967db1d7be5be",
      "text": "YOUTUBE uGQPGNEH_sU\nInstalling the Toit CLI and VSCode in MacOS"
    },
    {
      "type": "paragraph",
      "id": "92aa0634a5fc48d0",
      "text": "If you are building more complex projects with [[Toit]], we recommend you install our CLI along with VSCode and its Toit extension. This video shows you how.\n\nNOTE: When adding the path to your Toit CLI executable, if you are running the bash shell, simply exchange .zshrc with .bashrc\n\nIf you run into any problems or have questions, don't hesitate to contact us at toit.io!"
    },
    {
      "type": "pagefold",
      "id": "2ab7be4c14ea5ecb",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "0511a7c9635a555d",
      "site": "marc.tries.fed.wiki",
      "slug": "six-nested-questions",
      "title": "Six Nested Questions",
      "text": "I began with [[Four Nested Questions]]"
    },
    {
      "type": "reference",
      "id": "940c709973399d06",
      "site": "risks.rodwell.me",
      "slug": "quantum-ai-breakthrough-theorem-shrinks-appetite-for-training-data",
      "title": "Quantum AI Breakthrough: Theorem Shrinks Appetite for Training Data",
      "text": "Los Alamos National Laboratory, 23 Aug 2022, via ACM TechNews, 29 Aug 2022"
    },
    {
      "type": "markdown",
      "id": "4c0773a155b41a24",
      "text": "> The ultimate goal of [[Machine Learning]] (ML) is to make accurate predictions on unseen data."
    },
    {
      "type": "reference",
      "id": "ee05b6884bfb7ba7",
      "site": "risks.rodwell.me",
      "slug": "satellites-keep-the-worlds-clocks-on-time--what-if-they-fail",
      "title": "Satellites Keep the World's Clocks on Time.  What if They Fail",
      "text": "Standardized time is broadcast by satellite networks around the world, but their signals are vulnerable to interference --tso he UK is building a more resilient system."
    },
    {
      "type": "paragraph",
      "id": "8f42df833185751e",
      "text": "⇒ [[Reflector]]"
    },
    {
      "type": "graphviz",
      "id": "7992914d38899b7a",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "reference",
      "id": "f020b6c22154a71b",
      "site": "ward.dojo.fed.wiki",
      "slug": "select-an-emoji",
      "title": "Select an Emoji",
      "text": "Can we offer a menu of emoji faces as a substitute for other identity in the super collaborator?"
    },
    {
      "type": "reference",
      "id": "8bbf6c60363eb93f",
      "site": "marc.tries.fed.wiki",
      "slug": "qulturum",
      "title": "Qulturum",
      "text": "A remarkably successful community-scale, whole sector, improvement system in Jönköping County, Sweden."
    },
    {
      "type": "reference",
      "id": "79a407c5527570e8",
      "site": "ward.asia.wiki.org",
      "slug": "super-collaborator",
      "title": "Super Collaborator",
      "text": "We explore the [[Hypertext Super Collaborator]] by assembling some recent discoveries in federated wiki. We cast this as a concurrent multi-user web application streaming fragments and then assembling them as participants find them interesting. [https://github.com/WardCunningham/assets/tree/master/pages/super-collaborator github]"
    },
    {
      "type": "reference",
      "id": "ed82fe9962f41d99",
      "site": "ward.asia.wiki.org",
      "slug": "hypertext-super-collaborator",
      "title": "Hypertext Super Collaborator",
      "text": "We provide an assembly theory inspired reaction vessel where low-index concepts can be drawn from a real-time beam, reconciled, visualized, selected, and returned to the beam as time advances. [https://en.wikipedia.org/wiki/Superconducting_Super_Collider wikipedia]"
    },
    {
      "type": "reference",
      "id": "d844ab27e15d1a72",
      "site": "ward.asia.wiki.org",
      "slug": "croquet-in-modules",
      "title": "Croquet in Modules",
      "text": "We consider how Croquet might mix with ES6 modules."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-09-05",
        "story": []
      },
      "date": 1662272494321
    },
    {
      "item": {
        "type": "factory",
        "id": "6bfe9bd5813e4ed0"
      },
      "id": "6bfe9bd5813e4ed0",
      "type": "add",
      "date": 1662272495768
    },
    {
      "type": "edit",
      "id": "6bfe9bd5813e4ed0",
      "item": {
        "type": "paragraph",
        "id": "6bfe9bd5813e4ed0",
        "text": "⇒ [[Labels]]"
      },
      "date": 1662272505007
    },
    {
      "item": {
        "type": "factory",
        "id": "e5bdac50ef2d49ee"
      },
      "id": "e5bdac50ef2d49ee",
      "type": "add",
      "after": "6bfe9bd5813e4ed0",
      "date": 1662278670199
    },
    {
      "type": "edit",
      "id": "e5bdac50ef2d49ee",
      "item": {
        "type": "pagefold",
        "id": "e5bdac50ef2d49ee",
        "text": "~"
      },
      "date": 1662278673074
    },
    {
      "item": {
        "type": "factory",
        "id": "ff928a98fbc0a7df"
      },
      "id": "ff928a98fbc0a7df",
      "type": "add",
      "after": "e5bdac50ef2d49ee",
      "date": 1662278674565
    },
    {
      "type": "edit",
      "id": "ff928a98fbc0a7df",
      "item": {
        "type": "paragraph",
        "id": "ff928a98fbc0a7df",
        "text": "Getting Started with OpenFPGA "
      },
      "date": 1662278678814
    },
    {
      "type": "edit",
      "id": "ff928a98fbc0a7df",
      "item": {
        "type": "paragraph",
        "id": "ff928a98fbc0a7df",
        "text": "Getting Started with OpenFPGA. [https://openfpga.readthedocs.io/en/master/ page]"
      },
      "date": 1662278723216
    },
    {
      "type": "edit",
      "id": "ff928a98fbc0a7df",
      "item": {
        "type": "paragraph",
        "id": "ff928a98fbc0a7df",
        "text": "Getting Started with OpenFPGA. [https://openfpga.readthedocs.io/en/master/ page], [https://github.com/lnis-uofu/OpenFPGA#getting-started-with-openfpga- github]"
      },
      "date": 1662278750303
    },
    {
      "item": {
        "type": "factory",
        "id": "5dd0877a5ec7cf9a"
      },
      "id": "5dd0877a5ec7cf9a",
      "type": "add",
      "after": "ff928a98fbc0a7df",
      "date": 1662278778790
    },
    {
      "type": "edit",
      "id": "5dd0877a5ec7cf9a",
      "item": {
        "type": "video",
        "id": "5dd0877a5ec7cf9a",
        "text": "YOUTUBE ocODUGcYGqo"
      },
      "date": 1662278786887
    },
    {
      "type": "edit",
      "id": "5dd0877a5ec7cf9a",
      "item": {
        "type": "video",
        "id": "5dd0877a5ec7cf9a",
        "text": "YOUTUBE ocODUGcYGqo\nOpenFPGA: A Key to Agile Prototyping of Customizables FPGAs"
      },
      "date": 1662278815151
    },
    {
      "type": "add",
      "id": "43e284bb4ef34666",
      "item": {
        "type": "paragraph",
        "id": "43e284bb4ef34666",
        "text": "[[Run-Time Reflection]]"
      },
      "after": "6bfe9bd5813e4ed0",
      "date": 1662278926186
    },
    {
      "type": "add",
      "id": "3f7370f0df66b320",
      "item": {
        "type": "paragraph",
        "id": "3f7370f0df66b320",
        "text": "[[BrPagerDataSource]]"
      },
      "after": "43e284bb4ef34666",
      "date": 1662279567911
    },
    {
      "item": {
        "type": "factory",
        "id": "a59f264fc6d011ad"
      },
      "id": "a59f264fc6d011ad",
      "type": "add",
      "after": "5dd0877a5ec7cf9a",
      "date": 1662302363027
    },
    {
      "type": "edit",
      "id": "a59f264fc6d011ad",
      "item": {
        "type": "paragraph",
        "id": "a59f264fc6d011ad",
        "text": "Toit"
      },
      "date": 1662302368845
    },
    {
      "item": {
        "type": "factory",
        "id": "63d7143bf85750ec"
      },
      "id": "63d7143bf85750ec",
      "type": "add",
      "after": "a59f264fc6d011ad",
      "date": 1662302375103
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://hackaday.io/search?term=toit"
      },
      "date": 1662302379432
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic)"
      },
      "date": 1662302481765
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]"
      },
      "date": 1662302493494
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]"
      },
      "date": 1662302516675
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n ** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]"
      },
      "date": 1662302568949
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]"
      },
      "date": 1662302573709
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis."
      },
      "date": 1662302892170
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page]"
      },
      "date": 1662302900894
    },
    {
      "type": "add",
      "id": "7455c678f3eb7f19",
      "item": {
        "type": "paragraph",
        "id": "7455c678f3eb7f19",
        "text": "Vector Graphics in Cuis Smalltalk"
      },
      "after": "3f7370f0df66b320",
      "date": 1662303037187
    },
    {
      "item": {
        "type": "factory",
        "id": "8ab47166a024ebff"
      },
      "id": "8ab47166a024ebff",
      "type": "add",
      "after": "63d7143bf85750ec",
      "date": 1662303084683
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE https://youtu.be/_NB2_Q4bYEk"
      },
      "date": 1662303090486
    },
    {
      "id": "8ab47166a024ebff",
      "type": "move",
      "order": [
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "7455c678f3eb7f19",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec"
      ],
      "date": 1662303094133
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE _NB2_Q4bYEk"
      },
      "date": 1662303101136
    },
    {
      "type": "remove",
      "id": "7455c678f3eb7f19",
      "date": 1662303106800
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE _NB2_Q4bYEk\nVector Graphics in Cuis Smalltalk"
      },
      "date": 1662303113814
    },
    {
      "item": {
        "type": "factory",
        "id": "81eda3bee6253a2b"
      },
      "id": "81eda3bee6253a2b",
      "type": "add",
      "after": "63d7143bf85750ec",
      "date": 1662303164787
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "paragraph",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 05.04.2022\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff"
      },
      "date": 1662303166786
    },
    {
      "id": "81eda3bee6253a2b",
      "type": "move",
      "order": [
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec"
      ],
      "date": 1662303169598
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "paragraph",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff"
      },
      "date": 1662303203248
    },
    {
      "type": "add",
      "id": "1b15c34617212626",
      "item": {
        "type": "paragraph",
        "id": "1b15c34617212626",
        "text": "tudor girba — 05.03.2022\nYes, we know the history of Morphic :). Morphic was truly revolutionary in its time in many ways. And the model in self was ahead of its time (and, in some respects still is). GT is based on another engine called Bloc that takes the idea a little further and packages it in vector graphics, too. We built a graphic engine because we wanted to create a new experience that does not seem possible in the graphical engines of today. But the goal of Glamorous Toolkit is to enable a new way of programming through which to make systems explainable. We can look at parts of the environment like the \"notebook\" in isolation, but the interesting bit is in the whole experience. I'd be interested to learn how you see it."
      },
      "after": "81eda3bee6253a2b",
      "date": 1662303349449
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "markdown",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff"
      },
      "date": 1662303351733
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "markdown",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff\n– [[One rendering tree]]"
      },
      "date": 1662303387829
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "markdown",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff\n⇒ [[One rendering tree]]"
      },
      "date": 1662303402879
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "markdown",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). Bloc is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff\n⇒ [[One Rendering Tree]]"
      },
      "date": 1662303414298
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE _NB2_Q4bYEk\nVector Graphics in Cuis Smalltalk\nA pixel independent Zoomable User Interface\nJuan Vuletich – January 8th, 2021"
      },
      "date": 1662304250905
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE _NB2_Q4bYEk\nVector Graphics in Cuis Smalltalk.\nA pixel independent Zoomable User Interface\nJuan Vuletich – January 8th, 2021"
      },
      "date": 1662304259222
    },
    {
      "type": "edit",
      "id": "8ab47166a024ebff",
      "item": {
        "type": "video",
        "id": "8ab47166a024ebff",
        "text": "YOUTUBE _NB2_Q4bYEk\nVector Graphics in Cuis Smalltalk.\nA pixel independent Zoomable User Interface.\n[[Juan Vuletich]] – January 8th, 2021"
      },
      "date": 1662304269256
    },
    {
      "type": "edit",
      "id": "81eda3bee6253a2b",
      "item": {
        "type": "markdown",
        "id": "81eda3bee6253a2b",
        "text": "tudor girba — 2022-04-05 via [https://discord.com/channels/729445214812504107/735947900651175998/960819665356070962 discord]\nWelcome :). [[Bloc]] is a completely new graphical stack that is not related to the Pharo infrastructure at all. Underneath it relies on Skia, which is the low level graphics support for Firefox and Android. Bloc is vector graphics by design. I am not aware of support for Spec 2, but Bloc offers all sorts of options. As for Roassal3, Bloc is already a visualization engine. Perhaps this might shed some light: https://medium.com/feenk/one-rendering-tree-918eae49bcff\n⇒ [[One Rendering Tree]]"
      },
      "date": 1662304756918
    },
    {
      "type": "add",
      "id": "5d61d217f85fc291",
      "item": {
        "type": "paragraph",
        "id": "5d61d217f85fc291",
        "text": "[[Tutorials for Bloc and Brick]]"
      },
      "after": "1b15c34617212626",
      "date": 1662305188363
    },
    {
      "type": "edit",
      "id": "5d61d217f85fc291",
      "item": {
        "type": "paragraph",
        "id": "5d61d217f85fc291",
        "text": "⇒ [[Tutorials for Bloc and Brick]]"
      },
      "date": 1662305346009
    },
    {
      "type": "add",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "paragraph",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf"
      },
      "after": "5d61d217f85fc291",
      "date": 1662306405665
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf"
      },
      "date": 1662306407087
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian"
      },
      "date": 1662306476101
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian  [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)"
      },
      "date": 1662306496032
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)"
      },
      "date": 1662306506192
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)\n* Visualizing Polymetric Graphs using Mondrian. "
      },
      "date": 1662306646999
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)\n* Visualizing Polymetric Graphs using Mondrian. [https://agilevisualization.com/AgileVisualization/Mondrian/0202-Mondrian.html page]"
      },
      "date": 1662306660415
    },
    {
      "type": "edit",
      "id": "105880ef81dd22b4",
      "item": {
        "type": "markdown",
        "id": "105880ef81dd22b4",
        "text": "* http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf Scripting Visualizations with Mondrian [https://web.archive.org/web/20160604000835/http://pharobooks.gforge.inria.fr/PharoByExampleTwo-Eng/latest/Mondrian.pdf wayback] (pdf)\n* Visualizing Polymetric Graphs using Mondrian. [https://agilevisualization.com/AgileVisualization/Mondrian/0202-Mondrian.html page]\n>  Nesting"
      },
      "date": 1662306704710
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]"
      },
      "date": 1662348000699
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n** https://docs.toit.io/tutorials\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source datalogger that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348106711
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* https://docs.toit.io/getstarted#2-get-an-esp32\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source datalogger that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348196149
    },
    {
      "type": "edit",
      "id": "a59f264fc6d011ad",
      "item": {
        "type": "paragraph",
        "id": "a59f264fc6d011ad",
        "text": "# Toit docs"
      },
      "date": 1662348218273
    },
    {
      "type": "edit",
      "id": "a59f264fc6d011ad",
      "item": {
        "type": "markdown",
        "id": "a59f264fc6d011ad",
        "text": "# Toit docs"
      },
      "date": 1662348219862
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* Get an ESP32 [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source datalogger that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348231590
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* Get an [[ESP32]]. [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source datalogger that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348242610
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* [[Get an ESP32]]. [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source datalogger that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348265976
    },
    {
      "item": {
        "type": "factory",
        "id": "873967db1d7be5be"
      },
      "id": "873967db1d7be5be",
      "type": "add",
      "after": "63d7143bf85750ec",
      "date": 1662348358367
    },
    {
      "type": "edit",
      "id": "873967db1d7be5be",
      "item": {
        "type": "video",
        "id": "873967db1d7be5be",
        "text": "YOUTUBE uGQPGNEH_sU"
      },
      "date": 1662348370039
    },
    {
      "type": "edit",
      "id": "873967db1d7be5be",
      "item": {
        "type": "video",
        "id": "873967db1d7be5be",
        "text": "YOUTUBE uGQPGNEH_sU\nInstalling the Toit CLI and VSCode in MacOS"
      },
      "date": 1662348391543
    },
    {
      "item": {
        "type": "factory",
        "id": "92aa0634a5fc48d0"
      },
      "id": "92aa0634a5fc48d0",
      "type": "add",
      "after": "873967db1d7be5be",
      "date": 1662348429139
    },
    {
      "type": "edit",
      "id": "92aa0634a5fc48d0",
      "item": {
        "type": "paragraph",
        "id": "92aa0634a5fc48d0",
        "text": "If you are building more complex projects with Toit, we recommend you install our CLI along with VSCode and its Toit extension. This video shows you how.\n\nNOTE: When adding the path to your Toit CLI executable, if you are running the bash shell, simply exchange .zshrc with .bashrc\n\nIf you run into any problems or have questions, don't hesitate to contact us at toit.io!"
      },
      "date": 1662348431947
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* [[Get an ESP32]]. [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source [[datalogger]] that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348492522
    },
    {
      "type": "edit",
      "id": "63d7143bf85750ec",
      "item": {
        "type": "markdown",
        "id": "63d7143bf85750ec",
        "text": "* [[Get an ESP32]]. [https://docs.toit.io/getstarted#2-get-an-esp32 page]\n- Tutorials. [https://docs.toit.io/tutorials page]\n* https://hackaday.io/search?term=toit\n* SparkFun Environmental Combo Breakout - CCS811/BME280 (Qwiic). [https://www.sparkfun.com/products/14348 page]\n* SparkFun OpenLog Artemis. [https://www.sparkfun.com/products/16832 page], [https://github.com/sparkfun/OpenLog_Artemis github]\n> The OpenLog Artemis is an open source [[Datalogger]] that comes preprogrammed to automatically log IMU, GPS, serial data, and various pressure, humidity, and distance sensors. All without writing a single line of code! OpenLog Artemis, or \"OLA,\" automatically detects, configures, and logs Qwiic sensors. OLA is designed for users who just need to capture a bunch of data to a CSV and get back to their larger project."
      },
      "date": 1662348761000
    },
    {
      "type": "edit",
      "id": "92aa0634a5fc48d0",
      "item": {
        "type": "paragraph",
        "id": "92aa0634a5fc48d0",
        "text": "If you are building more complex projects with [[Toit]], we recommend you install our CLI along with VSCode and its Toit extension. This video shows you how.\n\nNOTE: When adding the path to your Toit CLI executable, if you are running the bash shell, simply exchange .zshrc with .bashrc\n\nIf you run into any problems or have questions, don't hesitate to contact us at toit.io!"
      },
      "date": 1662348891870
    },
    {
      "item": {
        "type": "factory",
        "id": "da8f37d79433cd63"
      },
      "id": "da8f37d79433cd63",
      "type": "add",
      "after": "92aa0634a5fc48d0",
      "date": 1662350194360
    },
    {
      "id": "da8f37d79433cd63",
      "type": "move",
      "order": [
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662350204296
    },
    {
      "type": "edit",
      "id": "da8f37d79433cd63",
      "item": {
        "type": "pagefold",
        "id": "da8f37d79433cd63",
        "text": "~"
      },
      "date": 1662350211909
    },
    {
      "item": {
        "type": "factory",
        "id": "d91236b1002cfb75"
      },
      "id": "d91236b1002cfb75",
      "type": "add",
      "after": "92aa0634a5fc48d0",
      "date": 1662350217108
    },
    {
      "id": "d91236b1002cfb75",
      "type": "move",
      "order": [
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "d91236b1002cfb75",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662350224994
    },
    {
      "id": "d91236b1002cfb75",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662350227244
    },
    {
      "type": "edit",
      "id": "d91236b1002cfb75",
      "item": {
        "type": "paragraph",
        "id": "d91236b1002cfb75",
        "text": "Labor Day"
      },
      "date": 1662350238658
    },
    {
      "type": "edit",
      "id": "d91236b1002cfb75",
      "item": {
        "type": "paragraph",
        "id": "d91236b1002cfb75",
        "text": "[[Labor Day]]"
      },
      "date": 1662350424887
    },
    {
      "type": "add",
      "id": "74cb9595484756dd",
      "item": {
        "type": "paragraph",
        "id": "74cb9595484756dd",
        "text": "Doppelte Einträge in der default Lepiter Datenbank"
      },
      "after": "d91236b1002cfb75",
      "date": 1662350578131
    },
    {
      "type": "edit",
      "id": "74cb9595484756dd",
      "item": {
        "type": "paragraph",
        "id": "74cb9595484756dd",
        "text": "\nDuplicate entries in the default Lepiter database"
      },
      "date": 1662350598175
    },
    {
      "type": "edit",
      "id": "74cb9595484756dd",
      "item": {
        "type": "paragraph",
        "id": "74cb9595484756dd",
        "text": "Duplicate entries in the default Lepiter database"
      },
      "date": 1662350612097
    },
    {
      "type": "add",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "paragraph",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed"
      },
      "after": "74cb9595484756dd",
      "date": 1662350629016
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed"
      },
      "date": 1662350631528
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`"
      },
      "date": 1662350649987
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?"
      },
      "date": 1662350882003
    },
    {
      "item": {
        "type": "factory",
        "id": "b6398843422e45f3"
      },
      "id": "b6398843422e45f3",
      "type": "add",
      "after": "92aa0634a5fc48d0",
      "date": 1662350907561
    },
    {
      "id": "b6398843422e45f3",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "b6398843422e45f3",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662350923120
    },
    {
      "type": "edit",
      "id": "b6398843422e45f3",
      "item": {
        "type": "video",
        "id": "b6398843422e45f3",
        "text": "YOUTUBE 3_bJyXfjztA"
      },
      "date": 1662350934603
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?\n"
      },
      "date": 1662351072468
    },
    {
      "type": "add",
      "id": "572e787701f62d4c",
      "item": {
        "type": "markdown",
        "id": "572e787701f62d4c",
        "text": "Before the Apple Macintosh, Microsoft Windows, Python, Java, and Objective-C, there was Smalltalk. "
      },
      "after": "f2895ec2deff0f7b",
      "date": 1662351073745
    },
    {
      "id": "572e787701f62d4c",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "b6398843422e45f3",
        "572e787701f62d4c",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662351084451
    },
    {
      "type": "edit",
      "id": "b6398843422e45f3",
      "item": {
        "type": "video",
        "id": "b6398843422e45f3",
        "text": "YOUTUBE 3_bJyXfjztA\nMaking Smalltalk"
      },
      "date": 1662351095548
    },
    {
      "id": "572e787701f62d4c",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662351149623
    },
    {
      "type": "edit",
      "id": "572e787701f62d4c",
      "item": {
        "type": "markdown",
        "id": "572e787701f62d4c",
        "text": "Before the Apple Macintosh, Microsoft Windows, Python, Java, and Objective-C, there was Smalltalk. \n"
      },
      "date": 1662351153709
    },
    {
      "type": "add",
      "id": "ebab461b4ed020ca",
      "item": {
        "type": "markdown",
        "id": "ebab461b4ed020ca",
        "text": "50 years ago this September, Smalltalk, which ultimately revolutionized personal computing, graphical user interfaces, and programming languages, was first created at Xerox PARC in Alan Kay’s Learning Research Group as a way to help children learn by using computers. \n\nJoin us for a night with Smalltalk pioneers and 2022 CHM Fellows Adele Goldberg and Daniel Ingalls to celebrate Smalltalk’s 50th anniversary. In an interactive discussion with moderator John Markoff, Goldberg and Ingalls will explore Smalltalk’s original mission in education and its influence on the world of object-oriented programming languages, development environments, and software engineering methodologies. Adding to the conversation will be newly-recorded remarks for this historic occasion from Smalltalk creator Alan Kay."
      },
      "after": "572e787701f62d4c",
      "date": 1662351155111
    },
    {
      "id": "b6398843422e45f3",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "ebab461b4ed020ca",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662351163980
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?\n﻿﻿\n"
      },
      "date": 1662364680423
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?\n﻿﻿> Raise an error if a page with the same title exists\n"
      },
      "date": 1662364693643
    },
    {
      "type": "edit",
      "id": "f2895ec2deff0f7b",
      "item": {
        "type": "markdown",
        "id": "f2895ec2deff0f7b",
        "text": "* default.zip created and default dir removed\n* `curl https://dl.feenk.com/scripts/mac.sh | bash`\n* How to detect duplicates in Lepiter databases?\n﻿﻿\n"
      },
      "date": 1662364724847
    },
    {
      "type": "add",
      "id": "3643012f8435822e",
      "item": {
        "type": "markdown",
        "id": "3643012f8435822e",
        "text": "> Raise an error if a page with the same title exists\n"
      },
      "after": "f2895ec2deff0f7b",
      "date": 1662364726479
    },
    {
      "type": "edit",
      "id": "572e787701f62d4c",
      "item": {
        "type": "markdown",
        "id": "572e787701f62d4c",
        "text": "Before the Apple Macintosh, Microsoft Windows, Python, Java, and Objective-C, there was [[Smalltalk]]. \n"
      },
      "date": 1662364745182
    },
    {
      "item": {
        "type": "factory",
        "id": "224bd3ad5902d272"
      },
      "id": "224bd3ad5902d272",
      "type": "add",
      "after": "92aa0634a5fc48d0",
      "date": 1662364755171
    },
    {
      "id": "224bd3ad5902d272",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "3643012f8435822e",
        "224bd3ad5902d272",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "ebab461b4ed020ca",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0"
      ],
      "date": 1662364762158
    },
    {
      "type": "edit",
      "id": "224bd3ad5902d272",
      "item": {
        "type": "pagefold",
        "id": "224bd3ad5902d272",
        "text": "~"
      },
      "date": 1662364765268
    },
    {
      "item": {
        "type": "factory",
        "id": "2ab7be4c14ea5ecb"
      },
      "id": "2ab7be4c14ea5ecb",
      "type": "add",
      "after": "92aa0634a5fc48d0",
      "date": 1662379064644
    },
    {
      "type": "edit",
      "id": "2ab7be4c14ea5ecb",
      "item": {
        "type": "pagefold",
        "id": "2ab7be4c14ea5ecb",
        "text": "~"
      },
      "date": 1662379068449
    },
    {
      "item": {
        "type": "factory",
        "id": "0511a7c9635a555d"
      },
      "id": "0511a7c9635a555d",
      "type": "add",
      "after": "2ab7be4c14ea5ecb",
      "date": 1662379070080
    },
    {
      "type": "edit",
      "id": "0511a7c9635a555d",
      "item": {
        "type": "reference",
        "id": "0511a7c9635a555d",
        "site": "marc.tries.fed.wiki",
        "slug": "six-nested-questions",
        "title": "Six Nested Questions",
        "text": "I began with [[Four Nested Questions]]"
      },
      "date": 1662379074782
    },
    {
      "item": {
        "type": "factory",
        "id": "940c709973399d06"
      },
      "id": "940c709973399d06",
      "type": "add",
      "after": "0511a7c9635a555d",
      "date": 1662379282207
    },
    {
      "type": "edit",
      "id": "940c709973399d06",
      "item": {
        "type": "reference",
        "id": "940c709973399d06",
        "site": "risks.rodwell.me",
        "slug": "quantum-ai-breakthrough-theorem-shrinks-appetite-for-training-data",
        "title": "Quantum AI Breakthrough: Theorem Shrinks Appetite for Training Data",
        "text": "Los Alamos National Laboratory, 23 Aug 2022, via ACM TechNews, 29 Aug 2022"
      },
      "date": 1662379284826
    },
    {
      "item": {
        "type": "factory",
        "id": "4c0773a155b41a24"
      },
      "id": "4c0773a155b41a24",
      "type": "add",
      "after": "940c709973399d06",
      "date": 1662379556478
    },
    {
      "type": "edit",
      "id": "4c0773a155b41a24",
      "item": {
        "type": "markdown",
        "id": "4c0773a155b41a24",
        "text": "> The ultimate goal of machine learning (ML) is to make accurate predictions on unseen data."
      },
      "date": 1662379559016
    },
    {
      "type": "edit",
      "id": "4c0773a155b41a24",
      "item": {
        "type": "markdown",
        "id": "4c0773a155b41a24",
        "text": "> The ultimate goal of [[machine learning]] (ML) is to make accurate predictions on unseen data."
      },
      "date": 1662379569131
    },
    {
      "type": "edit",
      "id": "4c0773a155b41a24",
      "item": {
        "type": "markdown",
        "id": "4c0773a155b41a24",
        "text": "> The ultimate goal of [[Machine Learning]] (ML) is to make accurate predictions on unseen data."
      },
      "date": 1662379617628
    },
    {
      "item": {
        "type": "factory",
        "id": "7992914d38899b7a"
      },
      "id": "7992914d38899b7a",
      "type": "add",
      "after": "4c0773a155b41a24",
      "date": 1662379619428
    },
    {
      "type": "edit",
      "id": "7992914d38899b7a",
      "item": {
        "type": "graphviz",
        "id": "7992914d38899b7a",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1662379628742
    },
    {
      "item": {
        "type": "factory",
        "id": "ee05b6884bfb7ba7"
      },
      "id": "ee05b6884bfb7ba7",
      "type": "add",
      "after": "7992914d38899b7a",
      "date": 1662380195448
    },
    {
      "type": "edit",
      "id": "ee05b6884bfb7ba7",
      "item": {
        "type": "reference",
        "id": "ee05b6884bfb7ba7",
        "site": "risks.rodwell.me",
        "slug": "satellites-keep-the-worlds-clocks-on-time--what-if-they-fail",
        "title": "Satellites Keep the World's Clocks on Time.  What if They Fail",
        "text": "Standardized time is broadcast by satellite networks around the world, but their signals are vulnerable to interference --tso he UK is building a more resilient system."
      },
      "date": 1662380198047
    },
    {
      "id": "ee05b6884bfb7ba7",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "3643012f8435822e",
        "224bd3ad5902d272",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "ebab461b4ed020ca",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0",
        "2ab7be4c14ea5ecb",
        "0511a7c9635a555d",
        "940c709973399d06",
        "4c0773a155b41a24",
        "ee05b6884bfb7ba7",
        "7992914d38899b7a"
      ],
      "date": 1662380320642
    },
    {
      "item": {
        "type": "factory",
        "id": "8f42df833185751e"
      },
      "id": "8f42df833185751e",
      "type": "add",
      "after": "7992914d38899b7a",
      "date": 1662380362067
    },
    {
      "type": "edit",
      "id": "8f42df833185751e",
      "item": {
        "type": "paragraph",
        "id": "8f42df833185751e",
        "text": "⇒ [[Reflector]]"
      },
      "date": 1662380368000
    },
    {
      "id": "8f42df833185751e",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "3643012f8435822e",
        "224bd3ad5902d272",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "ebab461b4ed020ca",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0",
        "2ab7be4c14ea5ecb",
        "0511a7c9635a555d",
        "940c709973399d06",
        "4c0773a155b41a24",
        "ee05b6884bfb7ba7",
        "8f42df833185751e",
        "7992914d38899b7a"
      ],
      "date": 1662380376560
    },
    {
      "item": {
        "type": "factory",
        "id": "f020b6c22154a71b"
      },
      "id": "f020b6c22154a71b",
      "type": "add",
      "after": "7992914d38899b7a",
      "date": 1662380806222
    },
    {
      "type": "edit",
      "id": "f020b6c22154a71b",
      "item": {
        "type": "reference",
        "id": "f020b6c22154a71b",
        "site": "ward.dojo.fed.wiki",
        "slug": "select-an-emoji",
        "title": "Select an Emoji",
        "text": "Can we offer a menu of emoji faces as a substitute for other identity in the super collaborator?"
      },
      "date": 1662380812543
    },
    {
      "item": {
        "type": "factory",
        "id": "8bbf6c60363eb93f"
      },
      "id": "8bbf6c60363eb93f",
      "type": "add",
      "after": "f020b6c22154a71b",
      "date": 1662380947273
    },
    {
      "type": "edit",
      "id": "8bbf6c60363eb93f",
      "item": {
        "type": "reference",
        "id": "8bbf6c60363eb93f",
        "site": "marc.tries.fed.wiki",
        "slug": "qulturum",
        "title": "Qulturum",
        "text": "# QULTURUM"
      },
      "date": 1662380952134
    },
    {
      "type": "edit",
      "id": "8bbf6c60363eb93f",
      "item": {
        "type": "reference",
        "id": "8bbf6c60363eb93f",
        "site": "marc.tries.fed.wiki",
        "slug": "qulturum",
        "title": "Qulturum",
        "text": "A remarkably successful community-scale, whole sector, improvement system in Jönköping County, Sweden."
      },
      "date": 1662380977424
    },
    {
      "item": {
        "type": "factory",
        "id": "79a407c5527570e8"
      },
      "id": "79a407c5527570e8",
      "type": "add",
      "after": "8bbf6c60363eb93f",
      "date": 1662381043644
    },
    {
      "type": "edit",
      "id": "79a407c5527570e8",
      "item": {
        "type": "reference",
        "id": "79a407c5527570e8",
        "site": "ward.asia.wiki.org",
        "slug": "super-collaborator",
        "title": "Super Collaborator",
        "text": "We explore the [[Hypertext Super Collaborator]] by assembling some recent discoveries in federated wiki. We cast this as a concurrent multi-user web application streaming fragments and then assembling them as participants find them interesting. [https://github.com/WardCunningham/assets/tree/master/pages/super-collaborator github]"
      },
      "date": 1662381051963
    },
    {
      "item": {
        "type": "factory",
        "id": "d844ab27e15d1a72"
      },
      "id": "d844ab27e15d1a72",
      "type": "add",
      "after": "79a407c5527570e8",
      "date": 1662381074439
    },
    {
      "type": "edit",
      "id": "d844ab27e15d1a72",
      "item": {
        "type": "reference",
        "id": "d844ab27e15d1a72",
        "site": "ward.asia.wiki.org",
        "slug": "croquet-in-modules",
        "title": "Croquet in Modules",
        "text": "We consider how Croquet might mix with ES6 modules."
      },
      "date": 1662381078201
    },
    {
      "item": {
        "type": "factory",
        "id": "ed82fe9962f41d99"
      },
      "id": "ed82fe9962f41d99",
      "type": "add",
      "after": "d844ab27e15d1a72",
      "date": 1662381312987
    },
    {
      "type": "edit",
      "id": "ed82fe9962f41d99",
      "item": {
        "type": "reference",
        "id": "ed82fe9962f41d99",
        "site": "ward.asia.wiki.org",
        "slug": "hypertext-super-collaborator",
        "title": "Hypertext Super Collaborator",
        "text": "We provide an assembly theory inspired reaction vessel where low-index concepts can be drawn from a real-time beam, reconciled, visualized, selected, and returned to the beam as time advances. [https://en.wikipedia.org/wiki/Superconducting_Super_Collider wikipedia]"
      },
      "date": 1662381316438
    },
    {
      "id": "ed82fe9962f41d99",
      "type": "move",
      "order": [
        "d91236b1002cfb75",
        "74cb9595484756dd",
        "f2895ec2deff0f7b",
        "3643012f8435822e",
        "224bd3ad5902d272",
        "572e787701f62d4c",
        "b6398843422e45f3",
        "ebab461b4ed020ca",
        "da8f37d79433cd63",
        "6bfe9bd5813e4ed0",
        "43e284bb4ef34666",
        "3f7370f0df66b320",
        "8ab47166a024ebff",
        "81eda3bee6253a2b",
        "1b15c34617212626",
        "5d61d217f85fc291",
        "105880ef81dd22b4",
        "e5bdac50ef2d49ee",
        "ff928a98fbc0a7df",
        "5dd0877a5ec7cf9a",
        "a59f264fc6d011ad",
        "63d7143bf85750ec",
        "873967db1d7be5be",
        "92aa0634a5fc48d0",
        "2ab7be4c14ea5ecb",
        "0511a7c9635a555d",
        "940c709973399d06",
        "4c0773a155b41a24",
        "ee05b6884bfb7ba7",
        "8f42df833185751e",
        "7992914d38899b7a",
        "f020b6c22154a71b",
        "8bbf6c60363eb93f",
        "79a407c5527570e8",
        "ed82fe9962f41d99",
        "d844ab27e15d1a72"
      ],
      "date": 1662381318717
    }
  ]
}