{
  "title": "Event Sourcing for Enterprise",
  "story": [
    {
      "type": "video",
      "id": "cbdc34e48d1ebb44",
      "text": "YOUTUBE xQ5YkMBPe0o\nHow to build an Event Sourcing system, and how to avoid common pitfalls when decoupling for distributed systems. By [https://twitter.com/BenBeattieHood @BenBeattieHood]\n"
    },
    {
      "type": "markdown",
      "id": "0c626d9d25c7fba4",
      "text": "Contents:\n- 0:00​ Introduction\n- 0:50​ What is Event Sourcing?\n- 8:49​ Why use Event Sourcing?\n- 14:48​ Domain-driven design for distributed systems\n- 16:17​ Principles for successful event design\n- 21:55​ How to build an Event Sourcing system from the ground up\n- 22:09​ Commands & Events\n- 24:54​ Readstores & Eventual Consistency\n- 29:06​ Interpretors & Enrichers\n- 31:00​ Scaling and sharding\n- 34:13​ Four rules of Aggregate design\n- 36:09​ Conclusion, and pros and cons (incl behavioural analysis)"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Event Sourcing for Enterprise",
        "story": []
      },
      "date": 1612818546160
    },
    {
      "item": {
        "type": "factory",
        "id": "9cc00ef7f26b176f"
      },
      "id": "9cc00ef7f26b176f",
      "type": "add",
      "date": 1612818547753
    },
    {
      "type": "edit",
      "id": "9cc00ef7f26b176f",
      "item": {
        "type": "video",
        "id": "9cc00ef7f26b176f",
        "text": "YOUTUBE kyu8RY5NO3w\n(double-click to edit caption)\n"
      },
      "date": 1612818556169
    },
    {
      "item": {
        "type": "factory",
        "id": "cbdc34e48d1ebb44"
      },
      "id": "cbdc34e48d1ebb44",
      "type": "add",
      "after": "9cc00ef7f26b176f",
      "date": 1612818587247
    },
    {
      "type": "edit",
      "id": "cbdc34e48d1ebb44",
      "item": {
        "type": "video",
        "id": "cbdc34e48d1ebb44",
        "text": "YOUTUBE xQ5YkMBPe0o\n(double-click to edit caption)\n"
      },
      "date": 1612818596536
    },
    {
      "type": "edit",
      "id": "9cc00ef7f26b176f",
      "item": {
        "type": "video",
        "id": "9cc00ef7f26b176f",
        "text": "\n"
      },
      "date": 1612818605680
    },
    {
      "type": "remove",
      "id": "9cc00ef7f26b176f",
      "date": 1612818615025
    },
    {
      "type": "edit",
      "id": "cbdc34e48d1ebb44",
      "item": {
        "type": "video",
        "id": "cbdc34e48d1ebb44",
        "text": "YOUTUBE xQ5YkMBPe0o\nHow to build an Event Sourcing system, and how to avoid common pitfalls when decoupling for distributed systems.\n"
      },
      "date": 1612818698136
    },
    {
      "type": "edit",
      "id": "cbdc34e48d1ebb44",
      "item": {
        "type": "video",
        "id": "cbdc34e48d1ebb44",
        "text": "YOUTUBE xQ5YkMBPe0o\nHow to build an Event Sourcing system, and how to avoid common pitfalls when decoupling for distributed systems. By @BenBeattieHood\n"
      },
      "date": 1612818740358
    },
    {
      "type": "edit",
      "id": "cbdc34e48d1ebb44",
      "item": {
        "type": "video",
        "id": "cbdc34e48d1ebb44",
        "text": "YOUTUBE xQ5YkMBPe0o\nHow to build an Event Sourcing system, and how to avoid common pitfalls when decoupling for distributed systems. By [https://twitter.com/BenBeattieHood @BenBeattieHood]\n"
      },
      "date": 1612818779965
    },
    {
      "item": {
        "type": "factory",
        "id": "0c626d9d25c7fba4"
      },
      "id": "0c626d9d25c7fba4",
      "type": "add",
      "after": "cbdc34e48d1ebb44",
      "date": 1612818794415
    },
    {
      "type": "edit",
      "id": "0c626d9d25c7fba4",
      "item": {
        "type": "markdown",
        "id": "0c626d9d25c7fba4",
        "text": "Contents:\n- 0:00​ Introduction\n- 0:50​ What is Event Sourcing?\n- 8:49​ Why use Event Sourcing?\n- 14:48​ Domain-driven design for distributed systems\n- 16:17​ Principles for successful event design\n- 21:55​ How to build an Event Sourcing system from the ground up\n- 22:09​ Commands & Events\n- 24:54​ Readstores & Eventual Consistency\n- 29:06​ Interpretors & Enrichers\n- 31:00​ Scaling and sharding\n- 34:13​ Four rules of Aggregate design\n- 36:09​ Conclusion, and pros and cons (incl behavioural analysis)"
      },
      "date": 1612818857869
    },
    {
      "type": "fork",
      "site": "clive.tries.fed.wiki",
      "date": 1628865749462
    }
  ]
}