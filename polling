{
  "title": "Polling",
  "story": [
    {
      "type": "paragraph",
      "id": "1bec527557e7005a",
      "text": "Polling limits the capabilities of the MVC paradigm. The use of processor time to test for incoming events is the primary shortcoming, especially in a multitasking environment. Polling becomes very difficult and inefficient in a multitasking environment because it limits the system to sequential processing of user input and eliminates the possibility for multiple input foci. In addition, polling code is typically littered with special case tests and exceptions. The thread of control becomes confusing because of multiple nested polling loops in the controllers. Secondly, there is considerable processing overhead involved in finding the active view and the correct context for an event."
    },
    {
      "type": "paragraph",
      "id": "3a28f3b0f0c4c204",
      "text": "⇐ [[Controllers]]"
    },
    {
      "type": "paragraph",
      "id": "0ca0f8beeb3f4081",
      "text": "⇐ [[Event Management]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Polling",
        "story": []
      },
      "date": 1655961010286
    },
    {
      "item": {
        "type": "factory",
        "id": "1bec527557e7005a"
      },
      "id": "1bec527557e7005a",
      "type": "add",
      "date": 1655961020563
    },
    {
      "type": "edit",
      "id": "1bec527557e7005a",
      "item": {
        "type": "paragraph",
        "id": "1bec527557e7005a",
        "text": "Polling limits the capabilities of the MVC paradigm. The use of processor time to test for incoming events is the primary shortcoming, especially in a multitasking environment. Polling becomes very difficult and inefficient in a multi'asking environment because it limits the system to sequential processing of user input and eliminates the possibility for multiple input foci. In addition, polling code is typically littered with special case tests and exceptions. The thread of control becomes confusing because of multiple nested polling loops in the controllers. Secondly, there is considerable processing overhead involved in finding the active view and the correct context for an event."
      },
      "date": 1655961021610
    },
    {
      "type": "edit",
      "id": "1bec527557e7005a",
      "item": {
        "type": "paragraph",
        "id": "1bec527557e7005a",
        "text": "Polling limits the capabilities of the MVC paradigm. The use of processor time to test for incoming events is the primary shortcoming, especially in a multitasking environment. Polling becomes very difficult and inefficient in a multitasking environment because it limits the system to sequential processing of user input and eliminates the possibility for multiple input foci. In addition, polling code is typically littered with special case tests and exceptions. The thread of control becomes confusing because of multiple nested polling loops in the controllers. Secondly, there is considerable processing overhead involved in finding the active view and the correct context for an event."
      },
      "date": 1655961047371
    },
    {
      "item": {
        "type": "factory",
        "id": "83eafcaf6dc6a2bc"
      },
      "id": "83eafcaf6dc6a2bc",
      "type": "add",
      "after": "1bec527557e7005a",
      "date": 1655961080544
    },
    {
      "type": "edit",
      "id": "83eafcaf6dc6a2bc",
      "item": {
        "type": "paragraph",
        "id": "83eafcaf6dc6a2bc",
        "text": "Since each type of view has its own input requirements and set of valid user interactions, each view has an associated controller which handles user input. In a typical system there are several different types of view and thus several different types of controller. These view/controller pairs normally fall into one of four broad groups; those dealing with text, lists or graphics and those dealing with aggregates of the above three."
      },
      "date": 1655961082269
    },
    {
      "item": {
        "type": "factory",
        "id": "3a28f3b0f0c4c204"
      },
      "id": "3a28f3b0f0c4c204",
      "type": "add",
      "after": "83eafcaf6dc6a2bc",
      "date": 1655961146360
    },
    {
      "type": "edit",
      "id": "3a28f3b0f0c4c204",
      "item": {
        "type": "paragraph",
        "id": "3a28f3b0f0c4c204",
        "text": "⇒ [[Controllers]]"
      },
      "date": 1655961158245
    },
    {
      "id": "83eafcaf6dc6a2bc",
      "type": "remove",
      "date": 1655961160601
    },
    {
      "type": "edit",
      "id": "3a28f3b0f0c4c204",
      "item": {
        "type": "paragraph",
        "id": "3a28f3b0f0c4c204",
        "text": "⇐ [[Controllers]]"
      },
      "date": 1655961324428
    },
    {
      "type": "add",
      "id": "0ca0f8beeb3f4081",
      "item": {
        "type": "paragraph",
        "id": "0ca0f8beeb3f4081",
        "text": "[[Event Management]]"
      },
      "after": "3a28f3b0f0c4c204",
      "date": 1655963657458
    },
    {
      "type": "edit",
      "id": "0ca0f8beeb3f4081",
      "item": {
        "type": "paragraph",
        "id": "0ca0f8beeb3f4081",
        "text": "⇐ [[Event Management]]"
      },
      "date": 1655963663921
    }
  ]
}