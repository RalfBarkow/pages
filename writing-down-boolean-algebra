{
  "title": "Writing Down Boolean Algebra",
  "story": [
    {
      "type": "paragraph",
      "id": "3671c8ba4b9c6496",
      "text": "a diagrammatic way of writing down boolean algebra "
    },
    {
      "type": "video",
      "id": "e9deec46ace1a5b3",
      "text": "START 4888\nYOUTUBE fGB94bah1PM\nA conversation between Louis Kauffman and Stephen Wolfram at the Wolfram Summer School 2021"
    },
    {
      "type": "paragraph",
      "id": "f167022e7fb46786",
      "text": "Well you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of [[Form]] where we take the form of distinction for the form."
    },
    {
      "type": "paragraph",
      "id": "d543f60535fdae2a",
      "text": "so when i represent form i represent it as some form of distinction and this is analogous to number i represent um the number two by an instantiation of the number two like two slashes i represent form by some thing that has form like a circle or a right angle bracket and it has form in as much as it makes a distinction in the space upon which it is inscribed or written so i&#39;m beginning there"
    },
    {
      "type": "image",
      "id": "4093ad9254027d2a",
      "text": "Form",
      "size": "wide",
      "width": 430,
      "height": 220,
      "url": "/assets/plugins/image/ca76b6fc70099494f3807cd5bd68a896.jpg"
    },
    {
      "type": "paragraph",
      "id": "e8b6c374a0e9837d",
      "text": "and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is: a form, a [[Distinction]]."
    },
    {
      "type": "paragraph",
      "id": "6fb604d4ea44da71",
      "text": "Of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself"
    },
    {
      "type": "image",
      "id": "c2ea16e224782860",
      "text": "2",
      "size": "wide",
      "width": 430,
      "height": 219,
      "url": "/assets/plugins/image/414bff5fffb6f44a6e94c617584c9982.jpg"
    },
    {
      "type": "paragraph",
      "id": "6062ffbe0ef7341e",
      "text": "so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that [[Movement]]."
    },
    {
      "type": "paragraph",
      "id": "a3e67015185754ab",
      "text": "anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Writing Down Boolean Algebra",
        "story": []
      },
      "date": 1719846696726
    },
    {
      "item": {
        "type": "factory",
        "id": "3671c8ba4b9c6496"
      },
      "id": "3671c8ba4b9c6496",
      "type": "add",
      "date": 1719846736755
    },
    {
      "item": {
        "type": "factory",
        "id": "e9deec46ace1a5b3"
      },
      "id": "e9deec46ace1a5b3",
      "type": "add",
      "after": "3671c8ba4b9c6496",
      "date": 1719846739905
    },
    {
      "type": "edit",
      "id": "e9deec46ace1a5b3",
      "item": {
        "type": "video",
        "id": "e9deec46ace1a5b3",
        "text": "YOUTUBE fGB94bah1PM"
      },
      "date": 1719846748471
    },
    {
      "type": "edit",
      "id": "3671c8ba4b9c6496",
      "item": {
        "type": "paragraph",
        "id": "3671c8ba4b9c6496",
        "text": " diagrammatic way of writing down boolean algebra um well you could you could ..."
      },
      "date": 1719846818160
    },
    {
      "type": "edit",
      "id": "3671c8ba4b9c6496",
      "item": {
        "type": "paragraph",
        "id": "3671c8ba4b9c6496",
        "text": "a diagrammatic way of writing down boolean algebra "
      },
      "date": 1719846826882
    },
    {
      "item": {
        "type": "factory",
        "id": "f167022e7fb46786"
      },
      "id": "f167022e7fb46786",
      "type": "add",
      "after": "e9deec46ace1a5b3",
      "date": 1719846972154
    },
    {
      "type": "edit",
      "id": "f167022e7fb46786",
      "item": {
        "type": "paragraph",
        "id": "f167022e7fb46786",
        "text": "um well you could you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of form uh where we take uh the form of distinction for the form so when i represent form i represent it as some form of distinction and this is analogous to number i represent um the number two by an instantiation of the number two like two slashes i represent form by some thing that has form like a circle or a right angle bracket and it has form in as much as it makes a distinction in the space upon which it is inscribed or written so i&#39;m beginning there uh and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is um a form a distinction of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that movement anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense \n"
      },
      "date": 1719846974238
    },
    {
      "type": "edit",
      "id": "e9deec46ace1a5b3",
      "item": {
        "type": "video",
        "id": "e9deec46ace1a5b3",
        "text": "YOUTUBE fGB94bah1PM\nA conversation between Louis Kauffman and Stephen Wolfram at the Wolfram Summer School 2021"
      },
      "date": 1719846994948
    },
    {
      "type": "edit",
      "id": "e9deec46ace1a5b3",
      "item": {
        "type": "video",
        "id": "e9deec46ace1a5b3",
        "text": "START 4880\nYOUTUBE fGB94bah1PM\nA conversation between Louis Kauffman and Stephen Wolfram at the Wolfram Summer School 2021"
      },
      "date": 1719847107515
    },
    {
      "type": "edit",
      "id": "f167022e7fb46786",
      "item": {
        "type": "paragraph",
        "id": "f167022e7fb46786",
        "text": "um well you could you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of form where we take the form of distinction for the form."
      },
      "date": 1719847175702
    },
    {
      "type": "add",
      "id": "d543f60535fdae2a",
      "item": {
        "type": "paragraph",
        "id": "d543f60535fdae2a",
        "text": "so when i represent form i represent it as some form of distinction and this is analogous to number i represent um the number two by an instantiation of the number two like two slashes i represent form by some thing that has form like a circle or a right angle bracket and it has form in as much as it makes a distinction in the space upon which it is inscribed or written so i&#39;m beginning there uh and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is um a form a distinction of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that movement anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense"
      },
      "after": "f167022e7fb46786",
      "date": 1719847181157
    },
    {
      "type": "edit",
      "id": "d543f60535fdae2a",
      "item": {
        "type": "paragraph",
        "id": "d543f60535fdae2a",
        "text": "so when i represent form i represent it as some form of distinction and this is analogous to number i represent um the number two by an instantiation of the number two like two slashes i represent form by some thing that has form like a circle or a right angle bracket and it has form in as much as it makes a distinction in the space upon which it is inscribed or written so i&#39;m beginning there"
      },
      "date": 1719847228741
    },
    {
      "type": "add",
      "id": "e8b6c374a0e9837d",
      "item": {
        "type": "paragraph",
        "id": "e8b6c374a0e9837d",
        "text": "and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is um a form a distinction of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that movement anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense"
      },
      "after": "d543f60535fdae2a",
      "date": 1719847230502
    },
    {
      "item": {
        "type": "factory",
        "id": "4093ad9254027d2a"
      },
      "id": "4093ad9254027d2a",
      "type": "add",
      "after": "e8b6c374a0e9837d",
      "date": 1719847382020
    },
    {
      "id": "4093ad9254027d2a",
      "type": "move",
      "order": [
        "3671c8ba4b9c6496",
        "e9deec46ace1a5b3",
        "f167022e7fb46786",
        "d543f60535fdae2a",
        "4093ad9254027d2a",
        "e8b6c374a0e9837d"
      ],
      "date": 1719847394207
    },
    {
      "type": "edit",
      "id": "4093ad9254027d2a",
      "item": {
        "type": "image",
        "id": "4093ad9254027d2a",
        "text": "Form",
        "size": "wide",
        "width": 430,
        "height": 220,
        "url": "/assets/plugins/image/ca76b6fc70099494f3807cd5bd68a896.jpg"
      },
      "date": 1719847421004
    },
    {
      "type": "edit",
      "id": "e8b6c374a0e9837d",
      "item": {
        "type": "paragraph",
        "id": "e8b6c374a0e9837d",
        "text": "and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is um a form a distinction"
      },
      "date": 1719847485371
    },
    {
      "type": "add",
      "id": "6fb604d4ea44da71",
      "item": {
        "type": "paragraph",
        "id": "6fb604d4ea44da71",
        "text": "Of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that movement anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense"
      },
      "after": "e8b6c374a0e9837d",
      "date": 1719847490280
    },
    {
      "type": "edit",
      "id": "6fb604d4ea44da71",
      "item": {
        "type": "paragraph",
        "id": "6fb604d4ea44da71",
        "text": "Of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that movement."
      },
      "date": 1719847512309
    },
    {
      "type": "add",
      "id": "a3e67015185754ab",
      "item": {
        "type": "paragraph",
        "id": "a3e67015185754ab",
        "text": "anyway um there are these two rules that if you put two things next to one another it becomes just one of them and it can cancel itself and this could be motivated by thinking of what it means to be taken as an argument it could mean that you cross the boundary of a distinction that is indicated on the inside if you cross from what&#39;s on the inside then you&#39;re on the outside if you cross from the marked state you&#39;re unmarked if you cross from the unmarked state you&#39;re marked so crossover cross is unmarked and cross next to cross is like saying the name of something twice now the issues of crossing a boundary or crossing or going from one side of its distinction to another or of saying the name of something of course are fundamentally the same issues that bull is considering so it isn&#39;t uh it isn&#39;t surprising that this is going to be a model for boolean logic and it is but but when you make a model for boolean logic out of it the mark is separated into the complementation operator boolean logic has a separate complementation operator and two values zero and one so so this this this system that i just described is differentiated a little bit to become boolean although it also has a i mean whereas but you have an operation which is the you know the adjacency operation of two marks and you also have the the nesting operation of two marks as i understand it and those are so so you&#39;ve traded off kind of uh you know in a sense the true false thing is being traded off for having these two operations i mean you might okay in boolean algebra we know that you can have just nand as a functionally complete thing but then you have to have true and false as the values what you&#39;re saying here is you only have to have one thing as like a value but then you have two operations well well i have the one i have two things is i have one thing as a value and i have no nothing as the other value fair enough fair enough okay but that&#39;s a i see i see okay but that then but then isn&#39;t i mean the single hook thing is is it is that&#39;s as a unary form that&#39;s a not that&#39;s like a not but as a binary form it&#39;s like a nand is that is that right um yeah it can it becomes and uh and is a and b in logic is not not a or not b so of course you can make and in the same way here uh and it will look like this yep so indeed in binary form it can produce the and but in binary form with some negations inside but that that um that concatenation of a and the the a bar thing and the b bar thing how am i supposed to read that concatenation is that is that an is that like an or that&#39;s like an or okay and then so it&#39;s a knot of an or okay so that that&#39;s nothing nothing uh startling at that point no right but but so so now there&#39;s a lot you can obviously do as you can in boolean algebra of looking at equivalences between different um uh you know different forms and so on i&#39;m curious is there some geometrical or or not theoretic way to think about those equivalences is that um i mean when you when you say you know this this expression is equivalent to this other expression are you are you able to sort of entrain ideas from topology knots geometry or whatever and thinking about those kinds of things um well it begins to feel like knot theory when you are looking at uh systems with feedback uh with systems with self-reference in them because then you have a lot of circularities in your graphs and when you say reference yeah what is is that when you define self-reference is it like saying a equals some expression with with these operators that contains an a is that what you mean by self-reference yes yes so it&#39;s like a functional equation well actually i call that re-entry and i don&#39;t use self-reference so much but i i just used it a moment ago right right but so so in a sense you&#39;re defining a functional equation of some kind so if i if i were to say a equals um so so in some sense"
      },
      "after": "6fb604d4ea44da71",
      "date": 1719847515550
    },
    {
      "type": "edit",
      "id": "6fb604d4ea44da71",
      "item": {
        "type": "paragraph",
        "id": "6fb604d4ea44da71",
        "text": "Of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that [[Movement]]."
      },
      "date": 1719847524242
    },
    {
      "type": "edit",
      "id": "e9deec46ace1a5b3",
      "item": {
        "type": "video",
        "id": "e9deec46ace1a5b3",
        "text": "START 4888\nYOUTUBE fGB94bah1PM\nA conversation between Louis Kauffman and Stephen Wolfram at the Wolfram Summer School 2021"
      },
      "date": 1719848234866
    },
    {
      "type": "edit",
      "id": "f167022e7fb46786",
      "item": {
        "type": "paragraph",
        "id": "f167022e7fb46786",
        "text": "um well you could you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of [[Form]] where we take the form of distinction for the form."
      },
      "date": 1719848271607
    },
    {
      "type": "edit",
      "id": "e8b6c374a0e9837d",
      "item": {
        "type": "paragraph",
        "id": "e8b6c374a0e9837d",
        "text": "and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is um a form, a [[Distinction]]."
      },
      "date": 1719848388001
    },
    {
      "type": "edit",
      "id": "f167022e7fb46786",
      "item": {
        "type": "paragraph",
        "id": "f167022e7fb46786",
        "text": "well you could you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of [[Form]] where we take the form of distinction for the form."
      },
      "date": 1719848413968
    },
    {
      "type": "edit",
      "id": "e8b6c374a0e9837d",
      "item": {
        "type": "paragraph",
        "id": "e8b6c374a0e9837d",
        "text": "and that means that when i write an in a form some form like that one spencer brown&#39;s notation then um and then it is actually referring to itself along with uh referring to something else perhaps because it itself is: a form, a [[Distinction]]."
      },
      "date": 1719848449247
    },
    {
      "type": "edit",
      "id": "6fb604d4ea44da71",
      "item": {
        "type": "paragraph",
        "id": "6fb604d4ea44da71",
        "text": "Of course the same is true of the number two um if i write down this for the number two that it refers to any couple including itself"
      },
      "date": 1719849466595
    },
    {
      "type": "fork",
      "date": 1719849572258
    },
    {
      "item": {
        "type": "factory",
        "id": "c2ea16e224782860"
      },
      "id": "c2ea16e224782860",
      "type": "add",
      "after": "a3e67015185754ab",
      "date": 1719849574032
    },
    {
      "type": "edit",
      "id": "c2ea16e224782860",
      "item": {
        "type": "image",
        "id": "c2ea16e224782860",
        "text": "2",
        "size": "wide",
        "width": 430,
        "height": 219,
        "url": "/assets/plugins/image/414bff5fffb6f44a6e94c617584c9982.jpg"
      },
      "date": 1719849583289
    },
    {
      "id": "c2ea16e224782860",
      "type": "move",
      "order": [
        "3671c8ba4b9c6496",
        "e9deec46ace1a5b3",
        "f167022e7fb46786",
        "d543f60535fdae2a",
        "4093ad9254027d2a",
        "e8b6c374a0e9837d",
        "6fb604d4ea44da71",
        "c2ea16e224782860",
        "a3e67015185754ab"
      ],
      "date": 1719849603437
    },
    {
      "id": "6062ffbe0ef7341e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6062ffbe0ef7341e",
        "text": "so there&#39;s nothing strange about this except to become conscious of it it seems a little strange because we&#39;re usually unconscious of that [[Movement]]."
      },
      "after": "c2ea16e224782860",
      "attribution": {
        "page": "scratch"
      },
      "date": 1719849684444
    },
    {
      "type": "edit",
      "id": "f167022e7fb46786",
      "item": {
        "type": "paragraph",
        "id": "f167022e7fb46786",
        "text": "Well you could think of it as having started that way but i prefer to think of it on its own grounds that it is a way of speaking of [[Form]] where we take the form of distinction for the form."
      },
      "date": 1719849813915
    }
  ]
}