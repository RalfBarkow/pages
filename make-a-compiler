{
  "title": "Make a Compiler",
  "story": [
    {
      "type": "markdown",
      "id": "9514bcf0cd8d9698",
      "text": "There is a fantastic [http://www.bayfronttechnologies.com/mc_tutorial.html tutorial by James Neighbors] that we highly recommend going through. \n\n\n"
    },
    {
      "type": "paragraph",
      "id": "e04688685bdc3fe3",
      "text": "You are going to make a compiler right here on these web pages. Yes – no kidding. In fact you are going to make a lot of compilers – and it's all going to be easy. No Ajax, Active X, DLLs, SOs, ASP, CGI, Java, plugins, modules, XML, cookies, PHP, Perl, Python, magic shell operations, world wide standard du jour, or intergalactic domination plans are necessary – just plain JavaScript in frames. "
    },
    {
      "type": "paragraph",
      "id": "b4702d2761f06d7b",
      "text": "Also you will be able to move the compiler you build off these web pages and into your programming language of choice by cutting and pasting. After all a compiler is just a program that reads text and writes text or binary. Most general purpose programming languages are capable of doing that. "
    },
    {
      "type": "markdown",
      "id": "ed08cee9b04ffe2a",
      "text": "## Background and History"
    },
    {
      "type": "markdown",
      "id": "7551dd64c43479bb",
      "text": "Programming languages above the level of individual machine assembly languages were introduced in the 1950s. The idea was to be able to write programs independent of any particular machine. It seems an obvious notion now, but was a big innovation then.\n\n\n"
    },
    {
      "type": "markdown",
      "id": "6f97cfd208d280fc",
      "text": "Following IBM's FORTRAN in 1954 the first widely discussed academic language was ALGOL 60 from 1960. This set off a flurry of interest in how a compiler for ALGOL 60 could be made and then easily ported to all the wildly different machine assembly languages of the time. One proposed method was [[META II]] that was published by D.V. Schorre in the 1964 ACM National Conference. Below are the reference, link, and abstract of the 1964 META II paper [Schorre64]. "
    },
    {
      "type": "markdown",
      "id": "73174abbbfb61327",
      "text": "[Schorre64]\nD. V. Schorre, \"META II: A Syntax-Oriented Compiler Writing Language,\" Proceedings of the 19th ACM National Conference (1964), ACM Press, New York, NY, 41.301-41.3011. http://doi.acm.org/10.1145/800257.808896"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Make a Compiler",
        "story": []
      },
      "date": 1670971336078
    },
    {
      "id": "9514bcf0cd8d9698",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [tutorial by James Neighbors](http://www.bayfronttechnologies.com/mc_tutorial.html) that I highly recommend going through. My code here in this repo was based on the code found in the [workshop page](http://www.bayfronttechnologies.com/mc_workshop.html).\n\n\n"
      },
      "date": 1670971359617
    },
    {
      "type": "edit",
      "id": "9514bcf0cd8d9698",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [tutorial by James Neighbors](http://www.bayfronttechnologies.com/mc_tutorial.html) that [[Dan Ingalls]] highly recommend going through. My code here in this repo was based on the code found in the [workshop page](http://www.bayfronttechnologies.com/mc_workshop.html).\n\n\n"
      },
      "date": 1670971379886
    },
    {
      "type": "edit",
      "id": "9514bcf0cd8d9698",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [tutorial by James Neighbors](http://www.bayfronttechnologies.com/mc_tutorial.html) that [[Dan Ingalls]] highly recommends going through. My code here in this repo was based on the code found in the [workshop page](http://www.bayfronttechnologies.com/mc_workshop.html).\n\n\n"
      },
      "date": 1670971391560
    },
    {
      "type": "edit",
      "id": "9514bcf0cd8d9698",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [tutorial by James Neighbors](http://www.bayfronttechnologies.com/mc_tutorial.html) that [[Dan Ingalls]] highly recommends going through. \n\n\n"
      },
      "date": 1670971512803
    },
    {
      "item": {
        "type": "factory",
        "id": "e04688685bdc3fe3"
      },
      "id": "e04688685bdc3fe3",
      "type": "add",
      "after": "9514bcf0cd8d9698",
      "date": 1670971536545
    },
    {
      "type": "edit",
      "id": "e04688685bdc3fe3",
      "item": {
        "type": "paragraph",
        "id": "e04688685bdc3fe3",
        "text": "You are going to make a compiler right here on these web pages. Yes - no kidding. In fact you are going to make a lot of compilers - and it's all going to be easy. No Ajax, Active X, DLLs, SOs, ASP, CGI, Java, plugins, modules, XML, cookies, PHP, Perl, Python, magic shell operations, world wide standard du jour, or intergalactic domination plans are necessary - just plain JavaScript in frames. Also you will be able to move the compiler you build off these web pages and into your programming language of choice by cutting and pasting. After all a compiler is just a program that reads text and writes text or binary. Most general purpose programming languages are capable of doing that. "
      },
      "date": 1670971538277
    },
    {
      "type": "edit",
      "id": "e04688685bdc3fe3",
      "item": {
        "type": "paragraph",
        "id": "e04688685bdc3fe3",
        "text": "You are going to make a compiler right here on these web pages. Yes – no kidding. In fact you are going to make a lot of compilers – and it's all going to be easy. No Ajax, Active X, DLLs, SOs, ASP, CGI, Java, plugins, modules, XML, cookies, PHP, Perl, Python, magic shell operations, world wide standard du jour, or intergalactic domination plans are necessary – just plain JavaScript in frames. "
      },
      "date": 1670971578093
    },
    {
      "type": "add",
      "id": "b4702d2761f06d7b",
      "item": {
        "type": "paragraph",
        "id": "b4702d2761f06d7b",
        "text": "Also you will be able to move the compiler you build off these web pages and into your programming language of choice by cutting and pasting. After all a compiler is just a program that reads text and writes text or binary. Most general purpose programming languages are capable of doing that. "
      },
      "after": "e04688685bdc3fe3",
      "date": 1670971578930
    },
    {
      "item": {
        "type": "factory",
        "id": "ed08cee9b04ffe2a"
      },
      "id": "ed08cee9b04ffe2a",
      "type": "add",
      "after": "b4702d2761f06d7b",
      "date": 1670971613611
    },
    {
      "type": "edit",
      "id": "ed08cee9b04ffe2a",
      "item": {
        "type": "markdown",
        "id": "ed08cee9b04ffe2a",
        "text": "## Background and History"
      },
      "date": 1670971617659
    },
    {
      "item": {
        "type": "factory",
        "id": "7551dd64c43479bb"
      },
      "id": "7551dd64c43479bb",
      "type": "add",
      "after": "ed08cee9b04ffe2a",
      "date": 1670971629555
    },
    {
      "type": "edit",
      "id": "7551dd64c43479bb",
      "item": {
        "type": "markdown",
        "id": "7551dd64c43479bb",
        "text": "Programming languages above the level of individual machine assembly languages were introduced in the 1950s. The idea was to be able to write programs independent of any particular machine. It seems an obvious notion now, but was a big innovation then.\n\nFollowing IBM's FORTRAN in 1954 the first widely discussed academic language was ALGOL 60 from 1960. This set off a flurry of interest in how a compiler for ALGOL 60 could be made and then easily ported to all the wildly different machine assembly languages of the time. One proposed method was META II that was published by D.V. Schorre in the 1964 ACM National Conference. Below are the reference, link, and abstract of the 1964 META II paper [Schorre64]. "
      },
      "date": 1670971631511
    },
    {
      "type": "edit",
      "id": "7551dd64c43479bb",
      "item": {
        "type": "markdown",
        "id": "7551dd64c43479bb",
        "text": "Programming languages above the level of individual machine assembly languages were introduced in the 1950s. The idea was to be able to write programs independent of any particular machine. It seems an obvious notion now, but was a big innovation then.\n\n\n"
      },
      "date": 1670971668784
    },
    {
      "type": "add",
      "id": "6f97cfd208d280fc",
      "item": {
        "type": "markdown",
        "id": "6f97cfd208d280fc",
        "text": "Following IBM's FORTRAN in 1954 the first widely discussed academic language was ALGOL 60 from 1960. This set off a flurry of interest in how a compiler for ALGOL 60 could be made and then easily ported to all the wildly different machine assembly languages of the time. One proposed method was [[META II]] that was published by D.V. Schorre in the 1964 ACM National Conference. Below are the reference, link, and abstract of the 1964 META II paper [Schorre64]. "
      },
      "after": "7551dd64c43479bb",
      "date": 1670971676423
    },
    {
      "item": {
        "type": "factory",
        "id": "73174abbbfb61327"
      },
      "id": "73174abbbfb61327",
      "type": "add",
      "after": "6f97cfd208d280fc",
      "date": 1670971703329
    },
    {
      "type": "edit",
      "id": "73174abbbfb61327",
      "item": {
        "type": "markdown",
        "id": "73174abbbfb61327",
        "text": "[Schorre64]\nD. V. Schorre, \"META II: A Syntax-Oriented Compiler Writing Language,\" Proceedings of the 19th ACM National Conference (1964), ACM Press, New York, NY, 41.301-41.3011. http://doi.acm.org/10.1145/800257.808896"
      },
      "date": 1670971705475
    },
    {
      "type": "edit",
      "id": "9514bcf0cd8d9698",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [tutorial by James Neighbors](http://www.bayfronttechnologies.com/mc_tutorial.html) that we highly recommend going through. \n\n\n"
      },
      "date": 1670972036186
    },
    {
      "type": "edit",
      "id": "9514bcf0cd8d9698",
      "item": {
        "type": "markdown",
        "id": "9514bcf0cd8d9698",
        "text": "There is a fantastic [http://www.bayfronttechnologies.com/mc_tutorial.html tutorial by James Neighbors] that we highly recommend going through. \n\n\n"
      },
      "date": 1670972059274
    }
  ]
}