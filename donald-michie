{
  "title": "Donald Michie",
  "story": [
    {
      "type": "reference",
      "id": "707f84fda51913b5",
      "site": "wiki.ralfbarkow.ch",
      "slug": "memoization",
      "title": "Memoization",
      "text": "The term memoization was coined by Donald Michie (1968) to refer to the process by which a function is made to automatically remember the results of previous computations. The idea has become more popular in recent years with the rise of functional languages; Field and Harrison (1988) devote a whole chapter to it. The basic idea is just to keep a table of previously computed input/result pairs. [⇒ [[Table Lookup]] ⇒ [[Table Lookup and Dispatch]]] "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Donald Michie",
        "story": []
      },
      "date": 1694036004003
    },
    {
      "item": {
        "type": "factory",
        "id": "707f84fda51913b5"
      },
      "id": "707f84fda51913b5",
      "type": "add",
      "date": 1694036006286
    },
    {
      "type": "edit",
      "id": "707f84fda51913b5",
      "item": {
        "type": "reference",
        "id": "707f84fda51913b5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "memoization",
        "title": "Memoization",
        "text": "The term memoization was coined by [[Donald Michie]] (1968) to refer to the process by which a function is made to automatically remember the results of previous computations. The idea has become more popular in recent years with the rise of functional languages; Field and Harrison (1988) devote a whole chapter to it. The basic idea is just to keep a table of previously computed input/result pairs. [⇒ [[Table Lookup]]]"
      },
      "date": 1694036008745
    },
    {
      "type": "edit",
      "id": "707f84fda51913b5",
      "item": {
        "type": "reference",
        "id": "707f84fda51913b5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "memoization",
        "title": "Memoization",
        "text": "The term memoization was coined by Donald Michie (1968) to refer to the process by which a function is made to automatically remember the results of previous computations. The idea has become more popular in recent years with the rise of functional languages; Field and Harrison (1988) devote a whole chapter to it. The basic idea is just to keep a table of previously computed input/result pairs. [⇒ [[Table Lookup]]]"
      },
      "date": 1694036024693
    },
    {
      "type": "edit",
      "id": "707f84fda51913b5",
      "item": {
        "type": "reference",
        "id": "707f84fda51913b5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "memoization",
        "title": "Memoization",
        "text": "The term memoization was coined by Donald Michie (1968) to refer to the process by which a function is made to automatically remember the results of previous computations. The idea has become more popular in recent years with the rise of functional languages; Field and Harrison (1988) devote a whole chapter to it. The basic idea is just to keep a table of previously computed input/result pairs. [⇒ [[Table Lookup]] ⇒ [[Table Lookup and Dispatch]]] "
      },
      "date": 1694036062328
    }
  ]
}