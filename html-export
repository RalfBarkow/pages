{
  "title": "HTML Export",
  "story": [
    {
      "type": "paragraph",
      "id": "e2c7bfba79c12861",
      "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?"
    },
    {
      "type": "paragraph",
      "id": "b195708f7c88927d",
      "text": "Example: I am trying to figure out how to get my custom [[Lepiter]] annotations handled during HTML export. I started by stepping through the treatment of gtPage annotations,"
    },
    {
      "type": "reference",
      "id": "e11b2a3949918b1b",
      "site": "wiki.ralfbarkow.ch",
      "slug": "annotation-gtpage",
      "title": "Annotation: gtPage",
      "text": "⇐ [[Annotation]]: Extending Lepiter with custom snippets and annotations [https://book.gtoolkit.com/extending-lepiter-with-custom-snippets-and-e5aw30djc0oyppnc0xoxrd2wj page]"
    },
    {
      "type": "paragraph",
      "id": "20d3c9972c72f860",
      "text": "and I ended up looking at trait [[TLeAnnotationParseNodeVisitor]]:"
    },
    {
      "type": "html",
      "id": "3d2a66ed8279fb6d",
      "text": "<img src=\"https://media.discordapp.net/attachments/736333725788274819/1186321199190528071/Screenshot_2023-12-18_at_15.56.36.png?ex=6592d2b6&is=65805db6&hm=b8c7db27672ac42dc14c1f864a49cd6b92ea58fe7d503f18f69e5dceac18e0f9&=&format=webp&quality=lossless&width=1232&height=1060\" width=\"100%\">"
    },
    {
      "type": "paragraph",
      "id": "cc9d8249593839f5",
      "text": "All the methods are labelled \"generated\", so that's probably true for the whole [[Trait]]. So if I want to add methods to this trait, I need to find the generating code. But how?\n"
    },
    {
      "type": "paragraph",
      "id": "c813d2b01e503611",
      "text": "Correction: there is one extension method as well, so the trait is probably not fully generated. But that doesn't change my question, it's a situation I have been in before in other scenarii. [https://discord.com/channels/729445214812504107/736333725788274819/1186329594438094939 discord]"
    },
    {
      "type": "paragraph",
      "id": "4ac5274d3c2c017e",
      "text": "Oscar Nierstrasz via [https://discord.com/channels/729445214812504107/736333725788274819/1186337498704654336 discord] Not sure if I understand, but I think you want to filter for non-trait methods."
    },
    {
      "type": "html",
      "id": "edcd3d1250eda3bf",
      "text": "<img src=\"https://cdn.discordapp.com/attachments/736333725788274819/1186337498348126259/Screenshot_2023-12-18_at_17.01.04.png?ex=6592e1e4&is=65806ce4&hm=b00f0b8acace9f5911eadcc66164c50f1089b71f0f4d294cfe45a4d350c46d2a&\" width=\"100%\">"
    },
    {
      "type": "paragraph",
      "id": "46d6de13a3e6e473",
      "text": "Konrad Hinsen via [https://discord.com/channels/729445214812504107/736333725788274819/1186351882755657829 discord] That's unrelated to my question, but nevertheless very useful and had escaped my attention so far."
    },
    {
      "type": "paragraph",
      "id": "b9baf7b68c15bfe4",
      "text": "Oscar Nierstrasz via [https://discord.com/channels/729445214812504107/736333725788274819/1186390430682710146 discord]\nI was guessing the trait methods were the generated ones."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "HTML Export",
        "story": []
      },
      "date": 1702979040546
    },
    {
      "item": {
        "type": "factory",
        "id": "60c10c96812ed01d"
      },
      "id": "60c10c96812ed01d",
      "type": "add",
      "date": 1702979044475
    },
    {
      "id": "e2c7bfba79c12861",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e2c7bfba79c12861",
        "text": "Konrad Hinsen\n — \ngestern um 15:56 Uhr via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?\nExample: I am trying to figure out how to get my custom Lepiter annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:\nBild"
      },
      "after": "60c10c96812ed01d",
      "attribution": {
        "page": "2023-12-19"
      },
      "date": 1702979048586
    },
    {
      "type": "remove",
      "id": "60c10c96812ed01d",
      "date": 1702979055241
    },
    {
      "id": "3d2a66ed8279fb6d",
      "type": "add",
      "item": {
        "type": "html",
        "id": "3d2a66ed8279fb6d",
        "text": "<img src=\"https://media.discordapp.net/attachments/736333725788274819/1186321199190528071/Screenshot_2023-12-18_at_15.56.36.png?ex=6592d2b6&is=65805db6&hm=b8c7db27672ac42dc14c1f864a49cd6b92ea58fe7d503f18f69e5dceac18e0f9&=&format=webp&quality=lossless&width=1232&height=1060\" width=\"100%\">"
      },
      "after": "e2c7bfba79c12861",
      "attribution": {
        "page": "2023-12-19"
      },
      "date": 1702979064951
    },
    {
      "type": "edit",
      "id": "e2c7bfba79c12861",
      "item": {
        "type": "paragraph",
        "id": "e2c7bfba79c12861",
        "text": "Konrad Hinsen\n — \ngestern um 15:56 Uhr via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?\nExample: I am trying to figure out how to get my custom Lepiter annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:"
      },
      "date": 1702979069663
    },
    {
      "item": {
        "type": "factory",
        "id": "cc9d8249593839f5"
      },
      "id": "cc9d8249593839f5",
      "type": "add",
      "after": "3d2a66ed8279fb6d",
      "date": 1702979088221
    },
    {
      "type": "edit",
      "id": "cc9d8249593839f5",
      "item": {
        "type": "paragraph",
        "id": "cc9d8249593839f5",
        "text": "All the methods are labelled \"generated\", so that's probably true for the whole trait. So if I want to add methods to this trait, I need to find the generating code. But how?\n"
      },
      "date": 1702979089844
    },
    {
      "type": "edit",
      "id": "cc9d8249593839f5",
      "item": {
        "type": "paragraph",
        "id": "cc9d8249593839f5",
        "text": "All the methods are labelled \"generated\", so that's probably true for the whole [[Trait]]. So if I want to add methods to this trait, I need to find the generating code. But how?\n"
      },
      "date": 1702979104714
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1702979161425
    },
    {
      "type": "edit",
      "id": "e2c7bfba79c12861",
      "item": {
        "type": "paragraph",
        "id": "e2c7bfba79c12861",
        "text": "[[Konrad Hinsen]]via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?\nExample: I am trying to figure out how to get my custom Lepiter annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:"
      },
      "date": 1702979227080
    },
    {
      "type": "edit",
      "id": "e2c7bfba79c12861",
      "item": {
        "type": "paragraph",
        "id": "e2c7bfba79c12861",
        "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?\nExample: I am trying to figure out how to get my custom Lepiter annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:"
      },
      "date": 1702979232166
    },
    {
      "type": "edit",
      "id": "e2c7bfba79c12861",
      "item": {
        "type": "paragraph",
        "id": "e2c7bfba79c12861",
        "text": "[[Konrad Hinsen]] via [https://discord.com/channels/729445214812504107/736333725788274819/1186321199677054996 discord]\nWhat's the best way to figure out where generated classes and methods have been generated?"
      },
      "date": 1702979250810
    },
    {
      "type": "add",
      "id": "b195708f7c88927d",
      "item": {
        "type": "paragraph",
        "id": "b195708f7c88927d",
        "text": "Example: I am trying to figure out how to get my custom Lepiter annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:"
      },
      "after": "e2c7bfba79c12861",
      "date": 1702979251242
    },
    {
      "type": "edit",
      "id": "b195708f7c88927d",
      "item": {
        "type": "paragraph",
        "id": "b195708f7c88927d",
        "text": "Example: I am trying to figure out how to get my custom [[Lepiter]] annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait TLeAnnotationParseNodeVisitor:"
      },
      "date": 1702979273513
    },
    {
      "type": "edit",
      "id": "b195708f7c88927d",
      "item": {
        "type": "paragraph",
        "id": "b195708f7c88927d",
        "text": "Example: I am trying to figure out how to get my custom [[Lepiter]] annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations, and I ended up looking at trait [[TLeAnnotationParseNodeVisitor]]:"
      },
      "date": 1702979304804
    },
    {
      "item": {
        "type": "factory",
        "id": "c813d2b01e503611"
      },
      "id": "c813d2b01e503611",
      "type": "add",
      "after": "cc9d8249593839f5",
      "date": 1702979881561
    },
    {
      "type": "edit",
      "id": "c813d2b01e503611",
      "item": {
        "type": "paragraph",
        "id": "c813d2b01e503611",
        "text": "Konrad Hinsen — gestern um 16:30 Uhr\nCorrection: there is one extension method as well, so the trait is probably not fully generated. But that doesn't change my question, it's a situation I have been in before in other scenarii."
      },
      "date": 1702979883279
    },
    {
      "type": "edit",
      "id": "c813d2b01e503611",
      "item": {
        "type": "paragraph",
        "id": "c813d2b01e503611",
        "text": "Correction: there is one extension method as well, so the trait is probably not fully generated. But that doesn't change my question, it's a situation I have been in before in other scenarii."
      },
      "date": 1702979893646
    },
    {
      "type": "edit",
      "id": "c813d2b01e503611",
      "item": {
        "type": "paragraph",
        "id": "c813d2b01e503611",
        "text": "Correction: there is one extension method as well, so the trait is probably not fully generated. But that doesn't change my question, it's a situation I have been in before in other scenarii. [https://discord.com/channels/729445214812504107/736333725788274819/1186329594438094939 discord]"
      },
      "date": 1702979906243
    },
    {
      "item": {
        "type": "factory",
        "id": "4ac5274d3c2c017e"
      },
      "id": "4ac5274d3c2c017e",
      "type": "add",
      "after": "c813d2b01e503611",
      "date": 1702980376922
    },
    {
      "type": "edit",
      "id": "4ac5274d3c2c017e",
      "item": {
        "type": "paragraph",
        "id": "4ac5274d3c2c017e",
        "text": "Oscar Nierstrasz\n — \ngestern um 17:01 Uhr\nNot sure if I understand, but I think you want to filter for non-trait methods.\nBild"
      },
      "date": 1702980380535
    },
    {
      "type": "edit",
      "id": "4ac5274d3c2c017e",
      "item": {
        "type": "paragraph",
        "id": "4ac5274d3c2c017e",
        "text": "Oscar Nierstrasz via [https://discord.com/channels/729445214812504107/736333725788274819/1186337498704654336 discord] Not sure if I understand, but I think you want to filter for non-trait methods.\nBild"
      },
      "date": 1702980402816
    },
    {
      "item": {
        "type": "factory",
        "id": "edcd3d1250eda3bf"
      },
      "id": "edcd3d1250eda3bf",
      "type": "add",
      "after": "4ac5274d3c2c017e",
      "date": 1702980410201
    },
    {
      "type": "edit",
      "id": "edcd3d1250eda3bf",
      "item": {
        "type": "html",
        "id": "edcd3d1250eda3bf",
        "text": "<img src=\"https://cdn.discordapp.com/attachments/736333725788274819/1186337498348126259/Screenshot_2023-12-18_at_17.01.04.png?ex=6592e1e4&is=65806ce4&hm=b00f0b8acace9f5911eadcc66164c50f1089b71f0f4d294cfe45a4d350c46d2a&\" width=\"100%\">"
      },
      "date": 1702980426877
    },
    {
      "type": "edit",
      "id": "4ac5274d3c2c017e",
      "item": {
        "type": "paragraph",
        "id": "4ac5274d3c2c017e",
        "text": "Oscar Nierstrasz via [https://discord.com/channels/729445214812504107/736333725788274819/1186337498704654336 discord] Not sure if I understand, but I think you want to filter for non-trait methods."
      },
      "date": 1702980443394
    },
    {
      "item": {
        "type": "factory",
        "id": "46d6de13a3e6e473"
      },
      "id": "46d6de13a3e6e473",
      "type": "add",
      "after": "edcd3d1250eda3bf",
      "date": 1702980463319
    },
    {
      "type": "edit",
      "id": "46d6de13a3e6e473",
      "item": {
        "type": "paragraph",
        "id": "46d6de13a3e6e473",
        "text": "Konrad Hinsen — gestern um 17:58 Uhr\nThat's unrelated to my question, but nevertheless very useful and had escaped my attention so far."
      },
      "date": 1702980467743
    },
    {
      "type": "add",
      "id": "b9baf7b68c15bfe4",
      "item": {
        "type": "paragraph",
        "id": "b9baf7b68c15bfe4",
        "text": "Oscar Nierstrasz — gestern um 20:32 Uhr\nI was guessing the trait methods were the generated ones."
      },
      "after": "46d6de13a3e6e473",
      "date": 1702980473472
    },
    {
      "type": "edit",
      "id": "46d6de13a3e6e473",
      "item": {
        "type": "paragraph",
        "id": "46d6de13a3e6e473",
        "text": "Konrad Hinsen via [https://discord.com/channels/729445214812504107/736333725788274819/1186351882755657829 discord] That's unrelated to my question, but nevertheless very useful and had escaped my attention so far."
      },
      "date": 1702980492927
    },
    {
      "type": "edit",
      "id": "b9baf7b68c15bfe4",
      "item": {
        "type": "paragraph",
        "id": "b9baf7b68c15bfe4",
        "text": "Oscar Nierstrasz via [https://discord.com/channels/729445214812504107/736333725788274819/1186390430682710146 discord]\nI was guessing the trait methods were the generated ones."
      },
      "date": 1702980508534
    },
    {
      "type": "edit",
      "id": "b195708f7c88927d",
      "item": {
        "type": "paragraph",
        "id": "b195708f7c88927d",
        "text": "Example: I am trying to figure out how to get my custom [[Lepiter]] annotations handled during [[HTML Export]]. I started by stepping through the treatment of gtPage annotations,"
      },
      "date": 1702980554130
    },
    {
      "type": "add",
      "id": "20d3c9972c72f860",
      "item": {
        "type": "paragraph",
        "id": "20d3c9972c72f860",
        "text": "and I ended up looking at trait [[TLeAnnotationParseNodeVisitor]]:"
      },
      "after": "b195708f7c88927d",
      "date": 1702980557571
    },
    {
      "item": {
        "type": "factory",
        "id": "e11b2a3949918b1b"
      },
      "id": "e11b2a3949918b1b",
      "type": "add",
      "after": "b9baf7b68c15bfe4",
      "date": 1702980560405
    },
    {
      "type": "edit",
      "id": "e11b2a3949918b1b",
      "item": {
        "type": "reference",
        "id": "e11b2a3949918b1b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "annotation-gtpage",
        "title": "Annotation: gtPage",
        "text": "⇐ [[Annotation]]"
      },
      "date": 1702980563270
    },
    {
      "id": "e11b2a3949918b1b",
      "type": "move",
      "order": [
        "e2c7bfba79c12861",
        "b195708f7c88927d",
        "e11b2a3949918b1b",
        "20d3c9972c72f860",
        "3d2a66ed8279fb6d",
        "cc9d8249593839f5",
        "c813d2b01e503611",
        "4ac5274d3c2c017e",
        "edcd3d1250eda3bf",
        "46d6de13a3e6e473",
        "b9baf7b68c15bfe4"
      ],
      "date": 1702980572020
    },
    {
      "type": "edit",
      "id": "e11b2a3949918b1b",
      "item": {
        "type": "reference",
        "id": "e11b2a3949918b1b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "annotation-gtpage",
        "title": "Annotation: gtPage",
        "text": "⇐ [[Annotation]]: Extending Lepiter with custom snippets and annotations"
      },
      "date": 1702980608768
    },
    {
      "type": "edit",
      "id": "e11b2a3949918b1b",
      "item": {
        "type": "reference",
        "id": "e11b2a3949918b1b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "annotation-gtpage",
        "title": "Annotation: gtPage",
        "text": "⇐ [[Annotation]]: Extending Lepiter with custom snippets and annotations [https://book.gtoolkit.com/extending-lepiter-with-custom-snippets-and-e5aw30djc0oyppnc0xoxrd2wj page]"
      },
      "date": 1702980616243
    },
    {
      "type": "fork",
      "site": "traits.code.dreyeck.ch",
      "date": 1702985929708
    },
    {
      "type": "edit",
      "id": "b195708f7c88927d",
      "item": {
        "type": "paragraph",
        "id": "b195708f7c88927d",
        "text": "Example: I am trying to figure out how to get my custom [[Lepiter]] annotations handled during HTML export. I started by stepping through the treatment of gtPage annotations,"
      },
      "date": 1702985958140
    }
  ]
}