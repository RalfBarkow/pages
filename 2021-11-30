{
  "title": "2021-11-30",
  "story": [
    {
      "type": "markdown",
      "id": "68db7ba200cc0767",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638283963198090ghopI:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]\n> You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
    },
    {
      "type": "reference",
      "id": "6a0523ff21987d06",
      "site": "code.fed.wiki",
      "slug": "frame-integration-promises",
      "title": "Frame Integration Promises",
      "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
    },
    {
      "type": "reference",
      "id": "aef69de524eefbad",
      "site": "code.fed.wiki",
      "slug": "use-case-survey",
      "title": "Use Case Survey",
      "text": "We're excited about the emerging device for action within the wiki federation. We survey cases where we have put this to good work. See [[Use Case Browser]] for animation."
    },
    {
      "type": "reference",
      "id": "47915cdb2011eb61",
      "site": "code.fed.wiki",
      "slug": "working-within-the-lineup",
      "title": "Working Within the Lineup",
      "text": "Small scripts have limited power until they fit into a larger workflow expressed in wiki's lineup. We show the breadth of this connectivity."
    },
    {
      "type": "pagefold",
      "id": "0325906db7293614",
      "text": "DH Plenum"
    },
    {
      "type": "reference",
      "id": "7e0e9cf43eac3548",
      "site": "kale.wiki.ralfbarkow.ch",
      "slug": "reflections-on-design-patterns",
      "title": "Reflections on design patterns",
      "text": "stressing the problem of living structures in the cultural (for his concern: physical) structures we live in"
    },
    {
      "type": "reference",
      "id": "24bae4642ed750be",
      "site": "wiki.parliamentofthings.org",
      "slug": "idea-mine",
      "title": "Idea Mine",
      "text": "[[Idea mining]] is a process in which we extract out of a text, video, or other piece of media an important or (from our own personal perspective) an interesting concept."
    },
    {
      "type": "reference",
      "id": "a1908aa4b45cdf84",
      "site": "wiki.ralfbarkow.ch",
      "slug": "non-distructive-development",
      "title": "Non-Distructive Development",
      "text": "We will pass this page around as the [[talking stick]]."
    },
    {
      "type": "pagefold",
      "id": "0da32c02c2b89064",
      "text": "Ward"
    },
    {
      "type": "paragraph",
      "id": "dc361b5653672c6a",
      "text": "If one has a numbered list of things then one can visit them in their natural order, 1, 2, 3 and so on. But if each thing remembers which thing follows it, the next thing, then starting anywhere one can follow the remainder of the imposed order to its conclusion."
    },
    {
      "type": "paragraph",
      "id": "23e0872f3bfe9c76",
      "text": "A variation of this \"linking\" strategy can be made to work forwards or backwards through the imposed order by storing the bitwise difference (⊕) between the next and previous number. That is, one number links both ways."
    },
    {
      "type": "paragraph",
      "id": "d7a9e57744ef7735",
      "text": "To make this work will require some cooperation. We will start at any place where P and Q are adjacent and link(P) and link(Q) are the single stored differences at each location."
    },
    {
      "type": "paragraph",
      "id": "bf38e1643947e9f4",
      "text": "prev(P,Q) = link(P) ⊕ Q"
    },
    {
      "type": "paragraph",
      "id": "c0d9cc22c935fa88",
      "text": "next(P,Q) = link(Q) ⊕ P"
    },
    {
      "type": "paragraph",
      "id": "4db3eceb40950b60",
      "text": "The bitwise difference (⊕) will be true in the result for every bit position in the arguments where the bits differ. That is true ⊕ false is true, as is false ⊕ true. Other combinations are false."
    },
    {
      "type": "pagefold",
      "id": "43855d68e5477c09",
      "text": ".\n"
    },
    {
      "type": "markdown",
      "id": "be5665dfb154e346",
      "text": "The algorithm above sounds like an XOR doubly-linked list ([https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/ geeksforgeeks]).   \n"
    },
    {
      "type": "markdown",
      "id": "d68b1b9aadaddeef",
      "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's [[ZigZag]] from Xanadu ( [http://gzigzag.sourceforge.net/nutshell.html sourceforge] and [https://wiki.c2.com/?ZigZag c2]) which has an interesting techno / sociological history about proto-wiki.\n\n"
    },
    {
      "type": "markdown",
      "id": "b37093bb9bbce2ee",
      "text": "See also [[Ted Nelson's Big Step]]"
    },
    {
      "type": "html",
      "id": "547d1d300e4e8ca2",
      "text": "<center><img width=\"100%\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/20210517190007/node.png\"></center>"
    },
    {
      "type": "html",
      "id": "e55403ad0da7d9d7",
      "text": "<center><img width=\"100%\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/XorLinkedList.jpg\"></center>"
    },
    {
      "type": "reference",
      "id": "c5a71bd3b16140a0",
      "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
      "punt": {
        "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:94.0) Gecko/20100101 Firefox/94.0"
      },
      "site": "wellspring.fed.wiki",
      "slug": "gdel-moment",
      "title": "Gödel Moment",
      "text": "We thought the universe spun around us. That is, until Galileo recognized that, indeed, not only were we not the center of the universe, but that there was no center at all."
    },
    {
      "type": "reference",
      "id": "179f543232051ccf",
      "site": "wiki.ralfbarkow.ch",
      "slug": "dr-ses",
      "title": "Dr. SES",
      "text": "Bringing Object-orientation to Security Programming (Mark S. Miller, Google) ."
    },
    {
      "type": "reference",
      "id": "143818a3adddb78a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "propertymoney-eigentumgeld",
      "title": "Property/Money (Eigentum/Geld)",
      "text": "Money is a →[[symbolically generalized medium]] that corresponds to the constellation of →[[attribution]] in which alter’s action is experienced by ego. As long as this action does not affect access to scare resources, the situation remains unproblematic. Ego’s observation of the action of others does not provoke her own action: ego observes, for instance, that a neighbor cuts the grass. However, as soon as a situation of scarcity emerges (when, for instance, land is limited), alter’s access (the fact that alter is cultivating a particular piece of land)"
    },
    {
      "type": "pagefold",
      "id": "7a8de6804b512539",
      "text": "Knowledge Representation and Archives"
    },
    {
      "type": "reference",
      "id": "9d0fb7d11862db87",
      "site": "wiki.ralfbarkow.ch",
      "slug": "zettelkasten",
      "title": "Zettelkasten",
      "text": "Using a Zettelkasten is about optimizing a workflow of learning and producing knowledge. The products are texts, mostly. The categories we deem fit currently are the following:"
    },
    {
      "type": "markdown",
      "id": "baad0c3acf62de9c",
      "text": "* [https://youtu.be/c5Tst3-zcWI Manifesto] by [[Hendrik Erz]], [https://youtu.be/c5Tst3-zcWI?t=272 4:32]\n> […] put all of them next to each other\n\n  See [[Lineup]]\n\n* [[Graph Database]], [https://youtu.be/c5Tst3-zcWI?t=823 13:43] of Hendrik's video"
    },
    {
      "type": "reference",
      "id": "9e276f5c6d1822f7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "knowledge-representation-and-archives",
      "title": "Knowledge Representation and Archives",
      "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 60–79 [https://dmx.ralfbarkow.ch/filerepo/%2Fworkspace-349823%2FBerry%2C%20Fagerjord%202017%20-%20Digital%20humanities%20-%2060-79.pdf pdf]"
    },
    {
      "type": "pagefold",
      "id": "f262692e3f0131f6",
      "text": "."
    },
    {
      "type": "pagefold",
      "id": "27ac6abebb30268e",
      "text": "Research Infrastructures"
    },
    {
      "type": "reference",
      "id": "d4952e39d9346b7f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "research-infrastructures",
      "title": "Research Infrastructures",
      "text": "- [[Affordances]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2021-11-30",
        "story": []
      },
      "date": 1638245248319
    },
    {
      "item": {
        "type": "factory",
        "id": "c5a71bd3b16140a0"
      },
      "id": "c5a71bd3b16140a0",
      "type": "add",
      "date": 1638245396704
    },
    {
      "type": "edit",
      "id": "c5a71bd3b16140a0",
      "item": {
        "type": "factory",
        "id": "c5a71bd3b16140a0",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:94.0) Gecko/20100101 Firefox/94.0"
        }
      },
      "date": 1638245415230
    },
    {
      "type": "edit",
      "id": "c5a71bd3b16140a0",
      "item": {
        "type": "reference",
        "id": "c5a71bd3b16140a0",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:94.0) Gecko/20100101 Firefox/94.0"
        },
        "site": "wellspring.fed.wiki",
        "slug": "gdel-moment",
        "title": "Gödel Moment",
        "text": "We thought the universe spun around us. That is, until Galileo recognized that, indeed, not only were we not the center of the universe, but that there was no center at all."
      },
      "date": 1638245422028
    },
    {
      "item": {
        "type": "factory",
        "id": "179f543232051ccf"
      },
      "id": "179f543232051ccf",
      "type": "add",
      "after": "c5a71bd3b16140a0",
      "date": 1638245746238
    },
    {
      "type": "edit",
      "id": "179f543232051ccf",
      "item": {
        "type": "reference",
        "id": "179f543232051ccf",
        "site": "wiki.ralfbarkow.ch",
        "slug": "dr-ses",
        "title": "Dr. SES",
        "text": "Bringing Object-orientation to Security Programming (Mark S. Miller, Google) ."
      },
      "date": 1638245766199
    },
    {
      "item": {
        "type": "factory",
        "id": "143818a3adddb78a"
      },
      "id": "143818a3adddb78a",
      "type": "add",
      "after": "179f543232051ccf",
      "date": 1638245819230
    },
    {
      "type": "edit",
      "id": "143818a3adddb78a",
      "item": {
        "type": "reference",
        "id": "143818a3adddb78a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "propertymoney-eigentumgeld",
        "title": "Property/Money (Eigentum/Geld)",
        "text": "Money is a →[[symbolically generalized medium]] that corresponds to the constellation of →[[attribution]] in which alter’s action is experienced by ego. As long as this action does not affect access to scare resources, the situation remains unproblematic. Ego’s observation of the action of others does not provoke her own action: ego observes, for instance, that a neighbor cuts the grass. However, as soon as a situation of scarcity emerges (when, for instance, land is limited), alter’s access (the fact that alter is cultivating a particular piece of land)"
      },
      "date": 1638245823864
    },
    {
      "item": {
        "type": "factory",
        "id": "7e0e9cf43eac3548"
      },
      "id": "7e0e9cf43eac3548",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638245867590
    },
    {
      "type": "edit",
      "id": "7e0e9cf43eac3548",
      "item": {
        "type": "reference",
        "id": "7e0e9cf43eac3548",
        "site": "kale.wiki.ralfbarkow.ch",
        "slug": "reflections-on-design-patterns",
        "title": "Reflections on design patterns",
        "text": "stressing the problem of living structures in the cultural (for his concern: physical) structures we live in"
      },
      "date": 1638245906709
    },
    {
      "id": "7e0e9cf43eac3548",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638245920002
    },
    {
      "item": {
        "type": "factory",
        "id": "a1908aa4b45cdf84"
      },
      "id": "a1908aa4b45cdf84",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638246415044
    },
    {
      "type": "edit",
      "id": "a1908aa4b45cdf84",
      "item": {
        "type": "reference",
        "id": "a1908aa4b45cdf84",
        "site": "wiki.ralfbarkow.ch",
        "slug": "non-distructive-development",
        "title": "Non-Distructive Development",
        "text": "We will pass this page around as the [[talking stick]]."
      },
      "date": 1638246419785
    },
    {
      "id": "a1908aa4b45cdf84",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638246424254
    },
    {
      "id": "0da32c02c2b89064",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "0da32c02c2b89064",
        "text": "Ward"
      },
      "after": "a1908aa4b45cdf84",
      "date": 1638246436990
    },
    {
      "id": "dc361b5653672c6a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dc361b5653672c6a",
        "text": "If one has a numbered list of things then one can visit them in their natural order, 1, 2, 3 and so on. But if each thing remembers which thing follows it, the next thing, then starting anywhere one can follow the remainder of the imposed order to its conclusion."
      },
      "after": "0da32c02c2b89064",
      "date": 1638246448031
    },
    {
      "id": "23e0872f3bfe9c76",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "23e0872f3bfe9c76",
        "text": "A variation of this \"linking\" strategy can be made to work forwards or backwards through the imposed order by storing the bitwise difference (⊕) between the next and previous number. That is, one number links both ways."
      },
      "after": "dc361b5653672c6a",
      "date": 1638246453810
    },
    {
      "id": "d7a9e57744ef7735",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d7a9e57744ef7735",
        "text": "To make this work will require some cooperation. We will start at any place where P and Q are adjacent and link(P) and link(Q) are the single stored differences at each location."
      },
      "after": "23e0872f3bfe9c76",
      "date": 1638246459588
    },
    {
      "id": "bf38e1643947e9f4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "bf38e1643947e9f4",
        "text": "prev(P,Q) = link(P) ⊕ Q"
      },
      "after": "d7a9e57744ef7735",
      "date": 1638246474154
    },
    {
      "id": "c0d9cc22c935fa88",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c0d9cc22c935fa88",
        "text": "next(P,Q) = link(Q) ⊕ P"
      },
      "after": "bf38e1643947e9f4",
      "date": 1638246479594
    },
    {
      "id": "4db3eceb40950b60",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4db3eceb40950b60",
        "text": "The bitwise difference (⊕) will be true in the result for every bit position in the arguments where the bits differ. That is true ⊕ false is true, as is false ⊕ true. Other combinations are false."
      },
      "after": "bf38e1643947e9f4",
      "date": 1638246484510
    },
    {
      "id": "c0d9cc22c935fa88",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638246487776
    },
    {
      "id": "43855d68e5477c09",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "43855d68e5477c09",
        "text": ".\n"
      },
      "after": "4db3eceb40950b60",
      "date": 1638246954952
    },
    {
      "id": "be5665dfb154e346",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "be5665dfb154e346",
        "text": "The algorithm above sounds like an XOR doubly-linked list (https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/).   This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( http://gzigzag.sourceforge.net/nutshell.html and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n"
      },
      "after": "43855d68e5477c09",
      "date": 1638246958829
    },
    {
      "item": {
        "type": "html",
        "id": "547d1d300e4e8ca2",
        "text": "<center><img width=\"100%\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/20210517190007/node.png\"></center>"
      },
      "id": "547d1d300e4e8ca2",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638247184196
    },
    {
      "type": "edit",
      "id": "547d1d300e4e8ca2",
      "item": {
        "type": "html",
        "id": "547d1d300e4e8ca2",
        "text": "<center><img width=\"100%\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/20210517190007/node.png\"></center>"
      },
      "date": 1638247209671
    },
    {
      "id": "547d1d300e4e8ca2",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "547d1d300e4e8ca2",
        "be5665dfb154e346",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638247216870
    },
    {
      "type": "edit",
      "id": "be5665dfb154e346",
      "item": {
        "type": "markdown",
        "id": "be5665dfb154e346",
        "text": "The algorithm above sounds like an XOR doubly-linked list (https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/).   \n"
      },
      "date": 1638247245911
    },
    {
      "id": "be5665dfb154e346",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "d68b1b9aadaddeef",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638247248833,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1638247252373
    },
    {
      "type": "add",
      "id": "d68b1b9aadaddeef",
      "item": {
        "type": "markdown",
        "id": "d68b1b9aadaddeef",
        "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( http://gzigzag.sourceforge.net/nutshell.html and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n"
      },
      "after": "be5665dfb154e346",
      "date": 1638247252805
    },
    {
      "type": "edit",
      "id": "d68b1b9aadaddeef",
      "item": {
        "type": "markdown",
        "id": "d68b1b9aadaddeef",
        "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( http://gzigzag.sourceforge.net/nutshell.html and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n\n"
      },
      "date": 1638247377532
    },
    {
      "type": "add",
      "id": "b37093bb9bbce2ee",
      "item": {
        "type": "markdown",
        "id": "b37093bb9bbce2ee",
        "text": "See also [[Ted Nelson's Big Step]]"
      },
      "after": "d68b1b9aadaddeef",
      "date": 1638247384516
    },
    {
      "type": "edit",
      "id": "d68b1b9aadaddeef",
      "item": {
        "type": "markdown",
        "id": "d68b1b9aadaddeef",
        "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( [http://gzigzag.sourceforge.net/nutshell.html sourceforge] and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n\n"
      },
      "date": 1638247608832
    },
    {
      "type": "edit",
      "id": "d68b1b9aadaddeef",
      "item": {
        "type": "markdown",
        "id": "d68b1b9aadaddeef",
        "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( [http://gzigzag.sourceforge.net/nutshell.html sourceforge] and [https://wiki.c2.com/?ZigZag c2]) which has an interesting techno / sociological history about proto-wiki.\n\n"
      },
      "date": 1638247652973
    },
    {
      "type": "edit",
      "id": "be5665dfb154e346",
      "item": {
        "type": "markdown",
        "id": "be5665dfb154e346",
        "text": "The algorithm above sounds like an XOR doubly-linked list ([https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/ geeksforgeeks]).   \n"
      },
      "date": 1638247687451
    },
    {
      "item": {
        "type": "factory",
        "id": "e55403ad0da7d9d7"
      },
      "id": "e55403ad0da7d9d7",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638247781486
    },
    {
      "type": "edit",
      "id": "e55403ad0da7d9d7",
      "item": {
        "type": "html",
        "id": "e55403ad0da7d9d7",
        "text": "<center><img width=\"100%\" src=\"https://media.geeksforgeeks.org/wp-content/uploads/XorLinkedList.jpg\"></center>"
      },
      "date": 1638247811320
    },
    {
      "id": "e55403ad0da7d9d7",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638247821435
    },
    {
      "type": "edit",
      "id": "d68b1b9aadaddeef",
      "item": {
        "type": "markdown",
        "id": "d68b1b9aadaddeef",
        "text": "This also triggered me to dig around a bit to find a link to Ted Nelson's [[ZigZag]] from Xanadu ( [http://gzigzag.sourceforge.net/nutshell.html sourceforge] and [https://wiki.c2.com/?ZigZag c2]) which has an interesting techno / sociological history about proto-wiki.\n\n"
      },
      "date": 1638247853099
    },
    {
      "item": {
        "type": "factory",
        "id": "24bae4642ed750be"
      },
      "id": "24bae4642ed750be",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638268396723
    },
    {
      "type": "edit",
      "id": "24bae4642ed750be",
      "item": {
        "type": "reference",
        "id": "24bae4642ed750be",
        "site": "wiki.parliamentofthings.org",
        "slug": "idea-mine",
        "title": "Idea Mine",
        "text": "[[Idea mining]] is a process in which we extract out of a text, video, or other piece of media an important or (from our own personal perspective) an interesting concept."
      },
      "date": 1638268401884
    },
    {
      "id": "24bae4642ed750be",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "a1908aa4b45cdf84",
        "24bae4642ed750be",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638268412235
    },
    {
      "id": "24bae4642ed750be",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a"
      ],
      "date": 1638282708547
    },
    {
      "item": {
        "type": "factory",
        "id": "7a8de6804b512539"
      },
      "id": "7a8de6804b512539",
      "type": "add",
      "after": "143818a3adddb78a",
      "date": 1638282777271
    },
    {
      "item": {
        "type": "factory",
        "id": "f262692e3f0131f6"
      },
      "id": "f262692e3f0131f6",
      "type": "add",
      "after": "7a8de6804b512539",
      "date": 1638282807736
    },
    {
      "type": "edit",
      "id": "7a8de6804b512539",
      "item": {
        "type": "pagefold",
        "id": "7a8de6804b512539",
        "text": "Knowledge Representation and Archives"
      },
      "date": 1638282826481
    },
    {
      "id": "9d0fb7d11862db87",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "9d0fb7d11862db87",
        "site": "wiki.ralfbarkow.ch",
        "slug": "zettelkasten",
        "title": "Zettelkasten",
        "text": "Using a Zettelkasten is about optimizing a workflow of learning and producing knowledge. The products are texts, mostly. The categories we deem fit currently are the following:"
      },
      "after": "f262692e3f0131f6",
      "date": 1638282830339
    },
    {
      "id": "9d0fb7d11862db87",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "f262692e3f0131f6"
      ],
      "date": 1638282832431
    },
    {
      "id": "baad0c3acf62de9c",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "baad0c3acf62de9c",
        "text": "* [https://youtu.be/c5Tst3-zcWI Manifesto] by [[Hendrik Erz]], [https://youtu.be/c5Tst3-zcWI?t=272 4:32]\n> […] put all of them next to each other\n\n  See [[Lineup]]\n\n* [[Graph Database]], [https://youtu.be/c5Tst3-zcWI?t=823 13:43] of Hendrik's video"
      },
      "after": "9d0fb7d11862db87",
      "date": 1638282836302
    },
    {
      "type": "edit",
      "id": "f262692e3f0131f6",
      "item": {
        "type": "pagefold",
        "id": "f262692e3f0131f6",
        "text": "."
      },
      "date": 1638282866453
    },
    {
      "item": {
        "type": "factory",
        "id": "9e276f5c6d1822f7"
      },
      "id": "9e276f5c6d1822f7",
      "type": "add",
      "after": "f262692e3f0131f6",
      "date": 1638282908965
    },
    {
      "type": "edit",
      "id": "9e276f5c6d1822f7",
      "item": {
        "type": "reference",
        "id": "9e276f5c6d1822f7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "knowledge-representation-and-archives",
        "title": "Knowledge Representation and Archives",
        "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 60–79 [https://dmx.ralfbarkow.ch/filerepo/%2Fworkspace-349823%2FBerry%2C%20Fagerjord%202017%20-%20Digital%20humanities%20-%2060-79.pdf pdf]"
      },
      "date": 1638282911375
    },
    {
      "id": "9e276f5c6d1822f7",
      "type": "move",
      "order": [
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6"
      ],
      "date": 1638282913119
    },
    {
      "item": {
        "type": "factory",
        "id": "27ac6abebb30268e"
      },
      "id": "27ac6abebb30268e",
      "type": "add",
      "after": "f262692e3f0131f6",
      "date": 1638283012636
    },
    {
      "type": "edit",
      "id": "27ac6abebb30268e",
      "item": {
        "type": "pagefold",
        "id": "27ac6abebb30268e",
        "text": "Research Infrastructures"
      },
      "date": 1638283016714
    },
    {
      "item": {
        "type": "factory",
        "id": "76f0fd363395477a"
      },
      "id": "76f0fd363395477a",
      "type": "add",
      "after": "27ac6abebb30268e",
      "date": 1638283019294
    },
    {
      "type": "remove",
      "id": "76f0fd363395477a",
      "date": 1638283026422
    },
    {
      "item": {
        "type": "factory",
        "id": "d4952e39d9346b7f"
      },
      "id": "d4952e39d9346b7f",
      "type": "add",
      "after": "27ac6abebb30268e",
      "date": 1638283032155
    },
    {
      "type": "edit",
      "id": "d4952e39d9346b7f",
      "item": {
        "type": "reference",
        "id": "d4952e39d9346b7f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "research-infrastructures",
        "title": "Research Infrastructures",
        "text": "- [[Affordances]]"
      },
      "date": 1638283034658
    },
    {
      "item": {
        "type": "factory",
        "id": "6a0523ff21987d06"
      },
      "id": "6a0523ff21987d06",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638303522169
    },
    {
      "type": "edit",
      "id": "6a0523ff21987d06",
      "item": {
        "type": "reference",
        "id": "6a0523ff21987d06",
        "site": "code.fed.wiki",
        "slug": "frame-integration-promises",
        "title": "Frame Integration Promises",
        "text": "We wrap the Frame plugin's integrations with a promise-based interface and distribute them as an ES6 module along with a couple of helpers we've found useful."
      },
      "date": 1638303531769
    },
    {
      "id": "6a0523ff21987d06",
      "type": "move",
      "order": [
        "6a0523ff21987d06",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638303556140
    },
    {
      "item": {
        "type": "factory",
        "id": "0325906db7293614"
      },
      "id": "0325906db7293614",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638303587399
    },
    {
      "type": "edit",
      "id": "0325906db7293614",
      "item": {
        "type": "pagefold",
        "id": "0325906db7293614",
        "text": "Plenum"
      },
      "date": 1638303592974
    },
    {
      "id": "0325906db7293614",
      "type": "move",
      "order": [
        "6a0523ff21987d06",
        "0325906db7293614",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638303600672
    },
    {
      "item": {
        "type": "factory",
        "id": "47915cdb2011eb61"
      },
      "id": "47915cdb2011eb61",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638309192932
    },
    {
      "type": "edit",
      "id": "47915cdb2011eb61",
      "item": {
        "type": "reference",
        "id": "47915cdb2011eb61",
        "site": "code.fed.wiki",
        "slug": "working-within-the-lineup",
        "title": "Working Within the Lineup",
        "text": "Small scripts have limited power until they fit into a larger workflow expressed in wiki's lineup. We show the breadth of this connectivity."
      },
      "date": 1638309198303
    },
    {
      "id": "47915cdb2011eb61",
      "type": "move",
      "order": [
        "47915cdb2011eb61",
        "6a0523ff21987d06",
        "0325906db7293614",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638309205956
    },
    {
      "item": {
        "type": "factory",
        "id": "aef69de524eefbad"
      },
      "id": "aef69de524eefbad",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638309450902
    },
    {
      "type": "edit",
      "id": "aef69de524eefbad",
      "item": {
        "type": "reference",
        "id": "aef69de524eefbad",
        "site": "code.fed.wiki",
        "slug": "use-case-survey",
        "title": "Use Case Survey",
        "text": "We're excited about the emerging device for action within the wiki federation. We survey cases where we have put this to good work. See [[Use Case Browser]] for animation."
      },
      "date": 1638309454009
    },
    {
      "id": "aef69de524eefbad",
      "type": "move",
      "order": [
        "aef69de524eefbad",
        "47915cdb2011eb61",
        "6a0523ff21987d06",
        "0325906db7293614",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638309460280
    },
    {
      "item": {
        "type": "factory",
        "id": "6dcfbb3fd3a43042"
      },
      "id": "6dcfbb3fd3a43042",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638337697127
    },
    {
      "type": "remove",
      "id": "6dcfbb3fd3a43042",
      "date": 1638337706570
    },
    {
      "item": {
        "type": "factory",
        "id": "68db7ba200cc0767"
      },
      "id": "68db7ba200cc0767",
      "type": "add",
      "after": "d4952e39d9346b7f",
      "date": 1638337710662
    },
    {
      "type": "fork",
      "date": 1638337775859
    },
    {
      "type": "edit",
      "id": "68db7ba200cc0767",
      "item": {
        "type": "paragraph",
        "id": "68db7ba200cc0767",
        "text": "Ward\nRalf Barkow: You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
      },
      "date": 1638337782251
    },
    {
      "id": "68db7ba200cc0767",
      "type": "move",
      "order": [
        "68db7ba200cc0767",
        "aef69de524eefbad",
        "47915cdb2011eb61",
        "6a0523ff21987d06",
        "0325906db7293614",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638337788823
    },
    {
      "type": "edit",
      "id": "68db7ba200cc0767",
      "item": {
        "type": "paragraph",
        "id": "68db7ba200cc0767",
        "text": "Ward via [Matrix]\n> You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
      },
      "date": 1638337807458
    },
    {
      "type": "edit",
      "id": "68db7ba200cc0767",
      "item": {
        "type": "markdown",
        "id": "68db7ba200cc0767",
        "text": "Ward via [Matrix]\n> You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
      },
      "date": 1638337809503
    },
    {
      "type": "edit",
      "id": "68db7ba200cc0767",
      "item": {
        "type": "markdown",
        "id": "68db7ba200cc0767",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638283963198090ghopI:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]\n> You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
      },
      "date": 1638337835953
    },
    {
      "id": "6a0523ff21987d06",
      "type": "move",
      "order": [
        "68db7ba200cc0767",
        "6a0523ff21987d06",
        "aef69de524eefbad",
        "47915cdb2011eb61",
        "0325906db7293614",
        "7e0e9cf43eac3548",
        "24bae4642ed750be",
        "a1908aa4b45cdf84",
        "0da32c02c2b89064",
        "dc361b5653672c6a",
        "23e0872f3bfe9c76",
        "d7a9e57744ef7735",
        "bf38e1643947e9f4",
        "c0d9cc22c935fa88",
        "4db3eceb40950b60",
        "43855d68e5477c09",
        "be5665dfb154e346",
        "d68b1b9aadaddeef",
        "b37093bb9bbce2ee",
        "547d1d300e4e8ca2",
        "e55403ad0da7d9d7",
        "c5a71bd3b16140a0",
        "179f543232051ccf",
        "143818a3adddb78a",
        "7a8de6804b512539",
        "9d0fb7d11862db87",
        "baad0c3acf62de9c",
        "9e276f5c6d1822f7",
        "f262692e3f0131f6",
        "27ac6abebb30268e",
        "d4952e39d9346b7f"
      ],
      "date": 1638337866941
    },
    {
      "type": "edit",
      "id": "68db7ba200cc0767",
      "item": {
        "type": "markdown",
        "id": "68db7ba200cc0767",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1638283963198090ghopI:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=autonomic.zone matrix]\n> You may find these utility functions handy for input/output to resources in the lineup. The assets function has proven to be tricky to get right. Others have been reliable when used ad-hoc in html scripts I have been writing. http://code.fed.wiki/frame-integration-promises.html"
      },
      "date": 1638337953999
    },
    {
      "type": "edit",
      "id": "0325906db7293614",
      "item": {
        "type": "pagefold",
        "id": "0325906db7293614",
        "text": "DH Plenum"
      },
      "date": 1638338590196
    }
  ]
}