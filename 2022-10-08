{
  "title": "2022-10-08",
  "story": [
    {
      "type": "paragraph",
      "id": "58e8207db8458833",
      "text": "yoshiki — 2022-05-15 via [https://discord.com/channels/694586717247635488/965416258499653642/975201809671004250 discord]\nThe scripts saved into .vrse [⇒[[Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation."
    },
    {
      "type": "paragraph",
      "id": "6c01714cbd751d62",
      "text": "As for the second question. it is yes. The cards are organized into a [[Display-Scene Tree]], but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
    },
    {
      "type": "paragraph",
      "id": "2ce9363a94ea1b52",
      "text": "?: [[Translation]]"
    },
    {
      "type": "markdown",
      "id": "1b64a0cd0dab3e38",
      "text": "songs4u — 15.05.2022\nI see. I told a colleague recently that I’ve avoided the Java world for long time because of the plethora of files, class paths, file dependencies, etc.So maybe you also want to avoid some multi files-complexity and put it all into one here instead of a zip together with some package info? On the other hand, if I saved the world after having loaded a vrse script, it will create the according new files in their respective folders, no? So the symmetrical thing would be to be able to unzip the vrse into the local microverse folders first before starting the world (or maybe even while running it, when “connected”), and get the same result. I guess this “unzip” operation could also be a “git pull”? \n\n"
    },
    {
      "type": "markdown",
      "id": "e0dc6c342c5cda67",
      "text": "yoshiki — 16.05.2022\ninteresting thoughts... There are some more constraints, such as we will not be able to depend on the files and directories to organize and give unique identity to them, and being able to load a file without much additional facilities, and possibly read them to make sense of it, etc. (If I'm not mistaken your suggestion here is to use a zip, rather than \"instead of a zip\".) So when we don't rely on a file system, loading results in making new files in folders probably is not the way it is going to work.  Thank you for articulating this idea. We'll see what we do, and certainly simplicity around files and data is something we'd like to have.\n\n"
    },
    {
      "type": "markdown",
      "id": "9e4bd4872d144760",
      "text": "songs4u — 16.05.2022\nThanks for your patience and explanation, Yoshiki. I guess I started a bit too early to groove to a not yet existing \"bass line\" which I kind of sensed after you demoed your pendulum:  I felt quite excited about the idea to be able to extend running worlds online via completely readable, and easily writable scripts. Like a VR-scripting language enabling  \"wolf pack/ mob / ensemble  programming\". I see that it gets tricky with storage of binaries, versioning, authentication, and  lots of other stuff you are aware of (and I am not).\n\nOne more thought: Loading & saving are not symmetrical operations right now, are they? Loading is more like \"importing\", whereas \"saving\" is indeed saving the whole world, right?\n\n"
    },
    {
      "type": "markdown",
      "id": "6732c4e54eea3b20",
      "text": "yoshiki — 16.05.2022\nTo the last point, yes, that is the case right now, and I think we will need two ways of loading things. As for saving, you can bring up a property sheet by ctrl-click on a card, and choose \"Save\" in the menu at bottom right. That saves the card (and its children). But then again, we'd want to have a way to multi select cards and save them into one .vrse file, which we could load as \"importing\" to have more cards in the loading world.\n\n"
    },
    {
      "type": "markdown",
      "id": "9547fc88d736e211",
      "text": "songs4u — 16.05.2022\nYes, makes sense., thank you. And regarding my above points about “[[Ensemble Programming]]” — in a way you of course already provide this, just “only” on the html/js-site server and indirectly via those VRSE files. \n"
    },
    {
      "type": "pagefold",
      "id": "f42b5f405d6b6821",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "38d5ed7d150edc4f",
      "text": "⇒ [[Newton's Cradle]]"
    },
    {
      "type": "paragraph",
      "id": "a34a228d326c12d3",
      "text": "?: [[Translation]]"
    },
    {
      "type": "markdown",
      "id": "bcc6e4e6575c22c3",
      "text": "yoshiki — 2022-06-23 [https://discord.com/channels/694586717247635488/966071402526543924/989334044988809226 discord]\nAs Vanessa wrote, Microverse uses Three.js through [[Worldcore]] so the implementation of the microverse \"Card\" relies on a bit more on Worldcore's kernel mixins such as Spatial and Smoothed. The translation and rotation of a Card uses the same representation of Worldcore objects so that they can be simply rendered. On the other hand, event handling and all other parts of the Microverse was written for Microverse. So yes, Worldcore manages the structure part of the display scene and stuff, but the rest is done in code in Microverse."
    },
    {
      "type": "paragraph",
      "id": "d1c2984fa4b8163d",
      "text": "[…]"
    },
    {
      "type": "pagefold",
      "id": "2317465d0130dfe9",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "96290c0ebfb61d99",
      "text": "\nYou replace education use by dynamic knowledge modeling and you have something with a wider interest. Wolfram|Alpha is what come close https://www.wolframalpha.com\nLe 06/10/2022 à 15:04, Hilaire Fernandes a écrit :\n> I will be very enthusiastic to get momentum around Cuis and the community to build up an amazing hardware and software environment on top of Cuis for educational use. We already have amazing projects (and people) constituting building blocks (Morphic3, Haver, Erudite, DrGeo, VM for RiscV and many I forgot). \n\n-- \nGNU Dr. Geo\nhttp://drgeo.eu\nhttp://blog.drgeo.eu\n\n"
    },
    {
      "type": "pagefold",
      "id": "f8cebb3bea214c13",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "6a1670bfd2fa2710",
      "site": "risks.rodwell.me",
      "slug": "the-thorny-problem-of-keeping-the-internets-time",
      "title": "The Thorny Problem of Keeping the Internet's Time",
      "text": "David Mills, TNY on NTP"
    },
    {
      "type": "reference",
      "id": "00194e709db68ced",
      "site": "risks.rodwell.me",
      "slug": "sorry-but-your-boss-is-pretty-hyped-about-todays-most-annoying-tech-trends",
      "title": "Sorry, But Your Boss Is Pretty Hyped About Today's Most Annoying Tech Trends",
      "text": "Think you can escape the metaverse? KPMG's 'Digital to the core' report shows a high state of buzzword compliance among surveyed execs."
    },
    {
      "type": "reference",
      "id": "46cbf6d8a0f5be7b",
      "site": "lfi.wiki.dbbs.co",
      "slug": "hidden-risks-of-counting-9s",
      "title": "Hidden Risks of Counting 9s",
      "text": "A counterintuitive experience report from measuring availability."
    },
    {
      "type": "pagefold",
      "id": "80f2c205a3b8f907",
      "text": "Mike Hales"
    },
    {
      "type": "reference",
      "id": "5dd911622388d438",
      "site": "mhtoolstack.wiki.cafe",
      "slug": "trinity-and-extended-trinity",
      "title": "Trinity and extended trinity",
      "text": "Here we bring up a framework about tools, arising from a decade or so of experimentation. It has three components: trinity, stack and 'specials'."
    },
    {
      "type": "reference",
      "id": "ae9b6739ae24ca59",
      "site": "mhtoolstack.wiki.cafe",
      "slug": "tools-for-peer-to-peer-collaboration-and-coproduction",
      "title": "Tools for peer-to-peer collaboration and coproduction",
      "text": "In constructing learning space, diving into a specialised bundle of tools for delivering content to an audience might not be the move to make. There might be a bundle of more generic tools, for p2p collaborating and coproduction, that will do a large part of the work involved in researching, communicating understandings and making discoveries. In a collective. Under social relations of commoning."
    },
    {
      "type": "reference",
      "id": "43ae7a888fa84562",
      "site": "mhtoolstack.wiki.cafe",
      "slug": "extended-trinity",
      "title": "Extended trinity",
      "text": "Here we tweak the 'trinity/stack/specials' frame. On one hand, things have evolved since that frame was assembled (2019). On the other, some of the 'more specialised' tools seem to warrant being promoted to the top level of 'basic' tools. We deal with this through framing an 'Extended trinity' of basic tools for organising."
    },
    {
      "type": "reference",
      "id": "408a7c09c39b0a5c",
      "site": "mhtoolstack.wiki.cafe",
      "slug": "perceptions-of-infrastructuring",
      "title": "Perceptions of infrastructuring",
      "text": "Here are some perceptions (2022Firenze) that bear on the significance of infrastructure for organisers."
    },
    {
      "type": "reference",
      "id": "7f7d7ab838bbbc62",
      "site": "mhtoolstack.wiki.cafe",
      "slug": "platform-space",
      "title": "Platform space",
      "text": "Here we address the provisioning and mobilising of commons of running code, across diverse kinds of contribution and mobilising, in a multistakeholder community, through infrastructures that are distributed across diverse locations and devices."
    },
    {
      "type": "pagefold",
      "id": "3f90346c31316fea",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "1ef6e1d523998720",
      "text": "[[Actor/Pawn Pair]]"
    },
    {
      "type": "markdown",
      "id": "fd1445145a43c953",
      "text": "* [[Actor]]\n* [[Pawn]]\n⇒ [[World Core Tutorial 1]]"
    },
    {
      "type": "paragraph",
      "id": "8ef0d512d3ad7958",
      "text": "Cf. player 1 – player 2"
    },
    {
      "type": "paragraph",
      "id": "e2da26f8032619ca",
      "text": "BeamModel  extends Croquet.Model "
    },
    {
      "type": "code",
      "id": "14d9db49f0e71edb",
      "text": "  static types() {\n    return {\n      \"Graph\": Graph\n    };\n"
    },
    {
      "type": "paragraph",
      "id": "90363ac0d189b059",
      "text": "Tutorial: 💡 Writing a Croquet Model. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html page]"
    },
    {
      "type": "paragraph",
      "id": "b8211695d6ddb57a",
      "text": "Following the [[Hypertext Super Collaborator]] (hsc) program we could also get along in the DMX context with only one object, the DMXObject. The DMXObject thus corresponds conceptually to the [[Graph]] object of the hsc."
    },
    {
      "type": "markdown",
      "id": "c24d194d1c10784f",
      "text": "This is what makes [[Hypertext Super Collaborator]] a very simple program. Everything we do is done with that one object. Even our schema are constructed out of this one object. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1664121042189676DnHlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n\n"
    },
    {
      "type": "markdown",
      "id": "89870409ca1030ec",
      "text": "Cf. \"Advanced Topic: Non-Model Objects in the Model\" in the tutorial. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html page]\n"
    },
    {
      "type": "markdown",
      "id": "a28fa9e211f68ddf",
      "text": "> Model classes that use non-model objects must include a special static method named `types()` that declares all of the non-model classes:"
    },
    {
      "type": "code",
      "id": "0df39498d77ed5f1",
      "text": "class MyModel extends Croquet.Model {\n    static types() {\n        return {\n            \"MyFile.MyClass\": MyClass,\n        }\n    }\n}\n"
    },
    {
      "type": "markdown",
      "id": "e94ae515dad80384",
      "text": "**Note**. All objects in the model must be derived from the Model base class. (Mostly. See below for more information.)\n\n**Note**. [[DMXObject]] is the (abstract) base class of both, [[Topic]] and [[Assoc]]. [https://apidocs.dmx.systems/systems/dmx/core/DMXObject.html page]\n"
    },
    {
      "type": "paragraph",
      "id": "103a51c3d8b557c8",
      "text": "⇒  [[Topic]] "
    },
    {
      "type": "pagefold",
      "id": "a4f0b652bd722584",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "531326026ea2bcd5",
      "text": "\nDENAUX, Ronald, REN, Yuan, VILLAZON-TERRAZAS, Boris, ALEXOPOULOS, Panos, FARAOTTI, Alessandro and WU, Honghan, 2017. Knowledge Architecture for Organisations. In: PAN, Jeff Z., VETERE, Guido, GOMEZ-PEREZ, Jose Manuel and WU, Honghan (eds.), Exploiting Linked Data and Knowledge Graphs in Large Organisations. Online. Cham: Springer International Publishing. p. 57–84. [Accessed 8 October 2022]. ISBN 978-3-319-45654-6. "
    },
    {
      "type": "markdown",
      "id": "9c0d235e0f398a96",
      "text": "> In this chapter, we prepare you a high-level overview of what is needed in order to create, maintain, and exploit knowledge graphs for a real application.\n"
    },
    {
      "type": "paragraph",
      "id": "4f175cfe639a0ef8",
      "text": "In [6] the authors suggest an approach to generate semantic tag recommendations for documents based on Semantic Web ontologies and Web 2.0 services. In particular, their proposed process starts with the extraction of document entities through the utilisation of Web 2.0 services (such as Yahoo’s Term Extraction service and their transformation into a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [159]. Then, the topics of this topic map are matched, based on document classification methods, to instances of some domain ontology expressed according to the PIMO (Personal Information Models) ontology [204]. The matching pairs are shown to the users as tag recommendations and they decide whether to accept or to reject them."
    },
    {
      "type": "markdown",
      "id": "882cadfb4c7aa5c0",
      "text": "[6]. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0 948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a.pdf (2007)"
    },
    {
      "type": "paragraph",
      "id": "ba5782880175b87d",
      "text": "\nADRIAN, Benjamin, SAUERMANN, Leo and ROTH-BERGHOFER, Thomas, 2007. Contag: A semantic tag recommendation system. In: Proceedings of ISemantics’ 07. JUCS. 2007. p. 297–304. "
    },
    {
      "type": "markdown",
      "id": "422f3e29ef0ec247",
      "text": "> Abstract: ConTag is an approach to generate semantic tag recommendations for documents based on Semantic Web ontologies and Web 2.0 services. We designed and implemented a process to normalize documents to RDF format, extract document topics using Web 2.0 services and finally match extracted topics to a Semantic Web ontology. Due to ConTag we are able to show that the information provided by Web 2.0 services in combination with a Semantic Web ontology enables the generation of relevant semantic tag recommendations for documents. The main contribution of this work is a semantic tag recommendation process based on a choreography of Web 2.0 services.\n"
    },
    {
      "type": "markdown",
      "id": "9d98f9b07971c0ca",
      "text": "[…] During the second step, *Topic Extraction*, topics are extracted by requesting Web 2.0 services. This results in a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [Miles and Brickley, 2005]. In succeeding lookup iterations, each topic entity is enriched by a set of semantic properties, such as definitions and synonyms."
    },
    {
      "type": "paragraph",
      "id": "2b8ba622849dd316",
      "text": "[…] The Alignment Generation is based on document classification methods. For each topic in the topic map, several weighted alignment possibilities are computed to retrieve similar things."
    },
    {
      "type": "paragraph",
      "id": "672b4b440c9d828f",
      "text": "[…] The following sections describe parts of the Semantic Tag Recommendation Process, namely Topic Extraction and Alignment Generation.WeusedtheRDF store Sesame 2 to manage ontologies in RDFS and topic maps in SKOS."
    },
    {
      "type": "paragraph",
      "id": "f59636529aae1033",
      "text": "[…] The topic extraction step is the most valuable step in the Tag Recommendation Process. It results in developing a document specific topic map by executing a Web 2.0 service choreography to extract document entities. The SKOS vocabulary distinguishes topics between instances and classes similar to PIMO language using relations (broaderInstantive, narrowerInstantive). Each topic possesses a name prefLabel and alternative labels altLabel. Each topic may be further explained by fulltext definitions written in natural language using definition."
    },
    {
      "type": "paragraph",
      "id": "bfd7aea52ad052b1",
      "text": "[…] Yahoo’s Term Extraction service and Topicalizer6 are used to extract relevant keyphrases. The results are stored into a document specific topic map. In a succeeding iteration, for each topic in the topic map, three succeeding lookups request Web 2.0 services to gather for more information: […]"
    },
    {
      "type": "paragraph",
      "id": "0e3f3cfeef7776f5",
      "text": "[…] Due to a topological analysis of PIMO ontologies and document topic maps we assume that an ontology contains more entities than a topic map. Additionally, ontologies contain class hierarchies, whether topic maps are rather flat structured. Therefore we focussed on aligning topics to things by applying hierarchical document classification techniques instead of using topolical ontology matching methods. In this paper, we describe a rather simple alignment approach. Other appraches can be found in [Horak, 2006]."
    },
    {
      "type": "pagefold",
      "id": "663710e7583659fe",
      "text": "~"
    },
    {
      "type": "graphviz",
      "id": "6e55ea0ee76b0b3d",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "paragraph",
      "id": "766a2f620bbb1dc7",
      "text": "⇒ [[Display-Scene Tree]] ⇒ [[Namespace]]"
    },
    {
      "type": "paragraph",
      "id": "4ab0311f015cf7f9",
      "text": "YANG, Yan and YUN, Long, 2010. Literature recommendation based on reference graph. In: 2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE). August 2010. p. V3-400-V3-404. DOI 10.1109/ICACTE.2010.5579583. "
    },
    {
      "type": "markdown",
      "id": "f563ac5687fb8d5b",
      "text": "> Research papers are frequently requested in digital library. When users query for documents about a research problem, users usually want all the related documents and the citations with the relations among them, to enable the user know the development of the research area. Traditional recommendation techniques are mainly based on similarity among users or documents to do recommendation. They do not use the relationships among documents and, especially, cannot provide topology structure of related documents to the user. This paper proposes a new recommendation technique based on reference graph of documents. Combined with traditional recommendation techniques, it can recommend research paper more completely, accurately and clearly. Experimental results show that the reference graph based recommendation technique is more effective.\n"
    },
    {
      "type": "pagefold",
      "id": "4a731f5135d030f5",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "6ed9b1d307fc3f88",
      "site": "viralwiki.federated.wiki",
      "slug": "shared-learning-space-aka-commons",
      "title": "Shared learning space aka commons",
      "text": "Here we explore 'shared learning space' as a layered constellation of commons: of running code, of digital media, and of radical, transformative, activist labour-power."
    },
    {
      "type": "paragraph",
      "id": "3463a27ceb3889fe",
      "text": "EGHBAL, Nadia, [no date]. The Unseen Labor Behind Our Digital Infrastructure. \n"
    },
    {
      "type": "markdown",
      "id": "029e9e98406026a4",
      "text": "> […] I set off to explore the paradox I couldn’t stop thinking about: that there were valuable software tools that couldn’t be supported by commercial models, and that they lacked any form of institutional support."
    },
    {
      "type": "paragraph",
      "id": "f722dfec77d61260",
      "text": "Supporting infrastructure requires embracing the concept of stewardship rather than control"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-10-08",
        "story": []
      },
      "date": 1665216005436
    },
    {
      "item": {
        "type": "factory",
        "id": "58e8207db8458833"
      },
      "id": "58e8207db8458833",
      "type": "add",
      "date": 1665216008874
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 15.05.2022\nThe scripts saved into .vrse will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation.\nAs for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665216010449
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 15.05.2022\nThe scripts saved into .vrse [–[[ Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation.\nAs for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665217394348
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 15.05.2022\nThe scripts saved into .vrse [⇒[[Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation.\nAs for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665217406968
    },
    {
      "item": {
        "type": "factory",
        "id": "2ce9363a94ea1b52"
      },
      "id": "2ce9363a94ea1b52",
      "type": "add",
      "after": "58e8207db8458833",
      "date": 1665217445067
    },
    {
      "type": "edit",
      "id": "2ce9363a94ea1b52",
      "item": {
        "type": "paragraph",
        "id": "2ce9363a94ea1b52",
        "text": "?: [[Translation]]"
      },
      "date": 1665217453772
    },
    {
      "item": {
        "type": "factory",
        "id": "1b64a0cd0dab3e38"
      },
      "id": "1b64a0cd0dab3e38",
      "type": "add",
      "after": "2ce9363a94ea1b52",
      "date": 1665217897676
    },
    {
      "type": "edit",
      "id": "1b64a0cd0dab3e38",
      "item": {
        "type": "markdown",
        "id": "1b64a0cd0dab3e38",
        "text": "songs4u — 15.05.2022\nI see. I told a colleague recently that I’ve avoided the Java world for long time because of the plethora of files, class paths, file dependencies, etc.So maybe you also want to avoid some multi files-complexity and put it all into one here instead of a zip together with some package info? On the other hand, if I saved the world after having loaded a vrse script, it will create the according new files in their respective folders, no? So the symmetrical thing would be to be able to unzip the vrse into the local microverse folders first before starting the world (or maybe even while running it, when “connected”), and get the same result. I guess this “unzip” operation could also be a “git pull”? \nyoshiki — 16.05.2022\ninteresting thoughts... There are some more constraints, such as we will not be able to depend on the files and directories to organize and give unique identity to them, and being able to load a file without much additional facilities, and possibly read them to make sense of it, etc. (If I'm not mistaken your suggestion here is to use a zip, rather than \"instead of a zip\".) So when we don't rely on a file system, loading results in making new files in folders probably is not the way it is going to work.  Thank you for articulating this idea. We'll see what we do, and certainly simplicity around files and data is something we'd like to have.\nsongs4u — 16.05.2022\nThanks for your patience and explanation, Yoshiki. I guess I started a bit too early to groove to a not yet existing \"bass line\" which I kind of sensed after you demoed your pendulum:  I felt quite excited about the idea to be able to extend running worlds online via completely readable, and easily writable scripts. Like a VR-scripting language enabling  \"wolf pack/ mob / ensemble  programming\". I see that it gets tricky with storage of binaries, versioning, authentication, and  lots of other stuff you are aware of (and I am not).\n\nOne more thought: Loading & saving are not symmetrical operations right now, are they? Loading is more like \"importing\", whereas \"saving\" is indeed saving the whole world, right?\nyoshiki — 16.05.2022\nTo the last point, yes, that is the case right now, and I think we will need two ways of loading things. As for saving, you can bring up a property sheet by ctrl-click on a card, and choose \"Save\" in the menu at bottom right. That saves the card (and its children). But then again, we'd want to have a way to multi select cards and save them into one .vrse file, which we could load as \"importing\" to have more cards in the loading world.\nsongs4u — 16.05.2022\nYes, makes sense., thank you. And regarding my above points about “ensemble programming” — in a way you of course already provide this, just “only” on the html/js-site server and indirectly via those VRSE files. \n"
      },
      "date": 1665217900595
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 15.05.2022 via [https://discord.com/channels/694586717247635488/965416258499653642 /975201809671004250 discord]\nThe scripts saved into .vrse [⇒[[Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation.\nAs for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665217945562
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 2022-05-15 via [https://discord.com/channels/694586717247635488/965416258499653642/975201809671004250 discord]\nThe scripts saved into .vrse [⇒[[Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation.\nAs for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665217977149
    },
    {
      "type": "edit",
      "id": "1b64a0cd0dab3e38",
      "item": {
        "type": "markdown",
        "id": "1b64a0cd0dab3e38",
        "text": "songs4u — 15.05.2022\nI see. I told a colleague recently that I’ve avoided the Java world for long time because of the plethora of files, class paths, file dependencies, etc.So maybe you also want to avoid some multi files-complexity and put it all into one here instead of a zip together with some package info? On the other hand, if I saved the world after having loaded a vrse script, it will create the according new files in their respective folders, no? So the symmetrical thing would be to be able to unzip the vrse into the local microverse folders first before starting the world (or maybe even while running it, when “connected”), and get the same result. I guess this “unzip” operation could also be a “git pull”? \n\n"
      },
      "date": 1665218045991
    },
    {
      "type": "add",
      "id": "e0dc6c342c5cda67",
      "item": {
        "type": "markdown",
        "id": "e0dc6c342c5cda67",
        "text": "yoshiki — 16.05.2022\ninteresting thoughts... There are some more constraints, such as we will not be able to depend on the files and directories to organize and give unique identity to them, and being able to load a file without much additional facilities, and possibly read them to make sense of it, etc. (If I'm not mistaken your suggestion here is to use a zip, rather than \"instead of a zip\".) So when we don't rely on a file system, loading results in making new files in folders probably is not the way it is going to work.  Thank you for articulating this idea. We'll see what we do, and certainly simplicity around files and data is something we'd like to have.\n\n"
      },
      "after": "1b64a0cd0dab3e38",
      "date": 1665218051636
    },
    {
      "type": "add",
      "id": "9e4bd4872d144760",
      "item": {
        "type": "markdown",
        "id": "9e4bd4872d144760",
        "text": "songs4u — 16.05.2022\nThanks for your patience and explanation, Yoshiki. I guess I started a bit too early to groove to a not yet existing \"bass line\" which I kind of sensed after you demoed your pendulum:  I felt quite excited about the idea to be able to extend running worlds online via completely readable, and easily writable scripts. Like a VR-scripting language enabling  \"wolf pack/ mob / ensemble  programming\". I see that it gets tricky with storage of binaries, versioning, authentication, and  lots of other stuff you are aware of (and I am not).\n\nOne more thought: Loading & saving are not symmetrical operations right now, are they? Loading is more like \"importing\", whereas \"saving\" is indeed saving the whole world, right?\n\n"
      },
      "after": "e0dc6c342c5cda67",
      "date": 1665218086709
    },
    {
      "type": "add",
      "id": "6732c4e54eea3b20",
      "item": {
        "type": "markdown",
        "id": "6732c4e54eea3b20",
        "text": "yoshiki — 16.05.2022\nTo the last point, yes, that is the case right now, and I think we will need two ways of loading things. As for saving, you can bring up a property sheet by ctrl-click on a card, and choose \"Save\" in the menu at bottom right. That saves the card (and its children). But then again, we'd want to have a way to multi select cards and save them into one .vrse file, which we could load as \"importing\" to have more cards in the loading world.\n\n"
      },
      "after": "9e4bd4872d144760",
      "date": 1665218103865
    },
    {
      "type": "add",
      "id": "9547fc88d736e211",
      "item": {
        "type": "markdown",
        "id": "9547fc88d736e211",
        "text": "songs4u — 16.05.2022\nYes, makes sense., thank you. And regarding my above points about “ensemble programming” — in a way you of course already provide this, just “only” on the html/js-site server and indirectly via those VRSE files. \n"
      },
      "after": "6732c4e54eea3b20",
      "date": 1665218160327
    },
    {
      "type": "edit",
      "id": "9547fc88d736e211",
      "item": {
        "type": "markdown",
        "id": "9547fc88d736e211",
        "text": "songs4u — 16.05.2022\nYes, makes sense., thank you. And regarding my above points about “[[Ensemble Programming]]” — in a way you of course already provide this, just “only” on the html/js-site server and indirectly via those VRSE files. \n"
      },
      "date": 1665218202317
    },
    {
      "item": {
        "type": "factory",
        "id": "f42b5f405d6b6821"
      },
      "id": "f42b5f405d6b6821",
      "type": "add",
      "after": "9547fc88d736e211",
      "date": 1665218480286
    },
    {
      "type": "edit",
      "id": "f42b5f405d6b6821",
      "item": {
        "type": "pagefold",
        "id": "f42b5f405d6b6821",
        "text": "~"
      },
      "date": 1665218484924
    },
    {
      "item": {
        "type": "factory",
        "id": "dc830a642b32bd0a"
      },
      "id": "dc830a642b32bd0a",
      "type": "add",
      "after": "f42b5f405d6b6821",
      "date": 1665218487142
    },
    {
      "type": "edit",
      "id": "dc830a642b32bd0a",
      "item": {
        "type": "markdown",
        "id": "dc830a642b32bd0a",
        "text": "Trevor / Traxap — 11.07.2022\n@sebcrozet I've been trying to create a Newton's Cradle in the microverse using rapier, and I noticed that when the microverse loads in, the balls of the cradle are already in motion and the translation of the connecting \"rope\" is a bit strange. Also it seems as if some of the middle balls keep some of the momentum from the hit and not all the momentum is transferred from the first to the last ball. I was wondering if you had any insight on how to fix these issues (posting a video in a minute).\n"
      },
      "date": 1665218489766
    },
    {
      "type": "edit",
      "id": "dc830a642b32bd0a",
      "item": {
        "type": "markdown",
        "id": "dc830a642b32bd0a",
        "text": "Trevor / Traxap — 11.07.2022\n@sebcrozet I've been trying to create a [[Newton's Cradle]] in the microverse using rapier, and I noticed that when the microverse loads in, the balls of the cradle are already in motion and the translation of the connecting \"rope\" is a bit strange. Also it seems as if some of the middle balls keep some of the momentum from the hit and not all the momentum is transferred from the first to the last ball. I was wondering if you had any insight on how to fix these issues (posting a video in a minute).\n"
      },
      "date": 1665218570554
    },
    {
      "id": "dc830a642b32bd0a",
      "type": "remove",
      "date": 1665218578451
    },
    {
      "item": {
        "type": "factory",
        "id": "38d5ed7d150edc4f"
      },
      "id": "38d5ed7d150edc4f",
      "type": "add",
      "after": "f42b5f405d6b6821",
      "date": 1665218591026
    },
    {
      "type": "edit",
      "id": "38d5ed7d150edc4f",
      "item": {
        "type": "paragraph",
        "id": "38d5ed7d150edc4f",
        "text": "[[Newton's Cradle]]"
      },
      "date": 1665218593446
    },
    {
      "type": "edit",
      "id": "38d5ed7d150edc4f",
      "item": {
        "type": "paragraph",
        "id": "38d5ed7d150edc4f",
        "text": "⇒ [[Newton's Cradle]]"
      },
      "date": 1665219474960
    },
    {
      "item": {
        "type": "factory",
        "id": "a34a228d326c12d3"
      },
      "id": "a34a228d326c12d3",
      "type": "add",
      "after": "38d5ed7d150edc4f",
      "date": 1665219480861
    },
    {
      "type": "edit",
      "id": "a34a228d326c12d3",
      "item": {
        "type": "paragraph",
        "id": "a34a228d326c12d3",
        "text": "?: [[Translation]]"
      },
      "date": 1665219482909
    },
    {
      "item": {
        "type": "factory",
        "id": "bcc6e4e6575c22c3"
      },
      "id": "bcc6e4e6575c22c3",
      "type": "add",
      "after": "a34a228d326c12d3",
      "date": 1665219493869
    },
    {
      "type": "edit",
      "id": "bcc6e4e6575c22c3",
      "item": {
        "type": "markdown",
        "id": "bcc6e4e6575c22c3",
        "text": "yoshiki — 23.06.2022\nAs Vanessa wrote, Microverse uses Three.js through Worldcore so the implementation of the microverse \"Card\" relies on a bit more on Worldcore's kernel mixins such as Spatial and Smoothed. The translation and rotation of a Card uses the same representation of Worldcore objects so that they can be simply rendered. On the other hand, event handling and all other parts of the Microverse was written for Microverse. So yes, Worldcore manages the structure part of the display scene and stuff, but the rest is done in code in Microverse."
      },
      "date": 1665219495946
    },
    {
      "type": "edit",
      "id": "bcc6e4e6575c22c3",
      "item": {
        "type": "markdown",
        "id": "bcc6e4e6575c22c3",
        "text": "yoshiki — 2022-06-23 [https://discord.com/channels/694586717247635488/966071402526543924/989334044988809226 discord]\nAs Vanessa wrote, Microverse uses Three.js through Worldcore so the implementation of the microverse \"Card\" relies on a bit more on Worldcore's kernel mixins such as Spatial and Smoothed. The translation and rotation of a Card uses the same representation of Worldcore objects so that they can be simply rendered. On the other hand, event handling and all other parts of the Microverse was written for Microverse. So yes, Worldcore manages the structure part of the display scene and stuff, but the rest is done in code in Microverse."
      },
      "date": 1665219521669
    },
    {
      "type": "edit",
      "id": "bcc6e4e6575c22c3",
      "item": {
        "type": "markdown",
        "id": "bcc6e4e6575c22c3",
        "text": "yoshiki — 2022-06-23 [https://discord.com/channels/694586717247635488/966071402526543924/989334044988809226 discord]\nAs Vanessa wrote, Microverse uses Three.js through [[Worldcore]] so the implementation of the microverse \"Card\" relies on a bit more on Worldcore's kernel mixins such as Spatial and Smoothed. The translation and rotation of a Card uses the same representation of Worldcore objects so that they can be simply rendered. On the other hand, event handling and all other parts of the Microverse was written for Microverse. So yes, Worldcore manages the structure part of the display scene and stuff, but the rest is done in code in Microverse."
      },
      "date": 1665219574840
    },
    {
      "item": {
        "type": "factory",
        "id": "d1c2984fa4b8163d"
      },
      "id": "d1c2984fa4b8163d",
      "type": "add",
      "after": "bcc6e4e6575c22c3",
      "date": 1665221146442
    },
    {
      "type": "edit",
      "id": "d1c2984fa4b8163d",
      "item": {
        "type": "paragraph",
        "id": "d1c2984fa4b8163d",
        "text": "[…]"
      },
      "date": 1665221151515
    },
    {
      "item": {
        "type": "factory",
        "id": "2317465d0130dfe9"
      },
      "id": "2317465d0130dfe9",
      "type": "add",
      "after": "d1c2984fa4b8163d",
      "date": 1665225317947
    },
    {
      "type": "edit",
      "id": "2317465d0130dfe9",
      "item": {
        "type": "pagefold",
        "id": "2317465d0130dfe9",
        "text": "~"
      },
      "date": 1665225320987
    },
    {
      "item": {
        "type": "factory",
        "id": "96290c0ebfb61d99"
      },
      "id": "96290c0ebfb61d99",
      "type": "add",
      "after": "2317465d0130dfe9",
      "date": 1665225322727
    },
    {
      "type": "edit",
      "id": "96290c0ebfb61d99",
      "item": {
        "type": "paragraph",
        "id": "96290c0ebfb61d99",
        "text": "\n\nYou replace education use by dynamic knowledge modeling and you have something with a wider interest. Wolfram|Alpha is what come close https://www.wolframalpha.com\nLe 06/10/2022 à 15:04, Hilaire Fernandes a écrit :\n> I will be very enthusiastic to get momentum around Cuis and the community to build up an amazing hardware and software environment on top of Cuis for educational use. We already have amazing projects (and people) constituting building blocks (Morphic3, Haver, Erudite, DrGeo, VM for RiscV and many I forgot). \n\n-- \nGNU Dr. Geo\nhttp://drgeo.eu\nhttp://blog.drgeo.eu\n\n"
      },
      "date": 1665225324323
    },
    {
      "type": "edit",
      "id": "96290c0ebfb61d99",
      "item": {
        "type": "paragraph",
        "id": "96290c0ebfb61d99",
        "text": "\nYou replace education use by dynamic knowledge modeling and you have something with a wider interest. Wolfram|Alpha is what come close https://www.wolframalpha.com\nLe 06/10/2022 à 15:04, Hilaire Fernandes a écrit :\n> I will be very enthusiastic to get momentum around Cuis and the community to build up an amazing hardware and software environment on top of Cuis for educational use. We already have amazing projects (and people) constituting building blocks (Morphic3, Haver, Erudite, DrGeo, VM for RiscV and many I forgot). \n\n-- \nGNU Dr. Geo\nhttp://drgeo.eu\nhttp://blog.drgeo.eu\n\n"
      },
      "date": 1665225367764
    },
    {
      "item": {
        "type": "factory",
        "id": "f8cebb3bea214c13"
      },
      "id": "f8cebb3bea214c13",
      "type": "add",
      "after": "96290c0ebfb61d99",
      "date": 1665226288593
    },
    {
      "type": "edit",
      "id": "f8cebb3bea214c13",
      "item": {
        "type": "pagefold",
        "id": "f8cebb3bea214c13",
        "text": "~"
      },
      "date": 1665226291711
    },
    {
      "item": {
        "type": "factory",
        "id": "6a1670bfd2fa2710"
      },
      "id": "6a1670bfd2fa2710",
      "type": "add",
      "after": "f8cebb3bea214c13",
      "date": 1665226293945
    },
    {
      "type": "edit",
      "id": "6a1670bfd2fa2710",
      "item": {
        "type": "reference",
        "id": "6a1670bfd2fa2710",
        "site": "risks.rodwell.me",
        "slug": "the-thorny-problem-of-keeping-the-internets-time",
        "title": "The Thorny Problem of Keeping the Internet's Time",
        "text": "David Mills, TNY on NTP"
      },
      "date": 1665226296560
    },
    {
      "item": {
        "type": "factory",
        "id": "00194e709db68ced"
      },
      "id": "00194e709db68ced",
      "type": "add",
      "after": "6a1670bfd2fa2710",
      "date": 1665226404738
    },
    {
      "type": "edit",
      "id": "00194e709db68ced",
      "item": {
        "type": "reference",
        "id": "00194e709db68ced",
        "site": "risks.rodwell.me",
        "slug": "sorry-but-your-boss-is-pretty-hyped-about-todays-most-annoying-tech-trends",
        "title": "Sorry, But Your Boss Is Pretty Hyped About Today's Most Annoying Tech Trends",
        "text": "Think you can escape the metaverse? KPMG's 'Digital to the core' report shows a high state of buzzword compliance among surveyed execs."
      },
      "date": 1665226407899
    },
    {
      "item": {
        "type": "factory",
        "id": "46cbf6d8a0f5be7b"
      },
      "id": "46cbf6d8a0f5be7b",
      "type": "add",
      "after": "00194e709db68ced",
      "date": 1665226570199
    },
    {
      "type": "edit",
      "id": "46cbf6d8a0f5be7b",
      "item": {
        "type": "reference",
        "id": "46cbf6d8a0f5be7b",
        "site": "lfi.wiki.dbbs.co",
        "slug": "hidden-risks-of-counting-9s",
        "title": "Hidden Risks of Counting 9s",
        "text": "A counterintuitive experience report from measuring availability."
      },
      "date": 1665226575862
    },
    {
      "item": {
        "type": "factory",
        "id": "5dd911622388d438"
      },
      "id": "5dd911622388d438",
      "type": "add",
      "after": "46cbf6d8a0f5be7b",
      "date": 1665226840838
    },
    {
      "type": "edit",
      "id": "5dd911622388d438",
      "item": {
        "type": "reference",
        "id": "5dd911622388d438",
        "site": "mhtoolstack.wiki.cafe",
        "slug": "trinity-and-extended-trinity",
        "title": "Trinity and extended trinity",
        "text": "Here we bring up a framework about tools, arising from a decade or so of experimentation. It has three components: trinity, stack and 'specials'."
      },
      "date": 1665226844401
    },
    {
      "item": {
        "type": "factory",
        "id": "80f2c205a3b8f907"
      },
      "id": "80f2c205a3b8f907",
      "type": "add",
      "after": "5dd911622388d438",
      "date": 1665226892131
    },
    {
      "type": "edit",
      "id": "80f2c205a3b8f907",
      "item": {
        "type": "pagefold",
        "id": "80f2c205a3b8f907",
        "text": "Mike Hales"
      },
      "date": 1665226894711
    },
    {
      "id": "80f2c205a3b8f907",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "80f2c205a3b8f907",
        "46cbf6d8a0f5be7b",
        "5dd911622388d438"
      ],
      "date": 1665226898686
    },
    {
      "id": "46cbf6d8a0f5be7b",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438"
      ],
      "date": 1665226901540
    },
    {
      "item": {
        "type": "factory",
        "id": "ae9b6739ae24ca59"
      },
      "id": "ae9b6739ae24ca59",
      "type": "add",
      "after": "5dd911622388d438",
      "date": 1665226971448
    },
    {
      "type": "edit",
      "id": "ae9b6739ae24ca59",
      "item": {
        "type": "reference",
        "id": "ae9b6739ae24ca59",
        "site": "mhtoolstack.wiki.cafe",
        "slug": "tools-for-peer-to-peer-collaboration-and-coproduction",
        "title": "Tools for peer-to-peer collaboration and coproduction",
        "text": "In constructing learning space, diving into a specialised bundle of tools for delivering content to an audience might not be the move to make. There might be a bundle of more generic tools, for p2p collaborating and coproduction, that will do a large part of the work involved in researching, communicating understandings and making discoveries. In a collective. Under social relations of commoning."
      },
      "date": 1665226974902
    },
    {
      "item": {
        "type": "factory",
        "id": "43ae7a888fa84562"
      },
      "id": "43ae7a888fa84562",
      "type": "add",
      "after": "ae9b6739ae24ca59",
      "date": 1665227021789
    },
    {
      "type": "edit",
      "id": "43ae7a888fa84562",
      "item": {
        "type": "reference",
        "id": "43ae7a888fa84562",
        "site": "mhtoolstack.wiki.cafe",
        "slug": "extended-trinity",
        "title": "Extended trinity",
        "text": "Here we tweak the 'trinity/stack/specials' frame. On one hand, things have evolved since that frame was assembled (2019). On the other, some of the 'more specialised' tools seem to warrant being promoted to the top level of 'basic' tools. We deal with this through framing an 'Extended trinity' of basic tools for organising."
      },
      "date": 1665227025032
    },
    {
      "item": {
        "type": "factory",
        "id": "408a7c09c39b0a5c"
      },
      "id": "408a7c09c39b0a5c",
      "type": "add",
      "after": "43ae7a888fa84562",
      "date": 1665227113227
    },
    {
      "type": "edit",
      "id": "408a7c09c39b0a5c",
      "item": {
        "type": "reference",
        "id": "408a7c09c39b0a5c",
        "site": "mhtoolstack.wiki.cafe",
        "slug": "perceptions-of-infrastructuring",
        "title": "Perceptions of infrastructuring",
        "text": "Here are some perceptions (2022Firenze) that bear on the significance of infrastructure for organisers."
      },
      "date": 1665227116747
    },
    {
      "item": {
        "type": "factory",
        "id": "7f7d7ab838bbbc62"
      },
      "id": "7f7d7ab838bbbc62",
      "type": "add",
      "after": "408a7c09c39b0a5c",
      "date": 1665227198401
    },
    {
      "type": "edit",
      "id": "7f7d7ab838bbbc62",
      "item": {
        "type": "reference",
        "id": "7f7d7ab838bbbc62",
        "site": "mhtoolstack.wiki.cafe",
        "slug": "platform-space",
        "title": "Platform space",
        "text": "Here we address the provisioning and mobilising of commons of running code, across diverse kinds of contribution and mobilising, in a multistakeholder community, through infrastructures that are distributed across diverse locations and devices."
      },
      "date": 1665227201527
    },
    {
      "item": {
        "type": "factory",
        "id": "3f90346c31316fea"
      },
      "id": "3f90346c31316fea",
      "type": "add",
      "after": "7f7d7ab838bbbc62",
      "date": 1665234170361
    },
    {
      "type": "edit",
      "id": "3f90346c31316fea",
      "item": {
        "type": "pagefold",
        "id": "3f90346c31316fea",
        "text": "~"
      },
      "date": 1665234174224
    },
    {
      "item": {
        "type": "factory",
        "id": "1ef6e1d523998720"
      },
      "id": "1ef6e1d523998720",
      "type": "add",
      "after": "3f90346c31316fea",
      "date": 1665234176050
    },
    {
      "type": "edit",
      "id": "1ef6e1d523998720",
      "item": {
        "type": "paragraph",
        "id": "1ef6e1d523998720",
        "text": "[[actor/pawn pair.]]"
      },
      "date": 1665234179733
    },
    {
      "type": "edit",
      "id": "1ef6e1d523998720",
      "item": {
        "type": "paragraph",
        "id": "1ef6e1d523998720",
        "text": "[[actor/pawn pair]]"
      },
      "date": 1665234183091
    },
    {
      "item": {
        "type": "factory",
        "id": "fd1445145a43c953"
      },
      "id": "fd1445145a43c953",
      "type": "add",
      "after": "1ef6e1d523998720",
      "date": 1665234207573
    },
    {
      "type": "edit",
      "id": "fd1445145a43c953",
      "item": {
        "type": "markdown",
        "id": "fd1445145a43c953",
        "text": "* "
      },
      "date": 1665234211209
    },
    {
      "type": "edit",
      "id": "fd1445145a43c953",
      "item": {
        "type": "markdown",
        "id": "fd1445145a43c953",
        "text": "* [[Actor]]"
      },
      "date": 1665234223418
    },
    {
      "type": "edit",
      "id": "fd1445145a43c953",
      "item": {
        "type": "markdown",
        "id": "fd1445145a43c953",
        "text": "* [[Actor]]\n* [[Pawn]]"
      },
      "date": 1665234244044
    },
    {
      "item": {
        "type": "factory",
        "id": "8ef0d512d3ad7958"
      },
      "id": "8ef0d512d3ad7958",
      "type": "add",
      "after": "fd1445145a43c953",
      "date": 1665234290753
    },
    {
      "type": "edit",
      "id": "8ef0d512d3ad7958",
      "item": {
        "type": "paragraph",
        "id": "8ef0d512d3ad7958",
        "text": "player 1 – player 2"
      },
      "date": 1665234299569
    },
    {
      "item": {
        "type": "factory",
        "id": "e2da26f8032619ca"
      },
      "id": "e2da26f8032619ca",
      "type": "add",
      "after": "8ef0d512d3ad7958",
      "date": 1665234382571
    },
    {
      "type": "edit",
      "id": "e2da26f8032619ca",
      "item": {
        "type": "paragraph",
        "id": "e2da26f8032619ca",
        "text": "BeamModel "
      },
      "date": 1665234386906
    },
    {
      "type": "edit",
      "id": "e2da26f8032619ca",
      "item": {
        "type": "paragraph",
        "id": "e2da26f8032619ca",
        "text": "BeamModel  extends Croquet.Model "
      },
      "date": 1665234440025
    },
    {
      "item": {
        "type": "factory",
        "id": "90363ac0d189b059"
      },
      "id": "90363ac0d189b059",
      "type": "add",
      "after": "e2da26f8032619ca",
      "date": 1665234490975
    },
    {
      "type": "edit",
      "id": "90363ac0d189b059",
      "item": {
        "type": "paragraph",
        "id": "90363ac0d189b059",
        "text": "Tutorial: 💡 Writing a Croquet Model "
      },
      "date": 1665234494357
    },
    {
      "type": "edit",
      "id": "90363ac0d189b059",
      "item": {
        "type": "paragraph",
        "id": "90363ac0d189b059",
        "text": "Tutorial: 💡 Writing a Croquet Model. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html]"
      },
      "date": 1665234508586
    },
    {
      "type": "add",
      "id": "103a51c3d8b557c8",
      "item": {
        "type": "paragraph",
        "id": "103a51c3d8b557c8",
        "text": "[[Topic]] "
      },
      "after": "90363ac0d189b059",
      "date": 1665234512815
    },
    {
      "item": {
        "type": "factory",
        "id": "14d9db49f0e71edb"
      },
      "id": "14d9db49f0e71edb",
      "type": "add",
      "after": "103a51c3d8b557c8",
      "date": 1665234931438
    },
    {
      "type": "edit",
      "id": "14d9db49f0e71edb",
      "item": {
        "type": "code",
        "id": "14d9db49f0e71edb",
        "text": "  static types() {\n    return {\n      \"Graph\": Graph\n    };\n"
      },
      "date": 1665234933856
    },
    {
      "id": "14d9db49f0e71edb",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438",
        "ae9b6739ae24ca59",
        "43ae7a888fa84562",
        "408a7c09c39b0a5c",
        "7f7d7ab838bbbc62",
        "3f90346c31316fea",
        "1ef6e1d523998720",
        "fd1445145a43c953",
        "8ef0d512d3ad7958",
        "e2da26f8032619ca",
        "14d9db49f0e71edb",
        "90363ac0d189b059",
        "103a51c3d8b557c8"
      ],
      "date": 1665234935773
    },
    {
      "item": {
        "type": "factory",
        "id": "b8211695d6ddb57a"
      },
      "id": "b8211695d6ddb57a",
      "type": "add",
      "after": "103a51c3d8b557c8",
      "date": 1665235037636
    },
    {
      "type": "edit",
      "id": "b8211695d6ddb57a",
      "item": {
        "type": "paragraph",
        "id": "b8211695d6ddb57a",
        "text": "Following the hsc program we could also get along in the DMX context with only one object, the DMXObject."
      },
      "date": 1665235070849
    },
    {
      "type": "edit",
      "id": "b8211695d6ddb57a",
      "item": {
        "type": "paragraph",
        "id": "b8211695d6ddb57a",
        "text": "Following the [[Hypertext Super Collaborator]] program we could also get along in the DMX context with only one object, the DMXObject."
      },
      "date": 1665235100399
    },
    {
      "type": "edit",
      "id": "b8211695d6ddb57a",
      "item": {
        "type": "paragraph",
        "id": "b8211695d6ddb57a",
        "text": "Following the [[Hypertext Super Collaborator]] (hsc) program we could also get along in the DMX context with only one object, the DMXObject. The DMXObject thus corresponds conceptually to the [[Graph]] object of the hsc."
      },
      "date": 1665235233101
    },
    {
      "id": "c24d194d1c10784f",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "c24d194d1c10784f",
        "text": "This is what makes [[Hypertext Super Collaborator]] a very simple program. Everything we do is done with that one object. Even our schema are constructed out of this one object. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1664121042189676DnHlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n"
      },
      "after": "b8211695d6ddb57a",
      "date": 1665235266699
    },
    {
      "id": "103a51c3d8b557c8",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438",
        "ae9b6739ae24ca59",
        "43ae7a888fa84562",
        "408a7c09c39b0a5c",
        "7f7d7ab838bbbc62",
        "3f90346c31316fea",
        "1ef6e1d523998720",
        "fd1445145a43c953",
        "8ef0d512d3ad7958",
        "e2da26f8032619ca",
        "14d9db49f0e71edb",
        "90363ac0d189b059",
        "b8211695d6ddb57a",
        "c24d194d1c10784f",
        "103a51c3d8b557c8"
      ],
      "date": 1665235309717
    },
    {
      "type": "edit",
      "id": "c24d194d1c10784f",
      "item": {
        "type": "markdown",
        "id": "c24d194d1c10784f",
        "text": "This is what makes [[Hypertext Super Collaborator]] a very simple program. Everything we do is done with that one object. Even our schema are constructed out of this one object. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1664121042189676DnHlh:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n\n"
      },
      "date": 1665235448870
    },
    {
      "type": "add",
      "id": "89870409ca1030ec",
      "item": {
        "type": "markdown",
        "id": "89870409ca1030ec",
        "text": "Advanced Topic: Non-Model Objects in the Model"
      },
      "after": "c24d194d1c10784f",
      "date": 1665235449640
    },
    {
      "type": "edit",
      "id": "89870409ca1030ec",
      "item": {
        "type": "markdown",
        "id": "89870409ca1030ec",
        "text": "Cf. \"Advanced Topic: Non-Model Objects in the Model\" in the tutorial."
      },
      "date": 1665235469196
    },
    {
      "type": "edit",
      "id": "89870409ca1030ec",
      "item": {
        "type": "markdown",
        "id": "89870409ca1030ec",
        "text": "Cf. \"Advanced Topic: Non-Model Objects in the Model\" in the tutorial. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html page]"
      },
      "date": 1665235479918
    },
    {
      "item": {
        "type": "factory",
        "id": "0df39498d77ed5f1"
      },
      "id": "0df39498d77ed5f1",
      "type": "add",
      "after": "103a51c3d8b557c8",
      "date": 1665235492041
    },
    {
      "id": "0df39498d77ed5f1",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438",
        "ae9b6739ae24ca59",
        "43ae7a888fa84562",
        "408a7c09c39b0a5c",
        "7f7d7ab838bbbc62",
        "3f90346c31316fea",
        "1ef6e1d523998720",
        "fd1445145a43c953",
        "8ef0d512d3ad7958",
        "e2da26f8032619ca",
        "14d9db49f0e71edb",
        "90363ac0d189b059",
        "b8211695d6ddb57a",
        "c24d194d1c10784f",
        "89870409ca1030ec",
        "0df39498d77ed5f1",
        "103a51c3d8b557c8"
      ],
      "date": 1665235493914
    },
    {
      "type": "edit",
      "id": "0df39498d77ed5f1",
      "item": {
        "type": "code",
        "id": "0df39498d77ed5f1",
        "text": "class MyModel extends Croquet.Model {\n    static types() {\n        return {\n            \"MyFile.MyClass\": MyClass,\n        }\n    }\n}\n"
      },
      "date": 1665235495791
    },
    {
      "type": "edit",
      "id": "103a51c3d8b557c8",
      "item": {
        "type": "paragraph",
        "id": "103a51c3d8b557c8",
        "text": "⇒  [[Topic]] "
      },
      "date": 1665235504234
    },
    {
      "type": "edit",
      "id": "89870409ca1030ec",
      "item": {
        "type": "markdown",
        "id": "89870409ca1030ec",
        "text": "Cf. \"Advanced Topic: Non-Model Objects in the Model\" in the tutorial. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html page]\n"
      },
      "date": 1665235528565
    },
    {
      "type": "add",
      "id": "a28fa9e211f68ddf",
      "item": {
        "type": "markdown",
        "id": "a28fa9e211f68ddf",
        "text": "> Model classes that use non-model objects must include a special static method named types() that declares all of the non-model classes:"
      },
      "after": "89870409ca1030ec",
      "date": 1665235529820
    },
    {
      "type": "edit",
      "id": "a28fa9e211f68ddf",
      "item": {
        "type": "markdown",
        "id": "a28fa9e211f68ddf",
        "text": "> Model classes that use non-model objects must include a special static method named `types()` that declares all of the non-model classes:"
      },
      "date": 1665235550436
    },
    {
      "item": {
        "type": "factory",
        "id": "e94ae515dad80384"
      },
      "id": "e94ae515dad80384",
      "type": "add",
      "after": "103a51c3d8b557c8",
      "date": 1665235664207
    },
    {
      "id": "e94ae515dad80384",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438",
        "ae9b6739ae24ca59",
        "43ae7a888fa84562",
        "408a7c09c39b0a5c",
        "7f7d7ab838bbbc62",
        "3f90346c31316fea",
        "1ef6e1d523998720",
        "fd1445145a43c953",
        "8ef0d512d3ad7958",
        "e2da26f8032619ca",
        "14d9db49f0e71edb",
        "90363ac0d189b059",
        "b8211695d6ddb57a",
        "c24d194d1c10784f",
        "89870409ca1030ec",
        "a28fa9e211f68ddf",
        "0df39498d77ed5f1",
        "e94ae515dad80384",
        "103a51c3d8b557c8"
      ],
      "date": 1665235666088
    },
    {
      "type": "edit",
      "id": "e94ae515dad80384",
      "item": {
        "type": "markdown",
        "id": "e94ae515dad80384",
        "text": "**Note**. All objects in the model must be derived from the Model base class. (Mostly. See below for more information.)\n\n"
      },
      "date": 1665235696916
    },
    {
      "type": "edit",
      "id": "e94ae515dad80384",
      "item": {
        "type": "markdown",
        "id": "e94ae515dad80384",
        "text": "**Note**. All objects in the model must be derived from the Model base class. (Mostly. See below for more information.)\n\n**Note**. [[DMXObject]]\n"
      },
      "date": 1665235721384
    },
    {
      "type": "edit",
      "id": "e94ae515dad80384",
      "item": {
        "type": "markdown",
        "id": "e94ae515dad80384",
        "text": "**Note**. All objects in the model must be derived from the Model base class. (Mostly. See below for more information.)\n\n**Note**. [[DMXObject]] is the (abstract) base class of both, [[Topic]] and [[Assoc]]. [https://apidocs.dmx.systems/systems/dmx/core/DMXObject.html page]\n"
      },
      "date": 1665235731033
    },
    {
      "type": "edit",
      "id": "1ef6e1d523998720",
      "item": {
        "type": "paragraph",
        "id": "1ef6e1d523998720",
        "text": "[[Actor/Pawn Pair]]"
      },
      "date": 1665235771554
    },
    {
      "type": "edit",
      "id": "8ef0d512d3ad7958",
      "item": {
        "type": "paragraph",
        "id": "8ef0d512d3ad7958",
        "text": "Cf. player 1 – player 2"
      },
      "date": 1665236395136
    },
    {
      "type": "edit",
      "id": "90363ac0d189b059",
      "item": {
        "type": "paragraph",
        "id": "90363ac0d189b059",
        "text": "Tutorial: 💡 Writing a Croquet Model. [https://croquet.io/docs/croquet/tutorial-2_4_writing_a_croquet_model.html page]"
      },
      "date": 1665236406353
    },
    {
      "item": {
        "type": "factory",
        "id": "6e55ea0ee76b0b3d"
      },
      "id": "6e55ea0ee76b0b3d",
      "type": "add",
      "after": "103a51c3d8b557c8",
      "date": 1665239709100
    },
    {
      "type": "edit",
      "id": "6e55ea0ee76b0b3d",
      "item": {
        "type": "graphviz",
        "id": "6e55ea0ee76b0b3d",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1665239718777
    },
    {
      "type": "edit",
      "id": "fd1445145a43c953",
      "item": {
        "type": "markdown",
        "id": "fd1445145a43c953",
        "text": "* [[Actor]]\n* [[Pawn]]\n⇒ [[World Core Tutorial 1]]"
      },
      "date": 1665244415347
    },
    {
      "item": {
        "type": "factory",
        "id": "a4f0b652bd722584"
      },
      "id": "a4f0b652bd722584",
      "type": "add",
      "after": "6e55ea0ee76b0b3d",
      "date": 1665245276088
    },
    {
      "type": "edit",
      "id": "a4f0b652bd722584",
      "item": {
        "type": "pagefold",
        "id": "a4f0b652bd722584",
        "text": "~"
      },
      "date": 1665245279734
    },
    {
      "item": {
        "type": "factory",
        "id": "531326026ea2bcd5"
      },
      "id": "531326026ea2bcd5",
      "type": "add",
      "after": "a4f0b652bd722584",
      "date": 1665245281876
    },
    {
      "type": "edit",
      "id": "531326026ea2bcd5",
      "item": {
        "type": "paragraph",
        "id": "531326026ea2bcd5",
        "text": "\nDENAUX, Ronald, REN, Yuan, VILLAZON-TERRAZAS, Boris, ALEXOPOULOS, Panos, FARAOTTI, Alessandro and WU, Honghan, 2017. Knowledge Architecture for Organisations. In: PAN, Jeff Z., VETERE, Guido, GOMEZ-PEREZ, Jose Manuel and WU, Honghan (eds.), Exploiting Linked Data and Knowledge Graphs in Large Organisations. Online. Cham: Springer International Publishing. p. 57–84. [Accessed 8 October 2022]. ISBN 978-3-319-45654-6. "
      },
      "date": 1665245287998
    },
    {
      "type": "add",
      "id": "9c0d235e0f398a96",
      "item": {
        "type": "paragraph",
        "id": "9c0d235e0f398a96",
        "text": "> In this chapter, we prepare you a high-level overview of what is needed in order to create, maintain, and exploit knowledge graphs for a real application.\n"
      },
      "after": "531326026ea2bcd5",
      "date": 1665245289347
    },
    {
      "type": "edit",
      "id": "9c0d235e0f398a96",
      "item": {
        "type": "markdown",
        "id": "9c0d235e0f398a96",
        "text": "> In this chapter, we prepare you a high-level overview of what is needed in order to create, maintain, and exploit knowledge graphs for a real application.\n"
      },
      "date": 1665245290650
    },
    {
      "item": {
        "type": "factory",
        "id": "4f175cfe639a0ef8"
      },
      "id": "4f175cfe639a0ef8",
      "type": "add",
      "after": "9c0d235e0f398a96",
      "date": 1665245324071
    },
    {
      "type": "edit",
      "id": "4f175cfe639a0ef8",
      "item": {
        "type": "paragraph",
        "id": "4f175cfe639a0ef8",
        "text": "In [6] the authors suggest an approach to generate semantic tag recommendations for documents based on Semantic Web ontologies and Web 2.0 services. In particular, their proposed process starts with the extraction of document entities through the utilisation of Web 2.0 services (such as Yahoo’s Term Extraction service and their transformation into a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [159]. Then, the topics of this topic map are matched, based on document classification methods, to instances of some domain ontology expressed according to the PIMO (Personal Information Models) ontology [204]. The matching pairs are shown to the users as tag recommendations and they decide whether to accept or to reject them."
      },
      "date": 1665245326302
    },
    {
      "item": {
        "type": "factory",
        "id": "882cadfb4c7aa5c0"
      },
      "id": "882cadfb4c7aa5c0",
      "type": "add",
      "after": "4f175cfe639a0ef8",
      "date": 1665246123886
    },
    {
      "type": "edit",
      "id": "882cadfb4c7aa5c0",
      "item": {
        "type": "paragraph",
        "id": "882cadfb4c7aa5c0",
        "text": "6. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a. pdf (2007)"
      },
      "date": 1665246126130
    },
    {
      "type": "edit",
      "id": "882cadfb4c7aa5c0",
      "item": {
        "type": "markdown",
        "id": "882cadfb4c7aa5c0",
        "text": "6. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a. pdf (2007)"
      },
      "date": 1665246127046
    },
    {
      "type": "edit",
      "id": "882cadfb4c7aa5c0",
      "item": {
        "type": "markdown",
        "id": "882cadfb4c7aa5c0",
        "text": "6. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a.pdf (2007)"
      },
      "date": 1665246142678
    },
    {
      "type": "edit",
      "id": "882cadfb4c7aa5c0",
      "item": {
        "type": "markdown",
        "id": "882cadfb4c7aa5c0",
        "text": "6. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0 948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a.pdf (2007)"
      },
      "date": 1665246169131
    },
    {
      "type": "edit",
      "id": "882cadfb4c7aa5c0",
      "item": {
        "type": "markdown",
        "id": "882cadfb4c7aa5c0",
        "text": "[6]. Adrian, B., Sauermann, L., Roth-Berghofer, T.: Contag: a semantic tag recommendation system. In: Pellegrini, T., Schaffert, S. (eds.) Proceedings of I-Semantics’ 07, pp. 297–304. JUCS, 2007. ISSN0 948-6968. http://www.dfki.uni-kl.de/~sauermann/papers/horak+2007a.pdf (2007)"
      },
      "date": 1665246185802
    },
    {
      "item": {
        "type": "factory",
        "id": "ba5782880175b87d"
      },
      "id": "ba5782880175b87d",
      "type": "add",
      "after": "882cadfb4c7aa5c0",
      "date": 1665246395096
    },
    {
      "type": "edit",
      "id": "ba5782880175b87d",
      "item": {
        "type": "paragraph",
        "id": "ba5782880175b87d",
        "text": "\nADRIAN, Benjamin, SAUERMANN, Leo and ROTH-BERGHOFER, Thomas, 2007. Contag: A semantic tag recommendation system. In: Proceedings of ISemantics’ 07. JUCS. 2007. p. 297–304. "
      },
      "date": 1665246403335
    },
    {
      "type": "add",
      "id": "422f3e29ef0ec247",
      "item": {
        "type": "paragraph",
        "id": "422f3e29ef0ec247",
        "text": "> Abstract: ConTag is an approach to generate semantic tag recommendations for documents based on Semantic Web ontologies and Web 2.0 services. We designed and implemented a process to normalize documents to RDF format, extract document topics using Web 2.0 services and finally match extracted topics to a Semantic Web ontology. Due to ConTag we are able to show that the information provided by Web 2.0 services in combination with a Semantic Web ontology enables the generation of relevant semantic tag recommendations for documents. The main contribution of this work is a semantic tag recommendation process based on a choreography of Web 2.0 services.\n"
      },
      "after": "ba5782880175b87d",
      "date": 1665246403988
    },
    {
      "type": "edit",
      "id": "422f3e29ef0ec247",
      "item": {
        "type": "markdown",
        "id": "422f3e29ef0ec247",
        "text": "> Abstract: ConTag is an approach to generate semantic tag recommendations for documents based on Semantic Web ontologies and Web 2.0 services. We designed and implemented a process to normalize documents to RDF format, extract document topics using Web 2.0 services and finally match extracted topics to a Semantic Web ontology. Due to ConTag we are able to show that the information provided by Web 2.0 services in combination with a Semantic Web ontology enables the generation of relevant semantic tag recommendations for documents. The main contribution of this work is a semantic tag recommendation process based on a choreography of Web 2.0 services.\n"
      },
      "date": 1665246404961
    },
    {
      "item": {
        "type": "factory",
        "id": "9d98f9b07971c0ca"
      },
      "id": "9d98f9b07971c0ca",
      "type": "add",
      "after": "422f3e29ef0ec247",
      "date": 1665246455785
    },
    {
      "type": "edit",
      "id": "9d98f9b07971c0ca",
      "item": {
        "type": "paragraph",
        "id": "9d98f9b07971c0ca",
        "text": "During the second step, Topic Extraction, topics are extracted by requesting Web 2.0 services. This results in a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [Miles and Brickley, 2005]. In succeeding lookup iterations, each topic entity is enriched by a set of semantic properties, such as definitions and synonyms."
      },
      "date": 1665246457954
    },
    {
      "type": "edit",
      "id": "9d98f9b07971c0ca",
      "item": {
        "type": "paragraph",
        "id": "9d98f9b07971c0ca",
        "text": "During the second step, *Topic Extraction*, topics are extracted by requesting Web 2.0 services. This results in a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [Miles and Brickley, 2005]. In succeeding lookup iterations, each topic entity is enriched by a set of semantic properties, such as definitions and synonyms."
      },
      "date": 1665246472877
    },
    {
      "type": "edit",
      "id": "9d98f9b07971c0ca",
      "item": {
        "type": "markdown",
        "id": "9d98f9b07971c0ca",
        "text": "During the second step, *Topic Extraction*, topics are extracted by requesting Web 2.0 services. This results in a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [Miles and Brickley, 2005]. In succeeding lookup iterations, each topic entity is enriched by a set of semantic properties, such as definitions and synonyms."
      },
      "date": 1665246473947
    },
    {
      "item": {
        "type": "factory",
        "id": "2b8ba622849dd316"
      },
      "id": "2b8ba622849dd316",
      "type": "add",
      "after": "9d98f9b07971c0ca",
      "date": 1665246499927
    },
    {
      "type": "edit",
      "id": "9d98f9b07971c0ca",
      "item": {
        "type": "markdown",
        "id": "9d98f9b07971c0ca",
        "text": "[…] During the second step, *Topic Extraction*, topics are extracted by requesting Web 2.0 services. This results in a topic map using SKOS vocabulary (Simple Knowledge Organisation System) [Miles and Brickley, 2005]. In succeeding lookup iterations, each topic entity is enriched by a set of semantic properties, such as definitions and synonyms."
      },
      "date": 1665246506031
    },
    {
      "type": "edit",
      "id": "2b8ba622849dd316",
      "item": {
        "type": "paragraph",
        "id": "2b8ba622849dd316",
        "text": "[…] The Alignment Generation is based on document classification methods. For each topic in the topic map, several weighted alignment possibilities are computed to retrieve similar things."
      },
      "date": 1665246508355
    },
    {
      "item": {
        "type": "factory",
        "id": "672b4b440c9d828f"
      },
      "id": "672b4b440c9d828f",
      "type": "add",
      "after": "2b8ba622849dd316",
      "date": 1665246527710
    },
    {
      "type": "edit",
      "id": "672b4b440c9d828f",
      "item": {
        "type": "paragraph",
        "id": "672b4b440c9d828f",
        "text": "[…] The following sections describe parts of the Semantic Tag Recommendation Process, namely Topic Extraction and Alignment Generation.WeusedtheRDF store Sesame 2 to manage ontologies in RDFS and topic maps in SKOS."
      },
      "date": 1665246530946
    },
    {
      "item": {
        "type": "factory",
        "id": "f59636529aae1033"
      },
      "id": "f59636529aae1033",
      "type": "add",
      "after": "672b4b440c9d828f",
      "date": 1665246662659
    },
    {
      "type": "edit",
      "id": "f59636529aae1033",
      "item": {
        "type": "paragraph",
        "id": "f59636529aae1033",
        "text": "[…] The topic extraction step is the most valuable step in the Tag Recommendation Process. It results in developing a document specific topic map by executing a Web 2.0 service choreography to extract document entities. The SKOS vocabulary distinguishes topics between instances and classes similar to PIMO language using relations (broaderInstantive, narrowerInstantive). Each topic possesses a name prefLabel and alternative labels altLabel. Each topic may be further explained by fulltext definitions written in natural language using definition."
      },
      "date": 1665246666197
    },
    {
      "item": {
        "type": "factory",
        "id": "bfd7aea52ad052b1"
      },
      "id": "bfd7aea52ad052b1",
      "type": "add",
      "after": "f59636529aae1033",
      "date": 1665246728563
    },
    {
      "type": "edit",
      "id": "bfd7aea52ad052b1",
      "item": {
        "type": "paragraph",
        "id": "bfd7aea52ad052b1",
        "text": "[…] Yahoo’s Term Extraction service and Topicalizer6 are used to extract relevant keyphrases. The results are stored into a document specific topic map. In a succeeding iteration, for each topic in the topic map, three succeeding lookups request Web 2.0 services to gather for more information: […]"
      },
      "date": 1665246737538
    },
    {
      "item": {
        "type": "factory",
        "id": "0e3f3cfeef7776f5"
      },
      "id": "0e3f3cfeef7776f5",
      "type": "add",
      "after": "bfd7aea52ad052b1",
      "date": 1665246769037
    },
    {
      "type": "edit",
      "id": "0e3f3cfeef7776f5",
      "item": {
        "type": "paragraph",
        "id": "0e3f3cfeef7776f5",
        "text": "[…] Due to a topological analysis of PIMO ontologies and document topic maps we assume that an ontology contains more entities than a topic map. Additionally, ontologies contain class hierarchies, whether topic maps are rather flat structured. Therefore we focussed on aligning topics to things by applying hierarchical document classification techniques instead of using topolical ontology matching methods. In this paper, we describe a rather simple alignment approach. Other appraches can be found in [Horak, 2006]."
      },
      "date": 1665246773561
    },
    {
      "type": "edit",
      "id": "58e8207db8458833",
      "item": {
        "type": "paragraph",
        "id": "58e8207db8458833",
        "text": "yoshiki — 2022-05-15 via [https://discord.com/channels/694586717247635488/965416258499653642/975201809671004250 discord]\nThe scripts saved into .vrse [⇒[[Scene.vrse File]]] will be your normal .js files and the workflow would be just like you would develop a set of .js files. that is combined with the object description, which right now includes the translation of the object.... I have two minds about loading such .vrse file and what to do with the translation. So if you drop a 3D model file from the OS filer into microverse, the 3D model does appear in front of your avatar. But if you construct something with parts, and recreate it in a different world, you want to retain the original translation."
      },
      "date": 1665261120127
    },
    {
      "type": "add",
      "id": "6c01714cbd751d62",
      "item": {
        "type": "paragraph",
        "id": "6c01714cbd751d62",
        "text": "As for the second question. it is yes. The cards are organized into a display scene tree, but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "after": "58e8207db8458833",
      "date": 1665261127932
    },
    {
      "type": "edit",
      "id": "6c01714cbd751d62",
      "item": {
        "type": "paragraph",
        "id": "6c01714cbd751d62",
        "text": "As for the second question. it is yes. The cards are organized into a [[display scene tree]], but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665261430643
    },
    {
      "item": {
        "type": "factory",
        "id": "be8f5e591f22c511"
      },
      "id": "be8f5e591f22c511",
      "type": "add",
      "after": "0e3f3cfeef7776f5",
      "date": 1665263032085
    },
    {
      "type": "remove",
      "id": "be8f5e591f22c511",
      "date": 1665263035465
    },
    {
      "item": {
        "type": "factory",
        "id": "663710e7583659fe"
      },
      "id": "663710e7583659fe",
      "type": "add",
      "after": "0e3f3cfeef7776f5",
      "date": 1665263038191
    },
    {
      "type": "edit",
      "id": "663710e7583659fe",
      "item": {
        "type": "pagefold",
        "id": "663710e7583659fe",
        "text": "~"
      },
      "date": 1665263041209
    },
    {
      "item": {
        "type": "factory",
        "id": "766a2f620bbb1dc7"
      },
      "id": "766a2f620bbb1dc7",
      "type": "add",
      "after": "663710e7583659fe",
      "date": 1665263042722
    },
    {
      "type": "edit",
      "id": "766a2f620bbb1dc7",
      "item": {
        "type": "paragraph",
        "id": "766a2f620bbb1dc7",
        "text": "\nYANG, Yan and YUN, Long, 2010. Literature recommendation based on reference graph. In: 2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE). August 2010. p. V3-400-V3-404. DOI 10.1109/ICACTE.2010.5579583. Research papers are frequently requested in digital library. When users query for documents about a research problem, users usually want all the related documents and the citations with the relations among them, to enable the user know the development of the research area. Traditional recommendation techniques are mainly based on similarity among users or documents to do recommendation. They do not use the relationships among documents and, especially, cannot provide topology structure of related documents to the user. This paper proposes a new recommendation technique based on reference graph of documents. Combined with traditional recommendation techniques, it can recommend research paper more completely, accurately and clearly. Experimental results show that the reference graph based recommendation technique is more effective.\n"
      },
      "date": 1665263044339
    },
    {
      "type": "edit",
      "id": "766a2f620bbb1dc7",
      "item": {
        "type": "paragraph",
        "id": "766a2f620bbb1dc7",
        "text": "YANG, Yan and YUN, Long, 2010. Literature recommendation based on reference graph. In: 2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE). August 2010. p. V3-400-V3-404. DOI 10.1109/ICACTE.2010.5579583. "
      },
      "date": 1665263055922
    },
    {
      "type": "add",
      "id": "f563ac5687fb8d5b",
      "item": {
        "type": "paragraph",
        "id": "f563ac5687fb8d5b",
        "text": "> Research papers are frequently requested in digital library. When users query for documents about a research problem, users usually want all the related documents and the citations with the relations among them, to enable the user know the development of the research area. Traditional recommendation techniques are mainly based on similarity among users or documents to do recommendation. They do not use the relationships among documents and, especially, cannot provide topology structure of related documents to the user. This paper proposes a new recommendation technique based on reference graph of documents. Combined with traditional recommendation techniques, it can recommend research paper more completely, accurately and clearly. Experimental results show that the reference graph based recommendation technique is more effective.\n"
      },
      "after": "766a2f620bbb1dc7",
      "date": 1665263056661
    },
    {
      "type": "edit",
      "id": "f563ac5687fb8d5b",
      "item": {
        "type": "markdown",
        "id": "f563ac5687fb8d5b",
        "text": "> Research papers are frequently requested in digital library. When users query for documents about a research problem, users usually want all the related documents and the citations with the relations among them, to enable the user know the development of the research area. Traditional recommendation techniques are mainly based on similarity among users or documents to do recommendation. They do not use the relationships among documents and, especially, cannot provide topology structure of related documents to the user. This paper proposes a new recommendation technique based on reference graph of documents. Combined with traditional recommendation techniques, it can recommend research paper more completely, accurately and clearly. Experimental results show that the reference graph based recommendation technique is more effective.\n"
      },
      "date": 1665263057719
    },
    {
      "type": "edit",
      "id": "766a2f620bbb1dc7",
      "item": {
        "type": "paragraph",
        "id": "766a2f620bbb1dc7",
        "text": "– [[display scene tree]]"
      },
      "date": 1665263112079
    },
    {
      "type": "add",
      "id": "4ab0311f015cf7f9",
      "item": {
        "type": "paragraph",
        "id": "4ab0311f015cf7f9",
        "text": "YANG, Yan and YUN, Long, 2010. Literature recommendation based on reference graph. In: 2010 3rd International Conference on Advanced Computer Theory and Engineering(ICACTE). August 2010. p. V3-400-V3-404. DOI 10.1109/ICACTE.2010.5579583. "
      },
      "after": "766a2f620bbb1dc7",
      "date": 1665263112571
    },
    {
      "type": "edit",
      "id": "766a2f620bbb1dc7",
      "item": {
        "type": "paragraph",
        "id": "766a2f620bbb1dc7",
        "text": "⇒ [[Display-Scene Tree]]"
      },
      "date": 1665263133163
    },
    {
      "type": "edit",
      "id": "766a2f620bbb1dc7",
      "item": {
        "type": "paragraph",
        "id": "766a2f620bbb1dc7",
        "text": "⇒ [[Display-Scene Tree]] ⇒ [[Namespace]]"
      },
      "date": 1665263178883
    },
    {
      "id": "6e55ea0ee76b0b3d",
      "type": "move",
      "order": [
        "58e8207db8458833",
        "6c01714cbd751d62",
        "2ce9363a94ea1b52",
        "1b64a0cd0dab3e38",
        "e0dc6c342c5cda67",
        "9e4bd4872d144760",
        "6732c4e54eea3b20",
        "9547fc88d736e211",
        "f42b5f405d6b6821",
        "38d5ed7d150edc4f",
        "a34a228d326c12d3",
        "bcc6e4e6575c22c3",
        "d1c2984fa4b8163d",
        "2317465d0130dfe9",
        "96290c0ebfb61d99",
        "f8cebb3bea214c13",
        "6a1670bfd2fa2710",
        "00194e709db68ced",
        "46cbf6d8a0f5be7b",
        "80f2c205a3b8f907",
        "5dd911622388d438",
        "ae9b6739ae24ca59",
        "43ae7a888fa84562",
        "408a7c09c39b0a5c",
        "7f7d7ab838bbbc62",
        "3f90346c31316fea",
        "1ef6e1d523998720",
        "fd1445145a43c953",
        "8ef0d512d3ad7958",
        "e2da26f8032619ca",
        "14d9db49f0e71edb",
        "90363ac0d189b059",
        "b8211695d6ddb57a",
        "c24d194d1c10784f",
        "89870409ca1030ec",
        "a28fa9e211f68ddf",
        "0df39498d77ed5f1",
        "e94ae515dad80384",
        "103a51c3d8b557c8",
        "a4f0b652bd722584",
        "531326026ea2bcd5",
        "9c0d235e0f398a96",
        "4f175cfe639a0ef8",
        "882cadfb4c7aa5c0",
        "ba5782880175b87d",
        "422f3e29ef0ec247",
        "9d98f9b07971c0ca",
        "2b8ba622849dd316",
        "672b4b440c9d828f",
        "f59636529aae1033",
        "bfd7aea52ad052b1",
        "0e3f3cfeef7776f5",
        "663710e7583659fe",
        "6e55ea0ee76b0b3d",
        "766a2f620bbb1dc7",
        "4ab0311f015cf7f9",
        "f563ac5687fb8d5b"
      ],
      "date": 1665263204207
    },
    {
      "type": "edit",
      "id": "6c01714cbd751d62",
      "item": {
        "type": "paragraph",
        "id": "6c01714cbd751d62",
        "text": "As for the second question. it is yes. The cards are organized into a [[Display-Scene Tree]], but so far we are using the nesting very little. The terrain model you walk on and the lighting(s) are all cards."
      },
      "date": 1665263253637
    },
    {
      "item": {
        "type": "factory",
        "id": "4a731f5135d030f5"
      },
      "id": "4a731f5135d030f5",
      "type": "add",
      "after": "f563ac5687fb8d5b",
      "date": 1665267110665
    },
    {
      "type": "edit",
      "id": "4a731f5135d030f5",
      "item": {
        "type": "pagefold",
        "id": "4a731f5135d030f5",
        "text": "~"
      },
      "date": 1665267115318
    },
    {
      "item": {
        "type": "factory",
        "id": "6ed9b1d307fc3f88"
      },
      "id": "6ed9b1d307fc3f88",
      "type": "add",
      "after": "4a731f5135d030f5",
      "date": 1665267123713
    },
    {
      "type": "edit",
      "id": "6ed9b1d307fc3f88",
      "item": {
        "type": "reference",
        "id": "6ed9b1d307fc3f88",
        "site": "viralwiki.federated.wiki",
        "slug": "shared-learning-space-aka-commons",
        "title": "Shared learning space aka commons",
        "text": "Here we explore 'shared learning space' as a layered constellation of commons: of running code, of digital media, and of radical, transformative, activist labour-power."
      },
      "date": 1665267127651
    },
    {
      "item": {
        "type": "factory",
        "id": "3463a27ceb3889fe"
      },
      "id": "3463a27ceb3889fe",
      "type": "add",
      "after": "6ed9b1d307fc3f88",
      "date": 1665267131631
    },
    {
      "type": "edit",
      "id": "3463a27ceb3889fe",
      "item": {
        "type": "paragraph",
        "id": "3463a27ceb3889fe",
        "text": "\nEGHBAL, Nadia, [no date]. The Unseen Labor Behind Our Digital Infrastructure. . P. 143. \n"
      },
      "date": 1665267134014
    },
    {
      "type": "edit",
      "id": "3463a27ceb3889fe",
      "item": {
        "type": "paragraph",
        "id": "3463a27ceb3889fe",
        "text": "EGHBAL, Nadia, [no date]. The Unseen Labor Behind Our Digital Infrastructure. \n"
      },
      "date": 1665267140322
    },
    {
      "type": "add",
      "id": "029e9e98406026a4",
      "item": {
        "type": "paragraph",
        "id": "029e9e98406026a4",
        "text": "> […] I set off to explore the paradox I couldn’t stop thinking about: that there were valuable software tools that couldn’t be supported by commercial models, and that they lacked any form of institutional support."
      },
      "after": "3463a27ceb3889fe",
      "date": 1665267156738
    },
    {
      "type": "edit",
      "id": "029e9e98406026a4",
      "item": {
        "type": "markdown",
        "id": "029e9e98406026a4",
        "text": "> […] I set off to explore the paradox I couldn’t stop thinking about: that there were valuable software tools that couldn’t be supported by commercial models, and that they lacked any form of institutional support."
      },
      "date": 1665267157920
    },
    {
      "item": {
        "type": "factory",
        "id": "f722dfec77d61260"
      },
      "id": "f722dfec77d61260",
      "type": "add",
      "after": "029e9e98406026a4",
      "date": 1665267584407
    },
    {
      "type": "edit",
      "id": "f722dfec77d61260",
      "item": {
        "type": "paragraph",
        "id": "f722dfec77d61260",
        "text": "Supporting infrastructure requires embracing the concept of stewardship rather than control"
      },
      "date": 1665267586307
    }
  ]
}