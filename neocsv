{
  "title": "NeoCSV",
  "story": [
    {
      "type": "paragraph",
      "id": "3bc1c8e2f89e6327",
      "text": "is an elegant and efficient standalone [[Smalltalk]] framework to read and write CSV converting to or from Smalltalk objects. [https://github.com/svenvc/NeoCSV github]"
    },
    {
      "type": "paragraph",
      "id": "7075b83833801e4a",
      "text": "A chapter in the [[Enterprise Pharo]] [https://books.pharo.org/enterprise-pharo/ book] is a good introduction to NeoCSV."
    },
    {
      "type": "paragraph",
      "id": "47bcf2f66b90c908",
      "text": "Go ahead and read the NeoCSV paper.  [https://github.com/svenvc/docs/blob/master/neo/neo-csv-paper.md github]\n"
    },
    {
      "type": "markdown",
      "id": "a19895cc95bf5042",
      "text": "# Creating Objects"
    },
    {
      "type": "paragraph",
      "id": "c5539d6432b1f55c",
      "text": "In many cases you will probably want your data to be returned as one of your domain objects. It would be wasteful to first create arrays and then convert all those. NeoCSV has non-intrusive options to create instances of your own classes and to convert and set fields on them directly. This is done by specifying accessors and converters. Here is an example for reading Associations of Floats."
    },
    {
      "type": "code",
      "id": "beaf686e15c141ee",
      "text": "(NeoCSVReader on: '1.5,2.2\\4.5,6\\7.8,9.1' withCRs readStream)\n\trecordClass: Association;\n\taddFloatField: #key:;\n\taddFloatField: #value:;\n\tupToEnd"
    },
    {
      "type": "code",
      "id": "b93381d21b374ed9",
      "text": "recordClass: anObject\n\t\"Set the object class to instanciate while reading records.\n\tUnless the objets are integer indexable, you have to specify fields as well.\"\n\t\n\trecordClass := anObject"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "NeoCSV",
        "story": []
      },
      "date": 1697786777442
    },
    {
      "item": {
        "type": "factory",
        "id": "3bc1c8e2f89e6327"
      },
      "id": "3bc1c8e2f89e6327",
      "type": "add",
      "date": 1697786790225
    },
    {
      "type": "edit",
      "id": "3bc1c8e2f89e6327",
      "item": {
        "type": "paragraph",
        "id": "3bc1c8e2f89e6327",
        "text": "is an elegant and efficient standalone Smalltalk framework to read and write CSV converting to or from Smalltalk objects. "
      },
      "date": 1697786792658
    },
    {
      "type": "edit",
      "id": "3bc1c8e2f89e6327",
      "item": {
        "type": "paragraph",
        "id": "3bc1c8e2f89e6327",
        "text": "is an elegant and efficient standalone [[Smalltalk]] framework to read and write CSV converting to or from Smalltalk objects. "
      },
      "date": 1697786805314
    },
    {
      "type": "edit",
      "id": "3bc1c8e2f89e6327",
      "item": {
        "type": "paragraph",
        "id": "3bc1c8e2f89e6327",
        "text": "is an elegant and efficient standalone [[Smalltalk]] framework to read and write CSV converting to or from Smalltalk objects. [https://github.com/svenvc/NeoCSV github]"
      },
      "date": 1697787001807
    },
    {
      "item": {
        "type": "factory",
        "id": "6935ebc0d2f8516f"
      },
      "id": "6935ebc0d2f8516f",
      "type": "add",
      "after": "3bc1c8e2f89e6327",
      "date": 1697787164051
    },
    {
      "type": "edit",
      "id": "6935ebc0d2f8516f",
      "item": {
        "type": "paragraph",
        "id": "6935ebc0d2f8516f",
        "text": "A chapter in the [Enterprise Pharo](https://books.pharo.org/enterprise-pharo/) book is a good introduction to [NeoCSV](https://ci.inria.fr/pharo-contribution/job/EnterprisePharoBook/lastSuccessfulBuild/artifact/book-result/NeoCSV/NeoCSV.html).\n\nGo ahead and read the [NeoCSV paper](https://github.com/svenvc/docs/blob/master/neo/neo-csv-paper.md).\n"
      },
      "date": 1697787166951
    },
    {
      "item": {
        "type": "factory",
        "id": "8f910cbfa7d93943"
      },
      "id": "8f910cbfa7d93943",
      "type": "add",
      "after": "6935ebc0d2f8516f",
      "date": 1697787169290
    },
    {
      "type": "edit",
      "id": "8f910cbfa7d93943",
      "item": {
        "type": "markdown",
        "id": "8f910cbfa7d93943",
        "text": "A chapter in the [Enterprise Pharo](https://books.pharo.org/enterprise-pharo/) book is a good introduction to [NeoCSV](https://ci.inria.fr/pharo-contribution/job/EnterprisePharoBook/lastSuccessfulBuild/artifact/book-result/NeoCSV/NeoCSV.html).\n\nGo ahead and read the [NeoCSV paper](https://github.com/svenvc/docs/blob/master/neo/neo-csv-paper.md).\n"
      },
      "date": 1697787171605
    },
    {
      "type": "remove",
      "id": "6935ebc0d2f8516f",
      "date": 1697787174188
    },
    {
      "type": "edit",
      "id": "8f910cbfa7d93943",
      "item": {
        "type": "markdown",
        "id": "8f910cbfa7d93943",
        "text": "\n\nGo ahead and read the [NeoCSV paper](https://github.com/svenvc/docs/blob/master/neo/neo-csv-paper.md).\n"
      },
      "date": 1697787375773
    },
    {
      "type": "add",
      "id": "7075b83833801e4a",
      "item": {
        "type": "paragraph",
        "id": "7075b83833801e4a",
        "text": "A chapter in the [[Enterprise Pharo]][https://books.pharo.org/enterprise-pharo/ book] is a good introduction to NeoCSV."
      },
      "after": "3bc1c8e2f89e6327",
      "date": 1697787421147
    },
    {
      "type": "edit",
      "id": "7075b83833801e4a",
      "item": {
        "type": "paragraph",
        "id": "7075b83833801e4a",
        "text": "A chapter in the [[Enterprise Pharo]] [https://books.pharo.org/enterprise-pharo/ book] is a good introduction to NeoCSV."
      },
      "date": 1697787426752
    },
    {
      "type": "remove",
      "id": "8f910cbfa7d93943",
      "date": 1697787533770
    },
    {
      "item": {
        "type": "factory",
        "id": "47bcf2f66b90c908"
      },
      "id": "47bcf2f66b90c908",
      "type": "add",
      "after": "7075b83833801e4a",
      "date": 1697787541835
    },
    {
      "type": "edit",
      "id": "47bcf2f66b90c908",
      "item": {
        "type": "paragraph",
        "id": "47bcf2f66b90c908",
        "text": "Go ahead and read the NeoCSV paper.  [https://github.com/svenvc/docs/blob/master/neo/neo-csv-paper.md github]\n"
      },
      "date": 1697787572394
    },
    {
      "item": {
        "type": "factory",
        "id": "a19895cc95bf5042"
      },
      "id": "a19895cc95bf5042",
      "type": "add",
      "after": "47bcf2f66b90c908",
      "date": 1707246753656
    },
    {
      "item": {
        "type": "factory",
        "id": "c5539d6432b1f55c"
      },
      "id": "c5539d6432b1f55c",
      "type": "add",
      "after": "a19895cc95bf5042",
      "date": 1707246761150
    },
    {
      "type": "edit",
      "id": "c5539d6432b1f55c",
      "item": {
        "type": "paragraph",
        "id": "c5539d6432b1f55c",
        "text": "In many cases you will probably want your data to be returned as one of your domain objects. It would be wasteful to first create arrays and then convert all those. NeoCSV has non-intrusive options to create instances of your own classes and to convert and set fields on them directly. This is done by specifying accessors and converters. Here is an example for reading Associations of Floats."
      },
      "date": 1707246768427
    },
    {
      "type": "edit",
      "id": "a19895cc95bf5042",
      "item": {
        "type": "markdown",
        "id": "a19895cc95bf5042",
        "text": "# Creating Objects"
      },
      "date": 1707246769405
    },
    {
      "item": {
        "type": "factory",
        "id": "beaf686e15c141ee"
      },
      "id": "beaf686e15c141ee",
      "type": "add",
      "after": "c5539d6432b1f55c",
      "date": 1707246804952
    },
    {
      "type": "edit",
      "id": "beaf686e15c141ee",
      "item": {
        "type": "code",
        "id": "beaf686e15c141ee",
        "text": "(NeoCSVReader on: '1.5,2.2\\4.5,6\\7.8,9.1' withCRs readStream)\n\trecordClass: Association;\n\taddFloatField: #key:;\n\taddFloatField: #value:;\n\tupToEnd"
      },
      "date": 1707246807130
    },
    {
      "item": {
        "type": "factory",
        "id": "b93381d21b374ed9"
      },
      "id": "b93381d21b374ed9",
      "type": "add",
      "after": "beaf686e15c141ee",
      "date": 1707246916220
    },
    {
      "type": "edit",
      "id": "b93381d21b374ed9",
      "item": {
        "type": "code",
        "id": "b93381d21b374ed9",
        "text": "recordClass: anObject\n\t\"Set the object class to instanciate while reading records.\n\tUnless the objets are integer indexable, you have to specify fields as well.\"\n\t\n\trecordClass := anObject"
      },
      "date": 1707246918645
    }
  ]
}