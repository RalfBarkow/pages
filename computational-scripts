{
  "title": "Computational Scripts",
  "story": [
    {
      "type": "paragraph",
      "id": "ce3aeb94320efaa0",
      "text": "[[Script]]s also support a computational theory, similar in spirit to [[Frames]] in artificial intelligence (Minsky 1981). Both are based on the general idea of [[Schemas]] as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). "
    },
    {
      "type": "paragraph",
      "id": "46f7df585097edf9",
      "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A [[Schema]] consists of a representation for common knowledge that is shared by all instances, and a number of [[Slot]]s that take on different values for different instances. "
    },
    {
      "type": "paragraph",
      "id": "cf957a468d038f8a",
      "text": "For exam­ple, a schema ([[Frame]]) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a [[Restaurant Visit]] specifies the common events (such as entering, seating, ordering, eat­ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
    },
    {
      "type": "paragraph",
      "id": "af95c44dfc250e09",
      "text": "In symbolic natural language processing (NLP) a script is repre­sented as a causal chain of events with a number of open roles (Culling­ ford 1978; Dejong 1979; Dyer et al. 1987; Schank and Abelson 1977; table 2.1). Different variations of the script are called [[Track]]s. For exam­ple, there is a fancy-restaurant track, fast-food track, and a coffee-shop track for the restaurant script, each with slightly different events."
    },
    {
      "type": "paragraph",
      "id": "2188d47b80d2a9d9",
      "text": "Applying scriptal knowledge to a story requires identifying the rel­evant script and filling in its roles with the actual constituents of the story."
    },
    {
      "type": "pagefold",
      "id": "17aad00a12b8fc29",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "203acf66ffc1b9a9",
      "text": "MIIKKULAINEN, Risto, 1993. Subsymbolic natural language processing: an integrated model of scripts, lexicon, and memory. Cambridge, Mass: MIT Press. Neural network modeling and connectionism. ISBN 978-0-262-13290-9, p. 15–16."
    },
    {
      "type": "paragraph",
      "id": "71005ae783cfcb07",
      "text": "⇒ [[Frame]] ⇒ [[Schema]] ⇒ [[Basis for Mental Representation]]:"
    },
    {
      "type": "reference",
      "id": "468fd3ca442853a7",
      "site": "frame.wiki.dbbs.co",
      "slug": "changing-frames",
      "title": "Changing Frames",
      "text": "Perception depends on context. From one point of view the way seems impassible. From another point of view the path is revealed. Each view is limited by its own frame. Changing frames changes perception. Changing perception changes both understanding and action."
    },
    {
      "type": "reference",
      "id": "0ac9b6d408b85f64",
      "site": "wiki.ralfbarkow.ch",
      "slug": "reference-frame",
      "title": "Reference Frame",
      "text": "But there’s more to this story. We’ll talk about it a bit more formally in the next section. But the basic point is that so far we’ve just talked about picking reference frames in a “spacetime causal graph”. But ultimately we have to consider the whole multiway graph of all possible sequences of update events. And then **we have to figure out how an [[observer] can set up some kind of [[reference frame]] to give them a perception of what’s going on.**"
    },
    {
      "type": "reference",
      "id": "7e9c1679a7239f29",
      "site": "wellspring.fed.wiki",
      "slug": "schema",
      "title": "Schema",
      "text": "Kant first introduced the concept of schema. It is the internal landscape that we use to interpret the world around us.  How we make sense of our perceptions."
    },
    {
      "type": "reference",
      "id": "813ba656e414cc57",
      "site": "wiki.ralfbarkow.ch",
      "slug": "schema-based-prompts",
      "title": "Schema Based Prompts",
      "text": "# The Shape of our Schema Guides the Stories we Tell"
    },
    {
      "type": "reference",
      "id": "358a6e5e9c11e988",
      "site": "ward.dojo.fed.wiki",
      "slug": "learning-navigation-schema",
      "title": "Learning Navigation Schema",
      "text": "We accumulate stories with meanings unique to our human sapience. We begin with a schema, instantiate graph fragments within that schema, and then assemble fragments to discover new stories where fragments touch."
    },
    {
      "type": "reference",
      "id": "81f8b297ddeb20af",
      "site": "ward.dojo.fed.wiki",
      "slug": "finding-graph-schema",
      "title": "Finding Graph Schema",
      "text": "We construct a schema from type information in nodes and relations."
    },
    {
      "type": "reference",
      "id": "ca94694358c3b92e",
      "site": "ward.asia.wiki.org",
      "slug": "visitor-as-schema",
      "title": "Visitor as Schema",
      "text": "Small discovery of the day: Algorithmic markup in one plugin interprets the meaning of the remainder of the page which should be designed with this cooperation in mind."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Computational Scripts",
        "story": []
      },
      "date": 1673875591571
    },
    {
      "item": {
        "type": "factory",
        "id": "ce3aeb94320efaa0"
      },
      "id": "ce3aeb94320efaa0",
      "type": "add",
      "date": 1673875601673
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "Scripts also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673875603236
    },
    {
      "item": {
        "type": "factory",
        "id": "17aad00a12b8fc29"
      },
      "id": "17aad00a12b8fc29",
      "type": "add",
      "after": "ce3aeb94320efaa0",
      "date": 1673875677046
    },
    {
      "type": "edit",
      "id": "17aad00a12b8fc29",
      "item": {
        "type": "pagefold",
        "id": "17aad00a12b8fc29",
        "text": "~"
      },
      "date": 1673875680537
    },
    {
      "id": "203acf66ffc1b9a9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "203acf66ffc1b9a9",
        "text": "MIIKKULAINEN, Risto, 1993. Subsymbolic natural language processing: an integrated model of scripts, lexicon, and memory. Cambridge, Mass: MIT Press. Neural network modeling and connectionism. ISBN 978-0-262-13290-9."
      },
      "after": "17aad00a12b8fc29",
      "date": 1673875684800
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "[[Scripts]] also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673875699894
    },
    {
      "item": {
        "type": "factory",
        "id": "71005ae783cfcb07"
      },
      "id": "71005ae783cfcb07",
      "type": "add",
      "after": "203acf66ffc1b9a9",
      "date": 1673876016891
    },
    {
      "type": "edit",
      "id": "71005ae783cfcb07",
      "item": {
        "type": "paragraph",
        "id": "71005ae783cfcb07",
        "text": "Frames:"
      },
      "date": 1673876021128
    },
    {
      "item": {
        "type": "factory",
        "id": "468fd3ca442853a7"
      },
      "id": "468fd3ca442853a7",
      "type": "add",
      "after": "71005ae783cfcb07",
      "date": 1673876031909
    },
    {
      "type": "edit",
      "id": "468fd3ca442853a7",
      "item": {
        "type": "reference",
        "id": "468fd3ca442853a7",
        "site": "frame.wiki.dbbs.co",
        "slug": "changing-frames",
        "title": "Changing Frames",
        "text": "Perception depends on context. From one point of view the way seems impassible. From another point of view the path is revealed. Each view is limited by its own frame. Changing frames changes perception. Changing perception changes both understanding and action."
      },
      "date": 1673876034770
    },
    {
      "item": {
        "type": "factory",
        "id": "703f85888475f958"
      },
      "id": "703f85888475f958",
      "type": "add",
      "after": "468fd3ca442853a7",
      "date": 1673876064421
    },
    {
      "type": "edit",
      "id": "703f85888475f958",
      "item": {
        "type": "factory",
        "id": "703f85888475f958",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:108.0) Gecko/20100101 Firefox/108.0"
        }
      },
      "date": 1673876068835
    },
    {
      "type": "edit",
      "id": "703f85888475f958",
      "item": {
        "type": "reference",
        "id": "703f85888475f958",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:108.0) Gecko/20100101 Firefox/108.0"
        },
        "site": "wiki.dbbs.co",
        "slug": "explore-frames",
        "title": "Explore Frames",
        "text": "Collecting notes about using the new frame plugin."
      },
      "date": 1673876083618
    },
    {
      "item": {
        "type": "factory",
        "id": "7dcb7b98d13cdbc1"
      },
      "id": "7dcb7b98d13cdbc1",
      "type": "add",
      "after": "703f85888475f958",
      "date": 1673876158822
    },
    {
      "type": "edit",
      "id": "7dcb7b98d13cdbc1",
      "item": {
        "type": "reference",
        "id": "7dcb7b98d13cdbc1",
        "site": "wiki.dbbs.co",
        "slug": "framed",
        "title": "Framed",
        "text": "Javascript in a framed asset can no longer alter the DOM of the hosting page; here our asset attempts to add a green border around the frame.  Because the frame is sandboxed, the browser will enforce security limits."
      },
      "date": 1673876162213
    },
    {
      "item": {
        "type": "factory",
        "id": "389877cd20757bea"
      },
      "id": "389877cd20757bea",
      "type": "add",
      "after": "7dcb7b98d13cdbc1",
      "date": 1673876177719
    },
    {
      "type": "edit",
      "id": "389877cd20757bea",
      "item": {
        "type": "reference",
        "id": "389877cd20757bea",
        "site": "wiki.ralfbarkow.ch",
        "slug": "frame",
        "title": "Frame",
        "text": "See [[Frame Plugin]]. ⇒ [[About Frame Plugin]]"
      },
      "date": 1673876180396
    },
    {
      "item": {
        "type": "factory",
        "id": "0ac9b6d408b85f64"
      },
      "id": "0ac9b6d408b85f64",
      "type": "add",
      "after": "389877cd20757bea",
      "date": 1673876194751
    },
    {
      "type": "edit",
      "id": "0ac9b6d408b85f64",
      "item": {
        "type": "reference",
        "id": "0ac9b6d408b85f64",
        "site": "wiki.ralfbarkow.ch",
        "slug": "reference-frame",
        "title": "Reference Frame",
        "text": "But there’s more to this story. We’ll talk about it a bit more formally in the next section. But the basic point is that so far we’ve just talked about picking reference frames in a “spacetime causal graph”. But ultimately we have to consider the whole multiway graph of all possible sequences of update events. And then **we have to figure out how an [[observer] can set up some kind of [[reference frame]] to give them a perception of what’s going on.**"
      },
      "date": 1673876197142
    },
    {
      "item": {
        "type": "factory",
        "id": "e7bb5c1985f83ea8"
      },
      "id": "e7bb5c1985f83ea8",
      "type": "add",
      "after": "0ac9b6d408b85f64",
      "date": 1673876246941
    },
    {
      "type": "edit",
      "id": "e7bb5c1985f83ea8",
      "item": {
        "type": "paragraph",
        "id": "e7bb5c1985f83ea8",
        "text": "schemas"
      },
      "date": 1673876250641
    },
    {
      "id": "e7bb5c1985f83ea8",
      "type": "move",
      "order": [
        "ce3aeb94320efaa0",
        "17aad00a12b8fc29",
        "203acf66ffc1b9a9",
        "e7bb5c1985f83ea8",
        "71005ae783cfcb07",
        "468fd3ca442853a7",
        "703f85888475f958",
        "7dcb7b98d13cdbc1",
        "389877cd20757bea",
        "0ac9b6d408b85f64"
      ],
      "date": 1673876283538
    },
    {
      "type": "remove",
      "id": "e7bb5c1985f83ea8",
      "date": 1673876288838
    },
    {
      "type": "edit",
      "id": "71005ae783cfcb07",
      "item": {
        "type": "paragraph",
        "id": "71005ae783cfcb07",
        "text": "Frames: schemas"
      },
      "date": 1673876290892
    },
    {
      "type": "remove",
      "id": "703f85888475f958",
      "date": 1673876315392
    },
    {
      "type": "remove",
      "id": "7dcb7b98d13cdbc1",
      "date": 1673876319777
    },
    {
      "type": "remove",
      "id": "389877cd20757bea",
      "date": 1673876323026
    },
    {
      "item": {
        "type": "factory",
        "id": "7e9c1679a7239f29"
      },
      "id": "7e9c1679a7239f29",
      "type": "add",
      "after": "0ac9b6d408b85f64",
      "date": 1673876448499
    },
    {
      "type": "edit",
      "id": "7e9c1679a7239f29",
      "item": {
        "type": "reference",
        "id": "7e9c1679a7239f29",
        "site": "wellspring.fed.wiki",
        "slug": "schema",
        "title": "Schema",
        "text": "Kant first introduced the concept of schema. It is the internal landscape that we use to interpret the world around us.  How we make sense of our perceptions."
      },
      "date": 1673876451708
    },
    {
      "type": "edit",
      "id": "71005ae783cfcb07",
      "item": {
        "type": "paragraph",
        "id": "71005ae783cfcb07",
        "text": "⇒ [[Frame]] ⇒ [[Schema]]"
      },
      "date": 1673876482094
    },
    {
      "type": "edit",
      "id": "71005ae783cfcb07",
      "item": {
        "type": "paragraph",
        "id": "71005ae783cfcb07",
        "text": "⇒ [[Frame]] ⇒ [[Schema]]:"
      },
      "date": 1673876487928
    },
    {
      "item": {
        "type": "factory",
        "id": "813ba656e414cc57"
      },
      "id": "813ba656e414cc57",
      "type": "add",
      "after": "7e9c1679a7239f29",
      "date": 1673876535611
    },
    {
      "type": "edit",
      "id": "813ba656e414cc57",
      "item": {
        "type": "reference",
        "id": "813ba656e414cc57",
        "site": "wiki.ralfbarkow.ch",
        "slug": "schema-based-prompts",
        "title": "Schema Based Prompts",
        "text": "# The Shape of our Schema Guides the Stories we Tell"
      },
      "date": 1673876538574
    },
    {
      "item": {
        "type": "factory",
        "id": "358a6e5e9c11e988"
      },
      "id": "358a6e5e9c11e988",
      "type": "add",
      "after": "813ba656e414cc57",
      "date": 1673876588208
    },
    {
      "type": "edit",
      "id": "358a6e5e9c11e988",
      "item": {
        "type": "reference",
        "id": "358a6e5e9c11e988",
        "site": "ward.dojo.fed.wiki",
        "slug": "learning-navigation-schema",
        "title": "Learning Navigation Schema",
        "text": "We accumulate stories with meanings unique to our human sapience. We begin with a schema, instantiate graph fragments within that schema, and then assemble fragments to discover new stories where fragments touch."
      },
      "date": 1673876591164
    },
    {
      "item": {
        "type": "factory",
        "id": "81f8b297ddeb20af"
      },
      "id": "81f8b297ddeb20af",
      "type": "add",
      "after": "358a6e5e9c11e988",
      "date": 1673876619689
    },
    {
      "type": "edit",
      "id": "81f8b297ddeb20af",
      "item": {
        "type": "reference",
        "id": "81f8b297ddeb20af",
        "site": "ward.dojo.fed.wiki",
        "slug": "finding-graph-schema",
        "title": "Finding Graph Schema",
        "text": "We construct a schema from type information in nodes and relations."
      },
      "date": 1673876622876
    },
    {
      "item": {
        "type": "factory",
        "id": "ca94694358c3b92e"
      },
      "id": "ca94694358c3b92e",
      "type": "add",
      "after": "81f8b297ddeb20af",
      "date": 1673876649665
    },
    {
      "type": "edit",
      "id": "ca94694358c3b92e",
      "item": {
        "type": "reference",
        "id": "ca94694358c3b92e",
        "site": "ward.asia.wiki.org",
        "slug": "visitor-as-schema",
        "title": "Visitor as Schema",
        "text": "Small discovery of the day: Algorithmic markup in one plugin interprets the meaning of the remainder of the page which should be designed with this cooperation in mind."
      },
      "date": 1673876652743
    },
    {
      "type": "edit",
      "id": "71005ae783cfcb07",
      "item": {
        "type": "paragraph",
        "id": "71005ae783cfcb07",
        "text": "⇒ [[Frame]] ⇒ [[Schema]] ⇒ [[Basis for Mental Representation]]:"
      },
      "date": 1673876772598
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "[[Script]]s also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673877082073
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "[[Script]]s also support a computational theory, similar in spirit to frames in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). "
      },
      "date": 1673877267418
    },
    {
      "type": "add",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to schema theory, people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "after": "ce3aeb94320efaa0",
      "date": 1673877276353
    },
    {
      "type": "edit",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673877301393
    },
    {
      "type": "edit",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. For exam­ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673877382463
    },
    {
      "type": "edit",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A schema consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. "
      },
      "date": 1673877400626
    },
    {
      "type": "add",
      "id": "cf957a468d038f8a",
      "item": {
        "type": "paragraph",
        "id": "cf957a468d038f8a",
        "text": "For exam­ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "after": "46f7df585097edf9",
      "date": 1673877403903
    },
    {
      "type": "edit",
      "id": "cf957a468d038f8a",
      "item": {
        "type": "paragraph",
        "id": "cf957a468d038f8a",
        "text": "For exam­ple, a schema (frame) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1673877425625
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "[[Script]]s also support a computational theory, similar in spirit to [[Frames]] in artificial intelligence (Minsky 1981). Both are based on the general idea of schemas as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). "
      },
      "date": 1708263898300
    },
    {
      "type": "edit",
      "id": "ce3aeb94320efaa0",
      "item": {
        "type": "paragraph",
        "id": "ce3aeb94320efaa0",
        "text": "[[Script]]s also support a computational theory, similar in spirit to [[Frames]] in artificial intelligence (Minsky 1981). Both are based on the general idea of [[Schemas]] as a basis for mental representation (see e.g. Arbib 1989; Brewer and Nakamura 1984; Bartlett 1932; Bobrow and Norman 1975; Rumelhart 1980). "
      },
      "date": 1708263912789
    },
    {
      "type": "edit",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A [[Schema]] consists of a representation for common knowledge that is shared by all instances, and a number of slots that take on different values for different instances. "
      },
      "date": 1708263934439
    },
    {
      "type": "edit",
      "id": "cf957a468d038f8a",
      "item": {
        "type": "paragraph",
        "id": "cf957a468d038f8a",
        "text": "For exam­ple, a schema ([[Frame]]) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a restaurant visit specifies the common events (such as entering, seating, ordering, eat­ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1708263951372
    },
    {
      "type": "edit",
      "id": "46f7df585097edf9",
      "item": {
        "type": "paragraph",
        "id": "46f7df585097edf9",
        "text": "According to [[Schema Theory]], people organize knowledge about familiar objects, situations, and procedures in terms of prototypes, or schemas. A [[Schema]] consists of a representation for common knowledge that is shared by all instances, and a number of [[Slot]]s that take on different values for different instances. "
      },
      "date": 1708432127965
    },
    {
      "type": "edit",
      "id": "cf957a468d038f8a",
      "item": {
        "type": "paragraph",
        "id": "cf957a468d038f8a",
        "text": "For exam­ple, a schema ([[Frame]]) for a room consists of the common structure (walls, floor, ceiling, door), and slots for size, shape, furniture, and so on (Rumelhart et al. 1986d). A schema (script) for a [[Restaurant Visit]] specifies the common events (such as entering, seating, ordering, eat­ing) and slots for the customer, restaurant, food, amount of the tip, and so on."
      },
      "date": 1708432483686
    },
    {
      "type": "add",
      "id": "af95c44dfc250e09",
      "item": {
        "type": "paragraph",
        "id": "af95c44dfc250e09",
        "text": "In symbolic natural language processing (NLP) a script is repre­ sented as a causal chain of events with a number of open roles (Culling­ ford 1978; Dejong 1979; Dyer et al. 1987; Schank and Abelson 1977; table 2.1). Different variations of the script are called tracks. For exam­ ple, there is a fancy-restaurant track, fast-food track, and a coffee-shop track for the restaurant script, each with slightly different events."
      },
      "after": "cf957a468d038f8a",
      "date": 1708432787622
    },
    {
      "type": "edit",
      "id": "203acf66ffc1b9a9",
      "item": {
        "type": "paragraph",
        "id": "203acf66ffc1b9a9",
        "text": "MIIKKULAINEN, Risto, 1993. Subsymbolic natural language processing: an integrated model of scripts, lexicon, and memory. Cambridge, Mass: MIT Press. Neural network modeling and connectionism. ISBN 978-0-262-13290-9, p. 15."
      },
      "date": 1708432804082
    },
    {
      "type": "edit",
      "id": "af95c44dfc250e09",
      "item": {
        "type": "paragraph",
        "id": "af95c44dfc250e09",
        "text": "In symbolic natural language processing (NLP) a script is repre­sented as a causal chain of events with a number of open roles (Culling­ ford 1978; Dejong 1979; Dyer et al. 1987; Schank and Abelson 1977; table 2.1). Different variations of the script are called tracks. For exam­ ple, there is a fancy-restaurant track, fast-food track, and a coffee-shop track for the restaurant script, each with slightly different events."
      },
      "date": 1708432813461
    },
    {
      "type": "edit",
      "id": "af95c44dfc250e09",
      "item": {
        "type": "paragraph",
        "id": "af95c44dfc250e09",
        "text": "In symbolic natural language processing (NLP) a script is repre­sented as a causal chain of events with a number of open roles (Culling­ ford 1978; Dejong 1979; Dyer et al. 1987; Schank and Abelson 1977; table 2.1). Different variations of the script are called [[Track]]s. For exam­ple, there is a fancy-restaurant track, fast-food track, and a coffee-shop track for the restaurant script, each with slightly different events."
      },
      "date": 1708432839366
    },
    {
      "type": "add",
      "id": "2188d47b80d2a9d9",
      "item": {
        "type": "paragraph",
        "id": "2188d47b80d2a9d9",
        "text": "Applying scriptai knowledge to a story requires identifying the rel­ evant script and filling in its roles with the actual constituents of the story."
      },
      "after": "af95c44dfc250e09",
      "date": 1708432880666
    },
    {
      "type": "edit",
      "id": "203acf66ffc1b9a9",
      "item": {
        "type": "paragraph",
        "id": "203acf66ffc1b9a9",
        "text": "MIIKKULAINEN, Risto, 1993. Subsymbolic natural language processing: an integrated model of scripts, lexicon, and memory. Cambridge, Mass: MIT Press. Neural network modeling and connectionism. ISBN 978-0-262-13290-9, p. 15–16."
      },
      "date": 1708432887657
    },
    {
      "type": "edit",
      "id": "2188d47b80d2a9d9",
      "item": {
        "type": "paragraph",
        "id": "2188d47b80d2a9d9",
        "text": "Applying scriptal knowledge to a story requires identifying the rel­ evant script and filling in its roles with the actual constituents of the story."
      },
      "date": 1708432901928
    },
    {
      "type": "edit",
      "id": "2188d47b80d2a9d9",
      "item": {
        "type": "paragraph",
        "id": "2188d47b80d2a9d9",
        "text": "Applying scriptal knowledge to a story requires identifying the rel­evant script and filling in its roles with the actual constituents of the story."
      },
      "date": 1708432907348
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1708432942119
    }
  ]
}