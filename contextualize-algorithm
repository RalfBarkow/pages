{
  "title": "Contextualize Algorithm",
  "story": [
    {
      "type": "paragraph",
      "id": "630ef590e84fef6e",
      "text": "Let there be given graph g, initial context c_0, partial information i_p.\n\ninput: g, c_0, i_p\n\noutput: contextual knowledge graph c\n\nenumerate:\n\n    Initialize scope from c_0, i_p\n    while scope is not completely fulfilled, do:\n        BFS expansion on c_0 using the unfulfilled scope, filters and i_p, and\n        if context is expanded, update scope, continue;\n        else, apply learning with inquire to expand g (but not context and scope); then retry on success or break on failure.\n    Return the context c, along with the fulfilled scope for direct access of i.\n\nWe also call the resulting context c the contextual knowledge graph, and the extractable knowledge k_c = Ex(c) the contextual knowledge, obtained by using g, c_0, i_p, filters. Note also fn(i) = fn(k_c), thus the resulting contextual knowledge is sufficient for TM computation.\n\nWe prove below that this algorithm yields knowledge that is g-bounded complete; it also proves that the algorithm is correct."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Contextualize Algorithm",
        "story": []
      },
      "date": 1709213205175
    },
    {
      "id": "630ef590e84fef6e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "630ef590e84fef6e",
        "text": "Let there be given graph g, initial context c_0, partial information i_p.\n\ninput: g, c_0, i_p\n\noutput: contextual knowledge graph c\n\nenumerate:\n\n    Initialize scope from c_0, i_p\n    while scope is not completely fulfilled, do:\n        BFS expansion on c_0 using the unfulfilled scope, filters and i_p, and\n        if context is expanded, update scope, continue;\n        else, apply learning with inquire to expand g (but not context and scope); then retry on success or break on failure.\n    Return the context c, along with the fulfilled scope for direct access of i.\n\nWe also call the resulting context c the contextual knowledge graph, and the extractable knowledge k_c = Ex(c) the contextual knowledge, obtained by using g, c_0, i_p, filters. Note also fn(i) = fn(k_c), thus the resulting contextual knowledge is sufficient for TM computation.\n\nWe prove below that this algorithm yields knowledge that is g-bounded complete; it also proves that the algorithm is correct."
      },
      "attribution": {
        "page": "AIVA Formal Theory"
      },
      "date": 1709213215227
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1710053507624
    }
  ]
}