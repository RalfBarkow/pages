{
  "title": "Magritte",
  "story": [
    {
      "type": "markdown",
      "id": "8a44daf8b5d5b844",
      "text": "a metadata modeling framework [https://github.com/magritte-metamodel/magritte github]\n"
    },
    {
      "type": "markdown",
      "id": "b043fd2171c2ba76",
      "text": "Most applications consist of a big number of model- or so called domain-objects. Building different views, editors, and reports; querying, validating and storing those objects is very repetitive and error-prone, if an object changes its [[Shape]] frequently."
    },
    {
      "type": "markdown",
      "id": "75c7cbefa99b904d",
      "text": "Magritte is a fully dynamic meta-description framework that helps to solve those problems, while keeping the full power with the programmer in all aspects. Moreover since Magritte is described in itself, you can let your users modify the meta-world and add their own fields and forms without writing a single line of code."
    },
    {
      "type": "paragraph",
      "id": "72d1553678f94c55",
      "text": "See [[GToolkit Magritte]]."
    },
    {
      "type": "markdown",
      "id": "0de081be3e67e1bd",
      "text": "[[Lukas Renggli]] (2006), Magritte. Meta-Described Web Application Development. Masterarbeit [https://web.archive.org/web/20201111213727/http://sdmeta.gforge.inria.fr/Teaching/Lille/0910-MetaModelisation/Magritte/Reng06a.pdf wayback]"
    },
    {
      "type": "markdown",
      "id": "f6becd009764fb5c",
      "text": "Meta data at Work with Magritte: A Tutorial [https://www.mail-archive.com/pharo-users@lists.pharo.org/msg39600.html mail-archive] [http://forum.world.st/Magritte-Meta-Data-at-work-Tutorial-a-clarity-reqd-td5126532.html forum.world.st] [https://book.seaside.st/book/advanced/magritte book]\n"
    },
    {
      "type": "markdown",
      "id": "604d6ca32e26a5e0",
      "text": "> Basic Principles: […] The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. \n"
    },
    {
      "type": "markdown",
      "id": "3e0e537089288067",
      "text": "[https://book.seaside.st/book/advanced/magritte/principles#basicPrinciple Figure 159] shows that a person address’, John’s address, instance of the class Address, is described by a description object which is attached to the class Address. A program (i.e., database query, generic UI, seaside component builder) will interpret the value of the instance by using its descriptions."
    },
    {
      "type": "html",
      "id": "9b7a6917700aac86",
      "text": "<center>\n  <img\n    width=\"100%\"\n    src=\"https://book.seaside.st/files/51/zua3t1odaqvwn5doi5r8537mek4ecq/basicPrinciple.png\"\n  >\n</center>"
    },
    {
      "type": "markdown",
      "id": "f43f801e2660d8c2",
      "text": "**Figure 159**: An object is described by a description which is defined on its class.\n"
    },
    {
      "type": "markdown",
      "id": "407cd1ae65d9f94a",
      "text": "* Here are the basic description assumptions:\nAn object is described by adding methods named description (naming convention) to the class-side of its class. Such description methods create different description entities. The following Address class method creates a string description object that has a label ’Street’, a priority and two accessors street and street: to access it."
    },
    {
      "type": "code",
      "id": "802936e0a81bd476",
      "text": "Address class>>descriptionStreet\n    ^ MAStringDescription new\n        accessor: #street;\n        label: 'Street';\n        priority: 100;\n        yourself"
    },
    {
      "type": "paragraph",
      "id": "9ce387d5b33c6ab7",
      "text": "Note that there is no need to have a one to one mapping between the instance variables of the class and the associated descriptions."
    },
    {
      "type": "markdown",
      "id": "db4cd42bf72c5923",
      "text": "* All descriptions are automatically collected and put into a container description when sending description to the object (see [https://book.seaside.st/book/advanced/magritte/principles#describingAddress Figure 160]).\n* Descriptions are defined programmatically and can also be queried. They support the collection protocol (do:, select:...)."
    },
    {
      "type": "pagefold",
      "id": "0aeb758bb1067a94",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "d55d2fdf0dd3c9a6",
      "site": "wiki.ralfbarkow.ch",
      "slug": "the-magritte-meta-model",
      "title": "The Magritte Meta-Model",
      "text": "Most applications consist of a big number of model- or so called domain-objects. Building different views, editors, and reports; querying, validating and storing those objects is very repetitive and error-prone, if an object changes its shape frequently. [https://github.com/magritte-metamodel/magritte github]"
    },
    {
      "type": "reference",
      "id": "99581a43238ebbf4",
      "site": "wiki.ralfbarkow.ch",
      "slug": "magritte-chapter-in-seaside-book",
      "title": "Magritte Chapter in Seaside Book",
      "text": "Magritte: Meta-data at Work [http://book.seaside.st/book/advanced/magritte page] – Many applications consist of a large number of input dialogs and reports that need to be built, displayed and validated manually. Often these dialogs remain static after the development phase and cannot be changed unless a new development effort occurs. For certain kinds of application domains such as small businesses, changing business plans, modifying workflows, etc., it usually boils down to minor modifications to domain objects and behavior, for example new fields have"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Magritte",
        "story": []
      },
      "date": 1627406072682
    },
    {
      "item": {
        "type": "factory",
        "id": "8a44daf8b5d5b844"
      },
      "id": "8a44daf8b5d5b844",
      "type": "add",
      "date": 1627406074075
    },
    {
      "type": "edit",
      "id": "8a44daf8b5d5b844",
      "item": {
        "type": "markdown",
        "id": "8a44daf8b5d5b844",
        "text": "Magritte"
      },
      "date": 1627406076780
    },
    {
      "type": "edit",
      "id": "8a44daf8b5d5b844",
      "item": {
        "type": "markdown",
        "id": "8a44daf8b5d5b844",
        "text": " (a metadata modeling framework)"
      },
      "date": 1627406081770
    },
    {
      "item": {
        "type": "factory",
        "id": "f6becd009764fb5c"
      },
      "id": "f6becd009764fb5c",
      "type": "add",
      "after": "8a44daf8b5d5b844",
      "date": 1640585238201
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "paragraph",
        "id": "f6becd009764fb5c",
        "text": "# Meta data at Work with Magritte: A Tutorial"
      },
      "date": 1640585242152
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "# Meta data at Work with Magritte: A Tutorial"
      },
      "date": 1640585243236
    },
    {
      "item": {
        "type": "factory",
        "id": "72d1553678f94c55"
      },
      "id": "72d1553678f94c55",
      "type": "add",
      "after": "f6becd009764fb5c",
      "date": 1643120774774
    },
    {
      "type": "edit",
      "id": "72d1553678f94c55",
      "item": {
        "type": "paragraph",
        "id": "72d1553678f94c55",
        "text": "See [[GToolkit Magritte]]"
      },
      "date": 1643120780659
    },
    {
      "type": "edit",
      "id": "72d1553678f94c55",
      "item": {
        "type": "paragraph",
        "id": "72d1553678f94c55",
        "text": "See [[GToolkit Magritte]]."
      },
      "date": 1643120785546
    },
    {
      "item": {
        "type": "factory",
        "id": "d55d2fdf0dd3c9a6"
      },
      "id": "d55d2fdf0dd3c9a6",
      "type": "add",
      "after": "72d1553678f94c55",
      "date": 1643120901355
    },
    {
      "type": "edit",
      "id": "d55d2fdf0dd3c9a6",
      "item": {
        "type": "reference",
        "id": "d55d2fdf0dd3c9a6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-magritte-meta-model",
        "title": "The Magritte Meta-Model",
        "text": "Most applications consist of a big number of model- or so called domain-objects. Building different views, editors, and reports; querying, validating and storing those objects is very repetitive and error-prone, if an object changes its shape frequently. [https://github.com/magritte-metamodel/magritte github]"
      },
      "date": 1643120903615
    },
    {
      "item": {
        "type": "factory",
        "id": "99581a43238ebbf4"
      },
      "id": "99581a43238ebbf4",
      "type": "add",
      "after": "d55d2fdf0dd3c9a6",
      "date": 1643120909872
    },
    {
      "type": "edit",
      "id": "99581a43238ebbf4",
      "item": {
        "type": "reference",
        "id": "99581a43238ebbf4",
        "site": "wiki.ralfbarkow.ch",
        "slug": "magritte-chapter-in-seaside-book",
        "title": "Magritte Chapter in Seaside Book",
        "text": "Magritte: Meta-data at Work [http://book.seaside.st/book/advanced/magritte page] – Many applications consist of a large number of input dialogs and reports that need to be built, displayed and validated manually. Often these dialogs remain static after the development phase and cannot be changed unless a new development effort occurs. For certain kinds of application domains such as small businesses, changing business plans, modifying workflows, etc., it usually boils down to minor modifications to domain objects and behavior, for example new fields have"
      },
      "date": 1643120912112
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "Meta data at Work with Magritte: A Tutorial"
      },
      "date": 1643121140633
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "Meta data at Work with Magritte: A Tutorial [https://www.mail-archive.com/pharo-users@lists.pharo.org/msg39600.html mail-archive]"
      },
      "date": 1643121161399
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "Meta data at Work with Magritte: A Tutorial [https://www.mail-archive.com/pharo-users@lists.pharo.org/msg39600.html mail-archive] [http://forum.world.st/Magritte-Meta-Data-at-work-Tutorial-a-clarity-reqd-td5126532.html forum.world.st]"
      },
      "date": 1643121221139
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "Meta data at Work with Magritte: A Tutorial [https://www.mail-archive.com/pharo-users@lists.pharo.org/msg39600.html mail-archive] [http://forum.world.st/Magritte-Meta-Data-at-work-Tutorial-a-clarity-reqd-td5126532.html forum.world.st]\n"
      },
      "date": 1643121414124
    },
    {
      "type": "add",
      "id": "0de081be3e67e1bd",
      "item": {
        "type": "markdown",
        "id": "0de081be3e67e1bd",
        "text": "[[Lukas Renggli]]"
      },
      "after": "f6becd009764fb5c",
      "date": 1643121426929
    },
    {
      "type": "edit",
      "id": "0de081be3e67e1bd",
      "item": {
        "type": "markdown",
        "id": "0de081be3e67e1bd",
        "text": "[[Lukas Renggli]], Magritte.\nMeta-Described Web Application Development. Masterarbeit "
      },
      "date": 1643121440115
    },
    {
      "type": "edit",
      "id": "0de081be3e67e1bd",
      "item": {
        "type": "markdown",
        "id": "0de081be3e67e1bd",
        "text": "[[Lukas Renggli]], Magritte. Meta-Described Web Application Development. Masterarbeit [https://web.archive.org/web/20201111213727/http://sdmeta.gforge.inria.fr/Teaching/Lille/0910-MetaModelisation/Magritte/Reng06a.pdf wayback]"
      },
      "date": 1643121450969
    },
    {
      "type": "edit",
      "id": "0de081be3e67e1bd",
      "item": {
        "type": "markdown",
        "id": "0de081be3e67e1bd",
        "text": "[[Lukas Renggli]] (2006), Magritte. Meta-Described Web Application Development. Masterarbeit [https://web.archive.org/web/20201111213727/http://sdmeta.gforge.inria.fr/Teaching/Lille/0910-MetaModelisation/Magritte/Reng06a.pdf wayback]"
      },
      "date": 1643121463643
    },
    {
      "id": "72d1553678f94c55",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "f6becd009764fb5c",
        "0de081be3e67e1bd",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643122600000
    },
    {
      "type": "edit",
      "id": "8a44daf8b5d5b844",
      "item": {
        "type": "markdown",
        "id": "8a44daf8b5d5b844",
        "text": "a metadata modeling framework"
      },
      "date": 1643122619579
    },
    {
      "id": "0de081be3e67e1bd",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643122626408
    },
    {
      "type": "add",
      "id": "604d6ca32e26a5e0",
      "item": {
        "type": "markdown",
        "id": "604d6ca32e26a5e0",
        "text": "The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. "
      },
      "after": "f6becd009764fb5c",
      "date": 1643123568671
    },
    {
      "type": "edit",
      "id": "f6becd009764fb5c",
      "item": {
        "type": "markdown",
        "id": "f6becd009764fb5c",
        "text": "Meta data at Work with Magritte: A Tutorial [https://www.mail-archive.com/pharo-users@lists.pharo.org/msg39600.html mail-archive] [http://forum.world.st/Magritte-Meta-Data-at-work-Tutorial-a-clarity-reqd-td5126532.html forum.world.st] [https://book.seaside.st/book/advanced/magritte book]\n"
      },
      "date": 1643123585421
    },
    {
      "type": "edit",
      "id": "604d6ca32e26a5e0",
      "item": {
        "type": "markdown",
        "id": "604d6ca32e26a5e0",
        "text": "Basic Principles: The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. "
      },
      "date": 1643123627754
    },
    {
      "type": "edit",
      "id": "604d6ca32e26a5e0",
      "item": {
        "type": "markdown",
        "id": "604d6ca32e26a5e0",
        "text": "Basic Principles: […] The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. "
      },
      "date": 1643123637671
    },
    {
      "type": "edit",
      "id": "604d6ca32e26a5e0",
      "item": {
        "type": "markdown",
        "id": "604d6ca32e26a5e0",
        "text": "> Basic Principles: […] The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. "
      },
      "date": 1643123644033
    },
    {
      "item": {
        "type": "factory",
        "id": "9b7a6917700aac86"
      },
      "id": "9b7a6917700aac86",
      "type": "add",
      "after": "99581a43238ebbf4",
      "date": 1643123671492
    },
    {
      "type": "edit",
      "id": "9b7a6917700aac86",
      "item": {
        "type": "html",
        "id": "9b7a6917700aac86",
        "text": "<center>\n  <img\n    widht=\"100%\"\n    src=\"https://book.seaside.st/files/51/zua3t1odaqvwn5doi5r8537mek4ecq/basicPrinciple.png\"\n  >\n</center>"
      },
      "date": 1643123700561
    },
    {
      "type": "edit",
      "id": "9b7a6917700aac86",
      "item": {
        "type": "html",
        "id": "9b7a6917700aac86",
        "text": "<center>\n  <img\n    width=\"100%\"\n    src=\"https://book.seaside.st/files/51/zua3t1odaqvwn5doi5r8537mek4ecq/basicPrinciple.png\"\n  >\n</center>"
      },
      "date": 1643123712219
    },
    {
      "id": "9b7a6917700aac86",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "604d6ca32e26a5e0",
        "9b7a6917700aac86",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643123716710
    },
    {
      "item": {
        "type": "factory",
        "id": "f43f801e2660d8c2"
      },
      "id": "f43f801e2660d8c2",
      "type": "add",
      "after": "99581a43238ebbf4",
      "date": 1643123732591
    },
    {
      "type": "edit",
      "id": "f43f801e2660d8c2",
      "item": {
        "type": "paragraph",
        "id": "f43f801e2660d8c2",
        "text": "Figure 159: An object is described by a description which is defined on its class."
      },
      "date": 1643123734790
    },
    {
      "id": "f43f801e2660d8c2",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "604d6ca32e26a5e0",
        "9b7a6917700aac86",
        "f43f801e2660d8c2",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643123739037
    },
    {
      "type": "edit",
      "id": "f43f801e2660d8c2",
      "item": {
        "type": "paragraph",
        "id": "f43f801e2660d8c2",
        "text": "**Figure 159**: An object is described by a description which is defined on its class."
      },
      "date": 1643123745563
    },
    {
      "type": "edit",
      "id": "f43f801e2660d8c2",
      "item": {
        "type": "markdown",
        "id": "f43f801e2660d8c2",
        "text": "**Figure 159**: An object is described by a description which is defined on its class."
      },
      "date": 1643123746704
    },
    {
      "type": "edit",
      "id": "604d6ca32e26a5e0",
      "item": {
        "type": "markdown",
        "id": "604d6ca32e26a5e0",
        "text": "> Basic Principles: […] The key idea behind Magritte is the following: given one object with a set of values, and a description of this information, we will create automatically tools that treat such information and for example automatically create Seaside components. \n"
      },
      "date": 1643123766760
    },
    {
      "type": "add",
      "id": "3e0e537089288067",
      "item": {
        "type": "markdown",
        "id": "3e0e537089288067",
        "text": "Figure 159 shows that a person address’, John’s address, instance of the class Address, is described by a description object which is attached to the class Address. A program (i.e., database query, generic UI, seaside component builder) will interpret the value of the instance by using its descriptions."
      },
      "after": "604d6ca32e26a5e0",
      "date": 1643123767431
    },
    {
      "type": "edit",
      "id": "3e0e537089288067",
      "item": {
        "type": "markdown",
        "id": "3e0e537089288067",
        "text": "[https://book.seaside.st/book/advanced/magritte/principles#basicPrinciple Figure 159] shows that a person address’, John’s address, instance of the class Address, is described by a description object which is attached to the class Address. A program (i.e., database query, generic UI, seaside component builder) will interpret the value of the instance by using its descriptions."
      },
      "date": 1643123822506
    },
    {
      "type": "edit",
      "id": "f43f801e2660d8c2",
      "item": {
        "type": "markdown",
        "id": "f43f801e2660d8c2",
        "text": "**Figure 159**: An object is described by a description which is defined on its class.\n"
      },
      "date": 1643123856226
    },
    {
      "type": "add",
      "id": "407cd1ae65d9f94a",
      "item": {
        "type": "markdown",
        "id": "407cd1ae65d9f94a",
        "text": "Here are the basic description assumptions:"
      },
      "after": "f43f801e2660d8c2",
      "date": 1643123857822
    },
    {
      "type": "edit",
      "id": "407cd1ae65d9f94a",
      "item": {
        "type": "markdown",
        "id": "407cd1ae65d9f94a",
        "text": "* Here are the basic description assumptions:\nAn object is described by adding methods named description (naming convention) to the class-side of its class. Such description methods create different description entities. The following Address class method creates a string description object that has a label ’Street’, a priority and two accessors street and street: to access it."
      },
      "date": 1643123870078
    },
    {
      "item": {
        "type": "factory",
        "id": "802936e0a81bd476"
      },
      "id": "802936e0a81bd476",
      "type": "add",
      "after": "99581a43238ebbf4",
      "date": 1643123880512
    },
    {
      "type": "edit",
      "id": "802936e0a81bd476",
      "item": {
        "type": "code",
        "id": "802936e0a81bd476",
        "text": "Address class>>descriptionStreet\n    ^ MAStringDescription new\n        accessor: #street;\n        label: 'Street';\n        priority: 100;\n        yourself"
      },
      "date": 1643123883445
    },
    {
      "id": "802936e0a81bd476",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "604d6ca32e26a5e0",
        "3e0e537089288067",
        "9b7a6917700aac86",
        "f43f801e2660d8c2",
        "407cd1ae65d9f94a",
        "802936e0a81bd476",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643123887742
    },
    {
      "item": {
        "type": "factory",
        "id": "9ce387d5b33c6ab7"
      },
      "id": "9ce387d5b33c6ab7",
      "type": "add",
      "after": "99581a43238ebbf4",
      "date": 1643123903284
    },
    {
      "type": "edit",
      "id": "9ce387d5b33c6ab7",
      "item": {
        "type": "paragraph",
        "id": "9ce387d5b33c6ab7",
        "text": "Note that there is no need to have a one to one mapping between the instance variables of the class and the associated descriptions."
      },
      "date": 1643123904923
    },
    {
      "id": "9ce387d5b33c6ab7",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "604d6ca32e26a5e0",
        "3e0e537089288067",
        "9b7a6917700aac86",
        "f43f801e2660d8c2",
        "407cd1ae65d9f94a",
        "802936e0a81bd476",
        "9ce387d5b33c6ab7",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643123909493
    },
    {
      "item": {
        "type": "factory",
        "id": "0aeb758bb1067a94"
      },
      "id": "0aeb758bb1067a94",
      "type": "add",
      "after": "99581a43238ebbf4",
      "date": 1643123911080
    },
    {
      "type": "edit",
      "id": "0aeb758bb1067a94",
      "item": {
        "type": "pagefold",
        "id": "0aeb758bb1067a94",
        "text": "~"
      },
      "date": 1643123914544
    },
    {
      "id": "0aeb758bb1067a94",
      "type": "move",
      "order": [
        "8a44daf8b5d5b844",
        "72d1553678f94c55",
        "0de081be3e67e1bd",
        "f6becd009764fb5c",
        "604d6ca32e26a5e0",
        "3e0e537089288067",
        "9b7a6917700aac86",
        "f43f801e2660d8c2",
        "407cd1ae65d9f94a",
        "802936e0a81bd476",
        "9ce387d5b33c6ab7",
        "0aeb758bb1067a94",
        "d55d2fdf0dd3c9a6",
        "99581a43238ebbf4"
      ],
      "date": 1643123917774
    },
    {
      "type": "add",
      "id": "db4cd42bf72c5923",
      "item": {
        "type": "paragraph",
        "id": "db4cd42bf72c5923",
        "text": "* All descriptions are automatically collected and put into a container description when sending description to the object (see Figure 160).\n* Descriptions are defined programmatically and can also be queried. They support the collection protocol (do:, select:...)."
      },
      "after": "9ce387d5b33c6ab7",
      "date": 1643123954968
    },
    {
      "type": "edit",
      "id": "db4cd42bf72c5923",
      "item": {
        "type": "markdown",
        "id": "db4cd42bf72c5923",
        "text": "* All descriptions are automatically collected and put into a container description when sending description to the object (see Figure 160).\n* Descriptions are defined programmatically and can also be queried. They support the collection protocol (do:, select:...)."
      },
      "date": 1643123956666
    },
    {
      "type": "edit",
      "id": "db4cd42bf72c5923",
      "item": {
        "type": "markdown",
        "id": "db4cd42bf72c5923",
        "text": "* All descriptions are automatically collected and put into a container description when sending description to the object (see [https://book.seaside.st/book/advanced/magritte/principles#describingAddress Figure 160]).\n* Descriptions are defined programmatically and can also be queried. They support the collection protocol (do:, select:...)."
      },
      "date": 1643123975275
    },
    {
      "type": "edit",
      "id": "8a44daf8b5d5b844",
      "item": {
        "type": "markdown",
        "id": "8a44daf8b5d5b844",
        "text": "a metadata modeling framework [https://github.com/magritte-metamodel/magritte github]"
      },
      "date": 1684096866103
    },
    {
      "type": "edit",
      "id": "8a44daf8b5d5b844",
      "item": {
        "type": "markdown",
        "id": "8a44daf8b5d5b844",
        "text": "a metadata modeling framework [https://github.com/magritte-metamodel/magritte github]\n"
      },
      "date": 1684096924560
    },
    {
      "type": "add",
      "id": "b043fd2171c2ba76",
      "item": {
        "type": "markdown",
        "id": "b043fd2171c2ba76",
        "text": "Most applications consist of a big number of model- or so called domain-objects. Building different views, editors, and reports; querying, validating and storing those objects is very repetitive and error-prone, if an object changes its shape frequently.\n\nMagritte is a fully dynamic meta-description framework that helps to solve those problems, while keeping the full power with the programmer in all aspects. Moreover since Magritte is described in itself, you can let your users modify the meta-world and add their own fields and forms without writing a single line of code."
      },
      "after": "8a44daf8b5d5b844",
      "date": 1684096925327
    },
    {
      "type": "edit",
      "id": "b043fd2171c2ba76",
      "item": {
        "type": "markdown",
        "id": "b043fd2171c2ba76",
        "text": "Most applications consist of a big number of model- or so called domain-objects. Building different views, editors, and reports; querying, validating and storing those objects is very repetitive and error-prone, if an object changes its [[Shape]] frequently."
      },
      "date": 1705217237015
    },
    {
      "type": "add",
      "id": "75c7cbefa99b904d",
      "item": {
        "type": "markdown",
        "id": "75c7cbefa99b904d",
        "text": "Magritte is a fully dynamic meta-description framework that helps to solve those problems, while keeping the full power with the programmer in all aspects. Moreover since Magritte is described in itself, you can let your users modify the meta-world and add their own fields and forms without writing a single line of code."
      },
      "after": "b043fd2171c2ba76",
      "date": 1705217237608
    }
  ]
}