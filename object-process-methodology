{
  "title": "Object-Process Methodology",
  "story": [
    {
      "type": "paragraph",
      "id": "e39b699850f9819e",
      "text": "Object-Process Methodology (OPM) is a systems modeling paradigm that represents the two things inherent in a system: its objects and processes. OPM is fundamentally simple; it builds on a minimal set of concepts: stateful objects—things that exist, and processes—things that happen and transform objects by creating or consuming them or by changing their states. This duality is recognized throughout the community who studies systems, and sometimes goes by labels such as form/function, structure/function, and functional requirements/design parameters. Objects are what a system or product is. Processes are what a system does. Yet, it is remarkable that so few modeling frameworks explicitly recognize this duality. As a result, designers and engineers try to jump from the goals of a system (the requirements or the “program”) immediately to the objects. Serious theory in such disparate disciplines as software design, mechanical design and civil architectural design all recognize the value of thinking about processes in parallel with objects. Not only does OPM represent both objects and processes, but it explicitly shows the connections between them."
    },
    {
      "type": "pagefold",
      "id": "2b53efc9f67f3f47",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "65805eac8917b2b7",
      "text": "Dori, Model-Based Systems Engineering with OPM and SysML."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Object-Process Methodology",
        "story": []
      },
      "date": 1664223437842
    },
    {
      "item": {
        "type": "factory",
        "id": "e39b699850f9819e"
      },
      "id": "e39b699850f9819e",
      "type": "add",
      "date": 1664223446558
    },
    {
      "type": "edit",
      "id": "e39b699850f9819e",
      "item": {
        "type": "paragraph",
        "id": "e39b699850f9819e",
        "text": "Object-Process Methodology (OPM) is a systems modeling paradigm that represents the two things inherent in a system: its objects and processes. OPM is fundamentally simple; it builds on a minimal set of concepts: stateful objects—things that exist, and processes—things that happen and transform objects by creating or consuming them or by changing their states. This duality is recognized throughout the community who studies systems, and sometimes goes by labels such as form/function, structure/function, and functional requirements/design parameters. Objects are what a system or product is. Processes are what a system does. Yet, it is remarkable that so few modeling frameworks explicitly recognize this duality. As a result, designers and engineers try to jump from the goals of a system (the requirements or the “program”) immediately to the objects. Serious theory in such disparate disciplines as software design, mechanical design and civil architectural design all recognize the value of thinking about processes in parallel with objects. Not only does OPM represent both objects and processes, but it explicitly shows the connections between them."
      },
      "date": 1664223448109
    },
    {
      "item": {
        "type": "factory",
        "id": "2b53efc9f67f3f47"
      },
      "id": "2b53efc9f67f3f47",
      "type": "add",
      "after": "e39b699850f9819e",
      "date": 1664223492421
    },
    {
      "type": "edit",
      "id": "2b53efc9f67f3f47",
      "item": {
        "type": "pagefold",
        "id": "2b53efc9f67f3f47",
        "text": "~"
      },
      "date": 1664223497428
    },
    {
      "item": {
        "type": "factory",
        "id": "65805eac8917b2b7"
      },
      "id": "65805eac8917b2b7",
      "type": "add",
      "after": "2b53efc9f67f3f47",
      "date": 1664223498671
    },
    {
      "type": "edit",
      "id": "65805eac8917b2b7",
      "item": {
        "type": "paragraph",
        "id": "65805eac8917b2b7",
        "text": "Dori, Model-Based Systems Engineering with OPM and SysML."
      },
      "date": 1664223501074
    }
  ]
}