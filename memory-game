{
  "title": "Memory Game",
  "story": [
    {
      "type": "markdown",
      "id": "99ca47c8fa70d5df",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "707df9b8b6e1d7c6",
      "text": "We will build a memory game. In a memory game players need to find pairs of similar cards. In each round a player turns over two cards at a time. If the two cards show the same symbol they are removed and the player gets a point. If not, they are both flipped."
    },
    {
      "type": "markdown",
      "id": "043d8dce68ab4773",
      "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
    },
    {
      "type": "markdown",
      "id": "0596281702eccc29",
      "text": "# The Card Element"
    },
    {
      "type": "markdown",
      "id": "ee663d696325a7cb",
      "text": "Our graphic element, called `[[CardElement]]`, representing a card will subclass `[[BlElement]]` and have a reference to a card model:"
    },
    {
      "type": "paragraph",
      "id": "cef77237b0f3909c",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "bbfad6a35e499991",
      "text": "# Drawing a Card"
    },
    {
      "type": "pagefold",
      "id": "d325acb58fb1f402",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "63a99e2ea9416272",
      "text": "CHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with [[Bloc]]. [https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf pdf]\n"
    },
    {
      "type": "markdown",
      "id": "bd2f901453451232",
      "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. \n>\n> In this tutorial you will build a memory game. We provide the model and focus on creating the UI of the game."
    },
    {
      "type": "paragraph",
      "id": "8c673c9070de45e8",
      "text": "See [[BlSpace]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Memory Game",
        "story": []
      },
      "date": 1651788136381
    },
    {
      "item": {
        "type": "factory",
        "id": "707df9b8b6e1d7c6"
      },
      "id": "707df9b8b6e1d7c6",
      "type": "add",
      "date": 1651788152095
    },
    {
      "type": "edit",
      "id": "707df9b8b6e1d7c6",
      "item": {
        "type": "markdown",
        "id": "707df9b8b6e1d7c6",
        "text": "! Memory Game\n\n!! Introduction\n\nIn this tutorial we will build a memory game. In a memory game players need to find pairs of similar cards. In each round a player turns over two cards at a time. If the two cards show the same symbol they are removed and the player gets a point. If not, they are both flipped.\n\nThe following figure shows the game after the first selection of two cards. Faced-down cards are represented with a cross and turned cards with their number: +file://memoryExample0.png+\n\nThe following figure shows the same game after a few rounds. While this game can be played by multiple players, in this tutorial we will build a game with just one player: +file://memoryExample1.png+\n\nFirst, we will implement the game model: ${inputFile:01-memory-game-model.pillar}$\n\n"
      },
      "date": 1651788154201
    },
    {
      "type": "edit",
      "id": "707df9b8b6e1d7c6",
      "item": {
        "type": "markdown",
        "id": "707df9b8b6e1d7c6",
        "text": "\n\nIn this tutorial we will build a memory game. In a memory game players need to find pairs of similar cards. In each round a player turns over two cards at a time. If the two cards show the same symbol they are removed and the player gets a point. If not, they are both flipped.\n\nThe following figure shows the game after the first selection of two cards. Faced-down cards are represented with a cross and turned cards with their number: +file://memoryExample0.png+\n\nThe following figure shows the same game after a few rounds. While this game can be played by multiple players, in this tutorial we will build a game with just one player: +file://memoryExample1.png+\n\nFirst, we will implement the game model: ${inputFile:01-memory-game-model.pillar}$\n\n"
      },
      "date": 1651788159757
    },
    {
      "item": {
        "type": "factory",
        "id": "d325acb58fb1f402"
      },
      "id": "d325acb58fb1f402",
      "type": "add",
      "after": "707df9b8b6e1d7c6",
      "date": 1652037756373
    },
    {
      "type": "edit",
      "id": "d325acb58fb1f402",
      "item": {
        "type": "pagefold",
        "id": "d325acb58fb1f402",
        "text": "~"
      },
      "date": 1652037762400
    },
    {
      "item": {
        "type": "factory",
        "id": "63a99e2ea9416272"
      },
      "id": "63a99e2ea9416272",
      "type": "add",
      "after": "d325acb58fb1f402",
      "date": 1652037766326
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "paragraph",
        "id": "63a99e2ea9416272",
        "text": "\nCHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, [no date]. Building a memory game with Bloc. . P. 36. \n"
      },
      "date": 1652037768316
    },
    {
      "item": {
        "type": "factory",
        "id": "bd2f901453451232"
      },
      "id": "bd2f901453451232",
      "type": "add",
      "after": "63a99e2ea9416272",
      "date": 1652037820970
    },
    {
      "type": "edit",
      "id": "bd2f901453451232",
      "item": {
        "type": "markdown",
        "id": "bd2f901453451232",
        "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. In this tutorial you will build a memory game. We provide the model and focus on creating the UI of the game."
      },
      "date": 1652037826440
    },
    {
      "type": "edit",
      "id": "bd2f901453451232",
      "item": {
        "type": "markdown",
        "id": "bd2f901453451232",
        "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. \n> In this tutorial you will build a memory game. We provide the model and focus on creating the UI of the game."
      },
      "date": 1652037842873
    },
    {
      "type": "edit",
      "id": "bd2f901453451232",
      "item": {
        "type": "markdown",
        "id": "bd2f901453451232",
        "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. \n>\n> In this tutorial you will build a memory game. We provide the model and focus on creating the UI of the game."
      },
      "date": 1652037848213
    },
    {
      "type": "edit",
      "id": "bd2f901453451232",
      "item": {
        "type": "markdown",
        "id": "bd2f901453451232",
        "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. \n>\n> In this tutorial you will build a [[memory game]]. We provide the model and focus on creating the UI of the game."
      },
      "date": 1652037859956
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "paragraph",
        "id": "63a99e2ea9416272",
        "text": "CHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, [no date]. Building a memory game with Bloc. . P. 36. \n"
      },
      "date": 1652037865178
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "paragraph",
        "id": "63a99e2ea9416272",
        "text": "\nCHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with Bloc. Online. 2017. Available from: https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf\n"
      },
      "date": 1652038103638
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "markdown",
        "id": "63a99e2ea9416272",
        "text": "\nCHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with Bloc. Online. 2017. Available from: https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf\n"
      },
      "date": 1652038110587
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "markdown",
        "id": "63a99e2ea9416272",
        "text": "CHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with Bloc. [ https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf pdf]\n"
      },
      "date": 1652038136856
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "markdown",
        "id": "63a99e2ea9416272",
        "text": "CHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with Bloc. [https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf pdf]\n"
      },
      "date": 1652038143428
    },
    {
      "item": {
        "type": "factory",
        "id": "8c673c9070de45e8"
      },
      "id": "8c673c9070de45e8",
      "type": "add",
      "after": "bd2f901453451232",
      "date": 1652038211753
    },
    {
      "type": "edit",
      "id": "8c673c9070de45e8",
      "item": {
        "type": "paragraph",
        "id": "8c673c9070de45e8",
        "text": "See [[BlSpace]]."
      },
      "date": 1652038222976
    },
    {
      "type": "edit",
      "id": "63a99e2ea9416272",
      "item": {
        "type": "markdown",
        "id": "63a99e2ea9416272",
        "text": "CHIȘ, Andrei, DUCASSE, Stéphane and SYREL, Aliaksei, 2017. Building a memory game with [[Bloc]]. [https://files.pharo.org/books-pdfs/booklet-Bloc/2017-11-09-memorygame.pdf pdf]\n"
      },
      "date": 1652038760533
    },
    {
      "type": "edit",
      "id": "707df9b8b6e1d7c6",
      "item": {
        "type": "markdown",
        "id": "707df9b8b6e1d7c6",
        "text": "We will build a memory game. In a memory game players need to find pairs of similar cards. In each round a player turns over two cards at a time. If the two cards show the same symbol they are removed and the player gets a point. If not, they are both flipped.\n\n\nThe following figure shows the game after the first selection of two cards. Faced-down cards are represented with a cross and turned cards with their number: +file://memoryExample0.png+\n\nThe following figure shows the same game after a few rounds. While this game can be played by multiple players, in this tutorial we will build a game with just one player: +file://memoryExample1.png+\n\nFirst, we will implement the game model: ${inputFile:01-memory-game-model.pillar}$\n\n"
      },
      "date": 1703001898843
    },
    {
      "type": "edit",
      "id": "707df9b8b6e1d7c6",
      "item": {
        "type": "markdown",
        "id": "707df9b8b6e1d7c6",
        "text": "We will build a memory game. In a memory game players need to find pairs of similar cards. In each round a player turns over two cards at a time. If the two cards show the same symbol they are removed and the player gets a point. If not, they are both flipped."
      },
      "date": 1703001939246
    },
    {
      "type": "add",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "after": "707df9b8b6e1d7c6",
      "date": 1703001941263
    },
    {
      "type": "add",
      "id": "0596281702eccc29",
      "item": {
        "type": "markdown",
        "id": "0596281702eccc29",
        "text": "# The Card Element"
      },
      "after": "043d8dce68ab4773",
      "date": 1703001943067
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703001946832
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703001953965
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703001968792
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703001987022
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703002026667
    },
    {
      "type": "edit",
      "id": "043d8dce68ab4773",
      "item": {
        "type": "markdown",
        "id": "043d8dce68ab4773",
        "text": "We will build the visual appearance of the cards step by step. In [[Bloc]], visual objects are called elements, which are usually subclasses of `[[BlElement]]`, the inheritance tree root. [https://book.gtoolkit.com/building-the-memory-game-graphical-element-53lj10cpol7ee2fpyyjfzhs2o page]"
      },
      "date": 1703002030694
    },
    {
      "type": "edit",
      "id": "0596281702eccc29",
      "item": {
        "type": "markdown",
        "id": "0596281702eccc29",
        "text": "# The Card Element"
      },
      "date": 1703002076926
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called CardElement, representing a card will subclass BlElement and have a reference to a card model: "
      },
      "id": "ee663d696325a7cb",
      "type": "add",
      "after": "8c673c9070de45e8",
      "date": 1703002085243
    },
    {
      "id": "ee663d696325a7cb",
      "type": "move",
      "order": [
        "707df9b8b6e1d7c6",
        "043d8dce68ab4773",
        "0596281702eccc29",
        "ee663d696325a7cb",
        "d325acb58fb1f402",
        "63a99e2ea9416272",
        "bd2f901453451232",
        "8c673c9070de45e8"
      ],
      "date": 1703002087405,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "ee663d696325a7cb",
      "item": {
        "type": "paragraph",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called CardElement, representing a card will subclass BlElement and have a reference to a card model: "
      },
      "date": 1703002090400
    },
    {
      "type": "fork",
      "date": 1703002106910
    },
    {
      "type": "edit",
      "id": "ee663d696325a7cb",
      "item": {
        "type": "paragraph",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called CardElement, representing a card will subclass BlElement and have a reference to a card model:"
      },
      "date": 1703002161815
    },
    {
      "type": "add",
      "id": "cef77237b0f3909c",
      "item": {
        "type": "paragraph",
        "id": "cef77237b0f3909c",
        "text": "[…]"
      },
      "after": "ee663d696325a7cb",
      "date": 1703002164916
    },
    {
      "type": "edit",
      "id": "ee663d696325a7cb",
      "item": {
        "type": "paragraph",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called `[[CardElement]]`, representing a card will subclass BlElement and have a reference to a card model:"
      },
      "date": 1703002186919
    },
    {
      "type": "edit",
      "id": "ee663d696325a7cb",
      "item": {
        "type": "markdown",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called `[[CardElement]]`, representing a card will subclass BlElement and have a reference to a card model:"
      },
      "date": 1703002202904
    },
    {
      "type": "edit",
      "id": "bd2f901453451232",
      "item": {
        "type": "markdown",
        "id": "bd2f901453451232",
        "text": "> Bloc’s design is getting stable and this book is a first tutorial on Bloc. Some elements may change such as the name of certain methods, but most of these changes will be minor. \n>\n> In this tutorial you will build a memory game. We provide the model and focus on creating the UI of the game."
      },
      "date": 1703002222713
    },
    {
      "type": "add",
      "id": "bbfad6a35e499991",
      "item": {
        "type": "paragraph",
        "id": "bbfad6a35e499991",
        "text": "# Drawing a Card "
      },
      "after": "cef77237b0f3909c",
      "date": 1703002244470
    },
    {
      "type": "edit",
      "id": "bbfad6a35e499991",
      "item": {
        "type": "paragraph",
        "id": "bbfad6a35e499991",
        "text": "# Drawing a Card"
      },
      "date": 1703002255045
    },
    {
      "type": "edit",
      "id": "bbfad6a35e499991",
      "item": {
        "type": "markdown",
        "id": "bbfad6a35e499991",
        "text": "# Drawing a Card"
      },
      "date": 1703002259361
    },
    {
      "type": "edit",
      "id": "a49c1a4a978f1177",
      "item": {
        "type": "paragraph",
        "id": "a49c1a4a978f1177",
        "text": "Our card has two sides, the back side and the face side, that need to be implemented. We implement them by composing two `[[BlElement]]` objects, one for the face, and the other the back. "
      },
      "date": 1703002285018
    },
    {
      "type": "edit",
      "id": "ee663d696325a7cb",
      "item": {
        "type": "markdown",
        "id": "ee663d696325a7cb",
        "text": "Our graphic element, called `[[CardElement]]`, representing a card will subclass `[[BlElement]]` and have a reference to a card model:"
      },
      "date": 1703002290118
    },
    {
      "type": "edit",
      "id": "a49c1a4a978f1177",
      "item": {
        "type": "markdown",
        "id": "a49c1a4a978f1177",
        "text": "Our card has two sides, the back side and the face side [⇒ [[Two-Sided Form]]], that need to be implemented. We implement them by composing two `[[BlElement]]` objects, one for the face, and the other the back. "
      },
      "date": 1703002317603
    },
    {
      "type": "edit",
      "id": "a49c1a4a978f1177",
      "item": {
        "type": "markdown",
        "id": "a49c1a4a978f1177",
        "text": "Our card has two sides, the back side and the face side [⇒ [[Two-Sided Form]]], that need to be implemented. We implement them by composing two `[[BlElement]]` objects, one for the face, and the other the back."
      },
      "date": 1703002340397
    },
    {
      "type": "add",
      "id": "99ca47c8fa70d5df",
      "item": {
        "type": "markdown",
        "id": "99ca47c8fa70d5df",
        "text": "[…]"
      },
      "after": "a49c1a4a978f1177",
      "date": 1703002340832
    }
  ]
}