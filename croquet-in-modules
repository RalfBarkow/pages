{
  "title": "Croquet in Modules",
  "story": [
    {
      "type": "paragraph",
      "id": "f3fc1cb2debaa571",
      "text": "We consider how Croquet might mix with ES6 modules."
    },
    {
      "type": "paragraph",
      "id": "f684e8ccee814ffa",
      "text": "It must have some access to the DOM that I don't pass in. For example, the swirly connecting animation. [https://discord.com/channels/694586717247635488/966071402526543924/1014573405221179392 discord]"
    },
    {
      "type": "paragraph",
      "id": "1d774a8c57472cb0",
      "text": "We append an export declaration after the minified croquet.js from the CDN. [https://unpkg.com/@croquet/croquet unpkg]"
    },
    {
      "type": "paragraph",
      "id": "55735f0c1e143539",
      "text": "We import croquet and the Model and View classes."
    },
    {
      "type": "assets",
      "id": "fc359a9bd9e55094",
      "text": "pages/super-collaborator/croquet-in-modules"
    },
    {
      "type": "paragraph",
      "id": "d0cb9ac16a165ae8",
      "text": "This works. What I don't understand is how this code in the count.js module can reach the div in the html?\n"
    },
    {
      "type": "code",
      "id": "55a236b321b59b28",
      "text": "  counterChanged() {\n    countDisplay.textContent = this.model.count;\n  }\n"
    },
    {
      "type": "paragraph",
      "id": "71ca422e6175947f",
      "text": "This is more about my misunderstanding of module scope than anything about Croquet."
    },
    {
      "type": "markdown",
      "id": "85bec5bafaafd43d",
      "text": "> HTML+JS is far from â€œpure.â€œ Any HTML element that has an id attribute is available globally to all JS in the page context. Even in a module all globals are still accessible."
    },
    {
      "type": "paragraph",
      "id": "4d7d7b89a5c51401",
      "text": "Wow. I have exploited this myself but thought I lost it when I use\n<script type=\"module\">"
    },
    {
      "type": "markdown",
      "id": "eb8df41c9eac2461",
      "text": "> Nope, still there ðŸ˜…"
    },
    {
      "type": "paragraph",
      "id": "b975dff37beb3c72",
      "text": "Hurray for the Croquet team for their (your) deep knowledge of html/js, and your willingness to share."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Croquet in Modules",
        "story": []
      },
      "date": 1661981791194
    },
    {
      "item": {
        "type": "factory",
        "id": "f3fc1cb2debaa571"
      },
      "id": "f3fc1cb2debaa571",
      "type": "add",
      "date": 1661981799222
    },
    {
      "type": "edit",
      "id": "f3fc1cb2debaa571",
      "item": {
        "type": "paragraph",
        "id": "f3fc1cb2debaa571",
        "text": "We consider how Croquet might mix with ES6 modules."
      },
      "date": 1661981826059
    },
    {
      "item": {
        "type": "factory",
        "id": "f684e8ccee814ffa"
      },
      "id": "f684e8ccee814ffa",
      "type": "add",
      "after": "f3fc1cb2debaa571",
      "date": 1661981856173
    },
    {
      "type": "edit",
      "id": "f684e8ccee814ffa",
      "item": {
        "type": "paragraph",
        "id": "f684e8ccee814ffa",
        "text": "It must have some access to the DOM that I don't pass in. For example, the swirly connecting animation."
      },
      "date": 1661981861040
    },
    {
      "type": "edit",
      "id": "f684e8ccee814ffa",
      "item": {
        "type": "paragraph",
        "id": "f684e8ccee814ffa",
        "text": "It must have some access to the DOM that I don't pass in. For example, the swirly connecting animation. [https://discord.com/channels/694586717247635488/966071402526543924/1014573405221179392 discord]"
      },
      "date": 1661981891842
    },
    {
      "item": {
        "type": "factory",
        "id": "fc359a9bd9e55094"
      },
      "id": "fc359a9bd9e55094",
      "type": "add",
      "after": "f684e8ccee814ffa",
      "date": 1661981912302
    },
    {
      "type": "edit",
      "id": "fc359a9bd9e55094",
      "item": {
        "type": "assets",
        "id": "fc359a9bd9e55094",
        "text": "pages/croquet-in-modules"
      },
      "date": 1661981918228
    },
    {
      "type": "edit",
      "id": "fc359a9bd9e55094",
      "item": {
        "type": "assets",
        "id": "fc359a9bd9e55094",
        "text": "pages/super-collaborator/croquet-in-modules"
      },
      "date": 1661981966173
    },
    {
      "item": {
        "type": "factory",
        "id": "1d774a8c57472cb0"
      },
      "id": "1d774a8c57472cb0",
      "type": "add",
      "after": "fc359a9bd9e55094",
      "date": 1661985002821
    },
    {
      "type": "edit",
      "id": "1d774a8c57472cb0",
      "item": {
        "type": "paragraph",
        "id": "1d774a8c57472cb0",
        "text": "We append an export line after the "
      },
      "date": 1661985031855
    },
    {
      "type": "edit",
      "id": "1d774a8c57472cb0",
      "item": {
        "type": "paragraph",
        "id": "1d774a8c57472cb0",
        "text": "We append an export declaration after the minified croquet.js from the CDN. "
      },
      "date": 1661985151322
    },
    {
      "type": "edit",
      "id": "1d774a8c57472cb0",
      "item": {
        "type": "paragraph",
        "id": "1d774a8c57472cb0",
        "text": "We append an export declaration after the minified croquet.js from the CDN. [https://unpkg.com/@croquet/croquet unpkg]"
      },
      "date": 1661985175037
    },
    {
      "id": "1d774a8c57472cb0",
      "type": "move",
      "order": [
        "f3fc1cb2debaa571",
        "f684e8ccee814ffa",
        "1d774a8c57472cb0",
        "fc359a9bd9e55094"
      ],
      "date": 1661985192261
    },
    {
      "type": "add",
      "id": "55735f0c1e143539",
      "item": {
        "type": "paragraph",
        "id": "55735f0c1e143539",
        "text": "We import croquet and the Model and View classes."
      },
      "after": "1d774a8c57472cb0",
      "date": 1661985305507
    },
    {
      "item": {
        "type": "factory",
        "id": "d0cb9ac16a165ae8"
      },
      "id": "d0cb9ac16a165ae8",
      "type": "add",
      "after": "fc359a9bd9e55094",
      "date": 1661985373059
    },
    {
      "type": "edit",
      "id": "d0cb9ac16a165ae8",
      "item": {
        "type": "paragraph",
        "id": "d0cb9ac16a165ae8",
        "text": "This works. What I don't understand is how this code in the count.js module can reach the div above?\n"
      },
      "date": 1661985390622
    },
    {
      "type": "add",
      "id": "55a236b321b59b28",
      "item": {
        "type": "paragraph",
        "id": "55a236b321b59b28",
        "text": "    counterChanged() {\n        countDisplay.textContent = this.model.count;\n    }\n"
      },
      "after": "d0cb9ac16a165ae8",
      "date": 1661985394541
    },
    {
      "type": "add",
      "id": "71ca422e6175947f",
      "item": {
        "type": "paragraph",
        "id": "71ca422e6175947f",
        "text": "This is more about my misunderstanding of module scope than anything about Croquet."
      },
      "after": "55a236b321b59b28",
      "date": 1661985397989
    },
    {
      "type": "edit",
      "id": "55a236b321b59b28",
      "item": {
        "type": "code",
        "id": "55a236b321b59b28",
        "text": "  counterChanged() {\n    countDisplay.textContent = this.model.count;\n  }\n"
      },
      "date": 1661985424122
    },
    {
      "type": "edit",
      "id": "d0cb9ac16a165ae8",
      "item": {
        "type": "paragraph",
        "id": "d0cb9ac16a165ae8",
        "text": "This works. What I don't understand is how this code in the count.js module can reach the div in the html?\n"
      },
      "date": 1661985451203
    },
    {
      "item": {
        "type": "factory",
        "id": "85bec5bafaafd43d"
      },
      "id": "85bec5bafaafd43d",
      "type": "add",
      "after": "71ca422e6175947f",
      "date": 1661985496985
    },
    {
      "type": "edit",
      "id": "85bec5bafaafd43d",
      "item": {
        "type": "markdown",
        "id": "85bec5bafaafd43d",
        "text": "> HTML+JS is far from â€œpure.â€œ Any HTML element that has an id attribute is available globally to all JS in the page context. Even in a module all globals are still accessible."
      },
      "date": 1661985504803
    },
    {
      "item": {
        "type": "factory",
        "id": "4d7d7b89a5c51401"
      },
      "id": "4d7d7b89a5c51401",
      "type": "add",
      "after": "85bec5bafaafd43d",
      "date": 1661985559742
    },
    {
      "type": "edit",
      "id": "4d7d7b89a5c51401",
      "item": {
        "type": "paragraph",
        "id": "4d7d7b89a5c51401",
        "text": "Wow. I have exploited this myself but thought I lost it when I use\n"
      },
      "date": 1661985564761
    },
    {
      "type": "edit",
      "id": "4d7d7b89a5c51401",
      "item": {
        "type": "paragraph",
        "id": "4d7d7b89a5c51401",
        "text": "Wow. I have exploited this myself but thought I lost it when I use\n<script type=\"module\">"
      },
      "date": 1661985572499
    },
    {
      "item": {
        "type": "factory",
        "id": "eb8df41c9eac2461"
      },
      "id": "eb8df41c9eac2461",
      "type": "add",
      "after": "4d7d7b89a5c51401",
      "date": 1661985604498
    },
    {
      "type": "edit",
      "id": "eb8df41c9eac2461",
      "item": {
        "type": "paragraph",
        "id": "eb8df41c9eac2461",
        "text": "Nope, still there ðŸ˜…\n"
      },
      "date": 1661985622660
    },
    {
      "type": "add",
      "id": "b975dff37beb3c72",
      "item": {
        "type": "paragraph",
        "id": "b975dff37beb3c72",
        "text": "Hurray for the Croquet team for their (your) deep knowledge of html/js, and your willingness to share."
      },
      "after": "eb8df41c9eac2461",
      "date": 1661985624005
    },
    {
      "type": "edit",
      "id": "eb8df41c9eac2461",
      "item": {
        "type": "markdown",
        "id": "eb8df41c9eac2461",
        "text": "> Nope, still there ðŸ˜…"
      },
      "date": 1661985636570
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1662381118545
    }
  ]
}