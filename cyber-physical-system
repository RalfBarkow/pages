{
  "title": "Cyber Physical System",
  "story": [
    {
      "type": "paragraph",
      "id": "207c21cdcff1cc72",
      "text": "Debugging Cyber-Physical Systems with Pharo"
    },
    {
      "type": "paragraph",
      "id": "9afe96e739beffb0",
      "text": "MARRA, Matteo, BOIX, Elisa Gonzalez, COSTIOU, Steven, KERBOEUF, Mickaël, PLANTEC, Alain, POLITO, Guillermo and DUCASSE, Stéphane, 2017. Debugging Cyber-Physical Systems with Pharo: An Experience Report. In: Proceedings of the 12th edition of the International Workshop on Smalltalk Technologies. Online. New York, NY, USA: Association for Computing Machinery. 4 September 2017. p. 1–10. [Accessed 24 April 2022]. IWST ’17. ISBN 978-1-4503-5554-4. DOI 10.1145/3139903.3139913. "
    },
    {
      "type": "markdown",
      "id": "55e1e948eebfabce",
      "text": "> Cyber-Physical Systems (CPS) integrate sensors and actuators to collect data and control entities in the physical world. Debugging CPS systems is hard due to the time-sensitive nature of a distributed applications combined with the lack of control on the surrounding physical environment. This makes bugs in CPS systems hard to reproduce and thus to fix. In this context, on-line debugging techniques are helpful because the debugger is connected to the device when an exception or crash occurs. This paper reports on our experiences on applying two different on-line debugging techniques for a CPS system: remote debugging using the Pharo remote debugger and our [[IDRA]] debugger. In contrast to traditional remote debugging, IDRA allows to on-line debug an application locally in another client machine by reproducing the runtime context where the bug manifested. Our qualitative evaluation shows that IDRA provides almost the same interaction capabilities than Pharo’s remote debugger and is less intrusive when performing hot-modifications. Our benchmarks also show that IDRA is significantly faster than the Pharo remote debugger, although it increases the amount of data transferred over the network.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Cyber Physical System",
        "story": []
      },
      "date": 1661448288945
    },
    {
      "item": {
        "type": "factory",
        "id": "207c21cdcff1cc72"
      },
      "id": "207c21cdcff1cc72",
      "type": "add",
      "date": 1661448290413
    },
    {
      "type": "edit",
      "id": "207c21cdcff1cc72",
      "item": {
        "type": "paragraph",
        "id": "207c21cdcff1cc72",
        "text": "Debugging Cyber-Physical Systems with Pharo"
      },
      "date": 1661448293550
    },
    {
      "item": {
        "type": "factory",
        "id": "9afe96e739beffb0"
      },
      "id": "9afe96e739beffb0",
      "type": "add",
      "after": "207c21cdcff1cc72",
      "date": 1661448330314
    },
    {
      "type": "edit",
      "id": "9afe96e739beffb0",
      "item": {
        "type": "paragraph",
        "id": "9afe96e739beffb0",
        "text": "\nMARRA, Matteo, BOIX, Elisa Gonzalez, COSTIOU, Steven, KERBOEUF, Mickaël, PLANTEC, Alain, POLITO, Guillermo and DUCASSE, Stéphane, 2017. Debugging Cyber-Physical Systems with Pharo: An Experience Report. In: Proceedings of the 12th edition of the International Workshop on Smalltalk Technologies. Online. New York, NY, USA: Association for Computing Machinery. 4 September 2017. p. 1–10. [Accessed 24 April 2022]. IWST ’17. ISBN 978-1-4503-5554-4. DOI 10.1145/3139903.3139913. Cyber-Physical Systems (CPS) integrate sensors and actuators to collect data and control entities in the physical world. Debugging CPS systems is hard due to the time-sensitive nature of a distributed applications combined with the lack of control on the surrounding physical environment. This makes bugs in CPS systems hard to reproduce and thus to fix. In this context, on-line debugging techniques are helpful because the debugger is connected to the device when an exception or crash occurs. This paper reports on our experiences on applying two different on-line debugging techniques for a CPS system: remote debugging using the Pharo remote debugger and our IDRA debugger. In contrast to traditional remote debugging, IDRA allows to on-line debug an application locally in another client machine by reproducing the runtime context where the bug manifested. Our qualitative evaluation shows that IDRA provides almost the same interaction capabilities than Pharo’s remote debugger and is less intrusive when performing hot-modifications. Our benchmarks also show that IDRA is significantly faster than the Pharo remote debugger, although it increases the amount of data transferred over the network.\n"
      },
      "date": 1661448333415
    },
    {
      "type": "edit",
      "id": "9afe96e739beffb0",
      "item": {
        "type": "paragraph",
        "id": "9afe96e739beffb0",
        "text": "MARRA, Matteo, BOIX, Elisa Gonzalez, COSTIOU, Steven, KERBOEUF, Mickaël, PLANTEC, Alain, POLITO, Guillermo and DUCASSE, Stéphane, 2017. Debugging Cyber-Physical Systems with Pharo: An Experience Report. In: Proceedings of the 12th edition of the International Workshop on Smalltalk Technologies. Online. New York, NY, USA: Association for Computing Machinery. 4 September 2017. p. 1–10. [Accessed 24 April 2022]. IWST ’17. ISBN 978-1-4503-5554-4. DOI 10.1145/3139903.3139913. "
      },
      "date": 1661448343609
    },
    {
      "type": "add",
      "id": "55e1e948eebfabce",
      "item": {
        "type": "paragraph",
        "id": "55e1e948eebfabce",
        "text": "> Cyber-Physical Systems (CPS) integrate sensors and actuators to collect data and control entities in the physical world. Debugging CPS systems is hard due to the time-sensitive nature of a distributed applications combined with the lack of control on the surrounding physical environment. This makes bugs in CPS systems hard to reproduce and thus to fix. In this context, on-line debugging techniques are helpful because the debugger is connected to the device when an exception or crash occurs. This paper reports on our experiences on applying two different on-line debugging techniques for a CPS system: remote debugging using the Pharo remote debugger and our IDRA debugger. In contrast to traditional remote debugging, IDRA allows to on-line debug an application locally in another client machine by reproducing the runtime context where the bug manifested. Our qualitative evaluation shows that IDRA provides almost the same interaction capabilities than Pharo’s remote debugger and is less intrusive when performing hot-modifications. Our benchmarks also show that IDRA is significantly faster than the Pharo remote debugger, although it increases the amount of data transferred over the network.\n"
      },
      "after": "9afe96e739beffb0",
      "date": 1661448345934
    },
    {
      "type": "edit",
      "id": "55e1e948eebfabce",
      "item": {
        "type": "markdown",
        "id": "55e1e948eebfabce",
        "text": "> Cyber-Physical Systems (CPS) integrate sensors and actuators to collect data and control entities in the physical world. Debugging CPS systems is hard due to the time-sensitive nature of a distributed applications combined with the lack of control on the surrounding physical environment. This makes bugs in CPS systems hard to reproduce and thus to fix. In this context, on-line debugging techniques are helpful because the debugger is connected to the device when an exception or crash occurs. This paper reports on our experiences on applying two different on-line debugging techniques for a CPS system: remote debugging using the Pharo remote debugger and our IDRA debugger. In contrast to traditional remote debugging, IDRA allows to on-line debug an application locally in another client machine by reproducing the runtime context where the bug manifested. Our qualitative evaluation shows that IDRA provides almost the same interaction capabilities than Pharo’s remote debugger and is less intrusive when performing hot-modifications. Our benchmarks also show that IDRA is significantly faster than the Pharo remote debugger, although it increases the amount of data transferred over the network.\n"
      },
      "date": 1661448347303
    },
    {
      "type": "edit",
      "id": "55e1e948eebfabce",
      "item": {
        "type": "markdown",
        "id": "55e1e948eebfabce",
        "text": "> Cyber-Physical Systems (CPS) integrate sensors and actuators to collect data and control entities in the physical world. Debugging CPS systems is hard due to the time-sensitive nature of a distributed applications combined with the lack of control on the surrounding physical environment. This makes bugs in CPS systems hard to reproduce and thus to fix. In this context, on-line debugging techniques are helpful because the debugger is connected to the device when an exception or crash occurs. This paper reports on our experiences on applying two different on-line debugging techniques for a CPS system: remote debugging using the Pharo remote debugger and our [[IDRA]] debugger. In contrast to traditional remote debugging, IDRA allows to on-line debug an application locally in another client machine by reproducing the runtime context where the bug manifested. Our qualitative evaluation shows that IDRA provides almost the same interaction capabilities than Pharo’s remote debugger and is less intrusive when performing hot-modifications. Our benchmarks also show that IDRA is significantly faster than the Pharo remote debugger, although it increases the amount of data transferred over the network.\n"
      },
      "date": 1661448386620
    }
  ]
}