{
  "title": "AST",
  "story": [
    {
      "type": "markdown",
      "id": "870395a9d71f3761",
      "text": "An [[annotate]]d AST is expanded, compiled and executed on the fly thanks to the [[ReflectiveMethod]]/[[CompiledMethod]] [[Twin]]. \n"
    },
    {
      "type": "reference",
      "id": "dee4471736e8c84a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "doppelgnger",
      "title": "Doppelgänger",
      "text": "z#1958"
    },
    {
      "type": "paragraph",
      "id": "064e782cfb4dfb21",
      "text": "⇒ [[Doppelgänger]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "AST",
        "story": []
      },
      "date": 1654861325259
    },
    {
      "id": "870395a9d71f3761",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "870395a9d71f3761",
        "text": "Metalinks are used to annotate other [[AST]] nodes. An annotated AST is expanded, compiled and executed on the fly thanks to the ReflectiveMethod/CompiledMethod Twin. \n\nFor a given node metalinks can be put at different positions:\n\n- before: The metalink is executed before the execution of the node.  \n- instead: The metalink is executed insted the node.\n- after: The metalink is executed after the execution of the node.\n(... later: onError,  Do we have an #around instead of #instead?)\n\nNot all the nodes provide all the position. For example, literals don't provide onError and onSuccess positions.\n\nmetaObject: The target object to call\nselector: send this selector\narguments\n\ncondition:  turn link on/off \nlevel: Meta Level at which the link is active\n------ Examples -----\n\nMetaLink new \n\tmetaObject: Halt;\n\tselector: #now.\n\t\nMetaObject new \n\tmetaObject: [ self halt ];\n\tselector: #value."
      },
      "date": 1654861339109
    },
    {
      "type": "edit",
      "id": "870395a9d71f3761",
      "item": {
        "type": "markdown",
        "id": "870395a9d71f3761",
        "text": "An annotated AST is expanded, compiled and executed on the fly thanks to the ReflectiveMethod/CompiledMethod Twin. \n"
      },
      "date": 1654861358467
    },
    {
      "type": "edit",
      "id": "870395a9d71f3761",
      "item": {
        "type": "markdown",
        "id": "870395a9d71f3761",
        "text": "An annotated AST is expanded, compiled and executed on the fly thanks to the [[ReflectiveMethod]]/[[CompiledMethod]] [[Twin]]. \n"
      },
      "date": 1654861399893
    },
    {
      "item": {
        "type": "factory",
        "id": "064e782cfb4dfb21"
      },
      "id": "064e782cfb4dfb21",
      "type": "add",
      "after": "870395a9d71f3761",
      "date": 1673521935004
    },
    {
      "type": "edit",
      "id": "064e782cfb4dfb21",
      "item": {
        "type": "paragraph",
        "id": "064e782cfb4dfb21",
        "text": "⇒ [[Doppelgänger]]"
      },
      "date": 1673521952596
    },
    {
      "item": {
        "type": "factory",
        "id": "dee4471736e8c84a"
      },
      "id": "dee4471736e8c84a",
      "type": "add",
      "after": "064e782cfb4dfb21",
      "date": 1673521964950
    },
    {
      "type": "edit",
      "id": "dee4471736e8c84a",
      "item": {
        "type": "reference",
        "id": "dee4471736e8c84a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "doppelgnger",
        "title": "Doppelgänger",
        "text": "z#1958"
      },
      "date": 1673521971041
    },
    {
      "id": "dee4471736e8c84a",
      "type": "move",
      "order": [
        "870395a9d71f3761",
        "dee4471736e8c84a",
        "064e782cfb4dfb21"
      ],
      "date": 1673521977199
    },
    {
      "type": "edit",
      "id": "870395a9d71f3761",
      "item": {
        "type": "markdown",
        "id": "870395a9d71f3761",
        "text": "An [[annotate]]d AST is expanded, compiled and executed on the fly thanks to the [[ReflectiveMethod]]/[[CompiledMethod]] [[Twin]]. \n"
      },
      "date": 1678623740496
    }
  ]
}