{
  "title": "Parse Page Paragraphs",
  "story": [
    {
      "type": "paragraph",
      "id": "702127fad3ec880f",
      "text": "We refactor the [[Speed Bot]] code. See [[Story Telling]]"
    },
    {
      "type": "paragraph",
      "id": "5aa9624700f4dd96",
      "text": "We intend to parse the natural language data of paragraphs."
    },
    {
      "type": "paragraph",
      "id": "d5c469074553cb08",
      "text": "We are only secondarily interested in links. First and foremost, we want to visualize an [[AST]] as a ghost page and see if the verbs it contains already exist as wiki pages. Our aim is to view the sentences of the paragraphs as graphs in order to be able to search for paragraphs with similar graphs/sentences. See [[recommend]]"
    },
    {
      "type": "markdown",
      "id": "bb8ae062390db8fb",
      "text": "We plan to refactor the `window.dostart` function. See below."
    },
    {
      "type": "reference",
      "id": "3a035be472e997f2",
      "site": "wiki.ralfbarkow.ch",
      "slug": "parse-page-paragraphs",
      "title": "Parse Page Paragraphs",
      "text": "?"
    },
    {
      "type": "frame",
      "id": "3740343908300b7c",
      "text": "//wiki.ralfbarkow.ch/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 75"
    },
    {
      "type": "assets",
      "id": "0fd7bec00f963803",
      "text": "pages/parse-page-paragraphs"
    },
    {
      "type": "paragraph",
      "id": "b2dd78abe2750e8f",
      "text": "The first modified version of dostart [https://github.com/RalfBarkow/assets/commit/bfcbc9f13860e87800e462d2b5601a15381b28bf commit] [https://github.com/RalfBarkow/assets/blob/bfcbc9f13860e87800e462d2b5601a15381b28bf/pages/parse-page-paragraphs/speed-bot.html#L114-L117 code] iterates over each paragraph in the pick.page.story array and extracts the links from each paragraph using the visit function. If links are found, it proceeds with the same logic as before to fetch and process the next page. This ensures that every paragraph of the page is parsed for links, allowing for a more comprehensive traversal of the site's content. (ChatGPT 3.5)"
    },
    {
      "type": "paragraph",
      "id": "0eca98fd9bd1c095",
      "text": "We add a console.log to see the Paragraphs."
    },
    {
      "type": "image",
      "id": "ab8a1d2c5a543552",
      "text": "console.log('Paragraphs: ', paragraphs);",
      "size": "wide",
      "width": 430,
      "height": 261,
      "url": "/assets/plugins/image/20c75fed180e4b523a60287ad5b9e715.jpg"
    },
    {
      "type": "markdown",
      "id": "d4c20e44a9504fdb",
      "text": "In the next refactoring step, we extract the `filterParagraphs(page)` function. [https://github.com/RalfBarkow/assets/commit/a3a0d1018d8a3d157c8da8c67ba335b6df6b19cc commit]"
    },
    {
      "type": "code",
      "id": "8365bdff13e1fe44",
      "text": "function filterParagraphs(page) {\n     return page.story.filter(item => item.type === 'paragraph');\n "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Parse Page Paragraphs",
        "story": []
      },
      "date": 1708585707961
    },
    {
      "item": {
        "type": "factory",
        "id": "0fd7bec00f963803"
      },
      "id": "0fd7bec00f963803",
      "type": "add",
      "date": 1708585709897
    },
    {
      "type": "edit",
      "id": "0fd7bec00f963803",
      "item": {
        "type": "assets",
        "id": "0fd7bec00f963803",
        "text": "pages/parse-page-paragraphs"
      },
      "date": 1708585726146
    },
    {
      "id": "702127fad3ec880f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "702127fad3ec880f",
        "text": "We refactor the [[Speed Bot]] code. See [[Story Telling]]"
      },
      "attribution": {
        "page": "2024-02-22"
      },
      "date": 1708585838359
    },
    {
      "item": {
        "type": "factory",
        "id": "3740343908300b7c"
      },
      "id": "3740343908300b7c",
      "type": "add",
      "after": "0fd7bec00f963803",
      "date": 1708585970783
    },
    {
      "type": "edit",
      "id": "3740343908300b7c",
      "item": {
        "type": "frame",
        "id": "3740343908300b7c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/story-telling/speed-bot.html\nHEIGHT 75"
      },
      "date": 1708585976391
    },
    {
      "type": "edit",
      "id": "3740343908300b7c",
      "item": {
        "type": "frame",
        "id": "3740343908300b7c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 75"
      },
      "date": 1708585995831
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1708586067739
    },
    {
      "item": {
        "type": "factory",
        "id": "ab8a1d2c5a543552"
      },
      "id": "ab8a1d2c5a543552",
      "type": "add",
      "after": "3740343908300b7c",
      "date": 1708586864581
    },
    {
      "type": "edit",
      "id": "ab8a1d2c5a543552",
      "item": {
        "type": "image",
        "id": "ab8a1d2c5a543552",
        "text": "console.log('Paragraphs: ', paragraphs);",
        "size": "wide",
        "width": 430,
        "height": 261,
        "url": "/assets/plugins/image/20c75fed180e4b523a60287ad5b9e715.jpg"
      },
      "date": 1708586912444
    },
    {
      "item": {
        "type": "factory",
        "id": "b2dd78abe2750e8f"
      },
      "id": "b2dd78abe2750e8f",
      "type": "add",
      "after": "ab8a1d2c5a543552",
      "date": 1708587612137
    },
    {
      "type": "edit",
      "id": "b2dd78abe2750e8f",
      "item": {
        "type": "paragraph",
        "id": "b2dd78abe2750e8f",
        "text": "This modified version of dostart iterates over each paragraph in the pick.page.story array and extracts the links from each paragraph using the visit function. If links are found, it proceeds with the same logic as before to fetch and process the next page. This ensures that every paragraph of the page is parsed for links, allowing for a more comprehensive traversal of the site's content. (ChatGPT 3.5)"
      },
      "date": 1708587619862
    },
    {
      "item": {
        "type": "factory",
        "id": "db7075b19fd4ec9e"
      },
      "id": "db7075b19fd4ec9e",
      "type": "add",
      "after": "b2dd78abe2750e8f",
      "date": 1708587647577
    },
    {
      "id": "db7075b19fd4ec9e",
      "type": "move",
      "order": [
        "702127fad3ec880f",
        "0fd7bec00f963803",
        "3740343908300b7c",
        "ab8a1d2c5a543552",
        "db7075b19fd4ec9e",
        "b2dd78abe2750e8f"
      ],
      "date": 1708587653003
    },
    {
      "type": "edit",
      "id": "db7075b19fd4ec9e",
      "item": {
        "type": "code",
        "id": "db7075b19fd4ec9e",
        "text": "modified   pages/parse-page-paragraphs/speed-bot.html\n@@ -111,11 +111,7 @@ window.dostart = async function (event) {\n      try {\n          while (Date.now() < done) {\n     let remain = Math.ceil((done - Date.now())/1000)\n-\n-             let paragraphs = pick.page.story.filter(item => item.type === 'paragraph');\n-             console.log('Paragraphs: ', paragraphs);\n-             for (let paragraph of paragraphs) {\n-                 let links = visit(pick.page).filter(title => !seen.has(title))\n+    let links = visit(pick.page).filter(title => !seen.has(title))\n     if (links.length) {\n       let link = any(links)\n       seen.add(link)\n@@ -138,7 +134,6 @@ window.dostart = async function (event) {\n       pick = any(all) // can't find new link on page\n     }\n   }\n-         }\n }\n catch(err) {\n   window.result.innerHTML += "
      },
      "date": 1708587661777
    },
    {
      "type": "remove",
      "id": "db7075b19fd4ec9e",
      "date": 1708589392609
    },
    {
      "type": "edit",
      "id": "b2dd78abe2750e8f",
      "item": {
        "type": "paragraph",
        "id": "b2dd78abe2750e8f",
        "text": "This modified version of dostart [https://github.com/RalfBarkow/assets/commit/bfcbc9f13860e87800e462d2b5601a15381b28bf commit] iterates over each paragraph in the pick.page.story array and extracts the links from each paragraph using the visit function. If links are found, it proceeds with the same logic as before to fetch and process the next page. This ensures that every paragraph of the page is parsed for links, allowing for a more comprehensive traversal of the site's content. (ChatGPT 3.5)"
      },
      "date": 1708589434405
    },
    {
      "type": "edit",
      "id": "b2dd78abe2750e8f",
      "item": {
        "type": "paragraph",
        "id": "b2dd78abe2750e8f",
        "text": "This modified version of dostart [https://github.com/RalfBarkow/assets/commit/bfcbc9f13860e87800e462d2b5601a15381b28bf commit] [https://github.com/RalfBarkow/assets/blob/bfcbc9f13860e87800e462d2b5601a15381b28bf/pages/parse-page-paragraphs/speed-bot.html#L114-L117 code] iterates over each paragraph in the pick.page.story array and extracts the links from each paragraph using the visit function. If links are found, it proceeds with the same logic as before to fetch and process the next page. This ensures that every paragraph of the page is parsed for links, allowing for a more comprehensive traversal of the site's content. (ChatGPT 3.5)"
      },
      "date": 1708589537415
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1708589636082
    },
    {
      "type": "add",
      "id": "5aa9624700f4dd96",
      "item": {
        "type": "paragraph",
        "id": "5aa9624700f4dd96",
        "text": "We intent to parse the natural language data of paragraphs."
      },
      "after": "702127fad3ec880f",
      "date": 1708590147153
    },
    {
      "type": "edit",
      "id": "5aa9624700f4dd96",
      "item": {
        "type": "paragraph",
        "id": "5aa9624700f4dd96",
        "text": "We intend to parse the natural language data of paragraphs."
      },
      "date": 1708590160172
    },
    {
      "id": "3740343908300b7c",
      "type": "move",
      "order": [
        "702127fad3ec880f",
        "5aa9624700f4dd96",
        "3740343908300b7c",
        "0fd7bec00f963803",
        "ab8a1d2c5a543552",
        "b2dd78abe2750e8f"
      ],
      "date": 1708590170296
    },
    {
      "id": "b2dd78abe2750e8f",
      "type": "move",
      "order": [
        "702127fad3ec880f",
        "5aa9624700f4dd96",
        "3740343908300b7c",
        "0fd7bec00f963803",
        "b2dd78abe2750e8f",
        "ab8a1d2c5a543552"
      ],
      "date": 1708590201266
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1708590473019
    },
    {
      "type": "add",
      "id": "d5c469074553cb08",
      "item": {
        "type": "paragraph",
        "id": "d5c469074553cb08",
        "text": "We are only secondarily interested in links. First and foremost, we want to visualize an AST as a ghost page and see if the verbs it contains already exist as wiki pages. Our aim is to view the sentences of the paragraphs as graphs in order to be able to search for paragraphs with similar graphs/sentences."
      },
      "after": "5aa9624700f4dd96",
      "date": 1708590481859
    },
    {
      "type": "edit",
      "id": "d5c469074553cb08",
      "item": {
        "type": "paragraph",
        "id": "d5c469074553cb08",
        "text": "We are only secondarily interested in links. First and foremost, we want to visualize an [[AST]] as a ghost page and see if the verbs it contains already exist as wiki pages. Our aim is to view the sentences of the paragraphs as graphs in order to be able to search for paragraphs with similar graphs/sentences."
      },
      "date": 1708590502896
    },
    {
      "id": "3a035be472e997f2",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "3a035be472e997f2",
        "site": "wiki.ralfbarkow.ch",
        "slug": "parse-page-paragraphs",
        "title": "Parse Page Paragraphs",
        "text": "?"
      },
      "after": "d5c469074553cb08",
      "attribution": {
        "page": "scratch"
      },
      "date": 1708591494802
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1708591565457
    },
    {
      "type": "add",
      "id": "bb8ae062390db8fb",
      "item": {
        "type": "paragraph",
        "id": "bb8ae062390db8fb",
        "text": "We plan to refactor the `window.dostart` function. See below."
      },
      "after": "d5c469074553cb08",
      "date": 1708604425462
    },
    {
      "type": "edit",
      "id": "bb8ae062390db8fb",
      "item": {
        "type": "markdown",
        "id": "bb8ae062390db8fb",
        "text": "We plan to refactor the `window.dostart` function. See below."
      },
      "date": 1708604427563
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1708604881210
    },
    {
      "item": {
        "type": "factory",
        "id": "8365bdff13e1fe44"
      },
      "id": "8365bdff13e1fe44",
      "type": "add",
      "after": "ab8a1d2c5a543552",
      "date": 1708605027443
    },
    {
      "type": "edit",
      "id": "8365bdff13e1fe44",
      "item": {
        "type": "code",
        "id": "8365bdff13e1fe44",
        "text": "function filterParagraphs(page) {\n     return page.story.filter(item => item.type === 'paragraph');\n "
      },
      "date": 1708605056637
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1708605130391
    },
    {
      "type": "edit",
      "id": "b2dd78abe2750e8f",
      "item": {
        "type": "paragraph",
        "id": "b2dd78abe2750e8f",
        "text": "The first modified version of dostart [https://github.com/RalfBarkow/assets/commit/bfcbc9f13860e87800e462d2b5601a15381b28bf commit] [https://github.com/RalfBarkow/assets/blob/bfcbc9f13860e87800e462d2b5601a15381b28bf/pages/parse-page-paragraphs/speed-bot.html#L114-L117 code] iterates over each paragraph in the pick.page.story array and extracts the links from each paragraph using the visit function. If links are found, it proceeds with the same logic as before to fetch and process the next page. This ensures that every paragraph of the page is parsed for links, allowing for a more comprehensive traversal of the site's content. (ChatGPT 3.5)"
      },
      "date": 1708606591556
    },
    {
      "type": "add",
      "id": "0eca98fd9bd1c095",
      "item": {
        "type": "paragraph",
        "id": "0eca98fd9bd1c095",
        "text": "We add a console.log to see the Paragraphs."
      },
      "after": "b2dd78abe2750e8f",
      "date": 1708606741045
    },
    {
      "item": {
        "type": "factory",
        "id": "d4c20e44a9504fdb"
      },
      "id": "d4c20e44a9504fdb",
      "type": "add",
      "after": "8365bdff13e1fe44",
      "date": 1708606863603
    },
    {
      "id": "d4c20e44a9504fdb",
      "type": "move",
      "order": [
        "702127fad3ec880f",
        "5aa9624700f4dd96",
        "d5c469074553cb08",
        "bb8ae062390db8fb",
        "3a035be472e997f2",
        "3740343908300b7c",
        "0fd7bec00f963803",
        "b2dd78abe2750e8f",
        "0eca98fd9bd1c095",
        "ab8a1d2c5a543552",
        "d4c20e44a9504fdb",
        "8365bdff13e1fe44"
      ],
      "date": 1708606865368
    },
    {
      "type": "edit",
      "id": "d4c20e44a9504fdb",
      "item": {
        "type": "paragraph",
        "id": "d4c20e44a9504fdb",
        "text": "In the next refactoring step, we extract the `filterParagraphs(page)` function."
      },
      "date": 1708606882274
    },
    {
      "type": "edit",
      "id": "d4c20e44a9504fdb",
      "item": {
        "type": "markdown",
        "id": "d4c20e44a9504fdb",
        "text": "In the next refactoring step, we extract the `filterParagraphs(page)` function."
      },
      "date": 1708606884401
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1708606941342
    },
    {
      "type": "edit",
      "id": "d5c469074553cb08",
      "item": {
        "type": "paragraph",
        "id": "d5c469074553cb08",
        "text": "We are only secondarily interested in links. First and foremost, we want to visualize an [[AST]] as a ghost page and see if the verbs it contains already exist as wiki pages. Our aim is to view the sentences of the paragraphs as graphs in order to be able to search for paragraphs with similar graphs/sentences. See [[recommend]]"
      },
      "date": 1708606999916
    },
    {
      "type": "edit",
      "id": "d4c20e44a9504fdb",
      "item": {
        "type": "markdown",
        "id": "d4c20e44a9504fdb",
        "text": "In the next refactoring step, we extract the `filterParagraphs(page)` function. [https://github.com/RalfBarkow/assets/commit/a3a0d1018d8a3d157c8da8c67ba335b6df6b19cc commit]"
      },
      "date": 1708609265102
    }
  ]
}