{
  "title": "Complex Values in Smalltalk",
  "story": [
    {
      "type": "markdown",
      "id": "2158be7b256b4326",
      "text": "T. J. Schrader and C. Haider, “Complex values in Smalltalk,” in Proceedings of the International Workshop on Smalltalk Technologies - IWST ’09, Brest, France, 2009, p. 126. doi: 10.1145/1735935.1735957.\n\n"
    },
    {
      "type": "markdown",
      "id": "bb5c95f22687cb39",
      "text": "> **Abstract**. Distinguishing between stateful objects and Values has long been recognized as fruitful. Values are universal context free abstractions that prevent side-effects and allow for a functional programming style. Though object-oriented programming languages provide simple Values like Integer and String, more complex Values are usually not supported. We show how to model complex structures as Values in Smalltalk, which allows for a simple and versatile implementation. The resulting Smalltalk systems are simple, clear and easily testable."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Complex Values in Smalltalk",
        "story": []
      },
      "date": 1629956789924
    },
    {
      "item": {
        "type": "factory",
        "id": "242b4f0f1e28ee75"
      },
      "id": "242b4f0f1e28ee75",
      "type": "add",
      "date": 1629956791946
    },
    {
      "type": "remove",
      "id": "242b4f0f1e28ee75",
      "date": 1629956795175
    },
    {
      "item": {
        "type": "factory",
        "id": "2158be7b256b4326"
      },
      "id": "2158be7b256b4326",
      "type": "add",
      "date": 1629956799968
    },
    {
      "type": "edit",
      "id": "2158be7b256b4326",
      "item": {
        "type": "markdown",
        "id": "2158be7b256b4326",
        "text": "> **Abstract**. Distinguishing between stateful objects and Values has long been recognized as fruitful. Values are universal context free abstractions that prevent side- effects and allow for a functional programming style. Though ob ject-oriented programming languages pro- vide simple Values like Integer and String, more com- plex Values are usually not supported. We show how to model complex structures as Values in Smalltalk, which allows for a simple and versatile implementation. The resulting Smalltalk systems are simple, clear and easily testable."
      },
      "date": 1629956812517
    },
    {
      "type": "edit",
      "id": "2158be7b256b4326",
      "item": {
        "type": "markdown",
        "id": "2158be7b256b4326",
        "text": "[1]T. J. Schrader and C. Haider, “Complex values in Smalltalk,” in Proceedings of the International Workshop on Smalltalk Technologies - IWST ’09, Brest, France, 2009, p. 126. doi: 10.1145/1735935.1735957.\n\n"
      },
      "date": 1629956841385
    },
    {
      "type": "add",
      "id": "bb5c95f22687cb39",
      "item": {
        "type": "markdown",
        "id": "bb5c95f22687cb39",
        "text": "> **Abstract**. Distinguishing between stateful objects and Values has long been recognized as fruitful. Values are universal context free abstractions that prevent side- effects and allow for a functional programming style. Though ob ject-oriented programming languages pro- vide simple Values like Integer and String, more com- plex Values are usually not supported. We show how to model complex structures as Values in Smalltalk, which allows for a simple and versatile implementation. The resulting Smalltalk systems are simple, clear and easily testable."
      },
      "after": "2158be7b256b4326",
      "date": 1629956843645
    },
    {
      "type": "edit",
      "id": "2158be7b256b4326",
      "item": {
        "type": "markdown",
        "id": "2158be7b256b4326",
        "text": "T. J. Schrader and C. Haider, “Complex values in Smalltalk,” in Proceedings of the International Workshop on Smalltalk Technologies - IWST ’09, Brest, France, 2009, p. 126. doi: 10.1145/1735935.1735957.\n\n"
      },
      "date": 1629956846983
    },
    {
      "type": "edit",
      "id": "bb5c95f22687cb39",
      "item": {
        "type": "markdown",
        "id": "bb5c95f22687cb39",
        "text": "> **Abstract**. Distinguishing between stateful objects and Values has long been recognized as fruitful. Values are universal context free abstractions that prevent side-effects and allow for a functional programming style. Though object-oriented programming languages provide simple Values like Integer and String, more complex Values are usually not supported. We show how to model complex structures as Values in Smalltalk, which allows for a simple and versatile implementation. The resulting Smalltalk systems are simple, clear and easily testable."
      },
      "date": 1629956876975
    }
  ]
}