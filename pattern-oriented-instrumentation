{
  "title": "Pattern-Oriented Instrumentation",
  "story": [
    {
      "type": "paragraph",
      "id": "ecf5c0b19364abda",
      "text": "This language for instrumenting web servers starts with terms that describe patterns we already see in by-hand instrumentation. Ultimately this turns into Types and Expressions borrowed from the Java Language specification."
    },
    {
      "type": "paragraph",
      "id": "c00a9179814be7dc",
      "text": "I used PEG.js to generate a recursive descent parser which I would run agains sample programs with each editor file save. I used a node program to manage builds when files changed. Text-to-speech synthesis would call out errors. The build would translate AST output to dot syntax to be rendered with Graphviz."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Pattern-Oriented Instrumentation"
      },
      "date": 1375929381076
    },
    {
      "item": {
        "type": "factory",
        "id": "ecf5c0b19364abda"
      },
      "id": "ecf5c0b19364abda",
      "type": "add",
      "date": 1375929386109
    },
    {
      "type": "edit",
      "id": "ecf5c0b19364abda",
      "item": {
        "type": "paragraph",
        "id": "ecf5c0b19364abda",
        "text": "This language for instrumenting web servers starts with terms that describe patterns we already see in by-hand instrumentation. Ultimately this turns into Types and Expressions borrowed from the Java Language specification."
      },
      "date": 1375929498176
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c00a9179814be7dc",
        "text": ""
      },
      "id": "c00a9179814be7dc",
      "type": "add",
      "after": "ecf5c0b19364abda",
      "date": 1375929498682
    },
    {
      "type": "edit",
      "id": "c00a9179814be7dc",
      "item": {
        "type": "paragraph",
        "id": "c00a9179814be7dc",
        "text": "I used PEG.js to generate a recursive decent "
      },
      "date": 1375929538239
    },
    {
      "type": "edit",
      "id": "c00a9179814be7dc",
      "item": {
        "type": "paragraph",
        "id": "c00a9179814be7dc",
        "text": "I used PEG.js to generate a recursive descent "
      },
      "date": 1375929560516
    },
    {
      "type": "edit",
      "id": "c00a9179814be7dc",
      "item": {
        "type": "paragraph",
        "id": "c00a9179814be7dc",
        "text": "I used PEG.js to generate a recursive descent parser which I would run agains sample programs with each editor file save. I used a node program to manage builds when files changed. Text-to-speech synthesis would call out errors. The build would translate AST output to dot syntax to be rendered with Graphviz."
      },
      "date": 1375929737841
    },
    {
      "type": "fork",
      "site": "code.fed.wiki.org",
      "date": 1627474815819
    }
  ]
}