{
  "title": "Function threadFirst",
  "story": [
    {
      "type": "paragraph",
      "id": "35b1ff99ec045d36",
      "text": "Similar to [https://docs.thi.ng/umbrella/compose/functions/threadLast.html threadLast]. A dataflow operator to improve the legibility of long (or deeply nested) call expressions. Takes an init value and a number of functions and/or function tuples, consisting of: [fn, ...args]. Executes each function (or tuple) with the return value of the previous step/function inserted as first argument, using init as the first expression. Returns result of last function/step given. [https://docs.thi.ng/umbrella/compose/functions/threadFirst.html docs]"
    },
    {
      "type": "code",
      "id": "97cdca6ccfb24b0e",
      "text": "import { threadFirst } from 'https://esm.run/@thi.ng/compose';\n\nconst neg = (x) => -x;\nconst sub = (a, b) => a - b;\nconst div = (a, b) => a / b;\n\n// without operator: (-5 - 10) / 20\nconsole.log(div(sub(neg(5), 10), 20));\n// -0.75\n\n// rewritten using operator:\nthreadFirst(\n  5,\n  neg,       // -5\n  [sub, 10], // (-5) - 10\n  [div, 20], // (-5 - 10) / 20\n  console.log\n);\n// -0.75"
    },
    {
      "type": "frame",
      "id": "e5d1521a0e541810",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Function threadFirst",
        "story": []
      },
      "date": 1713736583884
    },
    {
      "item": {
        "type": "factory",
        "id": "35b1ff99ec045d36"
      },
      "id": "35b1ff99ec045d36",
      "type": "add",
      "date": 1713736585037
    },
    {
      "type": "edit",
      "id": "35b1ff99ec045d36",
      "item": {
        "type": "paragraph",
        "id": "35b1ff99ec045d36",
        "text": "Similar to threadLast. A dataflow operator to improve the legibility of long (or deeply nested) call expressions. Takes an init value and a number of functions and/or function tuples, consisting of: [fn, ...args]. Executes each function (or tuple) with the return value of the previous step/function inserted as first argument, using init as the first expression. Returns result of last function/step given."
      },
      "date": 1713736590653
    },
    {
      "type": "edit",
      "id": "35b1ff99ec045d36",
      "item": {
        "type": "paragraph",
        "id": "35b1ff99ec045d36",
        "text": "Similar to [https://docs.thi.ng/umbrella/compose/functions/threadLast.html threadLast]. A dataflow operator to improve the legibility of long (or deeply nested) call expressions. Takes an init value and a number of functions and/or function tuples, consisting of: [fn, ...args]. Executes each function (or tuple) with the return value of the previous step/function inserted as first argument, using init as the first expression. Returns result of last function/step given."
      },
      "date": 1713736602652
    },
    {
      "type": "edit",
      "id": "35b1ff99ec045d36",
      "item": {
        "type": "paragraph",
        "id": "35b1ff99ec045d36",
        "text": "Similar to [https://docs.thi.ng/umbrella/compose/functions/threadLast.html threadLast]. A dataflow operator to improve the legibility of long (or deeply nested) call expressions. Takes an init value and a number of functions and/or function tuples, consisting of: [fn, ...args]. Executes each function (or tuple) with the return value of the previous step/function inserted as first argument, using init as the first expression. Returns result of last function/step given. [https://docs.thi.ng/umbrella/compose/functions/threadFirst.html docs]"
      },
      "date": 1713736630434
    },
    {
      "item": {
        "type": "factory",
        "id": "97cdca6ccfb24b0e"
      },
      "id": "97cdca6ccfb24b0e",
      "type": "add",
      "after": "35b1ff99ec045d36",
      "date": 1713736643637
    },
    {
      "type": "edit",
      "id": "97cdca6ccfb24b0e",
      "item": {
        "type": "code",
        "id": "97cdca6ccfb24b0e",
        "text": "import { threadFirst } from \"@thi.ng/compose\";\n\nconst neg = (x) => -x;\nconst sub = (a, b) => a - b;\nconst div = (a, b) => a / b;\n\n// without operator: (-5 - 10) / 20\nconsole.log(div(sub(neg(5), 10), 20));\n// -0.75\n\n// rewritten using operator:\nthreadFirst(\n  5,\n  neg,       // -5\n  [sub, 10], // (-5) - 10\n  [div, 20], // (-5 - 10) / 20\n  console.log\n);\n// -0.75"
      },
      "date": 1713736646341
    },
    {
      "type": "edit",
      "id": "97cdca6ccfb24b0e",
      "item": {
        "type": "code",
        "id": "97cdca6ccfb24b0e",
        "text": "import { threadLast } from 'https://esm.run/@thi.ng/compose';\n\nconst neg = (x) => -x;\nconst sub = (a, b) => a - b;\nconst div = (a, b) => a / b;\n\n// without operator: (-5 - 10) / 20\nconsole.log(div(sub(neg(5), 10), 20));\n// -0.75\n\n// rewritten using operator:\nthreadFirst(\n  5,\n  neg,       // -5\n  [sub, 10], // (-5) - 10\n  [div, 20], // (-5 - 10) / 20\n  console.log\n);\n// -0.75"
      },
      "date": 1713736655656
    },
    {
      "id": "e5d1521a0e541810",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "e5d1521a0e541810",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "97cdca6ccfb24b0e",
      "attribution": {
        "page": "Function threadLast"
      },
      "date": 1713736674364
    },
    {
      "type": "edit",
      "id": "97cdca6ccfb24b0e",
      "item": {
        "type": "code",
        "id": "97cdca6ccfb24b0e",
        "text": "import { threadFirst } from \"@thi.ng/compose\";\n\nconst neg = (x) => -x;\nconst sub = (a, b) => a - b;\nconst div = (a, b) => a / b;\n\n// without operator: (-5 - 10) / 20\nconsole.log(div(sub(neg(5), 10), 20));\n// -0.75\n\n// rewritten using operator:\nthreadFirst(\n  5,\n  neg,       // -5\n  [sub, 10], // (-5) - 10\n  [div, 20], // (-5 - 10) / 20\n  console.log\n);\n// -0.75"
      },
      "date": 1713736691553
    },
    {
      "type": "edit",
      "id": "97cdca6ccfb24b0e",
      "item": {
        "type": "code",
        "id": "97cdca6ccfb24b0e",
        "text": "import { threadFirst } from 'https://esm.run/@thi.ng/compose';\n\nconst neg = (x) => -x;\nconst sub = (a, b) => a - b;\nconst div = (a, b) => a / b;\n\n// without operator: (-5 - 10) / 20\nconsole.log(div(sub(neg(5), 10), 20));\n// -0.75\n\n// rewritten using operator:\nthreadFirst(\n  5,\n  neg,       // -5\n  [sub, 10], // (-5) - 10\n  [div, 20], // (-5 - 10) / 20\n  console.log\n);\n// -0.75"
      },
      "date": 1713736723542
    },
    {
      "type": "fork",
      "date": 1713736862437
    }
  ]
}