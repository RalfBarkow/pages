{
  "title": "Playground: frame",
  "story": [
    {
      "type": "assets",
      "id": "64ca40c952da7922",
      "text": "pages/playground-frame"
    },
    {
      "type": "frame",
      "id": "36ea88438d2940a7",
      "text": "http://localhost:3000/assets/pages/playground-frame/ghost-page-example.html"
    },
    {
      "type": "markdown",
      "id": "75822ff55a9b20c4",
      "text": "# Code"
    },
    {
      "type": "code",
      "id": "c83ac1a2dc047a8c",
      "text": "import * as frame from 'http://code.fed.wiki/assets/v1/frame.js';\n\nwindow.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await frame.open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
    },
    {
      "type": "paragraph",
      "id": "313907154e6512d9",
      "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our button element on the page"
    },
    {
      "type": "code",
      "id": "bcc7bad03c1ca422",
      "text": "export async function emit(el) {\n  // Call the emit function to place the button inside the specified element\n  el.innerHTML = '<button onclick=\"dooutput(event)\" title=\"Output Ghost Page\">Output Ghost Page</button>';\n}"
    },
    {
      "type": "paragraph",
      "id": "f50d8bf303fcced5",
      "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n};"
    },
    {
      "type": "markdown",
      "id": "185f2876e6bf65a4",
      "text": "# Frame (output)"
    },
    {
      "type": "frame",
      "id": "142fe5bcefa780fa",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Playground: frame",
        "story": []
      },
      "date": 1713875591588
    },
    {
      "item": {
        "type": "factory",
        "id": "64ca40c952da7922"
      },
      "id": "64ca40c952da7922",
      "type": "add",
      "date": 1713875603980
    },
    {
      "type": "edit",
      "id": "64ca40c952da7922",
      "item": {
        "type": "assets",
        "id": "64ca40c952da7922",
        "text": "pages/playground-frame"
      },
      "date": 1713875610228
    },
    {
      "item": {
        "type": "factory",
        "id": "36ea88438d2940a7"
      },
      "id": "36ea88438d2940a7",
      "type": "add",
      "after": "64ca40c952da7922",
      "date": 1713875622507
    },
    {
      "type": "edit",
      "id": "36ea88438d2940a7",
      "item": {
        "type": "frame",
        "id": "36ea88438d2940a7",
        "text": "http://localhost:3000/assets/pages/playground-frame/ghost-page-example.html"
      },
      "date": 1713875624580
    },
    {
      "item": {
        "type": "factory",
        "id": "c83ac1a2dc047a8c"
      },
      "id": "c83ac1a2dc047a8c",
      "type": "add",
      "after": "36ea88438d2940a7",
      "date": 1713875729246
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "mport * as frame from 'http://code.fed.wiki/assets/v1/frame.js';\n\nwindow.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await frame.open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713875731816
    },
    {
      "id": "c83ac1a2dc047a8c",
      "type": "move",
      "order": [
        "64ca40c952da7922",
        "c83ac1a2dc047a8c",
        "36ea88438d2940a7"
      ],
      "date": 1713875734758
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "import * as frame from 'http://code.fed.wiki/assets/v1/frame.js';\n\nwindow.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await frame.open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713875755052
    },
    {
      "id": "36ea88438d2940a7",
      "type": "move",
      "order": [
        "64ca40c952da7922",
        "36ea88438d2940a7",
        "c83ac1a2dc047a8c"
      ],
      "date": 1713875790956
    },
    {
      "id": "142fe5bcefa780fa",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "after": "c83ac1a2dc047a8c",
      "attribution": {
        "page": "Playground: dgraph-dot"
      },
      "date": 1713875845967
    },
    {
      "id": "75822ff55a9b20c4",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "75822ff55a9b20c4",
        "text": "# Code"
      },
      "after": "36ea88438d2940a7",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713875905497
    },
    {
      "id": "185f2876e6bf65a4",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "185f2876e6bf65a4",
        "text": "# Frame (output)"
      },
      "after": "c83ac1a2dc047a8c",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713875925527
    },
    {
      "id": "313907154e6512d9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our form element on the page"
      },
      "after": "c83ac1a2dc047a8c",
      "attribution": {
        "page": "rdom-forms",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713876134024
    },
    {
      "id": "bcc7bad03c1ca422",
      "type": "add",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  el.innerHTML =  serialize(loginForm);\n};\n"
      },
      "after": "313907154e6512d9",
      "attribution": {
        "page": "rdom-forms",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713876140255
    },
    {
      "id": "f50d8bf303fcced5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "after": "bcc7bad03c1ca422",
      "attribution": {
        "page": "rdom-forms",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713876144701
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n};"
      },
      "after": "f50d8bf303fcced5",
      "attribution": {
        "page": "rdom-forms",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713876158269
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  el.innerHTML =  <button onclick=dooutput(event) title=\"Output Ghost Page\">Output Ghost Page</button>;\n\n"
      },
      "date": 1713876214541
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  el.innerHTML =  \n'<button onclick=dooutput(event) title=\"Output Ghost Page\">Output Ghost Page</button>';\n"
      },
      "date": 1713876249939
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "window.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await frame.open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713876455481
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  // Call the emit function to place the button inside the specified element\n  el.innerHTML = '<button onclick=\"dooutput(event)\" title=\"Output Ghost Page\">Output Ghost Page</button>';\n}"
      },
      "date": 1713876465439
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "window.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713876834859
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "window.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713876872674
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "import * as frame from 'http://code.fed.wiki/assets/v1/frame.js';\n\nwindow.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713877235771
    },
    {
      "type": "edit",
      "id": "c83ac1a2dc047a8c",
      "item": {
        "type": "code",
        "id": "c83ac1a2dc047a8c",
        "text": "import * as frame from 'http://code.fed.wiki/assets/v1/frame.js';\n\nwindow.dooutput = async event => {\n  const ghostPage = {\n    title: 'My Ghost Page',\n    story: [\n      { type: 'paragraph', text: 'This is a paragraph in the ghost page.' },\n      { type: 'header', level: 2, text: 'Section 1' },\n      { type: 'paragraph', text: 'Content of section 1.' },\n      { type: 'header', level: 2, text: 'Section 2' },\n      { type: 'paragraph', text: 'Content of section 2.' }\n    ]\n  };\n\n  // Output the ghost page\n  await frame.open(ghostPage, event.shiftKey);\n\n  // Report success\n  report('Ghost page outputted successfully.');\n};\n\nfunction report(result) {\n  document.getElementById('result').innerText = result;\n}"
      },
      "date": 1713877254055
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713879930221
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1713879942085
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713890970370
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our button element on the page"
      },
      "date": 1713890987840
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713970344961
    }
  ]
}