{
  "title": "Orthogonal Security",
  "story": [
    {
      "type": "html",
      "text": "A concept whose time has long since come. Curiously never been implemented.",
      "id": "971efe4b541ec972412dc55d30de4d19"
    },
    {
      "type": "html",
      "text": "\nSecurity is an orthogonal property of individual objects, exactly like persistence. One achieves orthogonal security in precisely the same way as [[Transparent Persistence]]. By building it in at such a low level that programmers never see the damned thing unless they absolutely have to.",
      "id": "f0eb292aba452abb39d75d0d3104dc9d"
    },
    {
      "type": "html",
      "text": "\nJust because security is orthogonal doesn't mean that a programmer can't go out of their way to screw it up. The same is true of any well-designed orthogonally persistent system. It must be possible for a programmer to disable persistence for certain special applications such as to keep passwords out of permanent storage.",
      "id": "d1348f1ce49fe2281e801ad0847c4385"
    },
    {
      "type": "html",
      "text": "\nWhat does orthogonal security entail?",
      "id": "ca5cd048cbcb71fc9b8c5500b3d8ccde"
    },
    {
      "type": "html",
      "text": "\nIt entails pervasive use of the [[Facet Pattern]] and the [[Principle Of Least Privilege]]. Of course, the only way to do that at a low-level, at a level lower than the programmer interacts with, is to put generic and extensible [[Permission Flags]] on all capabilities.",
      "id": "e5b5e1b36688b91192d9f29cdbb33386"
    },
    {
      "type": "html",
      "text": "\nSo far, nobody has done orthogonal security properly. In fact, there are even some people, much like the trogs who question orthogonal persistence, who question the need for pervasive permissions in a modern secure OS.",
      "id": "7947fd8de74f256d1abab7b4d78b4c16"
    },
    {
      "type": "html",
      "text": "\nContrasted and distinct from [[Orthogonal Security]] is [[Trusted Systems]].",
      "id": "8e6034eda11e2a3215a6b5de52d72c16"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "f11399d1a284930c6803c22cabffab54"
    },
    {
      "type": "html",
      "text": "[[Category Security]]",
      "id": "3a9571926a18f8b7fcc49055763eb9f0"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?OrthogonalSecurity c2.com]",
      "id": "16ddca2bdfcde5398588049aa9d5caee"
    }
  ],
  "journal": [
    {
      "date": 1365840407000,
      "id": "95f2bfbf9809a6da7d6214c74328ee25",
      "type": "create",
      "item": {
        "title": "Orthogonal Security",
        "story": [
          {
            "type": "html",
            "text": "A concept whose time has long since come. Curiously never been implemented.",
            "id": "971efe4b541ec972412dc55d30de4d19"
          },
          {
            "type": "html",
            "text": "\nSecurity is an orthogonal property of individual objects, exactly like persistence. One achieves orthogonal security in precisely the same way as [[Transparent Persistence]]. By building it in at such a low level that programmers never see the damned thing unless they absolutely have to.",
            "id": "f0eb292aba452abb39d75d0d3104dc9d"
          },
          {
            "type": "html",
            "text": "\nJust because security is orthogonal doesn't mean that a programmer can't go out of their way to screw it up. The same is true of any well-designed orthogonally persistent system. It must be possible for a programmer to disable persistence for certain special applications such as to keep passwords out of permanent storage.",
            "id": "d1348f1ce49fe2281e801ad0847c4385"
          },
          {
            "type": "html",
            "text": "\nWhat does orthogonal security entail?",
            "id": "ca5cd048cbcb71fc9b8c5500b3d8ccde"
          },
          {
            "type": "html",
            "text": "\nIt entails pervasive use of the [[Facet Pattern]] and the [[Principle Of Least Privilege]]. Of course, the only way to do that at a low-level, at a level lower than the programmer interacts with, is to put generic and extensible [[Permission Flags]] on all capabilities.",
            "id": "e5b5e1b36688b91192d9f29cdbb33386"
          },
          {
            "type": "html",
            "text": "\nSo far, nobody has done orthogonal security properly. In fact, there are even some people, much like the trogs who question orthogonal persistence, who question the need for pervasive permissions in a modern secure OS.",
            "id": "7947fd8de74f256d1abab7b4d78b4c16"
          },
          {
            "type": "html",
            "text": "\nContrasted and distinct from [[Orthogonal Security]] is [[Trusted Systems]].",
            "id": "8e6034eda11e2a3215a6b5de52d72c16"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "f11399d1a284930c6803c22cabffab54"
          },
          {
            "type": "html",
            "text": "[[Category Security]]",
            "id": "3a9571926a18f8b7fcc49055763eb9f0"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?OrthogonalSecurity c2.com]",
            "id": "16ddca2bdfcde5398588049aa9d5caee"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1665179267602
    }
  ]
}