{
  "title": "Routing Graph",
  "story": [
    {
      "type": "markdown",
      "id": "e648abe5e205d7e5",
      "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or *programmable interconnect points* (PIPs)."
    },
    {
      "type": "image",
      "id": "19dd8b1f9457614e",
      "text": "Fig. 5. Routing graph is composed of logic vertices modeling logic blocks, routing vertices modeling input/output ports of switch boxes, routing edges modeling PIP, and wiring edges modeling wiring segments.",
      "size": "wide",
      "width": 419,
      "height": 368,
      "url": "/assets/plugins/image/c0b212f9408335a394b7f8e93dd5e3d6.jpg"
    },
    {
      "type": "paragraph",
      "id": "aa78ead21e29b936",
      "text": "In the model, shown in Fig. 5, we have two types of vertices."
    },
    {
      "type": "markdown",
      "id": "bda00577b30fe4cc",
      "text": "* Logic vertices: They model the FPGAs logic blocks.\n* Routing vertices: They model the input/output ports of the switch boxes."
    },
    {
      "type": "markdown",
      "id": "e33839c10b29e0a6",
      "text": "We also have two types of edges. \n* Routing edges: They model the PIPs, each represented as an edge that connects two routing vertices. \n* Wiring edges: They model the wiring segments. They allow logic vertices to connect to adjacent routing vertices."
    },
    {
      "type": "paragraph",
      "id": "6c7e88967f5e6b49",
      "text": "The vertices corresponding to the FPGAs resources that are used to implement a circuit are colored. In case fault-tolerant architectures like TMR are used, different colors are used to mark the vertices of each circuit replica, as well as the majority voters."
    },
    {
      "type": "paragraph",
      "id": "e5272d3d96e6eaae",
      "text": "According to our approach, the designer produces both the circuit description and the layout description, and then the back-end of the static analyzer tools parses the two files and builds the routing graph for the circuit under analysis. The designer obtains the circuit description through standard synthesis tools (like Synopsys’ FPGA compiler II, Symplicity’s Simplify, or Xilinx ISE) starting either from a schematic, or a behavioral model coded in a hardware description language. Similarly, the layout description is obtained through the place and route tools for the adopted FPGA device (like Xilinx’s PAR)."
    },
    {
      "type": "paragraph",
      "id": "ac3dba45028ec39b",
      "text": "Moreover, the information coming from the place and route tools is complemented with information concerning the type of fault-tolerant architecture used to harden the circuit. […]"
    },
    {
      "type": "paragraph",
      "id": "642069c63efa3138",
      "text": "[…]"
    },
    {
      "type": "paragraph",
      "id": "5f6c2c75d5cf2b3b",
      "text": "The routing graph is able to convey the information about SEUs’ effects, too. The effects of a SEU in the configuration memory are modeled by changing the coloring of the graph vertex corresponding to the resource affected by the SEU. The same approach is used to model the effect of one SEU altering a memory element used by the circuit. Moreover, effects on the routing are modeled through the addition of subtraction of edges (routing or wiring edges) to/from the routing graph."
    },
    {
      "type": "paragraph",
      "id": "914b343caf95d810",
      "text": "The association between the elements of the routing graph and the corresponding bits of the configuration memory mandates a detailed knowledge of FPGAs architecture and of its configuration memory. For this purpose, we studied the architecture of the Xilinx’s configuration memory, we decoded it, and we identified the relationship between configuration-memory’s bits, FPGAs resources and routing-graph’s elements."
    },
    {
      "type": "paragraph",
      "id": "d1785ac134e7c886",
      "text": "Although our works is based on Xilinx’s devices, the approach we developed is general, and it can be adopted for modeling devices coming from other manufactures."
    },
    {
      "type": "paragraph",
      "id": "c7c116e4489cc507",
      "text": "[…]"
    },
    {
      "type": "pagefold",
      "id": "001f3d1efdb02a36",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "371940a8f5e70ffa",
      "text": "STERPONE, Luca and VIOLANTE, Massimo, 2005. A new analytical approach to estimate the effects of SEUs in TMR architectures implemented through SRAM-based FPGAs. IEEE Transactions on Nuclear Science. 2005. Vol. 52, no. 6, p. 2217–2223. DOI 10.1109/TNS.2005.860745. [Accessed 4 January 2024]. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Routing Graph",
        "story": []
      },
      "date": 1704379693343
    },
    {
      "item": {
        "type": "factory",
        "id": "19dd8b1f9457614e"
      },
      "id": "19dd8b1f9457614e",
      "type": "add",
      "date": 1704379695261
    },
    {
      "type": "edit",
      "id": "19dd8b1f9457614e",
      "item": {
        "type": "image",
        "id": "19dd8b1f9457614e",
        "text": "Fig. 5. Routing graph is composed of logic vertices modeling logic blocks, routing vertices modeling input/output ports of switch boxes, routing edges modeling PIP, and wiring edges modeling wiring segments.",
        "size": "wide",
        "width": 419,
        "height": 368,
        "url": "/assets/plugins/image/c0b212f9408335a394b7f8e93dd5e3d6.jpg"
      },
      "date": 1704379705326
    },
    {
      "item": {
        "type": "factory",
        "id": "e648abe5e205d7e5"
      },
      "id": "e648abe5e205d7e5",
      "type": "add",
      "after": "19dd8b1f9457614e",
      "date": 1704379730225
    },
    {
      "id": "e648abe5e205d7e5",
      "type": "move",
      "order": [
        "e648abe5e205d7e5",
        "19dd8b1f9457614e"
      ],
      "date": 1704379732366
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "paragraph",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire FPGA could be described by a graph, called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or PIPs."
      },
      "date": 1704379733914
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "paragraph",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or PIPs."
      },
      "date": 1704379752310
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "paragraph",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or programmable interconnect point (PIPs)."
      },
      "date": 1704379799822
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "paragraph",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or programmable interconnect points (PIPs)."
      },
      "date": 1704379812273
    },
    {
      "item": {
        "type": "factory",
        "id": "aa78ead21e29b936"
      },
      "id": "aa78ead21e29b936",
      "type": "add",
      "after": "19dd8b1f9457614e",
      "date": 1704379824964
    },
    {
      "type": "edit",
      "id": "aa78ead21e29b936",
      "item": {
        "type": "paragraph",
        "id": "aa78ead21e29b936",
        "text": "In the model, shown in Fig. 5, we have two types of vertices."
      },
      "date": 1704379826648
    },
    {
      "item": {
        "type": "factory",
        "id": "bda00577b30fe4cc"
      },
      "id": "bda00577b30fe4cc",
      "type": "add",
      "after": "aa78ead21e29b936",
      "date": 1704379835773
    },
    {
      "type": "edit",
      "id": "bda00577b30fe4cc",
      "item": {
        "type": "markdown",
        "id": "bda00577b30fe4cc",
        "text": "* Logic vertices: They model the FPGAs logic blocks."
      },
      "date": 1704379840596
    },
    {
      "type": "edit",
      "id": "bda00577b30fe4cc",
      "item": {
        "type": "markdown",
        "id": "bda00577b30fe4cc",
        "text": "* Logic vertices: They model the FPGAs logic blocks.\n* Routing vertices: They model the input/output ports of the switch boxes. We also have two types of edges. \n* Routing edges: They model the PIPs, each represented as an edge that connects two routing vertices. \n* Wiringedges: They model the wiring segments. They allow logic vertices to connect to adjacent routing vertices."
      },
      "date": 1704379882433
    },
    {
      "type": "edit",
      "id": "bda00577b30fe4cc",
      "item": {
        "type": "markdown",
        "id": "bda00577b30fe4cc",
        "text": "* Logic vertices: They model the FPGAs logic blocks.\n* Routing vertices: They model the input/output ports of the switch boxes. We also have two types of edges. \n* Routing edges: They model the PIPs, each represented as an edge that connects two routing vertices. \n* Wiring edges: They model the wiring segments. They allow logic vertices to connect to adjacent routing vertices."
      },
      "date": 1704379888680
    },
    {
      "type": "edit",
      "id": "bda00577b30fe4cc",
      "item": {
        "type": "markdown",
        "id": "bda00577b30fe4cc",
        "text": "* Logic vertices: They model the FPGAs logic blocks.\n* Routing vertices: They model the input/output ports of the switch boxes."
      },
      "date": 1704379901167
    },
    {
      "type": "add",
      "id": "e33839c10b29e0a6",
      "item": {
        "type": "markdown",
        "id": "e33839c10b29e0a6",
        "text": "We also have two types of edges. \n* Routing edges: They model the PIPs, each represented as an edge that connects two routing vertices. \n* Wiring edges: They model the wiring segments. They allow logic vertices to connect to adjacent routing vertices."
      },
      "after": "bda00577b30fe4cc",
      "date": 1704379901989
    },
    {
      "item": {
        "type": "factory",
        "id": "001f3d1efdb02a36"
      },
      "id": "001f3d1efdb02a36",
      "type": "add",
      "after": "e33839c10b29e0a6",
      "date": 1704379971168
    },
    {
      "type": "edit",
      "id": "001f3d1efdb02a36",
      "item": {
        "type": "pagefold",
        "id": "001f3d1efdb02a36",
        "text": "~"
      },
      "date": 1704379974478
    },
    {
      "item": {
        "type": "factory",
        "id": "371940a8f5e70ffa"
      },
      "id": "371940a8f5e70ffa",
      "type": "add",
      "after": "001f3d1efdb02a36",
      "date": 1704379975795
    },
    {
      "type": "edit",
      "id": "371940a8f5e70ffa",
      "item": {
        "type": "paragraph",
        "id": "371940a8f5e70ffa",
        "text": "\nSTERPONE, Luca and VIOLANTE, Massimo, 2005. A new analytical approach to estimate the effects of SEUs in TMR architectures implemented through SRAM-based FPGAs. IEEE Transactions on Nuclear Science. Online. 2005. Vol. 52, no. 6, p. 2217–2223. DOI 10.1109/TNS.2005.860745. [Accessed 4 January 2024]. \n"
      },
      "date": 1704379978140
    },
    {
      "item": {
        "type": "factory",
        "id": "6c7e88967f5e6b49"
      },
      "id": "6c7e88967f5e6b49",
      "type": "add",
      "after": "371940a8f5e70ffa",
      "date": 1704380026243
    },
    {
      "id": "6c7e88967f5e6b49",
      "type": "move",
      "order": [
        "e648abe5e205d7e5",
        "19dd8b1f9457614e",
        "aa78ead21e29b936",
        "bda00577b30fe4cc",
        "e33839c10b29e0a6",
        "6c7e88967f5e6b49",
        "001f3d1efdb02a36",
        "371940a8f5e70ffa"
      ],
      "date": 1704380028031
    },
    {
      "type": "edit",
      "id": "6c7e88967f5e6b49",
      "item": {
        "type": "paragraph",
        "id": "6c7e88967f5e6b49",
        "text": "The vertices corresponding to the FPGAs resources that are used to implement a circuit are colored. In case fault-tolerant architectures like TMR are used, different colors are used to mark the vertices of each circuit replica, as well as the majority voters."
      },
      "date": 1704380036646
    },
    {
      "type": "add",
      "id": "e5272d3d96e6eaae",
      "item": {
        "type": "paragraph",
        "id": "e5272d3d96e6eaae",
        "text": "According to our approach, the designer produces both the circuit description and the layout description, and then the back-end of the static analyzer tools parses the two files and builds the routing graph for the circuit under analysis. The designer obtains the circuit description through standard synthesis tools (like Synopsys’ FPGA compiler II, Symplicity’s Simplify, or Xilinx ISE) starting either from a schematic, or a behavioral model coded in a hardware description language. Similarly, the layout description is obtained through the place and route tools for the adopted FPGA device (like Xilinx’s PAR)."
      },
      "after": "6c7e88967f5e6b49",
      "date": 1704380121293
    },
    {
      "type": "add",
      "id": "ac3dba45028ec39b",
      "item": {
        "type": "paragraph",
        "id": "ac3dba45028ec39b",
        "text": "Moreover, the information coming from the place and route tools is complemented with information concerning the type of fault-tolerant architecture used to harden the circuit. […]"
      },
      "after": "e5272d3d96e6eaae",
      "date": 1704380175791
    },
    {
      "type": "add",
      "id": "642069c63efa3138",
      "item": {
        "type": "paragraph",
        "id": "642069c63efa3138",
        "text": "[…]"
      },
      "after": "ac3dba45028ec39b",
      "date": 1704380229683
    },
    {
      "type": "add",
      "id": "5f6c2c75d5cf2b3b",
      "item": {
        "type": "paragraph",
        "id": "5f6c2c75d5cf2b3b",
        "text": "The routing graph is able to convey the information about SEUs’ effects, too. The effects of a SEU in the configuration memory are modeled by changing the coloring of the graph vertex corresponding to the resource affected by the SEU. The same approach is used to model the effect of one SEU altering a memory element used by the circuit. Moreover, effects on the routing are modeled through the addition of subtraction of edges (routing or wiring edges) to/from the routing graph."
      },
      "after": "642069c63efa3138",
      "date": 1704380231364
    },
    {
      "type": "add",
      "id": "914b343caf95d810",
      "item": {
        "type": "paragraph",
        "id": "914b343caf95d810",
        "text": "The association between the elements of the routing graph and the corresponding bits of the configuration memory mandates a detailed knowledge of FPGAs architecture and of its configuration memory. For this purpose, we studied the architecture of the Xilinx’s configuration memory, we decoded it, and we identified the relationship between configuration-memory’s bits, FPGAs resources and routing-graph’s elements. Although our works is based on Xilinx’s devices, the approach we developed is general, and it can be adopted for modeling devices coming from other manufactures."
      },
      "after": "5f6c2c75d5cf2b3b",
      "date": 1704380264546
    },
    {
      "type": "add",
      "id": "c7c116e4489cc507",
      "item": {
        "type": "paragraph",
        "id": "c7c116e4489cc507",
        "text": "[…]"
      },
      "after": "914b343caf95d810",
      "date": 1704380266324
    },
    {
      "type": "edit",
      "id": "914b343caf95d810",
      "item": {
        "type": "paragraph",
        "id": "914b343caf95d810",
        "text": "The association between the elements of the routing graph and the corresponding bits of the configuration memory mandates a detailed knowledge of FPGAs architecture and of its configuration memory. For this purpose, we studied the architecture of the Xilinx’s configuration memory, we decoded it, and we identified the relationship between configuration-memory’s bits, FPGAs resources and routing-graph’s elements."
      },
      "date": 1704380277243
    },
    {
      "type": "add",
      "id": "d1785ac134e7c886",
      "item": {
        "type": "paragraph",
        "id": "d1785ac134e7c886",
        "text": "Although our works is based on Xilinx’s devices, the approach we developed is general, and it can be adopted for modeling devices coming from other manufactures."
      },
      "after": "914b343caf95d810",
      "date": 1704380278544
    },
    {
      "type": "edit",
      "id": "371940a8f5e70ffa",
      "item": {
        "type": "paragraph",
        "id": "371940a8f5e70ffa",
        "text": "STERPONE, Luca and VIOLANTE, Massimo, 2005. A new analytical approach to estimate the effects of SEUs in TMR architectures implemented through SRAM-based FPGAs. IEEE Transactions on Nuclear Science. 2005. Vol. 52, no. 6, p. 2217–2223. DOI 10.1109/TNS.2005.860745. [Accessed 4 January 2024]. \n"
      },
      "date": 1704380366009
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "paragraph",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or *programmable interconnect points* (PIPs)."
      },
      "date": 1704380426120
    },
    {
      "type": "edit",
      "id": "e648abe5e205d7e5",
      "item": {
        "type": "markdown",
        "id": "e648abe5e205d7e5",
        "text": "The routing structure of the entire [[FPGA]] could be described by a [[Graph]], called routing graph, where vertices model logic blocks and switch boxes while the edges correspond to wiring segments or *programmable interconnect points* (PIPs)."
      },
      "date": 1704380427362
    }
  ]
}