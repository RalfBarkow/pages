{
  "title": "2023-10-03",
  "story": [
    {
      "type": "paragraph",
      "id": "5139a3b9f4efa289",
      "text": "⇒ [[PEG]] ⇒ [[elm-peg]] ⇒ [[Roman R. Redziejowski]] ⇒ [[Cut Points in PEG]]"
    },
    {
      "type": "paragraph",
      "id": "cea804f4e576ebf3",
      "text": "⇒ [[Define a PEG Grammar]] ⇒ [[PEG Syntax and Semantics]] [https://nim-lang.org/docs/pegs.html page], PEG vs regular expression [https://nim-lang.org/docs/pegs.html#peg-syntax-and-semantics-peg-vs-regular-expression page]"
    },
    {
      "type": "markdown",
      "id": "5ca32937a47c9014",
      "text": "> As a regular expression"
    },
    {
      "type": "code",
      "id": "21d1617d042553bd",
      "text": "\\[.*\\]"
    },
    {
      "type": "markdown",
      "id": "31e7543843d8b530",
      "text": "> matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as:"
    },
    {
      "type": "code",
      "id": "a6b54240a3734059",
      "text": "\\[ ( !\\] . )* \\]"
    },
    {
      "type": "markdown",
      "id": "539cc6dcda134243",
      "text": "> (or"
    },
    {
      "type": "code",
      "id": "e427bdf5199f7bdb",
      "text": "\\[ @ \\])"
    },
    {
      "type": "markdown",
      "id": "fe6395e1e736d924",
      "text": "> )."
    },
    {
      "type": "paragraph",
      "id": "efa12ef7721f363e",
      "text": "Test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/tests/MainSpec.elm#L1-L22 code]"
    },
    {
      "type": "code",
      "id": "ca527f480b07b95c",
      "text": "module MainSpec exposing (suite)\n\nimport Expect\nimport Main exposing (result)\nimport Test exposing (..)\n\n\nsuite : Test\nsuite =\n    describe \"Parsing Expression Grammar (PEG)\"\n        [ test \"should parse 'abc' and convert it to all upper case 'ABC' with an action.\" <|\n            \\() ->\n                let\n                    expected =\n                        Ok \"ABC\"\n\n                    actual =\n                        result\n                in\n                Expect.equal actual expected\n        ]\n"
    },
    {
      "type": "paragraph",
      "id": "3370c97a92de842e",
      "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/2ab35e7aa4a01059dafeaa192b571c6ba187c88b/src/Main.elm#L41-L48 code]"
    },
    {
      "type": "code",
      "id": "3dcdc2f1def35198",
      "text": "main =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message)\n"
    },
    {
      "type": "paragraph",
      "id": "0214cc186308d392",
      "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm [https://gist.github.com/dynajoe/eeeff72c7ffebc1bb56153078694d90e gist], Creating a parser [https://rundis.github.io/blog/2016/elm_light_ast.html post] by [[Magnus Rundberget]]"
    },
    {
      "type": "video",
      "id": "ff153fa1335e39d4",
      "text": "YOUTUBE pmMhCRvU9R0\nDemo of new AST based features in elm-light. The Elm language plugin for Light Table"
    },
    {
      "type": "paragraph",
      "id": "03ea973dcc99f484",
      "text": "[[Lighttable]]"
    },
    {
      "type": "paragraph",
      "id": "8f069536aa284ba4",
      "text": "[[TEPA]]"
    },
    {
      "type": "paragraph",
      "id": "424e6d37e2665c91",
      "text": "⇒ [[dmx.ralfbarkow.ch]]: [[Let's Encrypt]] certificate expiration notice for domain"
    },
    {
      "type": "code",
      "id": "4bb4d4e8c6cd6e7a",
      "text": "ufw allow http\ncertbot \nufw deny http"
    },
    {
      "type": "paragraph",
      "id": "ad4b51a1ec34ff95",
      "text": "⇒ Common NoRedInk [[Containers]] [https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/Nri-Ui-Container-V2 package]"
    },
    {
      "type": "pagefold",
      "id": "a6808386054d32ab",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "739c97fbbaecca75",
      "text": "⇒ [[Sitemap]]"
    },
    {
      "type": "reference",
      "id": "5720a93869c1ba2f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "wiki-sitemap",
      "title": "Wiki Sitemap",
      "text": "A wiki-sitemap is a [[Sitemap]] (or [[site map]]), that software in the federation (like the wiki-client) uses to find pages. It is used for things like [[Wiki Find]], and displaying [[Recent Changes]] and [[Twins]] of the current page. Federated wiki uses [[JSON]] rather than [[XML]] to make it fast to load and utilise in the browser."
    },
    {
      "type": "paragraph",
      "id": "7154dc81ddb9da6e",
      "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing – The sitemap is built by reading the pages directory [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L306 code], and mapping over the list of filenames [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L336 code], replacing each filename with a sitemap entry [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L310 code]."
    },
    {
      "type": "paragraph",
      "id": "4f1bdbba31dfc21c",
      "text": "The error message you are seeing suggests there was an error reading a file. This would suggest you have a file with [[null]] as the name – unclear if that is a 4 letter word or really null."
    },
    {
      "type": "paragraph",
      "id": "d9c6627b3d20bdeb",
      "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16963497581780wbAgk:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]: Think I've found the problem – downloaded your pages repo, and there is a symbolic link in there from pages to ./pages"
    },
    {
      "type": "code",
      "id": "19560e13b76d307d",
      "text": "$ ls -Filas pages\n263892 0 lrwxrwxrwx 1 rgb users 7 Jun  5  2022 pages -> ./pages"
    },
    {
      "type": "reference",
      "id": "7f33ec7b3bbec90f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "update-the-wiki-server-software",
      "title": "Update the Wiki Server Software",
      "text": "If there are any updates available, the globally installed wiki can be updated by re-installing it: [https://github.com/fedwiki/wiki#updating-the-server-software page]"
    },
    {
      "type": "code",
      "id": "273f71c728a8f4d0",
      "text": "npm install -g wiki"
    },
    {
      "type": "pagefold",
      "id": "91795390a4fce287",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "a185bfeeee18087f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "-",
      "title": "< >",
      "text": "can be associated with [[Reflection]], with turning [[Structure]] back upon itself. It’s name is [[Angle]] and alone it is [[Nothing]]."
    },
    {
      "type": "paragraph",
      "id": "0649f87aec9bbd8c",
      "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code] ⇐ [[Result]]"
    },
    {
      "type": "code",
      "id": "171f5e0fff9e3b07",
      "text": "main : Html.Html msg\nmain =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message)\n "
    },
    {
      "type": "paragraph",
      "id": "2f200a8bcaee4bbb",
      "text": "Parse a string with the grammar [https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse package]. Returns a [[Result]] that is either Ok with the parsed result or Err with an error message."
    },
    {
      "type": "paragraph",
      "id": "b24ecc8a1b60bfd9",
      "text": "Error message [https://github.com/microelm/elm-peg/blob/2b03f1d90ec42f520702106821c989ffc84e1858/src/Peg.elm#L45-L49 code]"
    },
    {
      "type": "code",
      "id": "c7457ce3b7837724",
      "text": "type alias Error =\n    { position : Int\n    , message : String\n    }\n\n"
    },
    {
      "type": "paragraph",
      "id": "ec555a8d07dd81b6",
      "text": "Represents an error that occurred during parsing.\n\nThe position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
    },
    {
      "type": "paragraph",
      "id": "4c554da3148268d6",
      "text": "refactor: append error position to error message [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L48-L49 code]"
    },
    {
      "type": "code",
      "id": "6b001b32971e37c9",
      "text": "main : Html.Html msg\nmain =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message ++ \" at position \" ++ String.fromInt error.position)\n"
    },
    {
      "type": "pagefold",
      "id": "d136c733c491252b",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "dfa66df16f1b5965",
      "site": "ward.asia.wiki.org",
      "slug": "recent-ward-on-wiki",
      "title": "Recent Ward on Wiki",
      "text": "Follow my writing on all aspects of wiki including history and influences. Here we use a curated list of sites to guide this list of changes."
    },
    {
      "type": "reference",
      "id": "d1edef4f216c1546",
      "site": "code.fed.wiki.org",
      "slug": "circuit-structure-inverter",
      "title": "Circuit Structure Inverter",
      "text": "Using lex, yacc and cons-cells to transform a node-centric hierarchical circuit to a cad-ready net-centric model. This would be the \"dual\" of the initial representation."
    },
    {
      "type": "image",
      "id": "79c012c29a344d7a",
      "text": "Loading It Up [https://youtu.be/f84n5oFoZBc?t=1838 video]",
      "size": "wide",
      "width": 430,
      "height": 242,
      "url": "/assets/plugins/image/0ea7ee11a1330d30a2e9a986e076dd71.jpg"
    },
    {
      "type": "paragraph",
      "id": "84df55bf826e2ad4",
      "text": "KRust: A Formal Executable Semantics of Rust, [no date]. Online. [Accessed 3 October 2023]. Available from: https://ieeexplore.ieee.org/abstract/document/8560732/ Rust is a new and promising high-level system programming language. It provides both memory safety and thread safety through its novel mechanisms such as ownership, moves and borrows. Ownership system ensures that at any point there is only one owner of any given resource. The ownership of a resource can be moved or borrowed according to the lifetimes. The ownership system establishes a clear lifetime for each value and hence Rust does not necessarily need garbage collection. These novel features bring Rust high performance, fine-grained low-level control over memory without garbage collection, which differentiate Rust from other existing prevalent languages. For formal analysis of Rust programs and helping programmers learn its new mechanisms and features, a formal semantics of Rust is desired and useful as a fundament for developing related tools. In this paper, we present a formal executable operational semantics of a subset of Rust, called KRust. The semantics is defined in K, a rewriting-based executable semantic framework for programming languages. The executable semantics yields automatically a formal interpreter and verification tools for Rust programs. KRust has been validated by testing with 182 tests, including 157 tests from the official Rust test suite."
    },
    {
      "type": "markdown",
      "id": "b1e9791ecaa35eef",
      "text": "> When an object is created and assigned to a variable x, the variable x becomes the owner of the object. If the object is reassigned (as well as parameter passing, etc.) to another variable y, the ownership of the object is transferred from the variable x to the variable y, namely that y becomes the owner of the object and x is not the owner of the object. This is so-called move semantics in Rust."
    },
    {
      "type": "reference",
      "id": "01bc52d17f65c48b",
      "site": "code.fed.wiki.org",
      "slug": "presidential-platform",
      "title": "Presidential Platform",
      "text": "A few elections ago a fellow I knew put up a web site with his own platform as if he were running for president. Of course some of his ideas were outside the reach of the office. But who cares? It was fun. Here is my version. Were I to run for president, this would be my platform. [https://wiki.c2.com/?WardCunningham wiki]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-10-03",
        "story": []
      },
      "date": 1696310568215
    },
    {
      "item": {
        "type": "factory",
        "id": "424e6d37e2665c91"
      },
      "id": "424e6d37e2665c91",
      "type": "add",
      "date": 1696310569371
    },
    {
      "type": "edit",
      "id": "424e6d37e2665c91",
      "item": {
        "type": "paragraph",
        "id": "424e6d37e2665c91",
        "text": "⇒ [[dmx.ralfbarkow.ch]]"
      },
      "date": 1696310579706
    },
    {
      "item": {
        "type": "factory",
        "id": "4bb4d4e8c6cd6e7a"
      },
      "id": "4bb4d4e8c6cd6e7a",
      "type": "add",
      "after": "424e6d37e2665c91",
      "date": 1696310642804
    },
    {
      "type": "edit",
      "id": "4bb4d4e8c6cd6e7a",
      "item": {
        "type": "code",
        "id": "4bb4d4e8c6cd6e7a",
        "text": "ufw allow http\ncertbot \nufw deny http"
      },
      "date": 1696310653681
    },
    {
      "type": "edit",
      "id": "424e6d37e2665c91",
      "item": {
        "type": "paragraph",
        "id": "424e6d37e2665c91",
        "text": "⇒ [[dmx.ralfbarkow.ch]]: Let's Encrypt certificate expiration notice for domain \"dmx.ralfbarkow.ch\""
      },
      "date": 1696310702712
    },
    {
      "type": "edit",
      "id": "424e6d37e2665c91",
      "item": {
        "type": "paragraph",
        "id": "424e6d37e2665c91",
        "text": "⇒ [[dmx.ralfbarkow.ch]]: Let's Encrypt certificate expiration notice for domain"
      },
      "date": 1696310714960
    },
    {
      "type": "edit",
      "id": "424e6d37e2665c91",
      "item": {
        "type": "paragraph",
        "id": "424e6d37e2665c91",
        "text": "⇒ [[dmx.ralfbarkow.ch]]: [[Let's Encrypt]] certificate expiration notice for domain"
      },
      "date": 1696310803085
    },
    {
      "item": {
        "type": "factory",
        "id": "5139a3b9f4efa289"
      },
      "id": "5139a3b9f4efa289",
      "type": "add",
      "after": "4bb4d4e8c6cd6e7a",
      "date": 1696311070197
    },
    {
      "id": "5139a3b9f4efa289",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a"
      ],
      "date": 1696311072246
    },
    {
      "type": "edit",
      "id": "5139a3b9f4efa289",
      "item": {
        "type": "paragraph",
        "id": "5139a3b9f4efa289",
        "text": "⇒ [[PEG]]"
      },
      "date": 1696311084505
    },
    {
      "item": {
        "type": "factory",
        "id": "ad4b51a1ec34ff95"
      },
      "id": "ad4b51a1ec34ff95",
      "type": "add",
      "after": "4bb4d4e8c6cd6e7a",
      "date": 1696311679104
    },
    {
      "type": "edit",
      "id": "ad4b51a1ec34ff95",
      "item": {
        "type": "paragraph",
        "id": "ad4b51a1ec34ff95",
        "text": "Common NoRedInk Containers"
      },
      "date": 1696311682323
    },
    {
      "type": "edit",
      "id": "ad4b51a1ec34ff95",
      "item": {
        "type": "paragraph",
        "id": "ad4b51a1ec34ff95",
        "text": "Common NoRedInk Containers [https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/Nri-Ui-Container-V2 package]"
      },
      "date": 1696311696603
    },
    {
      "type": "edit",
      "id": "ad4b51a1ec34ff95",
      "item": {
        "type": "paragraph",
        "id": "ad4b51a1ec34ff95",
        "text": "⇒"
      },
      "date": 1696311703777
    },
    {
      "type": "add",
      "id": "1d52e91bba6002ee",
      "item": {
        "type": "paragraph",
        "id": "1d52e91bba6002ee",
        "text": "Common NoRedInk Containers [https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/Nri-Ui-Container-V2 package]"
      },
      "after": "ad4b51a1ec34ff95",
      "date": 1696311703989
    },
    {
      "type": "remove",
      "id": "1d52e91bba6002ee",
      "date": 1696311707610
    },
    {
      "type": "edit",
      "id": "ad4b51a1ec34ff95",
      "item": {
        "type": "paragraph",
        "id": "ad4b51a1ec34ff95",
        "text": "⇒ Common NoRedInk Containers [https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/Nri-Ui-Container-V2 package]"
      },
      "date": 1696311708587
    },
    {
      "type": "edit",
      "id": "ad4b51a1ec34ff95",
      "item": {
        "type": "paragraph",
        "id": "ad4b51a1ec34ff95",
        "text": "⇒ Common NoRedInk [[Containers]] [https://package.elm-lang.org/packages/NoRedInk/noredink-ui/latest/Nri-Ui-Container-V2 package]"
      },
      "date": 1696311724008
    },
    {
      "item": {
        "type": "factory",
        "id": "ca3450827816371a"
      },
      "id": "ca3450827816371a",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696313217579
    },
    {
      "id": "ca3450827816371a",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "ca3450827816371a",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696313219154
    },
    {
      "type": "edit",
      "id": "ca3450827816371a",
      "item": {
        "type": "paragraph",
        "id": "ca3450827816371a",
        "text": "[[Roman R. Redziejowski]]"
      },
      "date": 1696313229881
    },
    {
      "type": "edit",
      "id": "ca3450827816371a",
      "item": {
        "type": "paragraph",
        "id": "ca3450827816371a",
        "text": "[[Roman R. Redziejowski]] Cut Points in PEG"
      },
      "date": 1696313548612
    },
    {
      "type": "edit",
      "id": "ca3450827816371a",
      "item": {
        "type": "paragraph",
        "id": "ca3450827816371a",
        "text": "[[Roman R. Redziejowski]] ⇒ [[Cut Points in PEG]]"
      },
      "date": 1696313559694
    },
    {
      "type": "edit",
      "id": "ca3450827816371a",
      "item": {
        "type": "paragraph",
        "id": "ca3450827816371a",
        "text": "⇒ [[Roman R. Redziejowski]] ⇒ [[Cut Points in PEG]]"
      },
      "date": 1696313565258
    },
    {
      "type": "remove",
      "id": "ca3450827816371a",
      "date": 1696316258342
    },
    {
      "type": "edit",
      "id": "5139a3b9f4efa289",
      "item": {
        "type": "paragraph",
        "id": "5139a3b9f4efa289",
        "text": "⇒ [[PEG]] ⇒ [[Roman R. Redziejowski]] ⇒ [[Cut Points in PEG]]"
      },
      "date": 1696316259298
    },
    {
      "type": "add",
      "id": "92dab93b4973a595",
      "item": {
        "type": "paragraph",
        "id": "92dab93b4973a595",
        "text": "Parser combinator implementation for Parsing Expression Grammar (PEG) "
      },
      "after": "5139a3b9f4efa289",
      "date": 1696316681199
    },
    {
      "type": "edit",
      "id": "92dab93b4973a595",
      "item": {
        "type": "paragraph",
        "id": "92dab93b4973a595",
        "text": "Parser combinator implementation for Parsing Expression Grammar (PEG) [https://github.com/YuyaAizawa/peg/tree/2.2.0 github], []"
      },
      "date": 1696316697890
    },
    {
      "type": "edit",
      "id": "92dab93b4973a595",
      "item": {
        "type": "paragraph",
        "id": "92dab93b4973a595",
        "text": "Parser combinator implementation for Parsing Expression Grammar (PEG) [https://github.com/YuyaAizawa/peg/tree/2.2.0 github], [https://package.elm-lang.org/packages/YuyaAizawa/peg/latest/ package]"
      },
      "date": 1696316713532
    },
    {
      "type": "add",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar"
      },
      "after": "92dab93b4973a595",
      "date": 1696317257975
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page]"
      },
      "date": 1696317266569
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm "
      },
      "date": 1696317281514
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm [https://gist.github.com/dynajoe/eeeff72c7ffebc1bb56153078694d90e gist]"
      },
      "date": 1696317295593
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm [https://gist.github.com/dynajoe/eeeff72c7ffebc1bb56153078694d90e gist], Creating a parser [post]"
      },
      "date": 1696317358833
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm [https://gist.github.com/dynajoe/eeeff72c7ffebc1bb56153078694d90e gist], Creating a parser [https://rundis.github.io/blog/2016/elm_light_ast.html post]"
      },
      "date": 1696317369287
    },
    {
      "type": "edit",
      "id": "0214cc186308d392",
      "item": {
        "type": "paragraph",
        "id": "0214cc186308d392",
        "text": "Write your PEG.js grammar [https://pegjs.org/online page],  A PEG.js Grammar for Elm [https://gist.github.com/dynajoe/eeeff72c7ffebc1bb56153078694d90e gist], Creating a parser [https://rundis.github.io/blog/2016/elm_light_ast.html post] by [[Magnus Rundberget]]"
      },
      "date": 1696317453463
    },
    {
      "item": {
        "type": "factory",
        "id": "ff153fa1335e39d4"
      },
      "id": "ff153fa1335e39d4",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696317463684
    },
    {
      "id": "ff153fa1335e39d4",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "92dab93b4973a595",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696317465553
    },
    {
      "type": "edit",
      "id": "ff153fa1335e39d4",
      "item": {
        "type": "video",
        "id": "ff153fa1335e39d4",
        "text": "YOUTUBE pmMhCRvU9R0"
      },
      "date": 1696317473731
    },
    {
      "type": "edit",
      "id": "ff153fa1335e39d4",
      "item": {
        "type": "video",
        "id": "ff153fa1335e39d4",
        "text": "YOUTUBE pmMhCRvU9R0\nDemo of new AST based features in elm-light. The Elm language plugin for Light Table"
      },
      "date": 1696317510569
    },
    {
      "type": "add",
      "id": "03ea973dcc99f484",
      "item": {
        "type": "paragraph",
        "id": "03ea973dcc99f484",
        "text": "[[Lighttable]]"
      },
      "after": "0214cc186308d392",
      "date": 1696317984065
    },
    {
      "id": "03ea973dcc99f484",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "92dab93b4973a595",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696317987795
    },
    {
      "type": "add",
      "id": "8f069536aa284ba4",
      "item": {
        "type": "paragraph",
        "id": "8f069536aa284ba4",
        "text": "[[TEPA]]"
      },
      "after": "03ea973dcc99f484",
      "date": 1696319197653
    },
    {
      "type": "add",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "PEG syntax and semantics"
      },
      "after": "92dab93b4973a595",
      "date": 1696324683730
    },
    {
      "type": "edit",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "PEG syntax and semantics [https://nim-lang.org/docs/pegs.html page]"
      },
      "date": 1696324697178
    },
    {
      "type": "edit",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "⇒ [[PEG Syntax and Semantics]] [https://nim-lang.org/docs/pegs.html page]"
      },
      "date": 1696324731949
    },
    {
      "type": "edit",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "⇒ [[PEG Syntax and Semantics]] [https://nim-lang.org/docs/pegs.html page], PEG vs regular expression"
      },
      "date": 1696325006013
    },
    {
      "type": "edit",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "⇒ [[PEG Syntax and Semantics]] [https://nim-lang.org/docs/pegs.html page], PEG vs regular expression [https://nim-lang.org/docs/pegs.html#peg-syntax-and-semantics-peg-vs-regular-expression page]"
      },
      "date": 1696325014792
    },
    {
      "type": "edit",
      "id": "5139a3b9f4efa289",
      "item": {
        "type": "paragraph",
        "id": "5139a3b9f4efa289",
        "text": "⇒ [[PEG]] ⇒ [[elm-peg]] ⇒ [[Roman R. Redziejowski]] ⇒ [[Cut Points in PEG]]"
      },
      "date": 1696325273596
    },
    {
      "type": "edit",
      "id": "cea804f4e576ebf3",
      "item": {
        "type": "paragraph",
        "id": "cea804f4e576ebf3",
        "text": "⇒ [[Define a PEG Grammar]] ⇒ [[PEG Syntax and Semantics]] [https://nim-lang.org/docs/pegs.html page], PEG vs regular expression [https://nim-lang.org/docs/pegs.html#peg-syntax-and-semantics-peg-vs-regular-expression page]"
      },
      "date": 1696325300095
    },
    {
      "type": "remove",
      "id": "92dab93b4973a595",
      "date": 1696325327313
    },
    {
      "id": "5ca32937a47c9014",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "5ca32937a47c9014",
        "text": "> As a regular expression \\[.*\\] matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as: \\[ ( !\\] . )* \\] (or \\[ @ \\])."
      },
      "after": "cea804f4e576ebf3",
      "attribution": {
        "page": "2023-10-02"
      },
      "date": 1696325987496
    },
    {
      "item": {
        "type": "factory",
        "id": "21d1617d042553bd"
      },
      "id": "21d1617d042553bd",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696325993133
    },
    {
      "id": "21d1617d042553bd",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696325997697
    },
    {
      "type": "edit",
      "id": "21d1617d042553bd",
      "item": {
        "type": "code",
        "id": "21d1617d042553bd",
        "text": "\\[.*\\]"
      },
      "date": 1696325999370
    },
    {
      "type": "edit",
      "id": "5ca32937a47c9014",
      "item": {
        "type": "markdown",
        "id": "5ca32937a47c9014",
        "text": "> As a regular expression"
      },
      "date": 1696326004434
    },
    {
      "type": "add",
      "id": "31e7543843d8b530",
      "item": {
        "type": "markdown",
        "id": "31e7543843d8b530",
        "text": "\\[.*\\] matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as: \\[ ( !\\] . )* \\] (or \\[ @ \\])."
      },
      "after": "5ca32937a47c9014",
      "date": 1696326005086
    },
    {
      "id": "21d1617d042553bd",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696326007716
    },
    {
      "type": "edit",
      "id": "31e7543843d8b530",
      "item": {
        "type": "markdown",
        "id": "31e7543843d8b530",
        "text": "matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as: \\[ ( !\\] . )* \\] (or \\[ @ \\])."
      },
      "date": 1696326017583
    },
    {
      "type": "edit",
      "id": "31e7543843d8b530",
      "item": {
        "type": "markdown",
        "id": "31e7543843d8b530",
        "text": "> matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as: \\[ ( !\\] . )* \\] (or \\[ @ \\])."
      },
      "date": 1696326024815
    },
    {
      "item": {
        "type": "factory",
        "id": "a6b54240a3734059"
      },
      "id": "a6b54240a3734059",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696326074697
    },
    {
      "id": "a6b54240a3734059",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696326080579
    },
    {
      "type": "edit",
      "id": "31e7543843d8b530",
      "item": {
        "type": "markdown",
        "id": "31e7543843d8b530",
        "text": "> matches the longest possible text between '[' and ']'. As a PEG it never matches anything, because a PEG is deterministic: .* consumes the rest of the input, so \\] never matches. As a PEG this needs to be written as:"
      },
      "date": 1696326089776
    },
    {
      "type": "add",
      "id": "539cc6dcda134243",
      "item": {
        "type": "markdown",
        "id": "539cc6dcda134243",
        "text": "(or \\[ @ \\])."
      },
      "after": "31e7543843d8b530",
      "date": 1696326091970
    },
    {
      "type": "edit",
      "id": "a6b54240a3734059",
      "item": {
        "type": "code",
        "id": "a6b54240a3734059",
        "text": "\\[ ( !\\] . )* \\]"
      },
      "date": 1696326092995
    },
    {
      "id": "a6b54240a3734059",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696326094931
    },
    {
      "type": "edit",
      "id": "539cc6dcda134243",
      "item": {
        "type": "markdown",
        "id": "539cc6dcda134243",
        "text": "> (or \\[ @ \\])."
      },
      "date": 1696326118329
    },
    {
      "item": {
        "type": "factory",
        "id": "e427bdf5199f7bdb"
      },
      "id": "e427bdf5199f7bdb",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696326120285
    },
    {
      "id": "e427bdf5199f7bdb",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696326123733
    },
    {
      "type": "edit",
      "id": "e427bdf5199f7bdb",
      "item": {
        "type": "code",
        "id": "e427bdf5199f7bdb",
        "text": "\\[ @ \\])"
      },
      "date": 1696326134010
    },
    {
      "type": "edit",
      "id": "539cc6dcda134243",
      "item": {
        "type": "markdown",
        "id": "539cc6dcda134243",
        "text": "> (or"
      },
      "date": 1696326142138
    },
    {
      "type": "add",
      "id": "fe6395e1e736d924",
      "item": {
        "type": "markdown",
        "id": "fe6395e1e736d924",
        "text": ")."
      },
      "after": "539cc6dcda134243",
      "date": 1696326143041
    },
    {
      "id": "e427bdf5199f7bdb",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696326144658
    },
    {
      "type": "edit",
      "id": "fe6395e1e736d924",
      "item": {
        "type": "markdown",
        "id": "fe6395e1e736d924",
        "text": "> )."
      },
      "date": 1696326148557
    },
    {
      "item": {
        "type": "factory",
        "id": "ca527f480b07b95c"
      },
      "id": "ca527f480b07b95c",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696327428028
    },
    {
      "id": "ca527f480b07b95c",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "ca527f480b07b95c",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696327434671
    },
    {
      "type": "edit",
      "id": "ca527f480b07b95c",
      "item": {
        "type": "code",
        "id": "ca527f480b07b95c",
        "text": "describe \"Parsing Wiki Links\" [\n    test \"should parse a valid wiki link\" <|\n        \\() ->\n            let\n                input = \"[[Federated Wiki]]\"\n                expected = Ok \"Federated Wiki\"\n                actual = YourModule.parseWikiLink input -- Replace with the actual function you're testing\n            in\n            Expect.equal actual expected\n]\n"
      },
      "date": 1696327436946
    },
    {
      "item": {
        "type": "factory",
        "id": "3dcdc2f1def35198"
      },
      "id": "3dcdc2f1def35198",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696327551092
    },
    {
      "id": "3dcdc2f1def35198",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "ca527f480b07b95c",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696327556077
    },
    {
      "type": "edit",
      "id": "3dcdc2f1def35198",
      "item": {
        "type": "code",
        "id": "3dcdc2f1def35198",
        "text": "main =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message)\n"
      },
      "date": 1696327559723
    },
    {
      "item": {
        "type": "factory",
        "id": "3370c97a92de842e"
      },
      "id": "3370c97a92de842e",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696327569278
    },
    {
      "id": "3370c97a92de842e",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696327576595
    },
    {
      "type": "edit",
      "id": "3370c97a92de842e",
      "item": {
        "type": "paragraph",
        "id": "3370c97a92de842e",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/2ab35e7aa4a01059dafeaa192b571c6ba187c88b/src/Main.elm#L41-L48 code]"
      },
      "date": 1696327581974
    },
    {
      "type": "edit",
      "id": "ca527f480b07b95c",
      "item": {
        "type": "code",
        "id": "ca527f480b07b95c",
        "text": "module MainSpec exposing (suite)\n\nimport Expect\nimport Main exposing (result)\nimport Test exposing (..)\n\n\nsuite : Test\nsuite =\n    describe \"Parsing Expression Grammar (PEG)\"\n        [ test \"should parse 'abc' and convert it to all upper case 'ABC' with an action.\" <|\n            \\() ->\n                let\n                    expected =\n                        Ok \"ABC\"\n\n                    actual =\n                        result\n                in\n                Expect.equal actual expected\n        ]\n"
      },
      "date": 1696330789471
    },
    {
      "item": {
        "type": "factory",
        "id": "efa12ef7721f363e"
      },
      "id": "efa12ef7721f363e",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696330802976
    },
    {
      "id": "efa12ef7721f363e",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95"
      ],
      "date": 1696330808862
    },
    {
      "type": "edit",
      "id": "efa12ef7721f363e",
      "item": {
        "type": "paragraph",
        "id": "efa12ef7721f363e",
        "text": "Test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/tests/MainSpec.elm#L1-L22 code]"
      },
      "date": 1696330819013
    },
    {
      "type": "edit",
      "id": "efa12ef7721f363e",
      "item": {
        "type": "paragraph",
        "id": "efa12ef7721f363e",
        "text": "Test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/tests/MainSpec.elm#L1-L22 code]:"
      },
      "date": 1696330832489
    },
    {
      "type": "edit",
      "id": "efa12ef7721f363e",
      "item": {
        "type": "paragraph",
        "id": "efa12ef7721f363e",
        "text": "Test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/tests/MainSpec.elm#L1-L22 code]"
      },
      "date": 1696330837570
    },
    {
      "item": {
        "type": "factory",
        "id": "a6808386054d32ab"
      },
      "id": "a6808386054d32ab",
      "type": "add",
      "after": "ad4b51a1ec34ff95",
      "date": 1696344802994
    },
    {
      "type": "edit",
      "id": "a6808386054d32ab",
      "item": {
        "type": "pagefold",
        "id": "a6808386054d32ab",
        "text": "~"
      },
      "date": 1696344805869
    },
    {
      "item": {
        "type": "factory",
        "id": "739c97fbbaecca75"
      },
      "id": "739c97fbbaecca75",
      "type": "add",
      "after": "a6808386054d32ab",
      "date": 1696344831620
    },
    {
      "type": "edit",
      "id": "739c97fbbaecca75",
      "item": {
        "type": "paragraph",
        "id": "739c97fbbaecca75",
        "text": "⇒ [[Sitemap]]"
      },
      "date": 1696344882465
    },
    {
      "item": {
        "type": "factory",
        "id": "5720a93869c1ba2f"
      },
      "id": "5720a93869c1ba2f",
      "type": "add",
      "after": "739c97fbbaecca75",
      "date": 1696344886812
    },
    {
      "type": "edit",
      "id": "5720a93869c1ba2f",
      "item": {
        "type": "reference",
        "id": "5720a93869c1ba2f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "wiki-sitemap",
        "title": "Wiki Sitemap",
        "text": "A wiki-sitemap is a [[Sitemap]] (or [[site map]]), that software in the federation (like the wiki-client) uses to find pages. It is used for things like [[Wiki Find]], and displaying [[Recent Changes]] and [[Twins]] of the current page. Federated wiki uses [[JSON]] rather than [[XML]] to make it fast to load and utilise in the browser."
      },
      "date": 1696344889042
    },
    {
      "item": {
        "type": "factory",
        "id": "7154dc81ddb9da6e"
      },
      "id": "7154dc81ddb9da6e",
      "type": "add",
      "after": "5720a93869c1ba2f",
      "date": 1696344897931
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [matrix]\nLinks are links into code listing - The sitemap is built by reading the pages directory, and mapping over the list of filenames, replacing each filename with a sitemap entry"
      },
      "date": 1696344908187
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing - The sitemap is built by reading the pages directory, and mapping over the list of filenames, replacing each filename with a sitemap entry"
      },
      "date": 1696344918757
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing - The sitemap is built by reading the pages directory [code], and mapping over the list of filenames, replacing each filename with a sitemap entry"
      },
      "date": 1696344974450
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing - The sitemap is built by reading the pages directory [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L306 code], and mapping over the list of filenames, replacing each filename with a sitemap entry"
      },
      "date": 1696344981863
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing – The sitemap is built by reading the pages directory [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L306 code], and mapping over the list of filenames, replacing each filename with a sitemap entry"
      },
      "date": 1696345000751
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing – The sitemap is built by reading the pages directory [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L306 code], and mapping over the list of filenames [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L336 code], replacing each filename with a sitemap entry"
      },
      "date": 1696345020777
    },
    {
      "type": "edit",
      "id": "7154dc81ddb9da6e",
      "item": {
        "type": "paragraph",
        "id": "7154dc81ddb9da6e",
        "text": "paul90 via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1696342824733chAYM:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nLinks are links into code listing – The sitemap is built by reading the pages directory [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L306 code], and mapping over the list of filenames [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L336 code], replacing each filename with a sitemap entry [https://github.com/fedwiki/wiki-server/blob/0b46906a3e9e01855ea2ed2b18a360ba433ccfe2/lib/page.coffee#L310 code]."
      },
      "date": 1696345043216
    },
    {
      "item": {
        "type": "factory",
        "id": "7fae90cb945f1e00"
      },
      "id": "7fae90cb945f1e00",
      "type": "add",
      "after": "7154dc81ddb9da6e",
      "date": 1696345059634
    },
    {
      "type": "edit",
      "id": "7fae90cb945f1e00",
      "item": {
        "type": "markdown",
        "id": "7fae90cb945f1e00",
        "text": "The error message you are seeing suggests there was an error reading a file. This would suggest you have a file with null as the name - unclear if that is a 4 letter word or really null."
      },
      "date": 1696345061724
    },
    {
      "type": "remove",
      "id": "7fae90cb945f1e00",
      "date": 1696345065168
    },
    {
      "item": {
        "type": "factory",
        "id": "4f1bdbba31dfc21c"
      },
      "id": "4f1bdbba31dfc21c",
      "type": "add",
      "after": "7154dc81ddb9da6e",
      "date": 1696345067088
    },
    {
      "type": "edit",
      "id": "4f1bdbba31dfc21c",
      "item": {
        "type": "paragraph",
        "id": "4f1bdbba31dfc21c",
        "text": "The error message you are seeing suggests there was an error reading a file. This would suggest you have a file with null as the name - unclear if that is a 4 letter word or really null."
      },
      "date": 1696345068266
    },
    {
      "type": "edit",
      "id": "4f1bdbba31dfc21c",
      "item": {
        "type": "paragraph",
        "id": "4f1bdbba31dfc21c",
        "text": "The error message you are seeing suggests there was an error reading a file. This would suggest you have a file with [[null]] as the name – unclear if that is a 4 letter word or really null."
      },
      "date": 1696345083269
    },
    {
      "item": {
        "type": "factory",
        "id": "fc43e732438dbfaa"
      },
      "id": "fc43e732438dbfaa",
      "type": "add",
      "after": "4f1bdbba31dfc21c",
      "date": 1696350419361
    },
    {
      "type": "remove",
      "id": "fc43e732438dbfaa",
      "date": 1696350422340
    },
    {
      "item": {
        "type": "factory",
        "id": "d9c6627b3d20bdeb"
      },
      "id": "d9c6627b3d20bdeb",
      "type": "add",
      "after": "4f1bdbba31dfc21c",
      "date": 1696350433125
    },
    {
      "type": "edit",
      "id": "d9c6627b3d20bdeb",
      "item": {
        "type": "paragraph",
        "id": "d9c6627b3d20bdeb",
        "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16963497581780wbAgk:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1696350441588
    },
    {
      "type": "edit",
      "id": "d9c6627b3d20bdeb",
      "item": {
        "type": "paragraph",
        "id": "d9c6627b3d20bdeb",
        "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16963497581780wbAgk:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]: Think I've found the problem - downloaded your pages repo, and there is a symbolic link in there from pages to ./pages"
      },
      "date": 1696350455729
    },
    {
      "type": "edit",
      "id": "d9c6627b3d20bdeb",
      "item": {
        "type": "paragraph",
        "id": "d9c6627b3d20bdeb",
        "text": "Paul via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16963497581780wbAgk:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]: Think I've found the problem – downloaded your pages repo, and there is a symbolic link in there from pages to ./pages"
      },
      "date": 1696350464567
    },
    {
      "item": {
        "type": "factory",
        "id": "19560e13b76d307d"
      },
      "id": "19560e13b76d307d",
      "type": "add",
      "after": "d9c6627b3d20bdeb",
      "date": 1696350513918
    },
    {
      "type": "edit",
      "id": "19560e13b76d307d",
      "item": {
        "type": "code",
        "id": "19560e13b76d307d",
        "text": "$ ls -Filas pages\n263892 0 lrwxrwxrwx 1 rgb users 7 Jun  5  2022 pages -> ./pages"
      },
      "date": 1696350515590
    },
    {
      "item": {
        "type": "factory",
        "id": "7901818fdd89cc2a"
      },
      "id": "7901818fdd89cc2a",
      "type": "add",
      "after": "19560e13b76d307d",
      "date": 1696351167004
    },
    {
      "type": "edit",
      "id": "7901818fdd89cc2a",
      "item": {
        "type": "paragraph",
        "id": "7901818fdd89cc2a",
        "text": "[[Update the Server Software]]"
      },
      "date": 1696351170934
    },
    {
      "item": {
        "type": "factory",
        "id": "2ca0195dd4b1e912"
      },
      "id": "2ca0195dd4b1e912",
      "type": "add",
      "after": "7901818fdd89cc2a",
      "date": 1696351956302
    },
    {
      "type": "edit",
      "id": "2ca0195dd4b1e912",
      "item": {
        "type": "reference",
        "id": "2ca0195dd4b1e912",
        "site": "wiki.ralfbarkow.ch",
        "slug": "update-the-server-software",
        "title": "Update the Server Software",
        "text": "Updating the Server Software [https://github.com/fedwiki/wiki#updating-the-server-software page]"
      },
      "date": 1696351960114
    },
    {
      "type": "edit",
      "id": "2ca0195dd4b1e912",
      "item": {
        "type": "reference",
        "id": "2ca0195dd4b1e912",
        "site": "wiki.ralfbarkow.ch",
        "slug": "update-the-server-software",
        "title": "Update the Server Software",
        "text": "the globally installed wiki can be updated by re-installing it:"
      },
      "date": 1696351975103
    },
    {
      "id": "273f71c728a8f4d0",
      "type": "add",
      "item": {
        "type": "code",
        "id": "273f71c728a8f4d0",
        "text": "npm install -g wiki"
      },
      "after": "2ca0195dd4b1e912",
      "attribution": {
        "page": "Update the Server Software"
      },
      "date": 1696351977950
    },
    {
      "type": "remove",
      "id": "7901818fdd89cc2a",
      "date": 1696351980347
    },
    {
      "item": {
        "type": "factory",
        "id": "7a66dc2b9bb02958"
      },
      "id": "7a66dc2b9bb02958",
      "type": "add",
      "after": "273f71c728a8f4d0",
      "date": 1696352081263
    },
    {
      "type": "edit",
      "id": "7a66dc2b9bb02958",
      "item": {
        "type": "paragraph",
        "id": "7a66dc2b9bb02958",
        "text": "[[Update the Wiki Server Software]]"
      },
      "date": 1696352090935
    },
    {
      "item": {
        "type": "factory",
        "id": "7f33ec7b3bbec90f"
      },
      "id": "7f33ec7b3bbec90f",
      "type": "add",
      "after": "7a66dc2b9bb02958",
      "date": 1696352106098
    },
    {
      "type": "edit",
      "id": "7f33ec7b3bbec90f",
      "item": {
        "type": "reference",
        "id": "7f33ec7b3bbec90f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "update-the-wiki-server-software",
        "title": "Update the Wiki Server Software",
        "text": "If there are any updates available, the globally installed wiki can be updated by re-installing it: [https://github.com/fedwiki/wiki#updating-the-server-software page]"
      },
      "date": 1696352109511
    },
    {
      "id": "273f71c728a8f4d0",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "2ca0195dd4b1e912",
        "7a66dc2b9bb02958",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0"
      ],
      "date": 1696352114411
    },
    {
      "type": "remove",
      "id": "2ca0195dd4b1e912",
      "date": 1696352117717
    },
    {
      "type": "remove",
      "id": "7a66dc2b9bb02958",
      "date": 1696352120862
    },
    {
      "item": {
        "type": "factory",
        "id": "a185bfeeee18087f"
      },
      "id": "a185bfeeee18087f",
      "type": "add",
      "after": "273f71c728a8f4d0",
      "date": 1696353230541
    },
    {
      "type": "edit",
      "id": "a185bfeeee18087f",
      "item": {
        "type": "reference",
        "id": "a185bfeeee18087f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "-",
        "title": "< >",
        "text": "can be associated with [[Reflection]], with turning [[Structure]] back upon itself. It’s name is [[Angle]] and alone it is [[Nothing]]."
      },
      "date": 1696353233812
    },
    {
      "item": {
        "type": "factory",
        "id": "91795390a4fce287"
      },
      "id": "91795390a4fce287",
      "type": "add",
      "after": "a185bfeeee18087f",
      "date": 1696353238553
    },
    {
      "id": "91795390a4fce287",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f"
      ],
      "date": 1696353240872
    },
    {
      "type": "edit",
      "id": "91795390a4fce287",
      "item": {
        "type": "pagefold",
        "id": "91795390a4fce287",
        "text": "~"
      },
      "date": 1696353243642
    },
    {
      "item": {
        "type": "factory",
        "id": "89bda3d5d9fe886a"
      },
      "id": "89bda3d5d9fe886a",
      "type": "add",
      "after": "a185bfeeee18087f",
      "date": 1696353427920
    },
    {
      "type": "edit",
      "id": "89bda3d5d9fe886a",
      "item": {
        "type": "paragraph",
        "id": "89bda3d5d9fe886a",
        "text": "[[APIs]]"
      },
      "date": 1696353447269
    },
    {
      "id": "a17be42d2a78dca3",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "a17be42d2a78dca3",
        "text": "Application Programming Interfaces"
      },
      "after": "89bda3d5d9fe886a",
      "attribution": {
        "page": "APIs"
      },
      "date": 1696353779568
    },
    {
      "id": "208a0b2c21490be7",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "208a0b2c21490be7",
        "text": "Digital methods are concerned particularly with the use of computational techniques to extract, scrape, collect or capture digital data from various, usually internet-based, sites and services. Digital methods form a set of scholarly approaches that by using algorithms and code, mine large datasets that Amazon, Google, Twitter and other companies have made accessible via public interfaces ([[APIs]]), often to shed light on research questions from humanities and social sciences. Thus, different registers are combined in ingenious ways to be able to find information on topics they were not designed to cover. ([[Berry, Fagerjord 2017 – Digital humanities]], 22) \n"
      },
      "after": "a17be42d2a78dca3",
      "attribution": {
        "page": "APIs"
      },
      "date": 1696353785565
    },
    {
      "id": "a17be42d2a78dca3",
      "type": "remove",
      "removedTo": {
        "page": "APIs"
      },
      "date": 1696353853047
    },
    {
      "id": "208a0b2c21490be7",
      "type": "remove",
      "removedTo": {
        "page": "APIs"
      },
      "date": 1696353861971
    },
    {
      "item": {
        "type": "factory",
        "id": "0649f87aec9bbd8c"
      },
      "id": "0649f87aec9bbd8c",
      "type": "add",
      "after": "89bda3d5d9fe886a",
      "date": 1696357557735
    },
    {
      "item": {
        "type": "factory",
        "id": "171f5e0fff9e3b07"
      },
      "id": "171f5e0fff9e3b07",
      "type": "add",
      "after": "0649f87aec9bbd8c",
      "date": 1696357561294
    },
    {
      "type": "edit",
      "id": "171f5e0fff9e3b07",
      "item": {
        "type": "code",
        "id": "171f5e0fff9e3b07",
        "text": "main : Html.Html msg\nmain =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message)\n "
      },
      "date": 1696357570538
    },
    {
      "type": "edit",
      "id": "0649f87aec9bbd8c",
      "item": {
        "type": "paragraph",
        "id": "0649f87aec9bbd8c",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code]"
      },
      "date": 1696357588799
    },
    {
      "type": "edit",
      "id": "0649f87aec9bbd8c",
      "item": {
        "type": "paragraph",
        "id": "0649f87aec9bbd8c",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code] ⇐ [[Result]]"
      },
      "date": 1696357618461
    },
    {
      "type": "remove",
      "id": "89bda3d5d9fe886a",
      "date": 1696357654066
    },
    {
      "type": "edit",
      "id": "0649f87aec9bbd8c",
      "item": {
        "type": "paragraph",
        "id": "0649f87aec9bbd8c",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code] ⇐ [[Result]] [https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse parse]"
      },
      "date": 1696363754102
    },
    {
      "type": "edit",
      "id": "0649f87aec9bbd8c",
      "item": {
        "type": "paragraph",
        "id": "0649f87aec9bbd8c",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code] ⇐ [[Result]] [https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse parse] – Parses the given input string using the specified PEG grammar. Returns a Result that is either Ok with the parsed result or Err with an error message."
      },
      "date": 1696363775480
    },
    {
      "type": "add",
      "id": "2f200a8bcaee4bbb",
      "item": {
        "type": "paragraph",
        "id": "2f200a8bcaee4bbb",
        "text": "Parse a string with the grammar"
      },
      "after": "0649f87aec9bbd8c",
      "date": 1696363850259
    },
    {
      "id": "2f200a8bcaee4bbb",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f",
        "0649f87aec9bbd8c",
        "171f5e0fff9e3b07",
        "2f200a8bcaee4bbb"
      ],
      "date": 1696363852588
    },
    {
      "type": "edit",
      "id": "0649f87aec9bbd8c",
      "item": {
        "type": "paragraph",
        "id": "0649f87aec9bbd8c",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/aea8bfef364dc22e80362dd2285807fde9b897d0/src/Main.elm#L41-L49 code] ⇐ [[Result]]"
      },
      "date": 1696363879791
    },
    {
      "type": "add",
      "id": "6f9348003256e854",
      "item": {
        "type": "paragraph",
        "id": "6f9348003256e854",
        "text": "[https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse parse] – Parses the given input string using the specified PEG grammar. Returns a Result that is either Ok with the parsed result or Err with an error message."
      },
      "after": "0649f87aec9bbd8c",
      "date": 1696363881656
    },
    {
      "id": "6f9348003256e854",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f",
        "0649f87aec9bbd8c",
        "171f5e0fff9e3b07",
        "2f200a8bcaee4bbb",
        "6f9348003256e854"
      ],
      "date": 1696363895776
    },
    {
      "type": "edit",
      "id": "6f9348003256e854",
      "item": {
        "type": "paragraph",
        "id": "6f9348003256e854",
        "text": "[https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse package] – Parses the given input string using the specified PEG grammar. Returns a Result that is either Ok with the parsed result or Err with an error message."
      },
      "date": 1696363911620
    },
    {
      "type": "remove",
      "id": "6f9348003256e854",
      "date": 1696363915195
    },
    {
      "type": "edit",
      "id": "2f200a8bcaee4bbb",
      "item": {
        "type": "paragraph",
        "id": "2f200a8bcaee4bbb",
        "text": "Parse a string with the grammar [https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse package] – Parses the given input string using the specified PEG grammar. Returns a Result that is either Ok with the parsed result or Err with an error message."
      },
      "date": 1696363916619
    },
    {
      "type": "edit",
      "id": "2f200a8bcaee4bbb",
      "item": {
        "type": "paragraph",
        "id": "2f200a8bcaee4bbb",
        "text": "Parse a string with the grammar [https://package.elm-lang.org/packages/microelm/elm-peg/latest/Peg#parse package]. Returns a [[Result]] that is either Ok with the parsed result or Err with an error message."
      },
      "date": 1696363955394
    },
    {
      "item": {
        "type": "factory",
        "id": "b24ecc8a1b60bfd9"
      },
      "id": "b24ecc8a1b60bfd9",
      "type": "add",
      "after": "2f200a8bcaee4bbb",
      "date": 1696364019941
    },
    {
      "item": {
        "type": "factory",
        "id": "c7457ce3b7837724"
      },
      "id": "c7457ce3b7837724",
      "type": "add",
      "after": "b24ecc8a1b60bfd9",
      "date": 1696364022792
    },
    {
      "type": "edit",
      "id": "c7457ce3b7837724",
      "item": {
        "type": "code",
        "id": "c7457ce3b7837724",
        "text": "type alias Error =\n    { position : Int\n    , message : String\n    }\n\n"
      },
      "date": 1696364024841
    },
    {
      "type": "edit",
      "id": "b24ecc8a1b60bfd9",
      "item": {
        "type": "paragraph",
        "id": "b24ecc8a1b60bfd9",
        "text": "[https://github.com/microelm/elm-peg/blob/2b03f1d90ec42f520702106821c989ffc84e1858/src/Peg.elm#L45-L49 code]"
      },
      "date": 1696364101896
    },
    {
      "item": {
        "type": "factory",
        "id": "ec555a8d07dd81b6"
      },
      "id": "ec555a8d07dd81b6",
      "type": "add",
      "after": "c7457ce3b7837724",
      "date": 1696364199922
    },
    {
      "type": "edit",
      "id": "ec555a8d07dd81b6",
      "item": {
        "type": "paragraph",
        "id": "ec555a8d07dd81b6",
        "text": "Represents an error that occurred during parsing.\n\nThe position field is the 0-based index in the input string where the error occurred, and the message field provides a description of the error."
      },
      "date": 1696364203057
    },
    {
      "type": "edit",
      "id": "b24ecc8a1b60bfd9",
      "item": {
        "type": "paragraph",
        "id": "b24ecc8a1b60bfd9",
        "text": "Error message [https://github.com/microelm/elm-peg/blob/2b03f1d90ec42f520702106821c989ffc84e1858/src/Peg.elm#L45-L49 code]"
      },
      "date": 1696364236099
    },
    {
      "type": "add",
      "id": "4c554da3148268d6",
      "item": {
        "type": "paragraph",
        "id": "4c554da3148268d6",
        "text": "[https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L48-L49 code]"
      },
      "after": "ec555a8d07dd81b6",
      "date": 1696364870350
    },
    {
      "item": {
        "type": "factory",
        "id": "6b001b32971e37c9"
      },
      "id": "6b001b32971e37c9",
      "type": "add",
      "after": "4c554da3148268d6",
      "date": 1696364893226
    },
    {
      "type": "edit",
      "id": "6b001b32971e37c9",
      "item": {
        "type": "code",
        "id": "6b001b32971e37c9",
        "text": "main : Html.Html msg\nmain =\n    case result of\n        Ok value ->\n            Html.text (\"Parsed value: \" ++ value)\n\n        Err error ->\n            Html.text (\"Parse error: \" ++ error.message ++ \" at position \" ++ String.fromInt error.position)\n"
      },
      "date": 1696364895526
    },
    {
      "type": "edit",
      "id": "4c554da3148268d6",
      "item": {
        "type": "paragraph",
        "id": "4c554da3148268d6",
        "text": "refactor: append error position to error message [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/src/Main.elm#L48-L49 code]"
      },
      "date": 1696364922362
    },
    {
      "item": {
        "type": "factory",
        "id": "d136c733c491252b"
      },
      "id": "d136c733c491252b",
      "type": "add",
      "after": "6b001b32971e37c9",
      "date": 1696365385729
    },
    {
      "type": "edit",
      "id": "d136c733c491252b",
      "item": {
        "type": "pagefold",
        "id": "d136c733c491252b",
        "text": "~"
      },
      "date": 1696365394054
    },
    {
      "item": {
        "type": "factory",
        "id": "d1edef4f216c1546"
      },
      "id": "d1edef4f216c1546",
      "type": "add",
      "after": "d136c733c491252b",
      "date": 1696365395750
    },
    {
      "type": "edit",
      "id": "d1edef4f216c1546",
      "item": {
        "type": "reference",
        "id": "d1edef4f216c1546",
        "site": "code.fed.wiki.org",
        "slug": "circuit-structure-inverter",
        "title": "Circuit Structure Inverter",
        "text": "Using lex, yacc and cons-cells to transform a node-centric hierarchical circuit to a cad-ready net-centric model. This would be the \"dual\" of the initial representation."
      },
      "date": 1696365400924
    },
    {
      "item": {
        "type": "factory",
        "id": "dfa66df16f1b5965"
      },
      "id": "dfa66df16f1b5965",
      "type": "add",
      "after": "d1edef4f216c1546",
      "date": 1696365643793
    },
    {
      "id": "dfa66df16f1b5965",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f",
        "0649f87aec9bbd8c",
        "171f5e0fff9e3b07",
        "2f200a8bcaee4bbb",
        "b24ecc8a1b60bfd9",
        "c7457ce3b7837724",
        "ec555a8d07dd81b6",
        "4c554da3148268d6",
        "6b001b32971e37c9",
        "d136c733c491252b",
        "dfa66df16f1b5965",
        "d1edef4f216c1546"
      ],
      "date": 1696365645990
    },
    {
      "type": "edit",
      "id": "dfa66df16f1b5965",
      "item": {
        "type": "reference",
        "id": "dfa66df16f1b5965",
        "site": "ward.asia.wiki.org",
        "slug": "recent-ward-on-wiki",
        "title": "Recent Ward on Wiki",
        "text": "Follow my writing on all aspects of wiki including history and influences. Here we use a curated list of sites to guide this list of changes."
      },
      "date": 1696365651092
    },
    {
      "item": {
        "type": "factory",
        "id": "01bc52d17f65c48b"
      },
      "id": "01bc52d17f65c48b",
      "type": "add",
      "after": "d1edef4f216c1546",
      "date": 1696366772109
    },
    {
      "type": "edit",
      "id": "01bc52d17f65c48b",
      "item": {
        "type": "reference",
        "id": "01bc52d17f65c48b",
        "site": "code.fed.wiki.org",
        "slug": "presidential-platform",
        "title": "Presidential Platform",
        "text": "A few elections ago a fellow I knew put up a web site with his own platform as if he were running for president. Of course some of his ideas were outside the reach of the office. But who cares? It was fun. Here is my version. Were I to run for president, this would be my platform. [https://wiki.c2.com/?WardCunningham wiki]"
      },
      "date": 1696366776819
    },
    {
      "item": {
        "type": "factory",
        "id": "79c012c29a344d7a"
      },
      "id": "79c012c29a344d7a",
      "type": "add",
      "after": "01bc52d17f65c48b",
      "date": 1696368352243
    },
    {
      "type": "edit",
      "id": "79c012c29a344d7a",
      "item": {
        "type": "image",
        "id": "79c012c29a344d7a",
        "text": "Loading It Up",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/0ea7ee11a1330d30a2e9a986e076dd71.jpg"
      },
      "date": 1696368383625
    },
    {
      "id": "79c012c29a344d7a",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f",
        "0649f87aec9bbd8c",
        "171f5e0fff9e3b07",
        "2f200a8bcaee4bbb",
        "b24ecc8a1b60bfd9",
        "c7457ce3b7837724",
        "ec555a8d07dd81b6",
        "4c554da3148268d6",
        "6b001b32971e37c9",
        "d136c733c491252b",
        "dfa66df16f1b5965",
        "d1edef4f216c1546",
        "79c012c29a344d7a",
        "01bc52d17f65c48b"
      ],
      "date": 1696368388313
    },
    {
      "type": "edit",
      "id": "79c012c29a344d7a",
      "item": {
        "type": "image",
        "id": "79c012c29a344d7a",
        "text": "Loading It Upc",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/0ea7ee11a1330d30a2e9a986e076dd71.jpg"
      },
      "date": 1696368462016
    },
    {
      "type": "edit",
      "id": "79c012c29a344d7a",
      "item": {
        "type": "image",
        "id": "79c012c29a344d7a",
        "text": "Loading It Up [https://youtu.be/f84n5oFoZBc?t=1838 video]",
        "size": "wide",
        "width": 430,
        "height": 242,
        "url": "/assets/plugins/image/0ea7ee11a1330d30a2e9a986e076dd71.jpg"
      },
      "date": 1696368470069
    },
    {
      "item": {
        "type": "factory",
        "id": "84df55bf826e2ad4"
      },
      "id": "84df55bf826e2ad4",
      "type": "add",
      "after": "01bc52d17f65c48b",
      "date": 1696368762846
    },
    {
      "id": "84df55bf826e2ad4",
      "type": "move",
      "order": [
        "5139a3b9f4efa289",
        "cea804f4e576ebf3",
        "5ca32937a47c9014",
        "21d1617d042553bd",
        "31e7543843d8b530",
        "a6b54240a3734059",
        "539cc6dcda134243",
        "e427bdf5199f7bdb",
        "fe6395e1e736d924",
        "efa12ef7721f363e",
        "ca527f480b07b95c",
        "3370c97a92de842e",
        "3dcdc2f1def35198",
        "0214cc186308d392",
        "ff153fa1335e39d4",
        "03ea973dcc99f484",
        "8f069536aa284ba4",
        "424e6d37e2665c91",
        "4bb4d4e8c6cd6e7a",
        "ad4b51a1ec34ff95",
        "a6808386054d32ab",
        "739c97fbbaecca75",
        "5720a93869c1ba2f",
        "7154dc81ddb9da6e",
        "4f1bdbba31dfc21c",
        "d9c6627b3d20bdeb",
        "19560e13b76d307d",
        "7f33ec7b3bbec90f",
        "273f71c728a8f4d0",
        "91795390a4fce287",
        "a185bfeeee18087f",
        "0649f87aec9bbd8c",
        "171f5e0fff9e3b07",
        "2f200a8bcaee4bbb",
        "b24ecc8a1b60bfd9",
        "c7457ce3b7837724",
        "ec555a8d07dd81b6",
        "4c554da3148268d6",
        "6b001b32971e37c9",
        "d136c733c491252b",
        "dfa66df16f1b5965",
        "d1edef4f216c1546",
        "79c012c29a344d7a",
        "84df55bf826e2ad4",
        "01bc52d17f65c48b"
      ],
      "date": 1696368765452
    },
    {
      "type": "edit",
      "id": "84df55bf826e2ad4",
      "item": {
        "type": "paragraph",
        "id": "84df55bf826e2ad4",
        "text": "KRust: A Formal Executable Semantics of Rust, [no date]. Online. [Accessed 3 October 2023]. Available from: https://ieeexplore.ieee.org/abstract/document/8560732/Rust is a new and promising high-level system programming language. It provides both memory safety and thread safety through its novel mechanisms such as ownership, moves and borrows. Ownership system ensures that at any point there is only one owner of any given resource. The ownership of a resource can be moved or borrowed according to the lifetimes. The ownership system establishes a clear lifetime for each value and hence Rust does not necessarily need garbage collection. These novel features bring Rust high performance, fine-grained low-level control over memory without garbage collection, which differentiate Rust from other existing prevalent languages. For formal analysis of Rust programs and helping programmers learn its new mechanisms and features, a formal semantics of Rust is desired and useful as a fundament for developing related tools. In this paper, we present a formal executable operational semantics of a subset of Rust, called KRust. The semantics is defined in K, a rewriting-based executable semantic framework for programming languages. The executable semantics yields automatically a formal interpreter and verification tools for Rust programs. KRust has been validated by testing with 182 tests, including 157 tests from the official Rust\n"
      },
      "date": 1696368772842
    },
    {
      "type": "edit",
      "id": "84df55bf826e2ad4",
      "item": {
        "type": "paragraph",
        "id": "84df55bf826e2ad4",
        "text": "KRust: A Formal Executable Semantics of Rust, [no date]. Online. [Accessed 3 October 2023]. Available from: https://ieeexplore.ieee.org/abstract/document/8560732/Rust is a new and promising high-level system programming language. It provides both memory safety and thread safety through its novel mechanisms such as ownership, moves and borrows. Ownership system ensures that at any point there is only one owner of any given resource. The ownership of a resource can be moved or borrowed according to the lifetimes. The ownership system establishes a clear lifetime for each value and hence Rust does not necessarily need garbage collection. These novel features bring Rust high performance, fine-grained low-level control over memory without garbage collection, which differentiate Rust from other existing prevalent languages. For formal analysis of Rust programs and helping programmers learn its new mechanisms and features, a formal semantics of Rust is desired and useful as a fundament for developing related tools. In this paper, we present a formal executable operational semantics of a subset of Rust, called KRust. The semantics is defined in K, a rewriting-based executable semantic framework for programming languages. The executable semantics yields automatically a formal interpreter and verification tools for Rust programs. KRust has been validated by testing with 182 tests, including 157 tests from the official Rust test suite."
      },
      "date": 1696368825663
    },
    {
      "type": "add",
      "id": "b1e9791ecaa35eef",
      "item": {
        "type": "paragraph",
        "id": "b1e9791ecaa35eef",
        "text": "> When an object is created and assigned to a variable x, the variable x becomes the owner of the object. If the object is reassigned (as well as parameter passing, etc.) to another variable y, the ownership of the object is transferred from the variable x to the variable y, namely that y becomes the owner of the object and x is not the owner of the object. This is so-called move semantics in Rust."
      },
      "after": "84df55bf826e2ad4",
      "date": 1696368838119
    },
    {
      "type": "edit",
      "id": "b1e9791ecaa35eef",
      "item": {
        "type": "markdown",
        "id": "b1e9791ecaa35eef",
        "text": "> When an object is created and assigned to a variable x, the variable x becomes the owner of the object. If the object is reassigned (as well as parameter passing, etc.) to another variable y, the ownership of the object is transferred from the variable x to the variable y, namely that y becomes the owner of the object and x is not the owner of the object. This is so-called move semantics in Rust."
      },
      "date": 1696368839251
    },
    {
      "type": "edit",
      "id": "84df55bf826e2ad4",
      "item": {
        "type": "paragraph",
        "id": "84df55bf826e2ad4",
        "text": "KRust: A Formal Executable Semantics of Rust, [no date]. Online. [Accessed 3 October 2023]. Available from: https://ieeexplore.ieee.org/abstract/document/8560732/ Rust is a new and promising high-level system programming language. It provides both memory safety and thread safety through its novel mechanisms such as ownership, moves and borrows. Ownership system ensures that at any point there is only one owner of any given resource. The ownership of a resource can be moved or borrowed according to the lifetimes. The ownership system establishes a clear lifetime for each value and hence Rust does not necessarily need garbage collection. These novel features bring Rust high performance, fine-grained low-level control over memory without garbage collection, which differentiate Rust from other existing prevalent languages. For formal analysis of Rust programs and helping programmers learn its new mechanisms and features, a formal semantics of Rust is desired and useful as a fundament for developing related tools. In this paper, we present a formal executable operational semantics of a subset of Rust, called KRust. The semantics is defined in K, a rewriting-based executable semantic framework for programming languages. The executable semantics yields automatically a formal interpreter and verification tools for Rust programs. KRust has been validated by testing with 182 tests, including 157 tests from the official Rust test suite."
      },
      "date": 1696368881852
    }
  ]
}