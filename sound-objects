{
  "title": "Sound Objects",
  "story": [
    {
      "type": "paragraph",
      "id": "e3e80d4bcb36c590",
      "text": "The revolutionary idea that accompanied the first electroacoustic music was that the entire [[Continuum]] of [[Sound]] can be used in music composition. "
    },
    {
      "type": "paragraph",
      "id": "56a81b41ae7682ca",
      "text": "A language for composing electroacoustic music must be capable of representing and organizing any sound. The key to the generality and expressive power of [[Kyma]] lies in its representation for audio signals. "
    },
    {
      "type": "paragraph",
      "id": "30c5c4f047156820",
      "text": "The Sound object is like the objet sonore of Pierre Schaeffer – a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC) into actual sound. "
    },
    {
      "type": "paragraph",
      "id": "55e6c97561a1424c",
      "text": "More formally,a Sound object is (1)an Atom, (2) a UnaryTransformT(s), where s is a Sound object, or (3)an N-aryTransform T(s1, s, . . ., sm), where m is any integer and s1, s2, .. , Smare Sound objects. A UnaryTransform, T(s), is a Sound object that is the result of applying a function T to a single Sound object. An N-aryTransform is a Sound object that is the result of applying a function to one or more Sound objects."
    },
    {
      "type": "pagefold",
      "id": "2e613d6abb7c5c66",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4155bbf58f8cba16",
      "text": "Much of the early work in digital sound synthesis was based on the \"acoustic compilers\" of Max Mathews, Music1 - Music5 [Loy85]. These \"Music N\" languages generate sounds using software synthesis, i.e., the stream of samples that represents the waveform of the generated sound is specified exclusively in software. Although software synthesis is an extremely flexible technique, most Music N languages were designed to run on general computers without interaction; processing times, measured in hours or even days, can be frustrating for composers who want to experiment with new sounds."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Sound Objects",
        "story": []
      },
      "date": 1664433430326
    },
    {
      "item": {
        "type": "factory",
        "id": "e3e80d4bcb36c590"
      },
      "id": "e3e80d4bcb36c590",
      "type": "add",
      "date": 1664433441331
    },
    {
      "type": "edit",
      "id": "e3e80d4bcb36c590",
      "item": {
        "type": "paragraph",
        "id": "e3e80d4bcb36c590",
        "text": "The revolutionary idea that accompanied the first electroacoustic music was that the entire continuum of sound can be used in music composition. A language for composing electroacoustic music must be capable of representing and organizing any sound. The key to the generality and expressive power of Kyma lies in its representation for audio signals. The Sound object is like the objet sonore of Pierre Schaeffer-a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other"
      },
      "date": 1664433443074
    },
    {
      "type": "edit",
      "id": "e3e80d4bcb36c590",
      "item": {
        "type": "paragraph",
        "id": "e3e80d4bcb36c590",
        "text": "The revolutionary idea that accompanied the first electroacoustic music was that the entire continuum of sound can be used in music composition. A language for composing electroacoustic music must be capable of representing and organizing any sound. The key to the generality and expressive power of Kyma lies in its representation for audio signals. The Sound object is like the objet sonore of Pierre Schaeffer-a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC)into actual sound. More formally,a Sound object is (1)an Atom, (2) a UnaryTransformT(s), where s is a Sound object, or (3)an N-aryTransform T(s1, s, . . ., sm), where m is any integer and s1, s2, .. , Smare Sound objects. A UnaryTransform, T(s), is a Sound object that is the result of applying a function T to a single Sound object. An N-aryTransform is a Sound object that is the result of applying a function to one or more Sound objects."
      },
      "date": 1664433461394
    },
    {
      "type": "edit",
      "id": "e3e80d4bcb36c590",
      "item": {
        "type": "paragraph",
        "id": "e3e80d4bcb36c590",
        "text": "The revolutionary idea that accompanied the first electroacoustic music was that the entire continuum of sound can be used in music composition. "
      },
      "date": 1664433483807
    },
    {
      "type": "add",
      "id": "56a81b41ae7682ca",
      "item": {
        "type": "paragraph",
        "id": "56a81b41ae7682ca",
        "text": "A language for composing electroacoustic music must be capable of representing and organizing any sound. The key to the generality and expressive power of [[Kyma]] lies in its representation for audio signals. The Sound object is like the objet sonore of Pierre Schaeffer-a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC)into actual sound. More formally,a Sound object is (1)an Atom, (2) a UnaryTransformT(s), where s is a Sound object, or (3)an N-aryTransform T(s1, s, . . ., sm), where m is any integer and s1, s2, .. , Smare Sound objects. A UnaryTransform, T(s), is a Sound object that is the result of applying a function T to a single Sound object. An N-aryTransform is a Sound object that is the result of applying a function to one or more Sound objects."
      },
      "after": "e3e80d4bcb36c590",
      "date": 1664433497573
    },
    {
      "type": "edit",
      "id": "56a81b41ae7682ca",
      "item": {
        "type": "paragraph",
        "id": "56a81b41ae7682ca",
        "text": "A language for composing electroacoustic music must be capable of representing and organizing any sound. The key to the generality and expressive power of [[Kyma]] lies in its representation for audio signals. "
      },
      "date": 1664433509762
    },
    {
      "type": "add",
      "id": "30c5c4f047156820",
      "item": {
        "type": "paragraph",
        "id": "30c5c4f047156820",
        "text": "The Sound object is like the objet sonore of Pierre Schaeffer-a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC)into actual sound. "
      },
      "after": "56a81b41ae7682ca",
      "date": 1664433524463
    },
    {
      "type": "add",
      "id": "55e6c97561a1424c",
      "item": {
        "type": "paragraph",
        "id": "55e6c97561a1424c",
        "text": "More formally,a Sound object is (1)an Atom, (2) a UnaryTransformT(s), where s is a Sound object, or (3)an N-aryTransform T(s1, s, . . ., sm), where m is any integer and s1, s2, .. , Smare Sound objects. A UnaryTransform, T(s), is a Sound object that is the result of applying a function T to a single Sound object. An N-aryTransform is a Sound object that is the result of applying a function to one or more Sound objects."
      },
      "after": "30c5c4f047156820",
      "date": 1664433525256
    },
    {
      "type": "edit",
      "id": "30c5c4f047156820",
      "item": {
        "type": "paragraph",
        "id": "30c5c4f047156820",
        "text": "The Sound object is like the objet sonore of Pierre Schaeffer-a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC) into actual sound. "
      },
      "date": 1664433534864
    },
    {
      "type": "edit",
      "id": "30c5c4f047156820",
      "item": {
        "type": "paragraph",
        "id": "30c5c4f047156820",
        "text": "The Sound object is like the objet sonore of Pierre Schaeffer – a collection of discrete objects functioning as unitary entity. A Sound object can be a collection of samples or an assembly of other Sound objects. Every Sound object represents a stream of samples; it is this stream of samples that can be converted by a digital-to-analogconvertor (DAC) into actual sound. "
      },
      "date": 1664433545063
    },
    {
      "item": {
        "type": "factory",
        "id": "2e613d6abb7c5c66"
      },
      "id": "2e613d6abb7c5c66",
      "type": "add",
      "after": "55e6c97561a1424c",
      "date": 1664435081946
    },
    {
      "type": "edit",
      "id": "2e613d6abb7c5c66",
      "item": {
        "type": "pagefold",
        "id": "2e613d6abb7c5c66",
        "text": "~"
      },
      "date": 1664435087267
    },
    {
      "item": {
        "type": "factory",
        "id": "4155bbf58f8cba16"
      },
      "id": "4155bbf58f8cba16",
      "type": "add",
      "after": "2e613d6abb7c5c66",
      "date": 1664435131277
    },
    {
      "type": "edit",
      "id": "4155bbf58f8cba16",
      "item": {
        "type": "paragraph",
        "id": "4155bbf58f8cba16",
        "text": "Much of the early work in digital sound synthesis was based on the \"acoustic compilers\" of Max Mathews, Music1 - Music5 of85]. These \"Music N\" languages generate sounds using software synthesis, i.e., the stream of samples that represents the waveform of the generated sound is specified exclusively in software. Although software synthesis is an extremely flexible technique, most Music N languages were designed to run on general computers without interaction; processing times, measured in hours or even days, can be frustrating for composers who want to experiment with new sounds."
      },
      "date": 1664435133152
    },
    {
      "type": "edit",
      "id": "4155bbf58f8cba16",
      "item": {
        "type": "paragraph",
        "id": "4155bbf58f8cba16",
        "text": "Much of the early work in digital sound synthesis was based on the \"acoustic compilers\" of Max Mathews, Music1 - Music5 [Loy85]. These \"Music N\" languages generate sounds using software synthesis, i.e., the stream of samples that represents the waveform of the generated sound is specified exclusively in software. Although software synthesis is an extremely flexible technique, most Music N languages were designed to run on general computers without interaction; processing times, measured in hours or even days, can be frustrating for composers who want to experiment with new sounds."
      },
      "date": 1664435160414
    },
    {
      "type": "edit",
      "id": "e3e80d4bcb36c590",
      "item": {
        "type": "paragraph",
        "id": "e3e80d4bcb36c590",
        "text": "The revolutionary idea that accompanied the first electroacoustic music was that the entire [[Continuum]] of [[Sound]] can be used in music composition. "
      },
      "date": 1708257768160
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709466260281
    }
  ]
}