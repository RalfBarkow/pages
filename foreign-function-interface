{
  "title": "Foreign Function Interface",
  "story": [
    {
      "type": "markdown",
      "id": "4151bbfe9f183b7f",
      "text": "* The Limits of Elm/JS Interop [https://guide.elm-lang.org/interop/limits.html guide]"
    },
    {
      "type": "markdown",
      "id": "6e2c7f48b7c00809",
      "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\n[[Elm]] does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
    },
    {
      "type": "video",
      "id": "5d2508770e9047bf",
      "text": "YOUTUBE uGlzRt-FYto\n“What is Success?” by [[Evan Czaplicki]], 2018"
    },
    {
      "type": "paragraph",
      "id": "7909bc503f4c12e0",
      "text": "Next: [[Using JS within Elm]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Foreign Function Interface",
        "story": []
      },
      "date": 1638197638012
    },
    {
      "item": {
        "type": "factory",
        "id": "4151bbfe9f183b7f"
      },
      "id": "4151bbfe9f183b7f",
      "type": "add",
      "date": 1638197656865
    },
    {
      "type": "edit",
      "id": "4151bbfe9f183b7f",
      "item": {
        "type": "markdown",
        "id": "4151bbfe9f183b7f",
        "text": "* The Limits of Elm/JS Interop []"
      },
      "date": 1638197670672
    },
    {
      "item": {
        "type": "factory",
        "id": "6e2c7f48b7c00809"
      },
      "id": "6e2c7f48b7c00809",
      "type": "add",
      "after": "4151bbfe9f183b7f",
      "date": 1638197680388
    },
    {
      "type": "edit",
      "id": "6e2c7f48b7c00809",
      "item": {
        "type": "markdown",
        "id": "6e2c7f48b7c00809",
        "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\nElm does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
      },
      "date": 1638197682909
    },
    {
      "type": "edit",
      "id": "6e2c7f48b7c00809",
      "item": {
        "type": "markdown",
        "id": "6e2c7f48b7c00809",
        "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\n[[Elm]] does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
      },
      "date": 1638197719624
    },
    {
      "type": "edit",
      "id": "4151bbfe9f183b7f",
      "item": {
        "type": "markdown",
        "id": "4151bbfe9f183b7f",
        "text": "* The Limits of Elm/JS Interop [https://guide.elm-lang.org/interop/limits.html guide]"
      },
      "date": 1638197731298
    },
    {
      "item": {
        "type": "factory",
        "id": "5d2508770e9047bf"
      },
      "id": "5d2508770e9047bf",
      "type": "add",
      "after": "6e2c7f48b7c00809",
      "date": 1638198039215
    },
    {
      "type": "edit",
      "id": "5d2508770e9047bf",
      "item": {
        "type": "video",
        "id": "5d2508770e9047bf",
        "text": "YOUTUBE uGlzRt-FYto"
      },
      "date": 1638198051331
    },
    {
      "type": "edit",
      "id": "5d2508770e9047bf",
      "item": {
        "type": "video",
        "id": "5d2508770e9047bf",
        "text": "YOUTUBE uGlzRt-FYto\n“What is Success?” by [[Evan Czaplicki]], 2018"
      },
      "date": 1638198092269
    },
    {
      "item": {
        "type": "factory",
        "id": "7909bc503f4c12e0"
      },
      "id": "7909bc503f4c12e0",
      "type": "add",
      "after": "5d2508770e9047bf",
      "date": 1638198268501
    },
    {
      "type": "edit",
      "id": "7909bc503f4c12e0",
      "item": {
        "type": "paragraph",
        "id": "7909bc503f4c12e0",
        "text": "Next: [[Using JS within Elm]]"
      },
      "date": 1638198275189
    }
  ]
}