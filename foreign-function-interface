{
  "title": "Foreign Function Interface",
  "story": [
    {
      "type": "paragraph",
      "id": "9de0e97bbd0c7d16",
      "text": "(FFI) is a programming language mechanism that allows software written in one language to use resources (functions and data structures) that were written in and compiled with a different language."
    },
    {
      "type": "paragraph",
      "id": "616ed0f888816b13",
      "text": "These ”foreign” resources typically take the form of shared libraries, such as DLL files in Windows (or ’.so’ files in Linux and Mac) and can include run-time services made available by your operating system."
    },
    {
      "type": "paragraph",
      "id": "0755a7345162de2f",
      "text": "A good example is a driver library provided by a vendor of a computer peripheral, such as a\nprinter or a network card."
    },
    {
      "type": "pagefold",
      "id": "c2393ce177178ddb",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "4151bbfe9f183b7f",
      "text": "* The Limits of Elm/JS Interop [https://guide.elm-lang.org/interop/limits.html guide]"
    },
    {
      "type": "markdown",
      "id": "6e2c7f48b7c00809",
      "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\n[[Elm]] does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
    },
    {
      "type": "video",
      "id": "5d2508770e9047bf",
      "text": "YOUTUBE uGlzRt-FYto\n“What is [[Success]]?” by [[Evan Czaplicki]], 2018"
    },
    {
      "type": "paragraph",
      "id": "7909bc503f4c12e0",
      "text": "⇒ [[Using JS within Elm]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Foreign Function Interface",
        "story": []
      },
      "date": 1638197638012
    },
    {
      "item": {
        "type": "factory",
        "id": "4151bbfe9f183b7f"
      },
      "id": "4151bbfe9f183b7f",
      "type": "add",
      "date": 1638197656865
    },
    {
      "type": "edit",
      "id": "4151bbfe9f183b7f",
      "item": {
        "type": "markdown",
        "id": "4151bbfe9f183b7f",
        "text": "* The Limits of Elm/JS Interop []"
      },
      "date": 1638197670672
    },
    {
      "item": {
        "type": "factory",
        "id": "6e2c7f48b7c00809"
      },
      "id": "6e2c7f48b7c00809",
      "type": "add",
      "after": "4151bbfe9f183b7f",
      "date": 1638197680388
    },
    {
      "type": "edit",
      "id": "6e2c7f48b7c00809",
      "item": {
        "type": "markdown",
        "id": "6e2c7f48b7c00809",
        "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\nElm does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
      },
      "date": 1638197682909
    },
    {
      "type": "edit",
      "id": "6e2c7f48b7c00809",
      "item": {
        "type": "markdown",
        "id": "6e2c7f48b7c00809",
        "text": "> Many languages have a Foreign Function Interface (FFI) that allows direct bindings functions in the host language. For example, Scala can call Java functions directly. Same with Clojure/Java, Python/C, Haskell/C, and many others.\n\n[[Elm]] does not have a traditional Foreign Function Interface with JavaScript. It is not possible to call arbitrary JavaScript functions at any time. This has tradeoffs that some people really love, but it is not for everyone! If you are evaluating Elm for commercial use, I highly encourage you to look through these interop examples to get a feeling for whether flags, ports, and custom elements can cover everything you need.\n\nWhy does Elm make a different choice than other languages on this?"
      },
      "date": 1638197719624
    },
    {
      "type": "edit",
      "id": "4151bbfe9f183b7f",
      "item": {
        "type": "markdown",
        "id": "4151bbfe9f183b7f",
        "text": "* The Limits of Elm/JS Interop [https://guide.elm-lang.org/interop/limits.html guide]"
      },
      "date": 1638197731298
    },
    {
      "item": {
        "type": "factory",
        "id": "5d2508770e9047bf"
      },
      "id": "5d2508770e9047bf",
      "type": "add",
      "after": "6e2c7f48b7c00809",
      "date": 1638198039215
    },
    {
      "type": "edit",
      "id": "5d2508770e9047bf",
      "item": {
        "type": "video",
        "id": "5d2508770e9047bf",
        "text": "YOUTUBE uGlzRt-FYto"
      },
      "date": 1638198051331
    },
    {
      "type": "edit",
      "id": "5d2508770e9047bf",
      "item": {
        "type": "video",
        "id": "5d2508770e9047bf",
        "text": "YOUTUBE uGlzRt-FYto\n“What is Success?” by [[Evan Czaplicki]], 2018"
      },
      "date": 1638198092269
    },
    {
      "item": {
        "type": "factory",
        "id": "7909bc503f4c12e0"
      },
      "id": "7909bc503f4c12e0",
      "type": "add",
      "after": "5d2508770e9047bf",
      "date": 1638198268501
    },
    {
      "type": "edit",
      "id": "7909bc503f4c12e0",
      "item": {
        "type": "paragraph",
        "id": "7909bc503f4c12e0",
        "text": "Next: [[Using JS within Elm]]"
      },
      "date": 1638198275189
    },
    {
      "item": {
        "type": "factory",
        "id": "c2393ce177178ddb"
      },
      "id": "c2393ce177178ddb",
      "type": "add",
      "after": "7909bc503f4c12e0",
      "date": 1662570384377
    },
    {
      "id": "c2393ce177178ddb",
      "type": "move",
      "order": [
        "c2393ce177178ddb",
        "4151bbfe9f183b7f",
        "6e2c7f48b7c00809",
        "5d2508770e9047bf",
        "7909bc503f4c12e0"
      ],
      "date": 1662570389640
    },
    {
      "type": "edit",
      "id": "c2393ce177178ddb",
      "item": {
        "type": "pagefold",
        "id": "c2393ce177178ddb",
        "text": "~"
      },
      "date": 1662570392970
    },
    {
      "item": {
        "type": "factory",
        "id": "9de0e97bbd0c7d16"
      },
      "id": "9de0e97bbd0c7d16",
      "type": "add",
      "after": "7909bc503f4c12e0",
      "date": 1662570397537
    },
    {
      "id": "9de0e97bbd0c7d16",
      "type": "move",
      "order": [
        "c2393ce177178ddb",
        "4151bbfe9f183b7f",
        "9de0e97bbd0c7d16",
        "6e2c7f48b7c00809",
        "5d2508770e9047bf",
        "7909bc503f4c12e0"
      ],
      "date": 1662570404505
    },
    {
      "id": "9de0e97bbd0c7d16",
      "type": "move",
      "order": [
        "c2393ce177178ddb",
        "9de0e97bbd0c7d16",
        "4151bbfe9f183b7f",
        "6e2c7f48b7c00809",
        "5d2508770e9047bf",
        "7909bc503f4c12e0"
      ],
      "date": 1662570407492
    },
    {
      "id": "9de0e97bbd0c7d16",
      "type": "move",
      "order": [
        "9de0e97bbd0c7d16",
        "c2393ce177178ddb",
        "4151bbfe9f183b7f",
        "6e2c7f48b7c00809",
        "5d2508770e9047bf",
        "7909bc503f4c12e0"
      ],
      "date": 1662570409365
    },
    {
      "type": "edit",
      "id": "9de0e97bbd0c7d16",
      "item": {
        "type": "paragraph",
        "id": "9de0e97bbd0c7d16",
        "text": "A Foreign Function Interface (FFI) is a programming language mechanism\nthat allows software written in one language to use resources (functions and\ndata structures) that were written in and compiled with a different language.\nThese ”foreign” resources typically take the form of shared libraries, such\nas DLL files in Windows (or ’.so’ files in Linux and Mac) and can include run-\ntime services made available by your operating system. A good example is\na driver library provided by a vendor of a computer peripheral, such as a\nprinter or a network card."
      },
      "date": 1662570436540
    },
    {
      "type": "edit",
      "id": "9de0e97bbd0c7d16",
      "item": {
        "type": "paragraph",
        "id": "9de0e97bbd0c7d16",
        "text": "A Foreign Function Interface (FFI) is a programming language mechanism\nthat allows software written in one language to use resources (functions and\ndata structures) that were written in and compiled with a different language.\nThese ”foreign” resources typically take the form of shared libraries, such\nas DLL files in Windows (or ’.so’ files in Linux and Mac) and can include run-time services made available by your operating system. A good example is\na driver library provided by a vendor of a computer peripheral, such as a\nprinter or a network card."
      },
      "date": 1662570469743
    },
    {
      "type": "edit",
      "id": "9de0e97bbd0c7d16",
      "item": {
        "type": "paragraph",
        "id": "9de0e97bbd0c7d16",
        "text": "(FFI) is a programming language mechanism that allows software written in one language to use resources (functions and data structures) that were written in and compiled with a different language."
      },
      "date": 1696588288883
    },
    {
      "type": "add",
      "id": "616ed0f888816b13",
      "item": {
        "type": "paragraph",
        "id": "616ed0f888816b13",
        "text": "These ”foreign” resources typically take the form of shared libraries, such as DLL files in Windows (or ’.so’ files in Linux and Mac) and can include run-time services made available by your operating system."
      },
      "after": "9de0e97bbd0c7d16",
      "date": 1696588309195
    },
    {
      "type": "add",
      "id": "0755a7345162de2f",
      "item": {
        "type": "paragraph",
        "id": "0755a7345162de2f",
        "text": "A good example is a driver library provided by a vendor of a computer peripheral, such as a\nprinter or a network card."
      },
      "after": "616ed0f888816b13",
      "date": 1696588313921
    },
    {
      "type": "edit",
      "id": "7909bc503f4c12e0",
      "item": {
        "type": "paragraph",
        "id": "7909bc503f4c12e0",
        "text": "⇒ [[Using JS within Elm]]"
      },
      "date": 1696588354679
    },
    {
      "type": "edit",
      "id": "5d2508770e9047bf",
      "item": {
        "type": "video",
        "id": "5d2508770e9047bf",
        "text": "YOUTUBE uGlzRt-FYto\n“What is [[Success]]?” by [[Evan Czaplicki]], 2018"
      },
      "date": 1706781638432
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709635190337
    }
  ]
}