{
  "title": "2024-02-05",
  "story": [
    {
      "type": "paragraph",
      "id": "d48f6c803ffd4ae0",
      "text": "⇒ [[federate]]"
    },
    {
      "type": "markdown",
      "id": "26332be736252099",
      "text": "* f**W** ([[federate]]d [[Double You]]) [[Zettelkasten]]"
    },
    {
      "type": "paragraph",
      "id": "3e5eafdde1c8089c",
      "text": "⇒ [[Information Fusion]] ⇒ [[Messaging]] ⇐ [[Alan Kay On Messaging]] ⇒ [[interstitial]] ⇒ [[ma]]"
    },
    {
      "type": "reference",
      "id": "2f341e9cf569c9a2",
      "site": "scripts.fed.wiki",
      "slug": "markov-monkey-script",
      "title": "Markov Monkey Script",
      "text": "A federated wiki lineup once separated from the DOM is then free to explore a site randomly.  [https://github.com/WardCunningham/assets/blob/master/pages/experimental-assets/draw.html github]"
    },
    {
      "type": "paragraph",
      "id": "8209763bd845bfa1",
      "text": "Example ([[Markov Monkey Script]]): [http://small.fed.wiki/assets/exp/draw.html#atomic@wiki.ralfbarkow.ch page] ⇐ [[atomic]]"
    },
    {
      "type": "markdown",
      "id": "7d5fada5206201fd",
      "text": "* [[Terrorist Network]]"
    },
    {
      "type": "markdown",
      "id": "0156122b469ea49b",
      "text": "* [[SOTCAC]] (Self-Organized Terrorist-Counterterrorist Adaptive Coevolutions). SOTCAC uses autonomous, intelligent agents to represent the components of coevolving terrorist and counterterrorist networks."
    },
    {
      "type": "paragraph",
      "id": "0a43edc501bcccbf",
      "text": "⇒ [[Nock Interpreter]]"
    },
    {
      "type": "reference",
      "id": "847a8ae882e2379d",
      "site": "uvp.viki.wiki",
      "slug": "5",
      "title": "5",
      "text": "This sequence of pagination can be rendered as either an exponential transition rate-- or a [[Mondrian]]. because what we're performing is a surface of revolution drawn from a shared space and distributed in the order you'd expect."
    },
    {
      "type": "paragraph",
      "id": "364ee02bede04321",
      "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. [[Urbit]]: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
    },
    {
      "type": "pagefold",
      "id": "ef0b174b8a3a3f31",
      "text": "p. 6"
    },
    {
      "type": "paragraph",
      "id": "87e7877ddfc2b7f9",
      "text": "User-level code is virtualized within a [[Nock Interpreter]] written in [[Hoon]] (with zero virtualization overhead, thanks to a jet). Arvo defines a typed, global, referentially transparent namespace with the Ames network identity (page 34) at the root of the path. User-level code has an extended Nock operator that dereferences this namespace and blocks until results are available. So the Hoon programmer can use any data in the Urbit universe as a typed constant."
    },
    {
      "type": "pagefold",
      "id": "f7bb03933f5e1faf",
      "text": "p. 17"
    },
    {
      "type": "paragraph",
      "id": "3cfbbc0461751316",
      "text": "*[x y] is the Nock interpreter function. x, called the subject, is the data. y, called the formula, is the code."
    },
    {
      "type": "paragraph",
      "id": "2ac52f034e75e956",
      "text": "A Nock interpreter written in Rust [7], with Rust jets, is in early development by a third party. A safe systems language like Rust is probably the right long-term solution."
    },
    {
      "type": "paragraph",
      "id": "6fb1d14df33c1fa6",
      "text": "[7] Nicholas D Matsakis and Felix S Klock II. The rust language. ACM SIGAda Ada Letters, 34(3):103–104, 2014."
    },
    {
      "type": "paragraph",
      "id": "040b7b6885b99331",
      "text": "[…]"
    },
    {
      "type": "pagefold",
      "id": "f1a5d75b7a00cc1c",
      "text": "p. 20"
    },
    {
      "type": "paragraph",
      "id": "7e158c8cbc5b82c2",
      "text": "It’s also easy to see, at least in principle, how we achieve the goal of ensuring that all semantics are updatable. The new core produced by T has to match the Nock interface of the old state (in the C++ sense, the vtable indexes can’t change). Nock can’t change. Anything else can change—Hoon could be replaced by a different language, so long as it can generate a Nock core with the right [[Shape]]."
    },
    {
      "type": "pagefold",
      "id": "ca0ea8098698a5d8",
      "text": "p. 22"
    },
    {
      "type": "paragraph",
      "id": "cecdbde93db4cebd",
      "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $ [⇒ [[void]]], and a payload whose [[Shape]] is [sample context]."
    },
    {
      "type": "image",
      "id": "3dfd250c99061884",
      "text": "Hoon-Funktion",
      "size": "wide",
      "width": 419,
      "height": 298,
      "url": "/assets/plugins/image/4505bb0c92a4df319ff798c1b9e42040.jpg"
    },
    {
      "type": "reference",
      "id": "420a36963428ed48",
      "site": "wiki.ralfbarkow.ch",
      "slug": "context",
      "title": "Context",
      "text": "The [[Arrangement]] axiom gives permission to [[take]] multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
    },
    {
      "type": "paragraph",
      "id": "9755c59fc289329c",
      "text": "The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
    },
    {
      "type": "pagefold",
      "id": "107b2bf2bd8b4696",
      "text": "p. 7"
    },
    {
      "type": "paragraph",
      "id": "77857635bfd4d4f5",
      "text": "Ames delivers messages of arbitrary length, broken into MTU-shaped fragments. Because [[Urbit]] nodes are uniformly persistent, they maintain persistent sessions; message delivery is exactly-once. Every message is a transaction, and acknowledgments are end-to-end; the packet-level acknowledgment that completes a message also reports transaction success. A successful transaction has no result; a failed transaction is a negative ack and can contain an error dump."
    },
    {
      "type": "pagefold",
      "id": "db13920ba0294644",
      "text": "r.Homo.Bammé"
    },
    {
      "type": "paragraph",
      "id": "725b6dd825cbbfbc",
      "text": "[[r.Homo.Bammé]]"
    },
    {
      "type": "reference",
      "id": "52be4174c229eecf",
      "site": "de.dreyeck.ch",
      "slug": "rdialektikordnungbauman",
      "title": "r.DialektikOrdnung.Bauman",
      "text": "Bauman, Zygmunt: Dialektik der Ordnung. Die Moderne und der Holocaust. Hamburg: EVA 1992."
    },
    {
      "type": "paragraph",
      "id": "ef34d6e7e98b1888",
      "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view – although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the [[Holocaust]]: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility – [[Auschwitz]], whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
    },
    {
      "type": "paragraph",
      "id": "6a4bb3c0b29f86ae",
      "text": "⇒ [[Auschwitz]]"
    },
    {
      "type": "pagefold",
      "id": "09d98c2046e4acbe",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "28cf8919ae2b61f3",
      "site": "uvp.viki.wiki",
      "slug": "proof",
      "title": "Proof",
      "text": "GRAHAM, Ronald L., KNUTH, Donald Ervin and PATASHNIK, Oren, 1994. [[Concrete Mathematics]]: a foundation for computer science. 2nd ed. Reading, Mass: Addison-Wesley. ISBN 978-0-201-55802-9. [https://uvp.viki.wiki/assets/concretemathematics/Concrete%20Mathematics%202e.pdf pdf]\n"
    },
    {
      "type": "paragraph",
      "id": "b8111812b06b3a02",
      "text": "[[Recurrent Problems]]"
    },
    {
      "type": "paragraph",
      "id": "4721cd2bc3ae1ea4",
      "text": "THIS CHAPTER EXPLORES three sample problems that give a feel for what's to come. They have two traits in common: They've all been investigated repeatedly by mathematicians; and their solutions all use the idea of [[Recurrence]], in which the solution to each problem depends on the solutions\nto smaller instances of the same problem."
    },
    {
      "type": "paragraph",
      "id": "d5a29b4f7553278a",
      "text": "[[Josephus Problem]]"
    },
    {
      "type": "paragraph",
      "id": "a9c513e8b069bf4c",
      "text": "During the Jewish{Roman war, he was among a band of 41 Jewish rebels trapped in a cave by the Romans. Preferring suicide to capture, the rebels decided to form a circle and, proceeding around it, to kill every third remaining person until no one was left. But Josephus, along with an unindicted co-conspirator, wanted none of this suicide nonsense; so he quickly calculated where he and his friend should stand in the [[Vicious Circle]]."
    },
    {
      "type": "pagefold",
      "id": "6cf8aebe97f9dd77",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "11efee06a0c30d98",
      "text": "⇐ [[Exports from OPM]]"
    },
    {
      "type": "image",
      "id": "fd94239ad69be3b9",
      "text": "RlCSV",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/2d65acc648f01addd0073d8af4cd8761.jpg"
    },
    {
      "type": "image",
      "id": "66a221c74a11be98",
      "text": "Source,Relation,Target",
      "size": "wide",
      "width": 419,
      "height": 254,
      "url": "/assets/plugins/image/ebc66f1f858673c18a131aaa465a6f55.jpg"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-02-05",
        "story": []
      },
      "date": 1707115316037
    },
    {
      "item": {
        "type": "factory",
        "id": "468af1f9ea4a04f3"
      },
      "id": "468af1f9ea4a04f3",
      "type": "add",
      "date": 1707115334835
    },
    {
      "type": "edit",
      "id": "468af1f9ea4a04f3",
      "item": {
        "type": "reference",
        "id": "468af1f9ea4a04f3",
        "site": "uvp.viki.wiki",
        "slug": "gall-app-for-federated-moons",
        "title": "Gall App for Federated Moons",
        "text": "Strangers can read/write and also children: [[Alan Kay On Messaging]] says that"
      },
      "date": 1707115337588
    },
    {
      "item": {
        "type": "factory",
        "id": "4aa65cdf42adfdb5"
      },
      "id": "4aa65cdf42adfdb5",
      "type": "add",
      "after": "468af1f9ea4a04f3",
      "date": 1707115353723
    },
    {
      "type": "edit",
      "id": "4aa65cdf42adfdb5",
      "item": {
        "type": "paragraph",
        "id": "4aa65cdf42adfdb5",
        "text": "\nCARMI, Avishy Y. and MOSKOVICH, Daniel, 2014. Low-Dimensional Topology of Information Fusion.. Online. 18 September 2014. arXiv. arXiv:1409.5505. [Accessed 5 February 2024]. \nWe provide an axiomatic characterization of information fusion, on the basis of which we define an information fusion network. Our construction is reminiscent of tangle diagrams in low dimensional topology. Information fusion networks come equipped with a natural notion of equivalence. Equivalent networks `contain the same information’, but differ locally. When fusing streams of information, an information fusion network may adaptively optimize itself inside its equivalence class. This provides a fault tolerance mechanism for such networks.\narXiv:1409.5505 [cs, math]\n"
      },
      "date": 1707115355256
    },
    {
      "type": "edit",
      "id": "4aa65cdf42adfdb5",
      "item": {
        "type": "paragraph",
        "id": "4aa65cdf42adfdb5",
        "text": "CARMI, Avishy Y. and MOSKOVICH, Daniel, 2014. Low-Dimensional Topology of Information Fusion. 18 September 2014. arXiv. arXiv:1409.5505. [Accessed 5 February 2024]. \nWe provide an axiomatic characterization of information fusion, on the basis of which we define an information fusion network. Our construction is reminiscent of tangle diagrams in low dimensional topology. Information fusion networks come equipped with a natural notion of equivalence. Equivalent networks `contain the same information’, but differ locally. When fusing streams of information, an information fusion network may adaptively optimize itself inside its equivalence class. This provides a fault tolerance mechanism for such networks.\narXiv:1409.5505 [cs, math]\n"
      },
      "date": 1707115364470
    },
    {
      "item": {
        "type": "factory",
        "id": "0c93665560d2942e"
      },
      "id": "0c93665560d2942e",
      "type": "add",
      "after": "4aa65cdf42adfdb5",
      "date": 1707115705441
    },
    {
      "type": "edit",
      "id": "0c93665560d2942e",
      "item": {
        "type": "paragraph",
        "id": "0c93665560d2942e",
        "text": "\nZHOU, Jiaoju, GAO, Feng, YANG, Xuebo and LIN, Weiyang, 2023. Adaptive Information Fusion Network for Arbitrary Style Transfer. In: IECON 2023- 49th Annual Conference of the IEEE Industrial Electronics Society. Online. October 2023. p. 1–7. DOI 10.1109/IECON51785.2023.10312640. [Accessed 5 February 2024]. \nStyle transfer techniques have found wide-ranging applications in diverse domains, including image enhancement, film and animation production, augmented reality, and social media, garnering significant attention across various disciplines. However, prevailing approaches mainly rely on data-driven and adaptive normalization techniques for learning transformation matrices, while overlooking critical aspects such as multi-scale feature extraction, local-global distributions, and spatial-channel dimensions information. In this paper, we present a novel Adaptive Information Fusion Network (AIFN), comprising an encoder, an information fusion module, and a decoder symmetric to the encoder. Specifically, the information fusion module receives multi-scale feature maps extracted from a pre-trained encoder, consisting of three parallel sub-modules: Adaptive Attention Normalization (AdaAttN), Spatial-channel correlation, and a Linear submodule. Through adaptive learning of sub-module weights, we seamlessly integrate style features to achieve a harmonious fusion. Furthermore, we introduce illumination loss, ink wash loss, and identity loss to enhance stylization performance concerning lighting variations, global hue and diffusion mode, while retaining accurate and rich content features. Through comparison and ablation experiments, the proposed method produces high-quality stylized images, demonstrating excellent performance in arbitrary style transfer tasks.\n"
      },
      "date": 1707115707086
    },
    {
      "item": {
        "type": "factory",
        "id": "3e5eafdde1c8089c"
      },
      "id": "3e5eafdde1c8089c",
      "type": "add",
      "after": "0c93665560d2942e",
      "date": 1707115996462
    },
    {
      "type": "edit",
      "id": "3e5eafdde1c8089c",
      "item": {
        "type": "paragraph",
        "id": "3e5eafdde1c8089c",
        "text": "[[Information Fusion]]"
      },
      "date": 1707116000630
    },
    {
      "id": "468af1f9ea4a04f3",
      "type": "remove",
      "removedTo": {
        "page": "Information Fusion"
      },
      "date": 1707116010425
    },
    {
      "id": "4aa65cdf42adfdb5",
      "type": "remove",
      "removedTo": {
        "page": "Information Fusion"
      },
      "date": 1707116013339
    },
    {
      "id": "0c93665560d2942e",
      "type": "remove",
      "removedTo": {
        "page": "Information Fusion"
      },
      "date": 1707116017331
    },
    {
      "type": "edit",
      "id": "3e5eafdde1c8089c",
      "item": {
        "type": "paragraph",
        "id": "3e5eafdde1c8089c",
        "text": "⇒ [[Information Fusion]] ⇒ [[Messaging]]"
      },
      "date": 1707116212073
    },
    {
      "type": "edit",
      "id": "3e5eafdde1c8089c",
      "item": {
        "type": "paragraph",
        "id": "3e5eafdde1c8089c",
        "text": "⇒ [[Information Fusion]] ⇒ [[Messaging]] ⇐ [[Alan Kay On Messaging]]"
      },
      "date": 1707116243529
    },
    {
      "type": "edit",
      "id": "3e5eafdde1c8089c",
      "item": {
        "type": "paragraph",
        "id": "3e5eafdde1c8089c",
        "text": "⇒ [[Information Fusion]] ⇒ [[Messaging]] ⇐ [[Alan Kay On Messaging]] ⇒ [[interstitial]]"
      },
      "date": 1707116262629
    },
    {
      "type": "edit",
      "id": "3e5eafdde1c8089c",
      "item": {
        "type": "paragraph",
        "id": "3e5eafdde1c8089c",
        "text": "⇒ [[Information Fusion]] ⇒ [[Messaging]] ⇐ [[Alan Kay On Messaging]] ⇒ [[interstitial]] ⇒ [[ma]]"
      },
      "date": 1707116268130
    },
    {
      "type": "fork",
      "date": 1707116354079
    },
    {
      "item": {
        "type": "factory",
        "id": "d48f6c803ffd4ae0"
      },
      "id": "d48f6c803ffd4ae0",
      "type": "add",
      "after": "3e5eafdde1c8089c",
      "date": 1707116356054
    },
    {
      "type": "edit",
      "id": "d48f6c803ffd4ae0",
      "item": {
        "type": "paragraph",
        "id": "d48f6c803ffd4ae0",
        "text": "[[federate]] | BrE ˈfɛdəreɪt, AmE ˈfɛdəˌreɪt |\nA transitive verb\n1 (organize on federal basis) föderalistisch organisieren; föderalisieren\n2 (band together in league) zu einem Bund zusammenschließen; föderieren\nB intransitive verb\nsich [zu einem Bund] zusammenschließen"
      },
      "date": 1707116359447
    },
    {
      "type": "edit",
      "id": "d48f6c803ffd4ae0",
      "item": {
        "type": "paragraph",
        "id": "d48f6c803ffd4ae0",
        "text": "[[federate]]"
      },
      "date": 1707116409245
    },
    {
      "id": "d48f6c803ffd4ae0",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "3e5eafdde1c8089c"
      ],
      "date": 1707116419500
    },
    {
      "item": {
        "type": "factory",
        "id": "26332be736252099"
      },
      "id": "26332be736252099",
      "type": "add",
      "after": "3e5eafdde1c8089c",
      "date": 1707116459832
    },
    {
      "type": "edit",
      "id": "26332be736252099",
      "item": {
        "type": "markdown",
        "id": "26332be736252099",
        "text": " f**W** (federated double you) Zettelkasten,"
      },
      "date": 1707116462028
    },
    {
      "id": "26332be736252099",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c"
      ],
      "date": 1707116465544
    },
    {
      "type": "edit",
      "id": "26332be736252099",
      "item": {
        "type": "markdown",
        "id": "26332be736252099",
        "text": " f**W** ([[federate]]d double you) [[Zettelkasten]]"
      },
      "date": 1707116491208
    },
    {
      "type": "edit",
      "id": "d48f6c803ffd4ae0",
      "item": {
        "type": "paragraph",
        "id": "d48f6c803ffd4ae0",
        "text": "⇒ [[federate]]"
      },
      "date": 1707116504333
    },
    {
      "type": "edit",
      "id": "26332be736252099",
      "item": {
        "type": "markdown",
        "id": "26332be736252099",
        "text": "* f**W** ([[federate]]d [[Double You]]) [[Zettelkasten]]"
      },
      "date": 1707116712854
    },
    {
      "item": {
        "type": "factory",
        "id": "2f341e9cf569c9a2"
      },
      "id": "2f341e9cf569c9a2",
      "type": "add",
      "after": "3e5eafdde1c8089c",
      "date": 1707117038419
    },
    {
      "type": "edit",
      "id": "2f341e9cf569c9a2",
      "item": {
        "type": "reference",
        "id": "2f341e9cf569c9a2",
        "site": "scripts.fed.wiki",
        "slug": "markov-monkey-script",
        "title": "Markov Monkey Script",
        "text": "A federated wiki lineup once separated from the DOM is then free to explore a site randomly.  [https://github.com/WardCunningham/assets/blob/master/pages/experimental-assets/draw.html github]"
      },
      "date": 1707117040869
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707118527100
    },
    {
      "type": "fork",
      "date": 1707118535450
    },
    {
      "item": {
        "type": "factory",
        "id": "8209763bd845bfa1"
      },
      "id": "8209763bd845bfa1",
      "type": "add",
      "after": "2f341e9cf569c9a2",
      "date": 1707118798173
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "⇒ [[Nock Interpreter"
      },
      "date": 1707118816842
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "⇒ [[Nock Interpreter]]"
      },
      "date": 1707118829797
    },
    {
      "item": {
        "type": "factory",
        "id": "847a8ae882e2379d"
      },
      "id": "847a8ae882e2379d",
      "type": "add",
      "after": "8209763bd845bfa1",
      "date": 1707118834184
    },
    {
      "type": "edit",
      "id": "847a8ae882e2379d",
      "item": {
        "type": "reference",
        "id": "847a8ae882e2379d",
        "site": "uvp.viki.wiki",
        "slug": "5",
        "title": "5",
        "text": "This sequence of pagination can be rendered as either an exponential transition rate-- or a Mondrian. because what we're performing is a surface of revolution drawn from a shared space and distributed in the order you'd expect."
      },
      "date": 1707118856570
    },
    {
      "type": "edit",
      "id": "847a8ae882e2379d",
      "item": {
        "type": "reference",
        "id": "847a8ae882e2379d",
        "site": "uvp.viki.wiki",
        "slug": "5",
        "title": "5",
        "text": "This sequence of pagination can be rendered as either an exponential transition rate-- or a [[Mondrian]]. because what we're performing is a surface of revolution drawn from a shared space and distributed in the order you'd expect."
      },
      "date": 1707118871743
    },
    {
      "item": {
        "type": "factory",
        "id": "364ee02bede04321"
      },
      "id": "364ee02bede04321",
      "type": "add",
      "after": "847a8ae882e2379d",
      "date": 1707118918811
    },
    {
      "type": "edit",
      "id": "364ee02bede04321",
      "item": {
        "type": "paragraph",
        "id": "364ee02bede04321",
        "text": "\nYARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. Urbit: A solid-state interpreter. White Paper, May. Online. 2016. Vol. 26. Available from: https://media.urbit.org/whitepaper.pdf [Accessed 5 February 2024]. \n"
      },
      "date": 1707118920327
    },
    {
      "type": "edit",
      "id": "364ee02bede04321",
      "item": {
        "type": "paragraph",
        "id": "364ee02bede04321",
        "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. Urbit: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
      },
      "date": 1707118937737
    },
    {
      "item": {
        "type": "factory",
        "id": "87e7877ddfc2b7f9"
      },
      "id": "87e7877ddfc2b7f9",
      "type": "add",
      "after": "364ee02bede04321",
      "date": 1707118992098
    },
    {
      "type": "edit",
      "id": "87e7877ddfc2b7f9",
      "item": {
        "type": "paragraph",
        "id": "87e7877ddfc2b7f9",
        "text": "User-level code is virtualized within a Nock interpreter written in Hoon (with zero virtualization overhead, thanks to a jet). Arvo defines a typed, global, referentially transparent namespace with the Ames network identity (page 34) at the root of the path. User-level code has an extended Nock operator that dereferences this namespace and blocks until results are available. So the Hoon programmer can use any data in the Urbit universe as a typed constant."
      },
      "date": 1707118993680
    },
    {
      "item": {
        "type": "factory",
        "id": "ef0b174b8a3a3f31"
      },
      "id": "ef0b174b8a3a3f31",
      "type": "add",
      "after": "87e7877ddfc2b7f9",
      "date": 1707119042046
    },
    {
      "type": "add",
      "id": "3cfbbc0461751316",
      "item": {
        "type": "paragraph",
        "id": "3cfbbc0461751316",
        "text": "*[x y] is the Nock interpreter function. x, called the subject, is the data. y, called the formula, is the code."
      },
      "after": "ef0b174b8a3a3f31",
      "date": 1707119046050
    },
    {
      "type": "add",
      "id": "4d09a42addedeaf7",
      "item": {
        "type": "paragraph",
        "id": "4d09a42addedeaf7",
        "text": "[…]"
      },
      "after": "3cfbbc0461751316",
      "date": 1707119075191
    },
    {
      "type": "add",
      "id": "2ac52f034e75e956",
      "item": {
        "type": "paragraph",
        "id": "2ac52f034e75e956",
        "text": "A Nock interpreter written in Rust [7], with Rust jets, is in early development by a third party. A safe systems language like Rust is probably the right long-term solution."
      },
      "after": "4d09a42addedeaf7",
      "date": 1707119075887
    },
    {
      "type": "add",
      "id": "040b7b6885b99331",
      "item": {
        "type": "paragraph",
        "id": "040b7b6885b99331",
        "text": "[…]"
      },
      "after": "2ac52f034e75e956",
      "date": 1707119117614
    },
    {
      "type": "add",
      "id": "7e158c8cbc5b82c2",
      "item": {
        "type": "paragraph",
        "id": "7e158c8cbc5b82c2",
        "text": "It’s also easy to see, at least in principle, how we achieve the goal of ensuring that all semantics are updatable. The new core produced by T has to match the Nock interface of the old state (in the C++ sense, the vtable indexes can’t change). Nock can’t change. Anything else can change—Hoon could be replaced by a different language, so long as it can generate a Nock core with the right shape."
      },
      "after": "040b7b6885b99331",
      "date": 1707119118319
    },
    {
      "type": "edit",
      "id": "7e158c8cbc5b82c2",
      "item": {
        "type": "paragraph",
        "id": "7e158c8cbc5b82c2",
        "text": "It’s also easy to see, at least in principle, how we achieve the goal of ensuring that all semantics are updatable. The new core produced by T has to match the Nock interface of the old state (in the C++ sense, the vtable indexes can’t change). Nock can’t change. Anything else can change—Hoon could be replaced by a different language, so long as it can generate a Nock core with the right [[Shape]]."
      },
      "date": 1707119147361
    },
    {
      "type": "add",
      "id": "6fb1d14df33c1fa6",
      "item": {
        "type": "paragraph",
        "id": "6fb1d14df33c1fa6",
        "text": "[7] Nicholas D Matsakis and Felix S Klock II. The rust language. ACM SIGAda Ada Letters, 34(3):103–104, 2014."
      },
      "after": "2ac52f034e75e956",
      "date": 1707119185247
    },
    {
      "item": {
        "type": "factory",
        "id": "ca0ea8098698a5d8"
      },
      "id": "ca0ea8098698a5d8",
      "type": "add",
      "after": "7e158c8cbc5b82c2",
      "date": 1707119237016
    },
    {
      "type": "edit",
      "id": "ca0ea8098698a5d8",
      "item": {
        "type": "pagefold",
        "id": "ca0ea8098698a5d8",
        "text": "p. 22"
      },
      "date": 1707119241292
    },
    {
      "item": {
        "type": "factory",
        "id": "cecdbde93db4cebd"
      },
      "id": "cecdbde93db4cebd",
      "type": "add",
      "after": "ca0ea8098698a5d8",
      "date": 1707119249677
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose shape is [sample context]. The context is the subject in which the gate was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at"
      },
      "date": 1707119251660
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose shape is [sample context]. The context is the subject in which the gate was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address 6 in the core) with x, then compute the arm. (Of course, we are not mutating the noun, but creating a mutant copy.)"
      },
      "date": 1707119270088
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose shape is [sample context]. The context is the subject in which the gate was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the noun, but creating a mutant copy.)"
      },
      "date": 1707119276779
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The context is the subject in which the gate was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the noun, but creating a mutant copy.)"
      },
      "date": 1707119302027
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The context is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the noun, but creating a mutant copy.)"
      },
      "date": 1707119330024
    },
    {
      "item": {
        "type": "factory",
        "id": "107b2bf2bd8b4696"
      },
      "id": "107b2bf2bd8b4696",
      "type": "add",
      "after": "cecdbde93db4cebd",
      "date": 1707119375572
    },
    {
      "type": "edit",
      "id": "107b2bf2bd8b4696",
      "item": {
        "type": "pagefold",
        "id": "107b2bf2bd8b4696",
        "text": "p. 7"
      },
      "date": 1707119379981
    },
    {
      "item": {
        "type": "factory",
        "id": "77857635bfd4d4f5"
      },
      "id": "77857635bfd4d4f5",
      "type": "add",
      "after": "107b2bf2bd8b4696",
      "date": 1707119382888
    },
    {
      "type": "edit",
      "id": "77857635bfd4d4f5",
      "item": {
        "type": "paragraph",
        "id": "77857635bfd4d4f5",
        "text": "Ames delivers messages of arbitrary length, broken into MTUshaped fragments. Because Urbit nodes are uniformly persistent, they maintain persistent sessions; message delivery is exactly-once. Every message is a transaction, and acknowledgments are end-to-end; the packet-level acknowledgment that completes a message also reports transaction success. A successful transaction has no result; a failed transaction is a negative ack and can contain an error dump."
      },
      "date": 1707119385560
    },
    {
      "type": "edit",
      "id": "77857635bfd4d4f5",
      "item": {
        "type": "paragraph",
        "id": "77857635bfd4d4f5",
        "text": "Ames delivers messages of arbitrary length, broken into MTU-shaped fragments. Because Urbit nodes are uniformly persistent, they maintain persistent sessions; message delivery is exactly-once. Every message is a transaction, and acknowledgments are end-to-end; the packet-level acknowledgment that completes a message also reports transaction success. A successful transaction has no result; a failed transaction is a negative ack and can contain an error dump."
      },
      "date": 1707119396922
    },
    {
      "item": {
        "type": "factory",
        "id": "f1a5d75b7a00cc1c"
      },
      "id": "f1a5d75b7a00cc1c",
      "type": "add",
      "after": "77857635bfd4d4f5",
      "date": 1707119424274
    },
    {
      "id": "f1a5d75b7a00cc1c",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "87e7877ddfc2b7f9",
        "ef0b174b8a3a3f31",
        "3cfbbc0461751316",
        "4d09a42addedeaf7",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5"
      ],
      "date": 1707119434569
    },
    {
      "type": "edit",
      "id": "f1a5d75b7a00cc1c",
      "item": {
        "type": "pagefold",
        "id": "f1a5d75b7a00cc1c",
        "text": "p. 20"
      },
      "date": 1707119446782
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The context is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant copy.)"
      },
      "date": 1707119527640
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or gate) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The context is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "date": 1707119537171
    },
    {
      "id": "ef0b174b8a3a3f31",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "3cfbbc0461751316",
        "4d09a42addedeaf7",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5"
      ],
      "date": 1707119719016
    },
    {
      "type": "edit",
      "id": "ef0b174b8a3a3f31",
      "item": {
        "type": "pagefold",
        "id": "ef0b174b8a3a3f31",
        "text": "p. 6"
      },
      "date": 1707119722940
    },
    {
      "id": "f7bb03933f5e1faf",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "f7bb03933f5e1faf",
        "text": "p. 17"
      },
      "after": "87e7877ddfc2b7f9",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707119784990
    },
    {
      "type": "remove",
      "id": "4d09a42addedeaf7",
      "date": 1707119809599
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The context is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "date": 1707119878260
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the empty symbol $, and a payload whose [[Shape]] is [sample context]. The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "date": 1707119913537
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707120006718
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707120107386
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $, and a payload whose [[Shape]] is [sample context]. The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "date": 1707120107387
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $ [⇒ [[void]]], and a payload whose [[Shape]] is [sample context]. The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "date": 1707120166316
    },
    {
      "type": "edit",
      "id": "cecdbde93db4cebd",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $ [⇒ [[void]]], and a payload whose [[Shape]] is [sample context]."
      },
      "date": 1707120211263
    },
    {
      "id": "420a36963428ed48",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "420a36963428ed48",
        "site": "wiki.ralfbarkow.ch",
        "slug": "context",
        "title": "Context",
        "text": "The [[Arrangement]] axiom gives permission to [[take]] multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their frame type, (A [...]) — along with them."
      },
      "after": "cecdbde93db4cebd",
      "attribution": {
        "page": "Frame Type"
      },
      "date": 1707120215160
    },
    {
      "type": "edit",
      "id": "420a36963428ed48",
      "item": {
        "type": "reference",
        "id": "420a36963428ed48",
        "site": "wiki.ralfbarkow.ch",
        "slug": "context",
        "title": "Context",
        "text": "The [[Arrangement]] axiom gives permission to [[take]] multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
      },
      "date": 1707120237869
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707120334930
    },
    {
      "id": "9755c59fc289329c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9755c59fc289329c",
        "text": "The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "after": "420a36963428ed48",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707120394035
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707120468138
    },
    {
      "id": "3dfd250c99061884",
      "type": "add",
      "item": {
        "type": "image",
        "id": "3dfd250c99061884",
        "text": "Hoon-Funktion",
        "size": "wide",
        "width": 419,
        "height": 298,
        "url": "/assets/plugins/image/4505bb0c92a4df319ff798c1b9e42040.jpg"
      },
      "after": "9755c59fc289329c",
      "attribution": {
        "page": "6"
      },
      "date": 1707121534871
    },
    {
      "id": "420a36963428ed48",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "f7bb03933f5e1faf",
        "3cfbbc0461751316",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "9755c59fc289329c",
        "3dfd250c99061884",
        "420a36963428ed48",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5"
      ],
      "date": 1707121552165
    },
    {
      "id": "9755c59fc289329c",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "f7bb03933f5e1faf",
        "3cfbbc0461751316",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "3dfd250c99061884",
        "420a36963428ed48",
        "9755c59fc289329c",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5"
      ],
      "date": 1707121558114
    },
    {
      "item": {
        "type": "factory",
        "id": "db13920ba0294644"
      },
      "id": "db13920ba0294644",
      "type": "add",
      "after": "77857635bfd4d4f5",
      "date": 1707132804345
    },
    {
      "type": "edit",
      "id": "db13920ba0294644",
      "item": {
        "type": "pagefold",
        "id": "db13920ba0294644",
        "text": "r.Homo.Bammé"
      },
      "date": 1707132809573
    },
    {
      "item": {
        "type": "factory",
        "id": "725b6dd825cbbfbc"
      },
      "id": "725b6dd825cbbfbc",
      "type": "add",
      "after": "db13920ba0294644",
      "date": 1707132822741
    },
    {
      "type": "edit",
      "id": "725b6dd825cbbfbc",
      "item": {
        "type": "paragraph",
        "id": "725b6dd825cbbfbc",
        "text": "[[r.Homo.Bammé]]"
      },
      "date": 1707132827673
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707138232414
    },
    {
      "item": {
        "type": "factory",
        "id": "52be4174c229eecf"
      },
      "id": "52be4174c229eecf",
      "type": "add",
      "after": "725b6dd825cbbfbc",
      "date": 1707138254977
    },
    {
      "type": "edit",
      "id": "52be4174c229eecf",
      "item": {
        "type": "reference",
        "id": "52be4174c229eecf",
        "site": "de.dreyeck.ch",
        "slug": "rdialektikordnungbauman",
        "title": "r.DialektikOrdnung.Bauman",
        "text": "Bauman, Zygmunt: Dialektik der Ordnung. Die Moderne und der Holocaust. Hamburg: EVA 1992."
      },
      "date": 1707138262926
    },
    {
      "id": "ef34d6e7e98b1888",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "Dieser Stand der Dinge ist nicht nur, und keinesfalls in erster Linie, beunruhigend aus fachlicher Sicht – wenngleich hier natürlich der Intelli­genz und gesellschaftlichen Relevanz der Soziologie beträchtlicher Schaden droht. Viel schwerer wiegt eine andere Dimension des Holocaust: »Was in einem solchen Maßstab passieren konnte, kann überall wieder passieren. Es liegt im Bereich menschlicher Möglichkeiten – Auschwitz, ob wir es wollen oder nicht, hat das menschliche Bewußtsein um einen ebenso entscheiden­ den Schritt erweitert wie die Landung auf dem Mond.«15 Eine entsetzener­regende Vorstellung, da die gesellschaftlichen Bedingungen für Auschwitz eigentlich nicht verschwunden sind. Keine wirksamen Schritte wurden unternommen, die potentiell und prinzipiell mögliche Wiederholung einer Auschwitz-artigen Katastrophe zu verhindern. Leo Kuper schrieb erst kürzlich, daß »souveräne Nationalstaaten ihren Hoheitsanspruch, wenn sie wollen, auf die Verübung von [[Genozid]], Massakern an bestimmten Volks­gruppen und ihrem Staatsvolk ausdehnen können …, wobei die UNO dieses Recht sogar noch verteidigt.«16"
      },
      "after": "52be4174c229eecf",
      "attribution": {
        "page": "r.DialektikOrdnung.Bauman"
      },
      "date": 1707138288774
    },
    {
      "type": "edit",
      "id": "ef34d6e7e98b1888",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view - although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the Holocaust: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility - Auschwitz, whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
      },
      "date": 1707138304426
    },
    {
      "type": "edit",
      "id": "ef34d6e7e98b1888",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view – although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the Holocaust: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility - Auschwitz, whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
      },
      "date": 1707138321155
    },
    {
      "type": "edit",
      "id": "ef34d6e7e98b1888",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view – although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the [[Holocaust]]: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility - Auschwitz, whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
      },
      "date": 1707138340270
    },
    {
      "type": "edit",
      "id": "ef34d6e7e98b1888",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view – although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the [[Holocaust]]: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility – Auschwitz, whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
      },
      "date": 1707138382981
    },
    {
      "item": {
        "type": "factory",
        "id": "6a4bb3c0b29f86ae"
      },
      "id": "6a4bb3c0b29f86ae",
      "type": "add",
      "after": "ef34d6e7e98b1888",
      "date": 1707138414009
    },
    {
      "type": "edit",
      "id": "6a4bb3c0b29f86ae",
      "item": {
        "type": "paragraph",
        "id": "6a4bb3c0b29f86ae",
        "text": "⇒ [[Auschwitz]]"
      },
      "date": 1707138425116
    },
    {
      "type": "edit",
      "id": "ef34d6e7e98b1888",
      "item": {
        "type": "paragraph",
        "id": "ef34d6e7e98b1888",
        "text": "This state of affairs is not only, and by no means primarily, worrying from a professional point of view – although of course there is considerable damage to the intelligence and social relevance of sociology here. Much more serious is another dimension of the [[Holocaust]]: \"What could happen on such a scale can happen again anywhere. It is within the realm of human possibility – [[Auschwitz]], whether we like it or not, has expanded human consciousness by as decisive a step as the landing on the moon. \"15 A horrifying notion, since the social conditions for Auschwitz have not actually disappeared. No effective steps have been taken to prevent the potential and in principle possible repetition of an Auschwitz-like catastrophe. Leo Kuper recently wrote that \"sovereign nation states can, if they wish, extend their sovereignty to the perpetration of [[Genocide]], massacres against certain ethnic groups and their national people ... and the UN even defends this right. \"16"
      },
      "date": 1707138728662
    },
    {
      "item": {
        "type": "factory",
        "id": "28cf8919ae2b61f3"
      },
      "id": "28cf8919ae2b61f3",
      "type": "add",
      "after": "6a4bb3c0b29f86ae",
      "date": 1707139618560
    },
    {
      "type": "edit",
      "id": "28cf8919ae2b61f3",
      "item": {
        "type": "reference",
        "id": "28cf8919ae2b61f3",
        "site": "uvp.viki.wiki",
        "slug": "proof",
        "title": "Proof",
        "text": "See [[About Frame Plugin]]"
      },
      "date": 1707139632434
    },
    {
      "type": "edit",
      "id": "28cf8919ae2b61f3",
      "item": {
        "type": "reference",
        "id": "28cf8919ae2b61f3",
        "site": "uvp.viki.wiki",
        "slug": "proof",
        "title": "Proof",
        "text": "GRAHAM, Ronald L., KNUTH, Donald Ervin and PATASHNIK, Oren, 1994. Concrete mathematics: a foundation for computer science. 2nd ed. Reading, Mass: Addison-Wesley. ISBN 978-0-201-55802-9.\n"
      },
      "date": 1707139644691
    },
    {
      "item": {
        "type": "factory",
        "id": "b8111812b06b3a02"
      },
      "id": "b8111812b06b3a02",
      "type": "add",
      "after": "28cf8919ae2b61f3",
      "date": 1707139698838
    },
    {
      "type": "edit",
      "id": "b8111812b06b3a02",
      "item": {
        "type": "paragraph",
        "id": "b8111812b06b3a02",
        "text": "[[Recurrent Problems]]"
      },
      "date": 1707139702703
    },
    {
      "item": {
        "type": "factory",
        "id": "a9c513e8b069bf4c"
      },
      "id": "a9c513e8b069bf4c",
      "type": "add",
      "after": "b8111812b06b3a02",
      "date": 1707139834278
    },
    {
      "type": "edit",
      "id": "a9c513e8b069bf4c",
      "item": {
        "type": "paragraph",
        "id": "a9c513e8b069bf4c",
        "text": "During the Jewish{Roman war, he was among a band of 41 Jewish rebels trapped in a cave by the Romans. Preferring suicide to capture, the rebels decided to form a circle and, proceeding around it, to kill every third remaining person until no one was left. But Josephus, along with an unindicted co-conspirator, wanted none of this suicide nonsense; so he quickly calculated where he and his friend should stand in the vicious circle."
      },
      "date": 1707139835776
    },
    {
      "type": "edit",
      "id": "b8111812b06b3a02",
      "item": {
        "type": "paragraph",
        "id": "b8111812b06b3a02",
        "text": "[[Recurrent Problems]], [[Josephus Problem]]"
      },
      "date": 1707139876414
    },
    {
      "type": "edit",
      "id": "a9c513e8b069bf4c",
      "item": {
        "type": "paragraph",
        "id": "a9c513e8b069bf4c",
        "text": "During the Jewish{Roman war, he was among a band of 41 Jewish rebels trapped in a cave by the Romans. Preferring suicide to capture, the rebels decided to form a circle and, proceeding around it, to kill every third remaining person until no one was left. But Josephus, along with an unindicted co-conspirator, wanted none of this suicide nonsense; so he quickly calculated where he and his friend should stand in the [[Vicious Circle]]."
      },
      "date": 1707139945695
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707140107933
    },
    {
      "type": "edit",
      "id": "28cf8919ae2b61f3",
      "item": {
        "type": "reference",
        "id": "28cf8919ae2b61f3",
        "site": "uvp.viki.wiki",
        "slug": "proof",
        "title": "Proof",
        "text": "GRAHAM, Ronald L., KNUTH, Donald Ervin and PATASHNIK, Oren, 1994. Concrete mathematics: a foundation for computer science. 2nd ed. Reading, Mass: Addison-Wesley. ISBN 978-0-201-55802-9. [https://uvp.viki.wiki/assets/concretemathematics/Concrete%20Mathematics%202e.pdf pdf]\n"
      },
      "date": 1707140141008
    },
    {
      "type": "edit",
      "id": "364ee02bede04321",
      "item": {
        "type": "paragraph",
        "id": "364ee02bede04321",
        "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. [[Urbit]]: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
      },
      "date": 1707140227145
    },
    {
      "type": "edit",
      "id": "87e7877ddfc2b7f9",
      "item": {
        "type": "paragraph",
        "id": "87e7877ddfc2b7f9",
        "text": "User-level code is virtualized within a [[Nock Interpreter]] written in [[Hoon]] (with zero virtualization overhead, thanks to a jet). Arvo defines a typed, global, referentially transparent namespace with the Ames network identity (page 34) at the root of the path. User-level code has an extended Nock operator that dereferences this namespace and blocks until results are available. So the Hoon programmer can use any data in the Urbit universe as a typed constant."
      },
      "date": 1707140261438
    },
    {
      "type": "edit",
      "id": "77857635bfd4d4f5",
      "item": {
        "type": "paragraph",
        "id": "77857635bfd4d4f5",
        "text": "Ames delivers messages of arbitrary length, broken into MTU-shaped fragments. Because [[Urbit]] nodes are uniformly persistent, they maintain persistent sessions; message delivery is exactly-once. Every message is a transaction, and acknowledgments are end-to-end; the packet-level acknowledgment that completes a message also reports transaction success. A successful transaction has no result; a failed transaction is a negative ack and can contain an error dump."
      },
      "date": 1707140373473
    },
    {
      "item": {
        "type": "factory",
        "id": "09d98c2046e4acbe"
      },
      "id": "09d98c2046e4acbe",
      "type": "add",
      "after": "a9c513e8b069bf4c",
      "date": 1707140405681
    },
    {
      "id": "09d98c2046e4acbe",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "f7bb03933f5e1faf",
        "3cfbbc0461751316",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "3dfd250c99061884",
        "420a36963428ed48",
        "9755c59fc289329c",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5",
        "db13920ba0294644",
        "725b6dd825cbbfbc",
        "52be4174c229eecf",
        "ef34d6e7e98b1888",
        "6a4bb3c0b29f86ae",
        "09d98c2046e4acbe",
        "28cf8919ae2b61f3",
        "b8111812b06b3a02",
        "a9c513e8b069bf4c"
      ],
      "date": 1707140410019
    },
    {
      "type": "edit",
      "id": "09d98c2046e4acbe",
      "item": {
        "type": "pagefold",
        "id": "09d98c2046e4acbe",
        "text": "~"
      },
      "date": 1707140421161
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707140500831
    },
    {
      "type": "edit",
      "id": "28cf8919ae2b61f3",
      "item": {
        "type": "reference",
        "id": "28cf8919ae2b61f3",
        "site": "uvp.viki.wiki",
        "slug": "proof",
        "title": "Proof",
        "text": "GRAHAM, Ronald L., KNUTH, Donald Ervin and PATASHNIK, Oren, 1994. [[Concrete Mathematics]]: a foundation for computer science. 2nd ed. Reading, Mass: Addison-Wesley. ISBN 978-0-201-55802-9. [https://uvp.viki.wiki/assets/concretemathematics/Concrete%20Mathematics%202e.pdf pdf]\n"
      },
      "date": 1707140557495
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707140636908
    },
    {
      "id": "4721cd2bc3ae1ea4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4721cd2bc3ae1ea4",
        "text": "THIS CHAPTER EXPLORES three sample problems that give a feel for\nwhat's to come. They have two traits in common: They've all been investigated repeatedly by mathematicians; and their solutions all use the idea of\nrecurrence, in which the solution to each problem depends on the solutions\nto smaller instances of the same problem"
      },
      "after": "28cf8919ae2b61f3",
      "attribution": {
        "page": "concrete mathematics",
        "site": "localhost:3000"
      },
      "date": 1707140674576
    },
    {
      "type": "edit",
      "id": "4721cd2bc3ae1ea4",
      "item": {
        "type": "paragraph",
        "id": "4721cd2bc3ae1ea4",
        "text": "THIS CHAPTER EXPLORES three sample problems that give a feel for what's to come. They have two traits in common: They've all been investigated repeatedly by mathematicians; and their solutions all use the idea of [[Recurrence]], in which the solution to each problem depends on the solutions\nto smaller instances of the same problem"
      },
      "date": 1707140704895
    },
    {
      "type": "edit",
      "id": "4721cd2bc3ae1ea4",
      "item": {
        "type": "paragraph",
        "id": "4721cd2bc3ae1ea4",
        "text": "THIS CHAPTER EXPLORES three sample problems that give a feel for what's to come. They have two traits in common: They've all been investigated repeatedly by mathematicians; and their solutions all use the idea of [[Recurrence]], in which the solution to each problem depends on the solutions\nto smaller instances of the same problem."
      },
      "date": 1707140715030
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707140793520
    },
    {
      "type": "edit",
      "id": "b8111812b06b3a02",
      "item": {
        "type": "paragraph",
        "id": "b8111812b06b3a02",
        "text": "[[Recurrent Problems]]"
      },
      "date": 1707140799544
    },
    {
      "type": "add",
      "id": "d5a29b4f7553278a",
      "item": {
        "type": "paragraph",
        "id": "d5a29b4f7553278a",
        "text": "[[Josephus Problem]]"
      },
      "after": "b8111812b06b3a02",
      "date": 1707140800290
    },
    {
      "id": "b8111812b06b3a02",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "f7bb03933f5e1faf",
        "3cfbbc0461751316",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "3dfd250c99061884",
        "420a36963428ed48",
        "9755c59fc289329c",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5",
        "db13920ba0294644",
        "725b6dd825cbbfbc",
        "52be4174c229eecf",
        "ef34d6e7e98b1888",
        "6a4bb3c0b29f86ae",
        "09d98c2046e4acbe",
        "28cf8919ae2b61f3",
        "b8111812b06b3a02",
        "4721cd2bc3ae1ea4",
        "d5a29b4f7553278a",
        "a9c513e8b069bf4c"
      ],
      "date": 1707140802843
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "Example (Markov Monkey Script):"
      },
      "date": 1707141966041
    },
    {
      "type": "add",
      "id": "0a43edc501bcccbf",
      "item": {
        "type": "paragraph",
        "id": "0a43edc501bcccbf",
        "text": "⇒ [[Nock Interpreter]]"
      },
      "after": "8209763bd845bfa1",
      "date": 1707141967741
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "Example (Markov Monkey Script): [http://small.fed.wiki/assets/exp/draw.html#atomic@wiki.ralfbarkow.ch page]"
      },
      "date": 1707141975039
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "Example (Markov Monkey Script): [http://small.fed.wiki/assets/exp/draw.html#atomic@wiki.ralfbarkow.ch page] ⇐ [[atomic]]"
      },
      "date": 1707142003242
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707142029924
    },
    {
      "type": "edit",
      "id": "8209763bd845bfa1",
      "item": {
        "type": "paragraph",
        "id": "8209763bd845bfa1",
        "text": "Example ([[Markov Monkey Script]]): [http://small.fed.wiki/assets/exp/draw.html#atomic@wiki.ralfbarkow.ch page] ⇐ [[atomic]]"
      },
      "date": 1707142029925
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707142110730
    },
    {
      "type": "add",
      "id": "7d5fada5206201fd",
      "item": {
        "type": "paragraph",
        "id": "7d5fada5206201fd",
        "text": "* [[Terrorist Network]]"
      },
      "after": "8209763bd845bfa1",
      "date": 1707142588680
    },
    {
      "type": "edit",
      "id": "7d5fada5206201fd",
      "item": {
        "type": "markdown",
        "id": "7d5fada5206201fd",
        "text": "* [[Terrorist Network]]"
      },
      "date": 1707142590199
    },
    {
      "id": "0156122b469ea49b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0156122b469ea49b",
        "text": "This paper has two primary goals: (1) to review existing analytical and modeling tools that are applicable to the study of dynamic networks (including mathematical graph theory, social network modeling, complex network theory, graph visualization, and multiagent-based modeling), and outline how these tools may be leveraged to help understand the dynamics of terrorist networks, and (2) to introduce the conceptual design of a new multiagent-based toolkit, called [[SOTCAC]] (Self-Organized Terrorist-Counterterrorist Adaptive Coevolutions). SOTCAC uses autonomous, intelligent agents to represent the components of coevolving terrorist and counterterrorist networks."
      },
      "after": "7d5fada5206201fd",
      "attribution": {
        "page": "Terrorist Network"
      },
      "date": 1707142610499
    },
    {
      "type": "edit",
      "id": "0156122b469ea49b",
      "item": {
        "type": "paragraph",
        "id": "0156122b469ea49b",
        "text": "* [[SOTCAC]] (Self-Organized Terrorist-Counterterrorist Adaptive Coevolutions). SOTCAC uses autonomous, intelligent agents to represent the components of coevolving terrorist and counterterrorist networks."
      },
      "date": 1707142615846
    },
    {
      "type": "edit",
      "id": "0156122b469ea49b",
      "item": {
        "type": "markdown",
        "id": "0156122b469ea49b",
        "text": "* [[SOTCAC]] (Self-Organized Terrorist-Counterterrorist Adaptive Coevolutions). SOTCAC uses autonomous, intelligent agents to represent the components of coevolving terrorist and counterterrorist networks."
      },
      "date": 1707142617853
    },
    {
      "item": {
        "type": "factory",
        "id": "6cf8aebe97f9dd77"
      },
      "id": "6cf8aebe97f9dd77",
      "type": "add",
      "after": "a9c513e8b069bf4c",
      "date": 1707148337504
    },
    {
      "type": "edit",
      "id": "6cf8aebe97f9dd77",
      "item": {
        "type": "pagefold",
        "id": "6cf8aebe97f9dd77",
        "text": "~"
      },
      "date": 1707148341864
    },
    {
      "item": {
        "type": "factory",
        "id": "fd94239ad69be3b9"
      },
      "id": "fd94239ad69be3b9",
      "type": "add",
      "after": "6cf8aebe97f9dd77",
      "date": 1707148348065
    },
    {
      "type": "edit",
      "id": "fd94239ad69be3b9",
      "item": {
        "type": "image",
        "id": "fd94239ad69be3b9",
        "text": "RlCSV",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/2d65acc648f01addd0073d8af4cd8761.jpg"
      },
      "date": 1707148375958
    },
    {
      "item": {
        "type": "factory",
        "id": "11efee06a0c30d98"
      },
      "id": "11efee06a0c30d98",
      "type": "add",
      "after": "fd94239ad69be3b9",
      "date": 1707148406040
    },
    {
      "type": "edit",
      "id": "11efee06a0c30d98",
      "item": {
        "type": "paragraph",
        "id": "11efee06a0c30d98",
        "text": "⇐ [[Exports from OPM]]"
      },
      "date": 1707148414990
    },
    {
      "id": "11efee06a0c30d98",
      "type": "move",
      "order": [
        "d48f6c803ffd4ae0",
        "26332be736252099",
        "3e5eafdde1c8089c",
        "2f341e9cf569c9a2",
        "8209763bd845bfa1",
        "7d5fada5206201fd",
        "0156122b469ea49b",
        "0a43edc501bcccbf",
        "847a8ae882e2379d",
        "364ee02bede04321",
        "ef0b174b8a3a3f31",
        "87e7877ddfc2b7f9",
        "f7bb03933f5e1faf",
        "3cfbbc0461751316",
        "2ac52f034e75e956",
        "6fb1d14df33c1fa6",
        "040b7b6885b99331",
        "f1a5d75b7a00cc1c",
        "7e158c8cbc5b82c2",
        "ca0ea8098698a5d8",
        "cecdbde93db4cebd",
        "3dfd250c99061884",
        "420a36963428ed48",
        "9755c59fc289329c",
        "107b2bf2bd8b4696",
        "77857635bfd4d4f5",
        "db13920ba0294644",
        "725b6dd825cbbfbc",
        "52be4174c229eecf",
        "ef34d6e7e98b1888",
        "6a4bb3c0b29f86ae",
        "09d98c2046e4acbe",
        "28cf8919ae2b61f3",
        "b8111812b06b3a02",
        "4721cd2bc3ae1ea4",
        "d5a29b4f7553278a",
        "a9c513e8b069bf4c",
        "6cf8aebe97f9dd77",
        "11efee06a0c30d98",
        "fd94239ad69be3b9"
      ],
      "date": 1707148423375
    },
    {
      "item": {
        "type": "factory",
        "id": "66a221c74a11be98"
      },
      "id": "66a221c74a11be98",
      "type": "add",
      "after": "fd94239ad69be3b9",
      "date": 1707148522273
    },
    {
      "type": "edit",
      "id": "66a221c74a11be98",
      "item": {
        "type": "image",
        "id": "66a221c74a11be98",
        "text": "Uploaded image",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/ebc66f1f858673c18a131aaa465a6f55.jpg"
      },
      "date": 1707148531191
    },
    {
      "type": "edit",
      "id": "66a221c74a11be98",
      "item": {
        "type": "image",
        "id": "66a221c74a11be98",
        "text": "Source,Relation,Target",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/ebc66f1f858673c18a131aaa465a6f55.jpg"
      },
      "date": 1707148538182
    }
  ]
}