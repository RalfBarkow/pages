{
  "title": "Small Is Beautiful",
  "story": [
    {
      "type": "html",
      "text": "The phrase \"small is beautiful\" was coined by the Austrian and American philosopher [[Leopold Kohr]] (1909-1994, winner of the alternative Nobel prize 1986). He was a friend and teacher of [[Ernst Friedrich Schumacher]] who applied this principle to economics and made it famous. ([http://en.wikipedia.org/wiki/Leopold_Kohr en.wikipedia.org], [http://en.wikipedia.org/wiki/E._F._Schumacher en.wikipedia.org])",
      "id": "d876fb9e37f2c994427feeab3916c04f"
    },
    {
      "type": "html",
      "text": "\nSmall Is Beautiful may be used - and was always meant - as a general principle:",
      "id": "67062e5520eacc88cb7737084865c50a"
    },
    {
      "type": "html",
      "text": " small functions are better than huge functions (or modules).",
      "id": "a7cf014eaa300adc9f704203369e91b6"
    },
    {
      "type": "html",
      "text": " simple theories are better than complex theories ([[Occams Razor]]).",
      "id": "096fba36c5a9e1c60f9d64903f9539cd"
    },
    {
      "type": "html",
      "text": " slim organizations are better than large bureaucratic organizations.",
      "id": "4d3bfb1fdbd8edb04f821e1270ee9775"
    },
    {
      "type": "html",
      "text": " small national states are better than a large association(argument against the European integration)",
      "id": "457c86702f0f24734973daf34fb97af6"
    },
    {
      "type": "html",
      "text": " small, simple languages (Forth, Tcl, Eiffel, Smalltalk, C, Lisp, Scheme, Ruby, Io, Erlang) are better than large, complex languages (PL/I, Ada, C++, Java, Perl, PHP).",
      "id": "6f59fde8323d0e838fc33d0b36831f23"
    },
    {
      "type": "html",
      "text": " languages that enable you to create small, simple programs (Smalltalk, Perl, Ruby, PHP) are better than ones that make you create larger, more complex programs (C, Java, Eiffel, ...).",
      "id": "c4581cbae4199996a3341871838006ce"
    },
    {
      "type": "html",
      "text": " Simple micro-frameworks are better than all-encompassing ultra-generic-striving frameworks ([[Helpers Instead Of Wrappers]]).",
      "id": "c9243bb374c25c07d3af1d3d3761038f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "\nThere seems to be some confusion above as to whether Lisp is small and simple or large and complex. Also if Perl is large and complex then it is less desirable than, for example, Eiffel in this dimension but it is apparently more desirable than Eiffel because it enables one to create small, simple programs. Most decisions are non-trivial because they are multidimensional where the optimum decision in one dimension often conflicts with the optimum decision in another dimension.",
      "id": "e67b8037ce1a5bb32eead3351b5d064e"
    },
    {
      "type": "html",
      "text": "- [[Barry Allebone]] (1st October 2002)",
      "id": "b1299f4ff720d3fa7f825c3bf8086ac5"
    },
    {
      "type": "html",
      "text": "<i>Lisp in 1963 was small and simple. [[Scheme Language]] is small and simple.</i>",
      "id": "96b78c596409b3ce0b57eed860c28491"
    },
    {
      "type": "html",
      "text": "<i>[[Common Lisp]] is neither. That doesn't make it a bad language.</i>",
      "id": "e395ff50f0ea2fcef7d3c5faf0aaea38"
    },
    {
      "type": "html",
      "text": "\nI assure you that, although the Lisp/Scheme community regards [[Common Lisp]] as huge and bloated compared with Scheme, by the standards of things like C++, Java, etc, [[Common Lisp]] is tiny, simple, and elegant, even including the standard library.",
      "id": "da65801a96890dc844aeb99c100d9c4f"
    },
    {
      "type": "html",
      "text": "\nIf you exclude the library, then [[Common Lisp]] is not that much bigger than Lisp 1.5. It's still mostly S-expressions, with just a few relatively simple syntactic extensions, and just a few semantic extensions that aren't all that hairy (macros, lexical scoping).",
      "id": "993ae17112ede1462b386e14cce0a563"
    },
    {
      "type": "html",
      "text": "\nWell, the author of the simple/complex language examples is somewhat biased. Those examples are really bad categorized examples. Eiffel is much bigger and complex than Java (regarding the number of features), e.g. Io is a bad example because it is not ready to be used as a production environment, I think... etc.",
      "id": "4837d789688afd7e5f752669215fa6f9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "<i>Small Is Beautiful: Economics As If People Mattered</i>, by E. F. Schumacher ",
      "id": "b8d8ccd485ecf29e583b6cf54128a9bc"
    },
    {
      "type": "image",
      "url": "http://images.amazon.com/images/P/0881791695.01._PE_PI_SCMZZZZZZZ_.jpg",
      "text": "images.amazon.com",
      "id": "c7bd51682349b6a15b4a9aa6a97c95af"
    },
    {
      "type": "html",
      "text": "\n",
      "id": "f44eb9175bb25207e3b336f8235a5c0e"
    },
    {
      "type": "html",
      "text": "[ISBN: 0881791695]",
      "id": "0d6c62358471a49686ccf2488e67be07"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "<i>Smalltalk is beautiful!</i>",
      "id": "b59a8a2c7cb694934653e5cff6099ee5"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "[non-programming content moved to [[Small Is Beautiful]] on [[The Adjunct]]]",
      "id": "a6ed57ddd578933655c8b4b502a4e745"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "I don't think that you can always say that small languages (C, Forth, ...) are always better than large (Java, C++, ...) ones. I think that [[It Depends]] on the special requirements you have to achieve.\nI agree, of course, in [[Small Is Beautiful]], but you can achieve smaller programs with higher (large) languages in special cases. So, for me, that's beautiful in this cases, in others (device drivers, ...) it's not.",
      "id": "7a14dae4d04ea38f06ade890d3b5580a"
    },
    {
      "type": "html",
      "text": "\nCOBOL mixed with inline self-modifying machine code is best if that's what the contract requires, but that's fairly nitpicky. So nitpicks aside, what's an example of a large language that is better/more beautiful than small languages? I think it requires such nitpicks to make this opposite point.",
      "id": "279161847f424448a9b3bca433fa3b16"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "Small programs are more beautiful than large programs.",
      "id": "1fa9460b6979f1e1c4307c1e573a5ea6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "See [[Simple Is Beautiful]], [[Large And Small Languages]], [[Occams Debugger]]",
      "id": "ebe02cd908217f078069920c2db13b2c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d78b7ba61f529c144ecc76bef99f312c"
    },
    {
      "type": "html",
      "text": "[[Category World View]], [[Category Book]], [[Category Low End]]",
      "id": "fb72e95ec8e8948977de2c9dfcf0a9c7"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?SmallIsBeautiful c2.com]",
      "id": "d794377ed67ef6c3cc30b3f4e945b5b5"
    }
  ],
  "journal": [
    {
      "date": 1292456155000,
      "id": "01a25b3a9f05efcb03283197b4c8602b",
      "type": "create",
      "item": {
        "title": "Small Is Beautiful",
        "story": [
          {
            "type": "html",
            "text": "The phrase \"small is beautiful\" was coined by the Austrian and American philosopher [[Leopold Kohr]] (1909-1994, winner of the alternative Nobel prize 1986). He was a friend and teacher of [[Ernst Friedrich Schumacher]] who applied this principle to economics and made it famous. ([http://en.wikipedia.org/wiki/Leopold_Kohr en.wikipedia.org], [http://en.wikipedia.org/wiki/E._F._Schumacher en.wikipedia.org])",
            "id": "d876fb9e37f2c994427feeab3916c04f"
          },
          {
            "type": "html",
            "text": "\nSmall Is Beautiful may be used - and was always meant - as a general principle:",
            "id": "67062e5520eacc88cb7737084865c50a"
          },
          {
            "type": "html",
            "text": " small functions are better than huge functions (or modules).",
            "id": "a7cf014eaa300adc9f704203369e91b6"
          },
          {
            "type": "html",
            "text": " simple theories are better than complex theories ([[Occams Razor]]).",
            "id": "096fba36c5a9e1c60f9d64903f9539cd"
          },
          {
            "type": "html",
            "text": " slim organizations are better than large bureaucratic organizations.",
            "id": "4d3bfb1fdbd8edb04f821e1270ee9775"
          },
          {
            "type": "html",
            "text": " small national states are better than a large association(argument against the European integration)",
            "id": "457c86702f0f24734973daf34fb97af6"
          },
          {
            "type": "html",
            "text": " small, simple languages (Forth, Tcl, Eiffel, Smalltalk, C, Lisp, Scheme, Ruby, Io, Erlang) are better than large, complex languages (PL/I, Ada, C++, Java, Perl, PHP).",
            "id": "6f59fde8323d0e838fc33d0b36831f23"
          },
          {
            "type": "html",
            "text": " languages that enable you to create small, simple programs (Smalltalk, Perl, Ruby, PHP) are better than ones that make you create larger, more complex programs (C, Java, Eiffel, ...).",
            "id": "c4581cbae4199996a3341871838006ce"
          },
          {
            "type": "html",
            "text": " Simple micro-frameworks are better than all-encompassing ultra-generic-striving frameworks ([[Helpers Instead Of Wrappers]]).",
            "id": "c9243bb374c25c07d3af1d3d3761038f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "\nThere seems to be some confusion above as to whether Lisp is small and simple or large and complex. Also if Perl is large and complex then it is less desirable than, for example, Eiffel in this dimension but it is apparently more desirable than Eiffel because it enables one to create small, simple programs. Most decisions are non-trivial because they are multidimensional where the optimum decision in one dimension often conflicts with the optimum decision in another dimension.",
            "id": "e67b8037ce1a5bb32eead3351b5d064e"
          },
          {
            "type": "html",
            "text": "- [[Barry Allebone]] (1st October 2002)",
            "id": "b1299f4ff720d3fa7f825c3bf8086ac5"
          },
          {
            "type": "html",
            "text": "<i>Lisp in 1963 was small and simple. [[Scheme Language]] is small and simple.</i>",
            "id": "96b78c596409b3ce0b57eed860c28491"
          },
          {
            "type": "html",
            "text": "<i>[[Common Lisp]] is neither. That doesn't make it a bad language.</i>",
            "id": "e395ff50f0ea2fcef7d3c5faf0aaea38"
          },
          {
            "type": "html",
            "text": "\nI assure you that, although the Lisp/Scheme community regards [[Common Lisp]] as huge and bloated compared with Scheme, by the standards of things like C++, Java, etc, [[Common Lisp]] is tiny, simple, and elegant, even including the standard library.",
            "id": "da65801a96890dc844aeb99c100d9c4f"
          },
          {
            "type": "html",
            "text": "\nIf you exclude the library, then [[Common Lisp]] is not that much bigger than Lisp 1.5. It's still mostly S-expressions, with just a few relatively simple syntactic extensions, and just a few semantic extensions that aren't all that hairy (macros, lexical scoping).",
            "id": "993ae17112ede1462b386e14cce0a563"
          },
          {
            "type": "html",
            "text": "\nWell, the author of the simple/complex language examples is somewhat biased. Those examples are really bad categorized examples. Eiffel is much bigger and complex than Java (regarding the number of features), e.g. Io is a bad example because it is not ready to be used as a production environment, I think... etc.",
            "id": "4837d789688afd7e5f752669215fa6f9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "<i>Small Is Beautiful: Economics As If People Mattered</i>, by E. F. Schumacher ",
            "id": "b8d8ccd485ecf29e583b6cf54128a9bc"
          },
          {
            "type": "image",
            "url": "http://images.amazon.com/images/P/0881791695.01._PE_PI_SCMZZZZZZZ_.jpg",
            "text": "images.amazon.com",
            "id": "c7bd51682349b6a15b4a9aa6a97c95af"
          },
          {
            "type": "html",
            "text": "\n",
            "id": "f44eb9175bb25207e3b336f8235a5c0e"
          },
          {
            "type": "html",
            "text": "[ISBN: 0881791695]",
            "id": "0d6c62358471a49686ccf2488e67be07"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "<i>Smalltalk is beautiful!</i>",
            "id": "b59a8a2c7cb694934653e5cff6099ee5"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "[non-programming content moved to [[Small Is Beautiful]] on [[The Adjunct]]]",
            "id": "a6ed57ddd578933655c8b4b502a4e745"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "I don't think that you can always say that small languages (C, Forth, ...) are always better than large (Java, C++, ...) ones. I think that [[It Depends]] on the special requirements you have to achieve.\nI agree, of course, in [[Small Is Beautiful]], but you can achieve smaller programs with higher (large) languages in special cases. So, for me, that's beautiful in this cases, in others (device drivers, ...) it's not.",
            "id": "7a14dae4d04ea38f06ade890d3b5580a"
          },
          {
            "type": "html",
            "text": "\nCOBOL mixed with inline self-modifying machine code is best if that's what the contract requires, but that's fairly nitpicky. So nitpicks aside, what's an example of a large language that is better/more beautiful than small languages? I think it requires such nitpicks to make this opposite point.",
            "id": "279161847f424448a9b3bca433fa3b16"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "Small programs are more beautiful than large programs.",
            "id": "1fa9460b6979f1e1c4307c1e573a5ea6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "See [[Simple Is Beautiful]], [[Large And Small Languages]], [[Occams Debugger]]",
            "id": "ebe02cd908217f078069920c2db13b2c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d78b7ba61f529c144ecc76bef99f312c"
          },
          {
            "type": "html",
            "text": "[[Category World View]], [[Category Book]], [[Category Low End]]",
            "id": "fb72e95ec8e8948977de2c9dfcf0a9c7"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?SmallIsBeautiful c2.com]",
            "id": "d794377ed67ef6c3cc30b3f4e945b5b5"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1627291585979
    }
  ]
}