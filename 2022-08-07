{
  "title": "2022-08-07",
  "story": [
    {
      "type": "paragraph",
      "id": "91da742247841ad2",
      "text": "Nifi PlcAddressString syntax (dev@plc4x.apache.org)"
    },
    {
      "type": "markdown",
      "id": "8045509b71f58993",
      "text": "[[Apache NiFi]] supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic. [https://nifi.apache.org/ site], [https://en.wikipedia.org/wiki/Apache_NiFi wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "34e423587cc163a5",
      "text": "[[Flow-Based Programming]] [https://en.wikipedia.org/wiki/Flow-based_programming wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "ed6cadb1862695f3",
      "text": "[[GtMondrian]]"
    },
    {
      "type": "markdown",
      "id": "8d716737388dfcb0",
      "text": "constructing graph-based visualizations – https://scholar.google.com/scholar?hl=de&as_sdt=0%2C5&q=constructing+graph-based+visualizations&btnG="
    },
    {
      "type": "paragraph",
      "id": "a1abe8ab5d0977c0",
      "text": "COLLBERG, Christian, KOBOUROV, Stephen, NAGRA, Jasvir, PITTS, Jacob and WAMPLER, Kevin, 2003. A system for graph-based visualization of the evolution of software. In: Proceedings of the 2003 ACM symposium on Software visualization. Online. New York, NY, USA: Association for Computing Machinery. 11 June 2003. p. 77-ff. [Accessed 7 August 2022]. SoftVis ’03. ISBN 978-1-58113-642-5. DOI 10.1145/774833.774844. [https://dl.acm.org/doi/abs/10.1145/774833.774844 acm]"
    },
    {
      "type": "markdown",
      "id": "5a2e817ef64a3149",
      "text": "> We describe GEVOL, a system that visualizes the evolution of software using a novel graph drawing technique for visualization of large graphs with a temporal component. GEVOL extracts information about a Java program stored within a CVS version control system and displays it using a temporal graph visualizer. This information can be used by programmers to understand the evolution of a legacy program: Why is the program structured the way it is? Which programmers were responsible for which parts of the program during which time periods? Which parts of the program appear unstable over long periods of time and may need to be rewritten? This type of information will complement that produced by more static tools such as source code browsers, slicers, and static analyzers.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-08-07",
        "story": []
      },
      "date": 1659869389882
    },
    {
      "item": {
        "type": "factory",
        "id": "91da742247841ad2"
      },
      "id": "91da742247841ad2",
      "type": "add",
      "date": 1659869391346
    },
    {
      "type": "edit",
      "id": "91da742247841ad2",
      "item": {
        "type": "paragraph",
        "id": "91da742247841ad2",
        "text": "Nifi PlcAddressString syntax"
      },
      "date": 1659869394492
    },
    {
      "type": "edit",
      "id": "91da742247841ad2",
      "item": {
        "type": "paragraph",
        "id": "91da742247841ad2",
        "text": "Nifi PlcAddressString syntax (dev@plc4x.apache.org)"
      },
      "date": 1659869404169
    },
    {
      "item": {
        "type": "factory",
        "id": "8045509b71f58993"
      },
      "id": "8045509b71f58993",
      "type": "add",
      "after": "91da742247841ad2",
      "date": 1659869453402
    },
    {
      "type": "edit",
      "id": "8045509b71f58993",
      "item": {
        "type": "paragraph",
        "id": "8045509b71f58993",
        "text": "– https://nifi.apache.org/"
      },
      "date": 1659869455631
    },
    {
      "type": "edit",
      "id": "8045509b71f58993",
      "item": {
        "type": "markdown",
        "id": "8045509b71f58993",
        "text": "– https://nifi.apache.org/"
      },
      "date": 1659869456978
    },
    {
      "type": "edit",
      "id": "8045509b71f58993",
      "item": {
        "type": "markdown",
        "id": "8045509b71f58993",
        "text": "[[Apache NiFi]] supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic.[https://nifi.apache.org/ site]"
      },
      "date": 1659869495148
    },
    {
      "type": "edit",
      "id": "8045509b71f58993",
      "item": {
        "type": "markdown",
        "id": "8045509b71f58993",
        "text": "[[Apache NiFi]] supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic. [https://nifi.apache.org/ site]"
      },
      "date": 1659869532361
    },
    {
      "type": "edit",
      "id": "8045509b71f58993",
      "item": {
        "type": "markdown",
        "id": "8045509b71f58993",
        "text": "[[Apache NiFi]] supports powerful and scalable directed graphs of data routing, transformation, and system mediation logic. [https://nifi.apache.org/ site], [https://en.wikipedia.org/wiki/Apache_NiFi wikipedia]"
      },
      "date": 1659869562255
    },
    {
      "item": {
        "type": "factory",
        "id": "34e423587cc163a5"
      },
      "id": "34e423587cc163a5",
      "type": "add",
      "after": "8045509b71f58993",
      "date": 1659869753997
    },
    {
      "type": "edit",
      "id": "34e423587cc163a5",
      "item": {
        "type": "paragraph",
        "id": "34e423587cc163a5",
        "text": "[[Flow-Based Programming]] "
      },
      "date": 1659869760135
    },
    {
      "type": "edit",
      "id": "34e423587cc163a5",
      "item": {
        "type": "paragraph",
        "id": "34e423587cc163a5",
        "text": "[[Flow-Based Programming]] [https://en.wikipedia.org/wiki/Flow-based_programming wikipedia]"
      },
      "date": 1659869773223
    },
    {
      "item": {
        "type": "factory",
        "id": "ed6cadb1862695f3"
      },
      "id": "ed6cadb1862695f3",
      "type": "add",
      "after": "34e423587cc163a5",
      "date": 1659869843005
    },
    {
      "type": "edit",
      "id": "ed6cadb1862695f3",
      "item": {
        "type": "paragraph",
        "id": "ed6cadb1862695f3",
        "text": "[[GtMondrian]]"
      },
      "date": 1659869846956
    },
    {
      "item": {
        "type": "factory",
        "id": "10f178fafd9a1afc"
      },
      "id": "10f178fafd9a1afc",
      "type": "add",
      "after": "ed6cadb1862695f3",
      "date": 1659869895731
    },
    {
      "type": "edit",
      "id": "10f178fafd9a1afc",
      "item": {
        "type": "paragraph",
        "id": "10f178fafd9a1afc",
        "text": "– https://dl.acm.org/doi/abs/10.1145/774833.774844"
      },
      "date": 1659869899773
    },
    {
      "type": "edit",
      "id": "10f178fafd9a1afc",
      "item": {
        "type": "markdown",
        "id": "10f178fafd9a1afc",
        "text": "– https://dl.acm.org/doi/abs/10.1145/774833.774844"
      },
      "date": 1659869907954
    },
    {
      "item": {
        "type": "factory",
        "id": "9a6ec967fee4d783"
      },
      "id": "9a6ec967fee4d783",
      "type": "add",
      "after": "10f178fafd9a1afc",
      "date": 1659869950635
    },
    {
      "type": "edit",
      "id": "9a6ec967fee4d783",
      "item": {
        "type": "markdown",
        "id": "9a6ec967fee4d783",
        "text": "> We describe GEVOL, a system that visualizes the evolution of software using a novel graph drawing technique for visualization of large graphs with a temporal component. GEVOL extracts information about a Java program stored within a CVS version control system and displays it using a temporal graph visualizer. This information can be used by programmers to understand the evolution of a legacy program: Why is the program structured the way it is? Which programmers were responsible for which parts of the program during which time periods? Which parts of the program appear unstable over long periods of time and may need to be rewritten? This type of information will complement that produced by more static tools such as source code browsers, slicers, and static analyzers."
      },
      "date": 1659869954312
    },
    {
      "type": "add",
      "id": "a1abe8ab5d0977c0",
      "item": {
        "type": "paragraph",
        "id": "a1abe8ab5d0977c0",
        "text": "\nCOLLBERG, Christian, KOBOUROV, Stephen, NAGRA, Jasvir, PITTS, Jacob and WAMPLER, Kevin, 2003. A system for graph-based visualization of the evolution of software. In: Proceedings of the 2003 ACM symposium on Software visualization. Online. New York, NY, USA: Association for Computing Machinery. 11 June 2003. p. 77-ff. [Accessed 7 August 2022]. SoftVis ’03. ISBN 978-1-58113-642-5. DOI 10.1145/774833.774844. "
      },
      "after": "ed6cadb1862695f3",
      "date": 1659870291391
    },
    {
      "type": "add",
      "id": "5a2e817ef64a3149",
      "item": {
        "type": "paragraph",
        "id": "5a2e817ef64a3149",
        "text": "> We describe GEVOL, a system that visualizes the evolution of software using a novel graph drawing technique for visualization of large graphs with a temporal component. GEVOL extracts information about a Java program stored within a CVS version control system and displays it using a temporal graph visualizer. This information can be used by programmers to understand the evolution of a legacy program: Why is the program structured the way it is? Which programmers were responsible for which parts of the program during which time periods? Which parts of the program appear unstable over long periods of time and may need to be rewritten? This type of information will complement that produced by more static tools such as source code browsers, slicers, and static analyzers.\n"
      },
      "after": "a1abe8ab5d0977c0",
      "date": 1659870295583
    },
    {
      "type": "edit",
      "id": "5a2e817ef64a3149",
      "item": {
        "type": "markdown",
        "id": "5a2e817ef64a3149",
        "text": "> We describe GEVOL, a system that visualizes the evolution of software using a novel graph drawing technique for visualization of large graphs with a temporal component. GEVOL extracts information about a Java program stored within a CVS version control system and displays it using a temporal graph visualizer. This information can be used by programmers to understand the evolution of a legacy program: Why is the program structured the way it is? Which programmers were responsible for which parts of the program during which time periods? Which parts of the program appear unstable over long periods of time and may need to be rewritten? This type of information will complement that produced by more static tools such as source code browsers, slicers, and static analyzers.\n"
      },
      "date": 1659870303782
    },
    {
      "type": "remove",
      "id": "10f178fafd9a1afc",
      "date": 1659870304768
    },
    {
      "type": "edit",
      "id": "a1abe8ab5d0977c0",
      "item": {
        "type": "paragraph",
        "id": "a1abe8ab5d0977c0",
        "text": "COLLBERG, Christian, KOBOUROV, Stephen, NAGRA, Jasvir, PITTS, Jacob and WAMPLER, Kevin, 2003. A system for graph-based visualization of the evolution of software. In: Proceedings of the 2003 ACM symposium on Software visualization. Online. New York, NY, USA: Association for Computing Machinery. 11 June 2003. p. 77-ff. [Accessed 7 August 2022]. SoftVis ’03. ISBN 978-1-58113-642-5. DOI 10.1145/774833.774844. [https://dl.acm.org/doi/abs/10.1145/774833.774844 acm]"
      },
      "date": 1659870318403
    },
    {
      "type": "remove",
      "id": "9a6ec967fee4d783",
      "date": 1659870322459
    },
    {
      "type": "add",
      "id": "8d716737388dfcb0",
      "item": {
        "type": "paragraph",
        "id": "8d716737388dfcb0",
        "text": "constructing graph-based visualizations"
      },
      "after": "ed6cadb1862695f3",
      "date": 1659870441260
    },
    {
      "type": "edit",
      "id": "8d716737388dfcb0",
      "item": {
        "type": "paragraph",
        "id": "8d716737388dfcb0",
        "text": "constructing graph-based visualizations – https://scholar.google.com/scholar?hl=de&as_sdt=0%2C5&q=constructing+graph-based+visualizations&btnG="
      },
      "date": 1659870455034
    },
    {
      "type": "edit",
      "id": "8d716737388dfcb0",
      "item": {
        "type": "markdown",
        "id": "8d716737388dfcb0",
        "text": "constructing graph-based visualizations – https://scholar.google.com/scholar?hl=de&as_sdt=0%2C5&q=constructing+graph-based+visualizations&btnG="
      },
      "date": 1659870455970
    }
  ]
}