{
  "title": "Visual Programming Language",
  "story": [
    {
      "type": "image",
      "url": "http://www.macrovu.com/image/VLBkimg/vlbkwhtisvlpict.gif",
      "text": "www.macrovu.com",
      "id": "bac013807f9a1ca687c4ebb731899c2a"
    },
    {
      "type": "html",
      "text": "",
      "id": "05f1b1a1329009085ff4ecbda5a0ce65"
    },
    {
      "type": "html",
      "text": "\nfrom [http://www.macrovu.com/VLBkAboutTheBook.html www.macrovu.com]",
      "id": "49d3680d984244fa9cb39ec2cdf543c2"
    },
    {
      "type": "html",
      "text": "<i>(Thanks to [[Lion Kimbro]], below.)</i>",
      "id": "66772856324ddac0ceb2bc49e23c0d67"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nMarketroid's Dream: ",
      "id": "99898e81e51cb81833d092b0ae66bd71"
    },
    {
      "type": "html",
      "text": "\nBuild Complex Applications without having to Think",
      "id": "e615d99a676df451aad7a4a8208903ba"
    },
    {
      "type": "html",
      "text": "<i>I think the distinction between \"visual\" and \"thinking\" is perhaps a false dichotomy.  Images can pack a lot of information into them and make patterns apparent that text may not.  \"Visual\" is indeed easy to hype because code scares some people and [[Pointy Haired Boss]]es like pretty pictures.  But that does not mean that there is not merit to the idea.  After all, would you want to do CADD <b>only</b> using textual code?</i>",
      "id": "0765611ab503430f1f122f88b80c8378"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nAlthough not a visual language, [[Together Soft]]'s [[Control Center]] is much like what I imagine an ideal tool being, while at the same time much lighter than [[Rational Rose]], and allowing for much nicer refactoring practices.",
      "id": "2c53c73e16a42cba66b3e41258a5a7f2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nWell that's not possible yet, but imagine blending [[Argo Uml]] with [[Alice Bot]]. Then you've got some active intelligence supervising. -- [[Dennis Daniels]]",
      "id": "35b1a982d450a3503be8f768ba0633ec"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "[[Visual Programming Language]]<i>s</i> of some sort or another have been tried since the 1970<i>s</i> without success and as anyone who has ever assessed programming tools can tell you the hype is thick and fast in this space.",
      "id": "47cd2f44d2860497ddf7d3cf2b60a963"
    },
    {
      "type": "html",
      "text": "<i> \"Build n-tier Database enabled web applications in a <b>Completely Visual Environment</b> \" </i>",
      "id": "7d4a7fe18df4301eb565586567dc4e7f"
    },
    {
      "type": "html",
      "text": "\nThe above quote was from a vendor who shall remain nameless, but whose boxes are yellow in color, mention visual and coffee in the same word, and are unfortunately representative of the \"Enterprise Edition\" end of  the tools market.",
      "id": "46a82491259b6fbdbbc9754f72358050"
    },
    {
      "type": "html",
      "text": "<i>Does this prove that a useful [[Visual Programming Language]]<b></b> is impossible?  If not, what is the value of the above complaint to this discussion? -- [[Brent Newhall]]</i>",
      "id": "f2abb5f6ebfb320e9948b5f122080d96"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nSo why do so many of these \"[[Completely Visual Environment]]<i>s</i>\" suck so hard?",
      "id": "b20b2f79937400bd128e1c22d189badb"
    },
    {
      "type": "html",
      "text": "<i>Because they cannot succeed until components are constructed with one language and specified + integrated with another. It is this latter medium that can be completely visual but its visual metaphor cannot be the User Interface. Instead, it must be the states, transitions, roles, interactions of the fully specified components. As long as one has to write algorithms in order to create </i>systems<i>, there will be no useful, fully visually, development environment. Furthermore, even with this, it still wont succeed if the visual metaphor for modeling is the UI. After all, does a blueprint look like a picture of a house or does it look like the </i>underlying structures of the house<i>?</i> -- [[Robert Di Falco]]",
      "id": "83026201ca2e7684a2f1bf976a4c5714"
    },
    {
      "type": "html",
      "text": "\nNeither. A Blueprint is a visual expression of how to \"Build\" the house. If we are talking about [[Visual Programming Language]] as the language which builds the Visual Objects which represent something we use to build the real thing, it may well be that the user of the tool does not need to \"program\" at all. What is required is  to develop the craftmanship in using the visual tools to create modules, components and representations which may be used, reused, scaled, modified, extended, inserted, dragged, deleted, and other such visual methods which are much more the work of visualization than that of programming. A cad system without a comprehensive library of pre-built modules or components is of some use, but yields far less in production if in fact it perpetuates the \"re-invention of the wheel\" and requires the \"same thing\" to be done over and over again. It can be said of Visual Tools, that some people use programming to create the tools, while others craft using the tools. There are definitely two activities involved in the creation and use Visual tools. One is the activity of creating the tools, the second is that of using the tools. This can be said to be true for other Visual Environments besides those involved in \"House Building\". For example \"Document Building\", \"Web Page Design\" and many more activities using the computer for other purposes than \"programming\".",
      "id": "0d7605bb1ba8a236c9b85e6aa0d85756"
    },
    {
      "type": "html",
      "text": "---- ",
      "id": "7b2fff61b716a59bf1ea7c7a3266e214"
    },
    {
      "type": "html",
      "text": "\nI'll use [[Visual Basic]] to illustrate [[Robert Di Falco]]'s point: There are actually two parts to any [[Visual Basic]] project. One part is the UI construction, which is completely visual, and the other part is the BASIC code. Yes, one can slap together the UI easily. However, to specify functionality, you still have to dive into textual code and understand \"For\" loops, data types, and \"Case\" statements. A \"real\" [[Visual Programming Language]] would let you specify these things visually. -- [[Brent Newhall]]",
      "id": "961b9aea7c83c2b16a25a53ca3b0147b"
    },
    {
      "type": "html",
      "text": "<i>Why does it have to be all-or-nothing? I find that different presentation approaches each have their merits for different things. Some things are easier to manage in code, others in tables/grids, and yet others as diagrams and/or drag-n-drop widgets or icons.</i>",
      "id": "b10e5c4bdb69f6d61b82b81f107b7dac"
    },
    {
      "type": "html",
      "text": "\nWhy? Because \"visual [[Programming Language]]\" (a term coined well before [[Visual Basic]] even existed) means one where the programming is done via graphical elements rather than traditional textual forms, so the \"all or nothing\" part is just whether it meets that definition. [[Visual Basic]] does not.",
      "id": "a1981d3ac5e6d122f4b0ab9a7c44c33d"
    },
    {
      "type": "html",
      "text": "\nThe rest of what you raise is about whether it is <b>appropriate</b> for everything to be graphical rather than textual, which is a good question, but a different topic than the one you were responding to.",
      "id": "c6c7955fc8f5a93dc60a90cef6095ff2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "[Comments about [[Lab View]] and HP-VEE moved to [[Graphical Programming Language]].]",
      "id": "38b2e3f45a739a0f4ea4f63e198ae0e4"
    },
    {
      "type": "html",
      "text": "\nJust to note, though, [[Lab View]] proved that a [[Visual Programming Language]] can be a <i>great</i> way to express functional/stateless programming without loosing your brain.  Unfortunately for functional programmers, purely functional languages make it hard to keep a specific calculation around for use in other calculations, resulting in a break of [[Once And Only Once]], or ugly code, or both.  Having two dimensions to work with fixes that.",
      "id": "5be8c1fbce559658e10d305d1dc3d1a6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nLombardi's ([http://www.lombardisoftware.com www.lombardisoftware.com]) Business Process Management tool is an excellent visual programming environment.",
      "id": "63ad66e3ad50e937921f6afa259edf18"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "\nA colleague has just pointed me at BlueJ, developed as a visual teaching tool for Java - see [http://www.bluej.org/about/what.html www.bluej.org].  They have started their own wiki: [http://wiki.bluej.org/ wiki.bluej.org].  ",
      "id": "fea2d41f6f81331051c3ac5b19be668e"
    },
    {
      "type": "html",
      "text": "<i>Looks like they're putting the ++ back into [[Smalltalk Minus Minus]].  :)</i>",
      "id": "9f6756ee0c40cf6bf37cf61f86806e6d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "<i>Comments below are rather out of context now because of the refactoring of [[Graphical Programming Language]].</i>",
      "id": "aeb295254d4cc51435ec2ed98f2cfbe7"
    },
    {
      "type": "html",
      "text": "\nI think [[Visual Age Java]] is badly named (by IBM's marketing department) [...]. It got its name because of its stupid and totally unusable user interface builder, a tool that nobody (including internal IBM developers) uses. The [[Visual Age Java]] development environment, like the [[Visual Age Smalltalk]] environment, is a text- and browser-based IDE in the spirit of Smalltalk80. ",
      "id": "173118d9f48893042ffdd4709000defa"
    },
    {
      "type": "html",
      "text": "\n[[Visual Age Java]] (and [[Visual Age Smalltalk]]) are NOT [[Visual Programming Language]]s \"environments where the constructs for specifying programs are made up of visual elements (e.g. pictorial, iconic, line drawings, graphs)\".",
      "id": "d50f14bb5cf30dce968b694a55068382"
    },
    {
      "type": "html",
      "text": "\nSimple [[Regular Expression]] searches have always been possible in [[Visual Age]].",
      "id": "da7975f8c714d5cba57b7e809d5b4e5f"
    },
    {
      "type": "html",
      "text": "\nI'm not aware of *any* programmer toolset in which it is possible to search for a pattern, in the [[Gang Of Four]] sense - but if I were to write such a tool, I would certainly start with something more like [[Visual Age]] and less like emacs and a shell.",
      "id": "f205a1946a350f61b0119e62c70d6098"
    },
    {
      "type": "html",
      "text": "\nJeff's question of \"how those interconnected webs of links can be reliably archived let alone communicated to someone through printed documentation\" is certainly not answered by \"conventional\" emacs/makefile environments. My own experience has been that environments like [[Visual Age]] significantly advance my ability to accomplish this feat, precisely because they allow me to represent those webs and links in persistent ways that are under transaction control.",
      "id": "b0b2c4336f84529d10ca8a3a5c6d1b2f"
    },
    {
      "type": "html",
      "text": "\nI want to say again, however, that this has NOTHING to do with being visual. The links are implied by the information, not its representation. I therefore invite someone to refactor this exchange into a more appropriate page.",
      "id": "dd94184658ecc434de37d5618e41a6d2"
    },
    {
      "type": "html",
      "text": "-- [[Tom Stambaugh]]",
      "id": "8006d89070651a6881c5e843408bad6f"
    },
    {
      "type": "html",
      "text": "\nGranted, [[Visual Age]] is at heart a very powerful Smalltalk80-like IDE. But my impression of the GUI-builder based on using [[Visual Age Smalltalk]] a few years ago is that it was used <i>and</i> useful, especially for rapid development. My concerns were that, despite its advantages, such representations are difficult to document and review. For example, what traversal order should one take in review, to be sure not to miss anything? I still think it belongs with this page (other views welcome...)",
      "id": "2e7833dc81e695d8bebe7e953384f139"
    },
    {
      "type": "html",
      "text": "-- [[Jeff Mantei]]",
      "id": "5e201e0ac847326b3a3a0e13d0afbf66"
    },
    {
      "type": "html",
      "text": "<i>It would be great if IBM would separate the UI builder from the rest of the environment. I agree with Jeff that the GUI-builder of [[Visual Age]] attempts to be a [[Visual Language]]. Jeff's concerns about traversal order and such pertain only to the GUI-builder, however. The bulk of the environment does not suffer from these drawbacks. -- [[Tom Stambaugh]]</i>",
      "id": "b1bf7693a8308ea3fd867faf7c2c5ccd"
    },
    {
      "type": "html",
      "text": "\nNamespace conflict. [[Visual Language]] is more general than [[Visual Programming Language]]. Check out Robert Horn's research, and you'll see what I mean. [http://www.macrovu.com/VLBkAboutTheBook.html www.macrovu.com]",
      "id": "8c5bdc32cccc8db124df696571356b2e"
    },
    {
      "type": "html",
      "text": "\nAh. Here's what I wanted:\nhttp<b></b>://www.macrovu.com/image/VLBkimg/vlbkwhtisvlpict.gif",
      "id": "08ab19e2a34787795df58d0cc26d353a"
    },
    {
      "type": "html",
      "text": "\nLet's just stick that sucker there right at the top of the page. ;)",
      "id": "06dc787a94f5ba7e6253c51f9832f500"
    },
    {
      "type": "html",
      "text": "-- [[Lion Kimbro]]",
      "id": "baeb63fae0414744f9a40cf927da7f5f"
    },
    {
      "type": "html",
      "text": "\nHas no one here looked at Marten? [http://andescotia.com andescotia.com] ",
      "id": "1ad66e8508444635f0ab74a447215ce3"
    },
    {
      "type": "html",
      "text": "\nMarten is a child of the Prograph language which is now in the public domain. \nI have been using the language since about 1988 when it first came out and have been actively involved with it for years. \nMarten is a completly visual programming IDE, the visual elements are the code. Although currently only avaiable on MacOSX we are currently working on porting it to Haiku and developing cross-platform tools. \nOne of the more recent applications built with Marten is [[Key Jack]] [http://KeyJack.com KeyJack.com] which is written entirely in Marten.",
      "id": "84971c54260d99e3a2b491aa83e7cb02"
    },
    {
      "type": "html",
      "text": "\nWould like to hear any comments from anyone who has used this.",
      "id": "d8f2f58b98e34c0598673ebd493a9bcf"
    },
    {
      "type": "html",
      "text": "-- Dave Carlton",
      "id": "3434d0eaba597499efc7ff07fbb945d7"
    },
    {
      "type": "html",
      "text": "\nI am wondering why [[Subtext Language]] isn't mentioned here. \nFor me it shows that it is possible to fully represent a [[Programming Language]] graphically - without loosing any semantic details. \nQuite the opposite: Implicit dependencies of expressions are made visible. \nIt may not yet be a fully usable language but the only working approach I have seen yet. \nSee the demo at [http://subtextual.org/demo1.html subtextual.org]",
      "id": "050991f43e4c2027d3937c15c2d01fcf"
    },
    {
      "type": "html",
      "text": "-- [[Gunnar Zarncke]]",
      "id": "7ff1ac6d0a11f5f2721bbd4ec179c87a"
    },
    {
      "type": "html",
      "text": "\nI think some graphic/visual languages are missing from this wiki:",
      "id": "941187aa192c3084647c3bdde475bfd2"
    },
    {
      "type": "html",
      "text": "\nLimnor Studio: \nA visual [[Programming Language]] for .NET currently free (April 2011) [http://limnor.com/ limnor.com]",
      "id": "2e287a4c2b6f499492af19d2cf5975c5"
    },
    {
      "type": "html",
      "text": "\nTersus: Commercial and open source versions (MS Windows, Linux) development of Windows, Linux, web, Android and Iphone applications [http://www.tersus.com www.tersus.com]",
      "id": "8b60f70e25cf2fccf3513370a8ac1adf"
    },
    {
      "type": "html",
      "text": "\nIllumination Software Creator\n[http://radicalbreeze.com/ radicalbreeze.com]",
      "id": "399e3fdae970a78962ab1cb16d34a6a8"
    },
    {
      "type": "html",
      "text": "\nGoogle App Inventor: Open source development tool for Android OS, [http://appinventor.googlelabs.com/about/ appinventor.googlelabs.com] ",
      "id": "d85fce3b6022e05d471b518a3cf0fc99"
    },
    {
      "type": "html",
      "text": "-- Mahmoud Fayed",
      "id": "2937be89298a2fec649d348d10b9c04d"
    },
    {
      "type": "html",
      "text": "\nProgramming Without Coding Technology (PWCT) \nFree-Open Source General-Purpose Visual Programming Languages Framework\n[http://doublesvsoop.sourceforge.net doublesvsoop.sourceforge.net]",
      "id": "1f3491b480b12d67874f3c3c3cc9a7bb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2c6feaa79a028429b0f63268768d885f"
    },
    {
      "type": "html",
      "text": "See also [[Visual Programming]], [[Graphical Programming Language]], [[Visual Programming Book]], [[Executable Uml]], [[Visualization As Learning Aid]]",
      "id": "6e3db092dfd04927d38592610a75c150"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?VisualProgrammingLanguage c2.com]",
      "id": "382a5a6267141045ae7a7e22ae3bfe05"
    }
  ],
  "journal": [
    {
      "date": 1418587984000,
      "id": "d4829c7debaba76b2643158224c605f7",
      "type": "create",
      "item": {
        "title": "Visual Programming Language",
        "story": [
          {
            "type": "image",
            "url": "http://www.macrovu.com/image/VLBkimg/vlbkwhtisvlpict.gif",
            "text": "www.macrovu.com",
            "id": "bac013807f9a1ca687c4ebb731899c2a"
          },
          {
            "type": "html",
            "text": "",
            "id": "05f1b1a1329009085ff4ecbda5a0ce65"
          },
          {
            "type": "html",
            "text": "\nfrom [http://www.macrovu.com/VLBkAboutTheBook.html www.macrovu.com]",
            "id": "49d3680d984244fa9cb39ec2cdf543c2"
          },
          {
            "type": "html",
            "text": "<i>(Thanks to [[Lion Kimbro]], below.)</i>",
            "id": "66772856324ddac0ceb2bc49e23c0d67"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nMarketroid's Dream: ",
            "id": "99898e81e51cb81833d092b0ae66bd71"
          },
          {
            "type": "html",
            "text": "\nBuild Complex Applications without having to Think",
            "id": "e615d99a676df451aad7a4a8208903ba"
          },
          {
            "type": "html",
            "text": "<i>I think the distinction between \"visual\" and \"thinking\" is perhaps a false dichotomy.  Images can pack a lot of information into them and make patterns apparent that text may not.  \"Visual\" is indeed easy to hype because code scares some people and [[Pointy Haired Boss]]es like pretty pictures.  But that does not mean that there is not merit to the idea.  After all, would you want to do CADD <b>only</b> using textual code?</i>",
            "id": "0765611ab503430f1f122f88b80c8378"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nAlthough not a visual language, [[Together Soft]]'s [[Control Center]] is much like what I imagine an ideal tool being, while at the same time much lighter than [[Rational Rose]], and allowing for much nicer refactoring practices.",
            "id": "2c53c73e16a42cba66b3e41258a5a7f2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nWell that's not possible yet, but imagine blending [[Argo Uml]] with [[Alice Bot]]. Then you've got some active intelligence supervising. -- [[Dennis Daniels]]",
            "id": "35b1a982d450a3503be8f768ba0633ec"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "[[Visual Programming Language]]<i>s</i> of some sort or another have been tried since the 1970<i>s</i> without success and as anyone who has ever assessed programming tools can tell you the hype is thick and fast in this space.",
            "id": "47cd2f44d2860497ddf7d3cf2b60a963"
          },
          {
            "type": "html",
            "text": "<i> \"Build n-tier Database enabled web applications in a <b>Completely Visual Environment</b> \" </i>",
            "id": "7d4a7fe18df4301eb565586567dc4e7f"
          },
          {
            "type": "html",
            "text": "\nThe above quote was from a vendor who shall remain nameless, but whose boxes are yellow in color, mention visual and coffee in the same word, and are unfortunately representative of the \"Enterprise Edition\" end of  the tools market.",
            "id": "46a82491259b6fbdbbc9754f72358050"
          },
          {
            "type": "html",
            "text": "<i>Does this prove that a useful [[Visual Programming Language]]<b></b> is impossible?  If not, what is the value of the above complaint to this discussion? -- [[Brent Newhall]]</i>",
            "id": "f2abb5f6ebfb320e9948b5f122080d96"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nSo why do so many of these \"[[Completely Visual Environment]]<i>s</i>\" suck so hard?",
            "id": "b20b2f79937400bd128e1c22d189badb"
          },
          {
            "type": "html",
            "text": "<i>Because they cannot succeed until components are constructed with one language and specified + integrated with another. It is this latter medium that can be completely visual but its visual metaphor cannot be the User Interface. Instead, it must be the states, transitions, roles, interactions of the fully specified components. As long as one has to write algorithms in order to create </i>systems<i>, there will be no useful, fully visually, development environment. Furthermore, even with this, it still wont succeed if the visual metaphor for modeling is the UI. After all, does a blueprint look like a picture of a house or does it look like the </i>underlying structures of the house<i>?</i> -- [[Robert Di Falco]]",
            "id": "83026201ca2e7684a2f1bf976a4c5714"
          },
          {
            "type": "html",
            "text": "\nNeither. A Blueprint is a visual expression of how to \"Build\" the house. If we are talking about [[Visual Programming Language]] as the language which builds the Visual Objects which represent something we use to build the real thing, it may well be that the user of the tool does not need to \"program\" at all. What is required is  to develop the craftmanship in using the visual tools to create modules, components and representations which may be used, reused, scaled, modified, extended, inserted, dragged, deleted, and other such visual methods which are much more the work of visualization than that of programming. A cad system without a comprehensive library of pre-built modules or components is of some use, but yields far less in production if in fact it perpetuates the \"re-invention of the wheel\" and requires the \"same thing\" to be done over and over again. It can be said of Visual Tools, that some people use programming to create the tools, while others craft using the tools. There are definitely two activities involved in the creation and use Visual tools. One is the activity of creating the tools, the second is that of using the tools. This can be said to be true for other Visual Environments besides those involved in \"House Building\". For example \"Document Building\", \"Web Page Design\" and many more activities using the computer for other purposes than \"programming\".",
            "id": "0d7605bb1ba8a236c9b85e6aa0d85756"
          },
          {
            "type": "html",
            "text": "---- ",
            "id": "7b2fff61b716a59bf1ea7c7a3266e214"
          },
          {
            "type": "html",
            "text": "\nI'll use [[Visual Basic]] to illustrate [[Robert Di Falco]]'s point: There are actually two parts to any [[Visual Basic]] project. One part is the UI construction, which is completely visual, and the other part is the BASIC code. Yes, one can slap together the UI easily. However, to specify functionality, you still have to dive into textual code and understand \"For\" loops, data types, and \"Case\" statements. A \"real\" [[Visual Programming Language]] would let you specify these things visually. -- [[Brent Newhall]]",
            "id": "961b9aea7c83c2b16a25a53ca3b0147b"
          },
          {
            "type": "html",
            "text": "<i>Why does it have to be all-or-nothing? I find that different presentation approaches each have their merits for different things. Some things are easier to manage in code, others in tables/grids, and yet others as diagrams and/or drag-n-drop widgets or icons.</i>",
            "id": "b10e5c4bdb69f6d61b82b81f107b7dac"
          },
          {
            "type": "html",
            "text": "\nWhy? Because \"visual [[Programming Language]]\" (a term coined well before [[Visual Basic]] even existed) means one where the programming is done via graphical elements rather than traditional textual forms, so the \"all or nothing\" part is just whether it meets that definition. [[Visual Basic]] does not.",
            "id": "a1981d3ac5e6d122f4b0ab9a7c44c33d"
          },
          {
            "type": "html",
            "text": "\nThe rest of what you raise is about whether it is <b>appropriate</b> for everything to be graphical rather than textual, which is a good question, but a different topic than the one you were responding to.",
            "id": "c6c7955fc8f5a93dc60a90cef6095ff2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "[Comments about [[Lab View]] and HP-VEE moved to [[Graphical Programming Language]].]",
            "id": "38b2e3f45a739a0f4ea4f63e198ae0e4"
          },
          {
            "type": "html",
            "text": "\nJust to note, though, [[Lab View]] proved that a [[Visual Programming Language]] can be a <i>great</i> way to express functional/stateless programming without loosing your brain.  Unfortunately for functional programmers, purely functional languages make it hard to keep a specific calculation around for use in other calculations, resulting in a break of [[Once And Only Once]], or ugly code, or both.  Having two dimensions to work with fixes that.",
            "id": "5be8c1fbce559658e10d305d1dc3d1a6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nLombardi's ([http://www.lombardisoftware.com www.lombardisoftware.com]) Business Process Management tool is an excellent visual programming environment.",
            "id": "63ad66e3ad50e937921f6afa259edf18"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "\nA colleague has just pointed me at BlueJ, developed as a visual teaching tool for Java - see [http://www.bluej.org/about/what.html www.bluej.org].  They have started their own wiki: [http://wiki.bluej.org/ wiki.bluej.org].  ",
            "id": "fea2d41f6f81331051c3ac5b19be668e"
          },
          {
            "type": "html",
            "text": "<i>Looks like they're putting the ++ back into [[Smalltalk Minus Minus]].  :)</i>",
            "id": "9f6756ee0c40cf6bf37cf61f86806e6d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "<i>Comments below are rather out of context now because of the refactoring of [[Graphical Programming Language]].</i>",
            "id": "aeb295254d4cc51435ec2ed98f2cfbe7"
          },
          {
            "type": "html",
            "text": "\nI think [[Visual Age Java]] is badly named (by IBM's marketing department) [...]. It got its name because of its stupid and totally unusable user interface builder, a tool that nobody (including internal IBM developers) uses. The [[Visual Age Java]] development environment, like the [[Visual Age Smalltalk]] environment, is a text- and browser-based IDE in the spirit of Smalltalk80. ",
            "id": "173118d9f48893042ffdd4709000defa"
          },
          {
            "type": "html",
            "text": "\n[[Visual Age Java]] (and [[Visual Age Smalltalk]]) are NOT [[Visual Programming Language]]s \"environments where the constructs for specifying programs are made up of visual elements (e.g. pictorial, iconic, line drawings, graphs)\".",
            "id": "d50f14bb5cf30dce968b694a55068382"
          },
          {
            "type": "html",
            "text": "\nSimple [[Regular Expression]] searches have always been possible in [[Visual Age]].",
            "id": "da7975f8c714d5cba57b7e809d5b4e5f"
          },
          {
            "type": "html",
            "text": "\nI'm not aware of *any* programmer toolset in which it is possible to search for a pattern, in the [[Gang Of Four]] sense - but if I were to write such a tool, I would certainly start with something more like [[Visual Age]] and less like emacs and a shell.",
            "id": "f205a1946a350f61b0119e62c70d6098"
          },
          {
            "type": "html",
            "text": "\nJeff's question of \"how those interconnected webs of links can be reliably archived let alone communicated to someone through printed documentation\" is certainly not answered by \"conventional\" emacs/makefile environments. My own experience has been that environments like [[Visual Age]] significantly advance my ability to accomplish this feat, precisely because they allow me to represent those webs and links in persistent ways that are under transaction control.",
            "id": "b0b2c4336f84529d10ca8a3a5c6d1b2f"
          },
          {
            "type": "html",
            "text": "\nI want to say again, however, that this has NOTHING to do with being visual. The links are implied by the information, not its representation. I therefore invite someone to refactor this exchange into a more appropriate page.",
            "id": "dd94184658ecc434de37d5618e41a6d2"
          },
          {
            "type": "html",
            "text": "-- [[Tom Stambaugh]]",
            "id": "8006d89070651a6881c5e843408bad6f"
          },
          {
            "type": "html",
            "text": "\nGranted, [[Visual Age]] is at heart a very powerful Smalltalk80-like IDE. But my impression of the GUI-builder based on using [[Visual Age Smalltalk]] a few years ago is that it was used <i>and</i> useful, especially for rapid development. My concerns were that, despite its advantages, such representations are difficult to document and review. For example, what traversal order should one take in review, to be sure not to miss anything? I still think it belongs with this page (other views welcome...)",
            "id": "2e7833dc81e695d8bebe7e953384f139"
          },
          {
            "type": "html",
            "text": "-- [[Jeff Mantei]]",
            "id": "5e201e0ac847326b3a3a0e13d0afbf66"
          },
          {
            "type": "html",
            "text": "<i>It would be great if IBM would separate the UI builder from the rest of the environment. I agree with Jeff that the GUI-builder of [[Visual Age]] attempts to be a [[Visual Language]]. Jeff's concerns about traversal order and such pertain only to the GUI-builder, however. The bulk of the environment does not suffer from these drawbacks. -- [[Tom Stambaugh]]</i>",
            "id": "b1bf7693a8308ea3fd867faf7c2c5ccd"
          },
          {
            "type": "html",
            "text": "\nNamespace conflict. [[Visual Language]] is more general than [[Visual Programming Language]]. Check out Robert Horn's research, and you'll see what I mean. [http://www.macrovu.com/VLBkAboutTheBook.html www.macrovu.com]",
            "id": "8c5bdc32cccc8db124df696571356b2e"
          },
          {
            "type": "html",
            "text": "\nAh. Here's what I wanted:\nhttp<b></b>://www.macrovu.com/image/VLBkimg/vlbkwhtisvlpict.gif",
            "id": "08ab19e2a34787795df58d0cc26d353a"
          },
          {
            "type": "html",
            "text": "\nLet's just stick that sucker there right at the top of the page. ;)",
            "id": "06dc787a94f5ba7e6253c51f9832f500"
          },
          {
            "type": "html",
            "text": "-- [[Lion Kimbro]]",
            "id": "baeb63fae0414744f9a40cf927da7f5f"
          },
          {
            "type": "html",
            "text": "\nHas no one here looked at Marten? [http://andescotia.com andescotia.com] ",
            "id": "1ad66e8508444635f0ab74a447215ce3"
          },
          {
            "type": "html",
            "text": "\nMarten is a child of the Prograph language which is now in the public domain. \nI have been using the language since about 1988 when it first came out and have been actively involved with it for years. \nMarten is a completly visual programming IDE, the visual elements are the code. Although currently only avaiable on MacOSX we are currently working on porting it to Haiku and developing cross-platform tools. \nOne of the more recent applications built with Marten is [[Key Jack]] [http://KeyJack.com KeyJack.com] which is written entirely in Marten.",
            "id": "84971c54260d99e3a2b491aa83e7cb02"
          },
          {
            "type": "html",
            "text": "\nWould like to hear any comments from anyone who has used this.",
            "id": "d8f2f58b98e34c0598673ebd493a9bcf"
          },
          {
            "type": "html",
            "text": "-- Dave Carlton",
            "id": "3434d0eaba597499efc7ff07fbb945d7"
          },
          {
            "type": "html",
            "text": "\nI am wondering why [[Subtext Language]] isn't mentioned here. \nFor me it shows that it is possible to fully represent a [[Programming Language]] graphically - without loosing any semantic details. \nQuite the opposite: Implicit dependencies of expressions are made visible. \nIt may not yet be a fully usable language but the only working approach I have seen yet. \nSee the demo at [http://subtextual.org/demo1.html subtextual.org]",
            "id": "050991f43e4c2027d3937c15c2d01fcf"
          },
          {
            "type": "html",
            "text": "-- [[Gunnar Zarncke]]",
            "id": "7ff1ac6d0a11f5f2721bbd4ec179c87a"
          },
          {
            "type": "html",
            "text": "\nI think some graphic/visual languages are missing from this wiki:",
            "id": "941187aa192c3084647c3bdde475bfd2"
          },
          {
            "type": "html",
            "text": "\nLimnor Studio: \nA visual [[Programming Language]] for .NET currently free (April 2011) [http://limnor.com/ limnor.com]",
            "id": "2e287a4c2b6f499492af19d2cf5975c5"
          },
          {
            "type": "html",
            "text": "\nTersus: Commercial and open source versions (MS Windows, Linux) development of Windows, Linux, web, Android and Iphone applications [http://www.tersus.com www.tersus.com]",
            "id": "8b60f70e25cf2fccf3513370a8ac1adf"
          },
          {
            "type": "html",
            "text": "\nIllumination Software Creator\n[http://radicalbreeze.com/ radicalbreeze.com]",
            "id": "399e3fdae970a78962ab1cb16d34a6a8"
          },
          {
            "type": "html",
            "text": "\nGoogle App Inventor: Open source development tool for Android OS, [http://appinventor.googlelabs.com/about/ appinventor.googlelabs.com] ",
            "id": "d85fce3b6022e05d471b518a3cf0fc99"
          },
          {
            "type": "html",
            "text": "-- Mahmoud Fayed",
            "id": "2937be89298a2fec649d348d10b9c04d"
          },
          {
            "type": "html",
            "text": "\nProgramming Without Coding Technology (PWCT) \nFree-Open Source General-Purpose Visual Programming Languages Framework\n[http://doublesvsoop.sourceforge.net doublesvsoop.sourceforge.net]",
            "id": "1f3491b480b12d67874f3c3c3cc9a7bb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2c6feaa79a028429b0f63268768d885f"
          },
          {
            "type": "html",
            "text": "See also [[Visual Programming]], [[Graphical Programming Language]], [[Visual Programming Book]], [[Executable Uml]], [[Visualization As Learning Aid]]",
            "id": "6e3db092dfd04927d38592610a75c150"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?VisualProgrammingLanguage c2.com]",
            "id": "382a5a6267141045ae7a7e22ae3bfe05"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1707806924192
    }
  ]
}