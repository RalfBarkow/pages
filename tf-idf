{
  "title": "TF-IDF",
  "story": [
    {
      "type": "paragraph",
      "id": "13029192579d1f1c",
      "text": "Term Frequency (TF): This measures how often a term (word) appears in a document. It is calculated as the ratio of the number of times the term appears in the document to the total number of terms in the document. Essentially, it measures the local importance of a term within a document."
    },
    {
      "type": "math",
      "id": "155a73e47d86ae6b",
      "text": "\\[ \\text{TF}(t, d) = \\frac{\\text{Number of times term } t \\text{ appears in document } d}{\\text{Total number of terms in document } d} \\]"
    },
    {
      "type": "paragraph",
      "id": "f2a5a008b6490378",
      "text": "Inverse Document Frequency (IDF): This measures the importance of a term across a collection of documents (corpus). It is calculated as the logarithm of the ratio of the total number of documents in the corpus to the number of documents containing the term. Essentially, it measures the global importance of a term across documents."
    },
    {
      "type": "math",
      "id": "88d18ce91905869e",
      "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\nWhere\n    \\( N \\) is the total number of documents in the corpus\n   and \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
    },
    {
      "type": "paragraph",
      "id": "338cbe28c8b80321",
      "text": "TF-IDF Score: The TF-IDF score of a term in a document is the product of its TF and IDF values. It represents the importance of the term in the context of the document and the corpus."
    },
    {
      "type": "math",
      "id": "de51b301a788edab",
      "text": "\\[ \\text{TF-IDF}(t, d, D) = \\text{TF}(t, d) \\times \\text{IDF}(t, D) \\]"
    },
    {
      "type": "video",
      "id": "21027cf886f7cb83",
      "text": "YOUTUBE LYNaYTi342g\nMastering TF-IDF in JavaScript: Step-by-Step"
    },
    {
      "type": "paragraph",
      "id": "c1247c880ff3db6b",
      "text": "See also [[Cell]]"
    },
    {
      "type": "image",
      "id": "54c5eab976bf9d43",
      "text": "We can express the flightbooking example as a spreadsheet.",
      "size": "wide",
      "width": 418,
      "height": 209,
      "url": "/assets/plugins/image/de2c8c32882a43901ee29f8e5e947754.jpg"
    },
    {
      "type": "paragraph",
      "id": "f4ddf69dd59a063a",
      "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Manning Publications. ISBN 978-1-63343-010-5, p. 14."
    },
    {
      "type": "paragraph",
      "id": "d221e8f7b9d54d37",
      "text": "In fact, [[FRP]] works the same way a spreadsheet does. Our choice of the class name [[Cell]] to represent dynamically changeable values was partially influenced by this. Can you really write arbitrarily complex application logic in the style of a spreadsheet? Yes, you can. That’s exactly what FRP allows you to do. But you’ll have to think a bit differently."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "TF-IDF",
        "story": []
      },
      "date": 1711021336979
    },
    {
      "item": {
        "type": "factory",
        "id": "0d99e0d47081fc1c"
      },
      "id": "0d99e0d47081fc1c",
      "type": "add",
      "date": 1711021338897
    },
    {
      "type": "remove",
      "id": "0d99e0d47081fc1c",
      "date": 1711021343008
    },
    {
      "item": {
        "type": "factory",
        "id": "21027cf886f7cb83"
      },
      "id": "21027cf886f7cb83",
      "type": "add",
      "date": 1711021344492
    },
    {
      "type": "edit",
      "id": "21027cf886f7cb83",
      "item": {
        "type": "video",
        "id": "21027cf886f7cb83",
        "text": "YOUTUBE LYNaYTi342g"
      },
      "date": 1711021354643
    },
    {
      "item": {
        "type": "factory",
        "id": "c1247c880ff3db6b"
      },
      "id": "c1247c880ff3db6b",
      "type": "add",
      "after": "21027cf886f7cb83",
      "date": 1711021575224
    },
    {
      "type": "edit",
      "id": "c1247c880ff3db6b",
      "item": {
        "type": "paragraph",
        "id": "c1247c880ff3db6b",
        "text": "See also [[Cell]]"
      },
      "date": 1711021584904
    },
    {
      "type": "edit",
      "id": "21027cf886f7cb83",
      "item": {
        "type": "video",
        "id": "21027cf886f7cb83",
        "text": "YOUTUBE LYNaYTi342g\nMastering TF-IDF in JavaScript: Step-by-Step"
      },
      "date": 1711021612109
    },
    {
      "item": {
        "type": "factory",
        "id": "54c5eab976bf9d43"
      },
      "id": "54c5eab976bf9d43",
      "type": "add",
      "after": "c1247c880ff3db6b",
      "date": 1711022112107
    },
    {
      "type": "edit",
      "id": "54c5eab976bf9d43",
      "item": {
        "type": "image",
        "id": "54c5eab976bf9d43",
        "text": "Uploaded image",
        "size": "wide",
        "width": 418,
        "height": 209,
        "url": "/assets/plugins/image/de2c8c32882a43901ee29f8e5e947754.jpg"
      },
      "date": 1711022134231
    },
    {
      "type": "edit",
      "id": "54c5eab976bf9d43",
      "item": {
        "type": "image",
        "id": "54c5eab976bf9d43",
        "text": "We can express the flightbooking example as a spreadsheet.",
        "size": "wide",
        "width": 418,
        "height": 209,
        "url": "/assets/plugins/image/de2c8c32882a43901ee29f8e5e947754.jpg"
      },
      "date": 1711022149365
    },
    {
      "item": {
        "type": "factory",
        "id": "f4ddf69dd59a063a"
      },
      "id": "f4ddf69dd59a063a",
      "type": "add",
      "after": "54c5eab976bf9d43",
      "date": 1711022162308
    },
    {
      "type": "edit",
      "id": "f4ddf69dd59a063a",
      "item": {
        "type": "paragraph",
        "id": "f4ddf69dd59a063a",
        "text": "\nBLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Online. Manning Publications. ISBN 978-1-63343-010-5, p. 14."
      },
      "date": 1711022181236
    },
    {
      "type": "edit",
      "id": "f4ddf69dd59a063a",
      "item": {
        "type": "paragraph",
        "id": "f4ddf69dd59a063a",
        "text": "BLACKHEATH, Stephen and JONES, Anthony, 2016. Functional Reactive Programming. Manning Publications. ISBN 978-1-63343-010-5, p. 14."
      },
      "date": 1711022190309
    },
    {
      "item": {
        "type": "factory",
        "id": "d221e8f7b9d54d37"
      },
      "id": "d221e8f7b9d54d37",
      "type": "add",
      "after": "f4ddf69dd59a063a",
      "date": 1711024703130
    },
    {
      "type": "edit",
      "id": "d221e8f7b9d54d37",
      "item": {
        "type": "paragraph",
        "id": "d221e8f7b9d54d37",
        "text": "In fact, FRP works the same way a spreadsheet does. Our choice of the class name Cell to represent dynamically changeable values was partially influenced by this. Can you really write arbitrarily complex application logic in the style of a spreadsheet? Yes, you can. That’s exactly what FRP allows you to do. But you’ll have to think a bit differently."
      },
      "date": 1711024705039
    },
    {
      "type": "edit",
      "id": "d221e8f7b9d54d37",
      "item": {
        "type": "paragraph",
        "id": "d221e8f7b9d54d37",
        "text": "In fact, FRP works the same way a spreadsheet does. Our choice of the class name [[Cell]] to represent dynamically changeable values was partially influenced by this. Can you really write arbitrarily complex application logic in the style of a spreadsheet? Yes, you can. That’s exactly what FRP allows you to do. But you’ll have to think a bit differently."
      },
      "date": 1711024722668
    },
    {
      "type": "fork",
      "date": 1711028393517
    },
    {
      "type": "edit",
      "id": "d221e8f7b9d54d37",
      "item": {
        "type": "paragraph",
        "id": "d221e8f7b9d54d37",
        "text": "In fact, [[FRP]] works the same way a spreadsheet does. Our choice of the class name [[Cell]] to represent dynamically changeable values was partially influenced by this. Can you really write arbitrarily complex application logic in the style of a spreadsheet? Yes, you can. That’s exactly what FRP allows you to do. But you’ll have to think a bit differently."
      },
      "date": 1711028411312
    },
    {
      "item": {
        "type": "factory",
        "id": "13029192579d1f1c"
      },
      "id": "13029192579d1f1c",
      "type": "add",
      "after": "d221e8f7b9d54d37",
      "date": 1711030275489
    },
    {
      "type": "edit",
      "id": "13029192579d1f1c",
      "item": {
        "type": "paragraph",
        "id": "13029192579d1f1c",
        "text": "Term Frequency (TF): This measures how often a term (word) appears in a document. It is calculated as the ratio of the number of times the term appears in the document to the total number of terms in the document. Essentially, it measures the local importance of a term within a document."
      },
      "date": 1711030281792
    },
    {
      "id": "13029192579d1f1c",
      "type": "move",
      "order": [
        "13029192579d1f1c",
        "21027cf886f7cb83",
        "c1247c880ff3db6b",
        "54c5eab976bf9d43",
        "f4ddf69dd59a063a",
        "d221e8f7b9d54d37"
      ],
      "date": 1711030290358
    },
    {
      "item": {
        "type": "factory",
        "id": "155a73e47d86ae6b"
      },
      "id": "155a73e47d86ae6b",
      "type": "add",
      "after": "d221e8f7b9d54d37",
      "date": 1711030302145
    },
    {
      "type": "edit",
      "id": "155a73e47d86ae6b",
      "item": {
        "type": "math",
        "id": "155a73e47d86ae6b",
        "text": "   \\[ \\text{TF}(t, d) = \\frac{\\text{Number of times term } t \\text{ appears in document } d}{\\text{Total number of terms in document } d} \\]"
      },
      "date": 1711030306408
    },
    {
      "type": "edit",
      "id": "155a73e47d86ae6b",
      "item": {
        "type": "math",
        "id": "155a73e47d86ae6b",
        "text": "\\[ \\text{TF}(t, d) = \\frac{\\text{Number of times term } t \\text{ appears in document } d}{\\text{Total number of terms in document } d} \\]"
      },
      "date": 1711030318707
    },
    {
      "id": "155a73e47d86ae6b",
      "type": "move",
      "order": [
        "13029192579d1f1c",
        "155a73e47d86ae6b",
        "21027cf886f7cb83",
        "c1247c880ff3db6b",
        "54c5eab976bf9d43",
        "f4ddf69dd59a063a",
        "d221e8f7b9d54d37"
      ],
      "date": 1711030325596
    },
    {
      "type": "add",
      "id": "f2a5a008b6490378",
      "item": {
        "type": "paragraph",
        "id": "f2a5a008b6490378",
        "text": " **Inverse Document Frequency (IDF)**: This measures the importance of a term across a collection of documents (corpus). It is calculated as the logarithm of the ratio of the total number of documents in the corpus to the number of documents containing the term. Essentially, it measures the global importance of a term across documents."
      },
      "after": "13029192579d1f1c",
      "date": 1711030371162
    },
    {
      "type": "edit",
      "id": "f2a5a008b6490378",
      "item": {
        "type": "paragraph",
        "id": "f2a5a008b6490378",
        "text": "Inverse Document Frequency (IDF): This measures the importance of a term across a collection of documents (corpus). It is calculated as the logarithm of the ratio of the total number of documents in the corpus to the number of documents containing the term. Essentially, it measures the global importance of a term across documents."
      },
      "date": 1711030382856
    },
    {
      "id": "155a73e47d86ae6b",
      "type": "move",
      "order": [
        "13029192579d1f1c",
        "155a73e47d86ae6b",
        "f2a5a008b6490378",
        "21027cf886f7cb83",
        "c1247c880ff3db6b",
        "54c5eab976bf9d43",
        "f4ddf69dd59a063a",
        "d221e8f7b9d54d37"
      ],
      "date": 1711030385626
    },
    {
      "type": "add",
      "id": "338cbe28c8b80321",
      "item": {
        "type": "paragraph",
        "id": "338cbe28c8b80321",
        "text": "TF-IDF Score: The TF-IDF score of a term in a document is the product of its TF and IDF values. It represents the importance of the term in the context of the document and the corpus."
      },
      "after": "f2a5a008b6490378",
      "date": 1711030405039
    },
    {
      "item": {
        "type": "factory",
        "id": "88d18ce91905869e"
      },
      "id": "88d18ce91905869e",
      "type": "add",
      "after": "d221e8f7b9d54d37",
      "date": 1711030419508
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": " \\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\n   Where:\n   - \\( N \\) is the total number of documents in the corpus.\n   - \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030434866
    },
    {
      "id": "88d18ce91905869e",
      "type": "move",
      "order": [
        "13029192579d1f1c",
        "155a73e47d86ae6b",
        "f2a5a008b6490378",
        "88d18ce91905869e",
        "338cbe28c8b80321",
        "21027cf886f7cb83",
        "c1247c880ff3db6b",
        "54c5eab976bf9d43",
        "f4ddf69dd59a063a",
        "d221e8f7b9d54d37"
      ],
      "date": 1711030443242
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\n   Where:\n   - \\( N \\) is the total number of documents in the corpus.\n   - \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030459450
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\nWhere:\n   - \\( N \\) is the total number of documents in the corpus.\n   - \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030467856
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\nWhere:\n    \\( N \\) is the total number of documents in the corpus.\n   and \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030488291
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\nWhere\n    \\( N \\) is the total number of documents in the corpus.\n   and \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030554834
    },
    {
      "type": "edit",
      "id": "88d18ce91905869e",
      "item": {
        "type": "math",
        "id": "88d18ce91905869e",
        "text": "\\[ \\text{IDF}(t, D) = \\log\\left(\\frac{N}{|\\{d \\in D : t \\in d\\}|}\\right) \\]\n\nWhere\n    \\( N \\) is the total number of documents in the corpus\n   and \\( |\\{d \\in D : t \\in d\\}| \\) is the number of documents containing term \\( t \\)."
      },
      "date": 1711030561787
    },
    {
      "item": {
        "type": "factory",
        "id": "de51b301a788edab"
      },
      "id": "de51b301a788edab",
      "type": "add",
      "after": "d221e8f7b9d54d37",
      "date": 1711030602083
    },
    {
      "type": "edit",
      "id": "de51b301a788edab",
      "item": {
        "type": "math",
        "id": "de51b301a788edab",
        "text": "\\[ \\text{TF-IDF}(t, d, D) = \\text{TF}(t, d) \\times \\text{IDF}(t, D) \\]"
      },
      "date": 1711030606173
    },
    {
      "id": "de51b301a788edab",
      "type": "move",
      "order": [
        "13029192579d1f1c",
        "155a73e47d86ae6b",
        "f2a5a008b6490378",
        "88d18ce91905869e",
        "338cbe28c8b80321",
        "de51b301a788edab",
        "21027cf886f7cb83",
        "c1247c880ff3db6b",
        "54c5eab976bf9d43",
        "f4ddf69dd59a063a",
        "d221e8f7b9d54d37"
      ],
      "date": 1711030618268
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1712006017954
    }
  ]
}