{
  "title": "Feed the Federation",
  "story": [
    {
      "type": "paragraph",
      "id": "c46b5bccedc81ee6",
      "text": "We consider the best way to feed live data into the federation without making a nuisance of oneself."
    },
    {
      "type": "paragraph",
      "id": "d7a04f7ca07b3147",
      "text": "See [[Active Feeds]]"
    },
    {
      "type": "paragraph",
      "id": "0c1bd3a18cecc03f",
      "text": "First of all understand that the federation is a network of gardens tended by thoughtful humans. The journal reflects the evolution of that thought, not the mechanical heartbeat of a datastream."
    },
    {
      "type": "paragraph",
      "id": "934b8141a745fa57",
      "text": "A site is of course free to produce pages by any means it sees fit and store those as recognizable json. We encourage this in [[Federating Foreign Servers]]."
    },
    {
      "type": "paragraph",
      "id": "186cf09556f8dbc1",
      "text": "We've tried various mechanisms for feeding fresh data into json pages and find some to be obnoxious. Our better approach is that adopted by the JSON plugin where update history is contained with the plugin and reported upon viewing. See [[About JSON Plugin]]"
    },
    {
      "type": "paragraph",
      "id": "8166bfca40324e75",
      "text": "We've also built libraries that will construct whole pages through a series of calls that, for example, add elements to a page with the corresponding dated journal entry, often only a millisecond from the previous. This has never proven to be useful. "
    },
    {
      "type": "paragraph",
      "id": "4d0df16ae245178e",
      "text": "Best practice for one-time constructions is to add a complete story to the page and note its completeness at creation by including it as the story field in one create action in the journal. Subsequent human edits are then correctly recorded. "
    },
    {
      "type": "paragraph",
      "id": "7db687904eab0902",
      "text": "Aside: We will need to check that we do the right thing in all cases now that forking back to the create is interpreted as delete. Theory: if it was created whole once, it can be created whole again. If not, fork a copy and revert to this fork to find the original."
    },
    {
      "type": "paragraph",
      "id": "6ea73a60a1bd7f02",
      "text": "Now, consider this new approach for wrapping computer generated content in curated pages. Create and revise the wrapper as one would for plugin about pages. A temporary wiki on localhost works great for this. Leave a Factory plugin where fresh data will be inserted. Then have automation replace this item with original content on each update."
    },
    {
      "type": "paragraph",
      "id": "13d795e74e61cd24",
      "text": "Conceptually the automation is forking the curated page and might add a dated fork action to the journal. We ignore forks when dating pages for sitemaps and recent changes so this mechanical timestamp remains polite."
    },
    {
      "type": "paragraph",
      "id": "76db963c3356ef32",
      "text": "This might not be so great for automation that produces a variable number of items as is done with Recent Farm Activity. This is an old script that predates Rosters and would be much better handled by creating and replacing a single Roster in an otherwise human curated page."
    },
    {
      "type": "paragraph",
      "id": "5f4cb4cc8995d2c7",
      "text": "Aside: But who will feed new sites into the scrape if a sitemap somewhere isn't incremented upon their arrival? Perhaps an exception to this date logic could be made when a new site is detected?"
    },
    {
      "type": "paragraph",
      "id": "b5611b7794e6f6a5",
      "text": "We can now offer server admins server enhancements in the form of server-side plugins. Let us consider what we might expect of a [[Residents Plugin]]."
    },
    {
      "type": "paragraph",
      "id": "140acdeedd5082b6",
      "text": "We could encourage feeds that update a specific item in place, much as an edit-action might, but without or with optional journal modification. Perhaps a [[Wiki Edit Command Line]] would do."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Feed the Federation",
        "story": []
      },
      "date": 1504273926070
    },
    {
      "item": {
        "type": "factory",
        "id": "c46b5bccedc81ee6"
      },
      "id": "c46b5bccedc81ee6",
      "type": "add",
      "date": 1504273951807
    },
    {
      "type": "edit",
      "id": "c46b5bccedc81ee6",
      "item": {
        "type": "paragraph",
        "id": "c46b5bccedc81ee6",
        "text": "We consider the best way to feed live data into the federation without making a nuisance of oneself."
      },
      "date": 1504274048476
    },
    {
      "type": "add",
      "id": "0c1bd3a18cecc03f",
      "item": {
        "type": "paragraph",
        "id": "0c1bd3a18cecc03f",
        "text": "First of all the federation is a network of gardens tended by thoughtful humans. The journal reflects the evolution of that thought, not the mechanical heartbeat of a datastream."
      },
      "after": "c46b5bccedc81ee6",
      "date": 1504274246335
    },
    {
      "type": "edit",
      "id": "0c1bd3a18cecc03f",
      "item": {
        "type": "paragraph",
        "id": "0c1bd3a18cecc03f",
        "text": "First of all understand that the federation is a network of gardens tended by thoughtful humans. The journal reflects the evolution of that thought, not the mechanical heartbeat of a datastream."
      },
      "date": 1504274280455
    },
    {
      "type": "add",
      "id": "934b8141a745fa57",
      "item": {
        "type": "paragraph",
        "id": "934b8141a745fa57",
        "text": "A site is of course free to produce pages by any means it sees fit and store those as recognizable json. "
      },
      "after": "0c1bd3a18cecc03f",
      "date": 1504274661172
    },
    {
      "type": "edit",
      "id": "934b8141a745fa57",
      "item": {
        "type": "paragraph",
        "id": "934b8141a745fa57",
        "text": "A site is of course free to produce pages by any means it sees fit and store those as recognizable json. We encourage this in [[Federating Foreign Servers]]."
      },
      "date": 1504274697059
    },
    {
      "type": "add",
      "id": "186cf09556f8dbc1",
      "item": {
        "type": "paragraph",
        "id": "186cf09556f8dbc1",
        "text": "We've tried various mechanisms for feeding fresh data into json pages and find some to be obnoxious. Our better approach is that adopted by the Json plugin where update history is contained with the plugin and reported upon viewing. See [[About Json Plugin]]"
      },
      "after": "934b8141a745fa57",
      "date": 1504274925446
    },
    {
      "type": "edit",
      "id": "186cf09556f8dbc1",
      "item": {
        "type": "paragraph",
        "id": "186cf09556f8dbc1",
        "text": "We've tried various mechanisms for feeding fresh data into json pages and find some to be obnoxious. Our better approach is that adopted by the Json plugin where update history is contained with the plugin and reported upon viewing. See [[About JSON Plugin]]"
      },
      "date": 1504274958549
    },
    {
      "type": "edit",
      "id": "186cf09556f8dbc1",
      "item": {
        "type": "paragraph",
        "id": "186cf09556f8dbc1",
        "text": "We've tried various mechanisms for feeding fresh data into json pages and find some to be obnoxious. Our better approach is that adopted by the JSON plugin where update history is contained with the plugin and reported upon viewing. See [[About JSON Plugin]]"
      },
      "date": 1504274975420
    },
    {
      "type": "add",
      "id": "8166bfca40324e75",
      "item": {
        "type": "paragraph",
        "id": "8166bfca40324e75",
        "text": "We've also built libraries that will construct whole pages through a series of calls that, for example, add elements to a page with the corresponding dated journal entry, often only a millisecond from the previous. This has never proven to be useful. "
      },
      "after": "186cf09556f8dbc1",
      "date": 1504275502255
    },
    {
      "type": "add",
      "id": "4d0df16ae245178e",
      "item": {
        "type": "paragraph",
        "id": "4d0df16ae245178e",
        "text": "Best practice for one-time constructions is to add a complete story to the page and note its completeness at creation by including it as the story field in one create action in the journal. Subsequent human edits are then correctly recorded. "
      },
      "after": "8166bfca40324e75",
      "date": 1504275707737
    },
    {
      "type": "add",
      "id": "7db687904eab0902",
      "item": {
        "type": "paragraph",
        "id": "7db687904eab0902",
        "text": "Aside: We will need to check that we do the right thing in all cases now that forking back to the create is interpreted as delete."
      },
      "after": "4d0df16ae245178e",
      "date": 1504275794201
    },
    {
      "type": "edit",
      "id": "7db687904eab0902",
      "item": {
        "type": "paragraph",
        "id": "7db687904eab0902",
        "text": "Aside: We will need to check that we do the right thing in all cases now that forking back to the create is interpreted as delete. Theory: if it was created whole once, it can be created whole again. If not, fork a copy and revert to this fork to find the original."
      },
      "date": 1504275880364
    },
    {
      "type": "add",
      "id": "6ea73a60a1bd7f02",
      "item": {
        "type": "paragraph",
        "id": "6ea73a60a1bd7f02",
        "text": "Now, consider this new approach for wrapping computer generated content in curated pages. Create and revise the wrapper as one would for plugin about pages. A temporary wiki on localhost works great for this. Leave a Factory plugin where fresh data will be inserted. Then have automation replace this item with original content on each update."
      },
      "after": "7db687904eab0902",
      "date": 1504276218243
    },
    {
      "type": "add",
      "id": "13d795e74e61cd24",
      "item": {
        "type": "paragraph",
        "id": "13d795e74e61cd24",
        "text": "Conceptually the automation is forking the curated page and might add a dated fork action to the journal. We ignore forks when dating pages for sitemaps and recent changes so this mechanical timestamp remains polite."
      },
      "after": "6ea73a60a1bd7f02",
      "date": 1504276385319
    },
    {
      "type": "add",
      "id": "76db963c3356ef32",
      "item": {
        "type": "paragraph",
        "id": "76db963c3356ef32",
        "text": "This might not be so great for automation that produces a variable number of items as is done with [[Recent Activity]]. "
      },
      "after": "13d795e74e61cd24",
      "date": 1504276544931
    },
    {
      "type": "edit",
      "id": "76db963c3356ef32",
      "item": {
        "type": "paragraph",
        "id": "76db963c3356ef32",
        "text": "This might not be so great for automation that produces a variable number of items as is done with Recent Farm Activity. This is an old script that predates Rosters and would be much better handled by creating and replacing a single Roster in an otherwise human curated page."
      },
      "date": 1504276724369
    },
    {
      "type": "add",
      "id": "5f4cb4cc8995d2c7",
      "item": {
        "type": "paragraph",
        "id": "5f4cb4cc8995d2c7",
        "text": "Aside: But who will feed new sites into the scrape if a sitemap somewhere isn't incremented upon their arrival?"
      },
      "after": "76db963c3356ef32",
      "date": 1504360889186
    },
    {
      "type": "add",
      "id": "d7a04f7ca07b3147",
      "item": {
        "type": "paragraph",
        "id": "d7a04f7ca07b3147",
        "text": "See [[Active Feeds]]"
      },
      "after": "5f4cb4cc8995d2c7",
      "date": 1504361480445
    },
    {
      "type": "move",
      "order": [
        "c46b5bccedc81ee6",
        "d7a04f7ca07b3147",
        "0c1bd3a18cecc03f",
        "934b8141a745fa57",
        "186cf09556f8dbc1",
        "8166bfca40324e75",
        "4d0df16ae245178e",
        "7db687904eab0902",
        "6ea73a60a1bd7f02",
        "13d795e74e61cd24",
        "76db963c3356ef32",
        "5f4cb4cc8995d2c7"
      ],
      "id": "d7a04f7ca07b3147",
      "date": 1504371450942
    },
    {
      "type": "add",
      "id": "b5611b7794e6f6a5",
      "item": {
        "type": "paragraph",
        "id": "b5611b7794e6f6a5",
        "text": "We can now offer server admins server enhancements in the form of server-side plugins. Let us consider what we might expect of a [[Residents Plugin]]."
      },
      "after": "5f4cb4cc8995d2c7",
      "date": 1504376194484
    },
    {
      "type": "add",
      "id": "140acdeedd5082b6",
      "item": {
        "type": "paragraph",
        "id": "140acdeedd5082b6",
        "text": "We could encourage feeds that update a specific item in place, much as an edit-action might, but without or with optional journal modification. Perhaps a [Wiki Edit Command Line]] would do."
      },
      "after": "b5611b7794e6f6a5",
      "date": 1504380372835
    },
    {
      "type": "edit",
      "id": "140acdeedd5082b6",
      "item": {
        "type": "paragraph",
        "id": "140acdeedd5082b6",
        "text": "We could encourage feeds that update a specific item in place, much as an edit-action might, but without or with optional journal modification. Perhaps a [[Wiki Edit Command Line]] would do."
      },
      "date": 1504380377915
    },
    {
      "type": "edit",
      "id": "5f4cb4cc8995d2c7",
      "item": {
        "type": "paragraph",
        "id": "5f4cb4cc8995d2c7",
        "text": "Aside: But who will feed new sites into the scrape if a sitemap somewhere isn't incremented upon their arrival? Perhaps an exception to this date logic could be made when a new site is detected?"
      },
      "date": 1506180851457
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1661349502400
    }
  ]
}