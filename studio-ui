{
  "title": "Studio UI",
  "story": [
    {
      "type": "markdown",
      "id": "78e3f67fe850b704",
      "text": "https://web.archive.org/web/20191002124703/http://hydra.snabb.co/build/2046401/download/1/studio.html"
    },
    {
      "type": "markdown",
      "id": "f14f2790f6cf6ccb",
      "text": "# Introduction\n\nStudio is a debugger for the data produced by complex applications. Studio imports dense and \"messy\" data in an application's own native formats, then it applies all the tools that are needed to extract useful information, and finally it presents the results in an interactive graphical user interface.\n\nStudio is particularly intended for complex applications with many moving parts: JIT compilers, network stacks, databases, operating system kernels, and so on. These applications are often running in a production environment where they cannot be stopped to perform diagnostics - but they can quickly dump some raw data for offline inspection.\n\nSuch applications are not especially well served by the usual ad-hoc scripts based on gdb, graphviz, gnuplot, perl, and so on, but they usually do not justify building and supporting full-scale fancy tools from scratch either. Studio bridges this gap by providing a common foundation that can be reused for new applications.\n\nHow does Studio make this easier than doing everything yourself? The key is combining two very powerful tools: Nix for processing data and Pharo for user interaction.\n\nNix makes it easy to incorporate other tools. This could be as simple as running a custom Python application or running an R script with all of its dependencies loaded. It could also be more complex, like running an ARM virtual machine to process data using proprietary vendor tools as one step in the processing pipeline. Nix provides all the flexibility needed to handle such problems, and it throws in caching and paralleization and distributed builds as a bonus.\n\nPharo makes it easy to visually inspect object graphs and other complex data structures. Pharo itself is a full-scale modern Smalltalk development environment, the Agile Visualization toolkit makes it easy to map your data onto visual objects that you can manipulate, and the Glamorous Toolkit provides the tools for navigating and searching your data. The visualization could be simple, like rendering JSON as a graph or CSV as a chart, or it could be complex like visualizing high-level application data structures after extracting them from a coredump file using DWARF metadata.\n\nDo you have an application that deserves its own tools? Studio is ready for you to extend. Screenshots galore can be found in the Supported Applications section."
    },
    {
      "type": "markdown",
      "id": "fbdae8f97283207b",
      "text": "Next: [[Installing Studio]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Studio UI",
        "story": []
      },
      "date": 1635952262318
    },
    {
      "item": {
        "type": "factory",
        "id": "78e3f67fe850b704"
      },
      "id": "78e3f67fe850b704",
      "type": "add",
      "date": 1635952285646
    },
    {
      "type": "edit",
      "id": "78e3f67fe850b704",
      "item": {
        "type": "markdown",
        "id": "78e3f67fe850b704",
        "text": "https://web.archive.org/web/20191002124703/http://hydra.snabb.co/build/2046401/download/1/studio.html"
      },
      "date": 1635952288164
    },
    {
      "item": {
        "type": "factory",
        "id": "f14f2790f6cf6ccb"
      },
      "id": "f14f2790f6cf6ccb",
      "type": "add",
      "after": "78e3f67fe850b704",
      "date": 1635952301924
    },
    {
      "type": "edit",
      "id": "f14f2790f6cf6ccb",
      "item": {
        "type": "markdown",
        "id": "f14f2790f6cf6ccb",
        "text": "# Introduction\n\nStudio is a debugger for the data produced by complex applications. Studio imports dense and \"messy\" data in an application's own native formats, then it applies all the tools that are needed to extract useful information, and finally it presents the results in an interactive graphical user interface.\n\nStudio is particularly intended for complex applications with many moving parts: JIT compilers, network stacks, databases, operating system kernels, and so on. These applications are often running in a production environment where they cannot be stopped to perform diagnostics - but they can quickly dump some raw data for offline inspection.\n\nSuch applications are not especially well served by the usual ad-hoc scripts based on gdb, graphviz, gnuplot, perl, and so on, but they usually do not justify building and supporting full-scale fancy tools from scratch either. Studio bridges this gap by providing a common foundation that can be reused for new applications.\n\nHow does Studio make this easier than doing everything yourself? The key is combining two very powerful tools: Nix for processing data and Pharo for user interaction.\n\nNix makes it easy to incorporate other tools. This could be as simple as running a custom Python application or running an R script with all of its dependencies loaded. It could also be more complex, like running an ARM virtual machine to process data using proprietary vendor tools as one step in the processing pipeline. Nix provides all the flexibility needed to handle such problems, and it throws in caching and paralleization and distributed builds as a bonus.\n\nPharo makes it easy to visually inspect object graphs and other complex data structures. Pharo itself is a full-scale modern Smalltalk development environment, the Agile Visualization toolkit makes it easy to map your data onto visual objects that you can manipulate, and the Glamorous Toolkit provides the tools for navigating and searching your data. The visualization could be simple, like rendering JSON as a graph or CSV as a chart, or it could be complex like visualizing high-level application data structures after extracting them from a coredump file using DWARF metadata.\n\nDo you have an application that deserves its own tools? Studio is ready for you to extend. Screenshots galore can be found in the Supported Applications section."
      },
      "date": 1635952305669
    },
    {
      "item": {
        "type": "factory",
        "id": "fbdae8f97283207b"
      },
      "id": "fbdae8f97283207b",
      "type": "add",
      "after": "f14f2790f6cf6ccb",
      "date": 1635952412027
    },
    {
      "type": "edit",
      "id": "fbdae8f97283207b",
      "item": {
        "type": "markdown",
        "id": "fbdae8f97283207b",
        "text": "Next: [[Installing Studio]]"
      },
      "date": 1635952418053
    }
  ]
}