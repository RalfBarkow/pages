{
  "title": "Meta Class",
  "story": [
    {
      "type": "html",
      "text": "A [[Meta Class]] is a object that describes a class.",
      "id": "a510865d94af3607b38ba6434037e6ef"
    },
    {
      "type": "code",
      "text": " object = new Object()    \n clazz = object.class     \n metaclass = clazz.class  // The Class class\n   :  \"[Metaclasses] are deeper magic than 99% of users should ever worry about. If you wonder whether you need them, you don't (the people who actually need them know with certainty that they need them, and don't need an explanation about why).\" -- TimPeters",
      "id": "339807cb737bf763e1cdaf3f59be6ecf"
    },
    {
      "type": "html",
      "text": "<i>Others might say a language without metaclasses is broken, and not really object oriented!</i>",
      "id": "10bcf3295474f187c452b799abe93ef3"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d63311b9f4e428758b55fdb48d39b2f0"
    },
    {
      "type": "html",
      "text": "There are lots of good OO languages without metaclasses.  While certainly useful, they aren't absolutely necessary--and many programming tasks can get by without them.  Regarding java.lang.Class; it certainly isn't a metaclass in the sense that standard-class (from [[Common Lisp Object System]]) is; one cannot do [[Meta Object Protocol]] stuff in [[Java Language]].  OTOH, java.lang.Class is a first-class object, and it does provide introspection capabilities on classes in Java.",
      "id": "90603a1581ce4e666609a5cb4a150bf4"
    },
    {
      "type": "html",
      "text": "<i>As I said, others \"might\" say a language without metaclasses is broken, and not really object oriented.  I was referring to Smalltalkers of course.  From the [[Smalltalk Language]] point of view, [[Java Language]] isn't fully object oriented, nor is [[Csharp Language]] nor [[Cee Plus Plus]].  Java.lang.Class is a first class object that you can't change; it's equivalent to C#'s Type class, and while useful, isn't a metaclass.  For example, a real metaclass would allow me to change method lookup to allow [[Aspect Oriented Programming]].</i>",
      "id": "4716fd26533a42ce7f98fb30d1dffbaf"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d63311b9f4e428758b55fdb48d39b2f0"
    },
    {
      "type": "html",
      "text": "\n[[David Mertz]] and Michele Simionato have written a couple very clear papers about [[Meta Class]] programming in [[Python Language]] ([http://gnosis.cx/publish/tech_index_dw.html gnosis.cx]).",
      "id": "e043ccf45b8fb8bda761ba636cb564cc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d63311b9f4e428758b55fdb48d39b2f0"
    },
    {
      "type": "html",
      "text": "[[Category Aspect Orientation]]",
      "id": "c132afdcd86ad6df3792a8e72b024e58"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?MetaClass c2.com]",
      "id": "fb62327b9b65c2f330a783868fdc1cc2"
    }
  ],
  "journal": [
    {
      "date": 1416499856000,
      "id": "f3d8a27f4490673b83b34f0bb42ecfad",
      "type": "create",
      "item": {
        "title": "Meta Class",
        "story": [
          {
            "type": "html",
            "text": "A [[Meta Class]] is a object that describes a class.",
            "id": "a510865d94af3607b38ba6434037e6ef"
          },
          {
            "type": "code",
            "text": " object = new Object()    \n clazz = object.class     \n metaclass = clazz.class  // The Class class\n   :  \"[Metaclasses] are deeper magic than 99% of users should ever worry about. If you wonder whether you need them, you don't (the people who actually need them know with certainty that they need them, and don't need an explanation about why).\" -- TimPeters",
            "id": "339807cb737bf763e1cdaf3f59be6ecf"
          },
          {
            "type": "html",
            "text": "<i>Others might say a language without metaclasses is broken, and not really object oriented!</i>",
            "id": "10bcf3295474f187c452b799abe93ef3"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d63311b9f4e428758b55fdb48d39b2f0"
          },
          {
            "type": "html",
            "text": "\nThere are lots of good OO languages without metaclasses.  While certainly useful, they aren't absolutely necessary--and many programming tasks can get by without them.  Regarding java.lang.Class; it certainly isn't a metaclass in the sense that standard-class (from [[Common Lisp Object System]]) is; one cannot do [[Meta Object Protocol]] stuff in [[Java Language]].  OTOH, java.lang.Class is a first-class object, and it does provide introspection capabilities on classes in Java.",
            "id": "90603a1581ce4e666609a5cb4a150bf4"
          },
          {
            "type": "html",
            "text": "<i>As I said, others \"might\" say a language without metaclasses is broken, and not really object oriented.  I was referring to Smalltalkers of course.  From the [[Smalltalk Language]] point of view, [[Java Language]] isn't fully object oriented, nor is [[Csharp Language]] nor [[Cee Plus Plus]].  Java.lang.Class is a first class object that you can't change; it's equivalent to C#'s Type class, and while useful, isn't a metaclass.  For example, a real metaclass would allow me to change method lookup to allow [[Aspect Oriented Programming]].</i>",
            "id": "4716fd26533a42ce7f98fb30d1dffbaf"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d63311b9f4e428758b55fdb48d39b2f0"
          },
          {
            "type": "html",
            "text": "\n[[David Mertz]] and Michele Simionato have written a couple very clear papers about [[Meta Class]] programming in [[Python Language]] ([http://gnosis.cx/publish/tech_index_dw.html gnosis.cx]).",
            "id": "e043ccf45b8fb8bda761ba636cb564cc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "d63311b9f4e428758b55fdb48d39b2f0"
          },
          {
            "type": "html",
            "text": "[[Category Aspect Orientation]]",
            "id": "c132afdcd86ad6df3792a8e72b024e58"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?MetaClass c2.com]",
            "id": "fb62327b9b65c2f330a783868fdc1cc2"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1645326778988
    },
    {
      "type": "edit",
      "id": "90603a1581ce4e666609a5cb4a150bf4",
      "item": {
        "type": "html",
        "text": "There are lots of good OO languages without metaclasses.  While certainly useful, they aren't absolutely necessary--and many programming tasks can get by without them.  Regarding java.lang.Class; it certainly isn't a metaclass in the sense that standard-class (from [[Common Lisp Object System]]) is; one cannot do [[Meta Object Protocol]] stuff in [[Java Language]].  OTOH, java.lang.Class is a first-class object, and it does provide introspection capabilities on classes in Java.",
        "id": "90603a1581ce4e666609a5cb4a150bf4"
      },
      "date": 1645326848005
    }
  ]
}