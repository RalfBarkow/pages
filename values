{
  "title": "Values",
  "story": [
    {
      "type": "paragraph",
      "id": "a107656801652a23",
      "text": "So far topics were depicted solely as icon plus label. But there is more to a person than a name, isn’t it? Actually a value of type “Person” is an entire value hierarchy, for example: the Person has a name and an Address, the Address has a Postal Code, and the Postal Code is the string “SO36”. [https://dmx.readthedocs.io/en/latest/intro.html?highlight=values#values dmx.readthedocs]"
    },
    {
      "type": "paragraph",
      "id": "90eacf8ad9cf13ef",
      "text": "“Person” and “Address” in this example are composite values, and “Postal Code” is a simple value. And this is exactly how values are stored in the Corporate Memory: as an hierarchy of typed topics:\n"
    },
    {
      "type": "html",
      "id": "537a6c29015706f3",
      "text": "<img\n  width=\"100%\"\n  src=\"https://dmx.readthedocs.io/en/latest/_images/person-value.png\"\n>"
    },
    {
      "type": "markdown",
      "id": "3a25c67cfb2dd45b",
      "text": "A value of type “Person” as stored in the Corporate Memory. The value “Cathy Jones” is composed of a “Person Name” value and an “Address” value, which is composed of a “Street” value, a “Postal Code” value etc. The red associations are of type “Composition” and form the topic hierarchy. They are directed from “Parent” to “Child”. The leaf-nodes are the simple values. Some values have their corresponding type topic revealed. The cyan associations are of type “Instantiation” and are directed from “Instance” to “Type”.\n\nDMX has the specialty that not only topics represent values, but associations too. In this regard there is no difference between topics and associations:\n\n* both are typed\n* both have a value\n\nThe type determines the structure of the value."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Values",
        "story": []
      },
      "date": 1660194771619
    },
    {
      "item": {
        "type": "factory",
        "id": "a107656801652a23"
      },
      "id": "a107656801652a23",
      "type": "add",
      "date": 1660194791478
    },
    {
      "type": "edit",
      "id": "a107656801652a23",
      "item": {
        "type": "paragraph",
        "id": "a107656801652a23",
        "text": "So far topics were depicted solely as icon plus label. But there is more to a person than a name, isn’t it? Actually a value of type “Person” is an entire value hierarchy, for example: the Person has a name and an Address, the Address has a Postal Code, and the Postal Code is the string “SO36”."
      },
      "date": 1660194793121
    },
    {
      "item": {
        "type": "factory",
        "id": "90eacf8ad9cf13ef"
      },
      "id": "90eacf8ad9cf13ef",
      "type": "add",
      "after": "a107656801652a23",
      "date": 1660194830115
    },
    {
      "type": "edit",
      "id": "a107656801652a23",
      "item": {
        "type": "paragraph",
        "id": "a107656801652a23",
        "text": "So far topics were depicted solely as icon plus label. But there is more to a person than a name, isn’t it? Actually a value of type “Person” is an entire value hierarchy, for example: the Person has a name and an Address, the Address has a Postal Code, and the Postal Code is the string “SO36”. [https://dmx.readthedocs.io/en/latest/intro.html?highlight=values#values dmx.readthedocs]"
      },
      "date": 1660194843094
    },
    {
      "type": "edit",
      "id": "90eacf8ad9cf13ef",
      "item": {
        "type": "paragraph",
        "id": "90eacf8ad9cf13ef",
        "text": "“Person” and “Address” in this example are composite values, and “Postal Code” is a simple value. And this is exactly how values are stored in the Corporate Memory: as an hierarchy of typed topics:\n"
      },
      "date": 1660194875990
    },
    {
      "item": {
        "type": "factory",
        "id": "537a6c29015706f3"
      },
      "id": "537a6c29015706f3",
      "type": "add",
      "after": "90eacf8ad9cf13ef",
      "date": 1660194886438
    },
    {
      "type": "edit",
      "id": "537a6c29015706f3",
      "item": {
        "type": "html",
        "id": "537a6c29015706f3",
        "text": "<img\n  width=\"100%\"\n  src=\"https://dmx.readthedocs.io/en/latest/_images/person-value.png\"\n>"
      },
      "date": 1660194902819
    },
    {
      "item": {
        "type": "factory",
        "id": "3a25c67cfb2dd45b"
      },
      "id": "3a25c67cfb2dd45b",
      "type": "add",
      "after": "537a6c29015706f3",
      "date": 1660194917046
    },
    {
      "type": "edit",
      "id": "3a25c67cfb2dd45b",
      "item": {
        "type": "markdown",
        "id": "3a25c67cfb2dd45b",
        "text": "A value of type “Person” as stored in the Corporate Memory. The value “Cathy Jones” is composed of a “Person Name” value and an “Address” value, which is composed of a “Street” value, a “Postal Code” value etc. The red associations are of type “Composition” and form the topic hierarchy. They are directed from “Parent” to “Child”. The leaf-nodes are the simple values. Some values have their corresponding type topic revealed. The cyan associations are of type “Instantiation” and are directed from “Instance” to “Type”.\nDMX has the specialty that not only topics represent values, but associations too. In this regard there is no difference between topics and associations:\n\n* both are typed\n* both have a value\nThe type determines the structure of the value."
      },
      "date": 1660194925039
    },
    {
      "type": "edit",
      "id": "3a25c67cfb2dd45b",
      "item": {
        "type": "markdown",
        "id": "3a25c67cfb2dd45b",
        "text": "A value of type “Person” as stored in the Corporate Memory. The value “Cathy Jones” is composed of a “Person Name” value and an “Address” value, which is composed of a “Street” value, a “Postal Code” value etc. The red associations are of type “Composition” and form the topic hierarchy. They are directed from “Parent” to “Child”. The leaf-nodes are the simple values. Some values have their corresponding type topic revealed. The cyan associations are of type “Instantiation” and are directed from “Instance” to “Type”.\nDMX has the specialty that not only topics represent values, but associations too. In this regard there is no difference between topics and associations:\n\n* both are typed\n* both have a value\n\nThe type determines the structure of the value."
      },
      "date": 1660194933889
    },
    {
      "type": "edit",
      "id": "3a25c67cfb2dd45b",
      "item": {
        "type": "markdown",
        "id": "3a25c67cfb2dd45b",
        "text": "A value of type “Person” as stored in the Corporate Memory. The value “Cathy Jones” is composed of a “Person Name” value and an “Address” value, which is composed of a “Street” value, a “Postal Code” value etc. The red associations are of type “Composition” and form the topic hierarchy. They are directed from “Parent” to “Child”. The leaf-nodes are the simple values. Some values have their corresponding type topic revealed. The cyan associations are of type “Instantiation” and are directed from “Instance” to “Type”.\n\nDMX has the specialty that not only topics represent values, but associations too. In this regard there is no difference between topics and associations:\n\n* both are typed\n* both have a value\n\nThe type determines the structure of the value."
      },
      "date": 1660194943538
    }
  ]
}