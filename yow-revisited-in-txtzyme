{
  "title": "Yow Revisited (in Txtzyme)",
  "story": [
    {
      "type": "paragraph",
      "id": "6fd2a9a8429c5a47",
      "text": "The HDLx-2416 is a neat little four-character ASCII display that just happens to fit, pin-for-pin, on top of a Teensy as if the Teensy were made for it. I snagged one from the DorkbotPDX spare parts bin after Dave showed me how neatly his Yow! project fit together. Of course, while testing the limits of Txtzyme, I had to put a Yow clone together."
    },
    {
      "type": "video",
      "id": "c4fe571a7d4b9266",
      "text": "VIMEO 13776442\nYow Revisited (in Txtzyme)"
    },
    {
      "type": "html",
      "id": "febfb96357af6927",
      "text": "I wrote the driver for this part in four steps corresponding to four distinct levels of abstraction required of such an application. These are:\n<li>Signals on pins\n<li>Registers within the part\n<li>Methods, like flashing or scrolling\n<li>Specific messages to be scrolled\n"
    },
    {
      "type": "paragraph",
      "id": "1c66edb72f2423d1",
      "text": "I wrote perl functions for each pin, each register, each method and each application of those methods that make up the demo in the movie. Here are some sample functions pulled from each section of the code:"
    },
    {
      "type": "code",
      "id": "60c7f2934e9f1890",
      "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; \n    a $a; cue 0; cu_ 1; \n    d ord($ch); wr_; }\n\n# Application Helpers\nsub txt { my ($t) = @_; \n    for my $i (0..60) { \n        msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n\n# Scroll Application\ntxt \"Now is the time for all good men\n    to come to Dorkbot.\";"
    },
    {
      "type": "paragraph",
      "id": "0a16c0bcdd05f742",
      "text": "With the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the [https://github.com/WardCunningham/Txtzyme/tree/master/projects/yow Yow Project page] on GitHub."
    }
  ],
  "journal": [
    {
      "type": "create",
      "id": "2884e85a1d354957",
      "item": {
        "title": "Yow Revisited (in Txtzyme)"
      },
      "date": 1342392491005
    },
    {
      "item": {
        "type": "factory",
        "id": "6fd2a9a8429c5a47"
      },
      "id": "6fd2a9a8429c5a47",
      "type": "add",
      "date": 1342392493152
    },
    {
      "type": "edit",
      "id": "6fd2a9a8429c5a47",
      "item": {
        "type": "paragraph",
        "id": "6fd2a9a8429c5a47",
        "text": "The HDLx-2416 is a neat little four-character ASCII display that just happens to fit, pin-for-pin, on top of a Teensy as if the Teensy were made for it. I snagged one from the DorkbotPDX spare parts bin after Dave showed me now neatly his Yow! project fit together. Of course, while testing the limits of Txtzyme, I had to put a Yow clone together."
      },
      "date": 1342392503676
    },
    {
      "item": {
        "type": "paragraph",
        "id": "febfb96357af6927",
        "text": "Yow Revisited from Ward Cunningham on Vimeo.\n\nI wrote the driver for this part in four steps corresponding to four distinct levels of abstraction required of such an application. These are:\n\nSignals on pins\nRegisters within the part\nMethods, like flashing or scrolling\nSpecific messages to be scrolled\nI wrote perl functions for each pin, each register, each method and each application of those methods that make up the demo in the movie. Here are some sample functions pulled from each section of the code:\n\n# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";\nWith the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the Yow Project page on GitHub."
      },
      "id": "febfb96357af6927",
      "type": "add",
      "after": "6fd2a9a8429c5a47",
      "date": 1342392504185
    },
    {
      "type": "edit",
      "id": "febfb96357af6927",
      "item": {
        "type": "paragraph",
        "id": "febfb96357af6927",
        "text": "I wrote the driver for this part in four steps corresponding to four distinct levels of abstraction required of such an application. These are:\n<li>Signals on pins\n<;i>Registers within the part\n<li>Methods, like flashing or scrolling\n<li>Specific messages to be scrolled\n"
      },
      "date": 1342392556634
    },
    {
      "item": {
        "type": "paragraph",
        "id": "1c66edb72f2423d1",
        "text": "I wrote perl functions for each pin, each register, each method and each application of those methods that make up the demo in the movie. Here are some sample functions pulled from each section of the code:\n\n# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";\nWith the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the Yow Project page on GitHub."
      },
      "id": "1c66edb72f2423d1",
      "type": "add",
      "after": "febfb96357af6927",
      "date": 1342392557140
    },
    {
      "type": "edit",
      "id": "febfb96357af6927",
      "item": {
        "type": "paragraph",
        "id": "febfb96357af6927",
        "text": "I wrote the driver for this part in four steps corresponding to four distinct levels of abstraction required of such an application. These are:\n<li>Signals on pins\n<li>Registers within the part\n<li>Methods, like flashing or scrolling\n<li>Specific messages to be scrolled\n"
      },
      "date": 1342392569222
    },
    {
      "type": "edit",
      "id": "1c66edb72f2423d1",
      "item": {
        "type": "paragraph",
        "id": "1c66edb72f2423d1",
        "text": "I wrote perl functions for each pin, each register, each method and each application of those methods that make up the demo in the movie. Here are some sample functions pulled from each section of the code:"
      },
      "date": 1342392582265
    },
    {
      "item": {
        "type": "paragraph",
        "id": "b575584878273b6f",
        "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";\nWith the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the Yow Project page on GitHub."
      },
      "id": "b575584878273b6f",
      "type": "add",
      "after": "1c66edb72f2423d1",
      "date": 1342392582770
    },
    {
      "type": "edit",
      "id": "b575584878273b6f",
      "item": {
        "type": "paragraph",
        "id": "b575584878273b6f",
        "text": "<pre># HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";\nWith the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the Yow Project page on GitHub."
      },
      "date": 1342392586110
    },
    {
      "type": "edit",
      "id": "b575584878273b6f",
      "item": {
        "type": "paragraph",
        "id": "b575584878273b6f",
        "text": "<pre># HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";"
      },
      "date": 1342392593671
    },
    {
      "item": {
        "type": "paragraph",
        "id": "0a16c0bcdd05f742",
        "text": "With the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the Yow Project page on GitHub."
      },
      "id": "0a16c0bcdd05f742",
      "type": "add",
      "after": "b575584878273b6f",
      "date": 1342392594177
    },
    {
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": ""
      },
      "id": "6e0496dce156dd68",
      "type": "add",
      "after": "6fd2a9a8429c5a47",
      "date": 1342392708315
    },
    {
      "type": "edit",
      "id": "6e0496dce156dd68",
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": "<iframe src=\"http://player.vimeo.com/video/13776442\" width=\"400\" height=\"281\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/13776442\">Yow Revisited (in Txtzyme)</a>"
      },
      "date": 1342392738594
    },
    {
      "type": "edit",
      "id": "6e0496dce156dd68",
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": "<iframe src=\"http://player.vimeo.com/video/13776442\" width=\"400\" height=\"230\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/13776442\">Yow Revisited (in Txtzyme)</a>"
      },
      "date": 1342392778793
    },
    {
      "type": "edit",
      "id": "6e0496dce156dd68",
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": "<iframe src=\"http://player.vimeo.com/video/13776442\" width=\"400\" height=\"225\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/13776442\">Yow Revisited (in Txtzyme)</a>"
      },
      "date": 1342392792450
    },
    {
      "type": "edit",
      "id": "6e0496dce156dd68",
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": "<iframe src=\"http://player.vimeo.com/video/13776442\" width=\"400\" height=\"220\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/13776442\">Yow Revisited (in Txtzyme)</a>"
      },
      "date": 1342392800152
    },
    {
      "type": "edit",
      "id": "6e0496dce156dd68",
      "item": {
        "type": "paragraph",
        "id": "6e0496dce156dd68",
        "text": "<iframe src=\"http://player.vimeo.com/video/13776442\" width=\"400\" height=\"223\" frameborder=\"0\" webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe> <p><a href=\"http://vimeo.com/13776442\">Yow Revisited (in Txtzyme)</a>"
      },
      "date": 1342392807388
    },
    {
      "type": "edit",
      "id": "6fd2a9a8429c5a47",
      "item": {
        "type": "paragraph",
        "id": "6fd2a9a8429c5a47",
        "text": "The HDLx-2416 is a neat little four-character ASCII display that just happens to fit, pin-for-pin, on top of a Teensy as if the Teensy were made for it. I snagged one from the DorkbotPDX spare parts bin after Dave showed me how neatly his Yow! project fit together. Of course, while testing the limits of Txtzyme, I had to put a Yow clone together."
      },
      "date": 1342794507589
    },
    {
      "item": {
        "type": "factory",
        "id": "60c7f2934e9f1890"
      },
      "id": "60c7f2934e9f1890",
      "type": "add",
      "after": "0a16c0bcdd05f742",
      "date": 1345397739513
    },
    {
      "type": "move",
      "order": [
        "6fd2a9a8429c5a47",
        "6e0496dce156dd68",
        "febfb96357af6927",
        "1c66edb72f2423d1",
        "b575584878273b6f",
        "60c7f2934e9f1890",
        "0a16c0bcdd05f742"
      ],
      "id": "60c7f2934e9f1890",
      "date": 1345397742822
    },
    {
      "type": "edit",
      "id": "60c7f2934e9f1890",
      "item": {
        "type": "code",
        "id": "60c7f2934e9f1890",
        "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to Dorkbot.\";"
      },
      "date": 1345397770002
    },
    {
      "type": "edit",
      "id": "60c7f2934e9f1890",
      "item": {
        "type": "code",
        "id": "60c7f2934e9f1890",
        "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; \nd ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { \nmsg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to\n Dorkbot.\";"
      },
      "date": 1345397809781
    },
    {
      "type": "edit",
      "id": "60c7f2934e9f1890",
      "item": {
        "type": "code",
        "id": "60c7f2934e9f1890",
        "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; a $a; cue 0; cu_ 1; \n    d ord($ch); wr_; }\n# Application Helpers\nsub txt { my ($t) = @_; for my $i (0..60) { \n    msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n# Scroll Application\ntxt \"Now is the time for all good men to come to\n    Dorkbot.\";"
      },
      "date": 1345397832404
    },
    {
      "type": "remove",
      "id": "b575584878273b6f",
      "date": 1345397846109
    },
    {
      "type": "edit",
      "id": "60c7f2934e9f1890",
      "item": {
        "type": "code",
        "id": "60c7f2934e9f1890",
        "text": "# HDLx-2416 Pins\nsub wr_ { tz \"4f 0o 1o\"; }\n\n# HDLx-2416 Registers\nsub ch  { my ($a, $ch) = @_; \n    a $a; cue 0; cu_ 1; \n    d ord($ch); wr_; }\n\n# Application Helpers\nsub txt { my ($t) = @_; \n    for my $i (0..60) { \n        msg (substr $t, $i, 4); tz \"_wait_100m\" }}\n\n# Scroll Application\ntxt \"Now is the time for all good men\n    to come to Dorkbot.\";"
      },
      "date": 1345397940751
    },
    {
      "type": "edit",
      "id": "0a16c0bcdd05f742",
      "item": {
        "type": "paragraph",
        "id": "0a16c0bcdd05f742",
        "text": "With the rest of the pins, registers, helpers and applications, the program runs a full page. As always, you can find it in the [https://github.com/WardCunningham/Txtzyme/tree/master/projects/yow Yow Project page] on GitHub."
      },
      "date": 1348972422414
    },
    {
      "type": "edit",
      "id": "febfb96357af6927",
      "item": {
        "type": "html",
        "id": "febfb96357af6927",
        "text": "I wrote the driver for this part in four steps corresponding to four distinct levels of abstraction required of such an application. These are:\n<li>Signals on pins\n<li>Registers within the part\n<li>Methods, like flashing or scrolling\n<li>Specific messages to be scrolled\n"
      },
      "date": 1420954454451
    },
    {
      "type": "add",
      "item": {
        "type": "video",
        "id": "c4fe571a7d4b9266",
        "text": "YOUTUBE CI7T2iuGjjc\nMerritt Raitt's race to work is narrated by Tour de France TV commentators Phil Liggett and Paul Sherwin."
      },
      "after": "6e0496dce156dd68",
      "id": "c4fe571a7d4b9266",
      "date": 1420954474032
    },
    {
      "type": "edit",
      "id": "c4fe571a7d4b9266",
      "item": {
        "type": "video",
        "id": "c4fe571a7d4b9266",
        "text": "VIMEO 13776442"
      },
      "date": 1420954507204
    },
    {
      "type": "edit",
      "id": "c4fe571a7d4b9266",
      "item": {
        "type": "video",
        "id": "c4fe571a7d4b9266",
        "text": "VIMEO 13776442\nYow Revisited (in Txtzyme)"
      },
      "date": 1420954523713
    },
    {
      "type": "remove",
      "id": "6e0496dce156dd68",
      "date": 1420954528007
    },
    {
      "type": "fork",
      "site": "txtzyme.com",
      "date": 1627296512702
    }
  ]
}