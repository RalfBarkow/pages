{
  "title": "2024-02-06",
  "story": [
    {
      "type": "paragraph",
      "id": "11efee06a0c30d98",
      "text": "⇐ [[Exports from OPM]] ⇒ [[Aspects of Pattern Relations]]"
    },
    {
      "type": "paragraph",
      "id": "63193d4401db6dec",
      "text": "Marc noticed that there are duplicates in that data. Ward tracked it down to duplicates in the csv file. He added csv line numbers to make this easer to trace back."
    },
    {
      "type": "paragraph",
      "id": "8fc8e92e439d0aff",
      "text": "The csv doesn't show what diagram the row is from."
    },
    {
      "type": "code",
      "id": "025bcc14b1074d6b",
      "text": "RlCSV\nshow Diagram the row is from\n\nRow"
    },
    {
      "type": "paragraph",
      "id": "a7b282cd05525ddd",
      "text": "That info would disambiguate the duplicates.\nWard thinks it was my suggestion to parse the text from the pdf. [⇒ [[PDFtalk]]]"
    },
    {
      "type": "paragraph",
      "id": "3c715f696c2907e7",
      "text": "Marc figured out how to convert that text to html.\nWard got started parsing that, but not with enough depth to disambiguate the csv duplicates."
    },
    {
      "type": "paragraph",
      "id": "e7f2dec55c4f315f",
      "text": "We do not know whether it is in [[OPM]]'s interest to move the models elsewhere."
    },
    {
      "type": "paragraph",
      "id": "a2b7ceed2dc13f69",
      "text": "Source,Relation,Target reminds me of S,P,O and RDF triples. See [[Mapping RDF to a Sequence]]"
    },
    {
      "type": "markdown",
      "id": "df1b9fec6b4b85bf",
      "text": "> The predicate indicates what kind of relation exists between subject and object. The predicate is a URI too. A set of such triples is called an RDF graph. This can be illustrated by a node and directed-arc diagram, in which each triple is represented as a node-arc-node link."
    },
    {
      "type": "paragraph",
      "id": "1ddf1908d2555527",
      "text": "An RDF graph can be serialized into a sequence of triples and considered as a text where each line corresponds to a simple triple of subject, predicate and object."
    },
    {
      "type": "paragraph",
      "id": "5c65d483827a2d66",
      "text": "Ward would like to convert that [what?] to property graph, one per diagram that Marc drew.\nHe could use some help."
    },
    {
      "type": "markdown",
      "id": "be7943b81cc919f6",
      "text": "> If you have easy ways to do the converstion."
    },
    {
      "type": "paragraph",
      "id": "4dfbc3d8e7c0d206",
      "text": "Maybe we can reconstruct graphs based on the CSV similar to your technique on the [[Aspects of Pattern Relations]] page."
    },
    {
      "type": "markdown",
      "id": "f2887c6cdfbfda79",
      "text": "> Plan: finish careful reading, encode as freeform relations, modify script for aspects in the [[Solo Super Collaborator]]."
    },
    {
      "type": "code",
      "id": "a82479c14b215674",
      "text": "Triple\nis represented as a node-arc-node link"
    },
    {
      "type": "paragraph",
      "id": "508ea73252d174be",
      "text": "Ward read Marc's html with the browser's innerHTML property.\nHe can find the colored text because it is inside <font> elements.\nBut the diagram numbers are not enclosed in elements.\n[https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object stackoverflow]\nHe thinks this can be solved but any solution might be fragile.\nMarc communicates with OPM folks. Ward suggested he ask for a more complete export."
    },
    {
      "type": "paragraph",
      "id": "cce893e042534f85",
      "text": "We are talking about [http://ward.dojo.fed.wiki/assets/pages/exports-from-opm/Modeling%20Learning%20System.html Modeling Learning System.html]."
    },
    {
      "type": "html",
      "id": "78c0e9ed35e5c385",
      "text": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\"></head><body><style> .object { color: #00b050; } </style><style> .process { color: #0070c0; } </style><style> .state { color: #808000; } </style><b>SD</b><br><p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>2. <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> exhibits <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font><b>.</b></p><p>3. <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> exhibits <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> and one more operation<b>.</b></p><p>4. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> changes <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> from <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> to <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b></p><p>5. <font color=\"#00b050\"><b class=\"f536ec61-43c9-43f9-bff1-a6d29818d087\">College Of Exploration</b></font><b>,</b> <font color=\"#00b050\"><b class=\"9b9ff8f5-d2b0-4dd2-b9cf-39d1d3ce3608\">Expert Modeler Group</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"e4e19b06-c2e7-4a73-b68d-988483203c72\">Funding Source Group</b></font> and <font color=\"#00b050\"><b class=\"b532c112-7bc2-40b8-8d86-6044002d71d8\">Relocalize Creativity</b></font> handle <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>.</b></p><p>6. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> requires <font color=\"#00b050\"><b class=\"0ba17078-66dd-4f1a-aa95-ddeced43c35e\">Collaborative Online Tech Set</b></font><b>,</b> <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a5f63af3-5b02-40a3-99b5-7fff13bb8050\">Cybernetic Concept Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a1c515bb-cf08-4b79-937b-af25e40edb24\">Language Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"77c472e0-2d21-4e8b-acac-73d62787e7ac\">Model Set</b></font> and <font color=\"#00b050\"><b class=\"64838fc3-f736-484d-8b47-027ba5fc379d\">Tool Set</b></font><b>.</b></p><p>7. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> consumes <font color=\"#00b050\"><b class=\"01f17893-0c33-4b03-b1bf-c7759532bd2c\">Active Need Set</b></font> and <font color=\"#00b050\"><b class=\"3e7f9a07-6145-4f1a-8c81-1fcc4943fcb7\">Would Be Modeler Group</b></font><b>.</b></p><p>8. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> yields <font color=\"#00b050\"><b class=\"8c91af25-184b-4606-a7cd-be78dd855088\">Competent Community Modeler Group</b></font><b>.</b></p><br>\n"
    },
    {
      "type": "paragraph",
      "id": "c6b53c0c273abdcd",
      "text": "Ward looked briefly for a PDF to HTML converter of which there are many. His thought was\nthat he could read the text interpretation and maybe even makes sense of the color\ncoding. This could still be a path but not a strong or reliable one. Sometimes if we do\nthe weak thing once we get more ideas of what we want for the strong solution."
    },
    {
      "type": "paragraph",
      "id": "5971fc96bc377e93",
      "text": "Sounds like a [[Wardism]]!"
    },
    {
      "type": "paragraph",
      "id": "70616db2d39113ca",
      "text": "In several places the [[Moldable Development Patterns]] paper suggested that molding happened by adding a couple of lines of code. Ward is strongly interested in how it is that molding is only a couple lines of code."
    },
    {
      "type": "paragraph",
      "id": "6b80be4650b27d13",
      "text": "His goal is to convert OPM's (csv + pdf) to the Solo Collaborators (jsonl)."
    },
    {
      "type": "image",
      "id": "3366149d36ecccd8",
      "text": "XMLHTMLParser parse: self contents",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/a52b8b2cc4b4e55f6c201c6b2a5b8836.jpg"
    },
    {
      "type": "code",
      "id": "de1bd65051f6a7f7",
      "text": "aXMLDocument := XMLHTMLParser parse: self contents"
    },
    {
      "type": "paragraph",
      "id": "815b948d41bf4c4c",
      "text": "b class looks like a UUID"
    },
    {
      "type": "image",
      "id": "d8252d420b05d55a",
      "text": "Text shown in red",
      "size": "wide",
      "width": 419,
      "height": 254,
      "url": "/assets/plugins/image/af4eb45310ce138c1fa5856da0728c15.jpg"
    },
    {
      "type": "paragraph",
      "id": "beedb8c565e2be5a",
      "text": "There is important information in the text shown in red.\nWard's approach would be to find everything ever said in red, then confirm that we understand the meaning of whatever is said."
    },
    {
      "type": "paragraph",
      "id": "691a2112f713389a",
      "text": "OPM is trying to talk to a person, but Wards wants to reverse engineer its data to English converter and get back to data. Marc points out that the English might be awkward. His assumption is that OPM people choose Hebrew terms first then write the English equivalent."
    },
    {
      "type": "image",
      "id": "e138735ea5eece63",
      "text": "a XMLString",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/cc5b4e66236de73e7888c7e9476c90f9.jpg"
    },
    {
      "type": "paragraph",
      "id": "5e7eb22ccbbce6bd",
      "text": "But, if a tally shows that there are only a dozen things ever said in red, then there is hope.\nCan we tabulate the red text? "
    },
    {
      "type": "paragraph",
      "id": "27ca0fe83de5f3f4",
      "text": "In Unix Ward tabulates with this command line:"
    },
    {
      "type": "code",
      "id": "ab1edb062bd3521f",
      "text": "cat ... | sort | uniq -c | sort -n"
    },
    {
      "type": "paragraph",
      "id": "9bd5f97c28554390",
      "text": "His first attempt might notice that the red text is full of \"s\" numbers. So I might remove them first:"
    },
    {
      "type": "code",
      "id": "30416ff20e4f3bd7",
      "text": "cat ... | perl -pe 's/S\\d+(\\.\\d+)/#/' | sort | uniq -s | sort -n"
    },
    {
      "type": "paragraph",
      "id": "a0ffd81dec98bc48",
      "text": "What \"s\" numbers? Do you have an example? @Ward"
    },
    {
      "type": "pagefold",
      "id": "8be489e688f02d06",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "85d7d2db60cbbd62",
      "text": "I select all font elements with a color attribute set to \"#00b050\" with XPath:"
    },
    {
      "type": "code",
      "id": "038b80f64534e27c",
      "text": "//font[@color=\"#00b050\"]"
    },
    {
      "type": "markdown",
      "id": "c19841e6684ae358",
      "text": "This XPath expression selects all font elements anywhere in the document (//) that have a color attribute with the value \"#00b050\".\n\n"
    },
    {
      "type": "markdown",
      "id": "6335e8fb52bdaeff",
      "text": "**Prompt:** I want to work in Pharo Smalltalk / gt. The XPath self::node()//font[@color=\"#00b050\"] answers a XPathNodeSet. Sort and tabulate this."
    },
    {
      "type": "image",
      "id": "ece8632fa1fb1739",
      "text": "Prompt",
      "size": "wide",
      "width": 419,
      "height": 284,
      "url": "/assets/plugins/image/b1a2aeb4ab2deb00c568ec2daaf63b64.jpg"
    },
    {
      "type": "markdown",
      "id": "fae28bc01574d8a3",
      "text": "In Pharo Smalltalk, you can use the XPathNodeSet's `asSortedCollection` method to obtain a sorted collection of the nodes in the XPathNodeSet. After that, you can iterate through the sorted collection and tabulate the results. Here's an example: […] (ChatGPT 3.5)"
    },
    {
      "type": "pagefold",
      "id": "6c2d484ea5393381",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "6828e816942b0216",
      "text": "**Note**: We use the XPathNodeSet's `asSorted` method instead."
    },
    {
      "type": "image",
      "id": "40a713c6389b9797",
      "text": "self asSorted",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/ce09ed1dda11953221644fbd026c039c.jpg"
    },
    {
      "type": "paragraph",
      "id": "fd08f7dab0cc9383",
      "text": "I think the XPath statement needs to be adjusted to return all the text highlighted in red."
    },
    {
      "type": "code",
      "id": "41a0f27fe380c66c",
      "text": "self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]"
    },
    {
      "type": "markdown",
      "id": "bc175d349389c9f4",
      "text": "This XPath expression selects the first text node that is a following sibling of the <font> element with the specified color."
    },
    {
      "type": "image",
      "id": "f08834d9a12528df",
      "text": "self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]",
      "size": "wide",
      "width": 419,
      "height": 256,
      "url": "/assets/plugins/image/0d58f0722043a52c24ec0497f740595d.jpg"
    },
    {
      "type": "code",
      "id": "eaec5764fa817db8",
      "text": "self document\n\txPath: 'self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]'"
    },
    {
      "type": "image",
      "id": "8680a137bbc310dd",
      "text": "aXMLDocument document\n\txPath: …",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/7d725273d31628f3571c6a5509bed8b2.jpg"
    },
    {
      "type": "code",
      "id": "9ced0ddb24390652",
      "text": "aXMLDocument document\n\txPath: 'self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]'"
    },
    {
      "type": "image",
      "id": "83afcc59e862aa8b",
      "text": "XPathNodeSet",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/87f641b855c77e56904432e60679e6ac.jpg"
    },
    {
      "type": "image",
      "id": "f30591538f5fca8d",
      "text": "Relationship between html and red marked text",
      "size": "wide",
      "width": 430,
      "height": 181,
      "url": "/assets/plugins/image/5190ff820c878dcb4e648a97c41289c7.jpg"
    },
    {
      "type": "paragraph",
      "id": "e86c8ebbfd8d7448",
      "text": "We could try to reconstruct the following <p> with the help of an AST."
    },
    {
      "type": "html",
      "id": "db511bbee9f169a8",
      "text": "<p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p>"
    },
    {
      "type": "code",
      "id": "990243c76fc3bef6",
      "text": "<p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p>"
    },
    {
      "type": "paragraph",
      "id": "ac6c34e7a75e8da3",
      "text": "In addition to the red-marked text, we should also consider the dark yellow [olive tone]. (Hex: #808000)"
    },
    {
      "type": "paragraph",
      "id": "61f22b10b1632f07",
      "text": "TODO: \"Define a method to recursively build the AST\""
    },
    {
      "type": "image",
      "id": "2e5acc5954a83c9e",
      "text": "Object>>#withDeep:do:",
      "size": "wide",
      "width": 430,
      "height": 261,
      "url": "/assets/plugins/image/8b369b368bf25d1c70668f2386c71b42.jpg"
    },
    {
      "type": "code",
      "id": "ce1d662b4dbe2d78",
      "text": "Object>>#withDeep:collect:"
    },
    {
      "type": "code",
      "id": "9c139b36c728d30a",
      "text": "withDeep: aBlock1 collect: aBlock2\n\t^ self \n\t\twithDeep: aBlock1 \n\t\tcollect: aBlock2 \n\t\tas: OrderedCollection "
    },
    {
      "type": "pagefold",
      "id": "2e065aeaec11abe8",
      "text": "~"
    },
    {
      "type": "image",
      "id": "67d2d6fade3f3703",
      "text": "[[Snippet]]>>#gtAssetsFor:",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/856959bcfe926ae9a9a1a5f9dc7d8f81.jpg"
    },
    {
      "type": "image",
      "id": "1dca83ebf6065995",
      "text": "(Wiki assets , '/' , self text) asFileReference",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/f1adf1d8e83b44891e17c2b20b71c835.jpg"
    },
    {
      "type": "image",
      "id": "1ac213a04ffc2979",
      "text": "aXMLDocument",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/c7a32b4d63d47a941ad44655b0c6d52d.jpg"
    },
    {
      "type": "paragraph",
      "id": "05bad9fb9ec1c680",
      "text": "XPath:"
    },
    {
      "type": "code",
      "id": "e9659e38de72a948",
      "text": "self::node()//p//font[@color=\"#808000\"]/b"
    },
    {
      "type": "image",
      "id": "ae420f4ba5b61fb6",
      "text": "deficient",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/4dca949af74bb755bbd1ba1956d03e38.jpg",
      "alias": "3dfc5515d06c28b4"
    },
    {
      "type": "video",
      "id": "a4ffe7b1eae89d7f",
      "text": "HTML5 mp4 https://wiki.ralfbarkow.ch/assets/pages/exports-from-opm/exports-from-opm.mov\nNarrative video"
    },
    {
      "type": "paragraph",
      "id": "b3c8120158e82b48",
      "text": "After creating the video above, I realized the meaning of the colors."
    },
    {
      "type": "image",
      "id": "72a5ede87a86d649",
      "text": "style",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/36d79ef19cdbe7fee816c56e13ae8fda.jpg"
    },
    {
      "type": "paragraph",
      "id": "6ae5f53e6118b269",
      "text": "Our \"red\" marking is Pigment Green and indicates objects:"
    },
    {
      "type": "code",
      "id": "35015eab2714c3fa",
      "text": "object := 'self::node()//p//font[@color=\"#00b050\"]'"
    },
    {
      "type": "paragraph",
      "id": "6752cabf4a3c189c",
      "text": "What we originally observed as marked in red appear to be prepositions, conjunctions, or linking verb phrases."
    },
    {
      "type": "paragraph",
      "id": "333264ad09718494",
      "text": "Navy Blue 'is' process:"
    },
    {
      "type": "code",
      "id": "79fd8574e1d84692",
      "text": "process := 'self::node()//p//font[@color=\"#0070c0\"]'"
    },
    {
      "type": "paragraph",
      "id": "ae1695d0f254e7f0",
      "text": "Olive 'is' state:"
    },
    {
      "type": "code",
      "id": "bc2b913b3d0a944a",
      "text": "state := 'self::node()//p//font[@color=\"#808000\"]'"
    },
    {
      "type": "image",
      "id": "30638f8446487149",
      "text": "UUID",
      "size": "wide",
      "width": 419,
      "height": 453,
      "url": "/assets/plugins/image/662807e83d5b9269d30fb387be944924.jpg"
    },
    {
      "type": "paragraph",
      "id": "11c5b6ca58d99fdf",
      "text": "Sufficient state has the UUID bcd79744-15ca-46e1-aab4-0f694e5e1338."
    },
    {
      "type": "paragraph",
      "id": "cf04987a8e5149c8",
      "text": "Objects and processes also have UUIDs."
    },
    {
      "type": "paragraph",
      "id": "21912b3d97a767e8",
      "text": "[…] Working with collections in Pharo. [https://book.gtoolkit.com/working-with-collections-in-pharo-w9fc31ubksh9va7i1516z5mt gt book]"
    },
    {
      "type": "paragraph",
      "id": "4400c2548b5e1955",
      "text": "[[Moldable Collection Wrapper]]. [https://book.gtoolkit.com/moldable-collection-wrapper-dyquv1bb9krkve76ncq4kyxr7 gt book]"
    },
    {
      "type": "paragraph",
      "id": "80ae4a307a0d1cac",
      "text": "A collection wrapper is similar to a [[Moldable Data Wrapper]]. See [https://book.gtoolkit.com/moldable-data-wrapper-9jkob08ts9ihwg72kvyccl5ff gt book]"
    },
    {
      "type": "paragraph",
      "id": "f66233799e68ef1b",
      "text": "As you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View for each new kind of information you discover."
    },
    {
      "type": "paragraph",
      "id": "dc2730180b932298",
      "text": "So I would want to continue with the views for the objects, processes and states as well as the source, relation and target triples, right?"
    },
    {
      "type": "paragraph",
      "id": "5006a384e6a6656a",
      "text": "We are dealing with fewer than 100 \"red text\" entries here.\n"
    },
    {
      "type": "image",
      "id": "eb48d12614f67d83",
      "text": "\"red text\" entries",
      "size": "wide",
      "width": 419,
      "height": 254,
      "url": "/assets/plugins/image/5bfe72bd10ecde23fa99ed84b49e4ba8.jpg"
    },
    {
      "type": "image",
      "id": "3fb3c473b9dc9d2a",
      "text": "some more",
      "size": "wide",
      "width": 419,
      "height": 453,
      "url": "/assets/plugins/image/f94c90ae841503ebdeea838a6d1bd2b9.jpg"
    },
    {
      "type": "markdown",
      "id": "d77c707d07f99945",
      "text": "> But, if a tally shows that there are only a dozen things ever said in red, then there is hope."
    },
    {
      "type": "paragraph",
      "id": "15171aa485663cb1",
      "text": "DONE."
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "5971fc96bc377e93",
      "item": {
        "type": "paragraph",
        "id": "5971fc96bc377e93",
        "text": "Sounds like a [[Wardism]]!"
      },
      "date": 1707190365816
    },
    {
      "type": "edit",
      "id": "5971fc96bc377e93",
      "item": {
        "type": "paragraph",
        "id": "5971fc96bc377e93",
        "text": "Sounds like a [[Wardism]]!"
      },
      "date": 1707190270540
    },
    {
      "item": {
        "type": "paragraph",
        "id": "5971fc96bc377e93",
        "text": "Sounds like a [[Wardism]]!"
      },
      "id": "5971fc96bc377e93",
      "type": "add",
      "after": "c6b53c0c273abdcd",
      "date": 1707190267460
    },
    {
      "type": "edit",
      "id": "c6b53c0c273abdcd",
      "item": {
        "type": "paragraph",
        "id": "c6b53c0c273abdcd",
        "text": "Ward looked briefly for a PDF to HTML converter of which there are many. His thought was\nthat he could read the text interpretation and maybe even makes sense of the color\ncoding. This could still be a path but not a strong or reliable one. Sometimes if we do\nthe weak thing once we get more ideas of what we want for the strong solution."
      },
      "date": 1707190241794
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c6b53c0c273abdcd",
        "text": "Ward looked briefly for a PDF to HTML converter of which there are many. His thought was\nthat he could read the text interpretation and maybe even makes sense of the color\ncoding. This could still be a path but not a strong or reliable one. Sometimes if we do\nthe weak thing once we get more ideas of what we want for the strong solution."
      },
      "id": "c6b53c0c273abdcd",
      "type": "add",
      "after": "78c0e9ed35e5c385",
      "date": 1707190211459
    },
    {
      "type": "edit",
      "id": "78c0e9ed35e5c385",
      "item": {
        "type": "html",
        "id": "78c0e9ed35e5c385",
        "text": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\"></head><body><style> .object { color: #00b050; } </style><style> .process { color: #0070c0; } </style><style> .state { color: #808000; } </style><b>SD</b><br><p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>2. <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> exhibits <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font><b>.</b></p><p>3. <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> exhibits <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> and one more operation<b>.</b></p><p>4. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> changes <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> from <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> to <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b></p><p>5. <font color=\"#00b050\"><b class=\"f536ec61-43c9-43f9-bff1-a6d29818d087\">College Of Exploration</b></font><b>,</b> <font color=\"#00b050\"><b class=\"9b9ff8f5-d2b0-4dd2-b9cf-39d1d3ce3608\">Expert Modeler Group</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"e4e19b06-c2e7-4a73-b68d-988483203c72\">Funding Source Group</b></font> and <font color=\"#00b050\"><b class=\"b532c112-7bc2-40b8-8d86-6044002d71d8\">Relocalize Creativity</b></font> handle <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>.</b></p><p>6. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> requires <font color=\"#00b050\"><b class=\"0ba17078-66dd-4f1a-aa95-ddeced43c35e\">Collaborative Online Tech Set</b></font><b>,</b> <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a5f63af3-5b02-40a3-99b5-7fff13bb8050\">Cybernetic Concept Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a1c515bb-cf08-4b79-937b-af25e40edb24\">Language Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"77c472e0-2d21-4e8b-acac-73d62787e7ac\">Model Set</b></font> and <font color=\"#00b050\"><b class=\"64838fc3-f736-484d-8b47-027ba5fc379d\">Tool Set</b></font><b>.</b></p><p>7. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> consumes <font color=\"#00b050\"><b class=\"01f17893-0c33-4b03-b1bf-c7759532bd2c\">Active Need Set</b></font> and <font color=\"#00b050\"><b class=\"3e7f9a07-6145-4f1a-8c81-1fcc4943fcb7\">Would Be Modeler Group</b></font><b>.</b></p><p>8. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> yields <font color=\"#00b050\"><b class=\"8c91af25-184b-4606-a7cd-be78dd855088\">Competent Community Modeler Group</b></font><b>.</b></p><br>\n"
      },
      "date": 1707190110838
    },
    {
      "type": "edit",
      "id": "78c0e9ed35e5c385",
      "item": {
        "type": "html",
        "id": "78c0e9ed35e5c385",
        "text": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\"></head><body><style> .object { color: #00b050; } </style><style> .process { color: #0070c0; } </style><style> .state { color: #808000; } </style><b>SD</b><br><p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>2. <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> exhibits <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font><b>.</b></p><p>3. <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> exhibits <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> and one more operation<b>.</b></p><p>4. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> changes <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> from <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> to <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b></p><p>5. <font color=\"#00b050\"><b class=\"f536ec61-43c9-43f9-bff1-a6d29818d087\">College Of Exploration</b></font><b>,</b> <font color=\"#00b050\"><b class=\"9b9ff8f5-d2b0-4dd2-b9cf-39d1d3ce3608\">Expert Modeler Group</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"e4e19b06-c2e7-4a73-b68d-988483203c72\">Funding Source Group</b></font> and <font color=\"#00b050\"><b class=\"b532c112-7bc2-40b8-8d86-6044002d71d8\">Relocalize Creativity</b></font> handle <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>.</b></p><p>6. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> requires <font color=\"#00b050\"><b class=\"0ba17078-66dd-4f1a-aa95-ddeced43c35e\">Collaborative Online Tech Set</b></font><b>,</b> <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a5f63af3-5b02-40a3-99b5-7fff13bb8050\">Cybernetic Concept Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a1c515bb-cf08-4b79-937b-af25e40edb24\">Language Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"77c472e0-2d21-4e8b-acac-73d62787e7ac\">Model Set</b></font> and <font color=\"#00b050\"><b class=\"64838fc3-f736-484d-8b47-027ba5fc379d\">Tool Set</b></font><b>.</b></p><p>7. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> consumes <font color=\"#00b050\"><b class=\"01f17893-0c33-4b03-b1bf-c7759532bd2c\">Active Need Set</b></font> and <font color=\"#00b050\"><b class=\"3e7f9a07-6145-4f1a-8c81-1fcc4943fcb7\">Would Be Modeler Group</b></font><b>.</b></p><p>8. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> yields <font color=\"#00b050\"><b class=\"8c91af25-184b-4606-a7cd-be78dd855088\">Competent Community Modeler Group</b></font><b>.</b></p><br>\n"
      },
      "date": 1707189897736
    },
    {
      "item": {
        "type": "html",
        "id": "78c0e9ed35e5c385",
        "text": "<html><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=windows-1252\"></head><body><style> .object { color: #00b050; } </style><style> .process { color: #0070c0; } </style><style> .state { color: #808000; } </style><b>SD</b><br><p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p><p>2. <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> exhibits <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font><b>.</b></p><p>3. <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> exhibits <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> and one more operation<b>.</b></p><p>4. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> changes <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> from <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> to <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b></p><p>5. <font color=\"#00b050\"><b class=\"f536ec61-43c9-43f9-bff1-a6d29818d087\">College Of Exploration</b></font><b>,</b> <font color=\"#00b050\"><b class=\"9b9ff8f5-d2b0-4dd2-b9cf-39d1d3ce3608\">Expert Modeler Group</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"e4e19b06-c2e7-4a73-b68d-988483203c72\">Funding Source Group</b></font> and <font color=\"#00b050\"><b class=\"b532c112-7bc2-40b8-8d86-6044002d71d8\">Relocalize Creativity</b></font> handle <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>.</b></p><p>6. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> requires <font color=\"#00b050\"><b class=\"0ba17078-66dd-4f1a-aa95-ddeced43c35e\">Collaborative Online Tech Set</b></font><b>,</b> <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a5f63af3-5b02-40a3-99b5-7fff13bb8050\">Cybernetic Concept Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"a1c515bb-cf08-4b79-937b-af25e40edb24\">Language Set</b></font><b>,</b>  <font color=\"#00b050\"><b class=\"77c472e0-2d21-4e8b-acac-73d62787e7ac\">Model Set</b></font> and <font color=\"#00b050\"><b class=\"64838fc3-f736-484d-8b47-027ba5fc379d\">Tool Set</b></font><b>.</b></p><p>7. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> consumes <font color=\"#00b050\"><b class=\"01f17893-0c33-4b03-b1bf-c7759532bd2c\">Active Need Set</b></font> and <font color=\"#00b050\"><b class=\"3e7f9a07-6145-4f1a-8c81-1fcc4943fcb7\">Would Be Modeler Group</b></font><b>.</b></p><p>8. <font color=\"#0070c0\"><b class=\"c5385b69-fd34-4bef-87bf-b7f8391e6b4a\">See The Systems: Community Modeling Learning</b></font> of <font color=\"#00b050\"><b class=\"cc780d65-61bb-4557-b353-09cda1c5910e\">Community Steering System</b></font> yields <font color=\"#00b050\"><b class=\"8c91af25-184b-4606-a7cd-be78dd855088\">Competent Community Modeler Group</b></font><b>.</b></p><br>\n"
      },
      "id": "78c0e9ed35e5c385",
      "type": "add",
      "after": "cce893e042534f85",
      "date": 1707189895186
    },
    {
      "type": "edit",
      "id": "cce893e042534f85",
      "item": {
        "type": "paragraph",
        "id": "cce893e042534f85",
        "text": "We are talking about [http://ward.dojo.fed.wiki/assets/pages/exports-from-opm/Modeling%20Learning%20System.html Modeling Learning System.html]."
      },
      "date": 1707189868050
    },
    {
      "type": "edit",
      "id": "cce893e042534f85",
      "item": {
        "type": "paragraph",
        "id": "cce893e042534f85",
        "text": "We are talking about [http://ward.dojo.fed.wiki/assets/pages/exports-from-opm/Modeling%20Learning%20System.html Modeling Learning System.html]."
      },
      "date": 1707189797466
    },
    {
      "item": {
        "type": "paragraph",
        "id": "cce893e042534f85",
        "text": "We are talking about [http://ward.dojo.fed.wiki/assets/pages/exports-from-opm/Modeling%20Learning%20System.html Modeling Learning System.html]."
      },
      "id": "cce893e042534f85",
      "type": "add",
      "after": "508ea73252d174be",
      "date": 1707189780989
    },
    {
      "type": "edit",
      "id": "508ea73252d174be",
      "item": {
        "type": "paragraph",
        "id": "508ea73252d174be",
        "text": "Ward read Marc's html with the browser's innerHTML property.\nHe can find the colored text because it is inside <font> elements.\nBut the diagram numbers are not enclosed in elements.\n[https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object stackoverflow]\nHe thinks this can be solved but any solution might be fragile.\nMarc communicates with OPM folks. Ward suggested he ask for a more complete export."
      },
      "date": 1707189706190
    },
    {
      "type": "edit",
      "id": "508ea73252d174be",
      "item": {
        "type": "paragraph",
        "id": "508ea73252d174be",
        "text": "Ward read Marc's html with the browser's innerHTML property.\nHe can find the colored text because it is inside <font> elements.\nBut the diagram numbers are not enclosed in elements.\n[https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object stackoverflow]\nHe thinks this can be solved but any solution might be fragile.\nMarc communicates with OPM folks. Ward suggested he ask for a more complete export."
      },
      "date": 1707189686064
    },
    {
      "item": {
        "type": "paragraph",
        "id": "508ea73252d174be",
        "text": "Ward read Marc's html with the browser's innerHTML property.\nHe can find the colored text because it is inside <font> elements.\nBut the diagram numbers are not enclosed in elements.\n[https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object stackoverflow]\nHe thinks this can be solved but any solution might be fragile.\nMarc communicates with OPM folks. Ward suggested he ask for a more complete export."
      },
      "id": "508ea73252d174be",
      "type": "add",
      "after": "a82479c14b215674",
      "date": 1707189628848
    },
    {
      "type": "edit",
      "id": "f2887c6cdfbfda79",
      "item": {
        "type": "markdown",
        "id": "f2887c6cdfbfda79",
        "text": "> Plan: finish careful reading, encode as freeform relations, modify script for aspects in the [[Solo Super Collaborator]]."
      },
      "date": 1707189567364
    },
    {
      "type": "edit",
      "id": "f2887c6cdfbfda79",
      "item": {
        "type": "markdown",
        "id": "f2887c6cdfbfda79",
        "text": "> Plan: finish careful reading, encode as freeform relations, modify script for aspects in the [[Solo Super Collaborator]]."
      },
      "date": 1707189565960
    },
    {
      "id": "f2887c6cdfbfda79",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "f2887c6cdfbfda79",
        "text": "> Plan: finish careful reading, encode as freeform relations, modify script for aspects in the [[Solo Super Collaborator]]."
      },
      "after": "4dfbc3d8e7c0d206",
      "attribution": {
        "page": "Aspects of Pattern Relations"
      },
      "date": 1707189561138
    },
    {
      "type": "edit",
      "id": "a82479c14b215674",
      "item": {
        "type": "code",
        "id": "a82479c14b215674",
        "text": "Triple\nis represented as a node-arc-node link"
      },
      "date": 1707189495501
    },
    {
      "item": {
        "type": "code",
        "id": "a82479c14b215674",
        "text": "Triple\nis represented as a node-arc-node link"
      },
      "id": "a82479c14b215674",
      "type": "add",
      "after": "4dfbc3d8e7c0d206",
      "date": 1707189469672
    },
    {
      "type": "edit",
      "id": "4dfbc3d8e7c0d206",
      "item": {
        "type": "paragraph",
        "id": "4dfbc3d8e7c0d206",
        "text": "Maybe we can reconstruct graphs based on the CSV similar to your technique on the [[Aspects of Pattern Relations]] page."
      },
      "date": 1707189367729
    },
    {
      "item": {
        "type": "paragraph",
        "id": "4dfbc3d8e7c0d206",
        "text": "Maybe we can reconstruct graphs based on the CSV similar to your technique on the [[Aspects of Pattern Relations]] page."
      },
      "id": "4dfbc3d8e7c0d206",
      "type": "add",
      "after": "be7943b81cc919f6",
      "date": 1707189359166
    },
    {
      "type": "edit",
      "id": "be7943b81cc919f6",
      "item": {
        "type": "markdown",
        "id": "be7943b81cc919f6",
        "text": "> If you have easy ways to do the converstion."
      },
      "date": 1707189305722
    },
    {
      "type": "add",
      "id": "be7943b81cc919f6",
      "item": {
        "type": "markdown",
        "id": "be7943b81cc919f6",
        "text": "> If you have easy ways to do the converstion."
      },
      "after": "5c65d483827a2d66",
      "date": 1707189304449
    },
    {
      "type": "edit",
      "id": "5c65d483827a2d66",
      "item": {
        "type": "paragraph",
        "id": "5c65d483827a2d66",
        "text": "Ward would like to convert that [what?] to property graph, one per diagram that Marc drew.\nHe could use some help."
      },
      "date": 1707189303708
    },
    {
      "type": "edit",
      "id": "5c65d483827a2d66",
      "item": {
        "type": "paragraph",
        "id": "5c65d483827a2d66",
        "text": "Ward would like to convert that [what?] to property graph, one per diagram that Marc drew.\nHe could use some help."
      },
      "date": 1707189269624
    },
    {
      "item": {
        "type": "paragraph",
        "id": "5c65d483827a2d66",
        "text": "Ward would like to convert that [what?] to property graph, one per diagram that Marc drew.\nHe could use some help."
      },
      "id": "5c65d483827a2d66",
      "type": "add",
      "after": "1ddf1908d2555527",
      "date": 1707189258886
    },
    {
      "type": "edit",
      "id": "1ddf1908d2555527",
      "item": {
        "type": "paragraph",
        "id": "1ddf1908d2555527",
        "text": "An RDF graph can be serialized into a sequence of triples and considered as a text where each line corresponds to a simple triple of subject, predicate and object."
      },
      "date": 1707189217202
    },
    {
      "id": "1ddf1908d2555527",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1ddf1908d2555527",
        "text": "An RDF graph can be serialized into a sequence of triples and considered as a text where each line corresponds to a simple triple of subject, predicate and object."
      },
      "after": "df1b9fec6b4b85bf",
      "attribution": {
        "page": "Mapping RDF to a Sequence",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1707189205552
    },
    {
      "type": "edit",
      "id": "df1b9fec6b4b85bf",
      "item": {
        "type": "markdown",
        "id": "df1b9fec6b4b85bf",
        "text": "> The predicate indicates what kind of relation exists between subject and object. The predicate is a URI too. A set of such triples is called an RDF graph. This can be illustrated by a node and directed-arc diagram, in which each triple is represented as a node-arc-node link."
      },
      "date": 1707189107852
    },
    {
      "type": "edit",
      "id": "df1b9fec6b4b85bf",
      "item": {
        "type": "markdown",
        "id": "df1b9fec6b4b85bf",
        "text": "> The predicate indicates what kind of relation exists between subject and object. The predicate is a URI too. A set of such triples is called an RDF graph. This can be illustrated by a node and directed-arc diagram, in which each triple is represented as a node-arc-node link."
      },
      "date": 1707189106246
    },
    {
      "id": "df1b9fec6b4b85bf",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "df1b9fec6b4b85bf",
        "text": "> The predicate indicates what kind of relation exists between subject and object. The predicate is a URI too. A set of such triples is called an RDF graph. This can be illustrated by a node and directed-arc diagram, in which each triple is represented as a node-arc-node link."
      },
      "after": "a2b7ceed2dc13f69",
      "attribution": {
        "page": "Mapping RDF to a Sequence",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1707189081774
    },
    {
      "type": "edit",
      "id": "a2b7ceed2dc13f69",
      "item": {
        "type": "paragraph",
        "id": "a2b7ceed2dc13f69",
        "text": "Source,Relation,Target reminds me of S,P,O and RDF triples. See [[Mapping RDF to a Sequence]]"
      },
      "date": 1707189020878
    },
    {
      "type": "add",
      "id": "e7f2dec55c4f315f",
      "item": {
        "type": "paragraph",
        "id": "e7f2dec55c4f315f",
        "text": "We do not know whether it is in [[OPM]]'s interest to move the models elsewhere."
      },
      "after": "3c715f696c2907e7",
      "date": 1707188924310
    },
    {
      "type": "edit",
      "id": "a2b7ceed2dc13f69",
      "item": {
        "type": "paragraph",
        "id": "a2b7ceed2dc13f69",
        "text": "Source,Relation,Target reminds me of S,P,O and RDF triples. See [[Mapping RDF to a Sequence]]"
      },
      "date": 1707188744238
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a2b7ceed2dc13f69",
        "text": "Source,Relation,Target reminds me of S,P,O and RDF triples. See [[Mapping RDF to a Sequence]]"
      },
      "id": "a2b7ceed2dc13f69",
      "type": "add",
      "after": "3c715f696c2907e7",
      "date": 1707188742023
    },
    {
      "id": "025bcc14b1074d6b",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7"
      ],
      "date": 1707188658006
    },
    {
      "type": "create",
      "item": {
        "title": "2024-02-06",
        "story": []
      },
      "date": 1707188056805
    },
    {
      "id": "11efee06a0c30d98",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "11efee06a0c30d98",
        "text": "⇐ [[Exports from OPM]] ⇒ [[Aspects of Pattern Relations]]"
      },
      "attribution": {
        "page": "2024-02-05"
      },
      "date": 1707188067271
    },
    {
      "item": {
        "type": "paragraph",
        "id": "63193d4401db6dec",
        "text": "Marc noticed that there are duplicates in that data. Ward tracked it down to duplicates in the csv file. He added csv line numbers to make this easer to trace back."
      },
      "id": "63193d4401db6dec",
      "type": "add",
      "after": "11efee06a0c30d98",
      "date": 1707188073254
    },
    {
      "type": "edit",
      "id": "63193d4401db6dec",
      "item": {
        "type": "paragraph",
        "id": "63193d4401db6dec",
        "text": "Marc noticed that there are duplicates in that data. Ward tracked it down to duplicates in the csv file. He added csv line numbers to make this easer to trace back."
      },
      "date": 1707188095696
    },
    {
      "type": "add",
      "id": "8fc8e92e439d0aff",
      "item": {
        "type": "paragraph",
        "id": "8fc8e92e439d0aff",
        "text": "The csv doesn't show what diagram the row is from. That info would disambiguate the duplicates.\nWard thinks it was my suggestion to parse the text from the pdf. [⇒ [[PDFtalk]]]"
      },
      "after": "63193d4401db6dec",
      "date": 1707188151658
    },
    {
      "type": "add",
      "id": "3c715f696c2907e7",
      "item": {
        "type": "paragraph",
        "id": "3c715f696c2907e7",
        "text": "Marc figured out how to convert that text to html.\nWard got started parsing that, but not with enough depth to disambiguate the csv duplicates."
      },
      "after": "8fc8e92e439d0aff",
      "date": 1707188160573
    },
    {
      "type": "edit",
      "id": "11efee06a0c30d98",
      "item": {
        "type": "paragraph",
        "id": "11efee06a0c30d98",
        "text": "⇐ [[Exports from OPM]] ⇒ [[Aspects of Pattern Relations]]"
      },
      "date": 1707188209456
    },
    {
      "type": "edit",
      "id": "11efee06a0c30d98",
      "item": {
        "type": "paragraph",
        "id": "11efee06a0c30d98",
        "text": "⇐ [[Exports from OPM]] ⇒ [[Aspects of Pattern Relations]]"
      },
      "date": 1707188239552
    },
    {
      "item": {
        "type": "code",
        "id": "025bcc14b1074d6b",
        "text": "RlCSV\nshow Diagram the row is from\n\nRow"
      },
      "id": "025bcc14b1074d6b",
      "type": "add",
      "after": "3c715f696c2907e7",
      "date": 1707188278819
    },
    {
      "id": "025bcc14b1074d6b",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "8fc8e92e439d0aff",
        "025bcc14b1074d6b",
        "3c715f696c2907e7"
      ],
      "date": 1707188281511
    },
    {
      "type": "edit",
      "id": "025bcc14b1074d6b",
      "item": {
        "type": "code",
        "id": "025bcc14b1074d6b",
        "text": "RlCSV\nshow Diagram the row is from\n\nRow"
      },
      "date": 1707188334928
    },
    {
      "type": "edit",
      "id": "8fc8e92e439d0aff",
      "item": {
        "type": "paragraph",
        "id": "8fc8e92e439d0aff",
        "text": "The csv doesn't show what diagram the row is from. That info would disambiguate the duplicates.\nWard thinks it was my suggestion to parse the text from the pdf. [⇒ [[PDFtalk]]]"
      },
      "date": 1707188586291
    },
    {
      "type": "edit",
      "id": "8fc8e92e439d0aff",
      "item": {
        "type": "paragraph",
        "id": "8fc8e92e439d0aff",
        "text": "The csv doesn't show what diagram the row is from. That info would disambiguate the duplicates.\nWard thinks it was my suggestion to parse the text from the pdf. [⇒ [[PDFtalk]]]"
      },
      "date": 1707188594438
    },
    {
      "item": {
        "type": "image",
        "id": "3366149d36ecccd8",
        "text": "XMLHTMLParser parse: self contents",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/a52b8b2cc4b4e55f6c201c6b2a5b8836.jpg"
      },
      "id": "3366149d36ecccd8",
      "type": "add",
      "after": "5971fc96bc377e93",
      "date": 1707190680909
    },
    {
      "type": "edit",
      "id": "3366149d36ecccd8",
      "item": {
        "type": "image",
        "id": "3366149d36ecccd8",
        "text": "XMLHTMLParser parse: self contents",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/a52b8b2cc4b4e55f6c201c6b2a5b8836.jpg"
      },
      "date": 1707190737871
    },
    {
      "item": {
        "type": "code",
        "id": "de1bd65051f6a7f7",
        "text": "aXMLDocument := XMLHTMLParser parse: self contents"
      },
      "id": "de1bd65051f6a7f7",
      "type": "add",
      "after": "3366149d36ecccd8",
      "date": 1707190892744
    },
    {
      "type": "edit",
      "id": "de1bd65051f6a7f7",
      "item": {
        "type": "code",
        "id": "de1bd65051f6a7f7",
        "text": "aXMLDocument := XMLHTMLParser parse: self contents"
      },
      "date": 1707190896165
    },
    {
      "type": "add",
      "id": "70616db2d39113ca",
      "item": {
        "type": "paragraph",
        "id": "70616db2d39113ca",
        "text": "In several places the [[Moldable Development Patterns]] paper suggested that molding happened by adding a couple of lines of code. Ward is strongly interested in how it is that molding is only a couple lines of code."
      },
      "after": "5971fc96bc377e93",
      "date": 1707190934020
    },
    {
      "type": "edit",
      "id": "70616db2d39113ca",
      "item": {
        "type": "paragraph",
        "id": "70616db2d39113ca",
        "text": "In several places the [[Moldable Development Patterns]] paper suggested that molding happened by adding a couple of lines of code. Ward is strongly interested in how it is that molding is only a couple lines of code."
      },
      "date": 1707190947260
    },
    {
      "type": "add",
      "id": "6b80be4650b27d13",
      "item": {
        "type": "paragraph",
        "id": "6b80be4650b27d13",
        "text": "His goal is to convert OPM's (csv + pdf) to the Solo Collaborators (jsonl)."
      },
      "after": "70616db2d39113ca",
      "date": 1707190978622
    },
    {
      "type": "edit",
      "id": "6b80be4650b27d13",
      "item": {
        "type": "paragraph",
        "id": "6b80be4650b27d13",
        "text": "His goal is to convert OPM's (csv + pdf) to the Solo Collaborators (jsonl)."
      },
      "date": 1707190991484
    },
    {
      "item": {
        "type": "paragraph",
        "id": "815b948d41bf4c4c",
        "text": "b class looks like a UUID"
      },
      "id": "815b948d41bf4c4c",
      "type": "add",
      "after": "de1bd65051f6a7f7",
      "date": 1707191063277
    },
    {
      "type": "edit",
      "id": "815b948d41bf4c4c",
      "item": {
        "type": "paragraph",
        "id": "815b948d41bf4c4c",
        "text": "b class looks like a UUID"
      },
      "date": 1707191065221
    },
    {
      "type": "add",
      "id": "beedb8c565e2be5a",
      "item": {
        "type": "paragraph",
        "id": "beedb8c565e2be5a",
        "text": "There is important information in the text shown in red.\nWard's approach would be to find everything ever said in red, then confirm that we understand the meaning of whatever is said."
      },
      "after": "815b948d41bf4c4c",
      "date": 1707191109479
    },
    {
      "type": "add",
      "id": "691a2112f713389a",
      "item": {
        "type": "paragraph",
        "id": "691a2112f713389a",
        "text": "OPM is trying to talk to a person, but he wants to reverse engineer its data to English converter and get back to data. Marc points out that the English might be awkward. His assumption is that OPM people choose Hebrew terms first then write the English equivalent."
      },
      "after": "beedb8c565e2be5a",
      "date": 1707191129352
    },
    {
      "item": {
        "type": "factory",
        "id": "d8252d420b05d55a"
      },
      "id": "d8252d420b05d55a",
      "type": "add",
      "after": "691a2112f713389a",
      "date": 1707191170031
    },
    {
      "item": {
        "type": "factory",
        "id": "e138735ea5eece63"
      },
      "id": "e138735ea5eece63",
      "type": "add",
      "after": "d8252d420b05d55a",
      "date": 1707191170061
    },
    {
      "id": "d8252d420b05d55a",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63"
      ],
      "date": 1707191176773,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1707191183116
    },
    {
      "type": "edit",
      "id": "d8252d420b05d55a",
      "item": {
        "type": "image",
        "id": "d8252d420b05d55a",
        "text": "Text shown in red",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/af4eb45310ce138c1fa5856da0728c15.jpg"
      },
      "date": 1707191246340
    },
    {
      "type": "edit",
      "id": "691a2112f713389a",
      "item": {
        "type": "paragraph",
        "id": "691a2112f713389a",
        "text": "OPM is trying to talk to a person, but Wards wants to reverse engineer its data to English converter and get back to data. Marc points out that the English might be awkward. His assumption is that OPM people choose Hebrew terms first then write the English equivalent."
      },
      "date": 1707191294696
    },
    {
      "type": "edit",
      "id": "e138735ea5eece63",
      "item": {
        "type": "image",
        "id": "e138735ea5eece63",
        "text": "Uploaded image",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/cc5b4e66236de73e7888c7e9476c90f9.jpg"
      },
      "date": 1707191410207
    },
    {
      "type": "edit",
      "id": "e138735ea5eece63",
      "item": {
        "type": "image",
        "id": "e138735ea5eece63",
        "text": "a XMLString",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/cc5b4e66236de73e7888c7e9476c90f9.jpg"
      },
      "date": 1707191446013
    },
    {
      "id": "e138735ea5eece63",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "e138735ea5eece63",
        "691a2112f713389a"
      ],
      "date": 1707191453217
    },
    {
      "id": "691a2112f713389a",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63"
      ],
      "date": 1707191494336
    },
    {
      "item": {
        "type": "factory",
        "id": "5e7eb22ccbbce6bd"
      },
      "id": "5e7eb22ccbbce6bd",
      "type": "add",
      "after": "e138735ea5eece63",
      "date": 1707191579227
    },
    {
      "type": "edit",
      "id": "5e7eb22ccbbce6bd",
      "item": {
        "type": "paragraph",
        "id": "5e7eb22ccbbce6bd",
        "text": "But, if a tally shows that there are only a dozen things ever said in red, then there is hope.\nCan you tabulate the red text? "
      },
      "date": 1707191581524
    },
    {
      "type": "edit",
      "id": "5e7eb22ccbbce6bd",
      "item": {
        "type": "paragraph",
        "id": "5e7eb22ccbbce6bd",
        "text": "But, if a tally shows that there are only a dozen things ever said in red, then there is hope.\nCan we tabulate the red text? "
      },
      "date": 1707191593569
    },
    {
      "item": {
        "type": "factory",
        "id": "27ca0fe83de5f3f4"
      },
      "id": "27ca0fe83de5f3f4",
      "type": "add",
      "after": "5e7eb22ccbbce6bd",
      "date": 1707191617979
    },
    {
      "type": "edit",
      "id": "27ca0fe83de5f3f4",
      "item": {
        "type": "paragraph",
        "id": "27ca0fe83de5f3f4",
        "text": "In Unix Ward tabulates with this command line:"
      },
      "date": 1707191636965
    },
    {
      "item": {
        "type": "factory",
        "id": "ab1edb062bd3521f"
      },
      "id": "ab1edb062bd3521f",
      "type": "add",
      "after": "27ca0fe83de5f3f4",
      "date": 1707191638930
    },
    {
      "type": "edit",
      "id": "ab1edb062bd3521f",
      "item": {
        "type": "code",
        "id": "ab1edb062bd3521f",
        "text": "\ncat ... | sort | uniq -c | sort -n"
      },
      "date": 1707191641103
    },
    {
      "type": "edit",
      "id": "ab1edb062bd3521f",
      "item": {
        "type": "code",
        "id": "ab1edb062bd3521f",
        "text": "cat ... | sort | uniq -c | sort -n"
      },
      "date": 1707191643959
    },
    {
      "item": {
        "type": "factory",
        "id": "85d7d2db60cbbd62"
      },
      "id": "85d7d2db60cbbd62",
      "type": "add",
      "after": "ab1edb062bd3521f",
      "date": 1707191819829
    },
    {
      "type": "edit",
      "id": "85d7d2db60cbbd62",
      "item": {
        "type": "paragraph",
        "id": "85d7d2db60cbbd62",
        "text": "I select all font elements with a color attribute set to \"#00b050\":"
      },
      "date": 1707191830790
    },
    {
      "type": "edit",
      "id": "85d7d2db60cbbd62",
      "item": {
        "type": "paragraph",
        "id": "85d7d2db60cbbd62",
        "text": "I select all font elements with a color attribute set to \"#00b050\" with XPath:"
      },
      "date": 1707191858836
    },
    {
      "item": {
        "type": "factory",
        "id": "91b9376632d51ca1"
      },
      "id": "91b9376632d51ca1",
      "type": "add",
      "after": "85d7d2db60cbbd62",
      "date": 1707191860250
    },
    {
      "type": "remove",
      "id": "91b9376632d51ca1",
      "date": 1707191866483
    },
    {
      "item": {
        "type": "factory",
        "id": "038b80f64534e27c"
      },
      "id": "038b80f64534e27c",
      "type": "add",
      "after": "85d7d2db60cbbd62",
      "date": 1707191874651
    },
    {
      "type": "edit",
      "id": "038b80f64534e27c",
      "item": {
        "type": "code",
        "id": "038b80f64534e27c",
        "text": "//font[@color=\"#00b050\"]"
      },
      "date": 1707191880043
    },
    {
      "item": {
        "type": "factory",
        "id": "c19841e6684ae358"
      },
      "id": "c19841e6684ae358",
      "type": "add",
      "after": "038b80f64534e27c",
      "date": 1707191892578
    },
    {
      "type": "edit",
      "id": "c19841e6684ae358",
      "item": {
        "type": "markdown",
        "id": "c19841e6684ae358",
        "text": "This XPath expression selects all font elements anywhere in the document (//) that have a color attribute with the value \"#00b050\".\n\n"
      },
      "date": 1707191896797
    },
    {
      "item": {
        "type": "factory",
        "id": "ece8632fa1fb1739"
      },
      "id": "ece8632fa1fb1739",
      "type": "add",
      "after": "c19841e6684ae358",
      "date": 1707192267650
    },
    {
      "type": "edit",
      "id": "ece8632fa1fb1739",
      "item": {
        "type": "image",
        "id": "ece8632fa1fb1739",
        "text": "Prompt",
        "size": "wide",
        "width": 419,
        "height": 284,
        "url": "/assets/plugins/image/b1a2aeb4ab2deb00c568ec2daaf63b64.jpg"
      },
      "date": 1707192285626
    },
    {
      "item": {
        "type": "factory",
        "id": "6335e8fb52bdaeff"
      },
      "id": "6335e8fb52bdaeff",
      "type": "add",
      "after": "ece8632fa1fb1739",
      "date": 1707192308274
    },
    {
      "type": "edit",
      "id": "6335e8fb52bdaeff",
      "item": {
        "type": "markdown",
        "id": "6335e8fb52bdaeff",
        "text": "**Prompt:** I want to work in Pharo Smalltalk / gt. The XPath self::node()//font[@color=\"#00b050\"] answers a XPathNodeSet. Sort and tabulate this."
      },
      "date": 1707192325043
    },
    {
      "id": "6335e8fb52bdaeff",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739"
      ],
      "date": 1707192327268
    },
    {
      "item": {
        "type": "factory",
        "id": "fae28bc01574d8a3"
      },
      "id": "fae28bc01574d8a3",
      "type": "add",
      "after": "ece8632fa1fb1739",
      "date": 1707192354839
    },
    {
      "type": "edit",
      "id": "fae28bc01574d8a3",
      "item": {
        "type": "markdown",
        "id": "fae28bc01574d8a3",
        "text": "In Pharo Smalltalk, you can use the XPathNodeSet's `asSortedCollection` method to obtain a sorted collection of the nodes in the XPathNodeSet. After that, you can iterate through the sorted collection and tabulate the results. Here's an example:\n\n```smalltalk\n| xpathResult sortedNodes counts |\n\"Assuming you have an XPathNodeSet named 'xpathResult'\"\nxpathResult := 'Your XPathNodeSet here'.\n\n\"Convert XPathNodeSet to a sorted collection\"\nsortedNodes := xpathResult asSortedCollection: [ :a :b | a text < b text ].\n\n\"Count occurrences of each node\"\ncounts := Dictionary new.\nsortedNodes do: [ :node |\n    | text count |\n    text := node text.\n    count := counts at: text ifAbsent: [ 0 ].\n    counts at: text put: count + 1.\n].\n\n\"Display the tabulated results\"\ncounts keysAndValuesDo: [ :text :count |\n    (text displayNl, count printString) displayNl.\n].\n```\n\nReplace 'Your XPathNodeSet here' with the actual XPathNodeSet obtained from your XPath query.\n\nThis example assumes that the nodes in the XPathNodeSet have a `text` property. Adjust the code accordingly based on the structure of the nodes in your XPathNodeSet.\n\nMake sure that you have the necessary XPath and XML processing libraries loaded in your Pharo environment for working with XPathNodeSet."
      },
      "date": 1707192357686
    },
    {
      "type": "edit",
      "id": "fae28bc01574d8a3",
      "item": {
        "type": "markdown",
        "id": "fae28bc01574d8a3",
        "text": "In Pharo Smalltalk, you can use the XPathNodeSet's `asSortedCollection` method to obtain a sorted collection of the nodes in the XPathNodeSet. After that, you can iterate through the sorted collection and tabulate the results. Here's an example:\n\n```smalltalk\n| xpathResult sortedNodes counts |\n\"Assuming you have an XPathNodeSet named 'xpathResult'\"\nxpathResult := 'Your XPathNodeSet here'.\n\n\"Convert XPathNodeSet to a sorted collection\"\nsortedNodes := xpathResult asSortedCollection: [ :a :b | a text < b text ].\n\n\"Count occurrences of each node\"\ncounts := Dictionary new.\nsortedNodes do: [ :node |\n    | text count |\n    text := node text.\n    count := counts at: text ifAbsent: [ 0 ].\n    counts at: text put: count + 1.\n].\n\n\"Display the tabulated results\"\ncounts keysAndValuesDo: [ :text :count |\n    (text displayNl, count printString) displayNl.\n].\n```\n\nReplace 'Your XPathNodeSet here' with the actual XPathNodeSet obtained from your XPath query.\n\nThis example assumes that the nodes in the XPathNodeSet have a `text` property. Adjust the code accordingly based on the structure of the nodes in your XPathNodeSet.\n\nMake sure that you have the necessary XPath and XML processing libraries loaded in your Pharo environment for working with XPathNodeSet. (ChatGPT 3.5)"
      },
      "date": 1707192373536
    },
    {
      "item": {
        "type": "factory",
        "id": "6c2d484ea5393381"
      },
      "id": "6c2d484ea5393381",
      "type": "add",
      "after": "fae28bc01574d8a3",
      "date": 1707192375861
    },
    {
      "type": "edit",
      "id": "6c2d484ea5393381",
      "item": {
        "type": "pagefold",
        "id": "6c2d484ea5393381",
        "text": "~"
      },
      "date": 1707192384496
    },
    {
      "item": {
        "type": "factory",
        "id": "8be489e688f02d06"
      },
      "id": "8be489e688f02d06",
      "type": "add",
      "after": "6c2d484ea5393381",
      "date": 1707192386448
    },
    {
      "type": "edit",
      "id": "8be489e688f02d06",
      "item": {
        "type": "pagefold",
        "id": "8be489e688f02d06",
        "text": "~"
      },
      "date": 1707192389076
    },
    {
      "id": "8be489e688f02d06",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381"
      ],
      "date": 1707192429628
    },
    {
      "item": {
        "type": "factory",
        "id": "40a713c6389b9797"
      },
      "id": "40a713c6389b9797",
      "type": "add",
      "after": "6c2d484ea5393381",
      "date": 1707193020516
    },
    {
      "type": "edit",
      "id": "40a713c6389b9797",
      "item": {
        "type": "image",
        "id": "40a713c6389b9797",
        "text": "self asSorted",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/ce09ed1dda11953221644fbd026c039c.jpg"
      },
      "date": 1707193055112
    },
    {
      "type": "edit",
      "id": "fae28bc01574d8a3",
      "item": {
        "type": "markdown",
        "id": "fae28bc01574d8a3",
        "text": "In Pharo Smalltalk, you can use the XPathNodeSet's `asSortedCollection` method to obtain a sorted collection of the nodes in the XPathNodeSet. After that, you can iterate through the sorted collection and tabulate the results. Here's an example: […](ChatGPT 3.5)"
      },
      "date": 1707193090436
    },
    {
      "type": "edit",
      "id": "fae28bc01574d8a3",
      "item": {
        "type": "markdown",
        "id": "fae28bc01574d8a3",
        "text": "In Pharo Smalltalk, you can use the XPathNodeSet's `asSortedCollection` method to obtain a sorted collection of the nodes in the XPathNodeSet. After that, you can iterate through the sorted collection and tabulate the results. Here's an example: […] (ChatGPT 3.5)"
      },
      "date": 1707193096442
    },
    {
      "item": {
        "type": "factory",
        "id": "fd08f7dab0cc9383"
      },
      "id": "fd08f7dab0cc9383",
      "type": "add",
      "after": "40a713c6389b9797",
      "date": 1707193319048
    },
    {
      "type": "edit",
      "id": "fd08f7dab0cc9383",
      "item": {
        "type": "paragraph",
        "id": "fd08f7dab0cc9383",
        "text": "I think the XPath statement needs to be customized to return all the red highlighted child items."
      },
      "date": 1707193320891
    },
    {
      "item": {
        "type": "factory",
        "id": "41a0f27fe380c66c"
      },
      "id": "41a0f27fe380c66c",
      "type": "add",
      "after": "fd08f7dab0cc9383",
      "date": 1707194047800
    },
    {
      "type": "edit",
      "id": "41a0f27fe380c66c",
      "item": {
        "type": "code",
        "id": "41a0f27fe380c66c",
        "text": "self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]"
      },
      "date": 1707194052025
    },
    {
      "type": "edit",
      "id": "fd08f7dab0cc9383",
      "item": {
        "type": "paragraph",
        "id": "fd08f7dab0cc9383",
        "text": "I think the XPath statement needs to be customized to return all the red highlighted text."
      },
      "date": 1707194085263
    },
    {
      "item": {
        "type": "factory",
        "id": "bc175d349389c9f4"
      },
      "id": "bc175d349389c9f4",
      "type": "add",
      "after": "41a0f27fe380c66c",
      "date": 1707194102545
    },
    {
      "type": "edit",
      "id": "bc175d349389c9f4",
      "item": {
        "type": "markdown",
        "id": "bc175d349389c9f4",
        "text": "This XPath expression selects the first text node that is a following sibling of the <font> element with the specified color."
      },
      "date": 1707194107653
    },
    {
      "item": {
        "type": "factory",
        "id": "f08834d9a12528df"
      },
      "id": "f08834d9a12528df",
      "type": "add",
      "after": "bc175d349389c9f4",
      "date": 1707194200522
    },
    {
      "type": "edit",
      "id": "f08834d9a12528df",
      "item": {
        "type": "image",
        "id": "f08834d9a12528df",
        "text": "self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]",
        "size": "wide",
        "width": 419,
        "height": 256,
        "url": "/assets/plugins/image/0d58f0722043a52c24ec0497f740595d.jpg"
      },
      "date": 1707194214383
    },
    {
      "item": {
        "type": "factory",
        "id": "eaec5764fa817db8"
      },
      "id": "eaec5764fa817db8",
      "type": "add",
      "after": "f08834d9a12528df",
      "date": 1707194376870
    },
    {
      "type": "edit",
      "id": "eaec5764fa817db8",
      "item": {
        "type": "code",
        "id": "eaec5764fa817db8",
        "text": "self document\n\txPath: 'self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]'"
      },
      "date": 1707194378767
    },
    {
      "item": {
        "type": "factory",
        "id": "8680a137bbc310dd"
      },
      "id": "8680a137bbc310dd",
      "type": "add",
      "after": "eaec5764fa817db8",
      "date": 1707194636157
    },
    {
      "type": "edit",
      "id": "8680a137bbc310dd",
      "item": {
        "type": "image",
        "id": "8680a137bbc310dd",
        "text": "Uploaded image",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/7d725273d31628f3571c6a5509bed8b2.jpg"
      },
      "date": 1707194661077
    },
    {
      "item": {
        "type": "factory",
        "id": "9ced0ddb24390652"
      },
      "id": "9ced0ddb24390652",
      "type": "add",
      "after": "8680a137bbc310dd",
      "date": 1707194686410
    },
    {
      "type": "edit",
      "id": "9ced0ddb24390652",
      "item": {
        "type": "code",
        "id": "9ced0ddb24390652",
        "text": "aXMLDocument document\n\txPath: 'self::node()//font[@color=\"#00b050\"]/following-sibling::text()[1]'"
      },
      "date": 1707194688524
    },
    {
      "item": {
        "type": "factory",
        "id": "83afcc59e862aa8b"
      },
      "id": "83afcc59e862aa8b",
      "type": "add",
      "after": "9ced0ddb24390652",
      "date": 1707194694036
    },
    {
      "type": "edit",
      "id": "83afcc59e862aa8b",
      "item": {
        "type": "image",
        "id": "83afcc59e862aa8b",
        "text": "Uploaded image",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/87f641b855c77e56904432e60679e6ac.jpg"
      },
      "date": 1707194705944
    },
    {
      "type": "edit",
      "id": "83afcc59e862aa8b",
      "item": {
        "type": "image",
        "id": "83afcc59e862aa8b",
        "text": "XPathNodeSet",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/87f641b855c77e56904432e60679e6ac.jpg"
      },
      "date": 1707194714863
    },
    {
      "type": "edit",
      "id": "8680a137bbc310dd",
      "item": {
        "type": "image",
        "id": "8680a137bbc310dd",
        "text": "aXMLDocument document\n\txPath: …",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/7d725273d31628f3571c6a5509bed8b2.jpg"
      },
      "date": 1707194736972
    },
    {
      "type": "add",
      "id": "6828e816942b0216",
      "item": {
        "type": "markdown",
        "id": "6828e816942b0216",
        "text": "**Note**: We use "
      },
      "after": "fae28bc01574d8a3",
      "date": 1707195005992
    },
    {
      "type": "edit",
      "id": "6828e816942b0216",
      "item": {
        "type": "markdown",
        "id": "6828e816942b0216",
        "text": "**Note**: We use the XPathNodeSet's `asSorted` method instead."
      },
      "date": 1707195027869
    },
    {
      "id": "6828e816942b0216",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b"
      ],
      "date": 1707195030877
    },
    {
      "type": "add",
      "id": "9bd5f97c28554390",
      "item": {
        "type": "paragraph",
        "id": "9bd5f97c28554390",
        "text": "My first attempt might notice that the red text is full of \"s\" numbers. So I might remove them first:\ncat ... | perl -pe 's/S\\d+(\\.\\d+)/#/' | sort | uniq -s | sort -n"
      },
      "after": "27ca0fe83de5f3f4",
      "date": 1707195219322
    },
    {
      "id": "9bd5f97c28554390",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b"
      ],
      "date": 1707195221537
    },
    {
      "type": "edit",
      "id": "9bd5f97c28554390",
      "item": {
        "type": "paragraph",
        "id": "9bd5f97c28554390",
        "text": "His first attempt might notice that the red text is full of \"s\" numbers. So I might remove them first:\ncat ... | perl -pe 's/S\\d+(\\.\\d+)/#/' | sort | uniq -s | sort -n"
      },
      "date": 1707195226902
    },
    {
      "type": "edit",
      "id": "9bd5f97c28554390",
      "item": {
        "type": "paragraph",
        "id": "9bd5f97c28554390",
        "text": "His first attempt might notice that the red text is full of \"s\" numbers. So I might remove them first:"
      },
      "date": 1707195317449
    },
    {
      "type": "add",
      "id": "d89c03be78d17c42",
      "item": {
        "type": "paragraph",
        "id": "d89c03be78d17c42",
        "text": "cat ... | perl -pe 's/S\\d+(\\.\\d+)/#/' | sort | uniq -s | sort -n"
      },
      "after": "9bd5f97c28554390",
      "date": 1707195321066
    },
    {
      "id": "d89c03be78d17c42",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1707195323801
    },
    {
      "id": "30416ff20e4f3bd7",
      "type": "add",
      "item": {
        "type": "code",
        "id": "30416ff20e4f3bd7",
        "text": "cat ... | perl -pe 's/S\\d+(\\.\\d+)/#/' | sort | uniq -s | sort -n"
      },
      "after": "9bd5f97c28554390",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707195335120
    },
    {
      "id": "a0ffd81dec98bc48",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a0ffd81dec98bc48",
        "text": "What \"s\" numbers? Do you have an example?"
      },
      "after": "30416ff20e4f3bd7",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707195489139
    },
    {
      "type": "edit",
      "id": "a0ffd81dec98bc48",
      "item": {
        "type": "paragraph",
        "id": "a0ffd81dec98bc48",
        "text": "What \"s\" numbers? Do you have an example? @Ward"
      },
      "date": 1707195495440
    },
    {
      "type": "edit",
      "id": "fd08f7dab0cc9383",
      "item": {
        "type": "paragraph",
        "id": "fd08f7dab0cc9383",
        "text": "I think the XPath statement needs to be adjusted to return all the text highlighted in red."
      },
      "date": 1707195533835
    },
    {
      "item": {
        "type": "factory",
        "id": "f30591538f5fca8d"
      },
      "id": "f30591538f5fca8d",
      "type": "add",
      "after": "83afcc59e862aa8b",
      "date": 1707201102056
    },
    {
      "type": "edit",
      "id": "f30591538f5fca8d",
      "item": {
        "type": "image",
        "id": "f30591538f5fca8d",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 181,
        "url": "/assets/plugins/image/5190ff820c878dcb4e648a97c41289c7.jpg"
      },
      "date": 1707201125811
    },
    {
      "type": "edit",
      "id": "f30591538f5fca8d",
      "item": {
        "type": "image",
        "id": "f30591538f5fca8d",
        "text": "Relationship between html and red marked text",
        "size": "wide",
        "width": 430,
        "height": 181,
        "url": "/assets/plugins/image/5190ff820c878dcb4e648a97c41289c7.jpg"
      },
      "date": 1707201314952
    },
    {
      "item": {
        "type": "factory",
        "id": "e86c8ebbfd8d7448"
      },
      "id": "e86c8ebbfd8d7448",
      "type": "add",
      "after": "f30591538f5fca8d",
      "date": 1707201373272
    },
    {
      "item": {
        "type": "factory",
        "id": "db511bbee9f169a8"
      },
      "id": "db511bbee9f169a8",
      "type": "add",
      "after": "e86c8ebbfd8d7448",
      "date": 1707201375818
    },
    {
      "type": "edit",
      "id": "db511bbee9f169a8",
      "item": {
        "type": "html",
        "id": "db511bbee9f169a8",
        "text": "<p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p>"
      },
      "date": 1707201378679
    },
    {
      "type": "edit",
      "id": "e86c8ebbfd8d7448",
      "item": {
        "type": "paragraph",
        "id": "e86c8ebbfd8d7448",
        "text": "We could try to reconstruct the following <p> with the help of an AST."
      },
      "date": 1707201457328
    },
    {
      "item": {
        "type": "factory",
        "id": "e747912e8d7ae820"
      },
      "id": "e747912e8d7ae820",
      "type": "add",
      "after": "db511bbee9f169a8",
      "date": 1707201467623
    },
    {
      "type": "remove",
      "id": "e747912e8d7ae820",
      "date": 1707201473851
    },
    {
      "item": {
        "type": "factory",
        "id": "990243c76fc3bef6"
      },
      "id": "990243c76fc3bef6",
      "type": "add",
      "after": "db511bbee9f169a8",
      "date": 1707201479798
    },
    {
      "type": "edit",
      "id": "990243c76fc3bef6",
      "item": {
        "type": "code",
        "id": "990243c76fc3bef6",
        "text": "<p>1. <font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> can be <font color=\"#808000\"><b class=\"c0a99eed-0607-489f-b01f-b511f9cdd5bf\">deficient</b></font> or <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color=\"#00b050\"><b class=\"cda74285-b9c7-4cf9-8e0b-b86a1dabf4d3\">Actionable System Understanding</b></font> of <font color=\"#00b050\"><b class=\"b2108fc6-0722-4556-8799-78737cb0bc74\">Community Activist Group</b></font> is currently at state <font color=\"#808000\"><b class=\"bcd79744-15ca-46e1-aab4-0f694e5e1338\">sufficient</b></font><b>.</b>&nbsp;&nbsp;&nbsp;&nbsp;</p>"
      },
      "date": 1707201481638
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707201625930
    },
    {
      "item": {
        "type": "factory",
        "id": "ac6c34e7a75e8da3"
      },
      "id": "ac6c34e7a75e8da3",
      "type": "add",
      "after": "990243c76fc3bef6",
      "date": 1707202148193
    },
    {
      "type": "edit",
      "id": "ac6c34e7a75e8da3",
      "item": {
        "type": "paragraph",
        "id": "ac6c34e7a75e8da3",
        "text": "In addition to the red-marked text, we should also consider the dark yellow [olive tone]."
      },
      "date": 1707202149828
    },
    {
      "type": "edit",
      "id": "ac6c34e7a75e8da3",
      "item": {
        "type": "paragraph",
        "id": "ac6c34e7a75e8da3",
        "text": "In addition to the red-marked text, we should also consider the dark yellow [olive tone]. (Hex: #808000)"
      },
      "date": 1707202176898
    },
    {
      "item": {
        "type": "factory",
        "id": "61f22b10b1632f07"
      },
      "id": "61f22b10b1632f07",
      "type": "add",
      "after": "ac6c34e7a75e8da3",
      "date": 1707202638846
    },
    {
      "type": "edit",
      "id": "61f22b10b1632f07",
      "item": {
        "type": "paragraph",
        "id": "61f22b10b1632f07",
        "text": "TODO: \"Define a method to recursively build the AST\""
      },
      "date": 1707202642336
    },
    {
      "item": {
        "type": "factory",
        "id": "2e5acc5954a83c9e"
      },
      "id": "2e5acc5954a83c9e",
      "type": "add",
      "after": "61f22b10b1632f07",
      "date": 1707203237497
    },
    {
      "type": "edit",
      "id": "2e5acc5954a83c9e",
      "item": {
        "type": "image",
        "id": "2e5acc5954a83c9e",
        "text": "Object>>#withDeep:do:",
        "size": "wide",
        "width": 430,
        "height": 261,
        "url": "/assets/plugins/image/8b369b368bf25d1c70668f2386c71b42.jpg"
      },
      "date": 1707203253197
    },
    {
      "item": {
        "type": "factory",
        "id": "ce1d662b4dbe2d78"
      },
      "id": "ce1d662b4dbe2d78",
      "type": "add",
      "after": "2e5acc5954a83c9e",
      "date": 1707209034564
    },
    {
      "type": "edit",
      "id": "ce1d662b4dbe2d78",
      "item": {
        "type": "code",
        "id": "ce1d662b4dbe2d78",
        "text": "Object>>#withDeep:collect:"
      },
      "date": 1707209037993
    },
    {
      "item": {
        "type": "factory",
        "id": "9c139b36c728d30a"
      },
      "id": "9c139b36c728d30a",
      "type": "add",
      "after": "ce1d662b4dbe2d78",
      "date": 1707209064094
    },
    {
      "type": "edit",
      "id": "9c139b36c728d30a",
      "item": {
        "type": "code",
        "id": "9c139b36c728d30a",
        "text": "withDeep: aBlock1 collect: aBlock2\n\t^ self \n\t\twithDeep: aBlock1 \n\t\tcollect: aBlock2 \n\t\tas: OrderedCollection "
      },
      "date": 1707209066583
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707209900959
    },
    {
      "item": {
        "type": "factory",
        "id": "2e065aeaec11abe8"
      },
      "id": "2e065aeaec11abe8",
      "type": "add",
      "after": "9c139b36c728d30a",
      "date": 1707211724611
    },
    {
      "type": "edit",
      "id": "2e065aeaec11abe8",
      "item": {
        "type": "pagefold",
        "id": "2e065aeaec11abe8",
        "text": "~"
      },
      "date": 1707211729105
    },
    {
      "item": {
        "type": "factory",
        "id": "67d2d6fade3f3703"
      },
      "id": "67d2d6fade3f3703",
      "type": "add",
      "after": "2e065aeaec11abe8",
      "date": 1707211730855
    },
    {
      "type": "edit",
      "id": "67d2d6fade3f3703",
      "item": {
        "type": "image",
        "id": "67d2d6fade3f3703",
        "text": "Snippet>>#gtAssetsFor:",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/856959bcfe926ae9a9a1a5f9dc7d8f81.jpg"
      },
      "date": 1707211747481
    },
    {
      "type": "edit",
      "id": "67d2d6fade3f3703",
      "item": {
        "type": "image",
        "id": "67d2d6fade3f3703",
        "text": "[[Snippet]]>>#gtAssetsFor:",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/856959bcfe926ae9a9a1a5f9dc7d8f81.jpg"
      },
      "date": 1707211758488
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707211834352
    },
    {
      "item": {
        "type": "factory",
        "id": "1dca83ebf6065995"
      },
      "id": "1dca83ebf6065995",
      "type": "add",
      "after": "67d2d6fade3f3703",
      "date": 1707212240353
    },
    {
      "type": "edit",
      "id": "1dca83ebf6065995",
      "item": {
        "type": "image",
        "id": "1dca83ebf6065995",
        "text": "(Wiki assets , '/' , self text) asFileReference",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/f1adf1d8e83b44891e17c2b20b71c835.jpg"
      },
      "date": 1707212251804
    },
    {
      "item": {
        "type": "factory",
        "id": "1ac213a04ffc2979"
      },
      "id": "1ac213a04ffc2979",
      "type": "add",
      "after": "1dca83ebf6065995",
      "date": 1707212375374
    },
    {
      "type": "edit",
      "id": "1ac213a04ffc2979",
      "item": {
        "type": "image",
        "id": "1ac213a04ffc2979",
        "text": "aXMLDocument",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/c7a32b4d63d47a941ad44655b0c6d52d.jpg"
      },
      "date": 1707212403594
    },
    {
      "item": {
        "type": "factory",
        "id": "366542ea56adffd2"
      },
      "id": "366542ea56adffd2",
      "type": "add",
      "after": "1ac213a04ffc2979",
      "date": 1707213559109
    },
    {
      "type": "edit",
      "id": "366542ea56adffd2",
      "item": {
        "type": "image",
        "id": "366542ea56adffd2",
        "text": "self::node()//p//font[@color=\"#808000\"]/b",
        "size": "wide",
        "width": 419,
        "height": 255
      },
      "date": 1707213626164
    },
    {
      "type": "remove",
      "id": "366542ea56adffd2",
      "date": 1707213711132
    },
    {
      "item": {
        "type": "factory",
        "id": "05bad9fb9ec1c680"
      },
      "id": "05bad9fb9ec1c680",
      "type": "add",
      "after": "1ac213a04ffc2979",
      "date": 1707213712787
    },
    {
      "type": "edit",
      "id": "05bad9fb9ec1c680",
      "item": {
        "type": "paragraph",
        "id": "05bad9fb9ec1c680",
        "text": "XPath:"
      },
      "date": 1707213719569
    },
    {
      "type": "edit",
      "id": "47850ee2b24c1163",
      "item": {
        "type": "code",
        "id": "47850ee2b24c1163",
        "text": "self::node()//p//font[@color=\"#808000\"]/b"
      },
      "date": 1707213725616
    },
    {
      "item": {
        "type": "factory",
        "id": "3dfc5515d06c28b4"
      },
      "id": "3dfc5515d06c28b4",
      "type": "add",
      "after": "47850ee2b24c1163",
      "date": 1707213843479
    },
    {
      "type": "edit",
      "id": "3dfc5515d06c28b4",
      "item": {
        "type": "image",
        "id": "3dfc5515d06c28b4",
        "text": "deficient",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/4dca949af74bb755bbd1ba1956d03e38.jpg"
      },
      "date": 1707213859042
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707213951793
    },
    {
      "id": "ae420f4ba5b61fb6",
      "type": "add",
      "item": {
        "type": "image",
        "id": "ae420f4ba5b61fb6",
        "text": "deficient",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/4dca949af74bb755bbd1ba1956d03e38.jpg",
        "alias": "3dfc5515d06c28b4"
      },
      "after": "05bad9fb9ec1c680",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707213964559
    },
    {
      "type": "remove",
      "id": "3dfc5515d06c28b4",
      "date": 1707213970009
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707214229337
    },
    {
      "item": {
        "type": "factory",
        "id": "e9659e38de72a948"
      },
      "id": "e9659e38de72a948",
      "type": "add",
      "after": "ae420f4ba5b61fb6",
      "date": 1707214234668
    },
    {
      "type": "edit",
      "id": "e9659e38de72a948",
      "item": {
        "type": "code",
        "id": "e9659e38de72a948",
        "text": "self::node()//p//font[@color=\"#808000\"]/b"
      },
      "date": 1707214246696
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707214335672
    },
    {
      "id": "e9659e38de72a948",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "025bcc14b1074d6b",
        "8fc8e92e439d0aff",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "30416ff20e4f3bd7",
        "a0ffd81dec98bc48",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b",
        "f30591538f5fca8d",
        "e86c8ebbfd8d7448",
        "db511bbee9f169a8",
        "990243c76fc3bef6",
        "ac6c34e7a75e8da3",
        "61f22b10b1632f07",
        "2e5acc5954a83c9e",
        "ce1d662b4dbe2d78",
        "9c139b36c728d30a",
        "2e065aeaec11abe8",
        "67d2d6fade3f3703",
        "1dca83ebf6065995",
        "1ac213a04ffc2979",
        "05bad9fb9ec1c680",
        "e9659e38de72a948",
        "ae420f4ba5b61fb6"
      ],
      "date": 1707214352593
    },
    {
      "type": "edit",
      "id": "8fc8e92e439d0aff",
      "item": {
        "type": "paragraph",
        "id": "8fc8e92e439d0aff",
        "text": "The csv doesn't show what diagram the row is from."
      },
      "date": 1707214397267
    },
    {
      "type": "add",
      "id": "a7b282cd05525ddd",
      "item": {
        "type": "paragraph",
        "id": "a7b282cd05525ddd",
        "text": "That info would disambiguate the duplicates.\nWard thinks it was my suggestion to parse the text from the pdf. [⇒ [[PDFtalk]]]"
      },
      "after": "8fc8e92e439d0aff",
      "date": 1707214398730
    },
    {
      "id": "8fc8e92e439d0aff",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "8fc8e92e439d0aff",
        "025bcc14b1074d6b",
        "a7b282cd05525ddd",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "30416ff20e4f3bd7",
        "a0ffd81dec98bc48",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b",
        "f30591538f5fca8d",
        "e86c8ebbfd8d7448",
        "db511bbee9f169a8",
        "990243c76fc3bef6",
        "ac6c34e7a75e8da3",
        "61f22b10b1632f07",
        "2e5acc5954a83c9e",
        "ce1d662b4dbe2d78",
        "9c139b36c728d30a",
        "2e065aeaec11abe8",
        "67d2d6fade3f3703",
        "1dca83ebf6065995",
        "1ac213a04ffc2979",
        "05bad9fb9ec1c680",
        "e9659e38de72a948",
        "ae420f4ba5b61fb6"
      ],
      "date": 1707214404897
    },
    {
      "item": {
        "type": "factory",
        "id": "a4ffe7b1eae89d7f"
      },
      "id": "a4ffe7b1eae89d7f",
      "type": "add",
      "after": "ae420f4ba5b61fb6",
      "date": 1707219519178
    },
    {
      "type": "edit",
      "id": "a4ffe7b1eae89d7f",
      "item": {
        "type": "video",
        "id": "a4ffe7b1eae89d7f",
        "text": "HTML5 mp4 http://localhost:3000/assets/pages/exports-from-opm/exports-from-opm.mov"
      },
      "date": 1707219531112
    },
    {
      "type": "edit",
      "id": "a4ffe7b1eae89d7f",
      "item": {
        "type": "video",
        "id": "a4ffe7b1eae89d7f",
        "text": "HTML5 mp4 http://localhost:3000/assets/pages/exports-from-opm/exports-from-opm.mov\nNarrative picture"
      },
      "date": 1707219629794
    },
    {
      "type": "edit",
      "id": "a4ffe7b1eae89d7f",
      "item": {
        "type": "video",
        "id": "a4ffe7b1eae89d7f",
        "text": "HTML5 mp4 http://localhost:3000/assets/pages/exports-from-opm/exports-from-opm.mov\nNarrative video"
      },
      "date": 1707219635805
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707219669556
    },
    {
      "type": "edit",
      "id": "a4ffe7b1eae89d7f",
      "item": {
        "type": "video",
        "id": "a4ffe7b1eae89d7f",
        "text": "HTML5 mp4 https://wiki.ralfbarkow.ch/assets/pages/exports-from-opm/exports-from-opm.mov\nNarrative video"
      },
      "date": 1707220229739
    },
    {
      "item": {
        "type": "factory",
        "id": "2e129bb78c741024"
      },
      "id": "2e129bb78c741024",
      "type": "add",
      "after": "a4ffe7b1eae89d7f",
      "date": 1707221596272
    },
    {
      "type": "edit",
      "id": "2e129bb78c741024",
      "item": {
        "type": "image",
        "id": "2e129bb78c741024",
        "text": "object, process, state",
        "size": "wide",
        "width": 419,
        "height": 256,
        "url": "/assets/plugins/image/86341aa8393d0311317dfe2d82d04131.jpg"
      },
      "date": 1707221622028
    },
    {
      "item": {
        "type": "factory",
        "id": "b3c8120158e82b48"
      },
      "id": "b3c8120158e82b48",
      "type": "add",
      "after": "2e129bb78c741024",
      "date": 1707222010125
    },
    {
      "item": {
        "type": "factory",
        "id": "72a5ede87a86d649"
      },
      "id": "72a5ede87a86d649",
      "type": "add",
      "after": "b3c8120158e82b48",
      "date": 1707222022220
    },
    {
      "type": "edit",
      "id": "72a5ede87a86d649",
      "item": {
        "type": "image",
        "id": "72a5ede87a86d649",
        "text": "style",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/36d79ef19cdbe7fee816c56e13ae8fda.jpg"
      },
      "date": 1707222064728
    },
    {
      "type": "edit",
      "id": "b3c8120158e82b48",
      "item": {
        "type": "paragraph",
        "id": "b3c8120158e82b48",
        "text": "After creating the video above, I realized the meaning of the colors."
      },
      "date": 1707222127258
    },
    {
      "item": {
        "type": "factory",
        "id": "6ae5f53e6118b269"
      },
      "id": "6ae5f53e6118b269",
      "type": "add",
      "after": "72a5ede87a86d649",
      "date": 1707222313411
    },
    {
      "type": "edit",
      "id": "6ae5f53e6118b269",
      "item": {
        "type": "paragraph",
        "id": "6ae5f53e6118b269",
        "text": "Our red marking indicates objects:"
      },
      "date": 1707222315606
    },
    {
      "item": {
        "type": "factory",
        "id": "35015eab2714c3fa"
      },
      "id": "35015eab2714c3fa",
      "type": "add",
      "after": "6ae5f53e6118b269",
      "date": 1707222324087
    },
    {
      "type": "edit",
      "id": "35015eab2714c3fa",
      "item": {
        "type": "code",
        "id": "35015eab2714c3fa",
        "text": "object := 'self::node()//p//font[@color=\"#00b050\"]'"
      },
      "date": 1707222326803
    },
    {
      "item": {
        "type": "factory",
        "id": "79fd8574e1d84692"
      },
      "id": "79fd8574e1d84692",
      "type": "add",
      "after": "35015eab2714c3fa",
      "date": 1707222370839
    },
    {
      "type": "edit",
      "id": "79fd8574e1d84692",
      "item": {
        "type": "code",
        "id": "79fd8574e1d84692",
        "text": "process := 'self::node()//p//font[@color=\"#0070c0\"]'"
      },
      "date": 1707222372983
    },
    {
      "item": {
        "type": "factory",
        "id": "bc2b913b3d0a944a"
      },
      "id": "bc2b913b3d0a944a",
      "type": "add",
      "after": "79fd8574e1d84692",
      "date": 1707222403898
    },
    {
      "type": "edit",
      "id": "bc2b913b3d0a944a",
      "item": {
        "type": "code",
        "id": "bc2b913b3d0a944a",
        "text": "state := 'self::node()//p//font[@color=\"#808000\"]'"
      },
      "date": 1707222406522
    },
    {
      "item": {
        "type": "factory",
        "id": "30638f8446487149"
      },
      "id": "30638f8446487149",
      "type": "add",
      "after": "bc2b913b3d0a944a",
      "date": 1707224181207
    },
    {
      "type": "edit",
      "id": "30638f8446487149",
      "item": {
        "type": "image",
        "id": "30638f8446487149",
        "text": "UUID",
        "size": "wide",
        "width": 419,
        "height": 453,
        "url": "/assets/plugins/image/662807e83d5b9269d30fb387be944924.jpg"
      },
      "date": 1707224194473
    },
    {
      "type": "remove",
      "id": "2e129bb78c741024",
      "date": 1707224621845
    },
    {
      "type": "edit",
      "id": "6ae5f53e6118b269",
      "item": {
        "type": "paragraph",
        "id": "6ae5f53e6118b269",
        "text": "Our \"red\" marking is dark green and indicates objects:"
      },
      "date": 1707224747094
    },
    {
      "type": "edit",
      "id": "6ae5f53e6118b269",
      "item": {
        "type": "paragraph",
        "id": "6ae5f53e6118b269",
        "text": "Our \"red\" marking is Pigment Green and indicates objects:"
      },
      "date": 1707224804725
    },
    {
      "type": "add",
      "id": "333264ad09718494",
      "item": {
        "type": "paragraph",
        "id": "333264ad09718494",
        "text": "Navy Blue 'is' process:"
      },
      "after": "6ae5f53e6118b269",
      "date": 1707224874870
    },
    {
      "id": "333264ad09718494",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "8fc8e92e439d0aff",
        "025bcc14b1074d6b",
        "a7b282cd05525ddd",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "30416ff20e4f3bd7",
        "a0ffd81dec98bc48",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b",
        "f30591538f5fca8d",
        "e86c8ebbfd8d7448",
        "db511bbee9f169a8",
        "990243c76fc3bef6",
        "ac6c34e7a75e8da3",
        "61f22b10b1632f07",
        "2e5acc5954a83c9e",
        "ce1d662b4dbe2d78",
        "9c139b36c728d30a",
        "2e065aeaec11abe8",
        "67d2d6fade3f3703",
        "1dca83ebf6065995",
        "1ac213a04ffc2979",
        "05bad9fb9ec1c680",
        "e9659e38de72a948",
        "ae420f4ba5b61fb6",
        "a4ffe7b1eae89d7f",
        "b3c8120158e82b48",
        "72a5ede87a86d649",
        "6ae5f53e6118b269",
        "35015eab2714c3fa",
        "333264ad09718494",
        "79fd8574e1d84692",
        "bc2b913b3d0a944a",
        "30638f8446487149"
      ],
      "date": 1707224876699
    },
    {
      "type": "add",
      "id": "ae1695d0f254e7f0",
      "item": {
        "type": "paragraph",
        "id": "ae1695d0f254e7f0",
        "text": "Olive 'is' state:"
      },
      "after": "333264ad09718494",
      "date": 1707224927649
    },
    {
      "id": "ae1695d0f254e7f0",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "8fc8e92e439d0aff",
        "025bcc14b1074d6b",
        "a7b282cd05525ddd",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "30416ff20e4f3bd7",
        "a0ffd81dec98bc48",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b",
        "f30591538f5fca8d",
        "e86c8ebbfd8d7448",
        "db511bbee9f169a8",
        "990243c76fc3bef6",
        "ac6c34e7a75e8da3",
        "61f22b10b1632f07",
        "2e5acc5954a83c9e",
        "ce1d662b4dbe2d78",
        "9c139b36c728d30a",
        "2e065aeaec11abe8",
        "67d2d6fade3f3703",
        "1dca83ebf6065995",
        "1ac213a04ffc2979",
        "05bad9fb9ec1c680",
        "e9659e38de72a948",
        "ae420f4ba5b61fb6",
        "a4ffe7b1eae89d7f",
        "b3c8120158e82b48",
        "72a5ede87a86d649",
        "6ae5f53e6118b269",
        "35015eab2714c3fa",
        "333264ad09718494",
        "79fd8574e1d84692",
        "ae1695d0f254e7f0",
        "bc2b913b3d0a944a",
        "30638f8446487149"
      ],
      "date": 1707224929815
    },
    {
      "type": "add",
      "id": "6752cabf4a3c189c",
      "item": {
        "type": "paragraph",
        "id": "6752cabf4a3c189c",
        "text": "What we originally observed as marked in red appear to be prepositions."
      },
      "after": "6ae5f53e6118b269",
      "date": 1707225028066
    },
    {
      "id": "6752cabf4a3c189c",
      "type": "move",
      "order": [
        "11efee06a0c30d98",
        "63193d4401db6dec",
        "8fc8e92e439d0aff",
        "025bcc14b1074d6b",
        "a7b282cd05525ddd",
        "3c715f696c2907e7",
        "e7f2dec55c4f315f",
        "a2b7ceed2dc13f69",
        "df1b9fec6b4b85bf",
        "1ddf1908d2555527",
        "5c65d483827a2d66",
        "be7943b81cc919f6",
        "4dfbc3d8e7c0d206",
        "f2887c6cdfbfda79",
        "a82479c14b215674",
        "508ea73252d174be",
        "cce893e042534f85",
        "78c0e9ed35e5c385",
        "c6b53c0c273abdcd",
        "5971fc96bc377e93",
        "70616db2d39113ca",
        "6b80be4650b27d13",
        "3366149d36ecccd8",
        "de1bd65051f6a7f7",
        "815b948d41bf4c4c",
        "d8252d420b05d55a",
        "beedb8c565e2be5a",
        "691a2112f713389a",
        "e138735ea5eece63",
        "5e7eb22ccbbce6bd",
        "27ca0fe83de5f3f4",
        "ab1edb062bd3521f",
        "9bd5f97c28554390",
        "30416ff20e4f3bd7",
        "a0ffd81dec98bc48",
        "8be489e688f02d06",
        "85d7d2db60cbbd62",
        "038b80f64534e27c",
        "c19841e6684ae358",
        "6335e8fb52bdaeff",
        "ece8632fa1fb1739",
        "fae28bc01574d8a3",
        "6c2d484ea5393381",
        "6828e816942b0216",
        "40a713c6389b9797",
        "fd08f7dab0cc9383",
        "41a0f27fe380c66c",
        "bc175d349389c9f4",
        "f08834d9a12528df",
        "eaec5764fa817db8",
        "8680a137bbc310dd",
        "9ced0ddb24390652",
        "83afcc59e862aa8b",
        "f30591538f5fca8d",
        "e86c8ebbfd8d7448",
        "db511bbee9f169a8",
        "990243c76fc3bef6",
        "ac6c34e7a75e8da3",
        "61f22b10b1632f07",
        "2e5acc5954a83c9e",
        "ce1d662b4dbe2d78",
        "9c139b36c728d30a",
        "2e065aeaec11abe8",
        "67d2d6fade3f3703",
        "1dca83ebf6065995",
        "1ac213a04ffc2979",
        "05bad9fb9ec1c680",
        "e9659e38de72a948",
        "ae420f4ba5b61fb6",
        "a4ffe7b1eae89d7f",
        "b3c8120158e82b48",
        "72a5ede87a86d649",
        "6ae5f53e6118b269",
        "35015eab2714c3fa",
        "6752cabf4a3c189c",
        "333264ad09718494",
        "79fd8574e1d84692",
        "ae1695d0f254e7f0",
        "bc2b913b3d0a944a",
        "30638f8446487149"
      ],
      "date": 1707225030372
    },
    {
      "type": "edit",
      "id": "6752cabf4a3c189c",
      "item": {
        "type": "paragraph",
        "id": "6752cabf4a3c189c",
        "text": "What we originally observed as marked in red appear to be prepositions or linking verb phrases."
      },
      "date": 1707225161885
    },
    {
      "type": "edit",
      "id": "6752cabf4a3c189c",
      "item": {
        "type": "paragraph",
        "id": "6752cabf4a3c189c",
        "text": "What we originally observed as marked in red appear to be prepositions, conjunctions, or linking verb phrases."
      },
      "date": 1707225215919
    },
    {
      "item": {
        "type": "factory",
        "id": "11c5b6ca58d99fdf"
      },
      "id": "11c5b6ca58d99fdf",
      "type": "add",
      "after": "30638f8446487149",
      "date": 1707231582656
    },
    {
      "type": "edit",
      "id": "5cd146175cf564f4",
      "item": {
        "type": "paragraph",
        "id": "5cd146175cf564f4",
        "text": "We are dealing with fewer than 100 \"red text\" entries here.\n"
      },
      "date": 1707231587789
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo gt book\nMoldable Collection Wrapper gt book\nA collection wrapper is similar to a Moldable Data Wrapper. See gt book\nAs you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View for each new kind of information you discover. \nSo I would want to continue with the views for the objects, processes and states as well as the source, relation and target triples, right?"
      },
      "date": 1707231607095
    },
    {
      "item": {
        "type": "factory",
        "id": "eb48d12614f67d83"
      },
      "id": "eb48d12614f67d83",
      "type": "add",
      "after": "5cd146175cf564f4",
      "date": 1707231621216
    },
    {
      "type": "edit",
      "id": "eb48d12614f67d83",
      "item": {
        "type": "image",
        "id": "eb48d12614f67d83",
        "text": "\"red text\" entries",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/5bfe72bd10ecde23fa99ed84b49e4ba8.jpg"
      },
      "date": 1707231644363
    },
    {
      "item": {
        "type": "factory",
        "id": "3fb3c473b9dc9d2a"
      },
      "id": "3fb3c473b9dc9d2a",
      "type": "add",
      "after": "eb48d12614f67d83",
      "date": 1707231704689
    },
    {
      "type": "edit",
      "id": "3fb3c473b9dc9d2a",
      "item": {
        "type": "image",
        "id": "3fb3c473b9dc9d2a",
        "text": "some more",
        "size": "wide",
        "width": 419,
        "height": 453,
        "url": "/assets/plugins/image/f94c90ae841503ebdeea838a6d1bd2b9.jpg"
      },
      "date": 1707231716403
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707231933652
    },
    {
      "id": "eb48d12614f67d83",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1707231951188
    },
    {
      "id": "3fb3c473b9dc9d2a",
      "type": "remove",
      "removedTo": {
        "page": "scratch"
      },
      "date": 1707231954581
    },
    {
      "type": "add",
      "id": "5006a384e6a6656a",
      "item": {
        "type": "paragraph",
        "id": "5006a384e6a6656a",
        "text": "We are dealing with fewer than 100 \"red text\" entries here.\n"
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707231978276
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo gt book\nMoldable Collection Wrapper gt book\nA collection wrapper is similar to a Moldable Data Wrapper. See gt book\nAs you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View fo"
      },
      "date": 1707231980603
    },
    {
      "type": "add",
      "id": "a8ba625bbb157799",
      "item": {
        "type": "paragraph",
        "id": "a8ba625bbb157799",
        "text": "r each new kind of information you discover. \nSo I would want to continue with the views for the objects, processes and states as well as the source, relation and target triples, right?"
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707231981190
    },
    {
      "type": "remove",
      "id": "a8ba625bbb157799",
      "date": 1707231985527
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo gt book\nMoldable Collection Wrapper gt book\nA collection wrapper is similar to a Moldable Data Wrapper. See gt book\nAs you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View for each new kind of information you discover."
      },
      "date": 1707231988565
    },
    {
      "type": "add",
      "id": "dc2730180b932298",
      "item": {
        "type": "paragraph",
        "id": "dc2730180b932298",
        "text": "So I would want to continue with the views for the objects, processes and states as well as the source, relation and target triples, right?"
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707231989214
    },
    {
      "id": "eb48d12614f67d83",
      "type": "add",
      "item": {
        "type": "image",
        "id": "eb48d12614f67d83",
        "text": "\"red text\" entries",
        "size": "wide",
        "width": 419,
        "height": 254,
        "url": "/assets/plugins/image/5bfe72bd10ecde23fa99ed84b49e4ba8.jpg"
      },
      "after": "5006a384e6a6656a",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707231997495
    },
    {
      "id": "3fb3c473b9dc9d2a",
      "type": "add",
      "item": {
        "type": "image",
        "id": "3fb3c473b9dc9d2a",
        "text": "some more",
        "size": "wide",
        "width": 419,
        "height": 453,
        "url": "/assets/plugins/image/f94c90ae841503ebdeea838a6d1bd2b9.jpg"
      },
      "after": "eb48d12614f67d83",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707232003244
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo gt book"
      },
      "date": 1707232026310
    },
    {
      "type": "add",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "Moldable Collection Wrapper gt book\nA collection wrapper is similar to a Moldable Data Wrapper. See gt book\nAs you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View for each new kind of information you discover."
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707232027687
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo [https://book.gtoolkit.com/working-with-collections-in-pharo-w9fc31ubksh9va7i1516z5mt gt book]"
      },
      "date": 1707232035653
    },
    {
      "type": "edit",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "Moldable Collection Wrapper gt book"
      },
      "date": 1707232044279
    },
    {
      "type": "add",
      "id": "80ae4a307a0d1cac",
      "item": {
        "type": "paragraph",
        "id": "80ae4a307a0d1cac",
        "text": "A collection wrapper is similar to a Moldable Data Wrapper. See gt book"
      },
      "after": "4400c2548b5e1955",
      "date": 1707232046055
    },
    {
      "type": "add",
      "id": "f66233799e68ef1b",
      "item": {
        "type": "paragraph",
        "id": "f66233799e68ef1b",
        "text": "As you explore the wrapped data, you can prototype new behavior from the Contextual Playground and introduce a Custom View for each new kind of information you discover."
      },
      "after": "80ae4a307a0d1cac",
      "date": 1707232048795
    },
    {
      "type": "edit",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "Moldable Collection Wrapper [https://book.gtoolkit.com/moldable-collection-wrapper-dyquv1bb9krkve76ncq4kyxr7 gt book]"
      },
      "date": 1707232065469
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "[…] Working with collections in Pharo. [https://book.gtoolkit.com/working-with-collections-in-pharo-w9fc31ubksh9va7i1516z5mt gt book]"
      },
      "date": 1707232113604
    },
    {
      "type": "edit",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "Moldable Collection Wrapper. [https://book.gtoolkit.com/moldable-collection-wrapper-dyquv1bb9krkve76ncq4kyxr7 gt book]"
      },
      "date": 1707232116939
    },
    {
      "type": "edit",
      "id": "80ae4a307a0d1cac",
      "item": {
        "type": "paragraph",
        "id": "80ae4a307a0d1cac",
        "text": "A collection wrapper is similar to a Moldable Data Wrapper. See [https://book.gtoolkit.com/moldable-data-wrapper-9jkob08ts9ihwg72kvyccl5ff gt book]"
      },
      "date": 1707232133345
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707232205174
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "Sufficient state has the UUID bcd79744-15ca-46e1-aab4-0f694e5e1338\nObjects and processes also have UUIDs."
      },
      "date": 1707232792264
    },
    {
      "type": "add",
      "id": "21912b3d97a767e8",
      "item": {
        "type": "paragraph",
        "id": "21912b3d97a767e8",
        "text": "[…] Working with collections in Pharo. [https://book.gtoolkit.com/working-with-collections-in-pharo-w9fc31ubksh9va7i1516z5mt gt book]"
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707232793355
    },
    {
      "type": "add",
      "id": "cf04987a8e5149c8",
      "item": {
        "type": "paragraph",
        "id": "cf04987a8e5149c8",
        "text": "Objects and processes also have UUIDs."
      },
      "after": "11c5b6ca58d99fdf",
      "date": 1707232798470
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707232942695
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "Sufficient state has the UUID bcd79744-15ca-46e1-aab4-0f694e5e1338"
      },
      "date": 1707233169586
    },
    {
      "type": "edit",
      "id": "11c5b6ca58d99fdf",
      "item": {
        "type": "paragraph",
        "id": "11c5b6ca58d99fdf",
        "text": "Sufficient state has the UUID bcd79744-15ca-46e1-aab4-0f694e5e1338."
      },
      "date": 1707233177047
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707233409547
    },
    {
      "item": {
        "type": "factory",
        "id": "d77c707d07f99945"
      },
      "id": "d77c707d07f99945",
      "type": "add",
      "after": "3fb3c473b9dc9d2a",
      "date": 1707233423996
    },
    {
      "type": "edit",
      "id": "d77c707d07f99945",
      "item": {
        "type": "markdown",
        "id": "d77c707d07f99945",
        "text": "> But, if a tally shows that there are only a dozen things ever said in red, then there is hope."
      },
      "date": 1707233426075
    },
    {
      "item": {
        "type": "factory",
        "id": "15171aa485663cb1"
      },
      "id": "15171aa485663cb1",
      "type": "add",
      "after": "d77c707d07f99945",
      "date": 1707233446161
    },
    {
      "type": "edit",
      "id": "15171aa485663cb1",
      "item": {
        "type": "paragraph",
        "id": "15171aa485663cb1",
        "text": "DONE."
      },
      "date": 1707233451022
    },
    {
      "type": "edit",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "[[Moldable Collection Wrapper. [https://book.gtoolkit.com/moldable-collection-wrapper-dyquv1bb9krkve76ncq4kyxr7 gt book]"
      },
      "date": 1707233817943
    },
    {
      "type": "edit",
      "id": "80ae4a307a0d1cac",
      "item": {
        "type": "paragraph",
        "id": "80ae4a307a0d1cac",
        "text": "A collection wrapper is similar to a [[Moldable Data Wrapper. See [https://book.gtoolkit.com/moldable-data-wrapper-9jkob08ts9ihwg72kvyccl5ff gt book]"
      },
      "date": 1707233826325
    },
    {
      "type": "edit",
      "id": "4400c2548b5e1955",
      "item": {
        "type": "paragraph",
        "id": "4400c2548b5e1955",
        "text": "[[Moldable Collection Wrapper]]. [https://book.gtoolkit.com/moldable-collection-wrapper-dyquv1bb9krkve76ncq4kyxr7 gt book]"
      },
      "date": 1707233830570
    },
    {
      "type": "edit",
      "id": "80ae4a307a0d1cac",
      "item": {
        "type": "paragraph",
        "id": "80ae4a307a0d1cac",
        "text": "A collection wrapper is similar to a [[Moldable Data Wrapper]]. See [https://book.gtoolkit.com/moldable-data-wrapper-9jkob08ts9ihwg72kvyccl5ff gt book]"
      },
      "date": 1707233839701
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707234000286
    }
  ]
}