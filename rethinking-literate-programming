{
  "title": "Rethinking literate programming",
  "story": [
    {
      "type": "markdown",
      "id": "4ef4ca551647f530",
      "text": "Haghish, E. F. “Rethinking Literate Programming in Statistics.” The Stata Journal 16, no. 4 (December 1, 2016): 938–63. https://doi.org/10.1177/1536867X1601600408.\n> **Abstract**. Literate programming is becoming increasingly trendy for data analysis because it allows the generation of dynamic-analysis reports for communicating data analysis and eliminates untraceable human errors in analysis reports. Traditionally, literate programming includes separate processes for compiling the code and preparing the documentation. While this workflow might be satisfactory for software documentation, it is not ideal for writing statistical analysis reports. Instead, these processes should run in parallel. In this article, I introduce the weaver package, which examines this idea by creating a new log system in HTML or LATEX that can be used simultaneously with the Stata log system. The new log system provides many features that the Stata log system lacks; for example, it can render mathematical notations, insert figures, create publication-ready dynamic tables, and style text, and it includes a built-in syntax highlighter. The weaver package also produces dynamic PDF documents by converting the HTML log to PDF or by typesetting the LATEX log and thus provides a real-time preview of the document without recompiling the code. I also discuss potential applications of the weaver package."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Rethinking literate programming",
        "story": []
      },
      "date": 1628171873974
    },
    {
      "item": {
        "type": "factory",
        "id": "d3a88c4067c9b07a"
      },
      "id": "d3a88c4067c9b07a",
      "type": "add",
      "date": 1628171875241
    },
    {
      "type": "remove",
      "id": "d3a88c4067c9b07a",
      "date": 1628171878277
    },
    {
      "item": {
        "type": "factory",
        "id": "4ef4ca551647f530"
      },
      "id": "4ef4ca551647f530",
      "type": "add",
      "date": 1628171887020
    },
    {
      "type": "edit",
      "id": "4ef4ca551647f530",
      "item": {
        "type": "markdown",
        "id": "4ef4ca551647f530",
        "text": "Haghish, E. F. “Rethinking Literate Programming in Statistics.” The Stata Journal 16, no. 4 (December 1, 2016): 938–63. https://doi.org/10.1177/1536867X1601600408.\n"
      },
      "date": 1628171889619
    },
    {
      "type": "edit",
      "id": "4ef4ca551647f530",
      "item": {
        "type": "markdown",
        "id": "4ef4ca551647f530",
        "text": "Haghish, E. F. “Rethinking Literate Programming in Statistics.” The Stata Journal 16, no. 4 (December 1, 2016): 938–63. https://doi.org/10.1177/1536867X1601600408.\n> Literate programming is becoming increasingly trendy for data analysis because it allows the generation of dynamic-analysis reports for communicating data analysis and eliminates untraceable human errors in analysis reports. Traditionally, literate programming includes separate processes for compiling the code and preparing the documentation. While this workflow might be satisfactory for software documentation, it is not ideal for writing statistical analysis reports. Instead, these processes should run in parallel. In this article, I introduce the weaver package, which examines this idea by creating a new log system in HTML or LATEX that can be used simultaneously with the Stata log system. The new log system provides many features that the Stata log system lacks; for example, it can render mathematical notations, insert figures, create publication-ready dynamic tables, and style text, and it includes a built-in syntax highlighter. The weaver package also produces dynamic PDF documents by converting the HTML log to PDF or by typesetting the LATEX log and thus provides a real-time preview of the document without recompiling the code. I also discuss potential applications of the weaver package."
      },
      "date": 1628171910947
    },
    {
      "type": "edit",
      "id": "4ef4ca551647f530",
      "item": {
        "type": "markdown",
        "id": "4ef4ca551647f530",
        "text": "Haghish, E. F. “Rethinking Literate Programming in Statistics.” The Stata Journal 16, no. 4 (December 1, 2016): 938–63. https://doi.org/10.1177/1536867X1601600408.\n> **Abstract**. Literate programming is becoming increasingly trendy for data analysis because it allows the generation of dynamic-analysis reports for communicating data analysis and eliminates untraceable human errors in analysis reports. Traditionally, literate programming includes separate processes for compiling the code and preparing the documentation. While this workflow might be satisfactory for software documentation, it is not ideal for writing statistical analysis reports. Instead, these processes should run in parallel. In this article, I introduce the weaver package, which examines this idea by creating a new log system in HTML or LATEX that can be used simultaneously with the Stata log system. The new log system provides many features that the Stata log system lacks; for example, it can render mathematical notations, insert figures, create publication-ready dynamic tables, and style text, and it includes a built-in syntax highlighter. The weaver package also produces dynamic PDF documents by converting the HTML log to PDF or by typesetting the LATEX log and thus provides a real-time preview of the document without recompiling the code. I also discuss potential applications of the weaver package."
      },
      "date": 1628171927316
    }
  ]
}