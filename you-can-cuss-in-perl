{
  "title": "You Can Cuss in Perl",
  "story": [
    {
      "id": "2f156000",
      "type": "paragraph",
      "text": "My training was in linguistics, as well as computer science, so I've tried to make a language that works on a deep level, like human languages work.  You don't have to know the whole language to use it usefully, you can do baby talk, you can do grown up talk, you can cuss in it, you can write poetry, you can be a playwright, is sort of the idea. — Larry Wall [https://bigthink.com/videos/you-can-cuss-in-perl/ bigthink]"
    },
    {
      "id": "3a8bc000",
      "type": "paragraph",
      "text": "In my experience, the post-modern movement has mostly been about not getting hung up on one particular idea or way of doing things, like modernism tends to do, and instead, sort of picking and choosing from different historical eras—I'm thinking more of architecture, where you can see different architectural features that the architect has used."
    },
    {
      "type": "paragraph",
      "id": "4c3406d96a427043",
      "text": "Perl is very similar in the way it has collected features from other languages, things that seem to be distinct ways of doing things and finding a way of meshing those in a pleasing fashion—the same way a poet might take words that are very different from each other and mesh them into a coherent poem. Perl, in that sense, is very, very much, it doesn't have an agenda and it really is not trying to tell you how you're supposed to do your job, it just tries to get out of your way as much as possible."
    },
    {
      "id": "28cfc000",
      "type": "video",
      "text": "YOUTUBE ju1IMxGSuNE\nWhy Perl Is Like a Human Language (5m), BigThink [https://www.youtube.com/watch?v=ju1IMxGSuNE youtube]"
    },
    {
      "type": "paragraph",
      "id": "0bf41208ec422dc1",
      "text": "Perl is much more like a natural language than most computer languages. Human languages tend to be much more ambiguous than computer languages because humans are are much smarter about interpreting the context. There is a scale of how much a computer language resembles human language primarily based on how much context is involved."
    },
    {
      "type": "pagefold",
      "id": "996e18bfab9edf58",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "25e86016b2527cf2",
      "text": "Ruby extended this notion of a operating context within a computer language. I think that is why there was such a proliferation of domain-specific languages written in ruby. Yehuda Katz explained Metaprogramming in Ruby: It's All About the Self. [https://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self/ blog]"
    },
    {
      "type": "paragraph",
      "id": "35f1b127d8a0e223",
      "text": "Some perl idoms that reveal it's approach to context:"
    },
    {
      "type": "code",
      "id": "ef734a34c17e04f7",
      "text": "$_\n@_\nperl -lane 's/foo/bar/g && print'"
    },
    {
      "type": "paragraph",
      "id": "a384000d0839a5ad",
      "text": "The -lane follows an older unix idiom that lets command-line flags be combined rather than separated. Then -n itself changes the context for the interpreter to wrap the -e expression in a loop that iterates over STDIN."
    },
    {
      "type": "paragraph",
      "id": "92a266850071dd4e",
      "text": "The bare substitution s/foo/bar/ operates on the implicit $_ variable which holds the current line in the iteration from STDIN."
    },
    {
      "type": "paragraph",
      "id": "2731daa7744c4726",
      "text": "The success or failure of the substitution is treated as a boolean. When combined with && it says \"do the next thing if the previous thing worked.\""
    },
    {
      "type": "paragraph",
      "id": "19515621e2453a6a",
      "text": "And print is also assuming you meant to print $_."
    },
    {
      "type": "paragraph",
      "id": "c4922efd8c0968f3",
      "text": "All of that is to say that perl does different things depending on the context. Larry Wall did that to purposefully make the language behave like natural language."
    },
    {
      "type": "pagefold",
      "id": "3211412de793e7e7",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "c6626147436baa49",
      "text": "Compare [[Boulder Vernacular Architecture]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "You Can Cuss in Perl",
        "story": []
      },
      "date": 1641670401453
    },
    {
      "id": "2f156000",
      "type": "add",
      "item": {
        "id": "2f156000",
        "type": "paragraph",
        "text": "My training was in linguistics, as well as computer science, so I've tried to make a language that works on a deep level, like human languages work.  You don't have to know the whole language to use it usefully, you can do baby talk, you can do grown up talk, you can cuss in it, you can write poetry, you can be a playwright, is sort of the idea."
      },
      "date": 1641672045196
    },
    {
      "id": "3af86000",
      "type": "add",
      "item": {
        "id": "3af86000",
        "type": "paragraph",
        "text": "description  [https://bigthink.com/videos/you-can-cuss-in-perl/ bigthink]"
      },
      "after": "2f156000",
      "date": 1641672049243
    },
    {
      "id": "3a8bc000",
      "type": "add",
      "item": {
        "id": "3a8bc000",
        "type": "paragraph",
        "text": "Perl is very similar in the way it has collected features from other languages, things that seem to be distinct ways of doing things and finding a way of meshing those in a pleasing fashion—the same way a poet might take words that are very different from each other and mesh them into a coherent poem. Perl, in that sense, is very, very much, it doesn't have an agenda and it really is not trying to tell you how you're supposed to do your job, it just tries to get out of your way as much as possible."
      },
      "after": "3af86000",
      "date": 1641672073337
    },
    {
      "id": "28cfc000",
      "type": "add",
      "item": {
        "id": "28cfc000",
        "type": "paragraph",
        "text": "Why Perl Is Like a Human Language"
      },
      "after": "3a8bc000",
      "date": 1641672108231
    },
    {
      "id": "19ba3800",
      "type": "add",
      "item": {
        "id": "19ba3800",
        "type": "paragraph",
        "text": "description  [https://www.youtube.com/watch?v=ju1IMxGSuNE youtube]"
      },
      "after": "28cfc000",
      "date": 1641672111908
    },
    {
      "type": "add",
      "id": "0bf41208ec422dc1",
      "item": {
        "type": "paragraph",
        "id": "0bf41208ec422dc1",
        "text": "Perl is much more like a natural language than most computer languages. Human languages tend to be much more ambiguous than computer languages because humans are are much smarter about interpreting the context. There is a scale of how much a computer language resembles human language primarily based on how much context is involved."
      },
      "after": "19ba3800",
      "date": 1641672239520
    },
    {
      "type": "remove",
      "id": "3af86000",
      "date": 1641672249216
    },
    {
      "type": "edit",
      "id": "2f156000",
      "item": {
        "id": "2f156000",
        "type": "paragraph",
        "text": "My training was in linguistics, as well as computer science, so I've tried to make a language that works on a deep level, like human languages work.  You don't have to know the whole language to use it usefully, you can do baby talk, you can do grown up talk, you can cuss in it, you can write poetry, you can be a playwright, is sort of the idea. [https://bigthink.com/videos/you-can-cuss-in-perl/ bigthink]"
      },
      "date": 1641672251587
    },
    {
      "type": "remove",
      "id": "19ba3800",
      "date": 1641672267782
    },
    {
      "type": "edit",
      "id": "28cfc000",
      "item": {
        "id": "28cfc000",
        "type": "paragraph",
        "text": "Why Perl Is Like a Human Language [https://www.youtube.com/watch?v=ju1IMxGSuNE youtube]"
      },
      "date": 1641672273025
    },
    {
      "type": "edit",
      "id": "28cfc000",
      "item": {
        "id": "28cfc000",
        "type": "video",
        "text": "YOUTUBE ju1IMxGSuNE\nWhy Perl Is Like a Human Language (5m), BigThink [https://www.youtube.com/watch?v=ju1IMxGSuNE youtube]"
      },
      "date": 1641672318699
    },
    {
      "type": "edit",
      "id": "3a8bc000",
      "item": {
        "id": "3a8bc000",
        "type": "paragraph",
        "text": "In my experience, the post-modern movement has mostly been about not getting hung up on one particular idea or way of doing things, like modernism tends to do, and instead, sort of picking and choosing from different historical eras—I'm thinking more of architecture, where you can see different architectural features that the architect has used."
      },
      "date": 1641672409035
    },
    {
      "type": "add",
      "id": "4c3406d96a427043",
      "item": {
        "type": "paragraph",
        "id": "4c3406d96a427043",
        "text": "Perl is very similar in the way it has collected features from other languages, things that seem to be distinct ways of doing things and finding a way of meshing those in a pleasing fashion—the same way a poet might take words that are very different from each other and mesh them into a coherent poem. Perl, in that sense, is very, very much, it doesn't have an agenda and it really is not trying to tell you how you're supposed to do your job, it just tries to get out of your way as much as possible."
      },
      "after": "3a8bc000",
      "date": 1641672411530
    },
    {
      "type": "edit",
      "id": "2f156000",
      "item": {
        "id": "2f156000",
        "type": "paragraph",
        "text": "My training was in linguistics, as well as computer science, so I've tried to make a language that works on a deep level, like human languages work.  You don't have to know the whole language to use it usefully, you can do baby talk, you can do grown up talk, you can cuss in it, you can write poetry, you can be a playwright, is sort of the idea. — Larry Wall [https://bigthink.com/videos/you-can-cuss-in-perl/ bigthink]"
      },
      "date": 1641672464611
    },
    {
      "item": {
        "type": "factory",
        "id": "996e18bfab9edf58"
      },
      "id": "996e18bfab9edf58",
      "type": "add",
      "after": "0bf41208ec422dc1",
      "date": 1641672921373
    },
    {
      "type": "edit",
      "id": "996e18bfab9edf58",
      "item": {
        "type": "pagefold",
        "id": "996e18bfab9edf58",
        "text": "."
      },
      "date": 1641672924543
    },
    {
      "item": {
        "type": "factory",
        "id": "25e86016b2527cf2"
      },
      "id": "25e86016b2527cf2",
      "type": "add",
      "after": "996e18bfab9edf58",
      "date": 1641672926014
    },
    {
      "type": "edit",
      "id": "25e86016b2527cf2",
      "item": {
        "type": "paragraph",
        "id": "25e86016b2527cf2",
        "text": "Ruby extended this notion of a operating context within a computer language. I think that is why there was such a proliferation of domain-specific languages written in ruby."
      },
      "date": 1641673041557
    },
    {
      "type": "add",
      "id": "47b496c7fc1421ff",
      "item": {
        "type": "paragraph",
        "id": "47b496c7fc1421ff",
        "text": "Yehuda Katz explained Metaprogramming in Ruby: It's All About the Self. [https://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self/ blog]"
      },
      "after": "25e86016b2527cf2",
      "date": 1641673192618
    },
    {
      "type": "remove",
      "id": "47b496c7fc1421ff",
      "date": 1641673431052
    },
    {
      "type": "edit",
      "id": "25e86016b2527cf2",
      "item": {
        "type": "paragraph",
        "id": "25e86016b2527cf2",
        "text": "Ruby extended this notion of a operating context within a computer language. I think that is why there was such a proliferation of domain-specific languages written in ruby. Yehuda Katz explained Metaprogramming in Ruby: It's All About the Self. [https://yehudakatz.com/2009/11/15/metaprogramming-in-ruby-its-all-about-the-self/ blog]"
      },
      "date": 1641673442348
    },
    {
      "type": "add",
      "id": "35f1b127d8a0e223",
      "item": {
        "type": "paragraph",
        "id": "35f1b127d8a0e223",
        "text": "Some perl idoms that reveal it's approach to context:"
      },
      "after": "25e86016b2527cf2",
      "date": 1641673501677
    },
    {
      "item": {
        "type": "factory",
        "id": "ef734a34c17e04f7"
      },
      "id": "ef734a34c17e04f7",
      "type": "add",
      "after": "35f1b127d8a0e223",
      "date": 1641673503141
    },
    {
      "type": "edit",
      "id": "ef734a34c17e04f7",
      "item": {
        "type": "code",
        "id": "ef734a34c17e04f7",
        "text": "$_\n@_\nperl -lane 's/foo/bar/g && print'"
      },
      "date": 1641673591043
    },
    {
      "item": {
        "type": "factory",
        "id": "a384000d0839a5ad"
      },
      "id": "a384000d0839a5ad",
      "type": "add",
      "after": "ef734a34c17e04f7",
      "date": 1641673597044
    },
    {
      "type": "edit",
      "id": "a384000d0839a5ad",
      "item": {
        "type": "paragraph",
        "id": "a384000d0839a5ad",
        "text": "The -lane follows an older unix idiom that lets command-line flags be combined rather than separated. Then -n itself changes the context for the interpreter to wrap the -e expression in a loop that iterates over STDIN."
      },
      "date": 1641673715434
    },
    {
      "type": "add",
      "id": "92a266850071dd4e",
      "item": {
        "type": "paragraph",
        "id": "92a266850071dd4e",
        "text": "The bare substitution s/foo/bar/ operates on the implicit $_ variable which holds the current line in the iteration from STDIN."
      },
      "after": "a384000d0839a5ad",
      "date": 1641673774454
    },
    {
      "type": "add",
      "id": "2731daa7744c4726",
      "item": {
        "type": "paragraph",
        "id": "2731daa7744c4726",
        "text": "The success or failure of the substitution is treated as a boolean. When combined with && it says \"do the next thing if the previous thing worked.\""
      },
      "after": "92a266850071dd4e",
      "date": 1641673813833
    },
    {
      "type": "add",
      "id": "19515621e2453a6a",
      "item": {
        "type": "paragraph",
        "id": "19515621e2453a6a",
        "text": "And print is also assuming you meant to print $_."
      },
      "after": "2731daa7744c4726",
      "date": 1641673838774
    },
    {
      "type": "add",
      "id": "c4922efd8c0968f3",
      "item": {
        "type": "paragraph",
        "id": "c4922efd8c0968f3",
        "text": "All of that is to say that perl does different things depending on the context. Larry Wall did that on purpose."
      },
      "after": "19515621e2453a6a",
      "date": 1641673892957
    },
    {
      "type": "edit",
      "id": "c4922efd8c0968f3",
      "item": {
        "type": "paragraph",
        "id": "c4922efd8c0968f3",
        "text": "All of that is to say that perl does different things depending on the context. Larry Wall did that to purposefully make the language behave like natural language."
      },
      "date": 1641673942477
    },
    {
      "item": {
        "type": "factory",
        "id": "3211412de793e7e7"
      },
      "id": "3211412de793e7e7",
      "type": "add",
      "after": "c4922efd8c0968f3",
      "date": 1641673962170
    },
    {
      "type": "edit",
      "id": "3211412de793e7e7",
      "item": {
        "type": "pagefold",
        "id": "3211412de793e7e7",
        "text": "."
      },
      "date": 1641673964836
    },
    {
      "item": {
        "type": "factory",
        "id": "c6626147436baa49"
      },
      "id": "c6626147436baa49",
      "type": "add",
      "after": "3211412de793e7e7",
      "date": 1641673966198
    },
    {
      "type": "edit",
      "id": "c6626147436baa49",
      "item": {
        "type": "paragraph",
        "id": "c6626147436baa49",
        "text": "Compare [[Boulder Vernacular Architecture]]"
      },
      "date": 1641674015527
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1641727888213
    }
  ]
}