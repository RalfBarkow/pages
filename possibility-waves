{
  "title": "Possibility Waves",
  "story": [
    {
      "type": "paragraph",
      "id": "1ab4a204a652018d",
      "text": "[[William Bricken]], September 1995. [https://www.wbricken.com/pdfs/01bm/04eda/03innovation/01poss-waves.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "fd80ca7a835151b4",
      "text": "\nThe behavior of circuits can be visualized as the propagation of logical\nvalues (binary states) through a network of gates that change those logic\nvalues either by inverting them (single-input not gates) or by combining them\n(multiple-input or/and gates).  This viewpoint uses an external, objective\nmetaphor, watching how the propagation of apparent objects (bits) effects\ntheir state (high/low).\n"
    },
    {
      "type": "paragraph",
      "id": "3dfab6956b6bf3d9",
      "text": "Alternatively, a circuit can be seen as a constraint system imposed on the\nfreedom of the input.  A simple not-gate enforces that its input contradict\nitself, imposing absolute limits on a signal's choice of self-expression.\n(The freedom of a binary signal is quite limited, to be in one of two states.)\nAn or-gate enforces a form of joint cooperation, either signal can dominate\nthe outcome of their meeting.\n"
    },
    {
      "type": "paragraph",
      "id": "b77fe97e356910a7",
      "text": "A yet deeper subjective perspective is available from the viewpoint of each\ngate.  Gates see incoming states and act as the environment for those states,\neffecting their interaction absolutely.  A combinatorial gate however, has no\naccess to the working of its neighbors, it is a purely local, parallel agent.\n"
    },
    {
      "type": "paragraph",
      "id": "84d06a399728e5f8",
      "text": "Consider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including [[minimization]], diagnostics, and timing\nanalysis.\n"
    },
    {
      "type": "paragraph",
      "id": "b8bee28118900e07",
      "text": "A not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\n"
    },
    {
      "type": "paragraph",
      "id": "8bd91555c3d5d1be",
      "text": "The antecedents-of-modus-ponens circuit"
    },
    {
      "type": "code",
      "id": "4e713e8560783218",
      "text": "            (((a) ((a) b))"
    },
    {
      "type": "paragraph",
      "id": "080fe67027a7c3a3",
      "text": "\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\n"
    },
    {
      "type": "paragraph",
      "id": "f3e63733f3ba93f6",
      "text": "We can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\n"
    },
    {
      "type": "paragraph",
      "id": "9bdc5ebe1f8a9f48",
      "text": "Consider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\n"
    },
    {
      "type": "paragraph",
      "id": "376045f13c76da87",
      "text": "Such a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\n"
    },
    {
      "type": "paragraph",
      "id": "ec07b84d1096481f",
      "text": "Each explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\n"
    },
    {
      "type": "paragraph",
      "id": "53f71e196c932fee",
      "text": "By tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,"
    },
    {
      "type": "paragraph",
      "id": "46f574ec6dfb1c8e",
      "text": "\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
    },
    {
      "type": "code",
      "id": "b2f8f86cc97fa23e",
      "text": "(a) ((a) b)"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Possibility Waves",
        "story": []
      },
      "date": 1659268577415
    },
    {
      "item": {
        "type": "factory",
        "id": "1ab4a204a652018d"
      },
      "id": "1ab4a204a652018d",
      "type": "add",
      "date": 1659268595921
    },
    {
      "type": "edit",
      "id": "1ab4a204a652018d",
      "item": {
        "type": "paragraph",
        "id": "1ab4a204a652018d",
        "text": "â€“ [https://www.wbricken.com/pdfs/01bm/04eda/03innovation/01poss-waves.pdf pdf]"
      },
      "date": 1659268604174
    },
    {
      "item": {
        "type": "factory",
        "id": "fd80ca7a835151b4"
      },
      "id": "fd80ca7a835151b4",
      "type": "add",
      "after": "1ab4a204a652018d",
      "date": 1659268620655
    },
    {
      "type": "edit",
      "id": "fd80ca7a835151b4",
      "item": {
        "type": "paragraph",
        "id": "fd80ca7a835151b4",
        "text": "POSSIBILITY WAVES\nWilliam Bricken\nSeptember 1995\nThe behavior of circuits can be visualized as the propagation of logical\nvalues (binary states) through a network of gates that change those logic\nvalues either by inverting them (single-input not gates) or by combining them\n(multiple-input or/and gates).  This viewpoint uses an external, objective\nmetaphor, watching how the propagation of apparent objects (bits) effects\ntheir state (high/low).\nAlternatively, a circuit can be seen as a constraint system imposed on the\nfreedom of the input.  A simple not-gate enforces that its input contradict\nitself, imposing absolute limits on a signal's choice of self-expression.\n(The freedom of a binary signal is quite limited, to be in one of two states.)\nAn or-gate enforces a form of joint cooperation, either signal can dominate\nthe outcome of their meeting.\nA yet deeper subjective perspective is available from the viewpoint of each\ngate.  Gates see incoming states and act as the environment for those states,\neffecting their interaction absolutely.  A combinatorial gate however, has no\naccess to the working of its neighbors, it is a purely local, parallel agent.\nConsider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including minimization, diagnostics, and timing\nanalysis.\nA not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\nThe antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "date": 1659268622550
    },
    {
      "type": "edit",
      "id": "fd80ca7a835151b4",
      "item": {
        "type": "paragraph",
        "id": "fd80ca7a835151b4",
        "text": "POSSIBILITY WAVES\nWilliam Bricken\nSeptember 1995\nThe behavior of circuits can be visualized as the propagation of logical\nvalues (binary states) through a network of gates that change those logic\nvalues either by inverting them (single-input not gates) or by combining them\n(multiple-input or/and gates).  This viewpoint uses an external, objective\nmetaphor, watching how the propagation of apparent objects (bits) effects\ntheir state (high/low).\n"
      },
      "date": 1659268656142
    },
    {
      "type": "add",
      "id": "3dfab6956b6bf3d9",
      "item": {
        "type": "paragraph",
        "id": "3dfab6956b6bf3d9",
        "text": "Alternatively, a circuit can be seen as a constraint system imposed on the\nfreedom of the input.  A simple not-gate enforces that its input contradict\nitself, imposing absolute limits on a signal's choice of self-expression.\n(The freedom of a binary signal is quite limited, to be in one of two states.)\nAn or-gate enforces a form of joint cooperation, either signal can dominate\nthe outcome of their meeting.\nA yet deeper subjective perspective is available from the viewpoint of each\ngate.  Gates see incoming states and act as the environment for those states,\neffecting their interaction absolutely.  A combinatorial gate however, has no\naccess to the working of its neighbors, it is a purely local, parallel agent.\nConsider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including minimization, diagnostics, and timing\nanalysis.\nA not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\nThe antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "fd80ca7a835151b4",
      "date": 1659268657759
    },
    {
      "type": "edit",
      "id": "fd80ca7a835151b4",
      "item": {
        "type": "paragraph",
        "id": "fd80ca7a835151b4",
        "text": "\nThe behavior of circuits can be visualized as the propagation of logical\nvalues (binary states) through a network of gates that change those logic\nvalues either by inverting them (single-input not gates) or by combining them\n(multiple-input or/and gates).  This viewpoint uses an external, objective\nmetaphor, watching how the propagation of apparent objects (bits) effects\ntheir state (high/low).\n"
      },
      "date": 1659268673559
    },
    {
      "type": "edit",
      "id": "1ab4a204a652018d",
      "item": {
        "type": "paragraph",
        "id": "1ab4a204a652018d",
        "text": "[[William Bricken]], September 1995. [https://www.wbricken.com/pdfs/01bm/04eda/03innovation/01poss-waves.pdf pdf]"
      },
      "date": 1659268691502
    },
    {
      "type": "edit",
      "id": "3dfab6956b6bf3d9",
      "item": {
        "type": "paragraph",
        "id": "3dfab6956b6bf3d9",
        "text": "Alternatively, a circuit can be seen as a constraint system imposed on the\nfreedom of the input.  A simple not-gate enforces that its input contradict\nitself, imposing absolute limits on a signal's choice of self-expression.\n(The freedom of a binary signal is quite limited, to be in one of two states.)\nAn or-gate enforces a form of joint cooperation, either signal can dominate\nthe outcome of their meeting.\n"
      },
      "date": 1659268719037
    },
    {
      "type": "add",
      "id": "b77fe97e356910a7",
      "item": {
        "type": "paragraph",
        "id": "b77fe97e356910a7",
        "text": "A yet deeper subjective perspective is available from the viewpoint of each\ngate.  Gates see incoming states and act as the environment for those states,\neffecting their interaction absolutely.  A combinatorial gate however, has no\naccess to the working of its neighbors, it is a purely local, parallel agent.\nConsider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including minimization, diagnostics, and timing\nanalysis.\nA not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\nThe antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "3dfab6956b6bf3d9",
      "date": 1659268720004
    },
    {
      "type": "edit",
      "id": "b77fe97e356910a7",
      "item": {
        "type": "paragraph",
        "id": "b77fe97e356910a7",
        "text": "A yet deeper subjective perspective is available from the viewpoint of each\ngate.  Gates see incoming states and act as the environment for those states,\neffecting their interaction absolutely.  A combinatorial gate however, has no\naccess to the working of its neighbors, it is a purely local, parallel agent.\n"
      },
      "date": 1659268729275
    },
    {
      "type": "add",
      "id": "84d06a399728e5f8",
      "item": {
        "type": "paragraph",
        "id": "84d06a399728e5f8",
        "text": "Consider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including minimization, diagnostics, and timing\nanalysis.\nA not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\nThe antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "b77fe97e356910a7",
      "date": 1659268736473
    },
    {
      "type": "edit",
      "id": "84d06a399728e5f8",
      "item": {
        "type": "paragraph",
        "id": "84d06a399728e5f8",
        "text": "Consider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including minimization, diagnostics, and timing\nanalysis.\n"
      },
      "date": 1659268747545
    },
    {
      "type": "add",
      "id": "b8bee28118900e07",
      "item": {
        "type": "paragraph",
        "id": "b8bee28118900e07",
        "text": "A not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\nThe antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "84d06a399728e5f8",
      "date": 1659268748456
    },
    {
      "type": "edit",
      "id": "b8bee28118900e07",
      "item": {
        "type": "paragraph",
        "id": "b8bee28118900e07",
        "text": "A not-gate now no longer sees or acts on a signal-state to absolutely change\nit.  An incoming signal (both-high-and-low) provides nothing to invert.\nHowever, the gate can function on other operators, in an algebraic manner.\nNot-gates can cross-communicate and perform useful computation merely by\nindicating their presence.  When both-high-and-low arrive at a gate, the gate\nexamines the signal for markings of another inverter, and either adds a mark\nif none is found or removes a mark if it is found.  Combining gates no longer\ndetermine the dominant signal, they separate and combine redundancies.  This\nchange in perspective is perhaps the most unfamiliar, since algebraic gates\nsee as input the entire subgraph below.  An or-gate essentially asks if the\nincoming signal-histories are identical.  It so one is superfluous, if not\nthen both signals are passed on.  Algebraic circuits thus expand rather than\ncontract the signal propagating through them.\n"
      },
      "date": 1659268866922
    },
    {
      "type": "add",
      "id": "8bd91555c3d5d1be",
      "item": {
        "type": "paragraph",
        "id": "8bd91555c3d5d1be",
        "text": "The antecedents-of-modus-ponens circuit\n            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "b8bee28118900e07",
      "date": 1659268868641
    },
    {
      "type": "edit",
      "id": "84d06a399728e5f8",
      "item": {
        "type": "paragraph",
        "id": "84d06a399728e5f8",
        "text": "Consider now a different type of thing being propagated.  Instead of a\nspecific logical value, either-high-or-low, let the information be a space of\npossibilities, both-high-and-low.  We can no longer watch the behavior of\nvalues.  We can only know the specific state of a location when there is no\nchoice (freedom) for that state.  But we can still do computation on the\nfunctionality of the circuit, including [[minimization]], diagnostics, and timing\nanalysis.\n"
      },
      "date": 1659268882681
    },
    {
      "type": "edit",
      "id": "8bd91555c3d5d1be",
      "item": {
        "type": "paragraph",
        "id": "8bd91555c3d5d1be",
        "text": "The antecedents-of-modus-ponens circuit"
      },
      "date": 1659269245667
    },
    {
      "type": "add",
      "id": "080fe67027a7c3a3",
      "item": {
        "type": "paragraph",
        "id": "080fe67027a7c3a3",
        "text": "            (((a) ((a) b))\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "8bd91555c3d5d1be",
      "date": 1659269248106
    },
    {
      "item": {
        "type": "factory",
        "id": "4e713e8560783218"
      },
      "id": "4e713e8560783218",
      "type": "add",
      "after": "080fe67027a7c3a3",
      "date": 1659269251087
    },
    {
      "id": "4e713e8560783218",
      "type": "move",
      "order": [
        "1ab4a204a652018d",
        "fd80ca7a835151b4",
        "3dfab6956b6bf3d9",
        "b77fe97e356910a7",
        "84d06a399728e5f8",
        "b8bee28118900e07",
        "8bd91555c3d5d1be",
        "4e713e8560783218",
        "080fe67027a7c3a3"
      ],
      "date": 1659269256556
    },
    {
      "type": "edit",
      "id": "080fe67027a7c3a3",
      "item": {
        "type": "paragraph",
        "id": "080fe67027a7c3a3",
        "text": "\n\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\nWe can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\nConsider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\nSuch a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\nEach explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\nBy tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,\n(a) ((a) b)\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "date": 1659269263321
    },
    {
      "type": "edit",
      "id": "4e713e8560783218",
      "item": {
        "type": "code",
        "id": "4e713e8560783218",
        "text": "            (((a) ((a) b))"
      },
      "date": 1659269264441
    },
    {
      "type": "edit",
      "id": "080fe67027a7c3a3",
      "item": {
        "type": "paragraph",
        "id": "080fe67027a7c3a3",
        "text": "\npropagates two \"a\" signals through different inverters which mark each as\n\"(a)\".  The or-space \"(a) b\" passes its entire space as its expanding value.\nThe or-space \"(a) ((a) b)\" does not because of the interacting identical\nsubnets \"(a)\" and \"(a)\".\n"
      },
      "date": 1659269465990
    },
    {
      "type": "add",
      "id": "f3e63733f3ba93f6",
      "item": {
        "type": "paragraph",
        "id": "f3e63733f3ba93f6",
        "text": "We can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\n"
      },
      "after": "080fe67027a7c3a3",
      "date": 1659269467555
    },
    {
      "type": "edit",
      "id": "f3e63733f3ba93f6",
      "item": {
        "type": "paragraph",
        "id": "f3e63733f3ba93f6",
        "text": "We can view the space interaction of identical structures as an interference\npattern, not between the values of each structure but between the\nidenticalness of the named patterns.  It is the naming of different input\nsignals which determines the rigidities of the system, not the concrete state\na particular name is in at a particular time.  Traditionally, signals are not\nnamed, but envisioned as path (wire) between gates.  Gates are named and\nprocess signals which vary over time determined by a clock.  In this\ncomputational model, the effect of the entire circuit is spread over time and\nrequired to converge to an instance.  Other instances are then pumped through\nthe circuit by the clock, providing a sequence of events (011010010...) which\nis read out into parallel spatial form for our comprehension.\n"
      },
      "date": 1659269512029
    },
    {
      "type": "add",
      "id": "9bdc5ebe1f8a9f48",
      "item": {
        "type": "paragraph",
        "id": "9bdc5ebe1f8a9f48",
        "text": "Consider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\n"
      },
      "after": "f3e63733f3ba93f6",
      "date": 1659269513349
    },
    {
      "type": "edit",
      "id": "9bdc5ebe1f8a9f48",
      "item": {
        "type": "paragraph",
        "id": "9bdc5ebe1f8a9f48",
        "text": "Consider an algebraic circuit resonating its possibilities/constraints,\nindependent of time.  Rather than changing states, its changes constraints as\nits self-minimizes.  When a input-name is bound to a value (either-high-or-\nlow), that concrete intrusion into the possibility harmonic is immediately\nremoved, resulting in a smaller possibility space, since one degree of freedom\nhas been totally removed.\n"
      },
      "date": 1659269537338
    },
    {
      "type": "add",
      "id": "376045f13c76da87",
      "item": {
        "type": "paragraph",
        "id": "376045f13c76da87",
        "text": "Such a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\n"
      },
      "after": "9bdc5ebe1f8a9f48",
      "date": 1659269538470
    },
    {
      "type": "edit",
      "id": "376045f13c76da87",
      "item": {
        "type": "paragraph",
        "id": "376045f13c76da87",
        "text": "Such a circuit is not constrained by linear propagation of things/values, and\nwill self-modify at any point of grounding, whether it be inputs, \"outputs\",\nor internal gates.  When all inputs are bound concurrently, the algebraic\ncircuit looses all constraints which hold it up, and it collapses to a single\nvalue by the fastest possible path.  In contrast, propagating circuits\nevaluate by their slowest possible path.\n"
      },
      "date": 1659269573845
    },
    {
      "type": "add",
      "id": "ec07b84d1096481f",
      "item": {
        "type": "paragraph",
        "id": "ec07b84d1096481f",
        "text": "Each explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\n"
      },
      "after": "376045f13c76da87",
      "date": 1659269575096
    },
    {
      "type": "edit",
      "id": "ec07b84d1096481f",
      "item": {
        "type": "paragraph",
        "id": "ec07b84d1096481f",
        "text": "Each explicit gate in an algebraic circuit summarizes the subcircuit below it.\nThe possibility space represented by a subcircuit can itself be seen to\npropagate. Instead of specific states (logic values), an algebraic gate\noutputs its entire subcircuitry possibility space, as a possibility wave.\nThese waves interact at gates to produce algebraic minimization rather than\narithmetical evaluation.\n"
      },
      "date": 1659269609359
    },
    {
      "type": "add",
      "id": "53f71e196c932fee",
      "item": {
        "type": "paragraph",
        "id": "53f71e196c932fee",
        "text": "By tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,"
      },
      "after": "ec07b84d1096481f",
      "date": 1659269610634
    },
    {
      "type": "edit",
      "id": "53f71e196c932fee",
      "item": {
        "type": "paragraph",
        "id": "53f71e196c932fee",
        "text": "By tracing the propagation of possibility waves from concurrent free inputs up\nthrough the circuit on clock tick at a time, we see the dynamic interaction of\npossibility spaces as they pass through each gate.  An optimized algebraic\ncircuit is one in which no interaction between waves occurs.  In the above\nexample,"
      },
      "date": 1659269647330
    },
    {
      "item": {
        "type": "code",
        "id": "b2f8f86cc97fa23e",
        "text": "(a) ((a) b)"
      },
      "id": "b2f8f86cc97fa23e",
      "type": "add",
      "after": "46f574ec6dfb1c8e",
      "date": 1659269649877
    },
    {
      "id": "b2f8f86cc97fa23e",
      "type": "move",
      "order": [
        "1ab4a204a652018d",
        "fd80ca7a835151b4",
        "3dfab6956b6bf3d9",
        "b77fe97e356910a7",
        "84d06a399728e5f8",
        "b8bee28118900e07",
        "8bd91555c3d5d1be",
        "4e713e8560783218",
        "080fe67027a7c3a3",
        "f3e63733f3ba93f6",
        "9bdc5ebe1f8a9f48",
        "376045f13c76da87",
        "ec07b84d1096481f",
        "53f71e196c932fee",
        "b2f8f86cc97fa23e",
        "46f574ec6dfb1c8e"
      ],
      "date": 1659269653188,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "add",
      "id": "46f574ec6dfb1c8e",
      "item": {
        "type": "paragraph",
        "id": "46f574ec6dfb1c8e",
        "text": "\ngenerates a harmonic interaction, the identical (a) waves interfere.  The\ninterference rules are logical/symbolic rather than light/photonic.\n\n            (( ) a) ==>                   Absorption\nAny constants are immediately inverted/absorbed by their environment.\n            (a a) ==> (a)                 Coalesce\nAny identical signals are redundant, one absorbs the other.\nThis basis provides a wave-like model in which identicality reinforces the\nsame signal without value.  Call this pervasive interference.  (Recall that\nthe variable name \"a\" represents a named signal source propagating the\nsuperimposed value both-high-and-low)\nCoalesce is independent of environmental inversions, but not symmetrical, in\nthat the outermost signal is dominant.\n      (a ((((a))))) ==> (a (((( )))))\n      (a (a ((a (a))))) ==> (a (  ((  ( )))))\nWhen multiple named signals are propagated through an algebraic circuit, the\ncircuit minimizes its possibility space by eliminating identical possibility\nwaves through pervasive interference.\n      ((a) ((a) b)) ==> ((a) (    b))\nThus any (poorly designed) circuit can be logically optimized by treating it\nas an algebraic circuit and propagating possibility waves through it.  Eg:\n      ((a) (a b))\nPossibility wave analysis:\naab (a) (a b) ((a) )\n        a\nISSUE:  What is the possibility evolution of difficult to reduce circuits?\n"
      },
      "after": "53f71e196c932fee",
      "date": 1659269658366
    },
    {
      "type": "edit",
      "id": "b2f8f86cc97fa23e",
      "item": {
        "type": "code",
        "id": "b2f8f86cc97fa23e",
        "text": "(a) ((a) b)"
      },
      "date": 1659269659808
    },
    {
      "type": "fork",
      "date": 1659269661411
    }
  ]
}