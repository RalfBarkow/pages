{
  "title": "Dynamic Extent",
  "story": [
    {
      "type": "html",
      "text": "In [[Lisp Language]], the term dynamic means, essentially, \"set up and torn down along with stack frames\", at least when the discussion is about the immediate execution environment of a thread; of course there are other uses of the term dynamic. Of course the term has other meanings, like in [[Dynamic Typing]] or [[Dynamic Language]].",
      "id": "fa334ca636c6deb06d11cc6b1a62242e"
    },
    {
      "type": "html",
      "text": "\nObjects that disappear when scopes terminate have [[Dynamic Extent]], and there is a way to declare to the compiler that something may have such an extent.  The term [[Dynamic Context]] refers to the contents of the entire activation chain of the thread under consideration, as a whole. Things that are in the [[Dynamic Context]] are for instance catch handlers, restarts, error handlers, unwind protects, and bindings of [[Special Variable]]s.",
      "id": "3e961c5c54c53cfdec3d33777a6186a2"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?DynamicExtent c2.com]",
      "id": "62b7b451fabda3a032759bbeacd07e57"
    }
  ],
  "journal": [
    {
      "date": 1050046597000,
      "id": "db7803ad13efc0c247b91c4c43e92c6b",
      "type": "create",
      "item": {
        "title": "Dynamic Extent",
        "story": [
          {
            "type": "html",
            "text": "In [[Lisp Language]], the term dynamic means, essentially, \"set up and torn down along with stack frames\", at least when the discussion is about the immediate execution environment of a thread; of course there are other uses of the term dynamic. Of course the term has other meanings, like in [[Dynamic Typing]] or [[Dynamic Language]].",
            "id": "fa334ca636c6deb06d11cc6b1a62242e"
          },
          {
            "type": "html",
            "text": "\nObjects that disappear when scopes terminate have [[Dynamic Extent]], and there is a way to declare to the compiler that something may have such an extent.  The term [[Dynamic Context]] refers to the contents of the entire activation chain of the thread under consideration, as a whole. Things that are in the [[Dynamic Context]] are for instance catch handlers, restarts, error handlers, unwind protects, and bindings of [[Special Variable]]s.",
            "id": "3e961c5c54c53cfdec3d33777a6186a2"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?DynamicExtent c2.com]",
            "id": "62b7b451fabda3a032759bbeacd07e57"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1674056444082
    }
  ]
}