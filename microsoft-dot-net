{
  "title": "Microsoft Dot Net",
  "story": [
    {
      "type": "html",
      "text": "While describing [[Dot Net]] to [[Information Week]] in Feb2002, Bill Gates said these of [[Microsoft Dot Net]]",
      "id": "7122a3e01e0562da5e8e1f93ce4b5aa4"
    },
    {
      "type": "html",
      "text": " <b>the bet we were making around XML and Web Services...</b>",
      "id": "19ef4a6023bf52fd71ec1986ae2b0ec9"
    },
    {
      "type": "html",
      "text": "<i>Oh, so that's why XML is so popular. Sigh.</i> ",
      "id": "c0338f6dd43231e8d8ced5a57140afad"
    },
    {
      "type": "html",
      "text": " <b>the direction we chose for all our R&D</b>",
      "id": "6f3ace5db52efb0ec67f299d2efb19d6"
    },
    {
      "type": "html",
      "text": " <b>one common architecture... .Net</b>",
      "id": "cbea4e0ead905c18cbc53fc91509c697"
    },
    {
      "type": "html",
      "text": " <b>architecture for this decade</b>",
      "id": "968c0f2bbf8ee9088d290616321d20ed"
    },
    {
      "type": "html",
      "text": " <b>hundreds of servers...scale out..key to the .NET strategy</b>",
      "id": "bc5703acd8d27044d2b6be30b511b915"
    },
    {
      "type": "html",
      "text": "\nsee all this in [http://www.informationweek.com/shared/printableArticle.jhtml?articleID=6500999 www.informationweek.com]",
      "id": "d79ce6faa4b66d6638b597774284bcab"
    },
    {
      "type": "html",
      "text": "\n[[Microsoft Dot Net]] is the flagship platform from [[Microsoft Corporation]]. [[Microsoft Indigo]] and related projects are being marketed as [[Microsoft Dot Net]] version 3 in [[Microsoft Windows Vista]].",
      "id": "9ee1a329d51a3f58c740874fe3c56ed5"
    },
    {
      "type": "html",
      "text": " Jun05 -- ref in [[Microsoft Indigo]] resources section about MS wanting to reclassify that technology as separate from [[Dot Net]] proper, as response to perceived threat posed by [[Mono Project]].",
      "id": "5f914a98944f4d44784f673d4ce56ec3"
    },
    {
      "type": "html",
      "text": "<i>Note exceptions to afore stated views in a subsequent section, or maybe in a new page?</i>",
      "id": "1b61e40021aef425eab45fd3c593e430"
    },
    {
      "type": "html",
      "text": "\nThe Intel based proprietary operating system has captured over 90% of all desktop computing market. The computing giant, [[Microsoft Corporation]], crafted [[Microsoft Dot Net]] platform over this installed base and has directed its efforts to enabling technologies (e.g. IPV6), products (e.g. mobile devices), processes (e.g. [[Service Oriented Architecture]]), legacy application integration (e.g. to [[Big Blue]]). See [[Patented Dot Net]]",
      "id": "24805ef7d05ae42ee61718493b2826c3"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "\nThe .NET framework is comprised of the following:",
      "id": "02a96569f0755b20d3f9338a9a2f4663"
    },
    {
      "type": "html",
      "text": " [[Windows Forms]] and [[Web Forms]] (Layer 4)",
      "id": "5fc8d67af4b3aad246a20b575d8cc98c"
    },
    {
      "type": "html",
      "text": " [[Web Service]] (Layer 4)",
      "id": "43b89a42fb96c10ee38bc570648df044"
    },
    {
      "type": "html",
      "text": " [[Asp Dot Net]] (Formerly ASP+, XSP) (Layer 4)",
      "id": "4440fb8288259c2924973dc8dad840e3"
    },
    {
      "type": "html",
      "text": " Data and XML (layer 3)- [[Ado Dot Net]]",
      "id": "18426022eb77a5d606cc78b8ce9dd90d"
    },
    {
      "type": "html",
      "text": " [[Dot Net Base Class Libraries]] (Layer 2) - System, Debug, Internet, [[Dot Net Remoting]], etc",
      "id": "25a7bc7b193a59283ae383182b0907c7"
    },
    {
      "type": "html",
      "text": " [[Common Language Runtime]] (CLR) (Layer 1)",
      "id": "67d355c72ee71dc36870453001c8bc15"
    },
    {
      "type": "html",
      "text": " [[System Services]] (Layer 0)",
      "id": "80ed1667173c89e6daf08f4b217ef4e7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Dot Net]] recent developments</b>",
      "id": "5a9f3c19448fa656c0db64ba795dfddc"
    },
    {
      "type": "html",
      "text": "\nAug 04 news of [[Windows Xp]] SP2 problems & workarounds for [[Dot Net]] listed by MS",
      "id": "2405593f26d2f6e104589393dfc7db5b"
    },
    {
      "type": "html",
      "text": "\nIn June 04 [[Microsoft Express]], a set of lightweight entry point products, was announced and betas made available",
      "id": "46997f4f0e90f10c0c79e4d0d12bf254"
    },
    {
      "type": "html",
      "text": "\nIn March 2004 saw this Microsoft roadmap",
      "id": "38ad048ec2ff8c2fcb352ad298deedc7"
    },
    {
      "type": "html",
      "text": " Whidbey is now called Visual Studio 2005",
      "id": "8aa0f8e46f4deb03c73afb5b6601df62"
    },
    {
      "type": "html",
      "text": " [[Dot Net Framework]] will be released as V2.0",
      "id": "9344963130cf1cdce3ce1552d063d354"
    },
    {
      "type": "html",
      "text": " New Yukon SQL database support enhancements",
      "id": "1ba3f1c4683906411d1c3386c4cd6d40"
    },
    {
      "type": "html",
      "text": "\nSource at [http://msdn.microsoft.com/vstudio/productinfo/roadmap.aspx msdn.microsoft.com]",
      "id": "c3aca0936e2dfe286166dc18d7719922"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>Not for Windows Only?</b> ",
      "id": "69c4fe2473be64ad3ae133f692e3b1ad"
    },
    {
      "type": "html",
      "text": "\nSee [[Dot Net For Linux]] and [[Mono Project]]. ",
      "id": "ba2977c53911b73264bbe226cb8cf12e"
    },
    {
      "type": "html",
      "text": "\nSee [http://www.go-mono.com www.go-mono.com] for an opensource and portable implementation, or [http://download.microsoft.com/download/.netframesdk/CLI3/1.0/WXP/EN-US/sscli_20021101.tgz download.microsoft.com] and [http://download.microsoft.com/download/.netframesdk/CLI3/1.0/WXP/EN-US/sscli_ref_20021101.tgz download.microsoft.com] for a shared-source implementation (from Microsoft!) that runs on Windows and FreeBSD. (updated the link on 17 October 2003) ",
      "id": "bc0364082cbc0e7ae04c372eb7f61fc7"
    },
    {
      "type": "html",
      "text": "<i>A different perspective on the topic</i>",
      "id": "ae81feb9849ae67d0eabf85c50a05359"
    },
    {
      "type": "html",
      "text": "\nHere in Austria we have a saying that \"someone is believing in hot ice-cream\" when someone believes in things that just don't go together technically. Please note the careful wording of the speech, which avoids to tell anything about the server side. .NET is a heavyweight technology that will not \"just run\" everywhere. There is a large gray zone between a simple HTML-like access of a protocol from the client side to a fully supported .NET on the server side. -- [[Helmut Leitner]]",
      "id": "d001f5be9962b37262eacabb1a52be17"
    },
    {
      "type": "html",
      "text": "\nThe CLR (VM) is like a virtual processor executing its machine (byte, word) codes. Talking about its portability is of no significance at all. Everything important is in the libraries. They can't be independent, because someone has to do all the system related stuff. Some months ago there was no support for Win98, now I read (following your links) that there are restrictions with respect to web development and server components. I really don't know what this means. I think that C# is an important improvement (has learned a lot from Java problems) and I will try it as soon as I have a chance to, but I won't if Win9x systems aren't fully supported. The question of lightweight vs heavyweight depends on how MS handles .NET: it may force customers on upgrade paths and it may offer portability with hidden traps and obstacles. This is what I meant by 'heavyweight'. -- [[Helmut Leitner]]",
      "id": "b9c578f0cc78ddca1c424c8979811a2c"
    },
    {
      "type": "html",
      "text": "<i>I think what you guys were talking about was... Did Ballmer say .NET would be running on Linux or not? And clearly he did not. Look, if MS was announcing .NET on Linux, it would have to be more clear than that, eh? From my angle, it sounds as if he is saying that [[Web Services]] developed using .NET would be consumable from Linux. But it's just CEO-speak, there's no detail, so we don't know. HL is right. It doesn't mean .NET won't be available on Linux, it only means Ballmer didn't commit to anything. -- [[Dino Chiesa]], 8 May 2001</i>",
      "id": "fd43415f60811de3de90561aac82ff59"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Microsoft Dot Net]] and the SUN</b>",
      "id": "6e2eaa876fac888bb8ec9534071f12de"
    },
    {
      "type": "html",
      "text": "\nThe key moment when Microsoft and Sun fell out over Java and the very valuable possibility of decent Java COM integration was lost is well worth mulling over on Wiki, in my view. -- [[Richard Drake]]; feelings shared by [[Stephan Houben]]",
      "id": "6d13bb1e558c694760641921cd01feda"
    },
    {
      "type": "html",
      "text": "<i>I work at Sun. It is specifically my job to integrate Java and COM (see [http://developer.java.sun.com/developer/earlyAccess/j2eecas/ developer.java.sun.com] for some first steps in that direction). The full name of the thing is [[Java Two Enterprise Edition Client Access Services Com Bridge]] or [[Jcas Com Bridge]] for short. -- [[Phil Goodwin]]</i>",
      "id": "2f7eba43357a253010a8998247ff6c5f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "There's a (now unsupported) list of .NET resources of various sorts on the DevX website: [http://archive.devx.com/dotnet/resources/ archive.devx.com].",
      "id": "509aba176cd17413e0a06568899d2e2b"
    },
    {
      "type": "html",
      "text": "\nMany introductory books on [[Microsoft Dot Net]] exist.",
      "id": "fc908b43a9380416b3c6445f5dc7d534"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Dot Net]] is serious Business</b>",
      "id": "3b040dff36e9119b9a70eedaf7fff770"
    },
    {
      "type": "html",
      "text": "\nWhat I don't understand about [[Dot Net]] is how MS is going to make money. If it's all open and cross platform, doesn't that take revenue away from Windows sales and open the door to serious competition in the tools arena? Why are they doing this and what do they expect to gain? I have to admit that I'm still looking for the snag or the lock-in. -- some guy",
      "id": "8ea239194fd63ad70ae737a785a16175"
    },
    {
      "type": "html",
      "text": "\nPeople also asked how Sun could make money from Java when they gave it away for free. I think the basic answer is that if you provide some way to make it easier for people to develop software for your systems, you sell more systems. Your competitors may sell more systems too, but so what? Microsoft's well-tuned .NET implementation on Windows servers with [[Sql Server]], [[Back Office]], and all that other MS stuff, along with support for legacy Windows apps as well, will always be more attractive to some than a free mostly-compatible version for some other operating system, so they will sell more Windows licenses. They can get more revenue for development tools and training materials. They may grab some mindshare from Java developers who are using Java on Windows systems just to avoid the Win32 API, MFC, and Visual Basic. I don't think .NET brings any snag or lock-in, but it strengthens the lock-in they already have. -- [[Kris Johnson]]",
      "id": "a0a48b267e831884090f6927c3eba8e1"
    },
    {
      "type": "html",
      "text": "<i>Microsoft currently has over 95% of OS market that is not [[Dot Net]]. It cannot grow much anymore. However if the 95% current OS market is obsolete (think of it like DOS before days of Windows) then Microsoft has huge room to grow, to get people to move from <b>prehistoric</b> architecture to the [[Trustworthy Computing]] [[Service Oriented Architecture]] that is branded as [[Microsoft Dot Net]]. --dl</i>",
      "id": "7a43d7e9176fac3000f813e2faef3576"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>Microsoft.NET history</b>",
      "id": "924094348f98d67406322cc8046c05a5"
    },
    {
      "type": "html",
      "text": "\n[[Microsoft Dot Net]] was announced in alpha form at the [[Micro Soft]] PDC, in July 2000. [[Microsoft Dot Net]] replaces the terms [[Next Generation Windows Services]] and the COM+ 2 runtime. Basically, Microsoft's announcement is quite large. They propose to replace COM and proprietary Windows calls with a cross-platform way of creating [[Web Services]] using Internet standards like XML, SOAP, and HTML. The [[Common Language Runtime]] can run on <b>any</b> OS or machine.",
      "id": "93ba301f3fd8f0b0bb3cbe2e6dae4203"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Cutting Edge]] [[Dot Net]]</b>",
      "id": "42f3e2fff32779e454622ea685ba75f2"
    },
    {
      "type": "html",
      "text": "\n[[Csharp Language]] will someday become [[Cee Omega]] [based on 83.146.13.12 information]",
      "id": "e9684cb64f4716db3c149bd2b9279d73"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Information Security]] concerns for [[Microsoft Dot Net]]</b>",
      "id": "b267932594a20c1d8b243904df6fc84a"
    },
    {
      "type": "html",
      "text": "\nA 2001 article, <i>Building a Secure .NET infrastructure</i>, is a good starting point. See [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnw2kmag01/html/securenet.asp msdn.microsoft.com]",
      "id": "f2420609a6154cdbdae712ac372c8ac5"
    },
    {
      "type": "html",
      "text": "<i>Security Through the Lifetime of a Managed Process: Fitting It All Together</i> excerpt from book \".NET framework Security\" at \n[http://searchwebservices.techtarget.com/content/0,290959,sid26_gci856076,00.html searchwebservices.techtarget.com]",
      "id": "8f241de5d470763b0a8e1f281a9e9b8b"
    },
    {
      "type": "html",
      "text": "<i>Security Enhancements in the .NET Framework 2.0</i> at [http://msdn.microsoft.com/msdnmag/issues/05/01/SecurityBriefs/default.aspx msdn.microsoft.com]",
      "id": "40f84ab10cc7737f68a00e1205c37186"
    },
    {
      "type": "html",
      "text": " See also [[Information Security]] section in [[Dot Net Framework]]",
      "id": "c57af0ae90730d95a921e74d7d969636"
    },
    {
      "type": "html",
      "text": "\nA one page summary available as KB 330246\nFull guide/roadmap at [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/secnetlpMSDN.asp msdn.microsoft.com]",
      "id": "9ee49de0f30824455e7ad385c7dc2732"
    },
    {
      "type": "html",
      "text": "====",
      "id": "9f9142624bff8c31fd5a85f3e65ad878"
    },
    {
      "type": "html",
      "text": "\nWhat about [[Microsoft Security]] for [[Dot Net]] and its implications? I'm really concerned by the complexity (one might say Byzantine complexity) of the system: you have ActiveX style certificates, Java-style code validators, and a whole spectrum of rights an applet can possess. Even if it's technically feasible, it's going to be much harder for end-users and developers to understand how all the interlocking rights interact, and the consequences of privilege boosting are pretty dire. -- [[Peterda Silva]]",
      "id": "bd7f1ed9354f8b72d3bb39b2fe924769"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Dot Net]] and Xml</b>",
      "id": "924a1913abe94a8f5b6b66287cf00d02"
    },
    {
      "type": "html",
      "text": "\nAn introduction to the more important Xml classes in [[Dot Net]] is located at [http://www.informit.com/articles/printerfriendly.asp?p=170916 www.informit.com]",
      "id": "babac09fbf8933851b32b1cd96ddd6fc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "\n[[Is Dot Net Innovative]]? [[Why Another Component Technology]]???",
      "id": "2d532ee02bdfcdeb3a96452f844382c8"
    },
    {
      "type": "html",
      "text": "\nSee also: [[Common Language Runtime]], [[Dot Net Ecma Process]], [[Network Publishing]], [[Web Services]], [[Dot Net As Distributed Object System]]",
      "id": "3d1f1767e504c535f6d6fe5af56cb390"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>Exceptions to views expressed regarding the importance of [[Windows Longhorn]] and [[Microsoft Indigo]] to defining what is [[Microsoft Dot Net]] moved here</b> (last discussed in 2004)",
      "id": "049cb1f1285127364031a2c51038a752"
    },
    {
      "type": "html",
      "text": "[[This is inaccurate. [[Windows Longhorn]] will not \"take over\" [[Microsoft Dot Net]], the language platform. [[Windows Longhorn]] will be based on [[Microsoft Dot Net]]. The statement above makes it seem as though [[Microsoft Dot Net]] was intended to have a brief lifespan, which is inaccurate.",
      "id": "0f444276e49c78ceb68ca355acf1e2c9"
    },
    {
      "type": "html",
      "text": "\nThis confusion arises from the extremely poorly-conceived name \".Net\", which means different things in different contexts. The other meaning of [[Microsoft Dot Net]] - a distributed service platform - is a different story. -- arlied]]",
      "id": "049c7838aeccc734b2aa46f80abb1688"
    },
    {
      "type": "html",
      "text": "\nWhen I wrote the first paragraph in this section I meant [[Microsoft Indigo]] will be the next version of [[Dot Net]], if the company still choose to call it that. [[Microsoft Indigo]] will be far different from [[Dot Net]] of today, which relies on the now legacy [[Component Object Model]], through [[Com Inter Op]], for transaction processing and the like. -- dl",
      "id": "e898d30c8093b30e4d883ff8616e09da"
    },
    {
      "type": "html",
      "text": "<i>Indigo is just a communications infrastructure. The core of [[Dot Net]] is the [[Common Language Runtime]] and the [[Dot Net Base Class Libraries]], which have nothing to do with Indigo whatsoever. The things Indigo will obsolete are [[Dot Net Remoting]] and the current [[Web Services]] classes.</i> -- 212.158.251.129",
      "id": "b1a597a88910deb9d59dda068947518a"
    },
    {
      "type": "html",
      "text": " I think a lot of Xml protocols will change by then ([[Windows Longhorn]] arrival) as well. Already we see [[Web Services Extensions]] (WSE) v2 released in Jul04 and is incompatible with the original WSE. So it is fair to say that [[Microsoft Indigo]] will be the next [[Dot Net]]. How will [[Com Inter Op]] work in 2006/2007? I expect in [[Windows Longhorn]] it will be made much less important, in order to complete the breakaway from the [[Distributed Internet Architecture]] legacy. -- dl''",
      "id": "277f33e4f9239e81a12485fe7b05bf3e"
    },
    {
      "type": "html",
      "text": " [[Microsoft Indigo]] is just a small component of a large and complex system, though. Saying Indigo will be the next [[Dot Net]] is like saying that JAX-RPC (to pick the first vaguely comparable JSR I came across) will be the next java. -- [[Mike Roome]]",
      "id": "8138910fe26806de0cd4089d70a399af"
    },
    {
      "type": "html",
      "text": "\nAs an application developer, I would have to be prepared to rewrite any [[Web Services]] application using [[Microsoft Dot Net]] provisions of 2004, once [[Microsoft Indigo]] is sufficiently defined. So whatever way we call it (changed or enhanced), there is going to be significant work in re-implementation. Also bear in mind [[Microsoft Corporation]] is still learning what it takes to implement [[Trustworthy Computing]] to the point customers become confident about conducting transactions and business services across organisation boundaries.",
      "id": "70fb57aea03ed49ddd92a157d1f1e683"
    },
    {
      "type": "html",
      "text": "<i>Not exactly. The old [[Web Services]] architecture will still be there (if you can credit [[Micro Soft]] for anything, you have to admit they do an incredible job of preserving <b>backwards-compatibility</b>), and your old apps using it will continue to work perfectly well. And [[Dot Net]] is about significantly more than just [[Web Services]] (although given the muddled marketing a few years ago, it's easy to see how misconceptions can arise), and in the [[Windows Longhorn]] timeframe, even more focus is going to be put on client-side development. The [[Dot Net]] platform (which I would define as the runtime and base class libraries) isn't going anywhere, any more than Java went away when Swing replaced AWT. Having said that, if you're focussed on [[Web Services]], then yes, it is a fairly major upheaval, but if you look at the system as a whole, though, <b>it's just another new API</b>. -- [[Mike Roome]]</i>",
      "id": "1ed07e153c2c691356191d7373f93b59"
    },
    {
      "type": "html",
      "text": "\nSee [[Microsoft Indigo]] and [[Windows Longhorn]] for non [[Web Services]] related changes.",
      "id": "f37dc0656574389e30c5ad1ff7a48073"
    },
    {
      "type": "html",
      "text": "\nAPI or not, it will wag the [[Dot Net]] dog in many ways as the argument is for customers to move to implementing [[Service Oriented Architecture]] using [[Microsoft Indigo]] and other [[Windows Longhorn]] features (todays [[Dot Net]] would not do it). -- dl",
      "id": "a75261916c88354d379bb5738bce3166"
    },
    {
      "type": "html",
      "text": "\nAlso refer [[Microsoft Dot Net Discussions]]",
      "id": "66e36ae067984b98c8cdcebcc84c1111"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "<b>[[Dot Net]] Information Sharing</b>",
      "id": "69034bf6d984c8c03103a9bc838ee99a"
    },
    {
      "type": "html",
      "text": "\nOne of the most basic questions about [[Hail Storm]] relates to access: who will be able to access [[Hail Storm]] services? (And more pointedly: will a Microsoft runtime be required?)",
      "id": "7a6414142442d9cd4b233ebb5149962a"
    },
    {
      "type": "html",
      "text": "\n[[Hail Storm]] can be accessed from any device, service or application with an Internet connection, the ability to identify a user, and the ability to send and receive SOAP messages. All interactions are text-based SOAP messages regardless of underlying platform, operating system, object model, programming language, application or network provider. [[Hail Storm]] is accessible from both clients and servers, and no Microsoft runtime is required on either the client or the server. Microsoft has already demonstrated [[Hail Storm]] services being accessed from a Linux machine, a Macintosh, and a Palm Pilot.",
      "id": "409498b207cadca7f78c80e47017fc39"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "What if I don't need to write a web service? What if I just need to write an <i>application</i>? Does .NET help or hinder me? (or neither?)",
      "id": "b2dcc684c52d2885320bd521686ff413"
    },
    {
      "type": "html",
      "text": "<i>Helps, in my view. A decent class library, automatic memory management, less Win32 warts and a large choice of languages</i>",
      "id": "5f7d51afd284f994c0603901c8a130e6"
    },
    {
      "type": "html",
      "text": "\nAgree. Using C# to develop GUIs and console apps lets one do the kinds of things that are easy with [[Visual Basic]], but without the horrible language. Every once in a while, I find something missing, but it is easy to call Win32 APIs or COM objects to fill in those voids. If you like Java, but need better integration with the Windows world, then you'll probably like C# and .NET.",
      "id": "e675c83d15ea0cd1980543b660655483"
    },
    {
      "type": "html",
      "text": " OTOH, a [[Dot Net]] application is less stable as both languages (and extensions such as [[Web Services]]) and OS (the framework) evolves. If a now obsolete version of Microsoft product (e.g. [[Vb Classic]] / ASP etc) serve your need adequately, maybe it should be considered as well (as long as there are still lots of similar legacy applications still around).",
      "id": "9c48e7d4fb9911646d660376b3665140"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "\nI hear someone from Microsoft is recommending new developers to use this [http://www.4guysfromrolla.com/ www.4guysfromrolla.com]. What do people here think of this particular site, compared to the hundreds of others around (e.g. codeproject, gotdotnet, etc.)? -- dl",
      "id": "77690d6bb72deee2ee90b2151796baf8"
    },
    {
      "type": "html",
      "text": "\nMore than one person noted in 2005 that [[Microsoft Unix]] is having a high profile presence in \"Linux Today\". Hopefully [[Windows Server Two Thousand Three]] and its descendants will not run on high powered Unix boxes ([[Big Blue]] has a few) too quickly, to leave room for innovation.",
      "id": "330eedd0a8fe1906ed2604b61f1843b9"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "Language Integrated Queries (LINQ) is something I am having trouble getting my head around.  [[Embedded Sql]] was something I remember as not having worked out so well in the 70s but now it seems to be a very important part of the new version of [[Microsoft Dot Net]].  There are some clever extensions to the language involving anonymous delegates and type inference associated with LINQ, but I don't understand what has changed in the programming landscape to make it a good idea to once more introduce [[Embedded Sql]] into a mainstream language.  What am I missing? -- [[Skip Sailors]]",
      "id": "1e90c1b1672d27e44df1da2bc506a082"
    },
    {
      "type": "html",
      "text": "<i>Well, there is a difference, first, LINQ is not SQL, SQL should be standard, but the fact is that you can not be 100% sure that a particular SQL sentence will work in all databases, but with LINQ, custom mappers can be built, and thanks to them the exact same LINQ sentence can be used for any of the supported databases (and support can be added by third party developers for particular databases, or even for OSQL languages (like [[Hiber Nate]] HSQL). Another difference is that LINQ can be extended to be used as a query language for XML files, CSV files, or even in memory structures (Arrays, [[Linked Lists]], [[Hash Maps]]) and therefore gives you the ability to \"query\" semi-declaratively memory structures that normaly can only be processed with procedural code... what is the advantage? well, with traditional control structures, if you are looking for a Person object in an array of Persons, you have to loop from start to finish, object by object, wasting the potential optimizations that current multi-core computers could offer, but with LINQ you can specify that you want all the Person object that match with a particular condition and LINQ will be able to use the best possible strategy to do the search (parallel processing, indexing, etc, etc) that effectively brings the advantages of optimized query processing in to in memory operations (finally we have a language that transparently takes advantage of the benefits of [[Nimble Databases]], and it doest it even for simple collection structures)</i>",
      "id": "cc8a8b3671a1c57f4ea1582ca91626a3"
    },
    {
      "type": "html",
      "text": "\nI suspect its partly due to holdout fans (like me) of \"data-oriented languages\" (such as [[Ex Base]], Paradox, and [[Fox Pro]]) where DB-like collection-orientation was built right into the language. Going through an OOP API for such is a pain compared to having it built in and us data fans miss the more direct \"older\" way. MS has a habit of dumping just about every paradigm/flavor into a tool in order to capture a wide audience; and perhaps to stay ahead of the open-source clones by out-featuring them. But it  creates a monster. They will do to the new VB what they did to the old one: clutter it up over time by extending onto an outdated language platform. (And Windows too for that matter. It's the MS way.) --top",
      "id": "be35ec35bf9363ff9d75ed632b9300cb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "06f428ca49c7280f3ffa9937ae645b46"
    },
    {
      "type": "html",
      "text": "[[Category Dot Net]] [[Category Microsoft]] [[Category Enterprise Computing Concerns]]",
      "id": "63f2c19b4745fb260a73b8831a2b5667"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?MicrosoftDotNet c2.com]",
      "id": "6fc51c3992e5dfd51193aad0d0171436"
    }
  ],
  "journal": [
    {
      "date": 1334104556000,
      "id": "ad1cd71122eb5bb4c51b6a206ce32c24",
      "type": "create",
      "item": {
        "title": "Microsoft Dot Net",
        "story": [
          {
            "type": "html",
            "text": "While describing [[Dot Net]] to [[Information Week]] in Feb2002, Bill Gates said these of [[Microsoft Dot Net]]",
            "id": "7122a3e01e0562da5e8e1f93ce4b5aa4"
          },
          {
            "type": "html",
            "text": " <b>the bet we were making around XML and Web Services...</b>",
            "id": "19ef4a6023bf52fd71ec1986ae2b0ec9"
          },
          {
            "type": "html",
            "text": "<i>Oh, so that's why XML is so popular. Sigh.</i> ",
            "id": "c0338f6dd43231e8d8ced5a57140afad"
          },
          {
            "type": "html",
            "text": " <b>the direction we chose for all our R&D</b>",
            "id": "6f3ace5db52efb0ec67f299d2efb19d6"
          },
          {
            "type": "html",
            "text": " <b>one common architecture... .Net</b>",
            "id": "cbea4e0ead905c18cbc53fc91509c697"
          },
          {
            "type": "html",
            "text": " <b>architecture for this decade</b>",
            "id": "968c0f2bbf8ee9088d290616321d20ed"
          },
          {
            "type": "html",
            "text": " <b>hundreds of servers...scale out..key to the .NET strategy</b>",
            "id": "bc5703acd8d27044d2b6be30b511b915"
          },
          {
            "type": "html",
            "text": "\nsee all this in [http://www.informationweek.com/shared/printableArticle.jhtml?articleID=6500999 www.informationweek.com]",
            "id": "d79ce6faa4b66d6638b597774284bcab"
          },
          {
            "type": "html",
            "text": "\n[[Microsoft Dot Net]] is the flagship platform from [[Microsoft Corporation]]. [[Microsoft Indigo]] and related projects are being marketed as [[Microsoft Dot Net]] version 3 in [[Microsoft Windows Vista]].",
            "id": "9ee1a329d51a3f58c740874fe3c56ed5"
          },
          {
            "type": "html",
            "text": " Jun05 -- ref in [[Microsoft Indigo]] resources section about MS wanting to reclassify that technology as separate from [[Dot Net]] proper, as response to perceived threat posed by [[Mono Project]].",
            "id": "5f914a98944f4d44784f673d4ce56ec3"
          },
          {
            "type": "html",
            "text": "<i>Note exceptions to afore stated views in a subsequent section, or maybe in a new page?</i>",
            "id": "1b61e40021aef425eab45fd3c593e430"
          },
          {
            "type": "html",
            "text": "\nThe Intel based proprietary operating system has captured over 90% of all desktop computing market. The computing giant, [[Microsoft Corporation]], crafted [[Microsoft Dot Net]] platform over this installed base and has directed its efforts to enabling technologies (e.g. IPV6), products (e.g. mobile devices), processes (e.g. [[Service Oriented Architecture]]), legacy application integration (e.g. to [[Big Blue]]). See [[Patented Dot Net]]",
            "id": "24805ef7d05ae42ee61718493b2826c3"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "\nThe .NET framework is comprised of the following:",
            "id": "02a96569f0755b20d3f9338a9a2f4663"
          },
          {
            "type": "html",
            "text": " [[Windows Forms]] and [[Web Forms]] (Layer 4)",
            "id": "5fc8d67af4b3aad246a20b575d8cc98c"
          },
          {
            "type": "html",
            "text": " [[Web Service]] (Layer 4)",
            "id": "43b89a42fb96c10ee38bc570648df044"
          },
          {
            "type": "html",
            "text": " [[Asp Dot Net]] (Formerly ASP+, XSP) (Layer 4)",
            "id": "4440fb8288259c2924973dc8dad840e3"
          },
          {
            "type": "html",
            "text": " Data and XML (layer 3)- [[Ado Dot Net]]",
            "id": "18426022eb77a5d606cc78b8ce9dd90d"
          },
          {
            "type": "html",
            "text": " [[Dot Net Base Class Libraries]] (Layer 2) - System, Debug, Internet, [[Dot Net Remoting]], etc",
            "id": "25a7bc7b193a59283ae383182b0907c7"
          },
          {
            "type": "html",
            "text": " [[Common Language Runtime]] (CLR) (Layer 1)",
            "id": "67d355c72ee71dc36870453001c8bc15"
          },
          {
            "type": "html",
            "text": " [[System Services]] (Layer 0)",
            "id": "80ed1667173c89e6daf08f4b217ef4e7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Dot Net]] recent developments</b>",
            "id": "5a9f3c19448fa656c0db64ba795dfddc"
          },
          {
            "type": "html",
            "text": "\nAug 04 news of [[Windows Xp]] SP2 problems & workarounds for [[Dot Net]] listed by MS",
            "id": "2405593f26d2f6e104589393dfc7db5b"
          },
          {
            "type": "html",
            "text": "\nIn June 04 [[Microsoft Express]], a set of lightweight entry point products, was announced and betas made available",
            "id": "46997f4f0e90f10c0c79e4d0d12bf254"
          },
          {
            "type": "html",
            "text": "\nIn March 2004 saw this Microsoft roadmap",
            "id": "38ad048ec2ff8c2fcb352ad298deedc7"
          },
          {
            "type": "html",
            "text": " Whidbey is now called Visual Studio 2005",
            "id": "8aa0f8e46f4deb03c73afb5b6601df62"
          },
          {
            "type": "html",
            "text": " [[Dot Net Framework]] will be released as V2.0",
            "id": "9344963130cf1cdce3ce1552d063d354"
          },
          {
            "type": "html",
            "text": " New Yukon SQL database support enhancements",
            "id": "1ba3f1c4683906411d1c3386c4cd6d40"
          },
          {
            "type": "html",
            "text": "\nSource at [http://msdn.microsoft.com/vstudio/productinfo/roadmap.aspx msdn.microsoft.com]",
            "id": "c3aca0936e2dfe286166dc18d7719922"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>Not for Windows Only?</b> ",
            "id": "69c4fe2473be64ad3ae133f692e3b1ad"
          },
          {
            "type": "html",
            "text": "\nSee [[Dot Net For Linux]] and [[Mono Project]]. ",
            "id": "ba2977c53911b73264bbe226cb8cf12e"
          },
          {
            "type": "html",
            "text": "\nSee [http://www.go-mono.com www.go-mono.com] for an opensource and portable implementation, or [http://download.microsoft.com/download/.netframesdk/CLI3/1.0/WXP/EN-US/sscli_20021101.tgz download.microsoft.com] and [http://download.microsoft.com/download/.netframesdk/CLI3/1.0/WXP/EN-US/sscli_ref_20021101.tgz download.microsoft.com] for a shared-source implementation (from Microsoft!) that runs on Windows and FreeBSD. (updated the link on 17 October 2003) ",
            "id": "bc0364082cbc0e7ae04c372eb7f61fc7"
          },
          {
            "type": "html",
            "text": "<i>A different perspective on the topic</i>",
            "id": "ae81feb9849ae67d0eabf85c50a05359"
          },
          {
            "type": "html",
            "text": "\nHere in Austria we have a saying that \"someone is believing in hot ice-cream\" when someone believes in things that just don't go together technically. Please note the careful wording of the speech, which avoids to tell anything about the server side. .NET is a heavyweight technology that will not \"just run\" everywhere. There is a large gray zone between a simple HTML-like access of a protocol from the client side to a fully supported .NET on the server side. -- [[Helmut Leitner]]",
            "id": "d001f5be9962b37262eacabb1a52be17"
          },
          {
            "type": "html",
            "text": "\nThe CLR (VM) is like a virtual processor executing its machine (byte, word) codes. Talking about its portability is of no significance at all. Everything important is in the libraries. They can't be independent, because someone has to do all the system related stuff. Some months ago there was no support for Win98, now I read (following your links) that there are restrictions with respect to web development and server components. I really don't know what this means. I think that C# is an important improvement (has learned a lot from Java problems) and I will try it as soon as I have a chance to, but I won't if Win9x systems aren't fully supported. The question of lightweight vs heavyweight depends on how MS handles .NET: it may force customers on upgrade paths and it may offer portability with hidden traps and obstacles. This is what I meant by 'heavyweight'. -- [[Helmut Leitner]]",
            "id": "b9c578f0cc78ddca1c424c8979811a2c"
          },
          {
            "type": "html",
            "text": "<i>I think what you guys were talking about was... Did Ballmer say .NET would be running on Linux or not? And clearly he did not. Look, if MS was announcing .NET on Linux, it would have to be more clear than that, eh? From my angle, it sounds as if he is saying that [[Web Services]] developed using .NET would be consumable from Linux. But it's just CEO-speak, there's no detail, so we don't know. HL is right. It doesn't mean .NET won't be available on Linux, it only means Ballmer didn't commit to anything. -- [[Dino Chiesa]], 8 May 2001</i>",
            "id": "fd43415f60811de3de90561aac82ff59"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Microsoft Dot Net]] and the SUN</b>",
            "id": "6e2eaa876fac888bb8ec9534071f12de"
          },
          {
            "type": "html",
            "text": "\nThe key moment when Microsoft and Sun fell out over Java and the very valuable possibility of decent Java COM integration was lost is well worth mulling over on Wiki, in my view. -- [[Richard Drake]]; feelings shared by [[Stephan Houben]]",
            "id": "6d13bb1e558c694760641921cd01feda"
          },
          {
            "type": "html",
            "text": "<i>I work at Sun. It is specifically my job to integrate Java and COM (see [http://developer.java.sun.com/developer/earlyAccess/j2eecas/ developer.java.sun.com] for some first steps in that direction). The full name of the thing is [[Java Two Enterprise Edition Client Access Services Com Bridge]] or [[Jcas Com Bridge]] for short. -- [[Phil Goodwin]]</i>",
            "id": "2f7eba43357a253010a8998247ff6c5f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "There's a (now unsupported) list of .NET resources of various sorts on the DevX website: [http://archive.devx.com/dotnet/resources/ archive.devx.com].",
            "id": "509aba176cd17413e0a06568899d2e2b"
          },
          {
            "type": "html",
            "text": "\nMany introductory books on [[Microsoft Dot Net]] exist.",
            "id": "fc908b43a9380416b3c6445f5dc7d534"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Dot Net]] is serious Business</b>",
            "id": "3b040dff36e9119b9a70eedaf7fff770"
          },
          {
            "type": "html",
            "text": "\nWhat I don't understand about [[Dot Net]] is how MS is going to make money. If it's all open and cross platform, doesn't that take revenue away from Windows sales and open the door to serious competition in the tools arena? Why are they doing this and what do they expect to gain? I have to admit that I'm still looking for the snag or the lock-in. -- some guy",
            "id": "8ea239194fd63ad70ae737a785a16175"
          },
          {
            "type": "html",
            "text": "\nPeople also asked how Sun could make money from Java when they gave it away for free. I think the basic answer is that if you provide some way to make it easier for people to develop software for your systems, you sell more systems. Your competitors may sell more systems too, but so what? Microsoft's well-tuned .NET implementation on Windows servers with [[Sql Server]], [[Back Office]], and all that other MS stuff, along with support for legacy Windows apps as well, will always be more attractive to some than a free mostly-compatible version for some other operating system, so they will sell more Windows licenses. They can get more revenue for development tools and training materials. They may grab some mindshare from Java developers who are using Java on Windows systems just to avoid the Win32 API, MFC, and Visual Basic. I don't think .NET brings any snag or lock-in, but it strengthens the lock-in they already have. -- [[Kris Johnson]]",
            "id": "a0a48b267e831884090f6927c3eba8e1"
          },
          {
            "type": "html",
            "text": "<i>Microsoft currently has over 95% of OS market that is not [[Dot Net]]. It cannot grow much anymore. However if the 95% current OS market is obsolete (think of it like DOS before days of Windows) then Microsoft has huge room to grow, to get people to move from <b>prehistoric</b> architecture to the [[Trustworthy Computing]] [[Service Oriented Architecture]] that is branded as [[Microsoft Dot Net]]. --dl</i>",
            "id": "7a43d7e9176fac3000f813e2faef3576"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>Microsoft.NET history</b>",
            "id": "924094348f98d67406322cc8046c05a5"
          },
          {
            "type": "html",
            "text": "\n[[Microsoft Dot Net]] was announced in alpha form at the [[Micro Soft]] PDC, in July 2000. [[Microsoft Dot Net]] replaces the terms [[Next Generation Windows Services]] and the COM+ 2 runtime. Basically, Microsoft's announcement is quite large. They propose to replace COM and proprietary Windows calls with a cross-platform way of creating [[Web Services]] using Internet standards like XML, SOAP, and HTML. The [[Common Language Runtime]] can run on <b>any</b> OS or machine.",
            "id": "93ba301f3fd8f0b0bb3cbe2e6dae4203"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Cutting Edge]] [[Dot Net]]</b>",
            "id": "42f3e2fff32779e454622ea685ba75f2"
          },
          {
            "type": "html",
            "text": "\n[[Csharp Language]] will someday become [[Cee Omega]] [based on 83.146.13.12 information]",
            "id": "e9684cb64f4716db3c149bd2b9279d73"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Information Security]] concerns for [[Microsoft Dot Net]]</b>",
            "id": "b267932594a20c1d8b243904df6fc84a"
          },
          {
            "type": "html",
            "text": "\nA 2001 article, <i>Building a Secure .NET infrastructure</i>, is a good starting point. See [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnw2kmag01/html/securenet.asp msdn.microsoft.com]",
            "id": "f2420609a6154cdbdae712ac372c8ac5"
          },
          {
            "type": "html",
            "text": "<i>Security Through the Lifetime of a Managed Process: Fitting It All Together</i> excerpt from book \".NET framework Security\" at \n[http://searchwebservices.techtarget.com/content/0,290959,sid26_gci856076,00.html searchwebservices.techtarget.com]",
            "id": "8f241de5d470763b0a8e1f281a9e9b8b"
          },
          {
            "type": "html",
            "text": "<i>Security Enhancements in the .NET Framework 2.0</i> at [http://msdn.microsoft.com/msdnmag/issues/05/01/SecurityBriefs/default.aspx msdn.microsoft.com]",
            "id": "40f84ab10cc7737f68a00e1205c37186"
          },
          {
            "type": "html",
            "text": " See also [[Information Security]] section in [[Dot Net Framework]]",
            "id": "c57af0ae90730d95a921e74d7d969636"
          },
          {
            "type": "html",
            "text": "\nA one page summary available as KB 330246\nFull guide/roadmap at [http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dnnetsec/html/secnetlpMSDN.asp msdn.microsoft.com]",
            "id": "9ee49de0f30824455e7ad385c7dc2732"
          },
          {
            "type": "html",
            "text": "====",
            "id": "9f9142624bff8c31fd5a85f3e65ad878"
          },
          {
            "type": "html",
            "text": "\nWhat about [[Microsoft Security]] for [[Dot Net]] and its implications? I'm really concerned by the complexity (one might say Byzantine complexity) of the system: you have ActiveX style certificates, Java-style code validators, and a whole spectrum of rights an applet can possess. Even if it's technically feasible, it's going to be much harder for end-users and developers to understand how all the interlocking rights interact, and the consequences of privilege boosting are pretty dire. -- [[Peterda Silva]]",
            "id": "bd7f1ed9354f8b72d3bb39b2fe924769"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Dot Net]] and Xml</b>",
            "id": "924a1913abe94a8f5b6b66287cf00d02"
          },
          {
            "type": "html",
            "text": "\nAn introduction to the more important Xml classes in [[Dot Net]] is located at [http://www.informit.com/articles/printerfriendly.asp?p=170916 www.informit.com]",
            "id": "babac09fbf8933851b32b1cd96ddd6fc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "\n[[Is Dot Net Innovative]]? [[Why Another Component Technology]]???",
            "id": "2d532ee02bdfcdeb3a96452f844382c8"
          },
          {
            "type": "html",
            "text": "\nSee also: [[Common Language Runtime]], [[Dot Net Ecma Process]], [[Network Publishing]], [[Web Services]], [[Dot Net As Distributed Object System]]",
            "id": "3d1f1767e504c535f6d6fe5af56cb390"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>Exceptions to views expressed regarding the importance of [[Windows Longhorn]] and [[Microsoft Indigo]] to defining what is [[Microsoft Dot Net]] moved here</b> (last discussed in 2004)",
            "id": "049cb1f1285127364031a2c51038a752"
          },
          {
            "type": "html",
            "text": "[[This is inaccurate. [[Windows Longhorn]] will not \"take over\" [[Microsoft Dot Net]], the language platform. [[Windows Longhorn]] will be based on [[Microsoft Dot Net]]. The statement above makes it seem as though [[Microsoft Dot Net]] was intended to have a brief lifespan, which is inaccurate.",
            "id": "0f444276e49c78ceb68ca355acf1e2c9"
          },
          {
            "type": "html",
            "text": "\nThis confusion arises from the extremely poorly-conceived name \".Net\", which means different things in different contexts. The other meaning of [[Microsoft Dot Net]] - a distributed service platform - is a different story. -- arlied]]",
            "id": "049c7838aeccc734b2aa46f80abb1688"
          },
          {
            "type": "html",
            "text": "\nWhen I wrote the first paragraph in this section I meant [[Microsoft Indigo]] will be the next version of [[Dot Net]], if the company still choose to call it that. [[Microsoft Indigo]] will be far different from [[Dot Net]] of today, which relies on the now legacy [[Component Object Model]], through [[Com Inter Op]], for transaction processing and the like. -- dl",
            "id": "e898d30c8093b30e4d883ff8616e09da"
          },
          {
            "type": "html",
            "text": "<i>Indigo is just a communications infrastructure. The core of [[Dot Net]] is the [[Common Language Runtime]] and the [[Dot Net Base Class Libraries]], which have nothing to do with Indigo whatsoever. The things Indigo will obsolete are [[Dot Net Remoting]] and the current [[Web Services]] classes.</i> -- 212.158.251.129",
            "id": "b1a597a88910deb9d59dda068947518a"
          },
          {
            "type": "html",
            "text": " I think a lot of Xml protocols will change by then ([[Windows Longhorn]] arrival) as well. Already we see [[Web Services Extensions]] (WSE) v2 released in Jul04 and is incompatible with the original WSE. So it is fair to say that [[Microsoft Indigo]] will be the next [[Dot Net]]. How will [[Com Inter Op]] work in 2006/2007? I expect in [[Windows Longhorn]] it will be made much less important, in order to complete the breakaway from the [[Distributed Internet Architecture]] legacy. -- dl''",
            "id": "277f33e4f9239e81a12485fe7b05bf3e"
          },
          {
            "type": "html",
            "text": " [[Microsoft Indigo]] is just a small component of a large and complex system, though. Saying Indigo will be the next [[Dot Net]] is like saying that JAX-RPC (to pick the first vaguely comparable JSR I came across) will be the next java. -- [[Mike Roome]]",
            "id": "8138910fe26806de0cd4089d70a399af"
          },
          {
            "type": "html",
            "text": "\nAs an application developer, I would have to be prepared to rewrite any [[Web Services]] application using [[Microsoft Dot Net]] provisions of 2004, once [[Microsoft Indigo]] is sufficiently defined. So whatever way we call it (changed or enhanced), there is going to be significant work in re-implementation. Also bear in mind [[Microsoft Corporation]] is still learning what it takes to implement [[Trustworthy Computing]] to the point customers become confident about conducting transactions and business services across organisation boundaries.",
            "id": "70fb57aea03ed49ddd92a157d1f1e683"
          },
          {
            "type": "html",
            "text": "<i>Not exactly. The old [[Web Services]] architecture will still be there (if you can credit [[Micro Soft]] for anything, you have to admit they do an incredible job of preserving <b>backwards-compatibility</b>), and your old apps using it will continue to work perfectly well. And [[Dot Net]] is about significantly more than just [[Web Services]] (although given the muddled marketing a few years ago, it's easy to see how misconceptions can arise), and in the [[Windows Longhorn]] timeframe, even more focus is going to be put on client-side development. The [[Dot Net]] platform (which I would define as the runtime and base class libraries) isn't going anywhere, any more than Java went away when Swing replaced AWT. Having said that, if you're focussed on [[Web Services]], then yes, it is a fairly major upheaval, but if you look at the system as a whole, though, <b>it's just another new API</b>. -- [[Mike Roome]]</i>",
            "id": "1ed07e153c2c691356191d7373f93b59"
          },
          {
            "type": "html",
            "text": "\nSee [[Microsoft Indigo]] and [[Windows Longhorn]] for non [[Web Services]] related changes.",
            "id": "f37dc0656574389e30c5ad1ff7a48073"
          },
          {
            "type": "html",
            "text": "\nAPI or not, it will wag the [[Dot Net]] dog in many ways as the argument is for customers to move to implementing [[Service Oriented Architecture]] using [[Microsoft Indigo]] and other [[Windows Longhorn]] features (todays [[Dot Net]] would not do it). -- dl",
            "id": "a75261916c88354d379bb5738bce3166"
          },
          {
            "type": "html",
            "text": "\nAlso refer [[Microsoft Dot Net Discussions]]",
            "id": "66e36ae067984b98c8cdcebcc84c1111"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "<b>[[Dot Net]] Information Sharing</b>",
            "id": "69034bf6d984c8c03103a9bc838ee99a"
          },
          {
            "type": "html",
            "text": "\nOne of the most basic questions about [[Hail Storm]] relates to access: who will be able to access [[Hail Storm]] services? (And more pointedly: will a Microsoft runtime be required?)",
            "id": "7a6414142442d9cd4b233ebb5149962a"
          },
          {
            "type": "html",
            "text": "\n[[Hail Storm]] can be accessed from any device, service or application with an Internet connection, the ability to identify a user, and the ability to send and receive SOAP messages. All interactions are text-based SOAP messages regardless of underlying platform, operating system, object model, programming language, application or network provider. [[Hail Storm]] is accessible from both clients and servers, and no Microsoft runtime is required on either the client or the server. Microsoft has already demonstrated [[Hail Storm]] services being accessed from a Linux machine, a Macintosh, and a Palm Pilot.",
            "id": "409498b207cadca7f78c80e47017fc39"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "What if I don't need to write a web service? What if I just need to write an <i>application</i>? Does .NET help or hinder me? (or neither?)",
            "id": "b2dcc684c52d2885320bd521686ff413"
          },
          {
            "type": "html",
            "text": "<i>Helps, in my view. A decent class library, automatic memory management, less Win32 warts and a large choice of languages</i>",
            "id": "5f7d51afd284f994c0603901c8a130e6"
          },
          {
            "type": "html",
            "text": "\nAgree. Using C# to develop GUIs and console apps lets one do the kinds of things that are easy with [[Visual Basic]], but without the horrible language. Every once in a while, I find something missing, but it is easy to call Win32 APIs or COM objects to fill in those voids. If you like Java, but need better integration with the Windows world, then you'll probably like C# and .NET.",
            "id": "e675c83d15ea0cd1980543b660655483"
          },
          {
            "type": "html",
            "text": " OTOH, a [[Dot Net]] application is less stable as both languages (and extensions such as [[Web Services]]) and OS (the framework) evolves. If a now obsolete version of Microsoft product (e.g. [[Vb Classic]] / ASP etc) serve your need adequately, maybe it should be considered as well (as long as there are still lots of similar legacy applications still around).",
            "id": "9c48e7d4fb9911646d660376b3665140"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "\nI hear someone from Microsoft is recommending new developers to use this [http://www.4guysfromrolla.com/ www.4guysfromrolla.com]. What do people here think of this particular site, compared to the hundreds of others around (e.g. codeproject, gotdotnet, etc.)? -- dl",
            "id": "77690d6bb72deee2ee90b2151796baf8"
          },
          {
            "type": "html",
            "text": "\nMore than one person noted in 2005 that [[Microsoft Unix]] is having a high profile presence in \"Linux Today\". Hopefully [[Windows Server Two Thousand Three]] and its descendants will not run on high powered Unix boxes ([[Big Blue]] has a few) too quickly, to leave room for innovation.",
            "id": "330eedd0a8fe1906ed2604b61f1843b9"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "Language Integrated Queries (LINQ) is something I am having trouble getting my head around.  [[Embedded Sql]] was something I remember as not having worked out so well in the 70s but now it seems to be a very important part of the new version of [[Microsoft Dot Net]].  There are some clever extensions to the language involving anonymous delegates and type inference associated with LINQ, but I don't understand what has changed in the programming landscape to make it a good idea to once more introduce [[Embedded Sql]] into a mainstream language.  What am I missing? -- [[Skip Sailors]]",
            "id": "1e90c1b1672d27e44df1da2bc506a082"
          },
          {
            "type": "html",
            "text": "<i>Well, there is a difference, first, LINQ is not SQL, SQL should be standard, but the fact is that you can not be 100% sure that a particular SQL sentence will work in all databases, but with LINQ, custom mappers can be built, and thanks to them the exact same LINQ sentence can be used for any of the supported databases (and support can be added by third party developers for particular databases, or even for OSQL languages (like [[Hiber Nate]] HSQL). Another difference is that LINQ can be extended to be used as a query language for XML files, CSV files, or even in memory structures (Arrays, [[Linked Lists]], [[Hash Maps]]) and therefore gives you the ability to \"query\" semi-declaratively memory structures that normaly can only be processed with procedural code... what is the advantage? well, with traditional control structures, if you are looking for a Person object in an array of Persons, you have to loop from start to finish, object by object, wasting the potential optimizations that current multi-core computers could offer, but with LINQ you can specify that you want all the Person object that match with a particular condition and LINQ will be able to use the best possible strategy to do the search (parallel processing, indexing, etc, etc) that effectively brings the advantages of optimized query processing in to in memory operations (finally we have a language that transparently takes advantage of the benefits of [[Nimble Databases]], and it doest it even for simple collection structures)</i>",
            "id": "cc8a8b3671a1c57f4ea1582ca91626a3"
          },
          {
            "type": "html",
            "text": "\nI suspect its partly due to holdout fans (like me) of \"data-oriented languages\" (such as [[Ex Base]], Paradox, and [[Fox Pro]]) where DB-like collection-orientation was built right into the language. Going through an OOP API for such is a pain compared to having it built in and us data fans miss the more direct \"older\" way. MS has a habit of dumping just about every paradigm/flavor into a tool in order to capture a wide audience; and perhaps to stay ahead of the open-source clones by out-featuring them. But it  creates a monster. They will do to the new VB what they did to the old one: clutter it up over time by extending onto an outdated language platform. (And Windows too for that matter. It's the MS way.) --top",
            "id": "be35ec35bf9363ff9d75ed632b9300cb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "06f428ca49c7280f3ffa9937ae645b46"
          },
          {
            "type": "html",
            "text": "[[Category Dot Net]] [[Category Microsoft]] [[Category Enterprise Computing Concerns]]",
            "id": "63f2c19b4745fb260a73b8831a2b5667"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?MicrosoftDotNet c2.com]",
            "id": "6fc51c3992e5dfd51193aad0d0171436"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1660314970846
    }
  ]
}