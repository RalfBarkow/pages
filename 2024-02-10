{
  "title": "2024-02-10",
  "story": [
    {
      "type": "paragraph",
      "id": "2e8005de493443b3",
      "text": "refactor(gtCodeFor:): view: #gtExploreFor: instead of #gtTreeFor:"
    },
    {
      "type": "image",
      "id": "b7f6161991d1c1a4",
      "text": "Diff",
      "size": "wide",
      "width": 430,
      "height": 202,
      "url": "/assets/plugins/image/d758f0e51df9db24f7f83f29300aee30.jpg"
    },
    {
      "type": "paragraph",
      "id": "7a17bf27658559bb",
      "text": "⇐ [[Add New Data to SVG Line]]",
      "alias": "96dd83de1c57a87c"
    },
    {
      "type": "image",
      "id": "48cd4b7ae92ee985",
      "text": "Explore",
      "size": "wide",
      "width": 419,
      "height": 255,
      "url": "/assets/plugins/image/d53f289137831fbc3335e77b2ec3397a.jpg"
    },
    {
      "type": "paragraph",
      "id": "087232d2a9fb12e0",
      "text": "[[Snippet]]>>#gtCodeFor:"
    },
    {
      "type": "code",
      "id": "13e66c6e0132fb75",
      "text": "gtCodeFor: aView\n\t<gtView>\n\tself type = #code ifFalse: [ ^ aView empty ].\n\t^ aView forward\n\t\ttitle: 'Code';\n\t\tpriority: 20;\n\t\tobject: [ JSParser parse: self text ];\n\t\tview: #gtExploreFor:"
    },
    {
      "type": "markdown",
      "id": "b21efc5def47289a",
      "text": "How did we find the object? (`object:`)"
    },
    {
      "type": "markdown",
      "id": "7f7f1fd985b81705",
      "text": "Analysis, path to the right, i.e. another Miller-Column or page, in whose [[Contextual Playground]] `self` can be analyzed. See [[GTInspector]]"
    },
    {
      "type": "image",
      "id": "0e76c414316801bb",
      "text": "Figure 1: An inspection session consisting of six objects.",
      "size": "wide",
      "width": 430,
      "height": 164,
      "url": "/assets/plugins/image/93ed2ae40f45d32b89f87e29c39ae92d.jpg"
    },
    {
      "type": "paragraph",
      "id": "5f7212ccd14d6f19",
      "text": "Four objects are currently visible: (i) graphical window, (ii) model for a graphical component, (iii) file pointing to an archive, and (iv) file pointing to a png picture. From a dedicated view of an object in one tab of a Miller column, one can navigate to a view of another object in the next column. Navigating to each object involves a different mechanism: (a) selecting an object in a view, (b) executing code to locate the object, and (c) selecting an object in a list. The order in which these objects were inspected is given by their positioning from left to right."
    },
    {
      "type": "markdown",
      "id": "93895be59ddbf5af",
      "text": "# [[The Shortest Way to the Self]]"
    },
    {
      "type": "markdown",
      "id": "892ebe38bab6dcc8",
      "text": "In my example, this was `JSParser parse: self text` to get a view for the code snippet from the \"[[Add New Data to SVG Line]]\" page. The point is that the code is no longer a string, but a JSModuleNode object."
    },
    {
      "type": "markdown",
      "id": "d7365f2f6ab5bbd5",
      "text": "The [[Pattern]] here is that we give the context and forces in one or more paragraphs, then put a bold \"[[Therefore]]\" on a separate line and then give a proven solution in one or more paragraphs. Then we replace the solution paragraph (string, code snippet) with the living solution object. The problem/solution pair – or question/answer pair –  now has an address, namely the address of the wiki page ([[Slug]]).\n"
    },
    {
      "type": "markdown",
      "id": "d6008de5d8354526",
      "text": "When working with the [[Glamorous Toolkit]] in a context where we are trying to find an answer to a question/problem, we are looking for the shortest path/story/narrative to its \"self\" by sending messages to that \"self\" aka question/problem. In case of an answer to this message we have the basis for a possible answer to our original question."
    },
    {
      "type": "reference",
      "id": "f385ba54f597fbf3",
      "site": "wiki.ralfbarkow.ch",
      "slug": "example-driven-development",
      "title": "Example-Driven Development",
      "text": "Examples look like tests that return an object. This little change has quite some implications as the same artifact can be used for testing, exploration or documentation purposes."
    },
    {
      "type": "reference",
      "id": "69e96ead67bd0da5",
      "site": "wiki.ralfbarkow.ch",
      "slug": "use-examples-rather-than-tests",
      "title": "Use Examples Rather than Tests",
      "text": "With [[Moldable Development]] we use examples rather than tests. Basically these are unit tests that return a live instance that you can interact with."
    },
    {
      "type": "paragraph",
      "id": "96dd83de1c57a87c",
      "text": "⇐ [[Add New Data to SVG Line]] ⇒ [[Random Walk]] ⇒ [[Markov Monkey Script]]"
    },
    {
      "type": "paragraph",
      "id": "6ecf89ded0cab9d7",
      "text": "⇒ [[Murmuration]] (within a [[Circle]], [[Shape]])"
    },
    {
      "type": "paragraph",
      "id": "d91850a031ce2cff",
      "text": "A cloud of black spots of color stands in the sky, changing [[Shape]] every second – have you ever seen that? Starlings usually form such formations, hundreds of them. The phenomenon has a very nice name in English: [[Murmuration]]."
    },
    {
      "type": "html",
      "id": "c082cd4561596022",
      "text": "<center><img width=50% src=https://upload.wikimedia.org/wikipedia/commons/e/eb/Diagram_of_a_Markov_blanket.svg>\n\n<p class=caption>\nIn a Bayesian network, the Markov blanket of node ''A'' includes its parents, children and the other parents of all of its children\n- [https://commons.wikimedia.org/wiki/File:Diagram_of_a_Markov_blanket.svg wikimedia]\n</p>\n"
    },
    {
      "type": "paragraph",
      "id": "22f7611e44452a6c",
      "text": "26 [[Markov Monkey]]s sit in a circle. Why 26? See [[List Indexcards]] and [[Markov Blankets]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-02-10",
        "story": []
      },
      "date": 1707552896412
    },
    {
      "item": {
        "type": "factory",
        "id": "2e8005de493443b3"
      },
      "id": "2e8005de493443b3",
      "type": "add",
      "date": 1707552898244
    },
    {
      "type": "edit",
      "id": "2e8005de493443b3",
      "item": {
        "type": "paragraph",
        "id": "2e8005de493443b3",
        "text": "refactor(gtCodeFor:): view: #gtExploreFor: instead of #gtTreeFor:"
      },
      "date": 1707552900170
    },
    {
      "item": {
        "type": "factory",
        "id": "48cd4b7ae92ee985"
      },
      "id": "48cd4b7ae92ee985",
      "type": "add",
      "after": "2e8005de493443b3",
      "date": 1707552901269
    },
    {
      "type": "edit",
      "id": "48cd4b7ae92ee985",
      "item": {
        "type": "image",
        "id": "48cd4b7ae92ee985",
        "text": "Explore",
        "size": "wide",
        "width": 419,
        "height": 255,
        "url": "/assets/plugins/image/d53f289137831fbc3335e77b2ec3397a.jpg"
      },
      "date": 1707552927260
    },
    {
      "item": {
        "type": "factory",
        "id": "96dd83de1c57a87c"
      },
      "id": "96dd83de1c57a87c",
      "type": "add",
      "after": "48cd4b7ae92ee985",
      "date": 1707552967571
    },
    {
      "type": "edit",
      "id": "96dd83de1c57a87c",
      "item": {
        "type": "paragraph",
        "id": "96dd83de1c57a87c",
        "text": "⇐ [[Add New Data to SVG Line]]"
      },
      "date": 1707552975765
    },
    {
      "type": "edit",
      "id": "96dd83de1c57a87c",
      "item": {
        "type": "paragraph",
        "id": "96dd83de1c57a87c",
        "text": "⇐ [[Add New Data to SVG Line]] ⇒ [[Random Walk]] "
      },
      "date": 1707553018728
    },
    {
      "type": "edit",
      "id": "96dd83de1c57a87c",
      "item": {
        "type": "paragraph",
        "id": "96dd83de1c57a87c",
        "text": "⇐ [[Add New Data to SVG Line]] ⇒ [[Random Walk]] ⇒ [[Markov Monkey Script]]"
      },
      "date": 1707553056591
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707553363559
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707565931917
    },
    {
      "item": {
        "type": "factory",
        "id": "3e0e9800c2f7b81c"
      },
      "id": "3e0e9800c2f7b81c",
      "type": "add",
      "after": "96dd83de1c57a87c",
      "date": 1707565933786
    },
    {
      "type": "edit",
      "id": "3e0e9800c2f7b81c",
      "item": {
        "type": "image",
        "id": "3e0e9800c2f7b81c",
        "text": "circle",
        "size": "wide",
        "width": 419,
        "height": 299,
        "url": "/assets/plugins/image/2b48eb53d689e7ac262c4247e094362d.jpg"
      },
      "date": 1707565972800
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1707566000453
    },
    {
      "item": {
        "type": "factory",
        "id": "6ecf89ded0cab9d7"
      },
      "id": "6ecf89ded0cab9d7",
      "type": "add",
      "after": "3e0e9800c2f7b81c",
      "date": 1707566312975
    },
    {
      "type": "edit",
      "id": "6ecf89ded0cab9d7",
      "item": {
        "type": "paragraph",
        "id": "6ecf89ded0cab9d7",
        "text": "[[Murmuration]]"
      },
      "date": 1707566324237
    },
    {
      "type": "edit",
      "id": "6ecf89ded0cab9d7",
      "item": {
        "type": "paragraph",
        "id": "6ecf89ded0cab9d7",
        "text": "⇒ [[Murmuration]]"
      },
      "date": 1707566333338
    },
    {
      "id": "d91850a031ce2cff",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d91850a031ce2cff",
        "text": "A cloud of black spots of color stands in the sky, changing [[Shape]] every second – have you ever seen that? Starlings usually form such formations, hundreds of them. The phenomenon has a very nice name in English: Murmuration "
      },
      "after": "6ecf89ded0cab9d7",
      "attribution": {
        "page": "Murmuration"
      },
      "date": 1707566656067
    },
    {
      "type": "edit",
      "id": "d91850a031ce2cff",
      "item": {
        "type": "paragraph",
        "id": "d91850a031ce2cff",
        "text": "A cloud of black spots of color stands in the sky, changing [[Shape]] every second – have you ever seen that? Starlings usually form such formations, hundreds of them. The phenomenon has a very nice name in English: [[Murmuration]] "
      },
      "date": 1707566682382
    },
    {
      "type": "edit",
      "id": "d91850a031ce2cff",
      "item": {
        "type": "paragraph",
        "id": "d91850a031ce2cff",
        "text": "A cloud of black spots of color stands in the sky, changing [[Shape]] every second – have you ever seen that? Starlings usually form such formations, hundreds of them. The phenomenon has a very nice name in English: [[Murmuration]]."
      },
      "date": 1707566687268
    },
    {
      "type": "add",
      "id": "22f7611e44452a6c",
      "item": {
        "type": "paragraph",
        "id": "22f7611e44452a6c",
        "text": "26 [[Markov Monkey]]s sit in a circle."
      },
      "after": "d91850a031ce2cff",
      "date": 1707566894165
    },
    {
      "type": "edit",
      "id": "22f7611e44452a6c",
      "item": {
        "type": "paragraph",
        "id": "22f7611e44452a6c",
        "text": "26 [[Markov Monkey]]s sit in a circle. Why 26? See [[List Indexcards]]"
      },
      "date": 1707566964774
    },
    {
      "id": "c082cd4561596022",
      "type": "add",
      "item": {
        "type": "html",
        "id": "c082cd4561596022",
        "text": "<center><img width=50% src=https://upload.wikimedia.org/wikipedia/commons/e/eb/Diagram_of_a_Markov_blanket.svg>\n\n<p class=caption>\nIn a Bayesian network, the Markov blanket of node ''A'' includes its parents, children and the other parents of all of its children\n- [https://commons.wikimedia.org/wiki/File:Diagram_of_a_Markov_blanket.svg wikimedia]\n</p>\n"
      },
      "after": "d91850a031ce2cff",
      "attribution": {
        "page": "Markov Blankets"
      },
      "date": 1707567222728
    },
    {
      "type": "edit",
      "id": "22f7611e44452a6c",
      "item": {
        "type": "paragraph",
        "id": "22f7611e44452a6c",
        "text": "26 [[Markov Monkey]]s sit in a circle. Why 26? See [[List Indexcards]] and [[Markov Blankets]]"
      },
      "date": 1707567254793
    },
    {
      "type": "add",
      "id": "087232d2a9fb12e0",
      "item": {
        "type": "paragraph",
        "id": "087232d2a9fb12e0",
        "text": "Snippet>>#gtCodeFor:"
      },
      "after": "2e8005de493443b3",
      "date": 1707569040005
    },
    {
      "id": "087232d2a9fb12e0",
      "type": "move",
      "order": [
        "2e8005de493443b3",
        "48cd4b7ae92ee985",
        "087232d2a9fb12e0",
        "96dd83de1c57a87c",
        "3e0e9800c2f7b81c",
        "6ecf89ded0cab9d7",
        "d91850a031ce2cff",
        "c082cd4561596022",
        "22f7611e44452a6c"
      ],
      "date": 1707569049984
    },
    {
      "type": "edit",
      "id": "087232d2a9fb12e0",
      "item": {
        "type": "paragraph",
        "id": "087232d2a9fb12e0",
        "text": "[[Snippet]]>>#gtCodeFor:"
      },
      "date": 1707569058009
    },
    {
      "id": "13e66c6e0132fb75",
      "type": "add",
      "item": {
        "type": "code",
        "id": "13e66c6e0132fb75",
        "text": "gtCodeFor: aView\n\t<gtView>\n\tself type = #code ifFalse: [ ^ aView empty ].\n\t^ aView forward\n\t\ttitle: 'Code';\n\t\tpriority: 20;\n\t\tobject: [ JSParser parse: self text ];\n\t\tview: #gtExploreFor:"
      },
      "after": "087232d2a9fb12e0",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569084581
    },
    {
      "id": "218a7945009ae8fd",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "218a7945009ae8fd",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-shortest-way-to-the-self",
        "title": "The Shortest Way to the Self",
        "text": "See [[TCR]] and [[Messages]]"
      },
      "after": "13e66c6e0132fb75",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569249567
    },
    {
      "id": "93895be59ddbf5af",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "93895be59ddbf5af",
        "text": "When working with the [[Glamorous Toolkit]] in a context where we are trying to find an answer to a question/problem, we are looking for the shortest path/story/narrative to its \"self\" by sending messages to that \"self\" aka question/problem. In case of an answer to this message we have the basis for a possible answer to our original question"
      },
      "after": "218a7945009ae8fd",
      "attribution": {
        "page": "The Shortest Way to the Self"
      },
      "date": 1707569258572
    },
    {
      "type": "edit",
      "id": "93895be59ddbf5af",
      "item": {
        "type": "markdown",
        "id": "93895be59ddbf5af",
        "text": "When working with the [[Glamorous Toolkit]] in a context where we are trying to find an answer to a question/problem, we are looking for the shortest path/story/narrative to its \"self\" by sending messages to that \"self\" aka question/problem. In case of an answer to this message we have the basis for a possible answer to our original question."
      },
      "date": 1707569287345
    },
    {
      "id": "f385ba54f597fbf3",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "f385ba54f597fbf3",
        "site": "wiki.ralfbarkow.ch",
        "slug": "example-driven-development",
        "title": "Example-Driven Development",
        "text": "Examples look like tests that return an object. This little change has quite some implications as the same artifact can be used for testing, exploration or documentation purposes."
      },
      "after": "93895be59ddbf5af",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569462413
    },
    {
      "id": "69e96ead67bd0da5",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "69e96ead67bd0da5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "use-examples-rather-than-tests",
        "title": "Use Examples Rather than Tests",
        "text": "With [[Moldable Development]] we use examples rather than tests. Basically these are unit tests that return a live instance that you can interact with."
      },
      "after": "f385ba54f597fbf3",
      "attribution": {
        "page": "Example-Driven Development"
      },
      "date": 1707569465214
    },
    {
      "id": "b7f6161991d1c1a4",
      "type": "add",
      "item": {
        "type": "image",
        "id": "b7f6161991d1c1a4",
        "text": "Diff",
        "size": "wide",
        "width": 430,
        "height": 202,
        "url": "/assets/plugins/image/d758f0e51df9db24f7f83f29300aee30.jpg"
      },
      "after": "2e8005de493443b3",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569700836
    },
    {
      "id": "7a17bf27658559bb",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7a17bf27658559bb",
        "text": "⇐ [[Add New Data to SVG Line]]",
        "alias": "96dd83de1c57a87c"
      },
      "after": "b7f6161991d1c1a4",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569823348
    },
    {
      "id": "b21efc5def47289a",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "b21efc5def47289a",
        "text": "How did we find the object? (`object:`)"
      },
      "after": "13e66c6e0132fb75",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569901641
    },
    {
      "id": "7f7f1fd985b81705",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Collumn or page, in whose Contextual Playground self can be evaluated."
      },
      "after": "b21efc5def47289a",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707569997875
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "paragraph",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Collumn or page, in whose [[Contextual Playground]] self can be evaluated."
      },
      "date": 1707570010302
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "paragraph",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Collumn or page, in whose [[Contextual Playground]] `self` can be evaluated. "
      },
      "date": 1707570061733
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "paragraph",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Collumn or page, in whose [[Contextual Playground]] `self` can be analyzed. "
      },
      "date": 1707570068716
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "markdown",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Collumn or page, in whose [[Contextual Playground]] `self` can be analyzed. "
      },
      "date": 1707570073060
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "markdown",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Column or page, in whose [[Contextual Playground]] `self` can be analyzed. "
      },
      "date": 1707570146655
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "markdown",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Column or page, in whose [[Contextual Playground]] `self` can be analyzed."
      },
      "date": 1707570293003
    },
    {
      "type": "add",
      "id": "538841c759b0e31a",
      "item": {
        "type": "markdown",
        "id": "538841c759b0e31a",
        "text": "\nCHIŞ, Andrei, NIERSTRASZ, Oscar, SYREL, Aliaksei and GÎRBA, Tudor, 2015. GTInspector: a moldable domain-aware object inspector. In: Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity. Online. New York, NY, USA: Association for Computing Machinery. 25 October 2015. p. 15–16. SPLASH Companion 2015. ISBN 978-1-4503-3722-9. DOI 10.1145/2814189.2814194. [Accessed 10 February 2024]. \nUnderstanding the run-time behaviour of object-oriented applications entails the comprehension of run-time objects. Traditional object inspectors favor generic views that focus on the low-level details of the state of single objects. While universally applicable, this generic approach does not take into account the varying needs of developers that could benefit from tailored views and exploration possibilities. GTInspector is a novel moldable object inspector that provides different high-level ways to visualize and explore objects, adapted to both the object and the current developer need. More information about the GTInspector can be found at: scg.unibe.ch/research/moldableinspector\n"
      },
      "after": "7f7f1fd985b81705",
      "date": 1707570294312
    },
    {
      "type": "edit",
      "id": "538841c759b0e31a",
      "item": {
        "type": "markdown",
        "id": "538841c759b0e31a",
        "text": "CHIŞ, Andrei, NIERSTRASZ, Oscar, SYREL, Aliaksei and GÎRBA, Tudor, 2015. GTInspector: a moldable domain-aware object inspector. In: Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity. Online. New York, NY, USA: Association for Computing Machinery. 25 October 2015. p. 15–16. SPLASH Companion 2015. ISBN 978-1-4503-3722-9. DOI 10.1145/2814189.2814194. [Accessed 10 February 2024]. \nUnderstanding the run-time behaviour of object-oriented applications entails the comprehension of run-time objects. Traditional object inspectors favor generic views that focus on the low-level details of the state of single objects. While universally applicable, this generic approach does not take into account the varying needs of developers that could benefit from tailored views and exploration possibilities. GTInspector is a novel moldable object inspector that provides different high-level ways to visualize and explore objects, adapted to both the object and the current developer need. More information about the GTInspector can be found at: scg.unibe.ch/research/moldableinspector\n"
      },
      "date": 1707570329676
    },
    {
      "type": "edit",
      "id": "538841c759b0e31a",
      "item": {
        "type": "markdown",
        "id": "538841c759b0e31a",
        "text": "CHIŞ, Andrei, NIERSTRASZ, Oscar, SYREL, Aliaksei and GÎRBA, Tudor, 2015. GTInspector: a moldable domain-aware object inspector. In: Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity. Online. New York, NY, USA: Association for Computing Machinery. 25 October 2015. p. 15–16. SPLASH Companion 2015. ISBN 978-1-4503-3722-9. DOI 10.1145/2814189.2814194. [Accessed 10 February 2024]. \nUnderstanding the run-time behaviour of object-oriented applications entails the comprehension of run-time objects. Traditional object inspectors favor generic views that focus on the low-level details of the state of single objects. While universally applicable, this generic approach does not take into account the varying needs of developers that could benefit from tailored views and exploration possibilities. GTInspector is a novel moldable object inspector that provides different high-level ways to visualize and explore objects, adapted to both the object and the current developer need. More information about the GTInspector can be found at: [https://scg.unibe.ch/research/moldableinspector scg.unibe.ch/research/moldableinspector]\n"
      },
      "date": 1707570355073
    },
    {
      "type": "edit",
      "id": "7f7f1fd985b81705",
      "item": {
        "type": "markdown",
        "id": "7f7f1fd985b81705",
        "text": "Analysis, path to the right, i.e. another Miller-Column or page, in whose [[Contextual Playground]] `self` can be analyzed. See [[GTInspector]]"
      },
      "date": 1707570397300
    },
    {
      "id": "0e76c414316801bb",
      "type": "add",
      "item": {
        "type": "image",
        "id": "0e76c414316801bb",
        "text": "Figure 1: An inspection session consisting of six objects.",
        "size": "wide",
        "width": 430,
        "height": 164,
        "url": "/assets/plugins/image/93ed2ae40f45d32b89f87e29c39ae92d.jpg"
      },
      "after": "538841c759b0e31a",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707570571949
    },
    {
      "id": "5f7212ccd14d6f19",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5f7212ccd14d6f19",
        "text": "Four objects are currently visible: (i) graphical window, (ii) model for a graphical component, (iii) file pointing to an archive, and (iv) file pointing to a png picture. From a dedicated view of an object in one tab of a Miller column, one can navigate to a view of another object in the next column. Navigating to each object involves a different mechanism: (a) selecting an object in a view, (b) executing code to locate the object, and (c) selecting an object in a list. The order in which these objects were inspected is given by their positioning from left to right."
      },
      "after": "0e76c414316801bb",
      "attribution": {
        "page": "scratch"
      },
      "date": 1707570611582
    },
    {
      "type": "edit",
      "id": "7c3b148ca84d06b1",
      "item": {
        "type": "paragraph",
        "id": "7c3b148ca84d06b1",
        "text": "[[GTInspector]] groups connected objects in an exploration session and displays them using an extension of Miller columns (en.wikipedia.org/wiki/Miller columns) that provides an overview of the entire session, enables rapid navigation and makes it possible to control the number of visible objects."
      },
      "date": 1707570672630
    },
    {
      "type": "edit",
      "id": "7c3b148ca84d06b1",
      "item": {
        "type": "paragraph",
        "id": "7c3b148ca84d06b1",
        "text": "[[GTInspector]] groups connected objects in an exploration session and displays them using an extension of Miller columns ([https://en.wikipedia.org/wiki/Miller_columns en.wikipedia.org/wiki/Miller columns]) that provides an overview of the entire session, enables rapid navigation and makes it possible to control the number of visible objects."
      },
      "date": 1707570718706
    },
    {
      "type": "remove",
      "id": "538841c759b0e31a",
      "date": 1707570835833
    },
    {
      "type": "edit",
      "id": "218a7945009ae8fd",
      "item": {
        "type": "reference",
        "id": "218a7945009ae8fd",
        "site": "wiki.ralfbarkow.ch",
        "slug": "the-shortest-way-to-the-self",
        "title": "The Shortest Way to the Self",
        "text": "See also [[TCR]] and [[Messages]]"
      },
      "date": 1707572560876
    },
    {
      "type": "edit",
      "id": "93895be59ddbf5af",
      "item": {
        "type": "markdown",
        "id": "93895be59ddbf5af",
        "text": "# [[The Shortest Way to the Self]]"
      },
      "date": 1707572609476
    },
    {
      "type": "add",
      "id": "d6008de5d8354526",
      "item": {
        "type": "markdown",
        "id": "d6008de5d8354526",
        "text": "When working with the [[Glamorous Toolkit]] in a context where we are trying to find an answer to a question/problem, we are looking for the shortest path/story/narrative to its \"self\" by sending messages to that \"self\" aka question/problem. In case of an answer to this message we have the basis for a possible answer to our original question."
      },
      "after": "93895be59ddbf5af",
      "date": 1707572609994
    },
    {
      "type": "remove",
      "id": "218a7945009ae8fd",
      "date": 1707572612589
    },
    {
      "type": "add",
      "id": "892ebe38bab6dcc8",
      "item": {
        "type": "markdown",
        "id": "892ebe38bab6dcc8",
        "text": "In my example, this was `JSParser parse: self text` to get a view for the code snippet from the \"[[Add New Data to SVG Line]]\" page."
      },
      "after": "93895be59ddbf5af",
      "date": 1707575841956
    },
    {
      "type": "add",
      "id": "1c1c6facdf1d5bc3",
      "item": {
        "type": "markdown",
        "id": "1c1c6facdf1d5bc3",
        "text": "The point is that the code is no longer a string, but a JSModuleNode object."
      },
      "after": "892ebe38bab6dcc8",
      "date": 1707575875035
    },
    {
      "type": "remove",
      "id": "1c1c6facdf1d5bc3",
      "date": 1707575882826
    },
    {
      "type": "edit",
      "id": "892ebe38bab6dcc8",
      "item": {
        "type": "markdown",
        "id": "892ebe38bab6dcc8",
        "text": "In my example, this was `JSParser parse: self text` to get a view for the code snippet from the \"[[Add New Data to SVG Line]]\" page. The point is that the code is no longer a string, but a JSModuleNode object."
      },
      "date": 1707575883791
    },
    {
      "type": "add",
      "id": "d7365f2f6ab5bbd5",
      "item": {
        "type": "markdown",
        "id": "d7365f2f6ab5bbd5",
        "text": "The pattern here is that we give the context and forces in one or more paragraphs, then put a bold \"Therefore\" on a separate line and then give a proven solution in one or more paragraphs. Then we replace the solution paragraph (string, code snippet) with the living solution object. The problem/solution pair – or question/answer pair –  now has an address, namely the address of the wiki page (slug).\n"
      },
      "after": "892ebe38bab6dcc8",
      "date": 1707575922151
    },
    {
      "type": "edit",
      "id": "d7365f2f6ab5bbd5",
      "item": {
        "type": "markdown",
        "id": "d7365f2f6ab5bbd5",
        "text": "The pattern here is that we give the context and forces in one or more paragraphs, then put a bold \"[[Therefore]]\" on a separate line and then give a proven solution in one or more paragraphs. Then we replace the solution paragraph (string, code snippet) with the living solution object. The problem/solution pair – or question/answer pair –  now has an address, namely the address of the wiki page (slug).\n"
      },
      "date": 1707575933086
    },
    {
      "type": "edit",
      "id": "d7365f2f6ab5bbd5",
      "item": {
        "type": "markdown",
        "id": "d7365f2f6ab5bbd5",
        "text": "The [[Pattern]] here is that we give the context and forces in one or more paragraphs, then put a bold \"[[Therefore]]\" on a separate line and then give a proven solution in one or more paragraphs. Then we replace the solution paragraph (string, code snippet) with the living solution object. The problem/solution pair – or question/answer pair –  now has an address, namely the address of the wiki page (slug).\n"
      },
      "date": 1707575946348
    },
    {
      "type": "edit",
      "id": "d7365f2f6ab5bbd5",
      "item": {
        "type": "markdown",
        "id": "d7365f2f6ab5bbd5",
        "text": "The [[Pattern]] here is that we give the context and forces in one or more paragraphs, then put a bold \"[[Therefore]]\" on a separate line and then give a proven solution in one or more paragraphs. Then we replace the solution paragraph (string, code snippet) with the living solution object. The problem/solution pair – or question/answer pair –  now has an address, namely the address of the wiki page ([[Slug]]).\n"
      },
      "date": 1707575972684
    },
    {
      "id": "6ecf89ded0cab9d7",
      "type": "move",
      "order": [
        "2e8005de493443b3",
        "b7f6161991d1c1a4",
        "7a17bf27658559bb",
        "48cd4b7ae92ee985",
        "087232d2a9fb12e0",
        "13e66c6e0132fb75",
        "b21efc5def47289a",
        "7f7f1fd985b81705",
        "0e76c414316801bb",
        "5f7212ccd14d6f19",
        "93895be59ddbf5af",
        "892ebe38bab6dcc8",
        "d7365f2f6ab5bbd5",
        "d6008de5d8354526",
        "f385ba54f597fbf3",
        "69e96ead67bd0da5",
        "96dd83de1c57a87c",
        "6ecf89ded0cab9d7",
        "3e0e9800c2f7b81c",
        "d91850a031ce2cff",
        "c082cd4561596022",
        "22f7611e44452a6c"
      ],
      "date": 1707576046352
    },
    {
      "type": "edit",
      "id": "6ecf89ded0cab9d7",
      "item": {
        "type": "paragraph",
        "id": "6ecf89ded0cab9d7",
        "text": "⇒ [[Murmuration]] in a [[Shape]] (within a [[Circle]])"
      },
      "date": 1707576433637
    },
    {
      "type": "edit",
      "id": "6ecf89ded0cab9d7",
      "item": {
        "type": "paragraph",
        "id": "6ecf89ded0cab9d7",
        "text": "⇒ [[Murmuration]] (within a [[Circle]], [[Shape]])"
      },
      "date": 1707576461217
    },
    {
      "id": "3e0e9800c2f7b81c",
      "type": "remove",
      "removedTo": {
        "page": "circle"
      },
      "date": 1707576545668
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707644897569
    }
  ]
}