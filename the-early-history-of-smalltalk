{
  "title": "The Early History Of Smalltalk",
  "story": [
    {
      "type": "pagefold",
      "id": "4d7ab76237995abf",
      "text": "Background"
    },
    {
      "type": "paragraph",
      "id": "5c803c459c728f4d",
      "text": "Most ideas come from previous ideas. The sixties, particularly in the ARPA community, gave rise to a host of notions about \"human-computer symbiosis\" through interactive time-shared computers, graphics screens and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon-to-follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a \"better old thing.\" That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/$/volume demanded that the sixties be regarded as \"almost a new thing\" and to find out what the actual \"new things\" might be. For example, one would compute with a handheld \"Dynabook\" in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior.  "
    },
    {
      "type": "paragraph",
      "id": "bec52afa6c56a74c",
      "text": "[http://worrydream.com/EarlyHistoryOfSmalltalk/ paper]"
    },
    {
      "type": "pagefold",
      "id": "531885ade50cc3b8",
      "text": "Concepts"
    },
    {
      "type": "paragraph",
      "id": "d27b6883dd9ab438",
      "text": "concepts"
    },
    {
      "type": "pagefold",
      "id": "b6794ad442f62a23",
      "text": "Reflections"
    },
    {
      "type": "paragraph",
      "id": "fddf1312fb486735",
      "text": "reflections"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "The Early History Of Smalltalk",
        "story": [
          {
            "type": "pagefold",
            "id": "4d7ab76237995abf",
            "text": "Background"
          },
          {
            "type": "paragraph",
            "id": "5c803c459c728f4d",
            "text": "background [ wikipedia]"
          },
          {
            "type": "pagefold",
            "id": "531885ade50cc3b8",
            "text": "Concepts"
          },
          {
            "type": "paragraph",
            "id": "d27b6883dd9ab438",
            "text": "concepts"
          },
          {
            "type": "pagefold",
            "id": "b6794ad442f62a23",
            "text": "Reflections"
          },
          {
            "type": "paragraph",
            "id": "fddf1312fb486735",
            "text": "reflections"
          }
        ]
      },
      "date": 1645634803444
    },
    {
      "type": "edit",
      "id": "5c803c459c728f4d",
      "item": {
        "type": "paragraph",
        "id": "5c803c459c728f4d",
        "text": "Most ideas come from previous ideas. The sixties, particularly in the ARPA community, gave rise to a host of notions about \"human-computer symbiosis\" through interactive time-shared computers, graphics screens and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon-to-follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a \"better old thing.\" That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/$/volume demanded that the sixties be regarded as \"almost a new thing\" and to find out what the actual \"new things\" might be. For example, one would compute with a handheld \"Dynabook\" in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior.  [ wikipedia]"
      },
      "date": 1645634865546
    },
    {
      "type": "edit",
      "id": "5c803c459c728f4d",
      "item": {
        "type": "paragraph",
        "id": "5c803c459c728f4d",
        "text": "Most ideas come from previous ideas. The sixties, particularly in the ARPA community, gave rise to a host of notions about \"human-computer symbiosis\" through interactive time-shared computers, graphics screens and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon-to-follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a \"better old thing.\" That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/$/volume demanded that the sixties be regarded as \"almost a new thing\" and to find out what the actual \"new things\" might be. For example, one would compute with a handheld \"Dynabook\" in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior.  "
      },
      "date": 1645634873439
    },
    {
      "type": "add",
      "id": "bec52afa6c56a74c",
      "item": {
        "type": "paragraph",
        "id": "bec52afa6c56a74c",
        "text": "[ original paper]"
      },
      "after": "5c803c459c728f4d",
      "date": 1645634890819
    },
    {
      "type": "edit",
      "id": "bec52afa6c56a74c",
      "item": {
        "type": "paragraph",
        "id": "bec52afa6c56a74c",
        "text": "[http://worrydream.com/EarlyHistoryOfSmalltalk/ paper]"
      },
      "date": 1645634915748
    },
    {
      "type": "fork",
      "site": "wellspring.fed.wiki",
      "date": 1645690463378
    }
  ]
}