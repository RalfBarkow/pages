{
  "title": "MethodFinder",
  "story": [
    {
      "type": "markdown",
      "id": "3e9b400927dbfe14",
      "text": "I'm a method finder that will find methods from given examples in an array.\n\nThe examples array should contain one object for the receiver, one object per expected argument and then a final object with the expected result.\n\nIn other words \n - a unary method example expects an array of input objects #( receiver ) and an expected result\n - a binary method example expects an array with two input objects #( receiver argument ) and an expected result\n - a keyword method example expects an array with at least two elements  #( receiver argument1 argument2 ... ) and an expected results\n\nThe method finder will take the input objects (receiver and arguments) and perform their permutation to be able to find more results.\n\nThen, it will lookup in the receiver's hierarchy the approuved and forbidden methods to run on the hierarchy and run them on the permutation of objects.\n"
    },
    {
      "type": "code",
      "id": "2000e879a96d6ce6",
      "text": "MethodFinder new findMethodsByExampleInput: #( 1 2 ) andExpectedResult: 3"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "MethodFinder",
        "story": []
      },
      "date": 1656745628577
    },
    {
      "item": {
        "type": "factory",
        "id": "3e9b400927dbfe14"
      },
      "id": "3e9b400927dbfe14",
      "type": "add",
      "date": 1656745633799
    },
    {
      "type": "edit",
      "id": "3e9b400927dbfe14",
      "item": {
        "type": "markdown",
        "id": "3e9b400927dbfe14",
        "text": "I'm a method finder that will find methods from given examples in an array.\nThe examples array should contain one object for the receiver, one object per expected argument and then a final object with the expected result.\nIn other words \n - a unary method example expects an array of input objects #( receiver ) and an expected result\n - a binary method example expects an array with two input objects #( receiver argument ) and an expected result\n - a keyword method example expects an array with at least two elements  #( receiver argument1 argument2 ... ) and an expected results\n\nThe method finder will take the input objects (receiver and arguments) and perform their permutation to be able to find more results.\nThen, it will lookup in the receiver's hierarchy the approuved and forbidden methods to run on the hierarchy and run them on the permutation of objects.\n\nNewMethodFinder new findMethodsByExampleInput: #( 1 2 ) andExpectedResult: 3"
      },
      "date": 1656745635957
    },
    {
      "type": "edit",
      "id": "3e9b400927dbfe14",
      "item": {
        "type": "markdown",
        "id": "3e9b400927dbfe14",
        "text": "I'm a method finder that will find methods from given examples in an array.\n\nThe examples array should contain one object for the receiver, one object per expected argument and then a final object with the expected result.\n\nIn other words \n - a unary method example expects an array of input objects #( receiver ) and an expected result\n - a binary method example expects an array with two input objects #( receiver argument ) and an expected result\n - a keyword method example expects an array with at least two elements  #( receiver argument1 argument2 ... ) and an expected results\n\nThe method finder will take the input objects (receiver and arguments) and perform their permutation to be able to find more results.\nThen, it will lookup in the receiver's hierarchy the approuved and forbidden methods to run on the hierarchy and run them on the permutation of objects.\n\nNewMethodFinder new findMethodsByExampleInput: #( 1 2 ) andExpectedResult: 3"
      },
      "date": 1656747989077
    },
    {
      "type": "edit",
      "id": "3e9b400927dbfe14",
      "item": {
        "type": "markdown",
        "id": "3e9b400927dbfe14",
        "text": "I'm a method finder that will find methods from given examples in an array.\n\nThe examples array should contain one object for the receiver, one object per expected argument and then a final object with the expected result.\n\nIn other words \n - a unary method example expects an array of input objects #( receiver ) and an expected result\n - a binary method example expects an array with two input objects #( receiver argument ) and an expected result\n - a keyword method example expects an array with at least two elements  #( receiver argument1 argument2 ... ) and an expected results\n\nThe method finder will take the input objects (receiver and arguments) and perform their permutation to be able to find more results.\n\nThen, it will lookup in the receiver's hierarchy the approuved and forbidden methods to run on the hierarchy and run them on the permutation of objects.\n\nNewMethodFinder new findMethodsByExampleInput: #( 1 2 ) andExpectedResult: 3"
      },
      "date": 1656748014865
    },
    {
      "item": {
        "type": "factory",
        "id": "2000e879a96d6ce6"
      },
      "id": "2000e879a96d6ce6",
      "type": "add",
      "after": "3e9b400927dbfe14",
      "date": 1656748136235
    },
    {
      "type": "edit",
      "id": "3e9b400927dbfe14",
      "item": {
        "type": "markdown",
        "id": "3e9b400927dbfe14",
        "text": "I'm a method finder that will find methods from given examples in an array.\n\nThe examples array should contain one object for the receiver, one object per expected argument and then a final object with the expected result.\n\nIn other words \n - a unary method example expects an array of input objects #( receiver ) and an expected result\n - a binary method example expects an array with two input objects #( receiver argument ) and an expected result\n - a keyword method example expects an array with at least two elements  #( receiver argument1 argument2 ... ) and an expected results\n\nThe method finder will take the input objects (receiver and arguments) and perform their permutation to be able to find more results.\n\nThen, it will lookup in the receiver's hierarchy the approuved and forbidden methods to run on the hierarchy and run them on the permutation of objects.\n"
      },
      "date": 1656748144381
    },
    {
      "type": "edit",
      "id": "2000e879a96d6ce6",
      "item": {
        "type": "code",
        "id": "2000e879a96d6ce6",
        "text": "MethodFinder new findMethodsByExampleInput: #( 1 2 ) andExpectedResult: 3"
      },
      "date": 1656748149738
    }
  ]
}