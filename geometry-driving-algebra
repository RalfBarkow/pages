{
  "title": "Geometry Driving Algebra",
  "story": [
    {
      "type": "markdown",
      "id": "31b0be6bfd92d25a",
      "text": "[[Apparatus]] combines the direct manipulation capabilities of a vector graphics editor with the dataflow capabilities of a spreadsheet. Through this hybridization, Apparatus supports both spatial and symbolic ways of working in tandem. Dataflow defines the state space of a diagram, [[algebra driving geometry]]. Dragging shapes moves through this state space, **[[geometry driving algebra]]**. Instead of function calls or object-oriented inheritance, Apparatus uses a \"call by copying\" pattern for diagram reuse. Reused diagrams do not need to be explicitly parameterized. Instead of loops, Apparatus uses spreads which allow any value to exist in a \"superposition\". This allows shapes to be looped over implicitly. By decomposing shapes into paths of points, it also enables Apparatus to plot curves.\n\n\n"
    },
    {
      "type": "paragraph",
      "id": "d509201bc19cf7e8",
      "text": "See [[Crystal Clear]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Geometry Driving Algebra",
        "story": []
      },
      "date": 1650440209932
    },
    {
      "id": "31b0be6bfd92d25a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "31b0be6bfd92d25a",
        "text": "[[Apparatus]] combines the direct manipulation capabilities of a vector graphics editor with the dataflow capabilities of a spreadsheet. Through this hybridization, Apparatus supports both spatial and symbolic ways of working in tandem. Dataflow defines the state space of a diagram, algebra driving geometry. Dragging shapes moves through this state space, [[geometry driving algebra]]. Instead of function calls or object-oriented inheritance, Apparatus uses a \"call by copying\" pattern for diagram reuse. Reused diagrams do not need to be explicitly parameterized. Instead of loops, Apparatus uses spreads which allow any value to exist in a \"superposition\". This allows shapes to be looped over implicitly. By decomposing shapes into paths of points, it also enables Apparatus to plot curves.\n\n\n"
      },
      "date": 1650440242026
    },
    {
      "type": "edit",
      "id": "31b0be6bfd92d25a",
      "item": {
        "type": "paragraph",
        "id": "31b0be6bfd92d25a",
        "text": "[[Apparatus]] combines the direct manipulation capabilities of a vector graphics editor with the dataflow capabilities of a spreadsheet. Through this hybridization, Apparatus supports both spatial and symbolic ways of working in tandem. Dataflow defines the state space of a diagram, algebra driving geometry. Dragging shapes moves through this state space, **[[geometry driving algebra]]**. Instead of function calls or object-oriented inheritance, Apparatus uses a \"call by copying\" pattern for diagram reuse. Reused diagrams do not need to be explicitly parameterized. Instead of loops, Apparatus uses spreads which allow any value to exist in a \"superposition\". This allows shapes to be looped over implicitly. By decomposing shapes into paths of points, it also enables Apparatus to plot curves.\n\n\n"
      },
      "date": 1650440266984
    },
    {
      "type": "edit",
      "id": "31b0be6bfd92d25a",
      "item": {
        "type": "markdown",
        "id": "31b0be6bfd92d25a",
        "text": "[[Apparatus]] combines the direct manipulation capabilities of a vector graphics editor with the dataflow capabilities of a spreadsheet. Through this hybridization, Apparatus supports both spatial and symbolic ways of working in tandem. Dataflow defines the state space of a diagram, algebra driving geometry. Dragging shapes moves through this state space, **[[geometry driving algebra]]**. Instead of function calls or object-oriented inheritance, Apparatus uses a \"call by copying\" pattern for diagram reuse. Reused diagrams do not need to be explicitly parameterized. Instead of loops, Apparatus uses spreads which allow any value to exist in a \"superposition\". This allows shapes to be looped over implicitly. By decomposing shapes into paths of points, it also enables Apparatus to plot curves.\n\n\n"
      },
      "date": 1650440268569
    },
    {
      "type": "edit",
      "id": "31b0be6bfd92d25a",
      "item": {
        "type": "markdown",
        "id": "31b0be6bfd92d25a",
        "text": "[[Apparatus]] combines the direct manipulation capabilities of a vector graphics editor with the dataflow capabilities of a spreadsheet. Through this hybridization, Apparatus supports both spatial and symbolic ways of working in tandem. Dataflow defines the state space of a diagram, [[algebra driving geometry]]. Dragging shapes moves through this state space, **[[geometry driving algebra]]**. Instead of function calls or object-oriented inheritance, Apparatus uses a \"call by copying\" pattern for diagram reuse. Reused diagrams do not need to be explicitly parameterized. Instead of loops, Apparatus uses spreads which allow any value to exist in a \"superposition\". This allows shapes to be looped over implicitly. By decomposing shapes into paths of points, it also enables Apparatus to plot curves.\n\n\n"
      },
      "date": 1650440600999
    },
    {
      "item": {
        "type": "factory",
        "id": "d509201bc19cf7e8"
      },
      "id": "d509201bc19cf7e8",
      "type": "add",
      "after": "31b0be6bfd92d25a",
      "date": 1650440622035
    },
    {
      "type": "edit",
      "id": "d509201bc19cf7e8",
      "item": {
        "type": "paragraph",
        "id": "d509201bc19cf7e8",
        "text": "See [[Crystal Clear]]"
      },
      "date": 1650440637231
    }
  ]
}