{
  "title": "Reflector",
  "story": [
    {
      "type": "paragraph",
      "id": "90a70f0cc2ef14ed",
      "text": "Reflectors are stateless, public, message-passing services located in the cloud. When a reflector receives an event from a user, it mirrors it to all the other users in the same session."
    },
    {
      "type": "html",
      "id": "537121d653b5aad2",
      "text": "<center>\n  <img\n    widht=\"100%\"\n    src=\"https://croquet.io/docs/croquet/images/croquet_overview.svg\"\n  >\n</center>"
    },
    {
      "type": "markdown",
      "id": "e13bffb56752ed5c",
      "text": "Tutorial: ðŸ’¡ Model-View-Reflector. [https://croquet.io/docs/croquet/tutorial-2_1_model_view_reflector.html page]"
    },
    {
      "type": "pagefold",
      "id": "3141fff7e6849ff7",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ce1cd320c3374ad9",
      "text": "Your API Key gives your app access to Croquet's reflectors, as well as to Croquet's file servers for storing [[Snapshots]]."
    },
    {
      "type": "pagefold",
      "id": "e2123e3cb6423931",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "03e86c57678870f4",
      "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989268605743030282 discord]\nThere is a single reflector allocated for each session. All it does is bounce events generated by one peer in the session to all peers in the session, adding a time stamp. It also sends out timestamps automatically to advance computation time if there are no other events. In Microverse you can shift-click the QR code to see the message latency (there is currently a bug where you may have to shift-click on the border of the QR code instead)"
    },
    {
      "type": "paragraph",
      "id": "7f84f233492d76c3",
      "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989288208997179442 discord]\nFiles are served via Google CDN (that is model snapshots, or files you drop into your world â€“ they get encrypted, hashed, and uploaded so they can be efficiently cached). And we operate reflectors on every continent except Africa and Antarctica currently. "
    },
    {
      "type": "pagefold",
      "id": "6eb9a7a983924836",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9329be95e56b2574",
      "text": "â‡’ [[Run Your Local Reflector]] "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reflector",
        "story": []
      },
      "date": 1654179985012
    },
    {
      "item": {
        "type": "factory",
        "id": "ce1cd320c3374ad9"
      },
      "id": "ce1cd320c3374ad9",
      "type": "add",
      "date": 1654180058822
    },
    {
      "type": "edit",
      "id": "ce1cd320c3374ad9",
      "item": {
        "type": "paragraph",
        "id": "ce1cd320c3374ad9",
        "text": "Your API Key gives your app access to Croquet's reflectors, as well as to Croquet's file servers for storing snapshots."
      },
      "date": 1654180061142
    },
    {
      "item": {
        "type": "factory",
        "id": "e13bffb56752ed5c"
      },
      "id": "e13bffb56752ed5c",
      "type": "add",
      "after": "ce1cd320c3374ad9",
      "date": 1654180153112
    },
    {
      "type": "edit",
      "id": "e13bffb56752ed5c",
      "item": {
        "type": "paragraph",
        "id": "e13bffb56752ed5c",
        "text": "â€“ https://croquet.io/docs/croquet/tutorial-2_1_model_view_reflector.html"
      },
      "date": 1654180157122
    },
    {
      "type": "edit",
      "id": "e13bffb56752ed5c",
      "item": {
        "type": "markdown",
        "id": "e13bffb56752ed5c",
        "text": "â€“ https://croquet.io/docs/croquet/tutorial-2_1_model_view_reflector.html"
      },
      "date": 1654180158201
    },
    {
      "type": "edit",
      "id": "e13bffb56752ed5c",
      "item": {
        "type": "markdown",
        "id": "e13bffb56752ed5c",
        "text": "Tutorial: ðŸ’¡ Model-View-Reflector. [https://croquet.io/docs/croquet/tutorial-2_1_model_view_reflector.html page]"
      },
      "date": 1654180180436
    },
    {
      "item": {
        "type": "factory",
        "id": "90a70f0cc2ef14ed"
      },
      "id": "90a70f0cc2ef14ed",
      "type": "add",
      "after": "e13bffb56752ed5c",
      "date": 1654180199390
    },
    {
      "type": "edit",
      "id": "90a70f0cc2ef14ed",
      "item": {
        "type": "paragraph",
        "id": "90a70f0cc2ef14ed",
        "text": "Reflectors are stateless, public, message-passing services located in the cloud. When a reflector receives an event from a user, it mirrors it to all the other users in the same session."
      },
      "date": 1654180200891
    },
    {
      "id": "90a70f0cc2ef14ed",
      "type": "move",
      "order": [
        "90a70f0cc2ef14ed",
        "ce1cd320c3374ad9",
        "e13bffb56752ed5c"
      ],
      "date": 1654180202555
    },
    {
      "item": {
        "type": "factory",
        "id": "3141fff7e6849ff7"
      },
      "id": "3141fff7e6849ff7",
      "type": "add",
      "after": "e13bffb56752ed5c",
      "date": 1654180205119
    },
    {
      "type": "edit",
      "id": "3141fff7e6849ff7",
      "item": {
        "type": "pagefold",
        "id": "3141fff7e6849ff7",
        "text": "~"
      },
      "date": 1654180208053
    },
    {
      "id": "ce1cd320c3374ad9",
      "type": "move",
      "order": [
        "90a70f0cc2ef14ed",
        "e13bffb56752ed5c",
        "3141fff7e6849ff7",
        "ce1cd320c3374ad9"
      ],
      "date": 1654180210610
    },
    {
      "item": {
        "type": "factory",
        "id": "537121d653b5aad2"
      },
      "id": "537121d653b5aad2",
      "type": "add",
      "after": "ce1cd320c3374ad9",
      "date": 1654180240996
    },
    {
      "type": "edit",
      "id": "537121d653b5aad2",
      "item": {
        "type": "html",
        "id": "537121d653b5aad2",
        "text": "<center>\n  <img\n    widht=\"100%\"\n    src=\"https://croquet.io/docs/croquet/images/croquet_overview.svg\"\n  >\n</center>"
      },
      "date": 1654180272456
    },
    {
      "id": "537121d653b5aad2",
      "type": "move",
      "order": [
        "90a70f0cc2ef14ed",
        "537121d653b5aad2",
        "e13bffb56752ed5c",
        "3141fff7e6849ff7",
        "ce1cd320c3374ad9"
      ],
      "date": 1654180277177
    },
    {
      "type": "edit",
      "id": "ce1cd320c3374ad9",
      "item": {
        "type": "paragraph",
        "id": "ce1cd320c3374ad9",
        "text": "Your API Key gives your app access to Croquet's reflectors, as well as to Croquet's file servers for storing [[Snapshots]]."
      },
      "date": 1654182694102
    },
    {
      "item": {
        "type": "factory",
        "id": "e2123e3cb6423931"
      },
      "id": "e2123e3cb6423931",
      "type": "add",
      "after": "ce1cd320c3374ad9",
      "date": 1655988168209
    },
    {
      "type": "edit",
      "id": "e2123e3cb6423931",
      "item": {
        "type": "pagefold",
        "id": "e2123e3cb6423931",
        "text": "~"
      },
      "date": 1655988171461
    },
    {
      "item": {
        "type": "factory",
        "id": "03e86c57678870f4"
      },
      "id": "03e86c57678870f4",
      "type": "add",
      "after": "e2123e3cb6423931",
      "date": 1655988173290
    },
    {
      "type": "edit",
      "id": "03e86c57678870f4",
      "item": {
        "type": "paragraph",
        "id": "03e86c57678870f4",
        "text": "codefrau ðŸ¦© â€” gestern um 22:40 Uhr\nThere is a single reflector allocated for each session. All it does is bounce events generated by one peer in the session to all peers in the session, adding a time stamp. It also sends out timestamps automatically to advance computation time if there are no other events. In Microverse you can shift-click the QR code to see the message latency (there is currently a bug where you may have to shift-click on the border of the QR code instead)"
      },
      "date": 1655988182220
    },
    {
      "type": "edit",
      "id": "03e86c57678870f4",
      "item": {
        "type": "paragraph",
        "id": "03e86c57678870f4",
        "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989268605743030282 discord]\nThere is a single reflector allocated for each session. All it does is bounce events generated by one peer in the session to all peers in the session, adding a time stamp. It also sends out timestamps automatically to advance computation time if there are no other events. In Microverse you can shift-click the QR code to see the message latency (there is currently a bug where you may have to shift-click on the border of the QR code instead)"
      },
      "date": 1655988195547
    },
    {
      "item": {
        "type": "factory",
        "id": "7f84f233492d76c3"
      },
      "id": "7f84f233492d76c3",
      "type": "add",
      "after": "03e86c57678870f4",
      "date": 1655988277197
    },
    {
      "type": "edit",
      "id": "7f84f233492d76c3",
      "item": {
        "type": "paragraph",
        "id": "7f84f233492d76c3",
        "text": "codefrau ðŸ¦© â€” gestern um 23:58 Uhr\nFiles are served via Google CDN (that is model snapshots, or files you drop into your world â€“ they get encrypted, hashed, and uploaded so they can be efficiently cached). And we operate reflectors on every continent except Africa and Antarctica currently. "
      },
      "date": 1655988279027
    },
    {
      "type": "edit",
      "id": "7f84f233492d76c3",
      "item": {
        "type": "paragraph",
        "id": "7f84f233492d76c3",
        "text": "codefrau ðŸ¦© â€” [https://discord.com/channels/694586717247635488/966071402526543924/989288208997179442 discord]\nFiles are served via Google CDN (that is model snapshots, or files you drop into your world â€“ they get encrypted, hashed, and uploaded so they can be efficiently cached). And we operate reflectors on every continent except Africa and Antarctica currently. "
      },
      "date": 1655988302575
    },
    {
      "item": {
        "type": "factory",
        "id": "6eb9a7a983924836"
      },
      "id": "6eb9a7a983924836",
      "type": "add",
      "after": "7f84f233492d76c3",
      "date": 1676302985691
    },
    {
      "type": "edit",
      "id": "6eb9a7a983924836",
      "item": {
        "type": "pagefold",
        "id": "6eb9a7a983924836",
        "text": "~"
      },
      "date": 1676302989811
    },
    {
      "item": {
        "type": "factory",
        "id": "229d4194b4360218"
      },
      "id": "229d4194b4360218",
      "type": "add",
      "after": "6eb9a7a983924836",
      "date": 1676303893304
    },
    {
      "id": "9329be95e56b2574",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9329be95e56b2574",
        "text": "[[Run Your Local Reflector]] "
      },
      "after": "6eb9a7a983924836",
      "attribution": {
        "page": "2023-02-13"
      },
      "date": 1676303895860
    },
    {
      "type": "edit",
      "id": "9329be95e56b2574",
      "item": {
        "type": "paragraph",
        "id": "9329be95e56b2574",
        "text": "â‡’ [[Run Your Local Reflector]] "
      },
      "date": 1676303909172
    },
    {
      "type": "remove",
      "id": "229d4194b4360218",
      "date": 1676303911123
    }
  ]
}