{
  "title": "Flags",
  "story": [
    {
      "type": "paragraph",
      "id": "fa18c2b40c6c5405",
      "text": "Flags are a way to pass values into [[Elm]] on initialization. [https://guide.elm-lang.org/interop/flags.html guide]"
    },
    {
      "type": "markdown",
      "id": "63a636e9070dba8b",
      "text": "Common uses are passing in API keys, environment variables, and user data. This can be handy if you generate the HTML dynamically. They can also help us load cached information in this `localStorage` example [https://github.com/elm-community/js-integration-examples/tree/master/localStorage github]."
    },
    {
      "type": "markdown",
      "id": "42f2297a00aebf46",
      "text": "# Flags in HTML\nThe HTML is basically the same as before, but with an additional `flags` argument to the `Elm.Main.init()` function."
    },
    {
      "type": "assets",
      "id": "aaae078377da2a96",
      "text": "flags"
    },
    {
      "type": "paragraph",
      "id": "bda1f9e6028041fb",
      "text": "In this example we are passing in the current time in milliseconds, but any JS value that can be JSON decoded can be given as a flag."
    },
    {
      "type": "code",
      "id": "c822729878cdf960",
      "text": "<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Main</title>\n        <script src=\"main.js\"></script>\n    </head>\n\n    <body>\n        <div id=\"myapp\"></div>\n        <script>\n         var app = Elm.Main.init({\n             node: document.getElementById('myapp'),\n             flags: Date.now()\n         });\n        </script>\n    </body>\n</html>"
    },
    {
      "type": "markdown",
      "id": "869225816d6635db",
      "text": "**Note**: This additional data is called “flags” because it is kind of like command line flags. You can call `elm make src/Main.elm`, but you can add some flags like `--optimize` and `--output=main.js` to customize its behavior. Same sort of thing."
    },
    {
      "type": "pagefold",
      "id": "d2c11324eb571ca9",
      "text": "index.html"
    },
    {
      "type": "frame",
      "id": "9fcc35eb59a73070",
      "text": "https://wiki.ralfbarkow.ch/assets/flags/index.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Flags",
        "story": []
      },
      "date": 1638199257520
    },
    {
      "item": {
        "type": "factory",
        "id": "fa18c2b40c6c5405"
      },
      "id": "fa18c2b40c6c5405",
      "type": "add",
      "date": 1638199266229
    },
    {
      "type": "edit",
      "id": "fa18c2b40c6c5405",
      "item": {
        "type": "paragraph",
        "id": "fa18c2b40c6c5405",
        "text": "Flags are a way to pass values into [Elm] on initialization."
      },
      "date": 1638199273544
    },
    {
      "type": "edit",
      "id": "fa18c2b40c6c5405",
      "item": {
        "type": "paragraph",
        "id": "fa18c2b40c6c5405",
        "text": "Flags are a way to pass values into [[Elm]] on initialization."
      },
      "date": 1638199280821
    },
    {
      "type": "edit",
      "id": "fa18c2b40c6c5405",
      "item": {
        "type": "paragraph",
        "id": "fa18c2b40c6c5405",
        "text": "Flags are a way to pass values into [[Elm]] on initialization. [https://guide.elm-lang.org/interop/flags.html guide]"
      },
      "date": 1638199294520
    },
    {
      "item": {
        "type": "factory",
        "id": "63a636e9070dba8b"
      },
      "id": "63a636e9070dba8b",
      "type": "add",
      "after": "fa18c2b40c6c5405",
      "date": 1638199301210
    },
    {
      "type": "edit",
      "id": "63a636e9070dba8b",
      "item": {
        "type": "paragraph",
        "id": "63a636e9070dba8b",
        "text": "Common uses are passing in API keys, environment variables, and user data. This can be handy if you generate the HTML dynamically. They can also help us load cached information in this localStorage example."
      },
      "date": 1638199302498
    },
    {
      "type": "edit",
      "id": "63a636e9070dba8b",
      "item": {
        "type": "paragraph",
        "id": "63a636e9070dba8b",
        "text": "Common uses are passing in API keys, environment variables, and user data. This can be handy if you generate the HTML dynamically. They can also help us load cached information in this localStorage example [https://github.com/elm-community/js-integration-examples/tree/master/localStorage github]."
      },
      "date": 1638199341335
    },
    {
      "item": {
        "type": "factory",
        "id": "aaae078377da2a96"
      },
      "id": "aaae078377da2a96",
      "type": "add",
      "after": "63a636e9070dba8b",
      "date": 1638200614046
    },
    {
      "type": "edit",
      "id": "aaae078377da2a96",
      "item": {
        "type": "assets",
        "id": "aaae078377da2a96",
        "text": "flags"
      },
      "date": 1638200618804
    },
    {
      "item": {
        "type": "factory",
        "id": "9fcc35eb59a73070"
      },
      "id": "9fcc35eb59a73070",
      "type": "add",
      "after": "aaae078377da2a96",
      "date": 1638200638385
    },
    {
      "type": "edit",
      "id": "9fcc35eb59a73070",
      "item": {
        "type": "frame",
        "id": "9fcc35eb59a73070",
        "text": "https://wiki.ralfbarkow.ch/assets/flags/index.html"
      },
      "date": 1638200646378
    },
    {
      "item": {
        "type": "factory",
        "id": "42f2297a00aebf46"
      },
      "id": "42f2297a00aebf46",
      "type": "add",
      "after": "9fcc35eb59a73070",
      "date": 1638200686550
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "paragraph",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML"
      },
      "date": 1638200690165
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "markdown",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML"
      },
      "date": 1638200692020
    },
    {
      "id": "42f2297a00aebf46",
      "type": "move",
      "order": [
        "fa18c2b40c6c5405",
        "63a636e9070dba8b",
        "42f2297a00aebf46",
        "aaae078377da2a96",
        "9fcc35eb59a73070"
      ],
      "date": 1638200694931
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "markdown",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML\nThe HTML is basically the same as before, but with an additional flags argument to the Elm.Main.init() function"
      },
      "date": 1638200704544
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "markdown",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML\nThe HTML is basically the same as before, but with an additional `flags` argument to the `Elm.Main.init() function"
      },
      "date": 1638200721490
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "markdown",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML\nThe HTML is basically the same as before, but with an additional `flags` argument to the `Elm.Main.init()` function"
      },
      "date": 1638200728874
    },
    {
      "item": {
        "type": "factory",
        "id": "bda1f9e6028041fb"
      },
      "id": "bda1f9e6028041fb",
      "type": "add",
      "after": "9fcc35eb59a73070",
      "date": 1638200751484
    },
    {
      "type": "edit",
      "id": "bda1f9e6028041fb",
      "item": {
        "type": "paragraph",
        "id": "bda1f9e6028041fb",
        "text": "In this example we are passing in the current time in milliseconds, but any JS value that can be JSON decoded can be given as a flag."
      },
      "date": 1638200753600
    },
    {
      "id": "bda1f9e6028041fb",
      "type": "move",
      "order": [
        "fa18c2b40c6c5405",
        "63a636e9070dba8b",
        "42f2297a00aebf46",
        "aaae078377da2a96",
        "bda1f9e6028041fb",
        "9fcc35eb59a73070"
      ],
      "date": 1638200754983
    },
    {
      "item": {
        "type": "factory",
        "id": "c822729878cdf960"
      },
      "id": "c822729878cdf960",
      "type": "add",
      "after": "9fcc35eb59a73070",
      "date": 1638200904629
    },
    {
      "type": "edit",
      "id": "c822729878cdf960",
      "item": {
        "type": "code",
        "id": "c822729878cdf960",
        "text": "<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Main</title>\n        <script src=\"main.js\"></script>\n    </head>\n\n    <body>\n        <div id=\"myapp\"></div>\n        <script>\n         var app = Elm.Main.init({\n             node: document.getElementById('myapp'),\n             flags: Date.now()\n         });\n        </script>\n    </body>\n</html>"
      },
      "date": 1638200906533
    },
    {
      "id": "c822729878cdf960",
      "type": "move",
      "order": [
        "fa18c2b40c6c5405",
        "63a636e9070dba8b",
        "42f2297a00aebf46",
        "aaae078377da2a96",
        "bda1f9e6028041fb",
        "c822729878cdf960",
        "9fcc35eb59a73070"
      ],
      "date": 1638200908836
    },
    {
      "item": {
        "type": "factory",
        "id": "869225816d6635db"
      },
      "id": "869225816d6635db",
      "type": "add",
      "after": "9fcc35eb59a73070",
      "date": 1638200948294
    },
    {
      "type": "edit",
      "id": "869225816d6635db",
      "item": {
        "type": "paragraph",
        "id": "869225816d6635db",
        "text": "Note: This additional data is called “flags” because it is kind of like command line flags. You can call elm make src/Main.elm, but you can add some flags like --optimize and --output=main.js to customize its behavior. Same sort of thing."
      },
      "date": 1638200950215
    },
    {
      "id": "869225816d6635db",
      "type": "move",
      "order": [
        "fa18c2b40c6c5405",
        "63a636e9070dba8b",
        "42f2297a00aebf46",
        "aaae078377da2a96",
        "bda1f9e6028041fb",
        "c822729878cdf960",
        "869225816d6635db",
        "9fcc35eb59a73070"
      ],
      "date": 1638200951971
    },
    {
      "type": "edit",
      "id": "869225816d6635db",
      "item": {
        "type": "paragraph",
        "id": "869225816d6635db",
        "text": "**Note**: This additional data is called “flags” because it is kind of like command line flags. You can call elm make src/Main.elm, but you can add some flags like --optimize and --output=main.js to customize its behavior. Same sort of thing."
      },
      "date": 1638200962580
    },
    {
      "type": "edit",
      "id": "869225816d6635db",
      "item": {
        "type": "markdown",
        "id": "869225816d6635db",
        "text": "**Note**: This additional data is called “flags” because it is kind of like command line flags. You can call elm make src/Main.elm, but you can add some flags like --optimize and --output=main.js to customize its behavior. Same sort of thing."
      },
      "date": 1638200963819
    },
    {
      "type": "edit",
      "id": "869225816d6635db",
      "item": {
        "type": "markdown",
        "id": "869225816d6635db",
        "text": "**Note**: This additional data is called “flags” because it is kind of like command line flags. You can call `elm make src/Main.elm`, but you can add some flags like `--optimize` and `--output=main.js` to customize its behavior. Same sort of thing."
      },
      "date": 1638200998225
    },
    {
      "item": {
        "type": "factory",
        "id": "d2c11324eb571ca9"
      },
      "id": "d2c11324eb571ca9",
      "type": "add",
      "after": "9fcc35eb59a73070",
      "date": 1638201053165
    },
    {
      "type": "edit",
      "id": "d2c11324eb571ca9",
      "item": {
        "type": "pagefold",
        "id": "d2c11324eb571ca9",
        "text": "index.html"
      },
      "date": 1638201057663
    },
    {
      "id": "d2c11324eb571ca9",
      "type": "move",
      "order": [
        "fa18c2b40c6c5405",
        "63a636e9070dba8b",
        "42f2297a00aebf46",
        "aaae078377da2a96",
        "bda1f9e6028041fb",
        "c822729878cdf960",
        "869225816d6635db",
        "d2c11324eb571ca9",
        "9fcc35eb59a73070"
      ],
      "date": 1638201062062
    },
    {
      "type": "edit",
      "id": "63a636e9070dba8b",
      "item": {
        "type": "markdown",
        "id": "63a636e9070dba8b",
        "text": "Common uses are passing in API keys, environment variables, and user data. This can be handy if you generate the HTML dynamically. They can also help us load cached information in this `localStorage` example [https://github.com/elm-community/js-integration-examples/tree/master/localStorage github]."
      },
      "date": 1638201155230
    },
    {
      "type": "edit",
      "id": "63a636e9070dba8b",
      "item": {
        "type": "markdown",
        "id": "63a636e9070dba8b",
        "text": "Common uses are passing in API keys, environment variables, and user data. This can be handy if you generate the HTML dynamically. They can also help us load cached information in this `localStorage` example [https://github.com/elm-community/js-integration-examples/tree/master/localStorage github]."
      },
      "date": 1638201158231
    },
    {
      "type": "edit",
      "id": "42f2297a00aebf46",
      "item": {
        "type": "markdown",
        "id": "42f2297a00aebf46",
        "text": "# Flags in HTML\nThe HTML is basically the same as before, but with an additional `flags` argument to the `Elm.Main.init()` function."
      },
      "date": 1638201199611
    },
    {
      "type": "fork",
      "date": 1638201210140
    }
  ]
}