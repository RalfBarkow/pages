{
  "title": "2023-04-24",
  "story": [
    {
      "type": "paragraph",
      "id": "3954cf1e11c88055",
      "text": "BRÅTEN, Stein. Beteiligte Spiegelung. Alterzentrische Lernprozesse in der Kleinkindentwicklung und der Evolution. Wenzel, U., Bretzinger, B. & Holz, K.(Hg.): Subjekte und Gesellschaft. Zur Konstitution von Sozialität. Weilerswist (Velbrück Wissenschaft), 2003, S. 139-216."
    },
    {
      "type": "paragraph",
      "id": "b507a63a48a33926",
      "text": "BRÅTEN, Stein, 2011. Intersubjektive Partizipation: Bewegungen des virtuellen Anderen bei Säuglingen und Erwachsenen. Psyche. 2011. Vol. 65, no. 9–10, p. 832–861. \n\nIntersubjective participation: Virtual other movements in infants and adults\nIn contrast to the egocentric point of departure for child development attributed by the Piagetian tradition, illustrations are given of newborns imitating and engaging in protodialogue with caregivers, and of prosocial behavior afforded by infants (11 months or older). An explanation is offered in terms of the virtual-other mechanism enabling altercentric participation in the other’s movements, and with the likely support of mirror neurons. Circular re-enactment of care and abuse is accounted for in terms of learning by virtual-other participation – a capacity that is partly blocked in autism and in postnatal depression, but which supports higher-order layers of intersubjective capacities in typical individuals."
    },
    {
      "type": "pagefold",
      "id": "5d00de5a977e9672",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b7f4bc2e6e2bbcc4",
      "text": "elm-pages scripts"
    },
    {
      "type": "code",
      "id": "77af984c9edbf8aa",
      "text": "module Stars exposing (run)\n\nimport BackendTask exposing (BackendTask)\nimport BackendTask.Http\nimport Cli.Option as Option\nimport Cli.OptionsParser as OptionsParser\nimport Cli.Program as Program\nimport Json.Decode as Decode\nimport Pages.Script as Script exposing (Script)\n\n\nrun : Script\nrun =\n    Script.withCliOptions program\n        (\\{ username, repo } ->\n            BackendTask.Http.getJson\n                (\"https://api.github.com/repos/dillonkearns/\" ++ repo)\n                (Decode.field \"stargazers_count\" Decode.int)\n                |> BackendTask.allowFatal\n                |> BackendTask.andThen\n                    (\\stars ->\n                        Script.log (String.fromInt stars)\n                    )\n        )\n\n\ntype alias CliOptions =\n    { username : String\n    , repo : String\n    }\n\n\nprogram : Program.Config CliOptions\nprogram =\n    Program.config\n        |> Program.add\n            (OptionsParser.build CliOptions\n                |> OptionsParser.with\n                    (Option.optionalKeywordArg \"username\" |> Option.withDefault \"dillonkearns\")\n                |> OptionsParser.with\n                    (Option.optionalKeywordArg \"repo\" |> Option.withDefault \"elm-pages\")\n            )\n"
    },
    {
      "type": "paragraph",
      "id": "beda34851fac3b14",
      "text": "chat.openai: This is Elm source code for a module named \"Stars\" that exposes a single function named \"run\". The purpose of this code appears to be to retrieve the number of stars on a GitHub repository and log that number.\n\n"
    },
    {
      "type": "paragraph",
      "id": "5e057329311d4a89",
      "text": "The code imports several modules, including \"[[BackendTask]]\" and its \"Http\" submodule, \"Cli.Option\" and \"Cli.OptionsParser\" for command-line argument parsing, \"Cli.Program\" for managing the program, \"Json.Decode\" for decoding JSON data, and \"Pages.Script\" for logging.\n\nThe \"run\" function first calls \"Script.withCliOptions\" and passes in a program configuration. This function takes a program configuration and a callback function to execute when the CLI options are parsed. The callback function receives an object containing parsed CLI options, in this case \"username\" and \"repo\". Within the callback function, \"BackendTask.Http.getJson\" is called with a URL to retrieve JSON data from the GitHub API for the specified repository. The \"Decode.field\" function is used to decode the \"stargazers_count\" field from the JSON data as an integer. The resulting integer value is logged using \"Script.log\". The \"allowFatal\" and \"andThen\" functions are used to handle error cases and provide flow control.\n\nThe \"CliOptions\" type alias defines the structure of the parsed CLI options, including a \"username\" and \"repo\" field.\n\nThe \"program\" value is a configuration for the program that is passed to \"Script.withCliOptions\". It sets up the \"CliOptions\" using \"OptionsParser\" with default values for \"username\" and \"repo\"."
    },
    {
      "type": "pagefold",
      "id": "ed7ed17c9aeb646a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "f5fa149804bd540c",
      "text": "How to optimize [[Elm]] code [https://github.com/elm/compiler/blob/master/hints/optimize.md#how-to-optimize-elm-code page]"
    },
    {
      "type": "paragraph",
      "id": "e5297ad0370e30d7",
      "text": "elm-vue-bridge [https://github.com/lindsaykwardell/elm-vue-bridge github], [https://elm-vue-bridge.lindsaykwardell.com/api.html docs]"
    },
    {
      "type": "paragraph",
      "id": "a20289891a9af918",
      "text": "⇒ [[Philosophy of Open Science]]"
    },
    {
      "type": "pagefold",
      "id": "39c4b83ad7e4e741",
      "text": "elm-pages"
    },
    {
      "type": "paragraph",
      "id": "c020869ec8f32ccd",
      "text": "mbp-rgb: /Users/rgb/Projects/RalfBarkow/elm-pages-3-alpha-starter"
    },
    {
      "type": "code",
      "id": "35aa6ae41dee36eb",
      "text": "npx elm-pages run Stars --repo elm-graphql"
    },
    {
      "type": "paragraph",
      "id": "2d87087916d7cb98",
      "text": "757 stars [https://github.com/dillonkearns/elm-graphql github], [https://medium.com/open-graphql/type-safe-composable-graphql-in-elm-b3378cc8d021 post]"
    },
    {
      "type": "paragraph",
      "id": "a94f3e3e6a953468",
      "text": "⇒ [[Types without Borders]]"
    },
    {
      "type": "paragraph",
      "id": "04db5c336f8adaef",
      "text": "How to integrate the elm-form example into the elm-pages my-project?"
    },
    {
      "type": "paragraph",
      "id": "d95bd0897af812c9",
      "text": "chat.openai.: Note that buildNoState is useful for building simple pages that don't require any internal state management, but for more complex pages, you may need to use the build function instead, which allows you to define a Model and Msg type for your page's internal state."
    },
    {
      "type": "pagefold",
      "id": "f85420dfaa10c809",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "0a3b3cf3eca5160a",
      "text": "⇒ [[Civil Defense]] ⇒ [[Zivilschutz]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-04-24",
        "story": []
      },
      "date": 1682323344464
    },
    {
      "item": {
        "type": "factory",
        "id": "3954cf1e11c88055"
      },
      "id": "3954cf1e11c88055",
      "type": "add",
      "date": 1682323346189
    },
    {
      "type": "edit",
      "id": "3954cf1e11c88055",
      "item": {
        "type": "paragraph",
        "id": "3954cf1e11c88055",
        "text": "BRÅTEN, Stein. Beteiligte Spiegelung. Alterzentrische Lernprozesse in der Kleinkindentwicklung und der Evolution. Wenzel, U., Bretzinger, B. & Holz, K.(Hg.): Subjekte und Gesellschaft. Zur Konstitution von Sozialität. Weilerswist (Velbrück Wissenschaft), 2003, S. 139-216."
      },
      "date": 1682323351567
    },
    {
      "item": {
        "type": "factory",
        "id": "b507a63a48a33926"
      },
      "id": "b507a63a48a33926",
      "type": "add",
      "after": "3954cf1e11c88055",
      "date": 1682325387340
    },
    {
      "type": "edit",
      "id": "b507a63a48a33926",
      "item": {
        "type": "paragraph",
        "id": "b507a63a48a33926",
        "text": "BRÅTEN, Stein, 2011. Intersubjektive Partizipation: Bewegungen des virtuellen Anderen bei Säuglingen und Erwachsenen. Psyche. 2011. Vol. 65, no. 9–10, p. 832–861. \n\nIntersubjective participation: Virtual other movements in infants and adults\nIn contrast to the egocentric point of departure for child development attributed by the Piagetian tradition, illustrations are given of newborns imitating and engaging in protodialogue with caregivers, and of prosocial behavior afforded by infants (11 months or older). An explanation is offered in terms of the virtual-other mechanism enabling altercentric participation in the other’s movements, and with the likely support of mirror neurons. Circular re-enactment of care and abuse is accounted for in terms of learning by virtual-other participation – a capacity that is partly blocked in autism and in postnatal depression, but which supports higher-order layers of intersubjective capacities in typical individuals."
      },
      "date": 1682325389211
    },
    {
      "item": {
        "type": "factory",
        "id": "5d00de5a977e9672"
      },
      "id": "5d00de5a977e9672",
      "type": "add",
      "after": "b507a63a48a33926",
      "date": 1682332896307
    },
    {
      "type": "edit",
      "id": "5d00de5a977e9672",
      "item": {
        "type": "pagefold",
        "id": "5d00de5a977e9672",
        "text": "~"
      },
      "date": 1682332899845
    },
    {
      "item": {
        "type": "factory",
        "id": "77af984c9edbf8aa"
      },
      "id": "77af984c9edbf8aa",
      "type": "add",
      "after": "5d00de5a977e9672",
      "date": 1682332901347
    },
    {
      "type": "edit",
      "id": "77af984c9edbf8aa",
      "item": {
        "type": "code",
        "id": "77af984c9edbf8aa",
        "text": "module Stars exposing (run)\n\nimport BackendTask exposing (BackendTask)\nimport BackendTask.Http\nimport Cli.Option as Option\nimport Cli.OptionsParser as OptionsParser\nimport Cli.Program as Program\nimport Json.Decode as Decode\nimport Pages.Script as Script exposing (Script)\n\n\nrun : Script\nrun =\n    Script.withCliOptions program\n        (\\{ username, repo } ->\n            BackendTask.Http.getJson\n                (\"https://api.github.com/repos/dillonkearns/\" ++ repo)\n                (Decode.field \"stargazers_count\" Decode.int)\n                |> BackendTask.allowFatal\n                |> BackendTask.andThen\n                    (\\stars ->\n                        Script.log (String.fromInt stars)\n                    )\n        )\n\n\ntype alias CliOptions =\n    { username : String\n    , repo : String\n    }\n\n\nprogram : Program.Config CliOptions\nprogram =\n    Program.config\n        |> Program.add\n            (OptionsParser.build CliOptions\n                |> OptionsParser.with\n                    (Option.optionalKeywordArg \"username\" |> Option.withDefault \"dillonkearns\")\n                |> OptionsParser.with\n                    (Option.optionalKeywordArg \"repo\" |> Option.withDefault \"elm-pages\")\n            )\n"
      },
      "date": 1682332903516
    },
    {
      "item": {
        "type": "factory",
        "id": "b7f4bc2e6e2bbcc4"
      },
      "id": "b7f4bc2e6e2bbcc4",
      "type": "add",
      "after": "77af984c9edbf8aa",
      "date": 1682332941259
    },
    {
      "type": "edit",
      "id": "b7f4bc2e6e2bbcc4",
      "item": {
        "type": "paragraph",
        "id": "b7f4bc2e6e2bbcc4",
        "text": "elm-pages scripts"
      },
      "date": 1682332943577
    },
    {
      "id": "b7f4bc2e6e2bbcc4",
      "type": "move",
      "order": [
        "3954cf1e11c88055",
        "b507a63a48a33926",
        "5d00de5a977e9672",
        "b7f4bc2e6e2bbcc4",
        "77af984c9edbf8aa"
      ],
      "date": 1682332947159
    },
    {
      "item": {
        "type": "factory",
        "id": "beda34851fac3b14"
      },
      "id": "beda34851fac3b14",
      "type": "add",
      "after": "77af984c9edbf8aa",
      "date": 1682333085722
    },
    {
      "type": "edit",
      "id": "beda34851fac3b14",
      "item": {
        "type": "paragraph",
        "id": "beda34851fac3b14",
        "text": "chat.openai: This is Elm source code for a module named \"Stars\" that exposes a single function named \"run\". The purpose of this code appears to be to retrieve the number of stars on a GitHub repository and log that number.\n\nThe code imports several modules, including \"BackendTask\" and its \"Http\" submodule, \"Cli.Option\" and \"Cli.OptionsParser\" for command-line argument parsing, \"Cli.Program\" for managing the program, \"Json.Decode\" for decoding JSON data, and \"Pages.Script\" for logging.\n\nThe \"run\" function first calls \"Script.withCliOptions\" and passes in a program configuration. This function takes a program configuration and a callback function to execute when the CLI options are parsed. The callback function receives an object containing parsed CLI options, in this case \"username\" and \"repo\". Within the callback function, \"BackendTask.Http.getJson\" is called with a URL to retrieve JSON data from the GitHub API for the specified repository. The \"Decode.field\" function is used to decode the \"stargazers_count\" field from the JSON data as an integer. The resulting integer value is logged using \"Script.log\". The \"allowFatal\" and \"andThen\" functions are used to handle error cases and provide flow control.\n\nThe \"CliOptions\" type alias defines the structure of the parsed CLI options, including a \"username\" and \"repo\" field.\n\nThe \"program\" value is a configuration for the program that is passed to \"Script.withCliOptions\". It sets up the \"CliOptions\" using \"OptionsParser\" with default values for \"username\" and \"repo\"."
      },
      "date": 1682333091455
    },
    {
      "type": "edit",
      "id": "beda34851fac3b14",
      "item": {
        "type": "paragraph",
        "id": "beda34851fac3b14",
        "text": "chat.openai: This is Elm source code for a module named \"Stars\" that exposes a single function named \"run\". The purpose of this code appears to be to retrieve the number of stars on a GitHub repository and log that number.\n\n"
      },
      "date": 1682333173576
    },
    {
      "type": "add",
      "id": "5e057329311d4a89",
      "item": {
        "type": "paragraph",
        "id": "5e057329311d4a89",
        "text": "The code imports several modules, including \"[[BackendTask]]\" and its \"Http\" submodule, \"Cli.Option\" and \"Cli.OptionsParser\" for command-line argument parsing, \"Cli.Program\" for managing the program, \"Json.Decode\" for decoding JSON data, and \"Pages.Script\" for logging.\n\nThe \"run\" function first calls \"Script.withCliOptions\" and passes in a program configuration. This function takes a program configuration and a callback function to execute when the CLI options are parsed. The callback function receives an object containing parsed CLI options, in this case \"username\" and \"repo\". Within the callback function, \"BackendTask.Http.getJson\" is called with a URL to retrieve JSON data from the GitHub API for the specified repository. The \"Decode.field\" function is used to decode the \"stargazers_count\" field from the JSON data as an integer. The resulting integer value is logged using \"Script.log\". The \"allowFatal\" and \"andThen\" functions are used to handle error cases and provide flow control.\n\nThe \"CliOptions\" type alias defines the structure of the parsed CLI options, including a \"username\" and \"repo\" field.\n\nThe \"program\" value is a configuration for the program that is passed to \"Script.withCliOptions\". It sets up the \"CliOptions\" using \"OptionsParser\" with default values for \"username\" and \"repo\"."
      },
      "after": "beda34851fac3b14",
      "date": 1682333180985
    },
    {
      "item": {
        "type": "factory",
        "id": "ed7ed17c9aeb646a"
      },
      "id": "ed7ed17c9aeb646a",
      "type": "add",
      "after": "5e057329311d4a89",
      "date": 1682334353147
    },
    {
      "type": "edit",
      "id": "ed7ed17c9aeb646a",
      "item": {
        "type": "pagefold",
        "id": "ed7ed17c9aeb646a",
        "text": "~"
      },
      "date": 1682334356919
    },
    {
      "item": {
        "type": "factory",
        "id": "a20289891a9af918"
      },
      "id": "a20289891a9af918",
      "type": "add",
      "after": "ed7ed17c9aeb646a",
      "date": 1682334359121
    },
    {
      "type": "edit",
      "id": "a20289891a9af918",
      "item": {
        "type": "paragraph",
        "id": "a20289891a9af918",
        "text": "⇒ [[Philosophy of Open Science]]"
      },
      "date": 1682334372543
    },
    {
      "item": {
        "type": "factory",
        "id": "f5fa149804bd540c"
      },
      "id": "f5fa149804bd540c",
      "type": "add",
      "after": "a20289891a9af918",
      "date": 1682338169588
    },
    {
      "id": "f5fa149804bd540c",
      "type": "move",
      "order": [
        "3954cf1e11c88055",
        "b507a63a48a33926",
        "5d00de5a977e9672",
        "b7f4bc2e6e2bbcc4",
        "77af984c9edbf8aa",
        "beda34851fac3b14",
        "5e057329311d4a89",
        "ed7ed17c9aeb646a",
        "f5fa149804bd540c",
        "a20289891a9af918"
      ],
      "date": 1682338171264
    },
    {
      "type": "edit",
      "id": "f5fa149804bd540c",
      "item": {
        "type": "paragraph",
        "id": "f5fa149804bd540c",
        "text": "How to optimize Elm code"
      },
      "date": 1682338174011
    },
    {
      "type": "edit",
      "id": "f5fa149804bd540c",
      "item": {
        "type": "paragraph",
        "id": "f5fa149804bd540c",
        "text": "How to optimize Elm code [https://github.com/elm/compiler/blob/master/hints/optimize.md#how-to-optimize-elm-code page]"
      },
      "date": 1682338188183
    },
    {
      "type": "edit",
      "id": "f5fa149804bd540c",
      "item": {
        "type": "paragraph",
        "id": "f5fa149804bd540c",
        "text": "How to optimize [[Elm]] code [https://github.com/elm/compiler/blob/master/hints/optimize.md#how-to-optimize-elm-code page]"
      },
      "date": 1682338686347
    },
    {
      "item": {
        "type": "factory",
        "id": "e5297ad0370e30d7"
      },
      "id": "e5297ad0370e30d7",
      "type": "add",
      "after": "a20289891a9af918",
      "date": 1682351550259
    },
    {
      "id": "e5297ad0370e30d7",
      "type": "move",
      "order": [
        "3954cf1e11c88055",
        "b507a63a48a33926",
        "5d00de5a977e9672",
        "b7f4bc2e6e2bbcc4",
        "77af984c9edbf8aa",
        "beda34851fac3b14",
        "5e057329311d4a89",
        "ed7ed17c9aeb646a",
        "f5fa149804bd540c",
        "e5297ad0370e30d7",
        "a20289891a9af918"
      ],
      "date": 1682351553209
    },
    {
      "type": "edit",
      "id": "e5297ad0370e30d7",
      "item": {
        "type": "paragraph",
        "id": "e5297ad0370e30d7",
        "text": "elm-vue-bridge"
      },
      "date": 1682351556303
    },
    {
      "type": "edit",
      "id": "e5297ad0370e30d7",
      "item": {
        "type": "paragraph",
        "id": "e5297ad0370e30d7",
        "text": "elm-vue-bridge [https://github.com/lindsaykwardell/elm-vue-bridge github]"
      },
      "date": 1682351565041
    },
    {
      "type": "edit",
      "id": "e5297ad0370e30d7",
      "item": {
        "type": "paragraph",
        "id": "e5297ad0370e30d7",
        "text": "elm-vue-bridge [https://github.com/lindsaykwardell/elm-vue-bridge github], [https://elm-vue-bridge.lindsaykwardell.com/api.html doc]"
      },
      "date": 1682351709100
    },
    {
      "type": "edit",
      "id": "e5297ad0370e30d7",
      "item": {
        "type": "paragraph",
        "id": "e5297ad0370e30d7",
        "text": "elm-vue-bridge [https://github.com/lindsaykwardell/elm-vue-bridge github], [https://elm-vue-bridge.lindsaykwardell.com/api.html docs]"
      },
      "date": 1682351714605
    },
    {
      "item": {
        "type": "factory",
        "id": "5ec18bb73d039657"
      },
      "id": "5ec18bb73d039657",
      "type": "add",
      "after": "a20289891a9af918",
      "date": 1682355460474
    },
    {
      "type": "edit",
      "id": "5ec18bb73d039657",
      "item": {
        "type": "paragraph",
        "id": "5ec18bb73d039657",
        "text": "―― 18:33:46 - ghcup ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\n[ Info  ] downloading: https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-0.0.7.yaml as file /Users/rgb/.ghcup/cache/ghcup-0.0.7.yaml\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n[ Warn  ] New ghc version available. If you want to install this latest version, run 'ghcup install ghc 9.6.1'\n[ Warn  ] New cabal version available. If you want to install this latest version, run 'ghcup install cabal 3.10.1.0'\n[ Warn  ] New hls version available. If you want to install this latest version, run 'ghcup install hls 1.10.0.0'\n[ Warn  ] New stack version available. If you want to install this latest version, run 'ghcup install stack 2.9.3'\n[ Info  ] Upgrading GHCup...\n[ Warn  ] No GHCup update available"
      },
      "date": 1682355462308
    },
    {
      "item": {
        "type": "factory",
        "id": "c020869ec8f32ccd"
      },
      "id": "c020869ec8f32ccd",
      "type": "add",
      "after": "5ec18bb73d039657",
      "date": 1682370699968
    },
    {
      "type": "edit",
      "id": "c020869ec8f32ccd",
      "item": {
        "type": "paragraph",
        "id": "c020869ec8f32ccd",
        "text": "/Users/rgb/Projects/RalfBarkow/elm-pages-3-alpha-starter"
      },
      "date": 1682370705297
    },
    {
      "item": {
        "type": "factory",
        "id": "39c4b83ad7e4e741"
      },
      "id": "39c4b83ad7e4e741",
      "type": "add",
      "after": "c020869ec8f32ccd",
      "date": 1682370718027
    },
    {
      "type": "edit",
      "id": "39c4b83ad7e4e741",
      "item": {
        "type": "pagefold",
        "id": "39c4b83ad7e4e741",
        "text": "elm-pages"
      },
      "date": 1682370721581
    },
    {
      "id": "39c4b83ad7e4e741",
      "type": "move",
      "order": [
        "3954cf1e11c88055",
        "b507a63a48a33926",
        "5d00de5a977e9672",
        "b7f4bc2e6e2bbcc4",
        "77af984c9edbf8aa",
        "beda34851fac3b14",
        "5e057329311d4a89",
        "ed7ed17c9aeb646a",
        "f5fa149804bd540c",
        "e5297ad0370e30d7",
        "a20289891a9af918",
        "5ec18bb73d039657",
        "39c4b83ad7e4e741",
        "c020869ec8f32ccd"
      ],
      "date": 1682370723542
    },
    {
      "type": "edit",
      "id": "c020869ec8f32ccd",
      "item": {
        "type": "paragraph",
        "id": "c020869ec8f32ccd",
        "text": "mbp-rgb: /Users/rgb/Projects/RalfBarkow/elm-pages-3-alpha-starter"
      },
      "date": 1682370742305
    },
    {
      "item": {
        "type": "factory",
        "id": "35aa6ae41dee36eb"
      },
      "id": "35aa6ae41dee36eb",
      "type": "add",
      "after": "c020869ec8f32ccd",
      "date": 1682370766516
    },
    {
      "type": "edit",
      "id": "35aa6ae41dee36eb",
      "item": {
        "type": "code",
        "id": "35aa6ae41dee36eb",
        "text": "npx elm-pages run Stars --repo elm-graphql"
      },
      "date": 1682370769348
    },
    {
      "item": {
        "type": "factory",
        "id": "2d87087916d7cb98"
      },
      "id": "2d87087916d7cb98",
      "type": "add",
      "after": "35aa6ae41dee36eb",
      "date": 1682370787749
    },
    {
      "type": "edit",
      "id": "2d87087916d7cb98",
      "item": {
        "type": "paragraph",
        "id": "2d87087916d7cb98",
        "text": "756"
      },
      "date": 1682370790188
    },
    {
      "type": "edit",
      "id": "2d87087916d7cb98",
      "item": {
        "type": "paragraph",
        "id": "2d87087916d7cb98",
        "text": "757 stars"
      },
      "date": 1682370928770
    },
    {
      "type": "edit",
      "id": "2d87087916d7cb98",
      "item": {
        "type": "paragraph",
        "id": "2d87087916d7cb98",
        "text": "757 stars [https://github.com/dillonkearns/elm-graphql github]"
      },
      "date": 1682370947881
    },
    {
      "type": "edit",
      "id": "2d87087916d7cb98",
      "item": {
        "type": "paragraph",
        "id": "2d87087916d7cb98",
        "text": "757 stars [https://github.com/dillonkearns/elm-graphql github], [https://medium.com/open-graphql/type-safe-composable-graphql-in-elm-b3378cc8d021 post]"
      },
      "date": 1682370982882
    },
    {
      "item": {
        "type": "factory",
        "id": "a94f3e3e6a953468"
      },
      "id": "a94f3e3e6a953468",
      "type": "add",
      "after": "2d87087916d7cb98",
      "date": 1682371219411
    },
    {
      "type": "edit",
      "id": "a94f3e3e6a953468",
      "item": {
        "type": "paragraph",
        "id": "a94f3e3e6a953468",
        "text": "⇒ [[Types without Borders]]"
      },
      "date": 1682371227947
    },
    {
      "type": "add",
      "id": "ca29b83526e641eb",
      "item": {
        "type": "paragraph",
        "id": "ca29b83526e641eb",
        "text": "mbp-bs: "
      },
      "after": "a94f3e3e6a953468",
      "date": 1682372871258
    },
    {
      "type": "edit",
      "id": "ca29b83526e641eb",
      "item": {
        "type": "paragraph",
        "id": "ca29b83526e641eb",
        "text": "mbp-bs: /Users/rgb/.jenv/shims/node"
      },
      "date": 1682372886750
    },
    {
      "type": "add",
      "id": "bda83ca20edd3032",
      "item": {
        "type": "paragraph",
        "id": "bda83ca20edd3032",
        "text": "➜  shims node -v                                                                                                                            ~/.jenv/shims\nv19.7.0"
      },
      "after": "ca29b83526e641eb",
      "date": 1682372922432
    },
    {
      "type": "edit",
      "id": "bda83ca20edd3032",
      "item": {
        "type": "paragraph",
        "id": "bda83ca20edd3032",
        "text": "➜  shims node -v"
      },
      "date": 1682372934574
    },
    {
      "type": "add",
      "id": "beeb27bbb7a8400d",
      "item": {
        "type": "paragraph",
        "id": "beeb27bbb7a8400d",
        "text": "                                                                                                                       ~/.jenv/shims\nv19.7.0"
      },
      "after": "bda83ca20edd3032",
      "date": 1682372940467
    },
    {
      "type": "edit",
      "id": "beeb27bbb7a8400d",
      "item": {
        "type": "paragraph",
        "id": "beeb27bbb7a8400d",
        "text": "~/.jenv/shims\nv19.7.0"
      },
      "date": 1682372955428
    },
    {
      "type": "edit",
      "id": "beeb27bbb7a8400d",
      "item": {
        "type": "paragraph",
        "id": "beeb27bbb7a8400d",
        "text": "v19.7.0"
      },
      "date": 1682372981155
    },
    {
      "item": {
        "type": "factory",
        "id": "ad8809dc496979d5"
      },
      "id": "ad8809dc496979d5",
      "type": "add",
      "after": "beeb27bbb7a8400d",
      "date": 1682373106723
    },
    {
      "type": "edit",
      "id": "ad8809dc496979d5",
      "item": {
        "type": "paragraph",
        "id": "ad8809dc496979d5",
        "text": "Removed node, npx, and npm from shims directory."
      },
      "date": 1682373144173
    },
    {
      "item": {
        "type": "factory",
        "id": "f85420dfaa10c809"
      },
      "id": "f85420dfaa10c809",
      "type": "add",
      "after": "ad8809dc496979d5",
      "date": 1682374328177
    },
    {
      "type": "edit",
      "id": "f85420dfaa10c809",
      "item": {
        "type": "pagefold",
        "id": "f85420dfaa10c809",
        "text": "~"
      },
      "date": 1682374331932
    },
    {
      "item": {
        "type": "factory",
        "id": "0a3b3cf3eca5160a"
      },
      "id": "0a3b3cf3eca5160a",
      "type": "add",
      "after": "f85420dfaa10c809",
      "date": 1682374333242
    },
    {
      "type": "edit",
      "id": "0a3b3cf3eca5160a",
      "item": {
        "type": "paragraph",
        "id": "0a3b3cf3eca5160a",
        "text": "⇒ [[Civil Defense]]"
      },
      "date": 1682374342076
    },
    {
      "type": "edit",
      "id": "0a3b3cf3eca5160a",
      "item": {
        "type": "paragraph",
        "id": "0a3b3cf3eca5160a",
        "text": "⇒ [[Civil Defense]] ⇒ [[Zivilschutz]]"
      },
      "date": 1682374579946
    },
    {
      "type": "add",
      "id": "04db5c336f8adaef",
      "item": {
        "type": "paragraph",
        "id": "04db5c336f8adaef",
        "text": "How to integrate the elm-form example into "
      },
      "after": "ad8809dc496979d5",
      "date": 1682377859429
    },
    {
      "type": "edit",
      "id": "04db5c336f8adaef",
      "item": {
        "type": "paragraph",
        "id": "04db5c336f8adaef",
        "text": "How to integrate the elm-form example into the elm-pages my-project?"
      },
      "date": 1682377877271
    },
    {
      "item": {
        "type": "factory",
        "id": "d95bd0897af812c9"
      },
      "id": "d95bd0897af812c9",
      "type": "add",
      "after": "0a3b3cf3eca5160a",
      "date": 1682378560099
    },
    {
      "id": "d95bd0897af812c9",
      "type": "move",
      "order": [
        "3954cf1e11c88055",
        "b507a63a48a33926",
        "5d00de5a977e9672",
        "b7f4bc2e6e2bbcc4",
        "77af984c9edbf8aa",
        "beda34851fac3b14",
        "5e057329311d4a89",
        "ed7ed17c9aeb646a",
        "f5fa149804bd540c",
        "e5297ad0370e30d7",
        "a20289891a9af918",
        "5ec18bb73d039657",
        "39c4b83ad7e4e741",
        "c020869ec8f32ccd",
        "35aa6ae41dee36eb",
        "2d87087916d7cb98",
        "a94f3e3e6a953468",
        "ca29b83526e641eb",
        "bda83ca20edd3032",
        "beeb27bbb7a8400d",
        "ad8809dc496979d5",
        "04db5c336f8adaef",
        "d95bd0897af812c9",
        "f85420dfaa10c809",
        "0a3b3cf3eca5160a"
      ],
      "date": 1682378562044
    },
    {
      "type": "edit",
      "id": "d95bd0897af812c9",
      "item": {
        "type": "paragraph",
        "id": "d95bd0897af812c9",
        "text": "chat.poenai: Note that buildNoState is useful for building simple pages that don't require any internal state management, but for more complex pages, you may need to use the build function instead, which allows you to define a Model and Msg type for your page's internal state."
      },
      "date": 1682378568097
    },
    {
      "type": "edit",
      "id": "d95bd0897af812c9",
      "item": {
        "type": "paragraph",
        "id": "d95bd0897af812c9",
        "text": "chat.openai.: Note that buildNoState is useful for building simple pages that don't require any internal state management, but for more complex pages, you may need to use the build function instead, which allows you to define a Model and Msg type for your page's internal state."
      },
      "date": 1682378586790
    },
    {
      "type": "remove",
      "id": "5ec18bb73d039657",
      "date": 1682400796526
    },
    {
      "type": "remove",
      "id": "ad8809dc496979d5",
      "date": 1682400818488
    },
    {
      "type": "remove",
      "id": "bda83ca20edd3032",
      "date": 1682400820352
    },
    {
      "type": "remove",
      "id": "ca29b83526e641eb",
      "date": 1682400822191
    },
    {
      "type": "remove",
      "id": "beeb27bbb7a8400d",
      "date": 1682400826357
    }
  ]
}