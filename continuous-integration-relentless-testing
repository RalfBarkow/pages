{
  "title": "Continuous Integration Relentless Testing",
  "story": [
    {
      "type": "html",
      "text": "In [[Extreme Programming]], you try to keep your system always running, always improving.  This is done using [[Frequent Releases]], after running a suite of [[Unit Test]]s and , [[Acceptance Test]]s.  ",
      "id": "1750b0389dca2025857d0b059bba9349"
    },
    {
      "type": "html",
      "text": "\n[[Unit Test]]s must always score 100%.  That is, you may not release anything that breaks any of the existing assertions, as encoded in the unit tests.",
      "id": "0a8a7e91279e7a6f6865b49fdffc1697"
    },
    {
      "type": "html",
      "text": "\n[[Acceptance Test]]s test the system from end to end, and their scores improve as the system evolves more and more functionality.  You graph the [[Acceptance Test]]s scores, preferably daily.",
      "id": "d496f0207abcbe0ff04d7d5be7a6b3f4"
    },
    {
      "type": "html",
      "text": "\nBy keeping the system integrated all the time, you go faster because you don't have those awful days when you put tens of classes together for the first time and nothing works.",
      "id": "605808c004e3f3d8b8519908bdba8e4c"
    },
    {
      "type": "html",
      "text": "\nBy keeping the system correct all the time, you go faster because errors are easier to find when you've only changed one or two things.",
      "id": "7f797c5f019f3c8f0426680ca5f44606"
    },
    {
      "type": "html",
      "text": "\nBy keeping the scores visible you build confidence that the system works and is improving, and make introduced errors show up at the earliest possible moment.",
      "id": "f805fe9fa2709a4adea90a4957e57777"
    },
    {
      "type": "html",
      "text": "-- [[Ron Jeffries]]",
      "id": "18d29104a93f846c442db05401350f00"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7684217eedcc5f8a852a39f223e8851e"
    },
    {
      "type": "html",
      "text": "\nThis sounds like [[Microsoft Corporation]]'s sync-and-stabilize development model.  I heard about it first a few years ago through some papers published by the Sloan school of management.  Since then, I've changed our departmental development process to match it and it works beautifully.",
      "id": "3068cf351b2346f5ba032dcb3a639851"
    },
    {
      "type": "html",
      "text": "<i>Is there a reference to this, preferably on the web? -- [[Ron Jeffries]]</i>",
      "id": "63e8d76adaace9b470d03d6c5f0a1cdb"
    },
    {
      "type": "html",
      "text": "\nThere is a nice article by [[Steve Mc Connell]] (author of [[Code Complete]]) titled \"Daily Build and [[Smoke Test]]\". It is available online at <[http://www.stevemcconnell.com/ieeesoftware/bp04.htm www.stevemcconnell.com]> and explains this practice in the context of [[Microsoft Corporation]]. -- [[Ernesto Guisado]]",
      "id": "7ec7429a0a2521453bf85242f18c5d53"
    },
    {
      "type": "html",
      "text": "There was a book (<i>[[Microsoft Secrets]]</i>) that described it in some detail. -- [[Pete Mc Breen]]",
      "id": "ab7f8fb12b8c0cb0c0cf7a05a4a12128"
    },
    {
      "type": "html",
      "text": "\nEssentially, Microsoft arrived at it the same way that I suppose [[Extreme Programming]] did.  The philosophy of sync-and-stabilize is to find a stable point and stay there.  They do daily builds and tests.  If you break code, you can't move on until it gets fixed.  Development is divided into milestones no more than a few months long.",
      "id": "ba44e8c9872b707b65db00a5b9565fe3"
    },
    {
      "type": "html",
      "text": "<i>[[Chrysler Comprehensive Compensation]]'s [[Extreme Programming]] \"iterations\" are three weeks long.  In that interval we implement maybe 30 user stories.  Of course we're using Smalltalk.  YMMV. -- [[Ron Jeffries]]</i>",
      "id": "4ad278889eaf94356c89f11c1d47dea5"
    },
    {
      "type": "html",
      "text": "\nA year or two ago, Microsoft stunned many people by starting to deliver their development environment and tools by quarterly subscription with rather large functional upgrades.  That is one hell of a feat.  They actually cut back because many shops were not ready for that degree of tool churn even though they maintained backwards compatibility with everything. -- [[Michael Feathers]]",
      "id": "dceb8d45e532601ba86612a03ce1ad69"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7684217eedcc5f8a852a39f223e8851e"
    },
    {
      "type": "html",
      "text": "This sounds similar to the [[Ae Gis]] process.",
      "id": "c378e54313de120f53306835d9cfa2c7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7684217eedcc5f8a852a39f223e8851e"
    },
    {
      "type": "html",
      "text": "See [[Success Oriented Approach]] [[Frequent Releases]] [[Three Week Milestones]]",
      "id": "6e8f3d70da3188d3fa931801a7224593"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7684217eedcc5f8a852a39f223e8851e"
    },
    {
      "type": "html",
      "text": "[[Category Extreme Programming]] [[Category Testing]]",
      "id": "111c0b4d8bcbcb913bc1ac9c7ecc9ff7"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ContinuousIntegrationRelentlessTesting c2.com]",
      "id": "f31a1e6b03394161ce3862d361ce07e0"
    }
  ],
  "journal": [
    {
      "date": 1339973611000,
      "id": "1ff1c1c9142a901cf4c9580b07852293",
      "type": "create",
      "item": {
        "title": "Continuous Integration Relentless Testing",
        "story": [
          {
            "type": "html",
            "text": "In [[Extreme Programming]], you try to keep your system always running, always improving.  This is done using [[Frequent Releases]], after running a suite of [[Unit Test]]s and , [[Acceptance Test]]s.  ",
            "id": "1750b0389dca2025857d0b059bba9349"
          },
          {
            "type": "html",
            "text": "\n[[Unit Test]]s must always score 100%.  That is, you may not release anything that breaks any of the existing assertions, as encoded in the unit tests.",
            "id": "0a8a7e91279e7a6f6865b49fdffc1697"
          },
          {
            "type": "html",
            "text": "\n[[Acceptance Test]]s test the system from end to end, and their scores improve as the system evolves more and more functionality.  You graph the [[Acceptance Test]]s scores, preferably daily.",
            "id": "d496f0207abcbe0ff04d7d5be7a6b3f4"
          },
          {
            "type": "html",
            "text": "\nBy keeping the system integrated all the time, you go faster because you don't have those awful days when you put tens of classes together for the first time and nothing works.",
            "id": "605808c004e3f3d8b8519908bdba8e4c"
          },
          {
            "type": "html",
            "text": "\nBy keeping the system correct all the time, you go faster because errors are easier to find when you've only changed one or two things.",
            "id": "7f797c5f019f3c8f0426680ca5f44606"
          },
          {
            "type": "html",
            "text": "\nBy keeping the scores visible you build confidence that the system works and is improving, and make introduced errors show up at the earliest possible moment.",
            "id": "f805fe9fa2709a4adea90a4957e57777"
          },
          {
            "type": "html",
            "text": "-- [[Ron Jeffries]]",
            "id": "18d29104a93f846c442db05401350f00"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7684217eedcc5f8a852a39f223e8851e"
          },
          {
            "type": "html",
            "text": "\nThis sounds like [[Microsoft Corporation]]'s sync-and-stabilize development model.  I heard about it first a few years ago through some papers published by the Sloan school of management.  Since then, I've changed our departmental development process to match it and it works beautifully.",
            "id": "3068cf351b2346f5ba032dcb3a639851"
          },
          {
            "type": "html",
            "text": "<i>Is there a reference to this, preferably on the web? -- [[Ron Jeffries]]</i>",
            "id": "63e8d76adaace9b470d03d6c5f0a1cdb"
          },
          {
            "type": "html",
            "text": "\nThere is a nice article by [[Steve Mc Connell]] (author of [[Code Complete]]) titled \"Daily Build and [[Smoke Test]]\". It is available online at <[http://www.stevemcconnell.com/ieeesoftware/bp04.htm www.stevemcconnell.com]> and explains this practice in the context of [[Microsoft Corporation]]. -- [[Ernesto Guisado]]",
            "id": "7ec7429a0a2521453bf85242f18c5d53"
          },
          {
            "type": "html",
            "text": "There was a book (<i>[[Microsoft Secrets]]</i>) that described it in some detail. -- [[Pete Mc Breen]]",
            "id": "ab7f8fb12b8c0cb0c0cf7a05a4a12128"
          },
          {
            "type": "html",
            "text": "\nEssentially, Microsoft arrived at it the same way that I suppose [[Extreme Programming]] did.  The philosophy of sync-and-stabilize is to find a stable point and stay there.  They do daily builds and tests.  If you break code, you can't move on until it gets fixed.  Development is divided into milestones no more than a few months long.",
            "id": "ba44e8c9872b707b65db00a5b9565fe3"
          },
          {
            "type": "html",
            "text": "<i>[[Chrysler Comprehensive Compensation]]'s [[Extreme Programming]] \"iterations\" are three weeks long.  In that interval we implement maybe 30 user stories.  Of course we're using Smalltalk.  YMMV. -- [[Ron Jeffries]]</i>",
            "id": "4ad278889eaf94356c89f11c1d47dea5"
          },
          {
            "type": "html",
            "text": "\nA year or two ago, Microsoft stunned many people by starting to deliver their development environment and tools by quarterly subscription with rather large functional upgrades.  That is one hell of a feat.  They actually cut back because many shops were not ready for that degree of tool churn even though they maintained backwards compatibility with everything. -- [[Michael Feathers]]",
            "id": "dceb8d45e532601ba86612a03ce1ad69"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7684217eedcc5f8a852a39f223e8851e"
          },
          {
            "type": "html",
            "text": "This sounds similar to the [[Ae Gis]] process.",
            "id": "c378e54313de120f53306835d9cfa2c7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7684217eedcc5f8a852a39f223e8851e"
          },
          {
            "type": "html",
            "text": "See [[Success Oriented Approach]] [[Frequent Releases]] [[Three Week Milestones]]",
            "id": "6e8f3d70da3188d3fa931801a7224593"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7684217eedcc5f8a852a39f223e8851e"
          },
          {
            "type": "html",
            "text": "[[Category Extreme Programming]] [[Category Testing]]",
            "id": "111c0b4d8bcbcb913bc1ac9c7ecc9ff7"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ContinuousIntegrationRelentlessTesting c2.com]",
            "id": "f31a1e6b03394161ce3862d361ce07e0"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1628087774898
    }
  ]
}