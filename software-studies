{
  "title": "Software Studies",
  "story": [
    {
      "type": "markdown",
      "id": "1c5ff0549776e08c",
      "text": "We think it is important also to look to the field of software studies, where good work is being done in terms of opening the black box – the technical notion of objects which have opaque or impossible-to-read internal states but readable surfaces – of technologies. \n"
    },
    {
      "type": "markdown",
      "id": "8b72e8ac8d86c31c",
      "text": "By using the term ‘software studies’, we want to link to the argument that [[Lev Manovich]] made in *The Language of New Media* (2001): that media studies in the digital age should become ‘software studies’. \n"
    },
    {
      "type": "markdown",
      "id": "2cbba53038b2460a",
      "text": "Indeed, in the past five years [Note: quote published in 2017 ; R.B.], this field has begun to emerge in its own right. Software studies presents the question of computation and digital technologies as a research object and therefore uses a number of techniques to ‘read’ algorithms, for example through a close engagement with code and software as text, understanding software, and critically examining algorithms’ affordances, structure and political economy. \n"
    },
    {
      "type": "markdown",
      "id": "9dc06fb418a9cb1d",
      "text": "Software studies covers a wide number of approaches to the digital, from theoretical interventions to more empirically oriented techniques and methods. There is also an engagement with the specific aesthetics articulated and used in software - for example, code as poetry - but also with how interfaces structure and mediate experience, and how algorithms encode power (see Kirschenbaum 2004). Many of the approaches and theoretical insights would enrich the digital humanities with new theoretical concepts and problematics.\n"
    },
    {
      "type": "markdown",
      "id": "c3347796fa904b2a",
      "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 17–18\n"
    },
    {
      "type": "markdown",
      "id": "f540bdaca1993afa",
      "text": "Next: [[Digital Methods]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Software Studies",
        "story": []
      },
      "date": 1634908575654
    },
    {
      "item": {
        "type": "factory",
        "id": "1c5ff0549776e08c"
      },
      "id": "1c5ff0549776e08c",
      "type": "add",
      "date": 1634908586712
    },
    {
      "type": "edit",
      "id": "1c5ff0549776e08c",
      "item": {
        "type": "markdown",
        "id": "1c5ff0549776e08c",
        "text": "We think it is important also to look to the field of software studies,\n"
      },
      "date": 1634908593698
    },
    {
      "type": "edit",
      "id": "1c5ff0549776e08c",
      "item": {
        "type": "markdown",
        "id": "1c5ff0549776e08c",
        "text": "We think it is important also to look to the field of software studies, where good work is being done in terms of opening the black box - the technical notion of objects which have opaque or impossible-to-read internal states but readable surfaces - of technologies. By using the term ‘software studies’, we want to link to the argument that Lev Manovich made in The Language o f New Media (2001): that media studies in the digital age should become ‘software studies’. Indeed, in the past five years, this field has begun to emerge in its own right. Software studies presents the question of computation and digital technologies as a research object and therefore uses a number of techniques to ‘read’ algorithms, for example through a close engagement with code and software as text, understanding software, and critically examining algorithms’ affordances, structure and political economy. Software studies covers a wide number of approaches to the digital, from theoretical interventions to more empirically oriented techniques and methods. There is also an engagement with the specific aesthetics articulated and used in software - for example, code as poetry - but also with how interfaces structure and mediate experience, and how algorithms encode power (see Kirschenbaum 2004).23 Many of the approaches and theoretical insights would enrich the digital humanities with new theoretical concepts and problematics.\n"
      },
      "date": 1634908620425
    },
    {
      "type": "edit",
      "id": "1c5ff0549776e08c",
      "item": {
        "type": "markdown",
        "id": "1c5ff0549776e08c",
        "text": "We think it is important also to look to the field of software studies, where good work is being done in terms of opening the black box – the technical notion of objects which have opaque or impossible-to-read internal states but readable surfaces – of technologies. \n"
      },
      "date": 1634908693485
    },
    {
      "type": "add",
      "id": "8b72e8ac8d86c31c",
      "item": {
        "type": "markdown",
        "id": "8b72e8ac8d86c31c",
        "text": "By using the term ‘software studies’, we want to link to the argument that Lev Manovich made in *The Language of New Media* (2001): that media studies in the digital age should become ‘software studies’. \n"
      },
      "after": "1c5ff0549776e08c",
      "date": 1634908720956
    },
    {
      "type": "add",
      "id": "2cbba53038b2460a",
      "item": {
        "type": "markdown",
        "id": "2cbba53038b2460a",
        "text": "Indeed, in the past five years [Note: quote published in 2017 ; R.B.], this field has begun to emerge in its own right. Software studies presents the question of computation and digital technologies as a research object and therefore uses a number of techniques to ‘read’ algorithms, for example through a close engagement with code and software as text, understanding software, and critically examining algorithms’ affordances, structure and political economy. \n"
      },
      "after": "8b72e8ac8d86c31c",
      "date": 1634908859837
    },
    {
      "type": "add",
      "id": "9dc06fb418a9cb1d",
      "item": {
        "type": "markdown",
        "id": "9dc06fb418a9cb1d",
        "text": "Software studies covers a wide number of approaches to the digital, from theoretical interventions to more empirically oriented techniques and methods. There is also an engagement with the specific aesthetics articulated and used in software - for example, code as poetry - but also with how interfaces structure and mediate experience, and how algorithms encode power (see Kirschenbaum 2004). Many of the approaches and theoretical insights would enrich the digital humanities with new theoretical concepts and problematics.\n"
      },
      "after": "2cbba53038b2460a",
      "date": 1634908897647
    },
    {
      "type": "edit",
      "id": "8b72e8ac8d86c31c",
      "item": {
        "type": "markdown",
        "id": "8b72e8ac8d86c31c",
        "text": "By using the term ‘software studies’, we want to link to the argument that [[Lev Manovich]] made in *The Language of New Media* (2001): that media studies in the digital age should become ‘software studies’. \n"
      },
      "date": 1634909405523
    },
    {
      "type": "add",
      "id": "c3347796fa904b2a",
      "item": {
        "type": "markdown",
        "id": "c3347796fa904b2a",
        "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 17–18"
      },
      "after": "9dc06fb418a9cb1d",
      "date": 1634909528781
    },
    {
      "type": "edit",
      "id": "c3347796fa904b2a",
      "item": {
        "type": "markdown",
        "id": "c3347796fa904b2a",
        "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 17–18\n"
      },
      "date": 1634909717457
    },
    {
      "type": "add",
      "id": "f540bdaca1993afa",
      "item": {
        "type": "markdown",
        "id": "f540bdaca1993afa",
        "text": "Next: [[Digital Methods]]"
      },
      "after": "c3347796fa904b2a",
      "date": 1634909729052
    }
  ]
}