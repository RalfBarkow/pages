{
  "title": "Worker Environments",
  "story": [
    {
      "type": "paragraph",
      "id": "6b02f0923a08d01b",
      "text": "Worker Environments are an adaptation of the Service Workers API, which is a browser standard for offline web applications. [https://workers.js.org/ site]"
    },
    {
      "type": "paragraph",
      "id": "7b7a8dec0e22e1a5",
      "text": "To give web developers more freedom over offline experiences, the specification includes a (minimal) HTTP server. Since it was published, other vendors have implemented this API for servers that run in the cloud — or on the edge in the case of Cloudflare Workers."
    },
    {
      "type": "paragraph",
      "id": "d104ceb95d751ddc",
      "text": "Typically, they also implement other browser APIs such as Fetch, Streams, and Web Cryptography, making their global scope similar to that of a Service Worker. We call them Worker Environments or Worker Contexts."
    },
    {
      "type": "html",
      "id": "b934a430f6b1b4aa",
      "text": "<img width=100% src=https://workers.js.org/assets/img/2_l.svg>"
    },
    {
      "type": "paragraph",
      "id": "9d18c04db2d2ea2c",
      "text": "Worker Environments are not meant to provide everything traditional web servers did. They are better understood as the “glue” between browser clients and various API backends that have taken over much of their functionality. Consider the difference between traditional web architecture and the API Economy."
    },
    {
      "type": "pagefold",
      "id": "442bfec9732c7915",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "e9956a4738e4c93b",
      "text": "The two most onerous admin tasks we face after install are backups and upgrades. Maybe stateless edge workers and storage services are the better architecture."
    },
    {
      "type": "html",
      "id": "66562ff87793f7db",
      "text": "<img width=100% src=http://ward.asia.wiki.org/assets/pages/favorite-slides/traditional-vs-federated.jpg>"
    },
    {
      "type": "paragraph",
      "id": "5f95dc6780c17692",
      "text": "There is one thing we do that is not shown in the edge diagram above. We expect wide spread and unplanned cross-origin resource sharing. That's not an enterprise thing."
    },
    {
      "type": "paragraph",
      "id": "6dd10e5b52cd1f74",
      "text": "See also [[Isolation without Containers]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Worker Environments",
        "story": []
      },
      "date": 1617116873891
    },
    {
      "item": {
        "type": "factory",
        "id": "6b02f0923a08d01b"
      },
      "id": "6b02f0923a08d01b",
      "type": "add",
      "date": 1617116940831
    },
    {
      "type": "edit",
      "id": "6b02f0923a08d01b",
      "item": {
        "type": "paragraph",
        "id": "6b02f0923a08d01b",
        "text": "Worker Environments are an adaptation of the Service Workers API, which is a browser standard for offline web applications. "
      },
      "date": 1617116961297
    },
    {
      "type": "add",
      "id": "7b7a8dec0e22e1a5",
      "item": {
        "type": "paragraph",
        "id": "7b7a8dec0e22e1a5",
        "text": "To give web developers more freedom over offline experiences, the specification includes a (minimal) HTTP server. Since it was published, other vendors have implemented this API for servers that run in the cloud — or on the edge in the case of Cloudflare Workers."
      },
      "after": "6b02f0923a08d01b",
      "date": 1617116970691
    },
    {
      "type": "add",
      "id": "d104ceb95d751ddc",
      "item": {
        "type": "paragraph",
        "id": "d104ceb95d751ddc",
        "text": "Typically, they also implement other browser APIs such as Fetch, Streams, and Web Cryptography, making their global scope similar to that of a Service Worker. We call them Worker Environments or Worker Contexts."
      },
      "after": "7b7a8dec0e22e1a5",
      "date": 1617116983614
    },
    {
      "type": "edit",
      "id": "6b02f0923a08d01b",
      "item": {
        "type": "paragraph",
        "id": "6b02f0923a08d01b",
        "text": "Worker Environments are an adaptation of the Service Workers API, which is a browser standard for offline web applications. [https://workers.js.org/ site]"
      },
      "date": 1617116998596
    },
    {
      "item": {
        "type": "factory",
        "id": "b934a430f6b1b4aa"
      },
      "id": "b934a430f6b1b4aa",
      "type": "add",
      "after": "d104ceb95d751ddc",
      "date": 1617117092394
    },
    {
      "type": "edit",
      "id": "b934a430f6b1b4aa",
      "item": {
        "type": "html",
        "id": "b934a430f6b1b4aa",
        "text": "<img width=100% src=https://workers.js.org/assets/img/2_l.svg>"
      },
      "date": 1617117107226
    },
    {
      "item": {
        "type": "factory",
        "id": "9d18c04db2d2ea2c"
      },
      "id": "9d18c04db2d2ea2c",
      "type": "add",
      "after": "b934a430f6b1b4aa",
      "date": 1617117170223
    },
    {
      "type": "edit",
      "id": "9d18c04db2d2ea2c",
      "item": {
        "type": "paragraph",
        "id": "9d18c04db2d2ea2c",
        "text": "Worker Environments are not meant to provide everything traditional web servers did. They are better understood as the “glue” between browser clients and various API backends that have taken over much of their functionality. Consider the difference between traditional web architecture and the API Economy."
      },
      "date": 1617117185705
    },
    {
      "item": {
        "type": "factory",
        "id": "442bfec9732c7915"
      },
      "id": "442bfec9732c7915",
      "type": "add",
      "after": "9d18c04db2d2ea2c",
      "date": 1617117204412
    },
    {
      "type": "edit",
      "id": "442bfec9732c7915",
      "item": {
        "type": "pagefold",
        "id": "442bfec9732c7915",
        "text": "."
      },
      "date": 1617117209935
    },
    {
      "item": {
        "type": "factory",
        "id": "e9956a4738e4c93b"
      },
      "id": "e9956a4738e4c93b",
      "type": "add",
      "after": "442bfec9732c7915",
      "date": 1617124340849
    },
    {
      "type": "edit",
      "id": "e9956a4738e4c93b",
      "item": {
        "type": "paragraph",
        "id": "e9956a4738e4c93b",
        "text": "The two most onerous admin tasks we face after install are backups and upgrades. Maybe stateless edge workers and storage services are the better architecture."
      },
      "date": 1617124355794
    },
    {
      "item": {
        "type": "factory",
        "id": "66562ff87793f7db"
      },
      "id": "66562ff87793f7db",
      "type": "add",
      "after": "e9956a4738e4c93b",
      "date": 1617124359705
    },
    {
      "type": "edit",
      "id": "66562ff87793f7db",
      "item": {
        "type": "html",
        "id": "66562ff87793f7db",
        "text": "<img width=100% src=http://ward.asia.wiki.org/assets/pages/favorite-slides/traditional-vs-federated.jpg>"
      },
      "date": 1617124613427
    },
    {
      "item": {
        "type": "factory",
        "id": "5f95dc6780c17692"
      },
      "id": "5f95dc6780c17692",
      "type": "add",
      "after": "66562ff87793f7db",
      "date": 1617128532318
    },
    {
      "type": "edit",
      "id": "5f95dc6780c17692",
      "item": {
        "type": "paragraph",
        "id": "5f95dc6780c17692",
        "text": "There is one thing we do that is not shown in the edge diagram above. We expect wide spread and unplanned cross-origin resource sharing. That's not an enterprise thing."
      },
      "date": 1617128602839
    },
    {
      "item": {
        "type": "factory",
        "id": "6dd10e5b52cd1f74"
      },
      "id": "6dd10e5b52cd1f74",
      "type": "add",
      "after": "5f95dc6780c17692",
      "date": 1617132634972
    },
    {
      "type": "edit",
      "id": "6dd10e5b52cd1f74",
      "item": {
        "type": "paragraph",
        "id": "6dd10e5b52cd1f74",
        "text": "See also [[Isolation without Containers]]"
      },
      "date": 1617132641871
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1661666038729
    }
  ]
}