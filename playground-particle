{
  "title": "Playground: Particle",
  "story": [
    {
      "type": "paragraph",
      "id": "54a244ca263f15ca",
      "text": "See [[Particle]] [[Movement]] (within the [[Geometric Amoebot Model]])"
    },
    {
      "type": "code",
      "id": "11d9ce9918c5f770",
      "text": "import { Particle } from 'https://wiki.ralfbarkow.ch/assets/pages/particle/particle.js';\nimport { Node } from 'https://wiki.ralfbarkow.ch/assets/pages/particle/node.js';  "
    },
    {
      "type": "code",
      "id": "d24e90294dae76d5",
      "text": "// Create triangular grid of nodes\nconst nodes = [];\nconst numRows = 10; // Number of rows in the grid\nconst numCols = 10; // Number of columns in the grid\nfor (let i = 0; i < numRows; i++) {\n  for (let j = 0; j < numCols; j++) {\n    // Calculate position of node based on row and column\n    const x = j * 2; // Adjust based on the triangular grid layout\n    const y = i * 2; // Adjust based on the triangular grid layout\n    const node = new Node(x, y);\n    nodes.push(node);\n  }\n}"
    },
    {
      "type": "code",
      "id": "07e38935b688abc9",
      "text": "// Create particles\nconst particles = [];\nconst numParticles = 5; // Number of particles in the simulation\nfor (let i = 0; i < numParticles; i++) {\n  // Randomly select starting position for each particle\n  const randomNode = nodes[Math.floor(Math.random() * nodes.length)];\n  const particle = new Particle(i, randomNode, 'contracted');\n  randomNode.occupied = true;\n  particles.push(particle);\n}\n"
    },
    {
      "type": "code",
      "id": "50471babba8cba93",
      "text": "// Simulate particle movement\nsetInterval(() => {\n  particles.forEach((particle) => {\n    particle.move();\n    console.log(`Particle ${particle.id} moved to position (${particle.position.x}, ${particle.position.y})`);\n  });\n}, 1000); // Adjust simulation speed as needed"
    },
    {
      "type": "markdown",
      "id": "185f2876e6bf65a4",
      "text": "# Frame"
    },
    {
      "type": "frame",
      "id": "142fe5bcefa780fa",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "8c39ca174f5e993e",
      "text": "The result is a stream of positions (coordinates)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Playground: Particle",
        "story": []
      },
      "date": 1713977467350
    },
    {
      "item": {
        "type": "factory",
        "id": "d24e90294dae76d5"
      },
      "id": "d24e90294dae76d5",
      "type": "add",
      "date": 1713977527228
    },
    {
      "type": "edit",
      "id": "d24e90294dae76d5",
      "item": {
        "type": "code",
        "id": "d24e90294dae76d5",
        "text": "// Create triangular grid of nodes\nconst nodes = [];\nconst numRows = 10; // Number of rows in the grid\nconst numCols = 10; // Number of columns in the grid\nfor (let i = 0; i < numRows; i++) {\n  for (let j = 0; j < numCols; j++) {\n    // Calculate position of node based on row and column\n    const x = j * 2; // Adjust based on the triangular grid layout\n    const y = i * 2; // Adjust based on the triangular grid layout\n    const node = new Node(x, y);\n    nodes.push(node);\n  }\n}"
      },
      "date": 1713977529717
    },
    {
      "item": {
        "type": "code",
        "id": "07e38935b688abc9",
        "text": "// Create particles\nconst particles = [];\nconst numParticles = 5; // Number of particles in the simulation\nfor (let i = 0; i < numParticles; i++) {\n  // Randomly select starting position for each particle\n  const randomNode = nodes[Math.floor(Math.random() * nodes.length)];\n  const particle = new Particle(i, randomNode, 'contracted');\n  randomNode.occupied = true;\n  particles.push(particle);\n}\n\n// Simulate particle movement\nsetInterval(() => {\n  particles.forEach((particle) => {\n    particle.move();\n    console.log(`Particle ${particle.id} moved to position (${particle.position.x}, ${particle.position.y})`);\n  });\n}, 1000); // Adjust simulation speed as needed"
      },
      "id": "07e38935b688abc9",
      "type": "add",
      "after": "d24e90294dae76d5",
      "date": 1713977564108
    },
    {
      "type": "fork",
      "date": 1713977574115
    },
    {
      "item": {
        "type": "factory",
        "id": "11d9ce9918c5f770"
      },
      "id": "11d9ce9918c5f770",
      "type": "add",
      "after": "07e38935b688abc9",
      "date": 1713977629621
    },
    {
      "type": "edit",
      "id": "11d9ce9918c5f770",
      "item": {
        "type": "code",
        "id": "11d9ce9918c5f770",
        "text": "import { Particle } from './particle.js'; "
      },
      "date": 1713977631697
    },
    {
      "id": "11d9ce9918c5f770",
      "type": "move",
      "order": [
        "11d9ce9918c5f770",
        "d24e90294dae76d5",
        "07e38935b688abc9"
      ],
      "date": 1713977634735
    },
    {
      "type": "edit",
      "id": "11d9ce9918c5f770",
      "item": {
        "type": "code",
        "id": "11d9ce9918c5f770",
        "text": "import { Particle } from 'http://wiki.ralfbarkow.ch/assets/pages/particle/particle.js';\nimport { Node } from 'http://wiki.ralfbarkow.ch/assets/pages/particle/node.js';  "
      },
      "date": 1713977669206
    },
    {
      "id": "185f2876e6bf65a4",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "185f2876e6bf65a4",
        "text": "# Frame"
      },
      "after": "07e38935b688abc9",
      "attribution": {
        "page": "Playground: dgraph-dot",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713977702225
    },
    {
      "id": "142fe5bcefa780fa",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "185f2876e6bf65a4",
      "attribution": {
        "page": "Playground: dgraph-dot",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1713977707359
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713977826183
    },
    {
      "item": {
        "type": "factory",
        "id": "50471babba8cba93"
      },
      "id": "50471babba8cba93",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1713977843539
    },
    {
      "id": "50471babba8cba93",
      "type": "move",
      "order": [
        "11d9ce9918c5f770",
        "d24e90294dae76d5",
        "07e38935b688abc9",
        "50471babba8cba93",
        "185f2876e6bf65a4",
        "142fe5bcefa780fa"
      ],
      "date": 1713977846706
    },
    {
      "type": "edit",
      "id": "07e38935b688abc9",
      "item": {
        "type": "code",
        "id": "07e38935b688abc9",
        "text": "// Create particles\nconst particles = [];\nconst numParticles = 5; // Number of particles in the simulation\nfor (let i = 0; i < numParticles; i++) {\n  // Randomly select starting position for each particle\n  const randomNode = nodes[Math.floor(Math.random() * nodes.length)];\n  const particle = new Particle(i, randomNode, 'contracted');\n  randomNode.occupied = true;\n  particles.push(particle);\n}\n"
      },
      "date": 1713977857401
    },
    {
      "type": "edit",
      "id": "50471babba8cba93",
      "item": {
        "type": "code",
        "id": "50471babba8cba93",
        "text": "// Simulate particle movement\nsetInterval(() => {\n  particles.forEach((particle) => {\n    particle.move();\n    console.log(`Particle ${particle.id} moved to position (${particle.position.x}, ${particle.position.y})`);\n  });\n}, 1000); // Adjust simulation speed as needed"
      },
      "date": 1713977860356
    },
    {
      "type": "edit",
      "id": "11d9ce9918c5f770",
      "item": {
        "type": "code",
        "id": "11d9ce9918c5f770",
        "text": "import { Particle } from 'https://wiki.ralfbarkow.ch/assets/pages/particle/particle.js';\nimport { Node } from 'https://wiki.ralfbarkow.ch/assets/pages/particle/node.js';  "
      },
      "date": 1713977880954
    },
    {
      "item": {
        "type": "factory",
        "id": "54a244ca263f15ca"
      },
      "id": "54a244ca263f15ca",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1713977937067
    },
    {
      "type": "edit",
      "id": "54a244ca263f15ca",
      "item": {
        "type": "paragraph",
        "id": "54a244ca263f15ca",
        "text": "See Particle [[Movement]] (within the [[Geometric Amoebot Model]])"
      },
      "date": 1713977940478
    },
    {
      "id": "54a244ca263f15ca",
      "type": "move",
      "order": [
        "54a244ca263f15ca",
        "11d9ce9918c5f770",
        "d24e90294dae76d5",
        "07e38935b688abc9",
        "50471babba8cba93",
        "185f2876e6bf65a4",
        "142fe5bcefa780fa"
      ],
      "date": 1713977947697
    },
    {
      "type": "edit",
      "id": "54a244ca263f15ca",
      "item": {
        "type": "paragraph",
        "id": "54a244ca263f15ca",
        "text": "See [[Particle]] [[Movement]] (within the [[Geometric Amoebot Model]])"
      },
      "date": 1713977963867
    },
    {
      "item": {
        "type": "factory",
        "id": "71cd1710d6aa24a4"
      },
      "id": "71cd1710d6aa24a4",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1713988218022
    },
    {
      "item": {
        "type": "factory",
        "id": "8c39ca174f5e993e"
      },
      "id": "8c39ca174f5e993e",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1713988229645
    },
    {
      "type": "edit",
      "id": "8c39ca174f5e993e",
      "item": {
        "type": "paragraph",
        "id": "8c39ca174f5e993e",
        "text": "The result is a coordinate stream."
      },
      "date": 1713988232207
    },
    {
      "type": "remove",
      "id": "71cd1710d6aa24a4",
      "date": 1713988607737
    },
    {
      "type": "edit",
      "id": "8c39ca174f5e993e",
      "item": {
        "type": "paragraph",
        "id": "8c39ca174f5e993e",
        "text": "The result is a stream of positions [coordinates]."
      },
      "date": 1713988746732
    },
    {
      "type": "edit",
      "id": "8c39ca174f5e993e",
      "item": {
        "type": "paragraph",
        "id": "8c39ca174f5e993e",
        "text": "The result is a stream of positions (coordinates)."
      },
      "date": 1713988781722
    }
  ]
}