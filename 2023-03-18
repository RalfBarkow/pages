{
  "title": "2023-03-18",
  "story": [
    {
      "type": "paragraph",
      "id": "d5ff9de12f068604",
      "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] ⇒ [[How the Model Works]] ⇒ [[Guided Tour]] ⇒ [[NoteCards]] ⇒ [[Container Types]]"
    },
    {
      "type": "paragraph",
      "id": "f68b56834cbde627",
      "text": "[[Meaning]] as a property? (Re: \"These clusters have meaning, …\") ⇒  [[Meaning (Sinn)]]"
    },
    {
      "type": "reference",
      "id": "641ac8223f8e23cc",
      "site": "thompson.fed.wiki",
      "slug": "computer-assisted-neural-patterning",
      "title": "Computer-assisted Neural Patterning",
      "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679064328150267tetfV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "2a764b0630f11cdd",
      "text": "⇒ [[Computer-Aided Neural Patterning]]"
    },
    {
      "type": "paragraph",
      "id": "385cb7eb6d847958",
      "text": "Do these clusters have meaning?\n\nThompson\n shows us a kind of pattern sheet that seems incomprehensible in itself, so he adds long textual explanations from the perspective of God's eye hovering over the map, peppered with metaphors. Yes, we can see patterns, even see saber-toothed tigers in the mist where there are no saber-toothed tigers. We'd rather run from these patterns once too often than once too little.\n\nI miss the time dimension in such diagrams. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16791426120dLnCB:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "6443b0b9201bc562",
      "text": "And Thompson 's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow (see [[Guided Tour]]). [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/~!ORfrUEFeWFcHAMLFLr:matrix.org:m1679154327911.26?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] But: \n\n"
    },
    {
      "type": "markdown",
      "id": "28a30585edfc85fa",
      "text": "In the medium of meaning, any operation of the system refers to other possibilities of operation production, which remain in the background of what is produced.\n"
    },
    {
      "type": "paragraph",
      "id": "aa6093873b2cf872",
      "text": "What I miss beyond the time dimension are decision alternatives. Access to hypertexts is systematically interactive, and it is ultimately up to the user to decide which (even the offered) direction(s) to take. We should try to make structures and decision situations transparent."
    },
    {
      "type": "pagefold",
      "id": "cbec497b228cecbf",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "00a4d5dff75e00b8",
      "text": "BARALDI, Claudio, CORSI, Giancarlo and ESPOSITO, Elena, 1997. GLU: Glossar zu Niklas Luhmanns Theorie sozialer Systeme. Frankfurt am Main: Suhrkamp. Suhrkamp Taschenbuch Wissenschaft, 1226. ISBN 978-3-518-28826-9. \n"
    },
    {
      "type": "reference",
      "id": "c19de7013badca34",
      "site": "wiki.ralfbarkow.ch",
      "slug": "unlocking-luhmann",
      "title": "Unlocking Luhmann",
      "text": "Baraldi, Claudio, Giancarlo Corsi, and Elena Esposito. Unlocking Luhmann; Luhmann in Glossario. I Concetti Fondamentali Della Teoria : A Keyword Introduction to Systems Theory. transcript Verlag, 2021. [https://library.oapen.org/handle/20.500.12657/48859 page], [https://library.oapen.org/bitstream/handle/20.500.12657/48859/9783839456743.pdf pdf]."
    },
    {
      "type": "pagefold",
      "id": "0636ba19f23238af",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "cd74e12ab630f89a",
      "site": "lfi.wiki.dbbs.co",
      "slug": "embrace-the-multi-party-dilemma",
      "title": "Embrace the Multi-Party Dilemma",
      "text": "We run our code on the platforms of other companies. Misalignment across companies changes what is needed to keep our systems running. These insights also apply with internal platforms—a product team runs their code on a cluster managed by another team. Embracing the Multi-Party Dilemma: Learning from Incidents Across Company Boundaries. Sarah Butt and Alex Elman @ LFI Conf 2023. [https://www.youtube.com/watch?v=CbSiKAtO7Fk&list=PLQmwzq_GIU-idCnJNR4t_aKb0HDCOXfZ1&index=12 youtube]"
    },
    {
      "type": "paragraph",
      "id": "e6fa5c824aace266",
      "text": "FLUSSER, Vilém, 1996. Der Flusser-Reader zu Kommunikation, Medien und Design. 2. Aufl. Mannheim: Bollmann. Kommunikation & Neue Medien. ISBN 978-3-927901-67-4. \n"
    },
    {
      "type": "paragraph",
      "id": "b1806581e640263c",
      "text": "Ward\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\n"
    },
    {
      "type": "paragraph",
      "id": "8e67aecb3ab6f90e",
      "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nAccording to Zellweger (1989), the special art of building guided tours is to write instructions (in the case of NoteCards in the form of scripts) that do not define deterministic paths, as in techniques of programmed instruction, but ones in which the sequences of links remain non-linear. Furthermore, it should be possible to leave the guided tours at any point. In the following, we will take a closer look at the concept of the \"guided tour\" realized in NoteCards as presented by Marshall/Irish (1989).\n\nhttp://dreyeck.wiki.ralfbarkow.ch/view/guided-tour\n"
    },
    {
      "type": "paragraph",
      "id": "878068f7bb8dd369",
      "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nWard\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\n"
    },
    {
      "type": "paragraph",
      "id": "8eb585015fc72d11",
      "text": "Yes, \nWard\n, see the end of my modified Journal page\nhttp://code.dreyeck.ch/view/journal\nwhere the Frame code refers to its page.journal\nThis is not yet in the form of annotations, but it should be in the direction you are talking about, right?\n"
    },
    {
      "type": "paragraph",
      "id": "acf7746738a48c9e",
      "text": "Although in this case the annotation would be implicitly clear: this page (or Card) with its window (frame).\n"
    },
    {
      "type": "paragraph",
      "id": "0b3aa5f9e0e1f28a",
      "text": "Ward\nMy suggestion was taken as some far-fetched thought experiment by a community that was not yet coding in windows. I was already fascinated by my year or two with Smalltalk-80 where I knew that Strings annotated character by character with objects became Texts, run-length encoded for efficiency. And, a window was just an object. This story would be better if I had actually coded what I described. I think I was succumbed with group think and just thought about how this might be useful hoping for something more like commit comments. \n"
    },
    {
      "type": "paragraph",
      "id": "a1862fa07fd18ffc",
      "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nAnd I'm trying to translate that into the JavaScript world in my Journal example. I would like to output the updates as objects. Currently, they are output as a list of page.journal.item.types. However, I'd like to represent them as, say, nodes of a graph that supports path playback and visualization. And if I add a slider for time travel, I could watch the update graph change. This would recreate the existing functionality of our journal's history in the frame, but give me more visualization options.\n"
    },
    {
      "type": "paragraph",
      "id": "1ab8f32bba388cd0",
      "text": "Ward\nI'm interested in how wiki would change if it had an ok code editor somehow associated with html and js assets. Paul has pointed out CodeJar as a suitable editor and Isomorphic Git as probably useful for the kinds of problems that trouble any editor that tries too hard to be simple. My first experiments were encouraging: http://ward.dojo.fed.wiki/try-codejar.html\nWard\n"
    },
    {
      "type": "paragraph",
      "id": "1eb8c4017c2c2c05",
      "text": "My current workflow has me code in a local repo with sublime, upload to test in wiki, check in commits in a terminal window, find the link in github, and then paste that back into wiki along with other notes. This is working for me but feels more scattered than the rest of the stuff I do in wiki. Let me speculate what might work better.\n"
    },
    {
      "type": "paragraph",
      "id": "8acaaf09c8619289",
      "text": "Ward\nImagine that I make a Frame item and add markup that binds it to an asset folder. Shift-double-click opens the code editor and starts the git repo as .git within the folder. Save reloads the Frame to start debugging. If this page is forked, then some or all of this goes to the new site. There is some way to commit a version and this shows up in the Journal as an edit so others see \"newer twins\". There is some way to push the repo to GitHub or similar where more serious publication might take place. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679160556184803uYiYb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-03-18",
        "story": []
      },
      "date": 1679125999359
    },
    {
      "item": {
        "type": "factory",
        "id": "f68b56834cbde627"
      },
      "id": "f68b56834cbde627",
      "type": "add",
      "date": 1679126001133
    },
    {
      "type": "edit",
      "id": "f68b56834cbde627",
      "item": {
        "type": "paragraph",
        "id": "f68b56834cbde627",
        "text": "[[Meaning]] as a property"
      },
      "date": 1679126021838
    },
    {
      "type": "add",
      "id": "c73c39fc94a0c474",
      "item": {
        "type": "paragraph",
        "id": "c73c39fc94a0c474",
        "text": "[[Container Types]]"
      },
      "after": "f68b56834cbde627",
      "date": 1679126031536
    },
    {
      "item": {
        "type": "factory",
        "id": "d5ff9de12f068604"
      },
      "id": "d5ff9de12f068604",
      "type": "add",
      "after": "c73c39fc94a0c474",
      "date": 1679126136398
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "[[diagrams-as-base-model]]"
      },
      "date": 1679126142016
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "[[Diagrams as Base Model]]"
      },
      "date": 1679126459037
    },
    {
      "type": "edit",
      "id": "f68b56834cbde627",
      "item": {
        "type": "paragraph",
        "id": "f68b56834cbde627",
        "text": "[[Meaning]] as a property See [[Meaning (Sinn)]]."
      },
      "date": 1679126480582
    },
    {
      "type": "edit",
      "id": "f68b56834cbde627",
      "item": {
        "type": "paragraph",
        "id": "f68b56834cbde627",
        "text": "[[Meaning]] as a property ⇒  [[Meaning (Sinn)]]"
      },
      "date": 1679126487417
    },
    {
      "item": {
        "type": "factory",
        "id": "00a4d5dff75e00b8"
      },
      "id": "00a4d5dff75e00b8",
      "type": "add",
      "after": "d5ff9de12f068604",
      "date": 1679141109853
    },
    {
      "type": "edit",
      "id": "00a4d5dff75e00b8",
      "item": {
        "type": "paragraph",
        "id": "00a4d5dff75e00b8",
        "text": "BARALDI, Claudio, CORSI, Giancarlo and ESPOSITO, Elena, 1997. GLU: Glossar zu Niklas Luhmanns Theorie sozialer Systeme. Frankfurt am Main: Suhrkamp. Suhrkamp Taschenbuch Wissenschaft, 1226. ISBN 978-3-518-28826-9. \n"
      },
      "date": 1679141126347
    },
    {
      "item": {
        "type": "factory",
        "id": "e8888b042e15d233"
      },
      "id": "e8888b042e15d233",
      "type": "add",
      "after": "00a4d5dff75e00b8",
      "date": 1679141558882
    },
    {
      "type": "edit",
      "id": "e8888b042e15d233",
      "item": {
        "type": "reference",
        "id": "e8888b042e15d233",
        "site": "thompson.fed.wiki",
        "slug": "emergent-patterning",
        "title": "Emergent Patterning",
        "text": "Emergent patterning is a process in which complex patterns or structures emerge from simple interactions or rules. In other words, emergent patterning refers to the spontaneous appearance of order or organization in a system, without the need for a central controlling force."
      },
      "date": 1679141618481
    },
    {
      "id": "e8888b042e15d233",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "e8888b042e15d233",
        "c73c39fc94a0c474",
        "d5ff9de12f068604",
        "00a4d5dff75e00b8"
      ],
      "date": 1679141631344
    },
    {
      "type": "add",
      "id": "6ea32d03c1b70d04",
      "item": {
        "type": "paragraph",
        "id": "6ea32d03c1b70d04",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our book experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others."
      },
      "after": "f68b56834cbde627",
      "date": 1679141642200
    },
    {
      "type": "edit",
      "id": "6ea32d03c1b70d04",
      "item": {
        "type": "paragraph",
        "id": "6ea32d03c1b70d04",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our book experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679064328150267tetfV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679141657716
    },
    {
      "type": "edit",
      "id": "6ea32d03c1b70d04",
      "item": {
        "type": "paragraph",
        "id": "6ea32d03c1b70d04",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our book experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, '[[computer-aided neural patterning]]', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679064328150267tetfV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679141813837
    },
    {
      "type": "edit",
      "id": "6ea32d03c1b70d04",
      "item": {
        "type": "paragraph",
        "id": "6ea32d03c1b70d04",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our book experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679064328150267tetfV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679141843488
    },
    {
      "item": {
        "type": "factory",
        "id": "641ac8223f8e23cc"
      },
      "id": "641ac8223f8e23cc",
      "type": "add",
      "after": "00a4d5dff75e00b8",
      "date": 1679141846106
    },
    {
      "type": "edit",
      "id": "641ac8223f8e23cc",
      "item": {
        "type": "reference",
        "id": "641ac8223f8e23cc",
        "site": "thompson.fed.wiki",
        "slug": "computer-assisted-neural-patterning",
        "title": "Computer-assisted Neural Patterning",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others."
      },
      "date": 1679141849245
    },
    {
      "id": "641ac8223f8e23cc",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "6ea32d03c1b70d04",
        "e8888b042e15d233",
        "641ac8223f8e23cc",
        "c73c39fc94a0c474",
        "d5ff9de12f068604",
        "00a4d5dff75e00b8"
      ],
      "date": 1679141853355
    },
    {
      "type": "edit",
      "id": "6ea32d03c1b70d04",
      "item": {
        "type": "paragraph",
        "id": "6ea32d03c1b70d04",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our book experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. "
      },
      "date": 1679141878796
    },
    {
      "type": "edit",
      "id": "641ac8223f8e23cc",
      "item": {
        "type": "reference",
        "id": "641ac8223f8e23cc",
        "site": "thompson.fed.wiki",
        "slug": "computer-assisted-neural-patterning",
        "title": "Computer-assisted Neural Patterning",
        "text": "Note the initial forming of 'nodal clustering'. These clusters have meaning, that which we can later explore, each forming a pattern, a pattern from which a story can be told. Here we sense the hidden potential of our experiment, that of 'emergent patterning' that allows new meaning to emerge as we co-create with the aid of a computer.  We now have a name for name for this process, 'computer-aided neural patterning', that which breaths life into the theories of network neuroscience and active inference being pioneered by Basset, Friston and others. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679064328150267tetfV:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679141883265
    },
    {
      "id": "641ac8223f8e23cc",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "6ea32d03c1b70d04",
        "641ac8223f8e23cc",
        "e8888b042e15d233",
        "c73c39fc94a0c474",
        "d5ff9de12f068604",
        "00a4d5dff75e00b8"
      ],
      "date": 1679141886521
    },
    {
      "type": "remove",
      "id": "6ea32d03c1b70d04",
      "date": 1679141890260
    },
    {
      "id": "d5ff9de12f068604",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "641ac8223f8e23cc",
        "e8888b042e15d233",
        "d5ff9de12f068604",
        "c73c39fc94a0c474",
        "00a4d5dff75e00b8"
      ],
      "date": 1679142102251
    },
    {
      "item": {
        "type": "factory",
        "id": "c19de7013badca34"
      },
      "id": "c19de7013badca34",
      "type": "add",
      "after": "00a4d5dff75e00b8",
      "date": 1679142121695
    },
    {
      "type": "edit",
      "id": "c19de7013badca34",
      "item": {
        "type": "reference",
        "id": "c19de7013badca34",
        "site": "wiki.ralfbarkow.ch",
        "slug": "unlocking-luhmann",
        "title": "Unlocking Luhmann",
        "text": "Baraldi, Claudio, Giancarlo Corsi, and Elena Esposito. Unlocking Luhmann; Luhmann in Glossario. I Concetti Fondamentali Della Teoria : A Keyword Introduction to Systems Theory. transcript Verlag, 2021. [https://library.oapen.org/handle/20.500.12657/48859 page], [https://library.oapen.org/bitstream/handle/20.500.12657/48859/9783839456743.pdf pdf]."
      },
      "date": 1679142123875
    },
    {
      "type": "add",
      "id": "2a764b0630f11cdd",
      "item": {
        "type": "paragraph",
        "id": "2a764b0630f11cdd",
        "text": "Does these clusters have meaning?"
      },
      "after": "f68b56834cbde627",
      "date": 1679142169550
    },
    {
      "id": "2a764b0630f11cdd",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "641ac8223f8e23cc",
        "2a764b0630f11cdd",
        "e8888b042e15d233",
        "d5ff9de12f068604",
        "c73c39fc94a0c474",
        "00a4d5dff75e00b8",
        "c19de7013badca34"
      ],
      "date": 1679142185815
    },
    {
      "type": "add",
      "id": "ccdac1de48ec8beb",
      "item": {
        "type": "paragraph",
        "id": "ccdac1de48ec8beb",
        "text": "Someone shows us a kind of pattern sheet and adds awkward textual explanations from the perspective of God's eye, peppered with metaphors. We can recognize patterns, even see saber-toothed tigers in the mist where there are no saber-toothed tigers. We'd rather run from these patterns once too often than once too little."
      },
      "after": "2a764b0630f11cdd",
      "date": 1679142464699
    },
    {
      "type": "edit",
      "id": "2a764b0630f11cdd",
      "item": {
        "type": "paragraph",
        "id": "2a764b0630f11cdd",
        "text": "Do these clusters have meaning?\n\nThompson\n shows us a kind of pattern sheet that seems incomprehensible in itself, so he adds long textual explanations from the perspective of God's eye hovering over the map, peppered with metaphors. Yes, we can see patterns, even see saber-toothed tigers in the mist where there are no saber-toothed tigers. We'd rather run from these patterns once too often than once too little.\n\nI miss the time dimension in such diagrams."
      },
      "date": 1679143220334
    },
    {
      "type": "remove",
      "id": "ccdac1de48ec8beb",
      "date": 1679143223056
    },
    {
      "type": "edit",
      "id": "2a764b0630f11cdd",
      "item": {
        "type": "paragraph",
        "id": "2a764b0630f11cdd",
        "text": "Do these clusters have meaning?\n\nThompson\n shows us a kind of pattern sheet that seems incomprehensible in itself, so he adds long textual explanations from the perspective of God's eye hovering over the map, peppered with metaphors. Yes, we can see patterns, even see saber-toothed tigers in the mist where there are no saber-toothed tigers. We'd rather run from these patterns once too often than once too little.\n\nI miss the time dimension in such diagrams. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16791426120dLnCB:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679143234300
    },
    {
      "item": {
        "type": "factory",
        "id": "0636ba19f23238af"
      },
      "id": "0636ba19f23238af",
      "type": "add",
      "after": "c19de7013badca34",
      "date": 1679149235873
    },
    {
      "type": "edit",
      "id": "0636ba19f23238af",
      "item": {
        "type": "pagefold",
        "id": "0636ba19f23238af",
        "text": "~"
      },
      "date": 1679149238307
    },
    {
      "item": {
        "type": "factory",
        "id": "cd74e12ab630f89a"
      },
      "id": "cd74e12ab630f89a",
      "type": "add",
      "after": "0636ba19f23238af",
      "date": 1679149239762
    },
    {
      "type": "edit",
      "id": "cd74e12ab630f89a",
      "item": {
        "type": "reference",
        "id": "cd74e12ab630f89a",
        "site": "lfi.wiki.dbbs.co",
        "slug": "embrace-the-multi-party-dilemma",
        "title": "Embrace the Multi-Party Dilemma",
        "text": "We run our code on the platforms of other companies. Misalignment across companies changes what is needed to keep our systems running. These insights also apply with internal platforms—a product team runs their code on a cluster managed by another team. Embracing the Multi-Party Dilemma: Learning from Incidents Across Company Boundaries. Sarah Butt and Alex Elman @ LFI Conf 2023. [https://www.youtube.com/watch?v=CbSiKAtO7Fk&list=PLQmwzq_GIU-idCnJNR4t_aKb0HDCOXfZ1&index=12 youtube]"
      },
      "date": 1679149244118
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]]"
      },
      "date": 1679149507527
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] Base Model"
      },
      "date": 1679149595046
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]] "
      },
      "date": 1679149604330
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]]"
      },
      "date": 1679149671904
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] [[how-the-model-work]]"
      },
      "date": 1679149887240
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] [[how-the-model-works]]"
      },
      "date": 1679149900771
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] ⇒ [[How the Model Works]] ⇒ [[Guided Tour]]"
      },
      "date": 1679149943695
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] ⇒ [[How the Model Works]] ⇒ [[Guided Tour]] ⇒ [[NoteCards]]"
      },
      "date": 1679149969655
    },
    {
      "type": "edit",
      "id": "f68b56834cbde627",
      "item": {
        "type": "paragraph",
        "id": "f68b56834cbde627",
        "text": "[[Meaning]] as a property? ⇒  [[Meaning (Sinn)]]"
      },
      "date": 1679152804275
    },
    {
      "type": "edit",
      "id": "f68b56834cbde627",
      "item": {
        "type": "paragraph",
        "id": "f68b56834cbde627",
        "text": "[[Meaning]] as a property? (Re: \"These clusters have meaning, …\") ⇒  [[Meaning (Sinn)]]"
      },
      "date": 1679152820463
    },
    {
      "type": "add",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson's systems seems to be not refering to other possibilities but following only the Next: links in addition to the usual hypertext links."
      },
      "after": "2a764b0630f11cdd",
      "date": 1679154026030
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow. But:"
      },
      "date": 1679154087859
    },
    {
      "id": "28a30585edfc85fa",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "28a30585edfc85fa",
        "text": "In the medium of meaning, any operation of the system refers to other possibilities of operation production, which remain in the background of what is produced.\n"
      },
      "after": "6443b0b9201bc562",
      "attribution": {
        "page": "Meaning (Sinn)"
      },
      "date": 1679154092849
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And \nThompson\n's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow. But: In the medium of meaning, any operation of the system refers to other possibilities of operation production, which remain in the background of what is produced.\n\nWhat I miss beyond the time dimension are decision alternatives. Access to hypertexts is systematically interactive, and it is ultimately up to the user to decide which (even the offered) direction(s) to take. We should try to make structures and decision situations transparent."
      },
      "date": 1679154372589
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And \nThompson\n's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow. But: In the medium of meaning, any operation of the system refers to other possibilities of operation production, which remain in the background of what is produced.\n\n"
      },
      "date": 1679154394055
    },
    {
      "type": "add",
      "id": "aa6093873b2cf872",
      "item": {
        "type": "paragraph",
        "id": "aa6093873b2cf872",
        "text": "What I miss beyond the time dimension are decision alternatives. Access to hypertexts is systematically interactive, and it is ultimately up to the user to decide which (even the offered) direction(s) to take. We should try to make structures and decision situations transparent."
      },
      "after": "6443b0b9201bc562",
      "date": 1679154394811
    },
    {
      "id": "28a30585edfc85fa",
      "type": "move",
      "order": [
        "f68b56834cbde627",
        "641ac8223f8e23cc",
        "2a764b0630f11cdd",
        "6443b0b9201bc562",
        "28a30585edfc85fa",
        "aa6093873b2cf872",
        "e8888b042e15d233",
        "d5ff9de12f068604",
        "c73c39fc94a0c474",
        "00a4d5dff75e00b8",
        "c19de7013badca34",
        "0636ba19f23238af",
        "cd74e12ab630f89a"
      ],
      "date": 1679154397005
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson 's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow. But: \n\n"
      },
      "date": 1679154415440
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson 's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/~!ORfrUEFeWFcHAMLFLr:matrix.org:m1679154327911.26?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] But: \n\n"
      },
      "date": 1679154436214
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson 's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow (see Guided Tour). [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/~!ORfrUEFeWFcHAMLFLr:matrix.org:m1679154327911.26?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] But: \n\n"
      },
      "date": 1679155243321
    },
    {
      "type": "edit",
      "id": "6443b0b9201bc562",
      "item": {
        "type": "paragraph",
        "id": "6443b0b9201bc562",
        "text": "And Thompson 's system doesn't seem to point out other possibilities, only the Next: links in addition to the usual hypertext links to follow (see [[Guided Tour]]). [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/~!ORfrUEFeWFcHAMLFLr:matrix.org:m1679154327911.26?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix] But: \n\n"
      },
      "date": 1679155268077
    },
    {
      "item": {
        "type": "factory",
        "id": "e6fa5c824aace266"
      },
      "id": "e6fa5c824aace266",
      "type": "add",
      "after": "cd74e12ab630f89a",
      "date": 1679170635368
    },
    {
      "type": "edit",
      "id": "e6fa5c824aace266",
      "item": {
        "type": "paragraph",
        "id": "e6fa5c824aace266",
        "text": "FLUSSER, Vilém, 1996. Der Flusser-Reader zu Kommunikation, Medien und Design. 2. Aufl. Mannheim: Bollmann. Kommunikation & Neue Medien. ISBN 978-3-927901-67-4. \n"
      },
      "date": 1679170646606
    },
    {
      "item": {
        "type": "factory",
        "id": "b1806581e640263c"
      },
      "id": "b1806581e640263c",
      "type": "add",
      "after": "e6fa5c824aace266",
      "date": 1679171004440
    },
    {
      "type": "edit",
      "id": "b1806581e640263c",
      "item": {
        "type": "paragraph",
        "id": "b1806581e640263c",
        "text": "Ward\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\nRalf Barkow@rgb:dreyeck.freedombox.rocks\nAccording to Zellweger (1989), the special art of building guided tours is to write instructions (in the case of NoteCards in the form of scripts) that do not define deterministic paths, as in techniques of programmed instruction, but ones in which the sequences of links remain non-linear. Furthermore, it should be possible to leave the guided tours at any point. In the following, we will take a closer look at the concept of the \"guided tour\" realized in NoteCards as presented by Marshall/Irish (1989).\n\nhttp://dreyeck.wiki.ralfbarkow.ch/view/guided-tour\nRalf Barkow@rgb:dreyeck.freedombox.rocks\nWard\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\nYes, \nWard\n, see the end of my modified Journal page\nhttp://code.dreyeck.ch/view/journal\nwhere the Frame code refers to its page.journal\nThis is not yet in the form of annotations, but it should be in the direction you are talking about, right?\nAlthough in this case the annotation would be implicitly clear: this page (or Card) with its window (frame).\nWard\nMy suggestion was taken as some far-fetched thought experiment by a community that was not yet coding in windows. I was already fascinated by my year or two with Smalltalk-80 where I knew that Strings annotated character by character with objects became Texts, run-length encoded for efficiency. And, a window was just an object. This story would be better if I had actually coded what I described. I think I was succumbed with group think and just thought about how this might be useful hoping for something more like commit comments. \nRalf Barkow@rgb:dreyeck.freedombox.rocks\nAnd I'm trying to translate that into the JavaScript world in my Journal example. I would like to output the updates as objects. Currently, they are output as a list of page.journal.item.types. However, I'd like to represent them as, say, nodes of a graph that supports path playback and visualization. And if I add a slider for time travel, I could watch the update graph change. This would recreate the existing functionality of our journal's history in the frame, but give me more visualization options.\nWard\nI'm interested in how wiki would change if it had an ok code editor somehow associated with html and js assets. Paul has pointed out CodeJar as a suitable editor and Isomorphic Git as probably useful for the kinds of problems that trouble any editor that tries too hard to be simple. My first experiments were encouraging: http://ward.dojo.fed.wiki/try-codejar.html\nWard\nMy current workflow has me code in a local repo with sublime, upload to test in wiki, check in commits in a terminal window, find the link in github, and then paste that back into wiki along with other notes. This is working for me but feels more scattered than the rest of the stuff I do in wiki. Let me speculate what might work better.\nWard\nImagine that I make a Frame item and add markup that binds it to an asset folder. Shift-double-click opens the code editor and starts the git repo as .git within the folder. Save reloads the Frame to start debugging. If this page is forked, then some or all of this goes to the new site. There is some way to commit a version and this shows up in the Journal as an edit so others see \"newer twins\". There is some way to push the repo to GitHub or similar where more serious publication might take place."
      },
      "date": 1679171007108
    },
    {
      "type": "edit",
      "id": "b1806581e640263c",
      "item": {
        "type": "paragraph",
        "id": "b1806581e640263c",
        "text": "Ward\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\nRalf Barkow@rgb:dreyeck.freedombox.rocks\nAccording to Zellweger (1989), the special art of building guided tours is to write instructions (in the case of NoteCards in the form of scripts) that do not define deterministic paths, as in techniques of programmed instruction, but ones in which the sequences of links remain non-linear. Furthermore, it should be possible to leave the guided tours at any point. In the following, we will take a closer look at the concept of the \"guided tour\" realized in NoteCards as presented by Marshall/Irish (1989).\n\nhttp://dreyeck.wiki.ralfbarkow.ch/view/guided-tour\nRalf Barkow@rgb:dreyeck.freedombox.rocks\nWard\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\nYes, \nWard\n, see the end of my modified Journal page\nhttp://code.dreyeck.ch/view/journal\nwhere the Frame code refers to its page.journal\nThis is not yet in the form of annotations, but it should be in the direction you are talking about, right?\nAlthough in this case the annotation would be implicitly clear: this page (or Card) with its window (frame).\nWard\nMy suggestion was taken as some far-fetched thought experiment by a community that was not yet coding in windows. I was already fascinated by my year or two with Smalltalk-80 where I knew that Strings annotated character by character with objects became Texts, run-length encoded for efficiency. And, a window was just an object. This story would be better if I had actually coded what I described. I think I was succumbed with group think and just thought about how this might be useful hoping for something more like commit comments. \nRalf Barkow@rgb:dreyeck.freedombox.rocks\nAnd I'm trying to translate that into the JavaScript world in my Journal example. I would like to output the updates as objects. Currently, they are output as a list of page.journal.item.types. However, I'd like to represent them as, say, nodes of a graph that supports path playback and visualization. And if I add a slider for time travel, I could watch the update graph change. This would recreate the existing functionality of our journal's history in the frame, but give me more visualization options.\nWard\nI'm interested in how wiki would change if it had an ok code editor somehow associated with html and js assets. Paul has pointed out CodeJar as a suitable editor and Isomorphic Git as probably useful for the kinds of problems that trouble any editor that tries too hard to be simple. My first experiments were encouraging: http://ward.dojo.fed.wiki/try-codejar.html\nWard\nMy current workflow has me code in a local repo with sublime, upload to test in wiki, check in commits in a terminal window, find the link in github, and then paste that back into wiki along with other notes. This is working for me but feels more scattered than the rest of the stuff I do in wiki. Let me speculate what might work better.\nWard\nImagine that I make a Frame item and add markup that binds it to an asset folder. Shift-double-click opens the code editor and starts the git repo as .git within the folder. Save reloads the Frame to start debugging. If this page is forked, then some or all of this goes to the new site. There is some way to commit a version and this shows up in the Journal as an edit so others see \"newer twins\". There is some way to push the repo to GitHub or similar where more serious publication might take place. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679160556184803uYiYb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679171031251
    },
    {
      "type": "edit",
      "id": "b1806581e640263c",
      "item": {
        "type": "paragraph",
        "id": "b1806581e640263c",
        "text": "Ward\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\n"
      },
      "date": 1679171066977
    },
    {
      "type": "add",
      "id": "8e67aecb3ab6f90e",
      "item": {
        "type": "paragraph",
        "id": "8e67aecb3ab6f90e",
        "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nAccording to Zellweger (1989), the special art of building guided tours is to write instructions (in the case of NoteCards in the form of scripts) that do not define deterministic paths, as in techniques of programmed instruction, but ones in which the sequences of links remain non-linear. Furthermore, it should be possible to leave the guided tours at any point. In the following, we will take a closer look at the concept of the \"guided tour\" realized in NoteCards as presented by Marshall/Irish (1989).\n\nhttp://dreyeck.wiki.ralfbarkow.ch/view/guided-tour\n"
      },
      "after": "b1806581e640263c",
      "date": 1679171077640
    },
    {
      "type": "add",
      "id": "878068f7bb8dd369",
      "item": {
        "type": "paragraph",
        "id": "878068f7bb8dd369",
        "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nWard\nI once suggested at a software engineering workshop that every line of code should be annotated with what window was read before the line was written. This might be the time that matters.\n"
      },
      "after": "8e67aecb3ab6f90e",
      "date": 1679171082949
    },
    {
      "type": "add",
      "id": "8eb585015fc72d11",
      "item": {
        "type": "paragraph",
        "id": "8eb585015fc72d11",
        "text": "Yes, \nWard\n, see the end of my modified Journal page\nhttp://code.dreyeck.ch/view/journal\nwhere the Frame code refers to its page.journal\nThis is not yet in the form of annotations, but it should be in the direction you are talking about, right?\n"
      },
      "after": "878068f7bb8dd369",
      "date": 1679171087496
    },
    {
      "type": "add",
      "id": "acf7746738a48c9e",
      "item": {
        "type": "paragraph",
        "id": "acf7746738a48c9e",
        "text": "Although in this case the annotation would be implicitly clear: this page (or Card) with its window (frame).\n"
      },
      "after": "8eb585015fc72d11",
      "date": 1679171090370
    },
    {
      "type": "add",
      "id": "0b3aa5f9e0e1f28a",
      "item": {
        "type": "paragraph",
        "id": "0b3aa5f9e0e1f28a",
        "text": "Ward\nMy suggestion was taken as some far-fetched thought experiment by a community that was not yet coding in windows. I was already fascinated by my year or two with Smalltalk-80 where I knew that Strings annotated character by character with objects became Texts, run-length encoded for efficiency. And, a window was just an object. This story would be better if I had actually coded what I described. I think I was succumbed with group think and just thought about how this might be useful hoping for something more like commit comments. \n"
      },
      "after": "acf7746738a48c9e",
      "date": 1679171094541
    },
    {
      "type": "add",
      "id": "a1862fa07fd18ffc",
      "item": {
        "type": "paragraph",
        "id": "a1862fa07fd18ffc",
        "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nAnd I'm trying to translate that into the JavaScript world in my Journal example. I would like to output the updates as objects. Currently, they are output as a list of page.journal.item.types. However, I'd like to represent them as, say, nodes of a graph that supports path playback and visualization. And if I add a slider for time travel, I could watch the update graph change. This would recreate the existing functionality of our journal's history in the frame, but give me more visualization options.\nWard\n"
      },
      "after": "0b3aa5f9e0e1f28a",
      "date": 1679171098822
    },
    {
      "type": "edit",
      "id": "a1862fa07fd18ffc",
      "item": {
        "type": "paragraph",
        "id": "a1862fa07fd18ffc",
        "text": "Ralf Barkow@rgb:dreyeck.freedombox.rocks\nAnd I'm trying to translate that into the JavaScript world in my Journal example. I would like to output the updates as objects. Currently, they are output as a list of page.journal.item.types. However, I'd like to represent them as, say, nodes of a graph that supports path playback and visualization. And if I add a slider for time travel, I could watch the update graph change. This would recreate the existing functionality of our journal's history in the frame, but give me more visualization options.\n"
      },
      "date": 1679171105976
    },
    {
      "type": "add",
      "id": "1ab8f32bba388cd0",
      "item": {
        "type": "paragraph",
        "id": "1ab8f32bba388cd0",
        "text": "Ward\nI'm interested in how wiki would change if it had an ok code editor somehow associated with html and js assets. Paul has pointed out CodeJar as a suitable editor and Isomorphic Git as probably useful for the kinds of problems that trouble any editor that tries too hard to be simple. My first experiments were encouraging: http://ward.dojo.fed.wiki/try-codejar.html\nWard\n"
      },
      "after": "a1862fa07fd18ffc",
      "date": 1679171109739
    },
    {
      "type": "add",
      "id": "1eb8c4017c2c2c05",
      "item": {
        "type": "paragraph",
        "id": "1eb8c4017c2c2c05",
        "text": "My current workflow has me code in a local repo with sublime, upload to test in wiki, check in commits in a terminal window, find the link in github, and then paste that back into wiki along with other notes. This is working for me but feels more scattered than the rest of the stuff I do in wiki. Let me speculate what might work better.\n"
      },
      "after": "1ab8f32bba388cd0",
      "date": 1679171112501
    },
    {
      "type": "add",
      "id": "8acaaf09c8619289",
      "item": {
        "type": "paragraph",
        "id": "8acaaf09c8619289",
        "text": "Ward\nImagine that I make a Frame item and add markup that binds it to an asset folder. Shift-double-click opens the code editor and starts the git repo as .git within the folder. Save reloads the Frame to start debugging. If this page is forked, then some or all of this goes to the new site. There is some way to commit a version and this shows up in the Journal as an edit so others see \"newer twins\". There is some way to push the repo to GitHub or similar where more serious publication might take place. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679160556184803uYiYb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "1eb8c4017c2c2c05",
      "date": 1679171116272
    },
    {
      "id": "d5ff9de12f068604",
      "type": "move",
      "order": [
        "d5ff9de12f068604",
        "f68b56834cbde627",
        "641ac8223f8e23cc",
        "2a764b0630f11cdd",
        "6443b0b9201bc562",
        "28a30585edfc85fa",
        "aa6093873b2cf872",
        "e8888b042e15d233",
        "c73c39fc94a0c474",
        "00a4d5dff75e00b8",
        "c19de7013badca34",
        "0636ba19f23238af",
        "cd74e12ab630f89a",
        "e6fa5c824aace266",
        "b1806581e640263c",
        "8e67aecb3ab6f90e",
        "878068f7bb8dd369",
        "8eb585015fc72d11",
        "acf7746738a48c9e",
        "0b3aa5f9e0e1f28a",
        "a1862fa07fd18ffc",
        "1ab8f32bba388cd0",
        "1eb8c4017c2c2c05",
        "8acaaf09c8619289"
      ],
      "date": 1679204705639
    },
    {
      "type": "remove",
      "id": "c73c39fc94a0c474",
      "date": 1679204729894
    },
    {
      "type": "edit",
      "id": "d5ff9de12f068604",
      "item": {
        "type": "paragraph",
        "id": "d5ff9de12f068604",
        "text": "⇒ [[Diagrams as Base Model]] ⇒ [[Base Model]]  ⇒ [[Emergent Interest in Diagrams]] ⇒ [[How the Model Works]] ⇒ [[Guided Tour]] ⇒ [[NoteCards]] ⇒ [[Container Types]]"
      },
      "date": 1679204738817
    },
    {
      "item": {
        "type": "factory",
        "id": "cbec497b228cecbf"
      },
      "id": "cbec497b228cecbf",
      "type": "add",
      "after": "8acaaf09c8619289",
      "date": 1679204748271
    },
    {
      "type": "edit",
      "id": "cbec497b228cecbf",
      "item": {
        "type": "pagefold",
        "id": "cbec497b228cecbf",
        "text": "~"
      },
      "date": 1679204752903
    },
    {
      "id": "cbec497b228cecbf",
      "type": "move",
      "order": [
        "d5ff9de12f068604",
        "f68b56834cbde627",
        "641ac8223f8e23cc",
        "2a764b0630f11cdd",
        "6443b0b9201bc562",
        "28a30585edfc85fa",
        "aa6093873b2cf872",
        "e8888b042e15d233",
        "cbec497b228cecbf",
        "00a4d5dff75e00b8",
        "c19de7013badca34",
        "0636ba19f23238af",
        "cd74e12ab630f89a",
        "e6fa5c824aace266",
        "b1806581e640263c",
        "8e67aecb3ab6f90e",
        "878068f7bb8dd369",
        "8eb585015fc72d11",
        "acf7746738a48c9e",
        "0b3aa5f9e0e1f28a",
        "a1862fa07fd18ffc",
        "1ab8f32bba388cd0",
        "1eb8c4017c2c2c05",
        "8acaaf09c8619289"
      ],
      "date": 1679204764482
    },
    {
      "type": "remove",
      "id": "e8888b042e15d233",
      "date": 1679204814048
    },
    {
      "type": "edit",
      "id": "2a764b0630f11cdd",
      "item": {
        "type": "paragraph",
        "id": "2a764b0630f11cdd",
        "text": "[[Computer-Aided Neural Patterning]]"
      },
      "date": 1679206110194
    },
    {
      "type": "add",
      "id": "385cb7eb6d847958",
      "item": {
        "type": "paragraph",
        "id": "385cb7eb6d847958",
        "text": "Do these clusters have meaning?\n\nThompson\n shows us a kind of pattern sheet that seems incomprehensible in itself, so he adds long textual explanations from the perspective of God's eye hovering over the map, peppered with metaphors. Yes, we can see patterns, even see saber-toothed tigers in the mist where there are no saber-toothed tigers. We'd rather run from these patterns once too often than once too little.\n\nI miss the time dimension in such diagrams. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16791426120dLnCB:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "2a764b0630f11cdd",
      "date": 1679206113083
    },
    {
      "type": "edit",
      "id": "2a764b0630f11cdd",
      "item": {
        "type": "paragraph",
        "id": "2a764b0630f11cdd",
        "text": "⇒ [[Computer-Aided Neural Patterning]]"
      },
      "date": 1679206119332
    }
  ]
}