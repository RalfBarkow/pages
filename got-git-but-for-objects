{
  "title": "GoT: Git, but for Objects",
  "story": [
    {
      "type": "markdown",
      "id": "07f6b8e1cf6f12f7",
      "text": "R. Achar and C. V. Lopes, “Got: Git, but for Objects,” arXiv:1904.06584 [cs], Apr. 2019, Accessed: Sep. 01, 2021. [Online]. Available: http://arxiv.org/abs/1904.06584\n"
    },
    {
      "type": "markdown",
      "id": "0b85afcb700f0ba9",
      "text": "> We look at one important category of distributed applications characterized by the existence of multiple collaborating, and competing, components sharing mutable, long-lived, replicated objects. The problem addressed by our work is that of object state synchronization among the components. As an organizing principle for replicated objects, we formally specify the Global Object Tracker (GoT) model, an object-oriented programming model based on causal consistency with application-level conflict resolution strategies, whose elements and interfaces mirror those found in decentralized version control systems: a version graph, working data, diffs, commit, checkout, fetch, push, and merge. We have implemented GoT in a framework called Spacetime, written in Python. In its purest form, GoT is impractical for real systems, because of the unbounded growth of the version graph and because passing diff'ed histories over the network makes remote communication too slow. We present our solution to these problems that adds some constraints to GoT applications, but that makes the model feasible in practice. We present a performance analysis of Spacetime for representative workloads, which shows that the additional constraints added to GoT make it not just feasible, but viable for real applications."
    },
    {
      "type": "pagefold",
      "id": "60cfab9585124cbf",
      "text": "Network Latency"
    },
    {
      "type": "markdown",
      "id": "c56a8287c0205a80",
      "text": "First, there is the fundamental problem of network latency: a typical ’ping’ between the US West Coast and Amsterdam is 130ms, of which 67% is spent in fiber optic cable at almost the speed of light – [https://wondernetwork.com/pings page]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "GoT: Git, but for Objects",
        "story": []
      },
      "date": 1630496125595
    },
    {
      "item": {
        "type": "factory",
        "id": "07f6b8e1cf6f12f7"
      },
      "id": "07f6b8e1cf6f12f7",
      "type": "add",
      "date": 1630496137189
    },
    {
      "type": "edit",
      "id": "07f6b8e1cf6f12f7",
      "item": {
        "type": "markdown",
        "id": "07f6b8e1cf6f12f7",
        "text": "R. Achar and C. V. Lopes, “Got: Git, but for Objects,” arXiv:1904.06584 [cs], Apr. 2019, Accessed: Sep. 01, 2021. [Online]. Available: http://arxiv.org/abs/1904.06584\n"
      },
      "date": 1630496145647
    },
    {
      "item": {
        "type": "factory",
        "id": "b750af23fc69d48e"
      },
      "id": "b750af23fc69d48e",
      "type": "add",
      "after": "07f6b8e1cf6f12f7",
      "date": 1630496150704
    },
    {
      "type": "remove",
      "id": "b750af23fc69d48e",
      "date": 1630496151669
    },
    {
      "item": {
        "type": "factory",
        "id": "0b85afcb700f0ba9"
      },
      "id": "0b85afcb700f0ba9",
      "type": "add",
      "after": "07f6b8e1cf6f12f7",
      "date": 1630496152648
    },
    {
      "type": "edit",
      "id": "0b85afcb700f0ba9",
      "item": {
        "type": "markdown",
        "id": "0b85afcb700f0ba9",
        "text": "> We look at one important category of distributed applications characterized by the existence of multiple collaborating, and competing, components sharing mutable, long-lived, replicated objects. The problem addressed by our work is that of object state synchronization among the components. As an organizing principle for replicated objects, we formally specify the Global Object Tracker (GoT) model, an object-oriented programming model based on causal consistency with application-level conflict resolution strategies, whose elements and interfaces mirror those found in decentralized version control systems: a version graph, working data, diffs, commit, checkout, fetch, push, and merge. We have implemented GoT in a framework called Spacetime, written in Python. In its purest form, GoT is impractical for real systems, because of the unbounded growth of the version graph and because passing diff'ed histories over the network makes remote communication too slow. We present our solution to these problems that adds some constraints to GoT applications, but that makes the model feasible in practice. We present a performance analysis of Spacetime for representative workloads, which shows that the additional constraints added to GoT make it not just feasible, but viable for real applications."
      },
      "date": 1630496156357
    },
    {
      "item": {
        "type": "factory",
        "id": "c56a8287c0205a80"
      },
      "id": "c56a8287c0205a80",
      "type": "add",
      "after": "0b85afcb700f0ba9",
      "date": 1630496213240
    },
    {
      "type": "edit",
      "id": "c56a8287c0205a80",
      "item": {
        "type": "markdown",
        "id": "c56a8287c0205a80",
        "text": "First, there is the fundamental problem of network latency: a typical ’ping’ between the US West Coast and Amsterdam is 130ms, of which 67% is spent in fiber optic cable at almost the speed of light1"
      },
      "date": 1630496225760
    },
    {
      "type": "edit",
      "id": "c56a8287c0205a80",
      "item": {
        "type": "markdown",
        "id": "c56a8287c0205a80",
        "text": "First, there is the fundamental problem of network latency: a typical ’ping’ between the US West Coast and Amsterdam is 130ms, of which 67% is spent in fiber optic cable at almost the speed of light [https://wondernetwork.com/pings page]."
      },
      "date": 1630496242123
    },
    {
      "item": {
        "type": "factory",
        "id": "60cfab9585124cbf"
      },
      "id": "60cfab9585124cbf",
      "type": "add",
      "after": "c56a8287c0205a80",
      "date": 1630496287255
    },
    {
      "type": "edit",
      "id": "60cfab9585124cbf",
      "item": {
        "type": "pagefold",
        "id": "60cfab9585124cbf",
        "text": "Network Latency"
      },
      "date": 1630496292342
    },
    {
      "id": "60cfab9585124cbf",
      "type": "move",
      "order": [
        "07f6b8e1cf6f12f7",
        "0b85afcb700f0ba9",
        "60cfab9585124cbf",
        "c56a8287c0205a80"
      ],
      "date": 1630496294036
    },
    {
      "type": "edit",
      "id": "c56a8287c0205a80",
      "item": {
        "type": "markdown",
        "id": "c56a8287c0205a80",
        "text": "First, there is the fundamental problem of network latency: a typical ’ping’ between the US West Coast and Amsterdam is 130ms, of which 67% is spent in fiber optic cable at almost the speed of light –[https://wondernetwork.com/pings page]."
      },
      "date": 1630582484979
    },
    {
      "type": "edit",
      "id": "c56a8287c0205a80",
      "item": {
        "type": "markdown",
        "id": "c56a8287c0205a80",
        "text": "First, there is the fundamental problem of network latency: a typical ’ping’ between the US West Coast and Amsterdam is 130ms, of which 67% is spent in fiber optic cable at almost the speed of light – [https://wondernetwork.com/pings page]."
      },
      "date": 1630582489357
    }
  ]
}