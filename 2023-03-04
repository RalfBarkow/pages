{
  "title": "2023-03-04",
  "story": [
    {
      "type": "paragraph",
      "id": "bb59aa3ff7c67ca3",
      "text": "⇒ [[Multiway System]] ⇒ [[Rule 90]]"
    },
    {
      "type": "pagefold",
      "id": "373da3fdfdda8c44",
      "text": "chat.openai"
    },
    {
      "type": "paragraph",
      "id": "5bebc0fd43fec655",
      "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\n"
    },
    {
      "type": "paragraph",
      "id": "4af00efd809489a1",
      "text": "When the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\n"
    },
    {
      "type": "paragraph",
      "id": "2d92c12e22bd75dd",
      "text": "The collectCodeFromContext function extracts the JavaScript code from the data object, which is received as a parameter from the message event, and then calls the render function with the extracted code.\n\n"
    },
    {
      "type": "paragraph",
      "id": "4321a4822b9fb220",
      "text": "The render function decodes the received JavaScript code using atob and then loads the code as a module using the import method. The emit and bind functions are then called with the document.body element as the argument, to execute the code.\n\n"
    },
    {
      "type": "paragraph",
      "id": "d8937b4d7509114c",
      "text": "If an error occurs during the execution of the JavaScript code, the error message is displayed in the document.body element as a pre element. The canvas element with id attribute \"canvas\" is also included in the body section of the HTML document, but it is not used in the JavaScript code snippet provided.\n\n\n\n"
    },
    {
      "type": "pagefold",
      "id": "82adfaafdd9d5fcf",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "2514b77b3eefb7b4",
      "text": "The paragraph where atob is mentioned seems to be wrong. See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn] and  \"btoa()\" [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]. Decoding seems to be the more frequent case."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-03-04",
        "story": []
      },
      "date": 1677926716133
    },
    {
      "item": {
        "type": "factory",
        "id": "9c919469ae87a520"
      },
      "id": "9c919469ae87a520",
      "type": "add",
      "date": 1677926717889
    },
    {
      "type": "edit",
      "id": "9c919469ae87a520",
      "item": {
        "type": "frame",
        "id": "9c919469ae87a520",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
      },
      "date": 1677926722171
    },
    {
      "id": "fe7b36f0b577c480",
      "type": "add",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"1\",\n  \"011\": \"0\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"0\",\n  \"111\": \"1\",\n};\n\n// Create an initial state\nlet state = \"00000000\";\n\n// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "after": "9c919469ae87a520",
      "attribution": {
        "page": "2023-03-03"
      },
      "date": 1677926748881
    },
    {
      "id": "fe7b36f0b577c480",
      "type": "move",
      "order": [
        "fe7b36f0b577c480",
        "9c919469ae87a520"
      ],
      "date": 1677926754954
    },
    {
      "type": "edit",
      "id": "fe7b36f0b577c480",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nconsole.log(ctx); // CanvasRenderingContext2D { /* … */ }\n"
      },
      "date": 1677927610434
    },
    {
      "type": "edit",
      "id": "9c919469ae87a520",
      "item": {
        "type": "frame",
        "id": "9c919469ae87a520",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1677927790315
    },
    {
      "type": "edit",
      "id": "fe7b36f0b577c480",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "const canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nconsole.log(ctx); \n"
      },
      "date": 1677927988616
    },
    {
      "item": {
        "type": "factory",
        "id": "113e37cb78a4ee36"
      },
      "id": "113e37cb78a4ee36",
      "type": "add",
      "after": "9c919469ae87a520",
      "date": 1677928120662
    },
    {
      "type": "edit",
      "id": "113e37cb78a4ee36",
      "item": {
        "type": "paragraph",
        "id": "113e37cb78a4ee36",
        "text": "⇒ [[ESM Snippet Template]]"
      },
      "date": 1677928145747
    },
    {
      "type": "edit",
      "id": "fe7b36f0b577c480",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"1\",\n  \"011\": \"0\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"0\",\n  \"111\": \"1\",\n};\n\n// Create an initial state\nlet state = \"00000000\";\n\n// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677929229954
    },
    {
      "item": {
        "type": "factory",
        "id": "bb59aa3ff7c67ca3"
      },
      "id": "bb59aa3ff7c67ca3",
      "type": "add",
      "after": "113e37cb78a4ee36",
      "date": 1677929487223
    },
    {
      "id": "bb59aa3ff7c67ca3",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "fe7b36f0b577c480",
        "9c919469ae87a520",
        "113e37cb78a4ee36"
      ],
      "date": 1677929489892
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "We copy a code snippet generated by chat.openai:"
      },
      "date": 1677929529095
    },
    {
      "item": {
        "type": "factory",
        "id": "373da3fdfdda8c44"
      },
      "id": "373da3fdfdda8c44",
      "type": "add",
      "after": "113e37cb78a4ee36",
      "date": 1677929979298
    },
    {
      "type": "edit",
      "id": "373da3fdfdda8c44",
      "item": {
        "type": "pagefold",
        "id": "373da3fdfdda8c44",
        "text": "chat.openai"
      },
      "date": 1677929985297
    },
    {
      "item": {
        "type": "factory",
        "id": "5bebc0fd43fec655"
      },
      "id": "5bebc0fd43fec655",
      "type": "add",
      "after": "373da3fdfdda8c44",
      "date": 1677929987082
    },
    {
      "type": "edit",
      "id": "5bebc0fd43fec655",
      "item": {
        "type": "paragraph",
        "id": "5bebc0fd43fec655",
        "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\nWhen the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\nThe collectCodeFromContext function extracts the JavaScript code from the data object, which is received as a parameter from the message event, and then calls the render function with the extracted code.\n\nThe render function decodes the received JavaScript code using atob and then loads the code as a module using the import method. The emit and bind functions are then called with the document.body element as the argument, to execute the code.\n\nIf an error occurs during the execution of the JavaScript code, the error message is displayed in the document.body element as a pre element. The canvas element with id attribute \"canvas\" is also included in the body section of the HTML document, but it is not used in the JavaScript code snippet provided.\n\n\n\n"
      },
      "date": 1677929988926
    },
    {
      "item": {
        "type": "factory",
        "id": "d07cd043bd325281"
      },
      "id": "d07cd043bd325281",
      "type": "add",
      "after": "5bebc0fd43fec655",
      "date": 1677930018852
    },
    {
      "id": "d07cd043bd325281",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "fe7b36f0b577c480",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "d07cd043bd325281",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655"
      ],
      "date": 1677930021584
    },
    {
      "type": "edit",
      "id": "d07cd043bd325281",
      "item": {
        "type": "code",
        "id": "d07cd043bd325281",
        "text": "diff --git a/pages/snippet-template/esm.html b/pages/snippet-template/esm.html\nindex 751e314..520ab34 100644\n--- a/pages/snippet-template/esm.html\n+++ b/pages/snippet-template/esm.html\n@@ -36,5 +36,7 @@\n    }\n\n   </script>\n-  <body></body>\n+  <body>\n+      <canvas id=\"canvas\" width=\"150\" height=\"150\"></canvas>\n+  </body>\n:"
      },
      "date": 1677930023196
    },
    {
      "type": "add",
      "id": "a159d2aa0ae0b10e",
      "item": {
        "type": "paragraph",
        "id": "a159d2aa0ae0b10e",
        "text": "See Basic usage of canvas"
      },
      "after": "113e37cb78a4ee36",
      "date": 1677930052018
    },
    {
      "id": "a159d2aa0ae0b10e",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "fe7b36f0b577c480",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "d07cd043bd325281",
        "a159d2aa0ae0b10e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655"
      ],
      "date": 1677930054103
    },
    {
      "type": "edit",
      "id": "a159d2aa0ae0b10e",
      "item": {
        "type": "paragraph",
        "id": "a159d2aa0ae0b10e",
        "text": "See Basic usage of canvas [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de msn]"
      },
      "date": 1677930067157
    },
    {
      "type": "edit",
      "id": "a159d2aa0ae0b10e",
      "item": {
        "type": "paragraph",
        "id": "a159d2aa0ae0b10e",
        "text": "See Basic usage of canvas [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "date": 1677930077870
    },
    {
      "type": "add",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified "
      },
      "after": "113e37cb78a4ee36",
      "date": 1677930108889
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file and added a "
      },
      "date": 1677930126912
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file and added a <canvas> element:"
      },
      "date": 1677930135405
    },
    {
      "type": "remove",
      "id": "d07cd043bd325281",
      "date": 1677930176489
    },
    {
      "item": {
        "type": "factory",
        "id": "ae7fe3f9c34a72e8"
      },
      "id": "ae7fe3f9c34a72e8",
      "type": "add",
      "after": "5bebc0fd43fec655",
      "date": 1677930184657
    },
    {
      "id": "ae7fe3f9c34a72e8",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "fe7b36f0b577c480",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "0cf39cf16580638e",
        "ae7fe3f9c34a72e8",
        "a159d2aa0ae0b10e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655"
      ],
      "date": 1677930189388
    },
    {
      "type": "edit",
      "id": "ae7fe3f9c34a72e8",
      "item": {
        "type": "markdown",
        "id": "ae7fe3f9c34a72e8",
        "text": "diff --git a/pages/snippet-template/esm.html b/pages/snippet-template/esm.html\nindex 751e314..520ab34 100644\n--- a/pages/snippet-template/esm.html\n+++ b/pages/snippet-template/esm.html\n@@ -36,5 +36,7 @@\n    }\n\n   </script>\n-  <body></body>\n+  <body>\n+      <canvas id=\"canvas\" width=\"150\" height=\"150\"></canvas>\n+  </body>\n:"
      },
      "date": 1677930191469
    },
    {
      "type": "remove",
      "id": "ae7fe3f9c34a72e8",
      "date": 1677930211207
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file and added a <canvas> element."
      },
      "date": 1677930216038
    },
    {
      "type": "remove",
      "id": "a159d2aa0ae0b10e",
      "date": 1677930218073
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file and added a <canvas> element. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "date": 1677930225123
    },
    {
      "type": "edit",
      "id": "5bebc0fd43fec655",
      "item": {
        "type": "paragraph",
        "id": "5bebc0fd43fec655",
        "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\nWhen the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\nThe collectCodeFromContext function extracts the JavaScript code from the data object, which is received as a parameter from the message event, and then calls the render function with the extracted code.\n\nThe render function decodes the received JavaScript code using atob and then loads the code as a module using the import method. The emit and bind functions are then called with the document.body element as the argument, to execute the code.\n\n"
      },
      "date": 1677930364945
    },
    {
      "type": "add",
      "id": "d8937b4d7509114c",
      "item": {
        "type": "paragraph",
        "id": "d8937b4d7509114c",
        "text": "If an error occurs during the execution of the JavaScript code, the error message is displayed in the document.body element as a pre element. The canvas element with id attribute \"canvas\" is also included in the body section of the HTML document, but it is not used in the JavaScript code snippet provided.\n\n\n\n"
      },
      "after": "5bebc0fd43fec655",
      "date": 1677930367208
    },
    {
      "item": {
        "type": "factory",
        "id": "82adfaafdd9d5fcf"
      },
      "id": "82adfaafdd9d5fcf",
      "type": "add",
      "after": "d8937b4d7509114c",
      "date": 1677930396363
    },
    {
      "type": "edit",
      "id": "82adfaafdd9d5fcf",
      "item": {
        "type": "pagefold",
        "id": "82adfaafdd9d5fcf",
        "text": "~"
      },
      "date": 1677930400619
    },
    {
      "item": {
        "type": "factory",
        "id": "239588d7db1b8afb"
      },
      "id": "239588d7db1b8afb",
      "type": "add",
      "after": "82adfaafdd9d5fcf",
      "date": 1677930402032
    },
    {
      "type": "edit",
      "id": "239588d7db1b8afb",
      "item": {
        "type": "paragraph",
        "id": "239588d7db1b8afb",
        "text": "See \"atob\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn]"
      },
      "date": 1677930420383
    },
    {
      "type": "edit",
      "id": "239588d7db1b8afb",
      "item": {
        "type": "paragraph",
        "id": "239588d7db1b8afb",
        "text": "See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn]"
      },
      "date": 1677930431796
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "We copy a code snippet generated by chat.openai as \"an example of how to create a simple multiway system in JavaScript: \":"
      },
      "date": 1677930566211
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "We copy a code snippet generated by chat.openai as \"an example of how to create a simple multiway system in JavaScript\":"
      },
      "date": 1677930572211
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "We copy a code snippet generated by chat.openai as \"an example of how to create a simple [[Multiway System]] in JavaScript\":"
      },
      "date": 1677930588064
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "⇒ [[Multiway System]]"
      },
      "date": 1677930604718
    },
    {
      "type": "add",
      "id": "870549d28c4a1cf2",
      "item": {
        "type": "paragraph",
        "id": "870549d28c4a1cf2",
        "text": "We copy a code snippet generated by chat.openai as \"an example of how to create a simple [[Multiway System]] in JavaScript\":"
      },
      "after": "bb59aa3ff7c67ca3",
      "date": 1677930605157
    },
    {
      "type": "edit",
      "id": "fe7b36f0b577c480",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"1\",\n  \"011\": \"0\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"0\",\n  \"111\": \"1\",\n};"
      },
      "date": 1677930681615
    },
    {
      "item": {
        "type": "factory",
        "id": "fe22d97f5625a375"
      },
      "id": "fe22d97f5625a375",
      "type": "add",
      "after": "239588d7db1b8afb",
      "date": 1677930684706
    },
    {
      "id": "fe22d97f5625a375",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "870549d28c4a1cf2",
        "fe7b36f0b577c480",
        "fe22d97f5625a375",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "0cf39cf16580638e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655",
        "d8937b4d7509114c",
        "82adfaafdd9d5fcf",
        "239588d7db1b8afb"
      ],
      "date": 1677930689655
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "\n\n// Create an initial state\nlet state = \"00000000\";\n\n// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677930692288
    },
    {
      "item": {
        "type": "factory",
        "id": "80285af20c7e4684"
      },
      "id": "80285af20c7e4684",
      "type": "add",
      "after": "239588d7db1b8afb",
      "date": 1677930698956
    },
    {
      "id": "80285af20c7e4684",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "870549d28c4a1cf2",
        "fe7b36f0b577c480",
        "80285af20c7e4684",
        "fe22d97f5625a375",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "0cf39cf16580638e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655",
        "d8937b4d7509114c",
        "82adfaafdd9d5fcf",
        "239588d7db1b8afb"
      ],
      "date": 1677930702654
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "\n// Create an initial state\nlet state = \"00000000\";\n\n// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677930704028
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00000000\";"
      },
      "date": 1677930705138
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "\n// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677930710609
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677930714187
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00001000\";"
      },
      "date": 1677930719472
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00001100\";"
      },
      "date": 1677930735904
    },
    {
      "item": {
        "type": "factory",
        "id": "c8fa44240a00362c"
      },
      "id": "c8fa44240a00362c",
      "type": "add",
      "after": "239588d7db1b8afb",
      "date": 1677931290858
    },
    {
      "id": "c8fa44240a00362c",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "870549d28c4a1cf2",
        "fe7b36f0b577c480",
        "80285af20c7e4684",
        "c8fa44240a00362c",
        "fe22d97f5625a375",
        "9c919469ae87a520",
        "113e37cb78a4ee36",
        "0cf39cf16580638e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655",
        "d8937b4d7509114c",
        "82adfaafdd9d5fcf",
        "239588d7db1b8afb"
      ],
      "date": 1677931295358
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "\n\n// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677931302955
    },
    {
      "type": "edit",
      "id": "c8fa44240a00362c",
      "item": {
        "type": "code",
        "id": "c8fa44240a00362c",
        "text": "// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}"
      },
      "date": 1677931303895
    },
    {
      "type": "edit",
      "id": "fe22d97f5625a375",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "date": 1677931307227
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00000000\";"
      },
      "date": 1677931352813
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"10000000\";"
      },
      "date": 1677931359839
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00000001\";"
      },
      "date": 1677931367475
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"000010000\";"
      },
      "date": 1677931385231
    },
    {
      "id": "113e37cb78a4ee36",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "870549d28c4a1cf2",
        "fe7b36f0b577c480",
        "80285af20c7e4684",
        "c8fa44240a00362c",
        "fe22d97f5625a375",
        "113e37cb78a4ee36",
        "9c919469ae87a520",
        "0cf39cf16580638e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655",
        "d8937b4d7509114c",
        "82adfaafdd9d5fcf",
        "239588d7db1b8afb"
      ],
      "date": 1677931425651
    },
    {
      "type": "edit",
      "id": "870549d28c4a1cf2",
      "item": {
        "type": "paragraph",
        "id": "870549d28c4a1cf2",
        "text": "We copy a code snippet generated on [[2023-03-03]] by chat.openai as \"an example of how to create a simple [[Multiway System]] in JavaScript\":"
      },
      "date": 1677931565124
    },
    {
      "type": "edit",
      "id": "5bebc0fd43fec655",
      "item": {
        "type": "paragraph",
        "id": "5bebc0fd43fec655",
        "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\nWhen the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\nThe collectCodeFromContext function extracts the JavaScript code from the data object, which is received as a parameter from the message event, and then calls the render function with the extracted code.\n\n"
      },
      "date": 1677940676288
    },
    {
      "type": "add",
      "id": "4321a4822b9fb220",
      "item": {
        "type": "paragraph",
        "id": "4321a4822b9fb220",
        "text": "The render function decodes the received JavaScript code using atob and then loads the code as a module using the import method. The emit and bind functions are then called with the document.body element as the argument, to execute the code.\n\n"
      },
      "after": "5bebc0fd43fec655",
      "date": 1677940677898
    },
    {
      "type": "edit",
      "id": "5bebc0fd43fec655",
      "item": {
        "type": "paragraph",
        "id": "5bebc0fd43fec655",
        "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\nWhen the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\n"
      },
      "date": 1677940680783
    },
    {
      "type": "add",
      "id": "2d92c12e22bd75dd",
      "item": {
        "type": "paragraph",
        "id": "2d92c12e22bd75dd",
        "text": "The collectCodeFromContext function extracts the JavaScript code from the data object, which is received as a parameter from the message event, and then calls the render function with the extracted code.\n\n"
      },
      "after": "5bebc0fd43fec655",
      "date": 1677940682480
    },
    {
      "type": "edit",
      "id": "5bebc0fd43fec655",
      "item": {
        "type": "paragraph",
        "id": "5bebc0fd43fec655",
        "text": "This is an HTML document that contains a JavaScript code snippet which renders JavaScript code in the HTML document.\n\n"
      },
      "date": 1677940688805
    },
    {
      "type": "add",
      "id": "4af00efd809489a1",
      "item": {
        "type": "paragraph",
        "id": "4af00efd809489a1",
        "text": "When the HTML page loads, it listens for a \"message\" event using the window.addEventListener method, and calls the collectCodeFromContext function when the event is triggered. It sends a message to its parent using window.parent.postMessage method to request for the context.\n\n"
      },
      "after": "5bebc0fd43fec655",
      "date": 1677940690482
    },
    {
      "type": "add",
      "id": "5f27a412f543df29",
      "item": {
        "type": "paragraph",
        "id": "5f27a412f543df29",
        "text": "See [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]"
      },
      "after": "239588d7db1b8afb",
      "date": 1677940997775
    },
    {
      "type": "edit",
      "id": "5f27a412f543df29",
      "item": {
        "type": "paragraph",
        "id": "5f27a412f543df29",
        "text": "See \"btoa()\" [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]"
      },
      "date": 1677941009529
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file and added a <canvas> element to its body section. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "date": 1677941242928
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file to include a <canvas> element to its body section. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "date": 1677941260642
    },
    {
      "type": "edit",
      "id": "0cf39cf16580638e",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file to include a <canvas> element in the body section. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "date": 1677941274206
    },
    {
      "item": {
        "type": "factory",
        "id": "2514b77b3eefb7b4"
      },
      "id": "2514b77b3eefb7b4",
      "type": "add",
      "after": "5f27a412f543df29",
      "date": 1677941647645
    },
    {
      "type": "edit",
      "id": "2514b77b3eefb7b4",
      "item": {
        "type": "paragraph",
        "id": "2514b77b3eefb7b4",
        "text": "The paragraph where atob is mentioned seems to be wrong."
      },
      "date": 1677941652767
    },
    {
      "id": "2514b77b3eefb7b4",
      "type": "move",
      "order": [
        "bb59aa3ff7c67ca3",
        "870549d28c4a1cf2",
        "fe7b36f0b577c480",
        "80285af20c7e4684",
        "c8fa44240a00362c",
        "fe22d97f5625a375",
        "113e37cb78a4ee36",
        "9c919469ae87a520",
        "0cf39cf16580638e",
        "373da3fdfdda8c44",
        "5bebc0fd43fec655",
        "4af00efd809489a1",
        "2d92c12e22bd75dd",
        "4321a4822b9fb220",
        "d8937b4d7509114c",
        "82adfaafdd9d5fcf",
        "2514b77b3eefb7b4",
        "239588d7db1b8afb",
        "5f27a412f543df29"
      ],
      "date": 1677941662393
    },
    {
      "type": "edit",
      "id": "239588d7db1b8afb",
      "item": {
        "type": "paragraph",
        "id": "239588d7db1b8afb",
        "text": "See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn] and "
      },
      "date": 1677941667681
    },
    {
      "type": "remove",
      "id": "5f27a412f543df29",
      "date": 1677941670454
    },
    {
      "type": "edit",
      "id": "239588d7db1b8afb",
      "item": {
        "type": "paragraph",
        "id": "239588d7db1b8afb",
        "text": "See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn] and  \"btoa()\" [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]"
      },
      "date": 1677941671363
    },
    {
      "type": "remove",
      "id": "239588d7db1b8afb",
      "date": 1677941674535
    },
    {
      "type": "edit",
      "id": "2514b77b3eefb7b4",
      "item": {
        "type": "paragraph",
        "id": "2514b77b3eefb7b4",
        "text": "The paragraph where atob is mentioned seems to be wrong. See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn] and  \"btoa()\" [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]"
      },
      "date": 1677941675859
    },
    {
      "type": "edit",
      "id": "2514b77b3eefb7b4",
      "item": {
        "type": "paragraph",
        "id": "2514b77b3eefb7b4",
        "text": "The paragraph where atob is mentioned seems to be wrong. See \"atob()\" [https://developer.mozilla.org/en-US/docs/Web/API/atob mdn] and  \"btoa()\" [https://developer.mozilla.org/en-US/docs/Web/API/btoa mdn]. Decoding seems to be the more frequent case."
      },
      "date": 1678011336889
    },
    {
      "type": "edit",
      "id": "fe7b36f0b577c480",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"0\",\n  \"011\": \"1\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"1\",\n  \"111\": \"0\",\n};"
      },
      "date": 1678012529365
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00000000\";"
      },
      "date": 1678012545225
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"00010000\";"
      },
      "date": 1678012557865
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"8i8i i8i8\";"
      },
      "date": 1678012820290
    },
    {
      "type": "edit",
      "id": "80285af20c7e4684",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"01011010\";"
      },
      "date": 1678012911552
    },
    {
      "type": "edit",
      "id": "bb59aa3ff7c67ca3",
      "item": {
        "type": "paragraph",
        "id": "bb59aa3ff7c67ca3",
        "text": "⇒ [[Multiway System]] ⇒ [[Rule 90]]"
      },
      "date": 1678013354647
    },
    {
      "type": "remove",
      "id": "870549d28c4a1cf2",
      "date": 1678013361635
    },
    {
      "id": "fe7b36f0b577c480",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013365979
    },
    {
      "id": "80285af20c7e4684",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013368811
    },
    {
      "id": "c8fa44240a00362c",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013372198
    },
    {
      "id": "fe22d97f5625a375",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013376585
    },
    {
      "id": "113e37cb78a4ee36",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013381152
    },
    {
      "id": "9c919469ae87a520",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013384260
    },
    {
      "id": "0cf39cf16580638e",
      "type": "remove",
      "removedTo": {
        "page": "Rule 90"
      },
      "date": 1678013388836
    }
  ]
}