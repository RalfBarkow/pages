{
  "title": "First Time Particles",
  "story": [
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "We'll get creative soon but for now we follow step by step. [https://threejs-journey.xyz/lessons/17 lesson]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)"
    },
    {
      "type": "code",
      "id": "ab2ff6ccc68a472c",
      "text": "tick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
    },
    {
      "type": "paragraph",
      "id": "401f36facba8d4b8",
      "text": "More to learn about 'Color, map and alpha map'"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "First Time Particles",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "We'll get creative soon but for now we follow step by step. [https://threejs-journey.xyz/lessons/17 lesson]"
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.02, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1614215646600
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.02, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
      },
      "date": 1614215748821
    },
    {
      "type": "fork",
      "date": 1614218089476
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 5000000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.02, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
      },
      "date": 1614218146048
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 5000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.02, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
      },
      "date": 1614218194753
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.02, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
      },
      "date": 1614218204505
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\n\n"
      },
      "date": 1614220492769
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = particlesGeometry.attributes\n      .position.array[i3]\n    particlesGeometry.attributes.position\n      .array[i3 + 1] = Math.sin(elapsedTime + x)\n  }\n    particlesGeometry.attributes.position.needsUpdate = true\n\n    // ...\n}\n"
      },
      "date": 1614220732899
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = particlesGeometry.attributes\n      .position.array[i3]\n    particlesGeometry.attributes.position\n      .array[i3 + 1] = Math.sin(elapsedTime + x)\n  }\n  particlesGeometry.attributes.position\n    .needsUpdate = true\n}\n"
      },
      "date": 1614220790035
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position\n      .array[i3 + 1] = Math.sin(elapsedTime + x)\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614220858473
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now() + x)\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614220959596
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 + x)\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614220977210
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/100 + x)\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614220997141
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 + x*4)\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614221024643
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 + x*4)/2\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614221062224
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i = 0; i < count; i++) {\n    let i3 = i * 3\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 - x*4)/2\n  }\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614221114744
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i3 = 0; i < count*3; i+=3) {\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 - x*4)/2}\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614221334349
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geo.attributes.position.array[i3]\n    geo.attributes.position.array[i3 + 1] = \n      Math.sin(Date.now()/1000 - x*4)/2}\n  geo.attributes.position.needsUpdate = true\n}\n"
      },
      "date": 1614221384222
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3 + 1] = \n      Math.sin(Date.now()/1000 - x*4)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614221557946
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let sin = Math.sin\n\nlet geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now(0/1000)\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = sin(now+x*4)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614221728282
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let sin = Math.sin\n\nlet geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000)\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = sin(now+x*4)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614221787199
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let sin = Math.sin\n\nlet geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = sin(now+x*4)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614221808877
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let sin = Math.sin\n\nlet geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614221826114
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:'#ff88cc'})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614222019682
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)\n\ntick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1614222057232
    },
    {
      "item": {
        "type": "factory",
        "id": "401f36facba8d4b8"
      },
      "id": "401f36facba8d4b8",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1614222269787
    },
    {
      "type": "edit",
      "id": "401f36facba8d4b8",
      "item": {
        "type": "paragraph",
        "id": "401f36facba8d4b8",
        "text": "Learn more about 'let sin = Math.sin'"
      },
      "date": 1614222284179
    },
    {
      "type": "edit",
      "id": "401f36facba8d4b8",
      "item": {
        "type": "paragraph",
        "id": "401f36facba8d4b8",
        "text": "Learn more about section 'Color, map and alpha map'"
      },
      "date": 1614222320691
    },
    {
      "type": "edit",
      "id": "401f36facba8d4b8",
      "item": {
        "type": "paragraph",
        "id": "401f36facba8d4b8",
        "text": "More to learn about 'Color, map and alpha map'"
      },
      "date": 1614222347540
    },
    {
      "item": {
        "type": "factory",
        "id": "ab2ff6ccc68a472c"
      },
      "id": "ab2ff6ccc68a472c",
      "type": "add",
      "after": "401f36facba8d4b8",
      "date": 1616646469471
    },
    {
      "id": "ab2ff6ccc68a472c",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "ab2ff6ccc68a472c",
        "6cf52409eec3988c",
        "401f36facba8d4b8"
      ],
      "date": 1616646472620
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let geo = new THREE.BufferGeometry()\nlet count = 50000\nlet pos = new Float32Array(count*3)\nfor(let i=0; i<count*3; i++){\n  pos[i] = (Math.random()-0.5) * 2}\ngeo.setAttribute('position',\n  new THREE.BufferAttribute(pos, 3))\n\nlet mat = new THREE.PointsMaterial({\n  size:0.01, sizeAttenuation:true, color:0xff88cc})\n\nlet points = new THREE.Points(geo, mat)\nscene.add(points)"
      },
      "date": 1616646491546
    },
    {
      "type": "edit",
      "id": "ab2ff6ccc68a472c",
      "item": {
        "type": "code",
        "id": "ab2ff6ccc68a472c",
        "text": "tick = () => {\n  let geop = geo.attributes.position\n  let now = Date.now()/1000\n  for(let i3 = 0; i3 < count*3; i3+=3) {\n    let x = geop.array[i3]\n    geop.array[i3+1] = Math.sin(now+x*6)/2}\n  geop.needsUpdate = true\n}\n"
      },
      "date": 1616646500975
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233523293
    }
  ]
}