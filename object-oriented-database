{
  "title": "Object Oriented Database",
  "story": [
    {
      "type": "html",
      "text": "Object-Oriented Database Management Systems (OODBMS's) are databases that store their contents as objects.  They map very well to the object models of the programs that use them.  ",
      "id": "ec98036fbb3aedeb2d42fbc56ba99d30"
    },
    {
      "type": "html",
      "text": "\nDrawbacks include indexing (sometimes you have to write your own indexing code; often retrieval performance is bad) and interworking with non-OO company-wide systems.  On the upside, the object persistence is easy to program, and complex data objects are surprisingly natural.",
      "id": "11142d6d2652b01301e55b155af3b661"
    },
    {
      "type": "html",
      "text": "\nPrice is also high at the time of this writing ([[Object Store]](?) costs around three times what the already-exorbitantly-priced Oracle 8i does). Alternatively, see [[Open Source Object Oriented Database]].",
      "id": "c64fddf02ff3a1fa42f6d3f39682c0bc"
    },
    {
      "type": "html",
      "text": "\nIn the general sense, an OODB is a [[Navigational Database]]... with methods.",
      "id": "df82349788847dac1b219dbe4f15abd4"
    },
    {
      "type": "html",
      "text": " <i>Many of them called OODBMS don't support methods.</i>",
      "id": "4afa410b81b44987246578be23beca7a"
    },
    {
      "type": "html",
      "text": "\nAlternatives to an [[Object Oriented Database]] include a [[Prevalence Layer]], a [[Relational Database]] (by using [[Object Relational Mapping]]), or a [[Hierarchical Database]] (e.g. a filesystem).",
      "id": "e29d0f2874b7676731d92143a866e6d7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "<i>Why haven't [[Object Oriented Database]] 's become popular?</i>",
      "id": "f2ff8364ff3126417995a62defc45e3c"
    },
    {
      "type": "html",
      "text": "\nI think the reason is that [[Object Oriented Database]] is an oxymoron.  A database, by definition, is a base of <b>data</b> - it allows you to query it, index it, and revert it (transactions).  All of these properties depend on dead, static data (try indexing a true method) - data that is the same no matter how many times you look at it.  Objects, on the other hand, do the exact opposite - they hide the data under behaviors, which can vary depending on hidden things (information hiding), hence precluding queries, indexes, and transactions.  In order to hook up your objects to a database, you need to do 80% of the work of an [[Object Relational Mapper]] , anyway.",
      "id": "288e1ae8e7832180ea983804c07f9743"
    },
    {
      "type": "html",
      "text": "\nThe remaining 20% benefit of an [[Object Oriented Database]] (as well as the syntactical improvements over SQL) isn't worth deviating from the relational/SQL standard.",
      "id": "2dc157cc4a96b32365a1380affe496b1"
    },
    {
      "type": "html",
      "text": "\n[[Object Oriented Database]] is not an oxymoron, and what database actually is is defined by what it can do and what it contains, not by some arbitrary definition that focuses on popular aspects only. If database contains \"dead static data\" only, what about the stored procedures? Triggers? Database contains data, but it does not have to contain only data. A simple, common sense to think what [[Object Oriented Database]] is would be e.g. take Versant's approach: db stores objects and indexes them according by their public attributes. And you do not have to violate information hiding at all to get them: you could index on public attributes only, or on values returned by getters (like typical java getters). I don't see how finding accessing a public \"x\" attribute of live in-memory \"new Foo()\" object is not violation of information hiding, while searching for the Foo class objects in database and bringing them into memory from \"hibernation\" in [[Object Oriented Database]] and then accessing their public \"x\" attributes would supposedly be the case of violating information hiding. Whether you hold objects in memory or on disk seems orthogonal to me to the issue of information hiding in objects. That's \"just\" a performance consideration, not enscapsulation or representation issue.",
      "id": "e3acda084ba2f37726210f7d56201fde"
    },
    {
      "type": "html",
      "text": "\nOn popularity issue: there's a number of concerns here. 1. there is no object query language that would be both *standardized* and reasonably small to be *implementable* (practical, in short). 2. reason 1 results in lack of people with [[Object Oriented Database]] querying skills => companies are unable to find people that would realize the benefits of [[Object Oriented Database]] and so they don't use OODBs. 3. premises 1 and 2 result in lack of good open source [[Object Oriented Database]] => there is no place to learn [[Object Oriented Database]] query language that would be widely applicable (that is, beyond one's personal interest) => premise 2 is reinforced.",
      "id": "f12d108bf5bef79d86cbd7fadd239956"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "\nIt's also worth noting that OO DBAs are a lot harder to find than relational DBAs.",
      "id": "585671e824a5ef3c5fdf65013f95bf23"
    },
    {
      "type": "html",
      "text": "\nAnd [[Ruby Language]] programmers are a lot harder to find than [[Cobol Language]] programmers.  It's a [[Self Fulfilling Prophecy]] - a function of market penetration, viz. [[Crossing The Chasm]]. (See also [[Crossing Chasms]], a large pattern language that describes how to connect an object system to a [[Relational Database]]. )",
      "id": "563cfcd66bfe7cce101d55c562e3e5cf"
    },
    {
      "type": "html",
      "text": "\nRuby is open source, it is widely available and it has [[Killer App]] ([[Ruby On Rails]]). Therefore, soon [[Ruby Language]] programmers will soon be more abundant than [[Cobol Language]] programmers. OODBs suffer for lack of equivalents of MySQL and PostgreSQL: it's chicken and egg dilemma, you don't use [[Object Oriented Database]] bc you haven't learned it and risk a lot if you learn vendor-specific OODB (skills unportable between employers), and since few people learn OODBs, they don't get used.",
      "id": "b1fcca083c8263b42ee4eea0425de85b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "\nIs there an up to date list of [[Object Oriented Database]] vendors somewhere? (yes February 2014 [http://www.service-architecture.com/products/object-oriented_databases.html www.service-architecture.com] )  Maybe on [[Wiki Wiki Web]]?  A [[Google Search]] came up with the following (alphabetically):",
      "id": "22b520c378e1ad067f2bd95435667f7f"
    },
    {
      "type": "html",
      "text": " A<b></b>llegroStore",
      "id": "2f280875a528d3a8104297023b9a80d7"
    },
    {
      "type": "html",
      "text": " Cache ([http://www.intersystems.com www.intersystems.com])",
      "id": "dda69e5898c159105e0ec97f4647e980"
    },
    {
      "type": "html",
      "text": " CommonSQL / UncommonSQL",
      "id": "f0099fc8f4953e9a2c3750368e28b2b1"
    },
    {
      "type": "html",
      "text": " db4o ([[Dee Bee Four Oh]]) [http://www.db4o.com www.db4o.com] (open source)",
      "id": "6a46447d0d1933bb49049ca3b9087903"
    },
    {
      "type": "html",
      "text": " [[Gem Stone]]",
      "id": "dbeb96d36d3d46820598f33e7657c21e"
    },
    {
      "type": "html",
      "text": " GOODS ([http://www.garret.ru/~knizhnik/goods.html www.garret.ru])",
      "id": "135f26bca40435530c7c3444ffa8a8d1"
    },
    {
      "type": "html",
      "text": " Objectivity/DB ([http://www.objectivity.com/object-database.shtml www.objectivity.com])",
      "id": "862dbb710ef61d10893518380c9f349f"
    },
    {
      "type": "html",
      "text": " [[Object Design Inc]]",
      "id": "49d4b03ae122255a66fb637dac62207d"
    },
    {
      "type": "html",
      "text": " [[Ozone Db]] ([http://ozone-db.org ozone-db.org])",
      "id": "0721239c647e66e1d693490cdfbdb498"
    },
    {
      "type": "html",
      "text": " PLOB! (acronym for Persistent Lisp OBjects; see [http://plob.sourceforge.net/ plob.sourceforge.net] )",
      "id": "9629d26397c0d74ade5b97805f48899d"
    },
    {
      "type": "html",
      "text": " POET",
      "id": "d1b9373d4c9197c3850de1ff16e576ce"
    },
    {
      "type": "html",
      "text": " Versant",
      "id": "f8d45856dd464db5518869e0d4771eaa"
    },
    {
      "type": "html",
      "text": " Xanalys's CLOS SQL binding",
      "id": "aef4f53f3192af0dd244a21fef071c89"
    },
    {
      "type": "html",
      "text": " XL2 ([http://www.xl2.net www.xl2.net])",
      "id": "f6cae8450454640b9ff9c28f2a328b6e"
    },
    {
      "type": "html",
      "text": "(feel free to properly wikify these names if pages already exist for them, remove ones that are not relevant, and add ones that are missing).",
      "id": "f763d1f8ffcdfd3c4e2b5618cb19e8cd"
    },
    {
      "type": "html",
      "text": "\nQ. What are the differentiators for each of the vendors and their products?",
      "id": "5a3fa0917153a0aedf569eb0d4cb523a"
    },
    {
      "type": "html",
      "text": "\nA. The differentiators are probably the targeted use cases, scalability, product maturity, architectural philosophy, API, and of course, cost.",
      "id": "54b7247c14588c0656b430e54e46a945"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "\nIs there a clear definition of what an OODBMS is? Or at least a list of guiding principles? [[Bertrand Meyer]] seems to suggest that OO is against the concept of DBMS's to begin with. There is talk that the concept of a database violates encapsulation. In this view OO is about behavior, not data, and you access data through behavior wrappers(methods). \"Naked attributes\" violates some definitions of encapsulation.",
      "id": "d217e9a2747c9963663c585465d8ebb4"
    },
    {
      "type": "html",
      "text": "<i>See [http://www.odmg.org www.odmg.org]</i>",
      "id": "61e1fd103d9397138f3fba239bc1adbe"
    },
    {
      "type": "html",
      "text": "\nIt seems one has to buy a book in order to make a bulleted list of requirements. That smells.",
      "id": "6a8cf11ffd9a5016c96b7a391c44f720"
    },
    {
      "type": "html",
      "text": " What's smellier is that each book would probably result in a different list.",
      "id": "e54bf0fe8b0dee152ea18838e37edc8c"
    },
    {
      "type": "html",
      "text": "<i>See also \"The Object-Oriented Database System Manifesto\" (at [http://www-2.cs.cmu.edu/People/clamen/OODBMS/Manifesto/htManifesto/Manifesto.html www-2.cs.cmu.edu]).</i>",
      "id": "1a51c90eec530bae7015f9d1ff183f2d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "\nThere is still no agreed-upon definition or clear characterization of an OODBMS. It's difficult to judge the merits of one without a stable definition or feature set.",
      "id": "ab9caaa5b5c81bafd7650e3dd8a5752e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "<b>Verb Divas</b>",
      "id": "e4903a5c68e75c96d858f5ab4c403099"
    },
    {
      "type": "html",
      "text": "\nOne of the problems with the idea of OODBMS is that the activities on objects and collections of objects is not standardized. In RDBMS and most prior databases you generally have a standard set of [[Database Verbs]] that all records and all tables respond to in the same fashion. It's a form of [[Interface Factoring]]. In OOP philosophy, each and every object is generally considered its own <i>independent</i> state machine with its own behavior. Any sharing of interface or behavior commonality is purely voluntary and thus inconsistent. This is against the idea that [[Interface Factoring]] is important and useful; it's essentially anti-database. Having a standard set of collection-oriented operations does not preclude additional custom behavior, I would note. Custom behavior is fine, but one should be discouraged from reinventing the wheel if there already is a \"close enough\" standard operation. -t",
      "id": "8ef3773bf64ada6a08e5fb23e1c5dd7a"
    },
    {
      "type": "html",
      "text": "<i>Wow.  It's rare I agree with Top, but I agree with Top.  Quick, somebody photograph this moment.</i>",
      "id": "81b154f56f3099785a54270c63612c30"
    },
    {
      "type": "html",
      "text": "\nFor court evidence :-)",
      "id": "1c4ea6e19fb0ef8e2e77ff23156f048e"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "See also [[Persistence Engine]], [[Prevalence Layer]], [[Modern Dinosaur]], [[Object Relational Psychological Mismatch]].",
      "id": "62c49936141364d85f62260f05cb5b76"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "2bb2c8aab4aff90b41f6e33defa355f7"
    },
    {
      "type": "html",
      "text": "[[[Category Database]]]",
      "id": "c93e1688b2f4a46b1b540be18214812e"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ObjectOrientedDatabase c2.com]",
      "id": "af383fb2c2b54d55b47264d6697def0c"
    }
  ],
  "journal": [
    {
      "date": 1392801034000,
      "id": "f975e9450bc9143c5f72773e442248c6",
      "type": "create",
      "item": {
        "title": "Object Oriented Database",
        "story": [
          {
            "type": "html",
            "text": "Object-Oriented Database Management Systems (OODBMS's) are databases that store their contents as objects.  They map very well to the object models of the programs that use them.  ",
            "id": "ec98036fbb3aedeb2d42fbc56ba99d30"
          },
          {
            "type": "html",
            "text": "\nDrawbacks include indexing (sometimes you have to write your own indexing code; often retrieval performance is bad) and interworking with non-OO company-wide systems.  On the upside, the object persistence is easy to program, and complex data objects are surprisingly natural.",
            "id": "11142d6d2652b01301e55b155af3b661"
          },
          {
            "type": "html",
            "text": "\nPrice is also high at the time of this writing ([[Object Store]](?) costs around three times what the already-exorbitantly-priced Oracle 8i does). Alternatively, see [[Open Source Object Oriented Database]].",
            "id": "c64fddf02ff3a1fa42f6d3f39682c0bc"
          },
          {
            "type": "html",
            "text": "\nIn the general sense, an OODB is a [[Navigational Database]]... with methods.",
            "id": "df82349788847dac1b219dbe4f15abd4"
          },
          {
            "type": "html",
            "text": " <i>Many of them called OODBMS don't support methods.</i>",
            "id": "4afa410b81b44987246578be23beca7a"
          },
          {
            "type": "html",
            "text": "\nAlternatives to an [[Object Oriented Database]] include a [[Prevalence Layer]], a [[Relational Database]] (by using [[Object Relational Mapping]]), or a [[Hierarchical Database]] (e.g. a filesystem).",
            "id": "e29d0f2874b7676731d92143a866e6d7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "<i>Why haven't [[Object Oriented Database]] 's become popular?</i>",
            "id": "f2ff8364ff3126417995a62defc45e3c"
          },
          {
            "type": "html",
            "text": "\nI think the reason is that [[Object Oriented Database]] is an oxymoron.  A database, by definition, is a base of <b>data</b> - it allows you to query it, index it, and revert it (transactions).  All of these properties depend on dead, static data (try indexing a true method) - data that is the same no matter how many times you look at it.  Objects, on the other hand, do the exact opposite - they hide the data under behaviors, which can vary depending on hidden things (information hiding), hence precluding queries, indexes, and transactions.  In order to hook up your objects to a database, you need to do 80% of the work of an [[Object Relational Mapper]] , anyway.",
            "id": "288e1ae8e7832180ea983804c07f9743"
          },
          {
            "type": "html",
            "text": "\nThe remaining 20% benefit of an [[Object Oriented Database]] (as well as the syntactical improvements over SQL) isn't worth deviating from the relational/SQL standard.",
            "id": "2dc157cc4a96b32365a1380affe496b1"
          },
          {
            "type": "html",
            "text": "\n[[Object Oriented Database]] is not an oxymoron, and what database actually is is defined by what it can do and what it contains, not by some arbitrary definition that focuses on popular aspects only. If database contains \"dead static data\" only, what about the stored procedures? Triggers? Database contains data, but it does not have to contain only data. A simple, common sense to think what [[Object Oriented Database]] is would be e.g. take Versant's approach: db stores objects and indexes them according by their public attributes. And you do not have to violate information hiding at all to get them: you could index on public attributes only, or on values returned by getters (like typical java getters). I don't see how finding accessing a public \"x\" attribute of live in-memory \"new Foo()\" object is not violation of information hiding, while searching for the Foo class objects in database and bringing them into memory from \"hibernation\" in [[Object Oriented Database]] and then accessing their public \"x\" attributes would supposedly be the case of violating information hiding. Whether you hold objects in memory or on disk seems orthogonal to me to the issue of information hiding in objects. That's \"just\" a performance consideration, not enscapsulation or representation issue.",
            "id": "e3acda084ba2f37726210f7d56201fde"
          },
          {
            "type": "html",
            "text": "\nOn popularity issue: there's a number of concerns here. 1. there is no object query language that would be both *standardized* and reasonably small to be *implementable* (practical, in short). 2. reason 1 results in lack of people with [[Object Oriented Database]] querying skills => companies are unable to find people that would realize the benefits of [[Object Oriented Database]] and so they don't use OODBs. 3. premises 1 and 2 result in lack of good open source [[Object Oriented Database]] => there is no place to learn [[Object Oriented Database]] query language that would be widely applicable (that is, beyond one's personal interest) => premise 2 is reinforced.",
            "id": "f12d108bf5bef79d86cbd7fadd239956"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "\nIt's also worth noting that OO DBAs are a lot harder to find than relational DBAs.",
            "id": "585671e824a5ef3c5fdf65013f95bf23"
          },
          {
            "type": "html",
            "text": "\nAnd [[Ruby Language]] programmers are a lot harder to find than [[Cobol Language]] programmers.  It's a [[Self Fulfilling Prophecy]] - a function of market penetration, viz. [[Crossing The Chasm]]. (See also [[Crossing Chasms]], a large pattern language that describes how to connect an object system to a [[Relational Database]]. )",
            "id": "563cfcd66bfe7cce101d55c562e3e5cf"
          },
          {
            "type": "html",
            "text": "\nRuby is open source, it is widely available and it has [[Killer App]] ([[Ruby On Rails]]). Therefore, soon [[Ruby Language]] programmers will soon be more abundant than [[Cobol Language]] programmers. OODBs suffer for lack of equivalents of MySQL and PostgreSQL: it's chicken and egg dilemma, you don't use [[Object Oriented Database]] bc you haven't learned it and risk a lot if you learn vendor-specific OODB (skills unportable between employers), and since few people learn OODBs, they don't get used.",
            "id": "b1fcca083c8263b42ee4eea0425de85b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "\nIs there an up to date list of [[Object Oriented Database]] vendors somewhere? (yes February 2014 [http://www.service-architecture.com/products/object-oriented_databases.html www.service-architecture.com] )  Maybe on [[Wiki Wiki Web]]?  A [[Google Search]] came up with the following (alphabetically):",
            "id": "22b520c378e1ad067f2bd95435667f7f"
          },
          {
            "type": "html",
            "text": " A<b></b>llegroStore",
            "id": "2f280875a528d3a8104297023b9a80d7"
          },
          {
            "type": "html",
            "text": " Cache ([http://www.intersystems.com www.intersystems.com])",
            "id": "dda69e5898c159105e0ec97f4647e980"
          },
          {
            "type": "html",
            "text": " CommonSQL / UncommonSQL",
            "id": "f0099fc8f4953e9a2c3750368e28b2b1"
          },
          {
            "type": "html",
            "text": " db4o ([[Dee Bee Four Oh]]) [http://www.db4o.com www.db4o.com] (open source)",
            "id": "6a46447d0d1933bb49049ca3b9087903"
          },
          {
            "type": "html",
            "text": " [[Gem Stone]]",
            "id": "dbeb96d36d3d46820598f33e7657c21e"
          },
          {
            "type": "html",
            "text": " GOODS ([http://www.garret.ru/~knizhnik/goods.html www.garret.ru])",
            "id": "135f26bca40435530c7c3444ffa8a8d1"
          },
          {
            "type": "html",
            "text": " Objectivity/DB ([http://www.objectivity.com/object-database.shtml www.objectivity.com])",
            "id": "862dbb710ef61d10893518380c9f349f"
          },
          {
            "type": "html",
            "text": " [[Object Design Inc]]",
            "id": "49d4b03ae122255a66fb637dac62207d"
          },
          {
            "type": "html",
            "text": " [[Ozone Db]] ([http://ozone-db.org ozone-db.org])",
            "id": "0721239c647e66e1d693490cdfbdb498"
          },
          {
            "type": "html",
            "text": " PLOB! (acronym for Persistent Lisp OBjects; see [http://plob.sourceforge.net/ plob.sourceforge.net] )",
            "id": "9629d26397c0d74ade5b97805f48899d"
          },
          {
            "type": "html",
            "text": " POET",
            "id": "d1b9373d4c9197c3850de1ff16e576ce"
          },
          {
            "type": "html",
            "text": " Versant",
            "id": "f8d45856dd464db5518869e0d4771eaa"
          },
          {
            "type": "html",
            "text": " Xanalys's CLOS SQL binding",
            "id": "aef4f53f3192af0dd244a21fef071c89"
          },
          {
            "type": "html",
            "text": " XL2 ([http://www.xl2.net www.xl2.net])",
            "id": "f6cae8450454640b9ff9c28f2a328b6e"
          },
          {
            "type": "html",
            "text": "(feel free to properly wikify these names if pages already exist for them, remove ones that are not relevant, and add ones that are missing).",
            "id": "f763d1f8ffcdfd3c4e2b5618cb19e8cd"
          },
          {
            "type": "html",
            "text": "\nQ. What are the differentiators for each of the vendors and their products?",
            "id": "5a3fa0917153a0aedf569eb0d4cb523a"
          },
          {
            "type": "html",
            "text": "\nA. The differentiators are probably the targeted use cases, scalability, product maturity, architectural philosophy, API, and of course, cost.",
            "id": "54b7247c14588c0656b430e54e46a945"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "\nIs there a clear definition of what an OODBMS is? Or at least a list of guiding principles? [[Bertrand Meyer]] seems to suggest that OO is against the concept of DBMS's to begin with. There is talk that the concept of a database violates encapsulation. In this view OO is about behavior, not data, and you access data through behavior wrappers(methods). \"Naked attributes\" violates some definitions of encapsulation.",
            "id": "d217e9a2747c9963663c585465d8ebb4"
          },
          {
            "type": "html",
            "text": "<i>See [http://www.odmg.org www.odmg.org]</i>",
            "id": "61e1fd103d9397138f3fba239bc1adbe"
          },
          {
            "type": "html",
            "text": "\nIt seems one has to buy a book in order to make a bulleted list of requirements. That smells.",
            "id": "6a8cf11ffd9a5016c96b7a391c44f720"
          },
          {
            "type": "html",
            "text": " What's smellier is that each book would probably result in a different list.",
            "id": "e54bf0fe8b0dee152ea18838e37edc8c"
          },
          {
            "type": "html",
            "text": "<i>See also \"The Object-Oriented Database System Manifesto\" (at [http://www-2.cs.cmu.edu/People/clamen/OODBMS/Manifesto/htManifesto/Manifesto.html www-2.cs.cmu.edu]).</i>",
            "id": "1a51c90eec530bae7015f9d1ff183f2d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "\nThere is still no agreed-upon definition or clear characterization of an OODBMS. It's difficult to judge the merits of one without a stable definition or feature set.",
            "id": "ab9caaa5b5c81bafd7650e3dd8a5752e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "<b>Verb Divas</b>",
            "id": "e4903a5c68e75c96d858f5ab4c403099"
          },
          {
            "type": "html",
            "text": "\nOne of the problems with the idea of OODBMS is that the activities on objects and collections of objects is not standardized. In RDBMS and most prior databases you generally have a standard set of [[Database Verbs]] that all records and all tables respond to in the same fashion. It's a form of [[Interface Factoring]]. In OOP philosophy, each and every object is generally considered its own <i>independent</i> state machine with its own behavior. Any sharing of interface or behavior commonality is purely voluntary and thus inconsistent. This is against the idea that [[Interface Factoring]] is important and useful; it's essentially anti-database. Having a standard set of collection-oriented operations does not preclude additional custom behavior, I would note. Custom behavior is fine, but one should be discouraged from reinventing the wheel if there already is a \"close enough\" standard operation. -t",
            "id": "8ef3773bf64ada6a08e5fb23e1c5dd7a"
          },
          {
            "type": "html",
            "text": "<i>Wow.  It's rare I agree with Top, but I agree with Top.  Quick, somebody photograph this moment.</i>",
            "id": "81b154f56f3099785a54270c63612c30"
          },
          {
            "type": "html",
            "text": "\nFor court evidence :-)",
            "id": "1c4ea6e19fb0ef8e2e77ff23156f048e"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "See also [[Persistence Engine]], [[Prevalence Layer]], [[Modern Dinosaur]], [[Object Relational Psychological Mismatch]].",
            "id": "62c49936141364d85f62260f05cb5b76"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "2bb2c8aab4aff90b41f6e33defa355f7"
          },
          {
            "type": "html",
            "text": "[[[Category Database]]]",
            "id": "c93e1688b2f4a46b1b540be18214812e"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ObjectOrientedDatabase c2.com]",
            "id": "af383fb2c2b54d55b47264d6697def0c"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1660315037408
    }
  ]
}