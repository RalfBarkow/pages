{
  "title": "Rational Unified Process",
  "story": [
    {
      "type": "html",
      "text": "Things have moved on a little since the last posts - IBM donated part of RUP to Eclipse (the EPF project at [http://www.eclipse.org/epf www.eclipse.org]) as well as the Eclipse-based tooling to create process descriptions that use a HTML-based format to document them.  EPF includes efforts to incorporate XP/SCRUM and other methods/approaches.  This has not fundamentally changed RUP as such - just easier for you to take a look at and use if appropriate -- Anthony Kesterton <i>See [[Eclipse Process Framework]].</i>",
      "id": "196a1cb665495181b4718adf5a68c307"
    },
    {
      "type": "html",
      "text": "<b>[[Rational Unified Process]] (RUP) has been acquired by [[Ibm Corporation]] and an introduction is found at [http://www-306.ibm.com/software/awdtools/rup/ www-306.ibm.com]</b>",
      "id": "720805fb5fd184970613ce6463ba48c4"
    },
    {
      "type": "html",
      "text": "\nPreviously, Rational Unified Process was a version (proprietary to the [[Rational Company]]) of the [[Unified Software Development Process]], a [[Software Engineering]] Process. ",
      "id": "deaa4744ac57ec6cad6b44d51ca181a0"
    },
    {
      "type": "html",
      "text": "\nRUP provides a disciplined approach to assigning tasks and responsibilities within a development organization. Its goal is to ensure the production of high-quality software that meets the needs of its end-users, within a predictable schedule and budget.",
      "id": "cad41997e2954d7fafd768a974f1d5c3"
    },
    {
      "type": "html",
      "text": "\nSee [http://www.itworld.com/AppDev/530/050803mi/ www.itworld.com] For a view of RUP (and all its supporting modules) that is up to date as at mid 2005.",
      "id": "d6a35517a23463c4cfd847d6fecf9558"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "The methodology was formerly known as Objectory (MFKAO). See [http://www.rational.com/products/rup/whitepapers.jsp www.rational.com]",
      "id": "0043124bb76e4aac42753a8a3a39c288"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "Which explains its weightiness. -- [[Alistair Cockburn]]",
      "id": "ba078c135eed205d2507baa0de351b02"
    },
    {
      "type": "html",
      "text": "\nThere's an introductory book on it by Phillipe Kruchten [ISBN: 0201604590]. It's a nice overview book, but RUP is certainly aimed at heaviness. -- [[Martin Fowler]]",
      "id": "329b7aeb627ca920c14b2ad46f2e7aff"
    },
    {
      "type": "html",
      "text": "<b>Q:</b> If I'm going to read one book on RUP, should I read this one? I'd assumed I'd go to the source (Jacobson), but perhaps this is unwise. I ask because it is rumored that my company will be adopting RUP.",
      "id": "9d327bd8fd350b318e261ec460a3d7ef"
    },
    {
      "type": "html",
      "text": "<b>A:</b> Yes, this is a good book to start with. It is an overview similar in scope to [[Extreme Programming Explained]]. If you're looking for <i>details</i> however, go straight to the source (Jacobson).",
      "id": "364e6fb5eeca3db300edd94ed9db62b4"
    },
    {
      "type": "html",
      "text": "\nAny opinions on the usefulness of [[Rational Unified Process]]? It seems to be rather much documentation to produce in every iteration. Is it useful even for large projects or will creativeness suffer? -- [[Fredrik Rubensson]]",
      "id": "a728f2e5581c56c7895bf785174f4892"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "I have the book, and flipped through it (i.e., did not read carefully and critically.  I actually thought they did a good job at writing.  As the XP people have noticed by now, and Ron commented on [[Crystal Clear Methodology]], any methodology looks awfully large when you try to write it down in any amount of detail.  So what I found were fairly reasonable discussions of requirements changing, use of prototypes, etc. ... I say that, but then I have been accused of not reading books with enough of a critical eye...",
      "id": "09ee6cb68625702599ab8573da0e8949"
    },
    {
      "type": "html",
      "text": "\nRegarding documentation, every methodology I have ever seen - with the specific exceptions of XP and [[Crystal Clear Methodology]], advises more documentation to be done than any successful project team I have interviewed has been able to do.  I did meet a person whose project was cancelled because they were actually made to produce all that documentation.  Mostly I meet teams who are told to produce all that documentation, and simply produce a percentage, and the project managers are content, because they get the software they need in a tolerable time frame, with at least a little documentation. -- [[Alistair Cockburn]]",
      "id": "fa917576bb7af44506293d81b8636d9e"
    },
    {
      "type": "html",
      "text": "\nPerhaps the project manager should make a tiny subset of the documentation mandatory? I feel documents like [[Requirements Specification]] including [[Use Cases]], [[Architectural Overview]], [[Code Comments]], [[Test Plan]] and [[Project Evaluation]] should be mandatory. (Somewhat depending on the development context. Speculative software are less likely to need a detailed specification than internal software written to do a specific task. -- [[Fredrik Rubensson]]",
      "id": "a63437fb5102cfa9e9c9df289bb74851"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "In the company I work with, we've been using RUP for some time with great success. They key thing about RUP is that you don't take it wholesale and produce every artifact that it defines. You start with a Development Case that defines what you think will be useful to your project. To me this fits well with the philosophy of XP - keep it simple, only do what needs to be done, etc.",
      "id": "c7d0857dd2ce0adb7c6c758473d008b4"
    },
    {
      "type": "html",
      "text": "\nThe problem I see with XP is that it is too developer centric, it sees the primary focus of a project as the developers. I believe this is a dangerous attitude to have, since the primary focus of a system must be the customer/user. ",
      "id": "333051fbf44eea214d01a510282f3671"
    },
    {
      "type": "html",
      "text": "\nMuch of what is in XP is in RUP, I see it as a light weight extension of RUP focused on the construction phase - though the user stories focus on requirements. -- Alastair Thomson",
      "id": "92dcc58f6dfbfa9b47b37bd5aa3c6f81"
    },
    {
      "type": "html",
      "text": "\nWhy do you say XP focuses on developers? It strikes me as one of the most customer-focused methodologies I know of. It's certainly the only one I'm aware of that 'mandates' an [[Onsite Customer]]. -- [[John Brewer]]",
      "id": "482fd23054cb90357fe33569790411b6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "<i>They key thing about RUP is that you don't take it wholesale and produce every artifact that it defines.</i> ",
      "id": "9ad00280c221cb3482ac759a62c5022a"
    },
    {
      "type": "html",
      "text": "\nIt now seems fairly clear that RUP can be configured into something like XP if you need to be seen to do RUP. -- [[Keith Braithwaite]]",
      "id": "61e1e22cc7562ff8785d8c05825e1277"
    },
    {
      "type": "html",
      "text": "\n[[Object Mentor]] have developed an XP tailoring of the RUP product - which I discovered during a recent Rational RUP training course - so it seems they can happily coexist after all :-)\n[[Caroline Foster]]  ",
      "id": "4834aec0da4383d2578600639d84086a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "Reading the Rational RUP Whitepaper, I got very frustrated. It seems like in RUP, the Construction Phase (aka Coding) is supposed to be boring and mechanical. This sounds like a very thoughtless evaluation. From the whitepaper:",
      "id": "e09ae5833d8808b0642f8542d46f9be1"
    },
    {
      "type": "html",
      "text": "<i>It is easy to argue that the elaboration phase is the most critical of the four phases. At the end of this phase, the hard \"engineering\" is considered complete and the project undergoes it's most important day of reckoning....</i>",
      "id": "6cd95b06dab167381aae7b2eab034f84"
    },
    {
      "type": "html",
      "text": "Stupid me, I thought the most critical part of a project was whether it delivered its required functionality or not. Here is more:",
      "id": "bf21c0346d1bb2803bc1f3c80c69c7e0"
    },
    {
      "type": "html",
      "text": "<i>The construction phase is, in one sense, a manufacturing process where emphasis is placed on managing resources and controlling operation to optimize costs, schedules and quality.</i>",
      "id": "ffbf63ab4948022c50fef0a0fed8f551"
    },
    {
      "type": "html",
      "text": "I thought [[Taylorist Management]] principles were proven to not work well in software construction (or most other activities, for that matter). It seems like the RUP view of the construction phase is that it should be boring, mechanical and mainly handled by drones. Aren't they dragging the [[Construction Metaphor]] too far?",
      "id": "eb2aa95b1d7a08e862190113175afc4c"
    },
    {
      "type": "html",
      "text": "\nIt does however advocate iterative development within each phase, so that by the end of the \"elaboration\" phase (which is 2/4, after \"inception\") there should have been a few cycles of build-test-release already. It goes on to say you should have established a baseline architecture and a production-quality prototype by the end of Elaboration. If you are practicing [[Test First Design]] (which they also encourage) you will indeed have a large chunk of the functionality in place already. So the Construction phase should be dealing mainly with remaining functionality, last minute changes, bugs and deployment issues. They see it as a <i>transition from the development of intellectual property during inception and elaboration, to the development of deployable products during construction and transition</i>. Which doesn't sound so bad. -- [[Caroline Foster]]",
      "id": "6735cee3175e07a02ade821bdf000b4a"
    },
    {
      "type": "html",
      "text": "\nOn another note, has anyone studied the possible connection between techniques that are perceived as boring and techniques that resist adoption? Sorry about the steam; a bit of built up tension there. -- [[Johannes Brodwall]]",
      "id": "2bfb19c6f5063479e26f84312c12da43"
    },
    {
      "type": "html",
      "text": "\nIt does seem as if techniques that are boring for developers are much easier to get accepted by management. Or is that not what you were asking about...",
      "id": "c5239eee86e36fb2f21cd46592bdd24f"
    },
    {
      "type": "html",
      "text": "\nRUP does seem to carry forward the idea of \"seamlessness\" that was built into OMT and such: The idea that requirements can merge into design into code in a very uniform way. More recent [[Document Transformation Theory Of Software Engineeringy]] methods (e.g. [[Catalysis Methodology]]) have rejected this for a much more subtle idea of seamlessness. The old notion resonates well with a [[Taylorist Management]] (\"software factory\") mindset. Of course, <i>we</i> all know that the software factory is the compiler and CD burner.",
      "id": "9294a5f6a8196ca16878fbe1a4769494"
    },
    {
      "type": "html",
      "text": "\nXP is trivially seamless, as all the deliverables are code. -- [[Keith Braithwaite]]",
      "id": "c6885494e5ebd9a45cbde2d89fff860f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "I've read the book. Does everyone agree it's just another heavyweight process? Why bother when we have [[Extreme Programming]]? -- sg",
      "id": "89c3c387eb5a6bd41b24e679fd24c514"
    },
    {
      "type": "html",
      "text": "\nIt is claimed, by [[Uncle Bob]], most notably, that RUP doesn't have to be heavy weight at all. This suggests to me that Bob has a much deeper and more [[Gnomic Understanding]] of RUP and how it is meant to be used than anyone I've ever seen try to use it. The real joy of RUP is that it is, like Objectory before it, a <i>proprietary methodology</i>. The book mentioned above just scratches the surface. For the full deal, you have to buy the CD. Think about that, a <i>whole CD</i> devoted to this one method. -- Keith",
      "id": "d502a97d229fb0faa22dedf0fee74e6d"
    },
    {
      "type": "html",
      "text": "\nRight. That's scary! Reminds me of DOD Std 2169! -- sg",
      "id": "4e697709c251ada5a99fa5ba941d9c4b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "\nSure, the RUP is weighty and complex (sophisticated?), but my experience with using it on two major projects is that if you ask anybody on the project team if they could simplify the part of the RUP they will be working with, they will typically object that it can't be done.  ",
      "id": "65965d1927b6a693a45f6e5f9373270f"
    },
    {
      "type": "html",
      "text": "\nThis reflects the by-now widely understood truth that modern software development has become quite difficult and complex. You have to juggle a lot of balls at the same time to make sure every component of a system can do all the things expected of it these days. To paraphrase a great thinker, you can only make your development processes as simple as possible, but no simpler.",
      "id": "9ff29ec96ed8a2f338062ef64adae732"
    },
    {
      "type": "html",
      "text": "\nExpectations for new systems are now very high in general but software development projects are especially being pressured by increasing amounts of COTS and legacy integration requirements resulting an explosion of one of the trickiest software problems: Excessive system dependencies and logistical management issues. In addition, new software systems now have to scale up to the Internet and as a result are expected to exhibit 24/7 reliability right out of the gate. This is further exacerbated by the expectations people now have after years of coming into frequent contact with good examples of high-quality software systems. These influences ensure that software projects are far more complex (and difficult) than in previous years while the techniques and processes for managing the difficulty and complexity are falling behind. Most current lightweight development methods (read: informal programming techniques) just can't coherently address and manage these issues with reasonable time/cost curves.",
      "id": "e07b5d8d13f4f03921c5c3b139f7c093"
    },
    {
      "type": "html",
      "text": "\nIf you invest the resources, the RUP (or any well-defined and documented structuring of your development activities) will actually help to mitigate these challenges instead of just helping you tread water. The problems are classic though: The learning curve and finding talented people willing to learn and work together using a common plan. And, XP is not so different based on my one attempt to use it on a non-trivial project. Either way, there's lots to learn, and so little time and few good people. -- [[Dion Hinchcliffe]]",
      "id": "bef5043cf847cb0ea3cc9739adb1c82b"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "<b>Q:</b> So with the online support, the CD, and the books, what's the full price-tag of RUP?",
      "id": "0b4d5e204f1f31d94410c2e2d3b3ba5e"
    },
    {
      "type": "html",
      "text": "<b>A:</b> ...",
      "id": "158aface6b390ba6370662f0567a79b7"
    },
    {
      "type": "html",
      "text": "\nFirst, you don't need RUP books. The RUP CD-ROM is one big book (written as hyperlinked HTML pages, plus a Java applet collapsable/expandable menu bar in the style of Windows Explorer style).",
      "id": "338eb327a0f7dc827fce1069929584f0"
    },
    {
      "type": "html",
      "text": "\nSecondly, as my company management recently crystallized their \"<i>we like Rational</i>\" approach by buying RUP, I can reveal it's fairly cheap. $10,000 dollars for CD-ROMs for everyone in a small company, and free future RUP upgrades. However, be warned that the RUP product has been designed to work best with close integration with other Rational tools. That is, the [[Rational Workbench]] tool for easily editing the site then publishing it, and [[Rational Rose]] for the UML creation/publishing. The combined costs of several licences for Workbench, and the large cost of a company-wide licence for Rose, would certainly dwarf the price of RUP. So Rational's strategy is to sell RUP very cheaply.  Once you have it, there's an entire Tool Mentor section which serves as a huge advertisement for the Raional Suite of tools. And, as noted, if you wish to make company-specific changes to RUP HTML files (and there's 1000's of them), for maintainability and easy future RUP upgrades you must buy Rational Workbench and Rose. There lies the rub.",
      "id": "6ffa79f45e4336c511a31f04441aa3da"
    },
    {
      "type": "html",
      "text": "\nSo \"<i>the full price-tag of RUP</i>\" is ultimatly the cost of:",
      "id": "22f08d1f35894dd9d760d51f7e225088"
    },
    {
      "type": "html",
      "text": " RUP + Workbench + Rose [+ the pain of having to actually <i>use</i> RUP ;-) ]",
      "id": "9fe240a1f0f45a975c702ea8985155fe"
    },
    {
      "type": "html",
      "text": "<i>Note: You can do RUP without Rose. You can do RUP without Workbench if you don't want to customise it (beyond selecting a predefined workflow). You can </i>not<i> customise RUP without Workbench very easily; the web pages are too hard to edit. If you don't use the web pages, you're not using RUP, though you may still be using an instance of the USDP. RUP is USDP with fancy web pages, essentially. The RUP web pages are _very_ neat, but the inherent lack of flexibility and the difficulty of customising without shelling out for Workbench kills them. I'm yet to see a RUP workflow that did exactly what I want to do, out-of-the-box. -- [[Robert Watkins]]</i>",
      "id": "fdf76593f78ea7dc8beb0335d7860589"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "Is anyone else using the RUP CD product at their company? What are your experiences with it?",
      "id": "bfab256a6f846faa5202380ad8a55939"
    },
    {
      "type": "html",
      "text": "<i>I'm using it. Actually it's been made available as a network share.  It has a nice [[Java Applet]] for navigation. There are several references to XP practices and integrating with RUP. If there's interest I'll see if I can supply a few short quotes and not violate our license agreement.</i> -- [[Steven Newton]]",
      "id": "3470cd8f0e7be6db2c006b27db969ff2"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "The RUP is actually a proprietary realisation (with some minor additions) of the (free) [[Unified Software Development Process]], which provides the framework for RUP and any other similar iterative development processes. In this sense, the USDP is an abstract process and is described in the [[Usdp Book]]. -- [[Andrew Joyner]]",
      "id": "5637ff6423ccf276de058a0a792f5773"
    },
    {
      "type": "html",
      "text": "<i>RUP is also an abstract process. RUP workflows are the process realisations, and can be either heavy or light (though even the published light ones are very heavy compared to most of the agile methodologies) -- [[Robert Watkins]]</i>",
      "id": "402bdd3da0ead3a9251c6938b51cfb14"
    },
    {
      "type": "html",
      "text": "\nThe Rational people give a comparison of XP and RUP in their on-line mag The Rational Edge ([http://www.rationaledge.com www.rationaledge.com]). There are two parts...",
      "id": "ebfc7f271d14cf8f0b2b2504e503a868"
    },
    {
      "type": "html",
      "text": " RUP and XP Part I -- Finding Common Ground ([http://www.therationaledge.com/content/mar_01/f_xp_gp.html www.therationaledge.com])",
      "id": "5ed5f3814bb260a5e7502d6ede9cf419"
    },
    {
      "type": "html",
      "text": " RUP and XP Part II -- Valuing Differences ([http://www.therationaledge.com/content/apr_01/f_xp2_gp.html www.therationaledge.com])",
      "id": "fd5f3d369eee135a5b0142f57f877985"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "I attended (a couple of days ago) a seminar that Rational was giving in Auckland on XP. The general thrust appeared to be to sell RUP and their new IDE add-on for Visual Studio .NET (plus a couple of others) - \"XDE\".",
      "id": "81a991625a08f5ec419b9e56adc0bdce"
    },
    {
      "type": "html",
      "text": "\nThe bit I found quite inventive was when they managed to sidestep the entire \"Where does XP fit into RUP\" (or vice versa) by redfining RUP as a [[Meta Process]] that allows you to implement the XP process in RUP via templates.",
      "id": "70efa006a4cbd9304937af672611cdf4"
    },
    {
      "type": "html",
      "text": "\nYes, it's New and Improved [[Snake Oil]], now in exiting new \"Flavour of the Month\"! Order yours now!",
      "id": "aeab1b24b4785fbe1c79d12440fadac2"
    },
    {
      "type": "html",
      "text": "\nThe seminar was mostly worthless, but there were a couple of quite good White Papers on \"[[Pair Programming]]\" and \"[[Test First Design]] and Refactoring\" given out. Both can be found on Rational's website. Both were written by [[Robert Cecil Martin]] of [[Object Mentor]] Inc.",
      "id": "704f41e867e422427d3ca3d298494be4"
    },
    {
      "type": "html",
      "text": "<i>It's not redefining: RUP is and has always been a [[Meta Process]]. If you built suitable templates, it would be easy to implement XP in RUP. Note that the \"lightweight\" workflows that Rational publish are still too heavy. -- [[Robert Watkins]].</i>",
      "id": "fcb89dfc180ee854a980eeb6eda17851"
    },
    {
      "type": "html",
      "text": "\nI'd hate to see Rational try to [[Embrace And Extend]] XP into RUP. Maybe it's a good thing that [[Xp Is Dogmatic]]; it's a good defense against [[Embrace And Extend]] if you're isolationist.",
      "id": "ce52d05c4796146e42cb3201306bd9ed"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "177f58028bc6210f5d5a18152d5924cf"
    },
    {
      "type": "html",
      "text": "See Also: [[Extreme Unified Process]] [[Rational Company]] [[Unified Software Development Process]]",
      "id": "5c1585d6c32c47363eea10bf6f345951"
    },
    {
      "type": "html",
      "text": "\n[[Category Methodology]]",
      "id": "808c2db0320f2fbab07fc32012df60c9"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?RationalUnifiedProcess c2.com]",
      "id": "d3f228a7fe6dcdaf119171500a83a958"
    }
  ],
  "journal": [
    {
      "date": 1187418716000,
      "id": "de71db8246b2f2c6b1fe29efa9f49cae",
      "type": "create",
      "item": {
        "title": "Rational Unified Process",
        "story": [
          {
            "type": "html",
            "text": "Things have moved on a little since the last posts - IBM donated part of RUP to Eclipse (the EPF project at [http://www.eclipse.org/epf www.eclipse.org]) as well as the Eclipse-based tooling to create process descriptions that use a HTML-based format to document them.  EPF includes efforts to incorporate XP/SCRUM and other methods/approaches.  This has not fundamentally changed RUP as such - just easier for you to take a look at and use if appropriate -- Anthony Kesterton <i>See [[Eclipse Process Framework]].</i>",
            "id": "196a1cb665495181b4718adf5a68c307"
          },
          {
            "type": "html",
            "text": "<b>[[Rational Unified Process]] (RUP) has been acquired by [[Ibm Corporation]] and an introduction is found at [http://www-306.ibm.com/software/awdtools/rup/ www-306.ibm.com]</b>",
            "id": "720805fb5fd184970613ce6463ba48c4"
          },
          {
            "type": "html",
            "text": "\nPreviously, Rational Unified Process was a version (proprietary to the [[Rational Company]]) of the [[Unified Software Development Process]], a [[Software Engineering]] Process. ",
            "id": "deaa4744ac57ec6cad6b44d51ca181a0"
          },
          {
            "type": "html",
            "text": "\nRUP provides a disciplined approach to assigning tasks and responsibilities within a development organization. Its goal is to ensure the production of high-quality software that meets the needs of its end-users, within a predictable schedule and budget.",
            "id": "cad41997e2954d7fafd768a974f1d5c3"
          },
          {
            "type": "html",
            "text": "\nSee [http://www.itworld.com/AppDev/530/050803mi/ www.itworld.com] For a view of RUP (and all its supporting modules) that is up to date as at mid 2005.",
            "id": "d6a35517a23463c4cfd847d6fecf9558"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "The methodology was formerly known as Objectory (MFKAO). See [http://www.rational.com/products/rup/whitepapers.jsp www.rational.com]",
            "id": "0043124bb76e4aac42753a8a3a39c288"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "Which explains its weightiness. -- [[Alistair Cockburn]]",
            "id": "ba078c135eed205d2507baa0de351b02"
          },
          {
            "type": "html",
            "text": "\nThere's an introductory book on it by Phillipe Kruchten [ISBN: 0201604590]. It's a nice overview book, but RUP is certainly aimed at heaviness. -- [[Martin Fowler]]",
            "id": "329b7aeb627ca920c14b2ad46f2e7aff"
          },
          {
            "type": "html",
            "text": "<b>Q:</b> If I'm going to read one book on RUP, should I read this one? I'd assumed I'd go to the source (Jacobson), but perhaps this is unwise. I ask because it is rumored that my company will be adopting RUP.",
            "id": "9d327bd8fd350b318e261ec460a3d7ef"
          },
          {
            "type": "html",
            "text": "<b>A:</b> Yes, this is a good book to start with. It is an overview similar in scope to [[Extreme Programming Explained]]. If you're looking for <i>details</i> however, go straight to the source (Jacobson).",
            "id": "364e6fb5eeca3db300edd94ed9db62b4"
          },
          {
            "type": "html",
            "text": "\nAny opinions on the usefulness of [[Rational Unified Process]]? It seems to be rather much documentation to produce in every iteration. Is it useful even for large projects or will creativeness suffer? -- [[Fredrik Rubensson]]",
            "id": "a728f2e5581c56c7895bf785174f4892"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "I have the book, and flipped through it (i.e., did not read carefully and critically.  I actually thought they did a good job at writing.  As the XP people have noticed by now, and Ron commented on [[Crystal Clear Methodology]], any methodology looks awfully large when you try to write it down in any amount of detail.  So what I found were fairly reasonable discussions of requirements changing, use of prototypes, etc. ... I say that, but then I have been accused of not reading books with enough of a critical eye...",
            "id": "09ee6cb68625702599ab8573da0e8949"
          },
          {
            "type": "html",
            "text": "\nRegarding documentation, every methodology I have ever seen - with the specific exceptions of XP and [[Crystal Clear Methodology]], advises more documentation to be done than any successful project team I have interviewed has been able to do.  I did meet a person whose project was cancelled because they were actually made to produce all that documentation.  Mostly I meet teams who are told to produce all that documentation, and simply produce a percentage, and the project managers are content, because they get the software they need in a tolerable time frame, with at least a little documentation. -- [[Alistair Cockburn]]",
            "id": "fa917576bb7af44506293d81b8636d9e"
          },
          {
            "type": "html",
            "text": "\nPerhaps the project manager should make a tiny subset of the documentation mandatory? I feel documents like [[Requirements Specification]] including [[Use Cases]], [[Architectural Overview]], [[Code Comments]], [[Test Plan]] and [[Project Evaluation]] should be mandatory. (Somewhat depending on the development context. Speculative software are less likely to need a detailed specification than internal software written to do a specific task. -- [[Fredrik Rubensson]]",
            "id": "a63437fb5102cfa9e9c9df289bb74851"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "In the company I work with, we've been using RUP for some time with great success. They key thing about RUP is that you don't take it wholesale and produce every artifact that it defines. You start with a Development Case that defines what you think will be useful to your project. To me this fits well with the philosophy of XP - keep it simple, only do what needs to be done, etc.",
            "id": "c7d0857dd2ce0adb7c6c758473d008b4"
          },
          {
            "type": "html",
            "text": "\nThe problem I see with XP is that it is too developer centric, it sees the primary focus of a project as the developers. I believe this is a dangerous attitude to have, since the primary focus of a system must be the customer/user. ",
            "id": "333051fbf44eea214d01a510282f3671"
          },
          {
            "type": "html",
            "text": "\nMuch of what is in XP is in RUP, I see it as a light weight extension of RUP focused on the construction phase - though the user stories focus on requirements. -- Alastair Thomson",
            "id": "92dcc58f6dfbfa9b47b37bd5aa3c6f81"
          },
          {
            "type": "html",
            "text": "\nWhy do you say XP focuses on developers? It strikes me as one of the most customer-focused methodologies I know of. It's certainly the only one I'm aware of that 'mandates' an [[Onsite Customer]]. -- [[John Brewer]]",
            "id": "482fd23054cb90357fe33569790411b6"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "<i>They key thing about RUP is that you don't take it wholesale and produce every artifact that it defines.</i> ",
            "id": "9ad00280c221cb3482ac759a62c5022a"
          },
          {
            "type": "html",
            "text": "\nIt now seems fairly clear that RUP can be configured into something like XP if you need to be seen to do RUP. -- [[Keith Braithwaite]]",
            "id": "61e1e22cc7562ff8785d8c05825e1277"
          },
          {
            "type": "html",
            "text": "\n[[Object Mentor]] have developed an XP tailoring of the RUP product - which I discovered during a recent Rational RUP training course - so it seems they can happily coexist after all :-)\n[[Caroline Foster]]  ",
            "id": "4834aec0da4383d2578600639d84086a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "Reading the Rational RUP Whitepaper, I got very frustrated. It seems like in RUP, the Construction Phase (aka Coding) is supposed to be boring and mechanical. This sounds like a very thoughtless evaluation. From the whitepaper:",
            "id": "e09ae5833d8808b0642f8542d46f9be1"
          },
          {
            "type": "html",
            "text": "<i>It is easy to argue that the elaboration phase is the most critical of the four phases. At the end of this phase, the hard \"engineering\" is considered complete and the project undergoes it's most important day of reckoning....</i>",
            "id": "6cd95b06dab167381aae7b2eab034f84"
          },
          {
            "type": "html",
            "text": "Stupid me, I thought the most critical part of a project was whether it delivered its required functionality or not. Here is more:",
            "id": "bf21c0346d1bb2803bc1f3c80c69c7e0"
          },
          {
            "type": "html",
            "text": "<i>The construction phase is, in one sense, a manufacturing process where emphasis is placed on managing resources and controlling operation to optimize costs, schedules and quality.</i>",
            "id": "ffbf63ab4948022c50fef0a0fed8f551"
          },
          {
            "type": "html",
            "text": "I thought [[Taylorist Management]] principles were proven to not work well in software construction (or most other activities, for that matter). It seems like the RUP view of the construction phase is that it should be boring, mechanical and mainly handled by drones. Aren't they dragging the [[Construction Metaphor]] too far?",
            "id": "eb2aa95b1d7a08e862190113175afc4c"
          },
          {
            "type": "html",
            "text": "\nIt does however advocate iterative development within each phase, so that by the end of the \"elaboration\" phase (which is 2/4, after \"inception\") there should have been a few cycles of build-test-release already. It goes on to say you should have established a baseline architecture and a production-quality prototype by the end of Elaboration. If you are practicing [[Test First Design]] (which they also encourage) you will indeed have a large chunk of the functionality in place already. So the Construction phase should be dealing mainly with remaining functionality, last minute changes, bugs and deployment issues. They see it as a <i>transition from the development of intellectual property during inception and elaboration, to the development of deployable products during construction and transition</i>. Which doesn't sound so bad. -- [[Caroline Foster]]",
            "id": "6735cee3175e07a02ade821bdf000b4a"
          },
          {
            "type": "html",
            "text": "\nOn another note, has anyone studied the possible connection between techniques that are perceived as boring and techniques that resist adoption? Sorry about the steam; a bit of built up tension there. -- [[Johannes Brodwall]]",
            "id": "2bfb19c6f5063479e26f84312c12da43"
          },
          {
            "type": "html",
            "text": "\nIt does seem as if techniques that are boring for developers are much easier to get accepted by management. Or is that not what you were asking about...",
            "id": "c5239eee86e36fb2f21cd46592bdd24f"
          },
          {
            "type": "html",
            "text": "\nRUP does seem to carry forward the idea of \"seamlessness\" that was built into OMT and such: The idea that requirements can merge into design into code in a very uniform way. More recent [[Document Transformation Theory Of Software Engineeringy]] methods (e.g. [[Catalysis Methodology]]) have rejected this for a much more subtle idea of seamlessness. The old notion resonates well with a [[Taylorist Management]] (\"software factory\") mindset. Of course, <i>we</i> all know that the software factory is the compiler and CD burner.",
            "id": "9294a5f6a8196ca16878fbe1a4769494"
          },
          {
            "type": "html",
            "text": "\nXP is trivially seamless, as all the deliverables are code. -- [[Keith Braithwaite]]",
            "id": "c6885494e5ebd9a45cbde2d89fff860f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "I've read the book. Does everyone agree it's just another heavyweight process? Why bother when we have [[Extreme Programming]]? -- sg",
            "id": "89c3c387eb5a6bd41b24e679fd24c514"
          },
          {
            "type": "html",
            "text": "\nIt is claimed, by [[Uncle Bob]], most notably, that RUP doesn't have to be heavy weight at all. This suggests to me that Bob has a much deeper and more [[Gnomic Understanding]] of RUP and how it is meant to be used than anyone I've ever seen try to use it. The real joy of RUP is that it is, like Objectory before it, a <i>proprietary methodology</i>. The book mentioned above just scratches the surface. For the full deal, you have to buy the CD. Think about that, a <i>whole CD</i> devoted to this one method. -- Keith",
            "id": "d502a97d229fb0faa22dedf0fee74e6d"
          },
          {
            "type": "html",
            "text": "\nRight. That's scary! Reminds me of DOD Std 2169! -- sg",
            "id": "4e697709c251ada5a99fa5ba941d9c4b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "\nSure, the RUP is weighty and complex (sophisticated?), but my experience with using it on two major projects is that if you ask anybody on the project team if they could simplify the part of the RUP they will be working with, they will typically object that it can't be done.  ",
            "id": "65965d1927b6a693a45f6e5f9373270f"
          },
          {
            "type": "html",
            "text": "\nThis reflects the by-now widely understood truth that modern software development has become quite difficult and complex. You have to juggle a lot of balls at the same time to make sure every component of a system can do all the things expected of it these days. To paraphrase a great thinker, you can only make your development processes as simple as possible, but no simpler.",
            "id": "9ff29ec96ed8a2f338062ef64adae732"
          },
          {
            "type": "html",
            "text": "\nExpectations for new systems are now very high in general but software development projects are especially being pressured by increasing amounts of COTS and legacy integration requirements resulting an explosion of one of the trickiest software problems: Excessive system dependencies and logistical management issues. In addition, new software systems now have to scale up to the Internet and as a result are expected to exhibit 24/7 reliability right out of the gate. This is further exacerbated by the expectations people now have after years of coming into frequent contact with good examples of high-quality software systems. These influences ensure that software projects are far more complex (and difficult) than in previous years while the techniques and processes for managing the difficulty and complexity are falling behind. Most current lightweight development methods (read: informal programming techniques) just can't coherently address and manage these issues with reasonable time/cost curves.",
            "id": "e07b5d8d13f4f03921c5c3b139f7c093"
          },
          {
            "type": "html",
            "text": "\nIf you invest the resources, the RUP (or any well-defined and documented structuring of your development activities) will actually help to mitigate these challenges instead of just helping you tread water. The problems are classic though: The learning curve and finding talented people willing to learn and work together using a common plan. And, XP is not so different based on my one attempt to use it on a non-trivial project. Either way, there's lots to learn, and so little time and few good people. -- [[Dion Hinchcliffe]]",
            "id": "bef5043cf847cb0ea3cc9739adb1c82b"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "<b>Q:</b> So with the online support, the CD, and the books, what's the full price-tag of RUP?",
            "id": "0b4d5e204f1f31d94410c2e2d3b3ba5e"
          },
          {
            "type": "html",
            "text": "<b>A:</b> ...",
            "id": "158aface6b390ba6370662f0567a79b7"
          },
          {
            "type": "html",
            "text": "\nFirst, you don't need RUP books. The RUP CD-ROM is one big book (written as hyperlinked HTML pages, plus a Java applet collapsable/expandable menu bar in the style of Windows Explorer style).",
            "id": "338eb327a0f7dc827fce1069929584f0"
          },
          {
            "type": "html",
            "text": "\nSecondly, as my company management recently crystallized their \"<i>we like Rational</i>\" approach by buying RUP, I can reveal it's fairly cheap. $10,000 dollars for CD-ROMs for everyone in a small company, and free future RUP upgrades. However, be warned that the RUP product has been designed to work best with close integration with other Rational tools. That is, the [[Rational Workbench]] tool for easily editing the site then publishing it, and [[Rational Rose]] for the UML creation/publishing. The combined costs of several licences for Workbench, and the large cost of a company-wide licence for Rose, would certainly dwarf the price of RUP. So Rational's strategy is to sell RUP very cheaply.  Once you have it, there's an entire Tool Mentor section which serves as a huge advertisement for the Raional Suite of tools. And, as noted, if you wish to make company-specific changes to RUP HTML files (and there's 1000's of them), for maintainability and easy future RUP upgrades you must buy Rational Workbench and Rose. There lies the rub.",
            "id": "6ffa79f45e4336c511a31f04441aa3da"
          },
          {
            "type": "html",
            "text": "\nSo \"<i>the full price-tag of RUP</i>\" is ultimatly the cost of:",
            "id": "22f08d1f35894dd9d760d51f7e225088"
          },
          {
            "type": "html",
            "text": " RUP + Workbench + Rose [+ the pain of having to actually <i>use</i> RUP ;-) ]",
            "id": "9fe240a1f0f45a975c702ea8985155fe"
          },
          {
            "type": "html",
            "text": "<i>Note: You can do RUP without Rose. You can do RUP without Workbench if you don't want to customise it (beyond selecting a predefined workflow). You can </i>not<i> customise RUP without Workbench very easily; the web pages are too hard to edit. If you don't use the web pages, you're not using RUP, though you may still be using an instance of the USDP. RUP is USDP with fancy web pages, essentially. The RUP web pages are _very_ neat, but the inherent lack of flexibility and the difficulty of customising without shelling out for Workbench kills them. I'm yet to see a RUP workflow that did exactly what I want to do, out-of-the-box. -- [[Robert Watkins]]</i>",
            "id": "fdf76593f78ea7dc8beb0335d7860589"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "Is anyone else using the RUP CD product at their company? What are your experiences with it?",
            "id": "bfab256a6f846faa5202380ad8a55939"
          },
          {
            "type": "html",
            "text": "<i>I'm using it. Actually it's been made available as a network share.  It has a nice [[Java Applet]] for navigation. There are several references to XP practices and integrating with RUP. If there's interest I'll see if I can supply a few short quotes and not violate our license agreement.</i> -- [[Steven Newton]]",
            "id": "3470cd8f0e7be6db2c006b27db969ff2"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "The RUP is actually a proprietary realisation (with some minor additions) of the (free) [[Unified Software Development Process]], which provides the framework for RUP and any other similar iterative development processes. In this sense, the USDP is an abstract process and is described in the [[Usdp Book]]. -- [[Andrew Joyner]]",
            "id": "5637ff6423ccf276de058a0a792f5773"
          },
          {
            "type": "html",
            "text": "<i>RUP is also an abstract process. RUP workflows are the process realisations, and can be either heavy or light (though even the published light ones are very heavy compared to most of the agile methodologies) -- [[Robert Watkins]]</i>",
            "id": "402bdd3da0ead3a9251c6938b51cfb14"
          },
          {
            "type": "html",
            "text": "\nThe Rational people give a comparison of XP and RUP in their on-line mag The Rational Edge ([http://www.rationaledge.com www.rationaledge.com]). There are two parts...",
            "id": "ebfc7f271d14cf8f0b2b2504e503a868"
          },
          {
            "type": "html",
            "text": " RUP and XP Part I -- Finding Common Ground ([http://www.therationaledge.com/content/mar_01/f_xp_gp.html www.therationaledge.com])",
            "id": "5ed5f3814bb260a5e7502d6ede9cf419"
          },
          {
            "type": "html",
            "text": " RUP and XP Part II -- Valuing Differences ([http://www.therationaledge.com/content/apr_01/f_xp2_gp.html www.therationaledge.com])",
            "id": "fd5f3d369eee135a5b0142f57f877985"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "I attended (a couple of days ago) a seminar that Rational was giving in Auckland on XP. The general thrust appeared to be to sell RUP and their new IDE add-on for Visual Studio .NET (plus a couple of others) - \"XDE\".",
            "id": "81a991625a08f5ec419b9e56adc0bdce"
          },
          {
            "type": "html",
            "text": "\nThe bit I found quite inventive was when they managed to sidestep the entire \"Where does XP fit into RUP\" (or vice versa) by redfining RUP as a [[Meta Process]] that allows you to implement the XP process in RUP via templates.",
            "id": "70efa006a4cbd9304937af672611cdf4"
          },
          {
            "type": "html",
            "text": "\nYes, it's New and Improved [[Snake Oil]], now in exiting new \"Flavour of the Month\"! Order yours now!",
            "id": "aeab1b24b4785fbe1c79d12440fadac2"
          },
          {
            "type": "html",
            "text": "\nThe seminar was mostly worthless, but there were a couple of quite good White Papers on \"[[Pair Programming]]\" and \"[[Test First Design]] and Refactoring\" given out. Both can be found on Rational's website. Both were written by [[Robert Cecil Martin]] of [[Object Mentor]] Inc.",
            "id": "704f41e867e422427d3ca3d298494be4"
          },
          {
            "type": "html",
            "text": "<i>It's not redefining: RUP is and has always been a [[Meta Process]]. If you built suitable templates, it would be easy to implement XP in RUP. Note that the \"lightweight\" workflows that Rational publish are still too heavy. -- [[Robert Watkins]].</i>",
            "id": "fcb89dfc180ee854a980eeb6eda17851"
          },
          {
            "type": "html",
            "text": "\nI'd hate to see Rational try to [[Embrace And Extend]] XP into RUP. Maybe it's a good thing that [[Xp Is Dogmatic]]; it's a good defense against [[Embrace And Extend]] if you're isolationist.",
            "id": "ce52d05c4796146e42cb3201306bd9ed"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "177f58028bc6210f5d5a18152d5924cf"
          },
          {
            "type": "html",
            "text": "See Also: [[Extreme Unified Process]] [[Rational Company]] [[Unified Software Development Process]]",
            "id": "5c1585d6c32c47363eea10bf6f345951"
          },
          {
            "type": "html",
            "text": "\n[[Category Methodology]]",
            "id": "808c2db0320f2fbab07fc32012df60c9"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?RationalUnifiedProcess c2.com]",
            "id": "d3f228a7fe6dcdaf119171500a83a958"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1628161945622
    }
  ]
}