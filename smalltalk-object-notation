{
  "title": "Smalltalk Object Notation",
  "story": [
    {
      "type": "markdown",
      "id": "3610d6af6829474b",
      "text": "[[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. [https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston github]"
    },
    {
      "type": "markdown",
      "id": "19635ecf0b9f33ee",
      "text": "It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available."
    },
    {
      "type": "markdown",
      "id": "56b4d43e1da72b82",
      "text": "STON implements serialization and materialization using the Smalltalk Object Notation format.\n\n> I am a class side facade offering a high level API to write and read objects using STON."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Smalltalk Object Notation",
        "story": []
      },
      "date": 1703386952548
    },
    {
      "id": "3610d6af6829474b",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston GitHub] â€“ [[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available.\n"
      },
      "attribution": {
        "page": "Smalltalk Object Notation (STON)"
      },
      "date": 1703386957765
    },
    {
      "id": "56b4d43e1da72b82",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "56b4d43e1da72b82",
        "text": "STON implements serialization and materialization using the Smalltalk Object Notation format.\n\n> I am a class side facade offering a high level API to write and read objects using STON."
      },
      "after": "3610d6af6829474b",
      "attribution": {
        "page": "Smalltalk Object Notation (STON)"
      },
      "date": 1703386966001
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk."
      },
      "date": 1703387099747
    },
    {
      "type": "add",
      "id": "19635ecf0b9f33ee",
      "item": {
        "type": "markdown",
        "id": "19635ecf0b9f33ee",
        "text": "It can be used to serialize domain level objects, either for persistency or network transport. As its name suggests, it is based on [[JSON]] (Javascript Object Notation). It adds symbols as a primitive value, class tags for object values and references. Implementations for Pharo Smalltalk, Squeak and Gemstone Smalltalk are available."
      },
      "after": "3610d6af6829474b",
      "date": 1703387101297
    },
    {
      "type": "edit",
      "id": "3610d6af6829474b",
      "item": {
        "type": "markdown",
        "id": "3610d6af6829474b",
        "text": "[[STON]] is a lightweight, text-based, human-readable data interchange format for class-based object-oriented languages like Smalltalk. [https://github.com/svenvc/ston/blob/master/ston-paper.md#smalltalk-object-notation-ston github]"
      },
      "date": 1703387107372
    }
  ]
}