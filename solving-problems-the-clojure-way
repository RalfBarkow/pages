{
  "title": "Solving Problems the Clojure Way",
  "story": [
    {
      "type": "paragraph",
      "id": "25f8ed79f4e6a32c",
      "text": "After overcoming a fear of brackets, the next challenge for would-be Clojurians is less superficial: to stop writing Java (or Javascript, or [[Haskell]]...) with Clojure's syntax, and actually start \"thinking\" in Clojure. It is said that Clojure is a \"functional\" programming language; there's also talk of \"data-driven\" programming. What are these things? Are they any good? Why are they good? In this talk, Rafal attempts to distill the particular blend of functional and data-driven programming that makes up \"idiomatic Clojure\", clarify what it looks like in practise (with real-world examples), and reflect on how Clojure's conventions came to be and how they continue to evolve."
    },
    {
      "type": "video",
      "id": "1950bd2da013e990",
      "text": "YOUTUBE vK1DazRK_a0\nSolving Problems the Clojure Way - Rafal Dittwald "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Solving Problems the Clojure Way",
        "story": []
      },
      "date": 1684859767553
    },
    {
      "id": "25f8ed79f4e6a32c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "25f8ed79f4e6a32c",
        "text": "After overcoming a fear of brackets, the next challenge for would-be Clojurians is less superficial: to stop writing Java (or Javascript, or [[Haskell]]...) with Clojure's syntax, and actually start \"thinking\" in Clojure. It is said that Clojure is a \"functional\" programming language; there's also talk of \"data-driven\" programming. What are these things? Are they any good? Why are they good? In this talk, Rafal attempts to distill the particular blend of functional and data-driven programming that makes up \"idiomatic Clojure\", clarify what it looks like in practise (with real-world examples), and reflect on how Clojure's conventions came to be and how they continue to evolve."
      },
      "attribution": {
        "page": "Rafal Dittwald"
      },
      "date": 1684859779774
    },
    {
      "id": "1950bd2da013e990",
      "type": "add",
      "item": {
        "type": "video",
        "id": "1950bd2da013e990",
        "text": "YOUTUBE vK1DazRK_a0\nSolving Problems the Clojure Way - Rafal Dittwald "
      },
      "after": "25f8ed79f4e6a32c",
      "attribution": {
        "page": "Rafal Dittwald"
      },
      "date": 1684859787373
    }
  ]
}