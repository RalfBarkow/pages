{
  "title": "The Design of Computation",
  "story": [
    {
      "type": "markdown",
      "id": "0f44868a6c50e678",
      "text": "Between 1993 and 2000 under the direction of [[Richard Shoup]] the Natural Computing Project at Paul Allen's Interval Research Corporation applied LoF to the creation of formal computation from first principles. \n"
    },
    {
      "type": "video",
      "id": "c5f0fb1ee6912972",
      "text": "VIMEO 361994800\nThe Design of Computation — [[William Bricken]]"
    },
    {
      "type": "markdown",
      "id": "d4ff6b663a14a425",
      "text": "The goal was to develop a thorough understanding of LoF while building a complete suite of verifiable and efficient software and hardware design tools. We built a LoF engine that achieved proof without propositional or predicate calculus and a software and silicon design optimizer. We discovered new computational methods and perspectives, including\n— void-based reasoning that treats selected structure as meaningless,\n— deep pattern-directed transformation that ignores function boundaries,\n— imaginary query-based reduction that locates redundancy without symbolic manipulation,\n— logic engines that can run both sequentially and asynchronously in distributed environments,\n— several completely new hardware architectures, and\n— postsymbolic mathematical models of computation.\n\nThese tools outperformed commercial silicon design tools on million transistor sequential and logic circuits, but our primary objective was provably error-free computation for multilevel sequential logic synthesis and optimization. When Interval closed, we were in the process of transferring the computational suite to reconfigurable hardware.\n\nDr. Bricken has spent over 40 years developing the tools and techniques of boundary mathematics. Ph.D. in Research Methods, Educational Psychology and Computer Science from Stanford University."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "The Design of Computation",
        "story": []
      },
      "date": 1658503811486
    },
    {
      "item": {
        "type": "factory",
        "id": "0f44868a6c50e678"
      },
      "id": "0f44868a6c50e678",
      "type": "add",
      "date": 1658503818643
    },
    {
      "item": {
        "type": "factory",
        "id": "c5f0fb1ee6912972"
      },
      "id": "c5f0fb1ee6912972",
      "type": "add",
      "after": "0f44868a6c50e678",
      "date": 1658503819811
    },
    {
      "type": "edit",
      "id": "c5f0fb1ee6912972",
      "item": {
        "type": "video",
        "id": "c5f0fb1ee6912972",
        "text": "VIMEO 361994800"
      },
      "date": 1658503827569
    },
    {
      "type": "edit",
      "id": "0f44868a6c50e678",
      "item": {
        "type": "markdown",
        "id": "0f44868a6c50e678",
        "text": "Between 1993 and 2000 under the direction of Richard Shoup the Natural Computing Project at Paul Allen's Interval Research Corporation applied LoF to the creation of formal computation from first principles. The goal was to develop a thorough understanding of LoF while building a complete suite of verifiable and efficient software and hardware design tools. We built a LoF engine that achieved proof without propositional or predicate calculus and a software and silicon design optimizer. We discovered new computational methods and perspectives, including\n— void-based reasoning that treats selected structure as meaningless,\n— deep pattern-directed transformation that ignores function boundaries,\n— imaginary query-based reduction that locates redundancy without symbolic manipulation,\n— logic engines that can run both sequentially and asynchronously in distributed environments,\n— several completely new hardware architectures, and\n— postsymbolic mathematical models of computation.\n\nThese tools outperformed commercial silicon design tools on million transistor sequential and logic circuits, but our primary objective was provably error-free computation for multilevel sequential logic synthesis and optimization. When Interval closed, we were in the process of transferring the computational suite to reconfigurable hardware.\n\nDr. Bricken has spent over 40 years developing the tools and techniques of boundary mathematics. Ph.D. in Research Methods, Educational Psychology and Computer Science from Stanford University."
      },
      "date": 1658503841844
    },
    {
      "type": "edit",
      "id": "c5f0fb1ee6912972",
      "item": {
        "type": "video",
        "id": "c5f0fb1ee6912972",
        "text": "VIMEO 361994800\nThe Design of Computation — William Bricken"
      },
      "date": 1658503922333
    },
    {
      "type": "edit",
      "id": "0f44868a6c50e678",
      "item": {
        "type": "markdown",
        "id": "0f44868a6c50e678",
        "text": "Between 1993 and 2000 under the direction of Richard Shoup the Natural Computing Project at Paul Allen's Interval Research Corporation applied LoF to the creation of formal computation from first principles. \n"
      },
      "date": 1658503940274
    },
    {
      "type": "add",
      "id": "d4ff6b663a14a425",
      "item": {
        "type": "markdown",
        "id": "d4ff6b663a14a425",
        "text": "The goal was to develop a thorough understanding of LoF while building a complete suite of verifiable and efficient software and hardware design tools. We built a LoF engine that achieved proof without propositional or predicate calculus and a software and silicon design optimizer. We discovered new computational methods and perspectives, including\n— void-based reasoning that treats selected structure as meaningless,\n— deep pattern-directed transformation that ignores function boundaries,\n— imaginary query-based reduction that locates redundancy without symbolic manipulation,\n— logic engines that can run both sequentially and asynchronously in distributed environments,\n— several completely new hardware architectures, and\n— postsymbolic mathematical models of computation.\n\nThese tools outperformed commercial silicon design tools on million transistor sequential and logic circuits, but our primary objective was provably error-free computation for multilevel sequential logic synthesis and optimization. When Interval closed, we were in the process of transferring the computational suite to reconfigurable hardware.\n\nDr. Bricken has spent over 40 years developing the tools and techniques of boundary mathematics. Ph.D. in Research Methods, Educational Psychology and Computer Science from Stanford University."
      },
      "after": "0f44868a6c50e678",
      "date": 1658503940963
    },
    {
      "id": "c5f0fb1ee6912972",
      "type": "move",
      "order": [
        "0f44868a6c50e678",
        "c5f0fb1ee6912972",
        "d4ff6b663a14a425"
      ],
      "date": 1658503943887
    },
    {
      "type": "edit",
      "id": "0f44868a6c50e678",
      "item": {
        "type": "markdown",
        "id": "0f44868a6c50e678",
        "text": "Between 1993 and 2000 under the direction of [[Richard Shoup]] the Natural Computing Project at Paul Allen's Interval Research Corporation applied LoF to the creation of formal computation from first principles. \n"
      },
      "date": 1658503962292
    },
    {
      "type": "edit",
      "id": "c5f0fb1ee6912972",
      "item": {
        "type": "video",
        "id": "c5f0fb1ee6912972",
        "text": "VIMEO 361994800\nThe Design of Computation — [[William Bricken]]"
      },
      "date": 1658503975573
    }
  ]
}