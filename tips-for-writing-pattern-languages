{
  "title": "Tips For Writing Pattern Languages",
  "story": [
    {
      "type": "paragraph",
      "text": "This is a message originally sent by [[Ward Cunningham]] to the [[Patterns List]] in January 1994. I can't find it archived online anywhere. [[Steve Berczuk]] sent me an OCR'ed version he had, which I just cut and pasted in. -- [[Doug Lea]]",
      "id": "1c2aaea6de649b26d6267d73290cefb9"
    },
    {
      "type": "html",
      "id": "3232d5e0e64de251",
      "text": "<h3> Advice"
    },
    {
      "type": "paragraph",
      "text": "Friends - I'd like to encourage all of you to get your pattern pencils out and get to work on your submissions to the PLoP'94 conference. To that end, let me suggest a few steps that have helped me get something down on paper. Also, I've included the introduction and section headings from what I expect to be my own submission: a pattern language I call [[CHECKS]]. But first the steps...",
      "id": "afb3cd517d6c77f2a28ff1531c71f89e"
    },
    {
      "type": "html",
      "text": "\n1) <b>Pick a whole area</b>, not just one idea. I like subject matter that is practical but seldom explored in a text book. You know, the kind of stuff you have to learn from your colleagues on the job. The discussion on the \"patterns\" list got me thinking about checking data.",
      "id": "aeffa51e008e9ce892fae7007fe664dc"
    },
    {
      "type": "html",
      "text": "\n2) <b>Make a list of all the little things you have learned</b> through the years about the area. Imagine that your kid brother has just taken responsibility for this area on his first big job. You're getting together this weekend. What are you going to tell him. Make a list.",
      "id": "9b269a2d1116d5d0f089277d3b70a90f"
    },
    {
      "type": "html",
      "text": "3) <b>Cast each item on your list as a solution</b>. I like to write a sentence with \"[[Therefore]]\" in the middle. You will have to think a little deeper here to figure out the forces that bear on your solutions. It's ok to speculate. I find this to be a rewarding activity since I often find new reason for what I do.",
      "id": "e2a268526b06a61e5732b29681ddefcc"
    },
    {
      "type": "html",
      "text": "\n4a) <b>Now write each item as a Pattern.</b> I've come to favor a four paragraph form where the second paragraph ends with the pivotal \"therefore:\". This is a good time to flip through Alexander's Pattern Language. I feel my work has always improved when I more closely mimic his style. I'm just now learning to make the first and last paragraphs carry weight. These are the ones that link a pattern with others in the language.",
      "id": "4b1851a455e4d76843c97492f9374976"
    },
    {
      "type": "html",
      "text": "\n4b) <b>Organize your patterns into sections.</b> Write a little introduction to each section that lists each pattern by name. You may find you need to adjust your linking paragraphs as you study the higher level structure of your patterns. Try to keep 4a and 4b fluid as you write. As you become more familiar with your patterns you may find that they organize themselves.",
      "id": "e04ebe3676b5b1ba2f4742e7c224c975"
    },
    {
      "type": "html",
      "text": "\n5) <b>Now write an introduction</b> to your pattern language that hints at the forces you will be addressing. Pick a good name too. And send a summary to the \"patterns\" mail list.",
      "id": "c5849c7fb2e07fe8f7480a95d7fea46b"
    },
    {
      "type": "paragraph",
      "text": "\nSo, that's my formula. I think you'll find that even a sketchy pattern will stand better with other patterns around it. Now here is the promised summary of my CHECKS pattern language. This is offered for the immediate use of members of this list and should not be considered publication. Good luck with your writing. -- [[Ward Cunningham]]",
      "id": "78e40178a06303da20d5b2283ef1d341"
    },
    {
      "type": "html",
      "text": "<i>Look for CHECKS at [http://c2.com/ppr/checks.html c2.com]</i>.",
      "id": "0a84ba8156eccc9b8e2f7a6642d64f52"
    },
    {
      "type": "html",
      "text": "<i>See a recent companion piece, Tips for Editing Patterns. [http://c2.com/doc/TipsForEditors.html c2.com].</i>",
      "id": "b73b5ac0598fd576bf421bfc9c2da380"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1"
    },
    {
      "type": "paragraph",
      "id": "4e1d41f2c4ff1e89",
      "text": "Pattern languages describe an architectural school or style; have that school or style firmly in mind when working on each pattern and on the overall structure of the language."
    },
    {
      "type": "paragraph",
      "text": " Pattern languages are a [[Directed Acyclic Graph]] (DAG) of patterns. There are many meaningful paths through the DAG. Don't focus on the paths through the DAG, but on the relationships between adjacent patterns - that leaves the designer free to choose a suitable path.",
      "id": "d5e9be94d752daa3006787fe9f5521d5"
    },
    {
      "type": "paragraph",
      "text": " What are adjacent patterns? Each pattern's Context section should mention the patterns it presumes have been applied already as preconditions. Each pattern's [[Resulting Context]] section should suggest patterns that may follow to balance unbalanced forces.",
      "id": "1e7cf9ea9ad4b9b6f9dd7e65f0c6d3d6"
    },
    {
      "type": "paragraph",
      "text": " Individual patterns in a pattern language should encapsulate their own forces. That makes each pattern independent, so it can be applied independently of other patterns (without too much concern for the big picture at any given point). Good patterns should always be like this, but it's particularly important when the pattern is in a pattern language.",
      "id": "0676348bcbd98b4daa4577bef30fb247"
    },
    {
      "type": "paragraph",
      "text": " Try to make the patterns fit together in a way that no backtracking is necessary.",
      "id": "11332a38e8d15bdde38783adc50da834"
    },
    {
      "type": "paragraph",
      "text": " Use and reference existing patterns where possible, instead of writing your own.",
      "id": "77564fa643ae267dc934b5f97029f515"
    },
    {
      "type": "paragraph",
      "text": " Provide a good index; a graphical map of some kind is also very useful.",
      "id": "b223325c03f9b8a643532f3cdea36825"
    },
    {
      "type": "paragraph",
      "text": " Not every collection of related patterns is a [[Pattern Language]];  some are just a [[Pattern System]];  some are just a [[Pattern Catalog]]. Too often, things that are called patterns and pattern languages are just steps (rather than structure-preserving transformations) and recipes.  Don't try to make it a pattern language unless it is one.",
      "id": "2dd35bc1ff3de7a504d38b5f71884973"
    },
    {
      "type": "paragraph",
      "text": " You won't get the patterns right, or the structure right, the first time, or the second time, and probably not the tenth time. Writing good pattern languages is <i>hard</i> - have patience, iterate, and seek input and feedback.",
      "id": "0117afd0e5f3843d2a4bef0039ccdd8a"
    },
    {
      "type": "paragraph",
      "text": " A pattern language is literature. Write it to entice someone to read it. -- [[Jim Coplien]]",
      "id": "14e3c487f9cbdd9e0dbb842f52d03ea0"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1"
    },
    {
      "type": "paragraph",
      "text": "\nTwo comments on Cope's notes above:",
      "id": "121ff478d3359de225e960c73872cf9e"
    },
    {
      "type": "paragraph",
      "text": "(1) I'm not sure the graph of patterns in a pattern language is acyclic. It's certainly directed, though. For instance,  many of my patterns reference other patterns that in turn reference the original pattern. In this way the reader is free, as Cope suggests, to choose his own path through the language.",
      "id": "879d3ef0173f88ae1ef565813ec0b54d"
    },
    {
      "type": "html",
      "text": "<i>Right. Alexander's are all acyclic, and an acyclic graph is a desirable ideal. Software seems to need more iteration than houses do, so we maybe have more loops.  On the other hand, I'm having a hard time coming up with examples. Do you have one? -- [[Jim Coplien]]</i>",
      "id": "e8d2134d73868386b414cbdff8de7b16"
    },
    {
      "type": "html",
      "text": "I found one: in writing [[Patterns For Effective Use Cases]], we found that <b>a</b> use case is a completeSingleStory, each of whose individual steps might be a use case. There was therefore a recursive cycle from the step (forwardProgress) back up to completeSingleStory. At one point we had three such up-links, but found it terribly confusing. Essentially, there is only the one, so we dropped the other two. The reason was the recursion in the use case structure, which can be arbitrarily deep. Such an arbitrarily deep recursion doesn't occur in houses.",
      "id": "3d46e26f47fef509f70a4bacb51faf6e"
    },
    {
      "type": "html",
      "text": "(2) Even though you shouldn't concentrate on the paths through the language you should probably make sure that there IS at least one path through the language. Remember that some people will take the linear approach to reading a pattern language. The linear read-it-from-cover-to-cover approach should at the very least be a valid path through the language.",
      "id": "564c4fe4a74653963e8798250ede0ba4"
    },
    {
      "type": "html",
      "text": "<i>Kyle, if that's true, how do you handle the case where one pattern suggests one of two alternative patterns as a follow-on? You can't do both. In general, the structure cannot be linearized. By breaking selective links in the DAG and doing a depth-first traversal, you come pretty close to an acceptable linearization. But if you get a perfect linearization, I'd bet it's a simple recipe, not a pattern language. -- [[Jim Coplien]]</i>",
      "id": "56ed7c4b641a28f001e7a2a048cabad6"
    },
    {
      "type": "paragraph",
      "text": "I think that the previous point about cycles helps in the linearization. Two alternatives can point back to each other - you read the first and then the second and then proceed. -- [[Kyle Brown]]",
      "id": "f3f2fc699b0638ff75a5a9428ab1e462"
    },
    {
      "type": "paragraph",
      "text": "I haven't undestand why Alexander's pattern language is described as acyclic. I've traced it (see on [http://manyeyes.alphaworks.ibm.com/manyeyes/visualizations/cristopher-alexander-patterns-lang manyeyes.alphaworks.ibm.com]), it have lots of cycles -- [[Michele Mauri]] ",
      "id": "b97dbe76ec0867c7bd363e6477862359"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1"
    },
    {
      "type": "html",
      "text": "The best pattern language I've ever studied is the original language, composed during eight long years by Christopher Alexander and his colleagues and called <i>A Pattern Language</i>. If you'd like to learn how to write great pattern languages, study the original pattern language. In it, you'll find great wisdom, communicated for laypersons using pictures, stories, quotes, sketches, and wonderfully written bold headlines. Consider how you feel after you read this book, and compare it with how you feel when you read other pattern languages. Do you get the same feeling?  Or is something missing from those other languages? If you can discern what is missing, you are well on your way to understanding what makes great pattern language truly great. And then you'll be ready to write your own. -- [[Joshua Kerievsky]]",
      "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1"
    },
    {
      "type": "paragraph",
      "text": "\nI just went through the process of making a presentation of the [[Soft Security]] [[Pattern Language]]. In the midst of doing this, I realized I had to organize the patterns in a manner that my audience could progressively understand the ideas since the presentation is oral. Not only did this make the pattern language clearer for me, it also exposed new relationships between the patterns. Consequently, I've been linking the patterns/pages together on [[Meatball Wiki]] more tightly than before as I write the presentation. I also have the empty feeling that there are many, many missing patterns and concepts. I also have noticed my failure to research the patterns thoroughly, relying primarily on my experiences with [[Meatball Wiki]], [[Wiki Wiki]], and [[Kuro Shin]], each of which I've had an influence in. This is a serious violation of Pattern authorship. -- [[Sunir Shah]]",
      "id": "2e27536c41b8d0f73d12985a5dd5d082"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1"
    },
    {
      "type": "paragraph",
      "text": "[[Category Groups Of Patterns]]",
      "id": "149403b0b8f0db2ed72146414563150f"
    },
    {
      "type": "paragraph",
      "text": "See original on  [http://c2.com/cgi/wiki?TipsForWritingPatternLanguages c2.com]",
      "id": "4d2ecacba5d28f7a36d9cc566b799982"
    }
  ],
  "journal": [
    {
      "date": 1299722576000,
      "id": "e1e2c2566f8c3690e3c87b762c37f39d",
      "type": "create",
      "item": {
        "title": "Tips For Writing Pattern Languages",
        "story": [
          {
            "type": "paragraph",
            "text": "<i>This is a message originally sent by [[Ward Cunningham]] to the [[Patterns List]] in January 1994. I can't find it archived online anywhere. [[Steve Berczuk]] sent me an OCR'ed version he had, which I just cut and pasted in. -- [[Doug Lea]]</i>",
            "id": "1c2aaea6de649b26d6267d73290cefb9"
          },
          {
            "type": "paragraph",
            "text": "\nFriends - I'd like to encourage all of you to get your pattern pencils out and get to work on your submissions to the PLoP'94 conference. To that end, let me suggest a few steps that have helped me get something down on paper. Also, I've included the introduction and section headings from what I expect to be my own submission: a pattern language I call CHECKS. But first the steps...",
            "id": "afb3cd517d6c77f2a28ff1531c71f89e"
          },
          {
            "type": "paragraph",
            "text": "\n1) <b>Pick a whole area</b>, not just one idea. I like subject matter that is practical but seldom explored in a text book. You know, the kind of stuff you have to learn from your colleagues on the job. The discussion on the \"patterns\" list got me thinking about checking data.",
            "id": "aeffa51e008e9ce892fae7007fe664dc"
          },
          {
            "type": "paragraph",
            "text": "\n2) <b>Make a list of all the little things you have learned</b> through the years about the area. Imagine that your kid brother has just taken responsibility for this area on his first big job. You're getting together this weekend. What are you going to tell him. Make a list.",
            "id": "9b269a2d1116d5d0f089277d3b70a90f"
          },
          {
            "type": "paragraph",
            "text": "\n3) <b>Cast each item on your list as a solution</b>. I like to write a sentence with \"therefore\" in the middle. You will have to think a little deeper here to figure out the forces that bear on your solutions. It's ok to speculate. I find this to be a rewarding activity since I often find new reason for what I do.",
            "id": "e2a268526b06a61e5732b29681ddefcc"
          },
          {
            "type": "paragraph",
            "text": "\n4a) <b>Now write each item as a Pattern.</b> I've come to favor a four paragraph form where the second paragraph ends with the pivotal \"therefore:\". This is a good time to flip through Alexander's Pattern Language. I feel my work has always improved when I more closely mimic his style. I'm just now learning to make the first and last paragraphs carry weight. These are the ones that link a pattern with others in the language.",
            "id": "4b1851a455e4d76843c97492f9374976"
          },
          {
            "type": "paragraph",
            "text": "\n4b) <b>Organize your patterns into sections.</b> Write a little introduction to each section that lists each pattern by name. You may find you need to adjust your linking paragraphs as you study the higher level structure of your patterns. Try to keep 4a and 4b fluid as you write. As you become more familiar with your patterns you may find that they organize themselves.",
            "id": "e04ebe3676b5b1ba2f4742e7c224c975"
          },
          {
            "type": "paragraph",
            "text": "\n5) <b>Now write an introduction</b> to your pattern language that hints at the forces you will be addressing. Pick a good name too. And send a summary to the \"patterns\" mail list.",
            "id": "c5849c7fb2e07fe8f7480a95d7fea46b"
          },
          {
            "type": "paragraph",
            "text": "\nSo, that's my formula. I think you'll find that even a sketchy pattern will stand better with other patterns around it. Now here is the promised summary of my CHECKS pattern language. This is offered for the immediate use of members of this list and should not be considered publication. Good luck with your writing. -- [[Ward Cunningham]]",
            "id": "78e40178a06303da20d5b2283ef1d341"
          },
          {
            "type": "paragraph",
            "text": "<i>Look for CHECKS at [http://c2.com/ppr/checks.html c2.com]</i>.",
            "id": "0a84ba8156eccc9b8e2f7a6642d64f52"
          },
          {
            "type": "paragraph",
            "text": "<i>See a recent companion piece, [http://c2.com/doc/TipsForEditors.html c2.com].</i>",
            "id": "b73b5ac0598fd576bf421bfc9c2da380"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "d8a2c19d840be7e95daf53aaa76cdee1"
          },
          {
            "type": "paragraph",
            "text": " Pattern languages describe an architectural school or style; have that school or style firmly in mind when working on each pattern and on the overall structure of the language.",
            "id": "4988e8c77e191ba4b49237183302e6a9"
          },
          {
            "type": "paragraph",
            "text": " Pattern languages are a [[Directed Acyclic Graph]] (DAG) of patterns. There are many meaningful paths through the DAG. Don't focus on the paths through the DAG, but on the relationships between adjacent patterns - that leaves the designer free to choose a suitable path.",
            "id": "d5e9be94d752daa3006787fe9f5521d5"
          },
          {
            "type": "paragraph",
            "text": " What are adjacent patterns? Each pattern's Context section should mention the patterns it presumes have been applied already as preconditions. Each pattern's [[Resulting Context]] section should suggest patterns that may follow to balance unbalanced forces.",
            "id": "1e7cf9ea9ad4b9b6f9dd7e65f0c6d3d6"
          },
          {
            "type": "paragraph",
            "text": " Individual patterns in a pattern language should encapsulate their own forces. That makes each pattern independent, so it can be applied independently of other patterns (without too much concern for the big picture at any given point). Good patterns should always be like this, but it's particularly important when the pattern is in a pattern language.",
            "id": "0676348bcbd98b4daa4577bef30fb247"
          },
          {
            "type": "paragraph",
            "text": " Try to make the patterns fit together in a way that no backtracking is necessary.",
            "id": "11332a38e8d15bdde38783adc50da834"
          },
          {
            "type": "paragraph",
            "text": " Use and reference existing patterns where possible, instead of writing your own.",
            "id": "77564fa643ae267dc934b5f97029f515"
          },
          {
            "type": "paragraph",
            "text": " Provide a good index; a graphical map of some kind is also very useful.",
            "id": "b223325c03f9b8a643532f3cdea36825"
          },
          {
            "type": "paragraph",
            "text": " Not every collection of related patterns is a [[Pattern Language]];  some are just a [[Pattern System]];  some are just a [[Pattern Catalog]]. Too often, things that are called patterns and pattern languages are just steps (rather than structure-preserving transformations) and recipes.  Don't try to make it a pattern language unless it is one.",
            "id": "2dd35bc1ff3de7a504d38b5f71884973"
          },
          {
            "type": "paragraph",
            "text": " You won't get the patterns right, or the structure right, the first time, or the second time, and probably not the tenth time. Writing good pattern languages is <i>hard</i> - have patience, iterate, and seek input and feedback.",
            "id": "0117afd0e5f3843d2a4bef0039ccdd8a"
          },
          {
            "type": "paragraph",
            "text": " A pattern language is literature. Write it to entice someone to read it.",
            "id": "14e3c487f9cbdd9e0dbb842f52d03ea0"
          },
          {
            "type": "paragraph",
            "text": "-- [[Jim Coplien]]",
            "id": "e07b542282b2a487ccc2d91d92e3976f"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "d8a2c19d840be7e95daf53aaa76cdee1"
          },
          {
            "type": "paragraph",
            "text": "\nTwo comments on Cope's notes above:",
            "id": "121ff478d3359de225e960c73872cf9e"
          },
          {
            "type": "paragraph",
            "text": "(1) I'm not sure the graph of patterns in a pattern language is acyclic. It's certainly directed, though. For instance,  many of my patterns reference other patterns that in turn reference the original pattern. In this way the reader is free, as Cope suggests, to choose his own path through the language.",
            "id": "879d3ef0173f88ae1ef565813ec0b54d"
          },
          {
            "type": "paragraph",
            "text": "<i>Right. Alexander's are all acyclic, and an acyclic graph is a desirable ideal. Software seems to need more iteration than houses do, so we maybe have more loops.  On the other hand, I'm having a hard time coming up with examples. Do you have one? -- [[Jim Coplien]]</i>",
            "id": "e8d2134d73868386b414cbdff8de7b16"
          },
          {
            "type": "paragraph",
            "text": "I found one: in writing [[Patterns For Effective Use Cases]], we found that <b>a</b> use case is a completeSingleStory, each of whose individual steps might be a use case. There was therefore a recursive cycle from the step (forwardProgress) back up to completeSingleStory. At one point we had three such up-links, but found it terribly confusing. Essentially, there is only the one, so we dropped the other two. The reason was the recursion in the use case structure, which can be arbitrarily deep. Such an arbitrarily deep recursion doesn't occur in houses.",
            "id": "3d46e26f47fef509f70a4bacb51faf6e"
          },
          {
            "type": "paragraph",
            "text": "(2) Even though you shouldn't concentrate on the paths through the language you should probably make sure that there IS at least one path through the language. Remember that some people will take the linear approach to reading a pattern language. The linear read-it-from-cover-to-cover approach should at the very least be a valid path through the language.",
            "id": "564c4fe4a74653963e8798250ede0ba4"
          },
          {
            "type": "paragraph",
            "text": "<i>Kyle, if that's true, how do you handle the case where one pattern suggests one of two alternative patterns as a follow-on? You can't do both. In general, the structure cannot be linearized. By breaking selective links in the DAG and doing a depth-first traversal, you come pretty close to an acceptable linearization. But if you get a perfect linearization, I'd bet it's a simple recipe, not a pattern language. -- [[Jim Coplien]]</i>",
            "id": "56ed7c4b641a28f001e7a2a048cabad6"
          },
          {
            "type": "paragraph",
            "text": "I think that the previous point about cycles helps in the linearization. Two alternatives can point back to each other - you read the first and then the second and then proceed. -- [[Kyle Brown]]",
            "id": "f3f2fc699b0638ff75a5a9428ab1e462"
          },
          {
            "type": "paragraph",
            "text": "I haven't undestand why Alexander's pattern language is described as acyclic. I've traced it (see on [http://manyeyes.alphaworks.ibm.com/manyeyes/visualizations/cristopher-alexander-patterns-lang manyeyes.alphaworks.ibm.com]), it have lots of cycles -- [[Michele Mauri]] ",
            "id": "b97dbe76ec0867c7bd363e6477862359"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "d8a2c19d840be7e95daf53aaa76cdee1"
          },
          {
            "type": "paragraph",
            "text": "\nThe best pattern language I've ever studied is the original language, composed during 8 long years by Christopher Alexander and his colleagues and called <i>A Pattern Language</i>. If you'd like to learn how to write great pattern languages, study the original pattern language. In it, you'll find great wisdom, communicated for laypersons using pictures, stories, quotes, sketches, and wonderfully written bold headlines. Consider how you feel after you read this book, and compare it with how you feel when you read other pattern languages. Do you get the same feeling?  Or is something missing from those other languages? If you can discern what is missing, you are well on your way to understanding what makes great pattern language truly great. And then you'll be ready to write your own. -- [[Joshua Kerievsky]]",
            "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "d8a2c19d840be7e95daf53aaa76cdee1"
          },
          {
            "type": "paragraph",
            "text": "\nI just went through the process of making a presentation of the [[Soft Security]] [[Pattern Language]]. In the midst of doing this, I realized I had to organize the patterns in a manner that my audience could progressively understand the ideas since the presentation is oral. Not only did this make the pattern language clearer for me, it also exposed new relationships between the patterns. Consequently, I've been linking the patterns/pages together on [[Meatball Wiki]] more tightly than before as I write the presentation. I also have the empty feeling that there are many, many missing patterns and concepts. I also have noticed my failure to research the patterns thoroughly, relying primarily on my experiences with [[Meatball Wiki]], [[Wiki Wiki]], and [[Kuro Shin]], each of which I've had an influence in. This is a serious violation of Pattern authorship. -- [[Sunir Shah]]",
            "id": "2e27536c41b8d0f73d12985a5dd5d082"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "d8a2c19d840be7e95daf53aaa76cdee1"
          },
          {
            "type": "paragraph",
            "text": "[[Category Groups Of Patterns]]",
            "id": "149403b0b8f0db2ed72146414563150f"
          },
          {
            "type": "paragraph",
            "text": "See original on  [http://c2.com/cgi/wiki?TipsForWritingPatternLanguages c2.com]",
            "id": "4d2ecacba5d28f7a36d9cc566b799982"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "pattern.sfw.c2.com",
      "date": 1399140431745
    },
    {
      "type": "edit",
      "id": "b73b5ac0598fd576bf421bfc9c2da380",
      "item": {
        "type": "paragraph",
        "text": "<i>See a recent companion piece, Tips for Editing Patterns. [http://c2.com/doc/TipsForEditors.html c2.com].</i>",
        "id": "b73b5ac0598fd576bf421bfc9c2da380"
      },
      "date": 1399143591876
    },
    {
      "type": "remove",
      "id": "e07b542282b2a487ccc2d91d92e3976f",
      "date": 1399143761425
    },
    {
      "type": "edit",
      "id": "14e3c487f9cbdd9e0dbb842f52d03ea0",
      "item": {
        "type": "paragraph",
        "text": " A pattern language is literature. Write it to entice someone to read it. -- [[Jim Coplien]]",
        "id": "14e3c487f9cbdd9e0dbb842f52d03ea0"
      },
      "date": 1399143764198
    },
    {
      "type": "edit",
      "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6",
      "item": {
        "type": "paragraph",
        "text": "The best pattern language I've ever studied is the original language, composed during eight long years by Christopher Alexander and his colleagues and called <i>A Pattern Language</i>. If you'd like to learn how to write great pattern languages, study the original pattern language. In it, you'll find great wisdom, communicated for laypersons using pictures, stories, quotes, sketches, and wonderfully written bold headlines. Consider how you feel after you read this book, and compare it with how you feel when you read other pattern languages. Do you get the same feeling?  Or is something missing from those other languages? If you can discern what is missing, you are well on your way to understanding what makes great pattern language truly great. And then you'll be ready to write your own. -- [[Joshua Kerievsky]]",
        "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6"
      },
      "date": 1399143806942
    },
    {
      "item": {
        "type": "paragraph",
        "id": "3232d5e0e64de251",
        "text": ""
      },
      "id": "3232d5e0e64de251",
      "type": "add",
      "after": "1c2aaea6de649b26d6267d73290cefb9",
      "date": 1399143847023
    },
    {
      "type": "edit",
      "id": "3232d5e0e64de251",
      "item": {
        "type": "paragraph",
        "id": "3232d5e0e64de251",
        "text": "<h3> Advice"
      },
      "date": 1399143854242
    },
    {
      "item": {
        "type": "paragraph",
        "id": "beec556449f03242",
        "text": ""
      },
      "id": "beec556449f03242",
      "type": "add",
      "after": "b73b5ac0598fd576bf421bfc9c2da380",
      "date": 1399143864037
    },
    {
      "type": "remove",
      "id": "beec556449f03242",
      "date": 1399143868341
    },
    {
      "type": "edit",
      "id": "4988e8c77e191ba4b49237183302e6a9",
      "item": {
        "type": "paragraph",
        "text": "<h3> Discussion",
        "id": "4988e8c77e191ba4b49237183302e6a9"
      },
      "date": 1399143887652
    },
    {
      "item": {
        "type": "paragraph",
        "id": "4e1d41f2c4ff1e89",
        "text": "Pattern languages describe an architectural school or style; have that school or style firmly in mind when working on each pattern and on the overall structure of the language."
      },
      "id": "4e1d41f2c4ff1e89",
      "type": "add",
      "after": "4988e8c77e191ba4b49237183302e6a9",
      "date": 1399143888160
    },
    {
      "type": "remove",
      "id": "4988e8c77e191ba4b49237183302e6a9",
      "date": 1399143897507
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "paragraph",
        "text": "<h3> Discussion",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1399143902025
    },
    {
      "type": "edit",
      "id": "3232d5e0e64de251",
      "item": {
        "type": "html",
        "id": "3232d5e0e64de251",
        "text": "<h3> Advice"
      },
      "date": 1420949056131
    },
    {
      "type": "edit",
      "id": "1c2aaea6de649b26d6267d73290cefb9",
      "item": {
        "type": "paragraph",
        "text": "This is a message originally sent by [[Ward Cunningham]] to the [[Patterns List]] in January 1994. I can't find it archived online anywhere. [[Steve Berczuk]] sent me an OCR'ed version he had, which I just cut and pasted in. -- [[Doug Lea]]",
        "id": "1c2aaea6de649b26d6267d73290cefb9"
      },
      "date": 1420949066890
    },
    {
      "type": "edit",
      "id": "aeffa51e008e9ce892fae7007fe664dc",
      "item": {
        "type": "html",
        "text": "\n1) <b>Pick a whole area</b>, not just one idea. I like subject matter that is practical but seldom explored in a text book. You know, the kind of stuff you have to learn from your colleagues on the job. The discussion on the \"patterns\" list got me thinking about checking data.",
        "id": "aeffa51e008e9ce892fae7007fe664dc"
      },
      "date": 1420949072192
    },
    {
      "type": "edit",
      "id": "9b269a2d1116d5d0f089277d3b70a90f",
      "item": {
        "type": "html",
        "text": "\n2) <b>Make a list of all the little things you have learned</b> through the years about the area. Imagine that your kid brother has just taken responsibility for this area on his first big job. You're getting together this weekend. What are you going to tell him. Make a list.",
        "id": "9b269a2d1116d5d0f089277d3b70a90f"
      },
      "date": 1420949073489
    },
    {
      "type": "edit",
      "id": "e2a268526b06a61e5732b29681ddefcc",
      "item": {
        "type": "html",
        "text": "\n3) <b>Cast each item on your list as a solution</b>. I like to write a sentence with \"therefore\" in the middle. You will have to think a little deeper here to figure out the forces that bear on your solutions. It's ok to speculate. I find this to be a rewarding activity since I often find new reason for what I do.",
        "id": "e2a268526b06a61e5732b29681ddefcc"
      },
      "date": 1420949074762
    },
    {
      "type": "edit",
      "id": "4b1851a455e4d76843c97492f9374976",
      "item": {
        "type": "html",
        "text": "\n4a) <b>Now write each item as a Pattern.</b> I've come to favor a four paragraph form where the second paragraph ends with the pivotal \"therefore:\". This is a good time to flip through Alexander's Pattern Language. I feel my work has always improved when I more closely mimic his style. I'm just now learning to make the first and last paragraphs carry weight. These are the ones that link a pattern with others in the language.",
        "id": "4b1851a455e4d76843c97492f9374976"
      },
      "date": 1420949076038
    },
    {
      "type": "edit",
      "id": "e04ebe3676b5b1ba2f4742e7c224c975",
      "item": {
        "type": "html",
        "text": "\n4b) <b>Organize your patterns into sections.</b> Write a little introduction to each section that lists each pattern by name. You may find you need to adjust your linking paragraphs as you study the higher level structure of your patterns. Try to keep 4a and 4b fluid as you write. As you become more familiar with your patterns you may find that they organize themselves.",
        "id": "e04ebe3676b5b1ba2f4742e7c224c975"
      },
      "date": 1420949078056
    },
    {
      "type": "edit",
      "id": "c5849c7fb2e07fe8f7480a95d7fea46b",
      "item": {
        "type": "html",
        "text": "\n5) <b>Now write an introduction</b> to your pattern language that hints at the forces you will be addressing. Pick a good name too. And send a summary to the \"patterns\" mail list.",
        "id": "c5849c7fb2e07fe8f7480a95d7fea46b"
      },
      "date": 1420949080512
    },
    {
      "type": "edit",
      "id": "0a84ba8156eccc9b8e2f7a6642d64f52",
      "item": {
        "type": "html",
        "text": "<i>Look for CHECKS at [http://c2.com/ppr/checks.html c2.com]</i>.",
        "id": "0a84ba8156eccc9b8e2f7a6642d64f52"
      },
      "date": 1420949083491
    },
    {
      "type": "edit",
      "id": "b73b5ac0598fd576bf421bfc9c2da380",
      "item": {
        "type": "html",
        "text": "<i>See a recent companion piece, Tips for Editing Patterns. [http://c2.com/doc/TipsForEditors.html c2.com].</i>",
        "id": "b73b5ac0598fd576bf421bfc9c2da380"
      },
      "date": 1420949085070
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<h3> Discussion",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949086689
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949095372
    },
    {
      "type": "edit",
      "id": "e8d2134d73868386b414cbdff8de7b16",
      "item": {
        "type": "html",
        "text": "<i>Right. Alexander's are all acyclic, and an acyclic graph is a desirable ideal. Software seems to need more iteration than houses do, so we maybe have more loops.  On the other hand, I'm having a hard time coming up with examples. Do you have one? -- [[Jim Coplien]]</i>",
        "id": "e8d2134d73868386b414cbdff8de7b16"
      },
      "date": 1420949098537
    },
    {
      "type": "edit",
      "id": "3d46e26f47fef509f70a4bacb51faf6e",
      "item": {
        "type": "html",
        "text": "I found one: in writing [[Patterns For Effective Use Cases]], we found that <b>a</b> use case is a completeSingleStory, each of whose individual steps might be a use case. There was therefore a recursive cycle from the step (forwardProgress) back up to completeSingleStory. At one point we had three such up-links, but found it terribly confusing. Essentially, there is only the one, so we dropped the other two. The reason was the recursion in the use case structure, which can be arbitrarily deep. Such an arbitrarily deep recursion doesn't occur in houses.",
        "id": "3d46e26f47fef509f70a4bacb51faf6e"
      },
      "date": 1420949101551
    },
    {
      "type": "edit",
      "id": "564c4fe4a74653963e8798250ede0ba4",
      "item": {
        "type": "html",
        "text": "(2) Even though you shouldn't concentrate on the paths through the language you should probably make sure that there IS at least one path through the language. Remember that some people will take the linear approach to reading a pattern language. The linear read-it-from-cover-to-cover approach should at the very least be a valid path through the language.",
        "id": "564c4fe4a74653963e8798250ede0ba4"
      },
      "date": 1420949104112
    },
    {
      "type": "edit",
      "id": "56ed7c4b641a28f001e7a2a048cabad6",
      "item": {
        "type": "html",
        "text": "<i>Kyle, if that's true, how do you handle the case where one pattern suggests one of two alternative patterns as a follow-on? You can't do both. In general, the structure cannot be linearized. By breaking selective links in the DAG and doing a depth-first traversal, you come pretty close to an acceptable linearization. But if you get a perfect linearization, I'd bet it's a simple recipe, not a pattern language. -- [[Jim Coplien]]</i>",
        "id": "56ed7c4b641a28f001e7a2a048cabad6"
      },
      "date": 1420949106909
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949110225
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949113239
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949115906
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949193464
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949222732
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949228297
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949231346
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949233567
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949322179
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949332340
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949335587
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1420949338643
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1488654481149
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1488654486359
    },
    {
      "type": "edit",
      "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6",
      "item": {
        "type": "html",
        "text": "The best pattern language I've ever studied is the original language, composed during eight long years by Christopher Alexander and his colleagues and called <i>A Pattern Language</i>. If you'd like to learn how to write great pattern languages, study the original pattern language. In it, you'll find great wisdom, communicated for laypersons using pictures, stories, quotes, sketches, and wonderfully written bold headlines. Consider how you feel after you read this book, and compare it with how you feel when you read other pattern languages. Do you get the same feeling?  Or is something missing from those other languages? If you can discern what is missing, you are well on your way to understanding what makes great pattern language truly great. And then you'll be ready to write your own. -- [[Joshua Kerievsky]]",
        "id": "53b4ed12e3ab6f35fcdb4411de9ee6d6"
      },
      "date": 1488654490525
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1488654493406
    },
    {
      "type": "edit",
      "id": "d8a2c19d840be7e95daf53aaa76cdee1",
      "item": {
        "type": "html",
        "text": "<hr>",
        "id": "d8a2c19d840be7e95daf53aaa76cdee1"
      },
      "date": 1488654498058
    },
    {
      "type": "fork",
      "site": "checks.fed.wiki.org",
      "date": 1518589406981
    },
    {
      "type": "fork",
      "site": "robert.tries.fed.wiki",
      "date": 1636051189949
    },
    {
      "type": "edit",
      "id": "afb3cd517d6c77f2a28ff1531c71f89e",
      "item": {
        "type": "paragraph",
        "text": "Friends - I'd like to encourage all of you to get your pattern pencils out and get to work on your submissions to the PLoP'94 conference. To that end, let me suggest a few steps that have helped me get something down on paper. Also, I've included the introduction and section headings from what I expect to be my own submission: a pattern language I call [[CHECKS]]. But first the steps...",
        "id": "afb3cd517d6c77f2a28ff1531c71f89e"
      },
      "date": 1707042154977
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707042359678
    },
    {
      "type": "edit",
      "id": "e2a268526b06a61e5732b29681ddefcc",
      "item": {
        "type": "html",
        "text": "3) <b>Cast each item on your list as a solution</b>. I like to write a sentence with \"[[Therefore]]\" in the middle. You will have to think a little deeper here to figure out the forces that bear on your solutions. It's ok to speculate. I find this to be a rewarding activity since I often find new reason for what I do.",
        "id": "e2a268526b06a61e5732b29681ddefcc"
      },
      "date": 1707048229108
    }
  ]
}