{
  "title": "Passing Data between Scopes",
  "story": [
    {
      "type": "paragraph",
      "id": "daebeb89b4b3ac7d",
      "text": "⇒ [[Computer Modeling]] ⇒ [[Stein Bråten]] ⇒ [[Simula]] ⇒ [[MDL (programming language)]]"
    },
    {
      "id": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
      "type": "markdown",
      "text": "MDL provides several enhancements to classic [[Lisp]].  It supports several built-in data types, including lists, strings and arrays, and user-defined data types.  It offers [[Thread (computing)]] expression evaluation and [[coroutine]]s. [[Variable (computer science)]]s can carry both a local value within a scope, and a global value, for passing data between scopes. Advanced built-in functions supported interactive [[debugging]] of MDL programs, incremental [[Software development]], and reconstruction of source programs from object programs."
    },
    {
      "type": "pagefold",
      "id": "3fa74923e1941edc",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "898e3281e4eeb582",
      "text": "⇒ [[Vector Exchange]]"
    },
    {
      "type": "paragraph",
      "id": "c711c2e60631ea98",
      "text": "Again, the publisher-subscriber scheme is used to pass data asynchronously. However, rather than passing data between stages, it is used to pass data between different data scopes."
    },
    {
      "type": "paragraph",
      "id": "031aaef83f30b65c",
      "text": "HOANG, Roger, TANNA, Devyani, JAYET BRAY, Laurence, DASCALU, Sergiu and HARRIS, Frederick, 2013. A novel CPU/GPU simulation environment for large-scale biologically realistic neural modeling. Frontiers in Neuroinformatics. Online. 2013. Vol. 7. [Accessed 28 March 2023]. Available from: https://www.frontiersin.org/articles/10.3389/fninf.2013.00019"
    },
    {
      "type": "paragraph",
      "id": "3e50d4e20c70b03d",
      "text": "[[Computational Neuroscience]] is an emerging field that provides unique opportunities to study complex brain structures through realistic neural simulations. However, as biological details are added to models, the execution time for the simulation becomes longer. Graphics Processing Units (GPUs) are now being utilized to accelerate simulations due to their ability to perform computations in parallel. As such, they have shown significant improvement in execution time compared to Central Processing Units (CPUs). Most neural simulators utilize either multiple CPUs or a single GPU for better performance, but still show limitations in execution time when biological details are not sacrificed. Therefore, we present a novel CPU/GPU simulation environment for large-scale biological networks, the NeoCortical Simulator version 6 (NCS6). NCS6 is a free, open-source, parallelizable, and scalable simulator, designed to run on clusters of multiple machines, potentially with high performance computing devices in each of them. It has built-in leaky-integrate-and-fire (LIF) and Izhikevich (IZH) neuron models, but users also have the capability to design their own plug-in interface for different neuron types as desired. NCS6 is currently able to simulate one million cells and 100 million synapses in quasi real time by distributing data across eight machines with each having two video cards.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Passing Data between Scopes",
        "story": []
      },
      "date": 1679986239803
    },
    {
      "item": {
        "type": "factory",
        "id": "daebeb89b4b3ac7d"
      },
      "id": "daebeb89b4b3ac7d",
      "type": "add",
      "date": 1679986245355
    },
    {
      "type": "edit",
      "id": "daebeb89b4b3ac7d",
      "item": {
        "type": "paragraph",
        "id": "daebeb89b4b3ac7d",
        "text": "⇒ [[Computer Modeling]] ⇒ [[Stein Bråten]] ⇒ [[Simula]] ⇒ [[MDL (programming language)]]"
      },
      "date": 1679986246689
    },
    {
      "id": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
      "type": "add",
      "item": {
        "id": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
        "type": "markdown",
        "text": "MDL provides several enhancements to classic Lisp.  It supports several built-in data types, including lists, strings and arrays, and user-defined data types.  It offers [[Thread (computing)]] expression evaluation and [[coroutine]]s. [[Variable (computer science)]]s can carry both a local value within a scope, and a global value, for passing data between scopes. Advanced built-in functions supported interactive [[debugging]] of MDL programs, incremental [[Software development]], and reconstruction of source programs from object programs."
      },
      "after": "daebeb89b4b3ac7d",
      "attribution": {
        "page": "2023-03-28"
      },
      "date": 1679986249753
    },
    {
      "type": "edit",
      "id": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
      "item": {
        "id": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
        "type": "markdown",
        "text": "MDL provides several enhancements to classic [[Lisp]].  It supports several built-in data types, including lists, strings and arrays, and user-defined data types.  It offers [[Thread (computing)]] expression evaluation and [[coroutine]]s. [[Variable (computer science)]]s can carry both a local value within a scope, and a global value, for passing data between scopes. Advanced built-in functions supported interactive [[debugging]] of MDL programs, incremental [[Software development]], and reconstruction of source programs from object programs."
      },
      "date": 1679986261480
    },
    {
      "item": {
        "type": "factory",
        "id": "3fa74923e1941edc"
      },
      "id": "3fa74923e1941edc",
      "type": "add",
      "after": "314f47d5-1aa9-4531-905f-f43ef0b2ec9c",
      "date": 1679986423905
    },
    {
      "type": "edit",
      "id": "3fa74923e1941edc",
      "item": {
        "type": "pagefold",
        "id": "3fa74923e1941edc",
        "text": "~"
      },
      "date": 1679986426521
    },
    {
      "item": {
        "type": "factory",
        "id": "898e3281e4eeb582"
      },
      "id": "898e3281e4eeb582",
      "type": "add",
      "after": "3fa74923e1941edc",
      "date": 1679986428220
    },
    {
      "type": "edit",
      "id": "898e3281e4eeb582",
      "item": {
        "type": "paragraph",
        "id": "898e3281e4eeb582",
        "text": "Again, the publisher-subscriber scheme is used to pass data asynchronously. However, rather than passing data between stages, it is used to pass data between different data scopes."
      },
      "date": 1679986430391
    },
    {
      "item": {
        "type": "factory",
        "id": "031aaef83f30b65c"
      },
      "id": "031aaef83f30b65c",
      "type": "add",
      "after": "898e3281e4eeb582",
      "date": 1679986441032
    },
    {
      "type": "edit",
      "id": "031aaef83f30b65c",
      "item": {
        "type": "paragraph",
        "id": "031aaef83f30b65c",
        "text": "\nHOANG, Roger, TANNA, Devyani, JAYET BRAY, Laurence, DASCALU, Sergiu and HARRIS, Frederick, 2013. A novel CPU/GPU simulation environment for large-scale biologically realistic neural modeling. Frontiers in Neuroinformatics. Online. 2013. Vol. 7. [Accessed 28 March 2023]. Available from: https://www.frontiersin.org/articles/10.3389/fninf.2013.00019Computational Neuroscience is an emerging field that provides unique opportunities to study complex brain structures through realistic neural simulations. However, as biological details are added to models, the execution time for the simulation becomes longer. Graphics Processing Units (GPUs) are now being utilized to accelerate simulations due to their ability to perform computations in parallel. As such, they have shown significant improvement in execution time compared to Central Processing Units (CPUs). Most neural simulators utilize either multiple CPUs or a single GPU for better performance, but still show limitations in execution time when biological details are not sacrificed. Therefore, we present a novel CPU/GPU simulation environment for large-scale biological networks, the NeoCortical Simulator version 6 (NCS6). NCS6 is a free, open-source, parallelizable, and scalable simulator, designed to run on clusters of multiple machines, potentially with high performance computing devices in each of them. It has built-in leaky-integrate-and-fire (LIF) and Izhikevich (IZH) neuron models, but users also have the capability to design their own plug-in interface for different neuron types as desired. NCS6 is currently able to simulate one million cells and 100 million synapses in quasi real time by distributing data across eight machines with each having two video cards.\n"
      },
      "date": 1679986442610
    },
    {
      "type": "edit",
      "id": "031aaef83f30b65c",
      "item": {
        "type": "paragraph",
        "id": "031aaef83f30b65c",
        "text": "HOANG, Roger, TANNA, Devyani, JAYET BRAY, Laurence, DASCALU, Sergiu and HARRIS, Frederick, 2013. A novel CPU/GPU simulation environment for large-scale biologically realistic neural modeling. Frontiers in Neuroinformatics. Online. 2013. Vol. 7. [Accessed 28 March 2023]. Available from: https://www.frontiersin.org/articles/10.3389/fninf.2013.00019"
      },
      "date": 1679986453503
    },
    {
      "type": "add",
      "id": "3e50d4e20c70b03d",
      "item": {
        "type": "paragraph",
        "id": "3e50d4e20c70b03d",
        "text": "Computational Neuroscience is an emerging field that provides unique opportunities to study complex brain structures through realistic neural simulations. However, as biological details are added to models, the execution time for the simulation becomes longer. Graphics Processing Units (GPUs) are now being utilized to accelerate simulations due to their ability to perform computations in parallel. As such, they have shown significant improvement in execution time compared to Central Processing Units (CPUs). Most neural simulators utilize either multiple CPUs or a single GPU for better performance, but still show limitations in execution time when biological details are not sacrificed. Therefore, we present a novel CPU/GPU simulation environment for large-scale biological networks, the NeoCortical Simulator version 6 (NCS6). NCS6 is a free, open-source, parallelizable, and scalable simulator, designed to run on clusters of multiple machines, potentially with high performance computing devices in each of them. It has built-in leaky-integrate-and-fire (LIF) and Izhikevich (IZH) neuron models, but users also have the capability to design their own plug-in interface for different neuron types as desired. NCS6 is currently able to simulate one million cells and 100 million synapses in quasi real time by distributing data across eight machines with each having two video cards.\n"
      },
      "after": "031aaef83f30b65c",
      "date": 1679986454404
    },
    {
      "type": "edit",
      "id": "3e50d4e20c70b03d",
      "item": {
        "type": "paragraph",
        "id": "3e50d4e20c70b03d",
        "text": "[[Computational Neuroscience]] is an emerging field that provides unique opportunities to study complex brain structures through realistic neural simulations. However, as biological details are added to models, the execution time for the simulation becomes longer. Graphics Processing Units (GPUs) are now being utilized to accelerate simulations due to their ability to perform computations in parallel. As such, they have shown significant improvement in execution time compared to Central Processing Units (CPUs). Most neural simulators utilize either multiple CPUs or a single GPU for better performance, but still show limitations in execution time when biological details are not sacrificed. Therefore, we present a novel CPU/GPU simulation environment for large-scale biological networks, the NeoCortical Simulator version 6 (NCS6). NCS6 is a free, open-source, parallelizable, and scalable simulator, designed to run on clusters of multiple machines, potentially with high performance computing devices in each of them. It has built-in leaky-integrate-and-fire (LIF) and Izhikevich (IZH) neuron models, but users also have the capability to design their own plug-in interface for different neuron types as desired. NCS6 is currently able to simulate one million cells and 100 million synapses in quasi real time by distributing data across eight machines with each having two video cards.\n"
      },
      "date": 1679986469873
    },
    {
      "type": "edit",
      "id": "898e3281e4eeb582",
      "item": {
        "type": "paragraph",
        "id": "898e3281e4eeb582",
        "text": "⇒ [[Vector Exchange]]"
      },
      "date": 1679986562714
    },
    {
      "type": "add",
      "id": "c711c2e60631ea98",
      "item": {
        "type": "paragraph",
        "id": "c711c2e60631ea98",
        "text": "Again, the publisher-subscriber scheme is used to pass data asynchronously. However, rather than passing data between stages, it is used to pass data between different data scopes."
      },
      "after": "898e3281e4eeb582",
      "date": 1679986563234
    }
  ]
}