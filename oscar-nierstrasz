{
  "title": "Oscar Nierstrasz",
  "story": [
    {
      "type": "markdown",
      "id": "4d5c7c4e453a7e27",
      "text": "[https://tube.switch.ch/profiles/41208 page]\n"
    },
    {
      "type": "markdown",
      "id": "11045674300264f1",
      "text": "# See also\n[[Moldable Development]]"
    },
    {
      "type": "pagefold",
      "id": "3df71dca616bc731",
      "text": "gt Discord"
    },
    {
      "type": "paragraph",
      "id": "c22a4deb5bf10159",
      "text": "[[Oscar Nierstrasz]] — [https://discord.com/channels/729445214812504107/729445215341117522/935817736368586752 discord]\n[…] each snippet is stored in the JSON file for the page that contains it. I am guessing an extension would be needed to refer to a \"remote\" snippet."
    },
    {
      "type": "pagefold",
      "id": "34ac35c9471be218",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "035e3dd31535319d",
      "text": "Oscar Nierstrasz — heute um 11:35 Uhr\nWell, @Ralf Barkow , a snippet does actually have aUID and you can retrieve it from the database, so I guess in principle it would be possible to have remote snippets. I'm just not sure how complicated that would be."
    },
    {
      "type": "html",
      "id": "2345928f012f1dc2",
      "text": "<center>\n  <img\n    width=\"100%\"\n    src=\"https://cdn.discordapp.com/attachments/729445215341117522/935845452404916274/Screenshot_2022-01-26_at_11.33.40.png\"\n  >\n</center>"
    },
    {
      "type": "pagefold",
      "id": "f39cacf2a4e33b89",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "838cc5d781dbb921",
      "text": "NIERSTRASZ, Oscar, 2023. PEGs, Packrats and Parser Combinators. [Accessed 28 April 2023]. [https://www.oscar.nierstrasz.org/teaching/2023-04-06-PEGs page]. This was a guest lecture held on Thursday April 6 for the Masters course on Compiler Construction offered by [[Timo Kehrer]] at the University of Bern.The lecture provides an introduction to Parsing Expression Grammars, as a well as a live demo using the PetitParser framework to build an interpreter for a toy programming language.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Oscar Nierstrasz",
        "story": []
      },
      "date": 1627387853236
    },
    {
      "item": {
        "type": "factory",
        "id": "4d5c7c4e453a7e27"
      },
      "id": "4d5c7c4e453a7e27",
      "type": "add",
      "date": 1627387854701
    },
    {
      "type": "edit",
      "id": "4d5c7c4e453a7e27",
      "item": {
        "type": "markdown",
        "id": "4d5c7c4e453a7e27",
        "text": "[https://tube.switch.ch/profiles/41208 page]"
      },
      "date": 1627387861925
    },
    {
      "type": "edit",
      "id": "4d5c7c4e453a7e27",
      "item": {
        "type": "markdown",
        "id": "4d5c7c4e453a7e27",
        "text": "[https://tube.switch.ch/profiles/41208 page]\n"
      },
      "date": 1627387910416
    },
    {
      "type": "add",
      "id": "11045674300264f1",
      "item": {
        "type": "markdown",
        "id": "11045674300264f1",
        "text": "# See also\n[[Moldable Development]]"
      },
      "after": "4d5c7c4e453a7e27",
      "date": 1627387930908
    },
    {
      "id": "c22a4deb5bf10159",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "c22a4deb5bf10159",
        "text": "[[Oscar Nierstrasz]] — heute um 09:45 Uhr [https://discord.com/channels/729445214812504107/729445215341117522/935817736368586752 discord]\nHm. I would guess not with the current implementation, because each snippet is stored in the JSON file for the page that contains it. I am guessing an extension would be needed to refer to a \"remote\" snippet."
      },
      "after": "11045674300264f1",
      "date": 1643191667755
    },
    {
      "item": {
        "type": "factory",
        "id": "3df71dca616bc731"
      },
      "id": "3df71dca616bc731",
      "type": "add",
      "after": "c22a4deb5bf10159",
      "date": 1643191669602
    },
    {
      "type": "edit",
      "id": "3df71dca616bc731",
      "item": {
        "type": "pagefold",
        "id": "3df71dca616bc731",
        "text": "Dic"
      },
      "date": 1643191676958
    },
    {
      "type": "edit",
      "id": "3df71dca616bc731",
      "item": {
        "type": "pagefold",
        "id": "3df71dca616bc731",
        "text": "gt Discord"
      },
      "date": 1643191684455
    },
    {
      "id": "4da3baf26bedc391",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4da3baf26bedc391",
        "text": "[[Oscar Nierstrasz]] — heute um 09:45 Uhr [https://discord.com/channels/729445214812504107/729445215341117522/935817736368586752 discord]\nHm. I would guess not with the current implementation, because each snippet is stored in the JSON file for the page that contains it. I am guessing an extension would be needed to refer to a \"remote\" snippet.",
        "alias": "c22a4deb5bf10159"
      },
      "after": "3df71dca616bc731",
      "date": 1643191690034
    },
    {
      "type": "remove",
      "id": "4da3baf26bedc391",
      "date": 1643191730529
    },
    {
      "type": "fork",
      "date": 1643191739320
    },
    {
      "id": "3df71dca616bc731",
      "type": "move",
      "order": [
        "4d5c7c4e453a7e27",
        "11045674300264f1",
        "3df71dca616bc731",
        "c22a4deb5bf10159"
      ],
      "date": 1643191745689
    },
    {
      "item": {
        "type": "pagefold",
        "id": "34ac35c9471be218",
        "text": "~"
      },
      "id": "34ac35c9471be218",
      "type": "add",
      "after": "c22a4deb5bf10159",
      "date": 1643194154376
    },
    {
      "type": "edit",
      "id": "34ac35c9471be218",
      "item": {
        "type": "pagefold",
        "id": "34ac35c9471be218",
        "text": "~"
      },
      "date": 1643194160699
    },
    {
      "item": {
        "type": "paragraph",
        "id": "035e3dd31535319d",
        "text": "Oscar Nierstrasz — heute um 11:35 Uhr\nWell, @Ralf Barkow , a snippet does actually have aUID and you can retrieve it from the database, so I guess in principle it would be possible to have remote snippets. I'm just not sure how complicated that would be."
      },
      "id": "035e3dd31535319d",
      "type": "add",
      "after": "34ac35c9471be218",
      "date": 1643194162023
    },
    {
      "type": "edit",
      "id": "035e3dd31535319d",
      "item": {
        "type": "paragraph",
        "id": "035e3dd31535319d",
        "text": "Oscar Nierstrasz — heute um 11:35 Uhr\nWell, @Ralf Barkow , a snippet does actually have aUID and you can retrieve it from the database, so I guess in principle it would be possible to have remote snippets. I'm just not sure how complicated that would be."
      },
      "date": 1643194164536
    },
    {
      "item": {
        "type": "html",
        "id": "2345928f012f1dc2",
        "text": "<center>\n  <img\n    width=\"100%\"\n    src=\"https://cdn.discordapp.com/attachments/729445215341117522/935845452404916274/Screenshot_2022-01-26_at_11.33.40.png\"\n  >\n</center>"
      },
      "id": "2345928f012f1dc2",
      "type": "add",
      "after": "035e3dd31535319d",
      "date": 1643194175231
    },
    {
      "type": "edit",
      "id": "2345928f012f1dc2",
      "item": {
        "type": "html",
        "id": "2345928f012f1dc2",
        "text": "<center>\n  <img\n    width=\"100%\"\n    src=\"https://cdn.discordapp.com/attachments/729445215341117522/935845452404916274/Screenshot_2022-01-26_at_11.33.40.png\"\n  >\n</center>"
      },
      "date": 1643194200181
    },
    {
      "type": "fork",
      "date": 1643194226398
    },
    {
      "type": "edit",
      "id": "c22a4deb5bf10159",
      "item": {
        "type": "paragraph",
        "id": "c22a4deb5bf10159",
        "text": "[[Oscar Nierstrasz]] — [https://discord.com/channels/729445214812504107/729445215341117522/935817736368586752 discord]\nHm. I would guess not with the current implementation, because each snippet is stored in the JSON file for the page that contains it. I am guessing an extension would be needed to refer to a \"remote\" snippet."
      },
      "date": 1684217267647
    },
    {
      "type": "edit",
      "id": "c22a4deb5bf10159",
      "item": {
        "type": "paragraph",
        "id": "c22a4deb5bf10159",
        "text": "[[Oscar Nierstrasz]] — [https://discord.com/channels/729445214812504107/729445215341117522/935817736368586752 discord]\n[…] each snippet is stored in the JSON file for the page that contains it. I am guessing an extension would be needed to refer to a \"remote\" snippet."
      },
      "date": 1684217296515
    },
    {
      "item": {
        "type": "factory",
        "id": "f39cacf2a4e33b89"
      },
      "id": "f39cacf2a4e33b89",
      "type": "add",
      "after": "2345928f012f1dc2",
      "date": 1684217446276
    },
    {
      "type": "edit",
      "id": "f39cacf2a4e33b89",
      "item": {
        "type": "pagefold",
        "id": "f39cacf2a4e33b89",
        "text": "~"
      },
      "date": 1684217450734
    },
    {
      "id": "838cc5d781dbb921",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "838cc5d781dbb921",
        "text": "NIERSTRASZ, Oscar, 2023. PEGs, Packrats and Parser Combinators. [[Oscar Nierstrasz]]. Online. 6 April 2023. [Accessed 28 April 2023]. Available from: https://www.oscar.nierstrasz.org/teaching/2023-04-06-PEGs This was a guest lecture held on Thursday April 6 for the Masters course on Compiler Construction offered by [[Timo Kehrer]] at the University of Bern.The lecture provides an introduction to Parsing Expression Grammars, as a well as a live demo using the PetitParser framework to build an interpreter for a toy programming language.\n"
      },
      "after": "f39cacf2a4e33b89",
      "attribution": {
        "page": "2023-05-16"
      },
      "date": 1684217460146
    },
    {
      "type": "edit",
      "id": "838cc5d781dbb921",
      "item": {
        "type": "paragraph",
        "id": "838cc5d781dbb921",
        "text": "NIERSTRASZ, Oscar, 2023. PEGs, Packrats and Parser Combinators. Online. 6 April 2023. [Accessed 28 April 2023]. Available from: https://www.oscar.nierstrasz.org/teaching/2023-04-06-PEGs This was a guest lecture held on Thursday April 6 for the Masters course on Compiler Construction offered by [[Timo Kehrer]] at the University of Bern.The lecture provides an introduction to Parsing Expression Grammars, as a well as a live demo using the PetitParser framework to build an interpreter for a toy programming language.\n"
      },
      "date": 1684217475120
    },
    {
      "type": "edit",
      "id": "838cc5d781dbb921",
      "item": {
        "type": "paragraph",
        "id": "838cc5d781dbb921",
        "text": "NIERSTRASZ, Oscar, 2023. PEGs, Packrats and Parser Combinators. [Accessed 28 April 2023]. [https://www.oscar.nierstrasz.org/teaching/2023-04-06-PEGs page]. This was a guest lecture held on Thursday April 6 for the Masters course on Compiler Construction offered by [[Timo Kehrer]] at the University of Bern.The lecture provides an introduction to Parsing Expression Grammars, as a well as a live demo using the PetitParser framework to build an interpreter for a toy programming language.\n"
      },
      "date": 1684217519668
    }
  ]
}