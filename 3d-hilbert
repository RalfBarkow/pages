{
  "title": "3D Hilbert",
  "story": [
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "There are many ways to generalize the Hilbert curve to three dimensions. We chose the approach that came with code. [https://stackoverflow.com/questions/14519267/algorithm-for-generating-a-3d-hilbert-space-filling-curve-in-python stackoverflow]"
    },
    {
      "type": "code",
      "id": "eacacf46f1503a2c",
      "text": "const s = .2    // size of box\nconst n = 2**2  // number of hilbert recursions\nlet k = 45      // down counting limit to boxes"
    },
    {
      "type": "paragraph",
      "id": "74b691fe7dcb4cbf",
      "text": "We had geometry, material and mesh to place boxes that came out of the hilbert function. Following that logic we drew a bar with all but the first box. "
    },
    {
      "type": "paragraph",
      "id": "ecfec51458dfd3b5",
      "text": "We sought help again positioning that bar in the right place and pointing it in the right direction. [https://stackoverflow.com/questions/15139649/three-js-two-points-one-cylinder-align-issue stackoverflow]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/2,s/2,1)\nbar.translate(0, 0, 1/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
    },
    {
      "type": "code",
      "id": "45e7b11f9d2f8298",
      "text": "h3(n,0,0,0,1,0,0,0,1,0,0,0,1)\nfunction h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,\n      dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,\n      x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,\n      -x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,\n      -dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,\n      z+s*dz+s*z2+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,\n      -x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}"
    },
    {
      "type": "code",
      "id": "d788856cdbe73431",
      "text": "controls.autoRotate = false\n"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/save.html\nHEIGHT 420"
    },
    {
      "type": "paragraph",
      "id": "e275e881bcf7ce21",
      "text": "control-drag to center image."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "3D Hilbert",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "Explain what this does."
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "// Code that does it.\n\nconst geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)\nscene.add(box)"
          },
          {
            "type": "code",
            "id": "d788856cdbe73431",
            "text": "tick = () => box.rotation.x += 0.02\ncontrols.autoRotate = true"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1639858139912
    },
    {
      "item": {
        "type": "factory",
        "id": "45e7b11f9d2f8298"
      },
      "id": "45e7b11f9d2f8298",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1639858153349
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "    function hilbertC(s, x, y, z, dx, dy, dz, dx2, dy2, dz2, dx3, dy3, dz3)\n    {\n        if(s==1)\n        {\n            red[m] = x;\n            green[m] = y;\n            blue[m] = z;\n            m++;\n        }\n        else\n        {\n            s/=2;\n            if(dx<0) x-=s*dx;\n            if(dy<0) y-=s*dy;\n            if(dz<0) z-=s*dz;\n            if(dx2<0) x-=s*dx2;\n            if(dy2<0) y-=s*dy2;\n            if(dz2<0) z-=s*dz2;\n            if(dx3<0) x-=s*dx3;\n            if(dy3<0) y-=s*dy3;\n            if(dz3<0) z-=s*dz3;\n            hilbertC(s, x, y, z, dx2, dy2, dz2, dx3, dy3, dz3, dx, dy, dz);\n            hilbertC(s, x+s*dx, y+s*dy, z+s*dz, dx3, dy3, dz3, dx, dy, dz, dx2, dy2, dz2);\n            hilbertC(s, x+s*dx+s*dx2, y+s*dy+s*dy2, z+s*dz+s*dz2, dx3, dy3, dz3, dx, dy, dz, dx2, dy2, dz2);\n            hilbertC(s, x+s*dx2, y+s*dy2, z+s*dz2, -dx, -dy, -dz, -dx2, -dy2, -dz2, dx3, dy3, dz3);\n            hilbertC(s, x+s*dx2+s*dx3, y+s*dy2+s*dy3, z+s*dz2+s*dz3, -dx, -dy, -dz, -dx2, -dy2, -dz2, dx3, dy3, dz3);\n            hilbertC(s, x+s*dx+s*dx2+s*dx3, y+s*dy+s*dy2+s*dy3, z+s*dz+s*dz2+s*dz3, -dx3, -dy3, -dz3, dx, dy, dz, -dx2, -dy2, -dz2);\n            hilbertC(s, x+s*dx+s*dx3, y+s*dy+s*dy3, z+s*dz+s*dz3, -dx3, -dy3, -dz3, dx, dy, dz, -dx2, -dy2, -dz2);\n            hilbertC(s, x+s*dx3, y+s*dy3, z+s*dz3, dx2, dy2, dz2, -dx3, -dy3, -dz3, -dx, -dy, -dz);\n        }\n    }"
      },
      "date": 1639858160566
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\n\nconst geo = new THREE.BoxGeometry(.5,.5,.5)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639883475961
    },
    {
      "type": "edit",
      "id": "d788856cdbe73431",
      "item": {
        "type": "code",
        "id": "d788856cdbe73431",
        "text": "controls.autoRotate = true"
      },
      "date": 1639883519273
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(.5,.5,.5)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639883536987
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s, x, y, z, dx, dy, dz, x2, y2, z2, x3, y3, z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s, x, y, z, x2, y2, z2, x3, y3, z3, dx, dy, dz);\n    h3(s, x+s*dx, y+s*dy, z+s*dz, x3, y3, z3, dx, dy, dz, x2, y2, z2);\n    h3(s, x+s*dx+s*x2, y+s*dy+s*y2, z+s*dz+s*z2, x3, y3, z3, dx, dy, dz, x2, y2, z2);\n    h3(s, x+s*x2, y+s*y2, z+s*z2, -dx, -dy, -dz, -x2, -y2, -z2, x3, y3, z3);\n    h3(s, x+s*x2+s*x3, y+s*y2+s*y3, z+s*z2+s*z3, -dx, -dy, -dz, -x2, -y2, -z2, x3, y3, z3);\n    h3(s, x+s*dx+s*x2+s*x3, y+s*dy+s*y2+s*y3, z+s*dz+s*z2+s*z3, -x3, -y3, -z3, dx, dy, dz, -x2, -y2, -z2);\n    h3(s, x+s*dx+s*x3, y+s*dy+s*y3, z+s*dz+s*z3, -x3, -y3, -z3, dx, dy, dz, -x2, -y2, -z2);\n    h3(s, x+s*x3, y+s*y3, z+s*z3, x2, y2, z2, -x3, -y3, -z3, -dx, -dy, -dz);\n  }\n}\n\nh3(Deno.args[2, 0,0,0, 1,0,0, 0,1,0, 0,0,1)\n"
      },
      "date": 1639883645568
    },
    {
      "id": "45e7b11f9d2f8298",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "45e7b11f9d2f8298",
        "d788856cdbe73431",
        "6cf52409eec3988c"
      ],
      "date": 1639883688698
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,z+s*dz+s*z2+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,-x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}\n\nh3(Deno.args[2,0,0,0,1,0,0,0,1,0,0,0,1)"
      },
      "date": 1639883750123
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(.5,.5,.5)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)\nconst box = point => {\n  let b = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(b)\n}"
      },
      "date": 1639883774651
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(.5,.5,.5)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let b = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(b)\n}"
      },
      "date": 1639883811895
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,z+s*dz+s*z2+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,-x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}\n\nh3(2,0,0,0,1,0,0,0,1,0,0,0,1)\n"
      },
      "date": 1639883882670
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(.5,.5,.5)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let b = new THREE.Mesh(geo, mat)\n  b.position.set(...point)\n  scene.add(b)\n}"
      },
      "date": 1639886708520
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(.2,.2,.2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let b = new THREE.Mesh(geo, mat)\n  b.position.set(...point)\n  scene.add(b)\n}"
      },
      "date": 1639886777096
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const s = .4\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639886846628
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,z+s*dz+s*z2+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,-x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}\n\nh3(4,0,0,0,1,0,0,0,1,0,0,0,1)\n"
      },
      "date": 1639886884774
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const s = .4\nconst n = 2**3\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639887064239
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,-dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,z+s*dz+s*z2+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,-x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,-x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}\n\nh3(n,0,0,0,1,0,0,0,1,0,0,0,1)\n"
      },
      "date": 1639887077639
    },
    {
      "type": "fork",
      "date": 1639888122917
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "There are many ways to generalize the Hilbert curve to three dimensions. We chose the approach that came with code. [https://stackoverflow.com/questions/14519267/algorithm-for-generating-a-3d-hilbert-space-filling-curve-in-python stackoverflow]"
      },
      "date": 1639888242079
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "function h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,\n      dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,\n      x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,\n      -x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,\n      -dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,\n      z+s*dz+s*z2+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,\n      -x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}\nh3(n,0,0,0,1,0,0,0,1,0,0,0,1)\n"
      },
      "date": 1639888385632
    },
    {
      "type": "edit",
      "id": "45e7b11f9d2f8298",
      "item": {
        "type": "code",
        "id": "45e7b11f9d2f8298",
        "text": "h3(n,0,0,0,1,0,0,0,1,0,0,0,1)\nfunction h3(s,x,y,z,dx,dy,dz,x2,y2,z2,x3,y3,z3){\n  if(s==1){\n    box([x,y,z])\n  } else {\n    s/=2;\n    if(dx<0) x-=s*dx;\n    if(dy<0) y-=s*dy;\n    if(dz<0) z-=s*dz;\n    if(x2<0) x-=s*x2;\n    if(y2<0) y-=s*y2;\n    if(z2<0) z-=s*z2;\n    if(x3<0) x-=s*x3;\n    if(y3<0) y-=s*y3;\n    if(z3<0) z-=s*z3;\n    h3(s,x,y,z,x2,y2,z2,x3,y3,z3,dx,dy,dz);\n    h3(s,x+s*dx,y+s*dy,z+s*dz,x3,y3,z3,\n      dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*dx+s*x2,y+s*dy+s*y2,z+s*dz+s*z2,\n      x3,y3,z3,dx,dy,dz,x2,y2,z2);\n    h3(s,x+s*x2,y+s*y2,z+s*z2,-dx,-dy,-dz,\n      -x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*x2+s*x3,y+s*y2+s*y3,z+s*z2+s*z3,\n      -dx,-dy,-dz,-x2,-y2,-z2,x3,y3,z3);\n    h3(s,x+s*dx+s*x2+s*x3,y+s*dy+s*y2+s*y3,\n      z+s*dz+s*z2+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*dx+s*x3,y+s*dy+s*y3,z+s*dz+s*z3,\n      -x3,-y3,-z3,dx,dy,dz,-x2,-y2,-z2);\n    h3(s,x+s*x3,y+s*y3,z+s*z3,x2,y2,z2,\n      -x3,-y3,-z3,-dx,-dy,-dz);\n  }\n}"
      },
      "date": 1639888466299
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const s = .4\nconst n = 2**2\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639888500469
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const s = .4\nconst n = 2**4\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639888551280
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(s,s,s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639888650179
    },
    {
      "item": {
        "type": "factory",
        "id": "eacacf46f1503a2c"
      },
      "id": "eacacf46f1503a2c",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1639888653462
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**4"
      },
      "date": 1639888660061
    },
    {
      "id": "eacacf46f1503a2c",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "eacacf46f1503a2c",
        "5eb6b67568179aa3",
        "45e7b11f9d2f8298",
        "d788856cdbe73431",
        "6cf52409eec3988c"
      ],
      "date": 1639888666121
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**2"
      },
      "date": 1639888885119
    },
    {
      "item": {
        "type": "factory",
        "id": "e275e881bcf7ce21"
      },
      "id": "e275e881bcf7ce21",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1639888934919
    },
    {
      "type": "edit",
      "id": "e275e881bcf7ce21",
      "item": {
        "type": "paragraph",
        "id": "e275e881bcf7ce21",
        "text": "control-drag to center image."
      },
      "date": 1639888955395
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(1,s/2,2/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639890187233
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/2,2/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639890238081
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/2,s/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1639890270248
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/2,s/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  if(last) box.lookAt(...last)\n  scene.add(box)\n  last = point\n}"
      },
      "date": 1639890489939
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  if(last) box.lookAt(...last)\n  scene.add(box)\n  last = point\n}"
      },
      "date": 1639890656967
    },
    {
      "type": "add",
      "id": "74b691fe7dcb4cbf",
      "item": {
        "type": "paragraph",
        "id": "74b691fe7dcb4cbf",
        "text": "We want to connect boxes with bars but haven't yet found the concise way to do this. [https://stackoverflow.com/questions/15139649/three-js-two-points-one-cylinder-align-issue stackoverflow]"
      },
      "after": "484e092159df2d01",
      "date": 1639890718139
    },
    {
      "id": "74b691fe7dcb4cbf",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "eacacf46f1503a2c",
        "74b691fe7dcb4cbf",
        "5eb6b67568179aa3",
        "45e7b11f9d2f8298",
        "d788856cdbe73431",
        "6cf52409eec3988c",
        "e275e881bcf7ce21"
      ],
      "date": 1639890721411
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  if(last) box.lookAt(...last)\n  scene.add(box)\n  last = point\n}"
      },
      "date": 1639890937176
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**1"
      },
      "date": 1639890975266
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(-s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  if(last) box.lookAt(...last)\n  scene.add(box)\n  last = point\n}"
      },
      "date": 1639891006543
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(-s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n  box = new THREE.Mesh(bar, mat)\n  box.position.set(...point)\n  box.lookAt(...last)\n  scene.add(box)\n  last = point\n}"
      },
      "date": 1639891210722
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(-s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n}"
      },
      "date": 1639891254407
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n}"
      },
      "date": 1639891533191
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**1\nlet k = 3"
      },
      "date": 1639891751604
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nif (k-- > 0) {\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639891820750
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639891869882
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    //box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639891945973
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*2,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    //box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892025227
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*1.5,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    //box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892147866
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s*1.5,s/3,s/3)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892180409
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/3,s/3,s*1.5)\nbar.translate(s, 0, 0)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892240689
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/3,s/3,s*1.5)\nbar.translate(0, 0, s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892281707
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**1\nlet k = 4"
      },
      "date": 1639892298675
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**1\nlet k = 999"
      },
      "date": 1639892322183
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**2\nlet k = 999"
      },
      "date": 1639892398072
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/3,s/3,s*2)\nbar.translate(0, 0, s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  console.log(point)\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892467206
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**2\nlet k = 20"
      },
      "date": 1639892556552
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/3,s/3,s*2)\nbar.translate(0, 0, s)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892703190
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**2\nlet k = 30"
      },
      "date": 1639892707502
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .4\nconst n = 2**2\nlet k = 45"
      },
      "date": 1639892735253
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .3\nconst n = 2**2\nlet k = 45"
      },
      "date": 1639892783531
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/3,s/3,1)\nbar.translate(0, 0, 1/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892824256
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .2\nconst n = 2**2\nlet k = 45"
      },
      "date": 1639892934065
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "let last = null\nconst geo = new THREE.BoxGeometry(s,s,s)\nconst bar = new THREE.BoxGeometry(s/2,s/2,1)\nbar.translate(0, 0, 1/2)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  if (k-- > 0) {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  if(last) {\n    box = new THREE.Mesh(bar, mat)\n    box.position.set(...last)\n    box.lookAt(...point)\n    scene.add(box)\n  }\n  last = point\n  }\n}"
      },
      "date": 1639892944075
    },
    {
      "type": "edit",
      "id": "74b691fe7dcb4cbf",
      "item": {
        "type": "paragraph",
        "id": "74b691fe7dcb4cbf",
        "text": "We had geometry, material and mesh to place boxes that came out of the hilbert function. Following that logic we drew a bar with all but the first box. "
      },
      "date": 1639928072566
    },
    {
      "type": "add",
      "id": "ecfec51458dfd3b5",
      "item": {
        "type": "paragraph",
        "id": "ecfec51458dfd3b5",
        "text": "We sought help again positioning that bar in the right place and pointing it in the right direction. [https://stackoverflow.com/questions/15139649/three-js-two-points-one-cylinder-align-issue stackoverflow]"
      },
      "after": "74b691fe7dcb4cbf",
      "date": 1639928137533
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .2.   // size of box\nconst n = 2**2\nlet k = 45"
      },
      "date": 1639928194190
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .2.   // size of box\nconst n = 2**2. // number of hilbert recursions\nlet k = 45      // down counting limit to boxes"
      },
      "date": 1639928337770
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .2.   // size of box\nconst n = 2**2  // number of hilbert recursions\nlet k = 45      // down counting limit to boxes"
      },
      "date": 1639928418574
    },
    {
      "type": "edit",
      "id": "eacacf46f1503a2c",
      "item": {
        "type": "code",
        "id": "eacacf46f1503a2c",
        "text": "const s = .2    // size of box\nconst n = 2**2  // number of hilbert recursions\nlet k = 45      // down counting limit to boxes"
      },
      "date": 1639928442912
    },
    {
      "id": "6cf52409eec3988c",
      "type": "remove",
      "date": 1639936442915
    },
    {
      "id": "6cf52409eec3988c",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
      },
      "after": "e275e881bcf7ce21",
      "date": 1639936451329
    },
    {
      "id": "e275e881bcf7ce21",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "eacacf46f1503a2c",
        "74b691fe7dcb4cbf",
        "ecfec51458dfd3b5",
        "5eb6b67568179aa3",
        "45e7b11f9d2f8298",
        "d788856cdbe73431",
        "6cf52409eec3988c",
        "e275e881bcf7ce21"
      ],
      "date": 1639952810667
    },
    {
      "type": "fork",
      "date": 1639962668114
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html\nHEIGHT 400"
      },
      "date": 1639966112668
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html/\nHEIGHT 400"
      },
      "date": 1639967772158
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html\nHEIGHT 400"
      },
      "date": 1639967779404
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html\nHEIGHT 420"
      },
      "date": 1639967912588
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/save.html\nHEIGHT 420"
      },
      "date": 1639968066893
    },
    {
      "type": "edit",
      "id": "d788856cdbe73431",
      "item": {
        "type": "code",
        "id": "d788856cdbe73431",
        "text": "controls.autoRotate = false\n"
      },
      "date": 1648833782305
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233497391
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/save.html\nHEIGHT 420"
      },
      "date": 1675234078414
    }
  ]
}