{
  "title": "multiComment",
  "story": [
    {
      "type": "paragraph",
      "id": "afae66717216d4c3",
      "text": "We intend to 'abuse' the multiComment parser [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace) to [[Parse Wiki-Style Links]]. "
    },
    {
      "type": "code",
      "id": "2c6d600a1d85831a",
      "text": "multiComment : String -> String -> Nestable -> Parser ()"
    },
    {
      "type": "paragraph",
      "id": "3d9e9fc43bc79ae5",
      "text": "Parse multi-line comments. So if you wanted to parse Elm whitespace or JS whitespace, you could say:\n\n"
    },
    {
      "type": "code",
      "id": "29523afeaa9309df",
      "text": "elm : Parser ()\nelm =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"--\"\n      , multiComment \"{-\" \"-}\" Nestable\n      , spaces\n      ]\n\njs : Parser ()\njs =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"//\"\n      , multiComment \"/*\" \"*/\" NotNestable\n      , chompWhile (\\c -> c == ' ' || c == '\\n' || c == '\\r' || c == '\\t')\n      ]\n\nifProgress : Parser a -> Int -> Parser (Step Int ())\nifProgress parser offset =\n  succeed identity\n    |. parser\n    |= getOffset\n    |> map (\\newOffset -> if offset == newOffset then Done () else Loop newOffset)"
    },
    {
      "type": "paragraph",
      "id": "afb623c32c39d3ea",
      "text": "Note: The fact that spaces comes last in the definition of elm is very important! It can succeed without consuming any characters, so if it were the first option, it would always succeed and bypass the others! (Same is true of chompWhile in js.) This possibility of success without consumption is also why wee need the ifProgress helper. It detects if there is no more whitespace to consume."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "multiComment",
        "story": []
      },
      "date": 1696425712560
    },
    {
      "id": "afae66717216d4c3",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "Idea: 'Abuse' multiComment parser for wiki style links."
      },
      "date": 1696425731110
    },
    {
      "id": "2c6d600a1d85831a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "2c6d600a1d85831a",
        "text": "multiComment : String -> String -> Nestable -> Parser ()"
      },
      "after": "afae66717216d4c3",
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696425745042
    },
    {
      "id": "96e1c97f16d84df1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "96e1c97f16d84df1",
        "text": "â‡’ [[multiComment]] [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page]"
      },
      "after": "afae66717216d4c3",
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696425759044
    },
    {
      "type": "remove",
      "id": "96e1c97f16d84df1",
      "date": 1696425763544
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "Idea: 'Abuse' multiComment parser for wiki style links. [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page]"
      },
      "date": 1696425765236
    },
    {
      "id": "3d9e9fc43bc79ae5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3d9e9fc43bc79ae5",
        "text": "Parse multi-line comments. So if you wanted to parse Elm whitespace or JS whitespace, you could say:\n\n"
      },
      "after": "2c6d600a1d85831a",
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696425790810
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "Idea: 'Abuse' multiComment parser for wiki style links. [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace)"
      },
      "date": 1696425802043
    },
    {
      "id": "29523afeaa9309df",
      "type": "add",
      "item": {
        "type": "code",
        "id": "29523afeaa9309df",
        "text": "elm : Parser ()\nelm =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"--\"\n      , multiComment \"{-\" \"-}\" Nestable\n      , spaces\n      ]\n\njs : Parser ()\njs =\n  loop 0 <| ifProgress <|\n    oneOf\n      [ lineComment \"//\"\n      , multiComment \"/*\" \"*/\" NotNestable\n      , chompWhile (\\c -> c == ' ' || c == '\\n' || c == '\\r' || c == '\\t')\n      ]\n\nifProgress : Parser a -> Int -> Parser (Step Int ())\nifProgress parser offset =\n  succeed identity\n    |. parser\n    |= getOffset\n    |> map (\\newOffset -> if offset == newOffset then Done () else Loop newOffset)"
      },
      "after": "3d9e9fc43bc79ae5",
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696425830712
    },
    {
      "id": "afb623c32c39d3ea",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "afb623c32c39d3ea",
        "text": "Note: The fact that spaces comes last in the definition of elm is very important! It can succeed without consuming any characters, so if it were the first option, it would always succeed and bypass the others! (Same is true of chompWhile in js.) This possibility of success without consumption is also why wee need the ifProgress helper. It detects if there is no more whitespace to consume."
      },
      "after": "29523afeaa9309df",
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696425837630
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "We intend to 'abuse' multiComment parser for wiki style links. [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace)"
      },
      "date": 1696425892948
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "We intend to 'abuse' the multiComment parser for wiki style links. [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace)"
      },
      "date": 1696425916099
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "We intend to 'abuse' the multiComment parser to [[Parse Wiki-Style Links]]. [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace)"
      },
      "date": 1696426038982
    },
    {
      "type": "edit",
      "id": "afae66717216d4c3",
      "item": {
        "type": "paragraph",
        "id": "afae66717216d4c3",
        "text": "We intend to 'abuse' the multiComment parser [https://package.elm-lang.org/packages/elm/parser/latest/Parser#multiComment page] (Context: Whitespace) to [[Parse Wiki-Style Links]]. "
      },
      "date": 1696426060833
    }
  ]
}