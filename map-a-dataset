{
  "title": "Map a Dataset",
  "story": [
    {
      "type": "paragraph",
      "id": "2274e3ab04fa8fb6",
      "text": "from a multidimensional space into a 2d hexagonal grid of neurons "
    },
    {
      "type": "paragraph",
      "id": "66748ecdd4717339",
      "text": "This example is about classifying 155 stars from their spectral data (2799 by stars). You can read more about this problem by reading this article Application of Self-Organizing Map to stellar spectral classifications [https://raw.githubusercontent.com/seracio/kohonen-stars/master/data/subject.pdf pdf] included on the repository and on which is based this example. [https://github.com/seracio/kohonen-stars#som github]"
    },
    {
      "type": "paragraph",
      "id": "cf0f054750576486",
      "text": "There is a first script to parse the 2 dat files:"
    },
    {
      "type": "markdown",
      "id": "85239d866c5242ed",
      "text": "\n* stars.dat: description of each stars including their spectral type\n* fluxes.dat: 2799 data for each stars\n"
    },
    {
      "type": "paragraph",
      "id": "9298be7aedd6a3a2",
      "text": "and a script to draw the hexagonal grid. "
    },
    {
      "type": "paragraph",
      "id": "3f6c1ab3cf1eeb39",
      "text": "The second script is the SOM calculation itself using our lib (the repository already provides a generated grid) [https://github.com/seracio/kohonen-stars/blob/f5dd6198ad12531699dce8cda9dfee2077f7e0b7/scripts/som.js github]"
    },
    {
      "type": "markdown",
      "id": "13729952b2ecf47e",
      "text": "# Draw the Hexagonal Grid"
    },
    {
      "type": "code",
      "id": "bd90860c1f364fec",
      "text": "const neurons = hexagonHelper.generateGrid(13, 13);"
    },
    {
      "type": "html",
      "id": "4429784b8b7546d7",
      "text": "<img\n  width=\"100%\"\n  src=\"https://camo.githubusercontent.com/ca56e71212130599851e81a5742437ee0538d480e902dcd03f0361023eeeabe9/68747470733a2f2f63646e2e7261776769742e636f6d2f7365726163696f2f6b6f686f6e656e2d73746172732f6d61737465722f696d616765732f636170747572652e737667\"\n>"
    },
    {
      "type": "code",
      "id": "38309583cbf69f07",
      "text": "import Kohonen, { hexagonHelper } from 'kohonen';"
    },
    {
      "type": "paragraph",
      "id": "0f067c989ccdb10d",
      "text": "See kohonen [https://github.com/seracio/kohonen github], [https://github.com/seracio/kohonen/blob/37d5c393aceda7e299dc6bf8ecb83edf7f3e9615/src/hexagon.ts github] "
    },
    {
      "type": "paragraph",
      "id": "d7ae3f15d468248f",
      "text": "src/hexagon.ts:"
    },
    {
      "type": "code",
      "id": "40cbdb066604142d",
      "text": "import _ from 'lodash/fp';\nimport { Neuron } from './types';\n\n// generate a rectangular grid of sizeX * sizeY hexagonal neurons\n// with normalized euclidian distance of 1 between each neighbor\nconst generateGrid = (sizeX, sizeY): Neuron[] => {\n    const margin = 1;\n\n    const stepX = 1;\n    // Pythagoras to the rescue\n    const stepY = Math.sqrt(Math.pow(stepX, 2) - Math.pow(stepX / 2, 2));\n\n    const getHexagon = (x, y): Neuron => ({\n        pos: [x, y]\n    });\n\n    const generateRow = (y, i) =>\n        _.range(0, sizeX)\n            .map(x => x + margin)\n            .map(x => x + (i % 2 === 0 ? 0 : stepX / 2))\n            .map(x => getHexagon(x, y));\n\n    return _.flatten(\n        _.range(0, sizeY)\n            .map(y => y * stepY)\n            .map(y => y + margin)\n            .map((y, i) => generateRow(y, i))\n    );\n};\n\nexport { generateGrid };\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Map a Dataset",
        "story": []
      },
      "date": 1674410533314
    },
    {
      "id": "2274e3ab04fa8fb6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2274e3ab04fa8fb6",
        "text": "from a multidimensional space into a 2d hexagonal grid of neurons \n* and a script to draw the hexagonal grid\n"
      },
      "date": 1674410545970
    },
    {
      "type": "edit",
      "id": "2274e3ab04fa8fb6",
      "item": {
        "type": "paragraph",
        "id": "2274e3ab04fa8fb6",
        "text": "from a multidimensional space into a 2d hexagonal grid of neurons and a script to draw the hexagonal grid\n"
      },
      "date": 1674410562509
    },
    {
      "type": "edit",
      "id": "2274e3ab04fa8fb6",
      "item": {
        "type": "paragraph",
        "id": "2274e3ab04fa8fb6",
        "text": "from a multidimensional space into a 2d hexagonal grid of neurons "
      },
      "date": 1674410977275
    },
    {
      "type": "add",
      "id": "9298be7aedd6a3a2",
      "item": {
        "type": "paragraph",
        "id": "9298be7aedd6a3a2",
        "text": "and a script to draw the hexagonal grid\n"
      },
      "after": "2274e3ab04fa8fb6",
      "date": 1674410980054
    },
    {
      "item": {
        "type": "factory",
        "id": "bd90860c1f364fec"
      },
      "id": "bd90860c1f364fec",
      "type": "add",
      "after": "9298be7aedd6a3a2",
      "date": 1674419288657
    },
    {
      "type": "edit",
      "id": "9298be7aedd6a3a2",
      "item": {
        "type": "paragraph",
        "id": "9298be7aedd6a3a2",
        "text": "and a script to draw the hexagonal grid. The second script is the SOM calculation itself using our lib (the repository already provides a generated grid)\n"
      },
      "date": 1674419303679
    },
    {
      "type": "edit",
      "id": "9298be7aedd6a3a2",
      "item": {
        "type": "paragraph",
        "id": "9298be7aedd6a3a2",
        "text": "and a script to draw the hexagonal grid. The second script is the SOM calculation itself using our lib (the repository already provides a generated grid) [https://github.com/seracio/kohonen-stars/blob/f5dd6198ad12531699dce8cda9dfee2077f7e0b7/scripts/som.js github]\n"
      },
      "date": 1674419330158
    },
    {
      "type": "edit",
      "id": "bd90860c1f364fec",
      "item": {
        "type": "code",
        "id": "bd90860c1f364fec",
        "text": "const neurons = hexagonHelper.generateGrid(13, 13);"
      },
      "date": 1674419381138
    },
    {
      "id": "4429784b8b7546d7",
      "type": "add",
      "item": {
        "type": "html",
        "id": "4429784b8b7546d7",
        "text": "<img\n  width=\"100%\"\n  src=\"https://camo.githubusercontent.com/ca56e71212130599851e81a5742437ee0538d480e902dcd03f0361023eeeabe9/68747470733a2f2f63646e2e7261776769742e636f6d2f7365726163696f2f6b6f686f6e656e2d73746172732f6d61737465722f696d616765732f636170747572652e737667\"\n>"
      },
      "after": "9298be7aedd6a3a2",
      "date": 1674419409702
    },
    {
      "id": "bd90860c1f364fec",
      "type": "move",
      "order": [
        "2274e3ab04fa8fb6",
        "9298be7aedd6a3a2",
        "bd90860c1f364fec",
        "4429784b8b7546d7"
      ],
      "date": 1674419435085
    },
    {
      "item": {
        "type": "factory",
        "id": "38309583cbf69f07"
      },
      "id": "38309583cbf69f07",
      "type": "add",
      "after": "4429784b8b7546d7",
      "date": 1674419590536
    },
    {
      "type": "edit",
      "id": "38309583cbf69f07",
      "item": {
        "type": "code",
        "id": "38309583cbf69f07",
        "text": "import Kohonen, { hexagonHelper } from 'kohonen';"
      },
      "date": 1674419595950
    },
    {
      "item": {
        "type": "factory",
        "id": "fdf0deefb5aeae60"
      },
      "id": "fdf0deefb5aeae60",
      "type": "add",
      "after": "38309583cbf69f07",
      "date": 1674419661651
    },
    {
      "type": "remove",
      "id": "fdf0deefb5aeae60",
      "date": 1674419663672
    },
    {
      "item": {
        "type": "factory",
        "id": "0f067c989ccdb10d"
      },
      "id": "0f067c989ccdb10d",
      "type": "add",
      "after": "38309583cbf69f07",
      "date": 1674419665483
    },
    {
      "type": "edit",
      "id": "0f067c989ccdb10d",
      "item": {
        "type": "paragraph",
        "id": "0f067c989ccdb10d",
        "text": "See kohonen [https://github.com/seracio/kohonen github]"
      },
      "date": 1674419685927
    },
    {
      "item": {
        "type": "factory",
        "id": "40cbdb066604142d"
      },
      "id": "40cbdb066604142d",
      "type": "add",
      "after": "0f067c989ccdb10d",
      "date": 1674419984864
    },
    {
      "type": "edit",
      "id": "40cbdb066604142d",
      "item": {
        "type": "code",
        "id": "40cbdb066604142d",
        "text": "import _ from 'lodash/fp';\nimport { Neuron } from './types';\n\n// generate a rectangular grid of sizeX * sizeY hexagonal neurons\n// with normalized euclidian distance of 1 between each neighbor\nconst generateGrid = (sizeX, sizeY): Neuron[] => {\n    const margin = 1;\n\n    const stepX = 1;\n    // Pythagoras to the rescue\n    const stepY = Math.sqrt(Math.pow(stepX, 2) - Math.pow(stepX / 2, 2));\n\n    const getHexagon = (x, y): Neuron => ({\n        pos: [x, y]\n    });\n\n    const generateRow = (y, i) =>\n        _.range(0, sizeX)\n            .map(x => x + margin)\n            .map(x => x + (i % 2 === 0 ? 0 : stepX / 2))\n            .map(x => getHexagon(x, y));\n\n    return _.flatten(\n        _.range(0, sizeY)\n            .map(y => y * stepY)\n            .map(y => y + margin)\n            .map((y, i) => generateRow(y, i))\n    );\n};\n\nexport { generateGrid };\n"
      },
      "date": 1674419987004
    },
    {
      "type": "edit",
      "id": "0f067c989ccdb10d",
      "item": {
        "type": "paragraph",
        "id": "0f067c989ccdb10d",
        "text": "See kohonen [https://github.com/seracio/kohonen github], src/hexagon.ts"
      },
      "date": 1674420029169
    },
    {
      "type": "edit",
      "id": "0f067c989ccdb10d",
      "item": {
        "type": "paragraph",
        "id": "0f067c989ccdb10d",
        "text": "See kohonen [https://github.com/seracio/kohonen github], src/hexagon.ts [https://github.com/seracio/kohonen/blob/37d5c393aceda7e299dc6bf8ecb83edf7f3e9615/src/hexagon.ts github]:"
      },
      "date": 1674420047786
    },
    {
      "type": "edit",
      "id": "0f067c989ccdb10d",
      "item": {
        "type": "paragraph",
        "id": "0f067c989ccdb10d",
        "text": "See kohonen [https://github.com/seracio/kohonen github],  [https://github.com/seracio/kohonen/blob/37d5c393aceda7e299dc6bf8ecb83edf7f3e9615/src/hexagon.ts github] "
      },
      "date": 1674420074750
    },
    {
      "type": "add",
      "id": "d7ae3f15d468248f",
      "item": {
        "type": "paragraph",
        "id": "d7ae3f15d468248f",
        "text": "src/hexagon.ts:"
      },
      "after": "0f067c989ccdb10d",
      "date": 1674420076284
    },
    {
      "type": "edit",
      "id": "0f067c989ccdb10d",
      "item": {
        "type": "paragraph",
        "id": "0f067c989ccdb10d",
        "text": "See kohonen [https://github.com/seracio/kohonen github], [https://github.com/seracio/kohonen/blob/37d5c393aceda7e299dc6bf8ecb83edf7f3e9615/src/hexagon.ts github] "
      },
      "date": 1674420080574
    },
    {
      "type": "add",
      "id": "66748ecdd4717339",
      "item": {
        "type": "paragraph",
        "id": "66748ecdd4717339",
        "text": "This example is about classifying 155 stars from their spectral data (2799 by stars). You can read more about this problem by reading this article Application of Self-Organizing Map to stellar spectral classifications included on the repository and on which is based this example."
      },
      "after": "2274e3ab04fa8fb6",
      "date": 1674468600546
    },
    {
      "type": "edit",
      "id": "66748ecdd4717339",
      "item": {
        "type": "paragraph",
        "id": "66748ecdd4717339",
        "text": "This example is about classifying 155 stars from their spectral data (2799 by stars). You can read more about this problem by reading this article Application of Self-Organizing Map to stellar spectral classifications included on the repository and on which is based this example. [https://github.com/seracio/kohonen-stars#som github]"
      },
      "date": 1674468620729
    },
    {
      "type": "add",
      "id": "cf0f054750576486",
      "item": {
        "type": "paragraph",
        "id": "cf0f054750576486",
        "text": "There is a first script to parse the 2 dat files:\n\n    stars.dat: description of each stars including their spectral type\n    fluxes.dat: 2799 data for each stars\n"
      },
      "after": "66748ecdd4717339",
      "date": 1674468635519
    },
    {
      "type": "edit",
      "id": "cf0f054750576486",
      "item": {
        "type": "paragraph",
        "id": "cf0f054750576486",
        "text": "There is a first script to parse the 2 dat files:"
      },
      "date": 1674468646126
    },
    {
      "type": "add",
      "id": "85239d866c5242ed",
      "item": {
        "type": "paragraph",
        "id": "85239d866c5242ed",
        "text": "\n* stars.dat: description of each stars including their spectral type\n* fluxes.dat: 2799 data for each stars\n"
      },
      "after": "cf0f054750576486",
      "date": 1674468663804
    },
    {
      "type": "edit",
      "id": "85239d866c5242ed",
      "item": {
        "type": "markdown",
        "id": "85239d866c5242ed",
        "text": "\n* stars.dat: description of each stars including their spectral type\n* fluxes.dat: 2799 data for each stars\n"
      },
      "date": 1674468665092
    },
    {
      "type": "edit",
      "id": "66748ecdd4717339",
      "item": {
        "type": "paragraph",
        "id": "66748ecdd4717339",
        "text": "This example is about classifying 155 stars from their spectral data (2799 by stars). You can read more about this problem by reading this article Application of Self-Organizing Map to stellar spectral classifications [https://raw.githubusercontent.com/seracio/kohonen-stars/master/data/subject.pdf pdf] included on the repository and on which is based this example. [https://github.com/seracio/kohonen-stars#som github]"
      },
      "date": 1674468991018
    },
    {
      "type": "edit",
      "id": "9298be7aedd6a3a2",
      "item": {
        "type": "paragraph",
        "id": "9298be7aedd6a3a2",
        "text": "and a script to draw the hexagonal grid. "
      },
      "date": 1674469076155
    },
    {
      "type": "add",
      "id": "3f6c1ab3cf1eeb39",
      "item": {
        "type": "paragraph",
        "id": "3f6c1ab3cf1eeb39",
        "text": "The second script is the SOM calculation itself using our lib (the repository already provides a generated grid) [https://github.com/seracio/kohonen-stars/blob/f5dd6198ad12531699dce8cda9dfee2077f7e0b7/scripts/som.js github]\n"
      },
      "after": "9298be7aedd6a3a2",
      "date": 1674469077789
    },
    {
      "type": "edit",
      "id": "3f6c1ab3cf1eeb39",
      "item": {
        "type": "paragraph",
        "id": "3f6c1ab3cf1eeb39",
        "text": "The second script is the SOM calculation itself using our lib (the repository already provides a generated grid) [https://github.com/seracio/kohonen-stars/blob/f5dd6198ad12531699dce8cda9dfee2077f7e0b7/scripts/som.js github]"
      },
      "date": 1674469103236
    },
    {
      "type": "add",
      "id": "13729952b2ecf47e",
      "item": {
        "type": "paragraph",
        "id": "13729952b2ecf47e",
        "text": "# Draw the Hexagonal Grid"
      },
      "after": "3f6c1ab3cf1eeb39",
      "date": 1674469106090
    },
    {
      "type": "edit",
      "id": "13729952b2ecf47e",
      "item": {
        "type": "markdown",
        "id": "13729952b2ecf47e",
        "text": "# Draw the Hexagonal Grid"
      },
      "date": 1674469107204
    }
  ]
}