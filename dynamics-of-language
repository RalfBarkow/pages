{
  "title": "Dynamics of Language",
  "story": [
    {
      "type": "paragraph",
      "id": "8395439bf6a68b21",
      "text": "To understand how to [[prompt]] an autoregressive language model, we must first consider the context in which it was trained and the function it approximates."
    },
    {
      "type": "paragraph",
      "id": "bf47e07e535acf3d",
      "text": "[[GPT-3]] was trained in a self-supervised setting on hundreds of gigabytes of natural language [3]. "
    },
    {
      "type": "paragraph",
      "id": "68d3130922e2fe66",
      "text": "Self-supervision is a form of unsupervised learning in which [[ground truth]] labels are derived from the data itself. In the case of GPT-3, the ground truth label assigned to each example was simply the token that came next in the original source. The ground truth function which GPT-3 approximates, then, is the underlying dynamic that determined what tokens came next in the original source. This function, unlike GPT-3, is not a black box - we live and think its components - but it is tremendously, intractably complex. It is the function of human language as it has been used and recorded by humans in books, articles, blogs, and internet comments."
    },
    {
      "type": "paragraph",
      "id": "9361ef55893da1d3",
      "text": "A system which predicts the dynamics of language necessarily encompasses models of human behavior and the physical world [8]. The “dynamics of language” do not float free of cultural, psychological, and physical context; it is not merely a theory of grammar or even of semantics. Language in this sense is not an abstraction but rather a phenomenon entangled with all aspects of human-relevant reality. The dynamic must predict how language is actually used, which includes (say) [[predict]]ing a [[Conversation]] between theoretical physicists. Modeling language is as difficult as modeling every aspect of reality that could influence the flow of language."
    },
    {
      "type": "paragraph",
      "id": "f3a9487eced75aff",
      "text": "If we were to predict how a given passage of text would continue given that a human had written it, we would need to model the intentions of its writer and incorporate worldly knowledge about its referents. The inverse problem of searching for a prompt that would produce a continuation or class of continuations involves the same considerations: like the art of persuasion, it entails high-level, mentalistic concepts like tone, implication, association, meme, style, plausibility, and ambiguity."
    },
    {
      "type": "paragraph",
      "id": "b5aba3c1d2f99afd",
      "text": "This motivates an [[Anthropomorphic Approach]] to [[Prompt Programming]], since modelling how GPT-3 will react to a prompt involves modelling virtual human writer(s). An anthropomorphic approach is distinct from anthropomorphizing the model. GPT-3’s dynamics entail sophisticated predictions of humans, but it behaves unlike a human in several important ways. In this paper we will address two such ways: its resemblance not to a single human author but a superposition of authors, which motivates a subtractive approach to prompt programming (§4.5), and its constrained ability to predict dynamics in situations where a substantial amount of silent reasoning happens between tokens, a limitation which can be partially overcome by prompting techniques (§4.6)."
    },
    {
      "type": "paragraph",
      "id": "2546d55d725ae4c4",
      "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of [[Prompt Programming]] for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at [[Prompt Programming]] nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. "
    },
    {
      "type": "pagefold",
      "id": "ae8d5304ce672183",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "cae43d45adcd6272",
      "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. New York, NY, USA: Association for Computing Machinery. 2021. p. 1–7. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
    },
    {
      "type": "graphviz",
      "id": "f7a25b876d8ab81b",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "paragraph",
      "id": "01556ee678f1320f",
      "text": "In §4.2 - §4.7, we present methods and frameworks which we have found to be helpful for crafting effective prompts. These methods can and should be applied in parallel, just as they are woven together in all forms of human discourse. In general, the more redundancy reinforcing the desired behavior the better, as is arguably demonstrated by the effectiveness of the few-shot format."
    },
    {
      "type": "paragraph",
      "id": "769bdb1b62ca5fe3",
      "text": "As our experience derives primarily from interacting with GPT-3, in the following sections we refer directly and indirectly to the capabilities and behaviors of GPT-3. However, we believe that these methods generalize to prompting any autoregressive language model trained on a massive human-written corpus."
    },
    {
      "type": "paragraph",
      "id": "80a032bf686cdddd",
      "text": "[…] 4.5 Prompt programming as constraining behavior"
    },
    {
      "type": "paragraph",
      "id": "65fa60e40aa15d27",
      "text": "A manner in which naive anthropomorphism of a language model like GPT-3 fails is this: the probability distribution produced in response to a prompt is not a distribution over ways a person would continue that prompt, it’s the distribution over the ways any person could continue that prompt. A contextually ambiguous prompt may be continued in mutually incoherent ways, as if by different people who might have continued the prompt under any plausible context. "
    },
    {
      "type": "paragraph",
      "id": "6686858231c4225f",
      "text": "The versatility of a large generative model like GPT-3 means it will respond in many ways to a prompt if there are various ways that it is possible to continue the prompt - including all the ways unintended by the human operator. Thus it is helpful to approach prompt programming from the perspective of constraining behavior: we want a prompt that is not merely consistent with the desired continuation, but inconsistent with undesired continuations."
    },
    {
      "type": "pagefold",
      "id": "11ec20bd8aed8428",
      "text": "chat.openai"
    },
    {
      "type": "paragraph",
      "id": "696fc46cb3ba6b5f",
      "text": "Programming can be seen as constraining behavior in the sense that it sets rules and parameters for how a computer or software system should operate. The code written by a programmer determines what the system can and cannot do, and thus limits its behavior. The constraints established in the code ensure that the system operates as intended and prevents it from doing things that may cause unintended consequences or errors. In this sense, programming serves as a means of controlling the behavior of a system and ensuring that it behaves in a predictable and reliable manner."
    },
    {
      "type": "pagefold",
      "id": "5de57cab7a6ac803",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b41ef5c2033c5c74",
      "text": "⇒ [[Establish Rules]]"
    },
    {
      "type": "reference",
      "id": "d179d5b9f94b0244",
      "site": "wiki.ralfbarkow.ch",
      "slug": "limitationality",
      "title": "Limitationality",
      "text": "⇒ [[Limitationalität]]"
    },
    {
      "type": "pagefold",
      "id": "5593c9484a519674",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "1beccaad5985fa7d",
      "text": "Consider the following prompt:"
    },
    {
      "type": "markdown",
      "id": "d318188063f75caa",
      "text": "> Translate French to English: Mon corps est un transformateur de soi, mais aussi un transformateur pour cette cire de langage."
    },
    {
      "type": "html",
      "id": "441eaeb094a085b2",
      "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-30/Bildschirmfoto%202023-01-30%20um%2007.53.33.png\"\n  width=\"100%\"\n>"
    },
    {
      "type": "paragraph",
      "id": "212bcc0a6df598cb",
      "text": "This prompt poorly constrains possible continuations to the intended task. The most common failure mode will be that instead of an English translation, the model continues with another French sentence. Adding a newline after the French sentence will increase the odds that the next sentence is an English translation, but it is still possible for the next sentence to be in French, because there’s nothing in the prompt that precludes a multi-line phrase from being the translation subject. Changing the first line of the prompt to “Translate this French sentence to English” will further increase reliability, so will adding quotes around the French sentence. But it’s still possible that the French passage contains sections enclosed in quotes, perhaps as a part of a dialogue. Most reliable would be to create a syntactical constraint where any reasonable continuation can only be desired behavior, like the simple colon prompt in Figure 1 or the master translator prompt in Figure 2. […]"
    },
    {
      "type": "pagefold",
      "id": "d5ca16d2d4340cfa",
      "text": "ChatGPT"
    },
    {
      "type": "paragraph",
      "id": "98de4fc51d093d75",
      "text": "[[I]] understand. It is important to clearly specify the task and provide clear constraints for the model to increase reliability and accuracy of its response. Thank you for the suggestion."
    },
    {
      "type": "paragraph",
      "id": "98d2808b22d18bd0",
      "text": "\"You\" understand?"
    },
    {
      "type": "paragraph",
      "id": "cbdecc8aab667630",
      "text": "Yes, I understand. I am a language model created by OpenAI and I am capable of processing and understanding natural language text inputs."
    },
    {
      "type": "paragraph",
      "id": "7497b1d1a79fb04c",
      "text": "A software is capable of processing natural language text inputs but not able to understand."
    },
    {
      "type": "paragraph",
      "id": "538ac3ac6b5db5b5",
      "text": "Correct. Natural language processing (NLP) is a field of computer science and artificial intelligence concerned with the interactions between computers and humans in natural language. A software with NLP capabilities is capable of processing and analyzing human language, but it does not necessarily have the capability to truly understand the meaning and context behind the language, as that requires a level of consciousness and subjective experience. It can only recognize patterns and perform actions based on pre-determined rules and algorithms."
    },
    {
      "type": "paragraph",
      "id": "6c61b71edfb6c7a1",
      "text": "Aha, there seems to be a nuance difference in understanding and \"truly understanding\"?!"
    },
    {
      "type": "paragraph",
      "id": "ed25a2e4c1dc5d13",
      "text": "Yes, there is a difference between understanding and \"truly understanding.\" Understanding in the context of NLP refers to the ability of a computer program to process and analyze natural language data, while \"truly understanding\" refers to the ability to comprehend the meaning and context of language in the same way a human would. Computers can perform NLP tasks such as text classification and language translation, but they lack the capacity for conscious thought, subjective experience, and empathy, which are essential components of truly understanding language."
    },
    {
      "type": "pagefold",
      "id": "c7d196585d5569a6",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "5748acec81e99300",
      "text": "This simple example is meant to frame a question central to the motivation of prompt programming: what prompt will result in the intended behavior and only the intended behavior? The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a function, it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern."
    },
    {
      "type": "paragraph",
      "id": "4232bdb606c2bb34",
      "text": "4.6 Serializing reasoning for closed-ended questions"
    },
    {
      "type": "paragraph",
      "id": "aa2e5e0baef7b8c0",
      "text": "[…]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Dynamics of Language",
        "story": []
      },
      "date": 1675059095183
    },
    {
      "item": {
        "type": "factory",
        "id": "8395439bf6a68b21"
      },
      "id": "8395439bf6a68b21",
      "type": "add",
      "date": 1675059096691
    },
    {
      "type": "edit",
      "id": "8395439bf6a68b21",
      "item": {
        "type": "paragraph",
        "id": "8395439bf6a68b21",
        "text": "To understand how to prompt an autoregressive language model, we must first consider the context in which it was trained and the function it approximates."
      },
      "date": 1675059098432
    },
    {
      "item": {
        "type": "factory",
        "id": "bf47e07e535acf3d"
      },
      "id": "bf47e07e535acf3d",
      "type": "add",
      "after": "8395439bf6a68b21",
      "date": 1675059111850
    },
    {
      "type": "edit",
      "id": "bf47e07e535acf3d",
      "item": {
        "type": "paragraph",
        "id": "bf47e07e535acf3d",
        "text": "[[GPT-3]] was trained in a self-supervised setting on hundreds of gigabytes of natural language [3]. Self-supervision is a form of unsupervised learning in which ground truth labels are derived from the data itself. In the case of GPT-3, the ground truth label assigned to each example was simply the token that came next in the original source. The ground truth function which GPT-3 approximates, then, is the underlying dynamic that determined what tokens came next in the original source. This function, unlike GPT-3, is not a black box - we live and think its components - but it is tremendously, intractably complex. It is the function of human language as it has been used and recorded by humans in books, articles, blogs, and internet comments."
      },
      "date": 1675059119019
    },
    {
      "item": {
        "type": "factory",
        "id": "9361ef55893da1d3"
      },
      "id": "9361ef55893da1d3",
      "type": "add",
      "after": "bf47e07e535acf3d",
      "date": 1675059166354
    },
    {
      "type": "edit",
      "id": "9361ef55893da1d3",
      "item": {
        "type": "paragraph",
        "id": "9361ef55893da1d3",
        "text": "A system which predicts the dynamics of language necessarily encompasses models of human behavior and the physical world [8]. The “dynamics of language” do not float free of cultural, psychological, and physical context; it is not merely a theory of grammar or even of semantics. Language in this sense is not an abstraction but rather a phenomenon entangled with all aspects of human-relevant reality. The dynamic must predict how language is actually used, which includes (say) predicting a conversation between theoretical physicists. Modeling language is as difficult as modeling every aspect of reality that could influence the flow of language."
      },
      "date": 1675059167894
    },
    {
      "type": "edit",
      "id": "9361ef55893da1d3",
      "item": {
        "type": "paragraph",
        "id": "9361ef55893da1d3",
        "text": "A system which predicts the dynamics of language necessarily encompasses models of human behavior and the physical world [8]. The “dynamics of language” do not float free of cultural, psychological, and physical context; it is not merely a theory of grammar or even of semantics. Language in this sense is not an abstraction but rather a phenomenon entangled with all aspects of human-relevant reality. The dynamic must predict how language is actually used, which includes (say) predicting a [[Conversation]] between theoretical physicists. Modeling language is as difficult as modeling every aspect of reality that could influence the flow of language."
      },
      "date": 1675059210056
    },
    {
      "type": "edit",
      "id": "9361ef55893da1d3",
      "item": {
        "type": "paragraph",
        "id": "9361ef55893da1d3",
        "text": "A system which predicts the dynamics of language necessarily encompasses models of human behavior and the physical world [8]. The “dynamics of language” do not float free of cultural, psychological, and physical context; it is not merely a theory of grammar or even of semantics. Language in this sense is not an abstraction but rather a phenomenon entangled with all aspects of human-relevant reality. The dynamic must predict how language is actually used, which includes (say) [[predict]]ing a [[Conversation]] between theoretical physicists. Modeling language is as difficult as modeling every aspect of reality that could influence the flow of language."
      },
      "date": 1675059236128
    },
    {
      "item": {
        "type": "factory",
        "id": "f3a9487eced75aff"
      },
      "id": "f3a9487eced75aff",
      "type": "add",
      "after": "9361ef55893da1d3",
      "date": 1675059318036
    },
    {
      "type": "edit",
      "id": "f3a9487eced75aff",
      "item": {
        "type": "paragraph",
        "id": "f3a9487eced75aff",
        "text": "If we were to predict how a given passage of text would continue given that a human had written it, we would need to model the"
      },
      "date": 1675059320702
    },
    {
      "type": "edit",
      "id": "f3a9487eced75aff",
      "item": {
        "type": "paragraph",
        "id": "f3a9487eced75aff",
        "text": "If we were to predict how a given passage of text would continue given that a human had written it, we would need to model the intentions of its writer and incorporate worldly knowledge about its referents. The inverse problem of searching for a prompt that would produce a continuation or class of continuations involves the same considerations: like the art of persuasion, it entails high-level, mentalistic concepts like tone, implication, association, meme, style, plausibility, and ambiguity."
      },
      "date": 1675059334476
    },
    {
      "item": {
        "type": "factory",
        "id": "b5aba3c1d2f99afd"
      },
      "id": "b5aba3c1d2f99afd",
      "type": "add",
      "after": "f3a9487eced75aff",
      "date": 1675059372356
    },
    {
      "type": "edit",
      "id": "b5aba3c1d2f99afd",
      "item": {
        "type": "paragraph",
        "id": "b5aba3c1d2f99afd",
        "text": "This motivates an anthropomorphic approach to prompt programming, since modelling how GPT-3 will react to a prompt involves modelling virtual human writer(s). An anthropomorphic approach is distinct from anthropomorphizing the model. GPT-3’s dynamics entail sophisticated predictions of humans, but it behaves unlike a human in several important ways. In this paper we will address two such ways: its resemblance not to a single human author but a superposition of authors, which motivates a subtractive approach to prompt programming (§4.5), and its constrained ability to predict dynamics in situations where a substantial amount of silent reasoning happens between tokens, a limitation which can be partially overcome by prompting techniques (§4.6)."
      },
      "date": 1675059373944
    },
    {
      "type": "edit",
      "id": "b5aba3c1d2f99afd",
      "item": {
        "type": "paragraph",
        "id": "b5aba3c1d2f99afd",
        "text": "This motivates an anthropomorphic approach to [[prompt programming]], since modelling how GPT-3 will react to a prompt involves modelling virtual human writer(s). An anthropomorphic approach is distinct from anthropomorphizing the model. GPT-3’s dynamics entail sophisticated predictions of humans, but it behaves unlike a human in several important ways. In this paper we will address two such ways: its resemblance not to a single human author but a superposition of authors, which motivates a subtractive approach to prompt programming (§4.5), and its constrained ability to predict dynamics in situations where a substantial amount of silent reasoning happens between tokens, a limitation which can be partially overcome by prompting techniques (§4.6)."
      },
      "date": 1675059390210
    },
    {
      "type": "edit",
      "id": "b5aba3c1d2f99afd",
      "item": {
        "type": "paragraph",
        "id": "b5aba3c1d2f99afd",
        "text": "This motivates an Anthropomorphic Approach to [[Prompt Programming]], since modelling how GPT-3 will react to a prompt involves modelling virtual human writer(s). An anthropomorphic approach is distinct from anthropomorphizing the model. GPT-3’s dynamics entail sophisticated predictions of humans, but it behaves unlike a human in several important ways. In this paper we will address two such ways: its resemblance not to a single human author but a superposition of authors, which motivates a subtractive approach to prompt programming (§4.5), and its constrained ability to predict dynamics in situations where a substantial amount of silent reasoning happens between tokens, a limitation which can be partially overcome by prompting techniques (§4.6)."
      },
      "date": 1675059437796
    },
    {
      "type": "edit",
      "id": "b5aba3c1d2f99afd",
      "item": {
        "type": "paragraph",
        "id": "b5aba3c1d2f99afd",
        "text": "This motivates an [[Anthropomorphic Approach]] to [[Prompt Programming]], since modelling how GPT-3 will react to a prompt involves modelling virtual human writer(s). An anthropomorphic approach is distinct from anthropomorphizing the model. GPT-3’s dynamics entail sophisticated predictions of humans, but it behaves unlike a human in several important ways. In this paper we will address two such ways: its resemblance not to a single human author but a superposition of authors, which motivates a subtractive approach to prompt programming (§4.5), and its constrained ability to predict dynamics in situations where a substantial amount of silent reasoning happens between tokens, a limitation which can be partially overcome by prompting techniques (§4.6)."
      },
      "date": 1675059451861
    },
    {
      "id": "2546d55d725ae4c4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the Hamiltonian of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "after": "b5aba3c1d2f99afd",
      "date": 1675060219859
    },
    {
      "item": {
        "type": "factory",
        "id": "f7a25b876d8ab81b"
      },
      "id": "f7a25b876d8ab81b",
      "type": "add",
      "after": "2546d55d725ae4c4",
      "date": 1675060227155
    },
    {
      "type": "edit",
      "id": "f7a25b876d8ab81b",
      "item": {
        "type": "graphviz",
        "id": "f7a25b876d8ab81b",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1675060234459
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1)] is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the Hamiltonian of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675060339118
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the Hamiltonian of the physics of observable reality (very hard). However, humans have an advantage to be effective at prompt programming nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675060358639
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the Hamiltonian of the physics of observable reality (very hard). However, humans have an advantage to be effective at [[Prompt Programming]] nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675060423232
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of prompt programming for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at [[Prompt Programming]] nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675060466914
    },
    {
      "item": {
        "type": "factory",
        "id": "ae8d5304ce672183"
      },
      "id": "ae8d5304ce672183",
      "type": "add",
      "after": "f7a25b876d8ab81b",
      "date": 1675060521456
    },
    {
      "type": "edit",
      "id": "ae8d5304ce672183",
      "item": {
        "type": "pagefold",
        "id": "ae8d5304ce672183",
        "text": "~"
      },
      "date": 1675060527549
    },
    {
      "id": "cae43d45adcd6272",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "cae43d45adcd6272",
        "text": "REYNOLDS, Laria and MCDONELL, Kyle, 2021. Prompt Programming for Large Language Models: Beyond the Few-Shot Paradigm. In: Extended Abstracts of the 2021 CHI Conference on Human Factors in Computing Systems. New York, NY, USA: Association for Computing Machinery. 2021. p. 1–7. CHI EA ’21. ISBN 978-1-4503-8095-9. DOI 10.1145/3411763.3451760. "
      },
      "after": "ae8d5304ce672183",
      "date": 1675060531262
    },
    {
      "id": "f7a25b876d8ab81b",
      "type": "move",
      "order": [
        "8395439bf6a68b21",
        "bf47e07e535acf3d",
        "9361ef55893da1d3",
        "f3a9487eced75aff",
        "b5aba3c1d2f99afd",
        "2546d55d725ae4c4",
        "ae8d5304ce672183",
        "f7a25b876d8ab81b",
        "cae43d45adcd6272"
      ],
      "date": 1675060540141
    },
    {
      "id": "cae43d45adcd6272",
      "type": "move",
      "order": [
        "8395439bf6a68b21",
        "bf47e07e535acf3d",
        "9361ef55893da1d3",
        "f3a9487eced75aff",
        "b5aba3c1d2f99afd",
        "2546d55d725ae4c4",
        "ae8d5304ce672183",
        "cae43d45adcd6272",
        "f7a25b876d8ab81b"
      ],
      "date": 1675060542855
    },
    {
      "item": {
        "type": "factory",
        "id": "01556ee678f1320f"
      },
      "id": "01556ee678f1320f",
      "type": "add",
      "after": "f7a25b876d8ab81b",
      "date": 1675060610926
    },
    {
      "type": "edit",
      "id": "01556ee678f1320f",
      "item": {
        "type": "paragraph",
        "id": "01556ee678f1320f",
        "text": "In §4.2 - §4.7, we present methods and frameworks which we have found to be helpful for crafting effective prompts. These methods can and should be applied in parallel, just as they are woven together in all forms of human discourse. In general, the more redundancy reinforcing the desired behavior the better, as is arguably demonstrated by the effectiveness of the few-shot format."
      },
      "date": 1675060612821
    },
    {
      "item": {
        "type": "factory",
        "id": "769bdb1b62ca5fe3"
      },
      "id": "769bdb1b62ca5fe3",
      "type": "add",
      "after": "01556ee678f1320f",
      "date": 1675060624202
    },
    {
      "type": "edit",
      "id": "769bdb1b62ca5fe3",
      "item": {
        "type": "paragraph",
        "id": "769bdb1b62ca5fe3",
        "text": "As our experience derives primarily from interacting with GPT-3, in the following sections we refer directly and indirectly to the capabilities and behaviors of GPT-3. However, we believe that these methods generalize to prompting any autoregressive language model trained on a massive human-written corpus."
      },
      "date": 1675060625860
    },
    {
      "type": "edit",
      "id": "8395439bf6a68b21",
      "item": {
        "type": "paragraph",
        "id": "8395439bf6a68b21",
        "text": "To understand how to [[prompt]] an autoregressive language model, we must first consider the context in which it was trained and the function it approximates."
      },
      "date": 1675060654958
    },
    {
      "item": {
        "type": "factory",
        "id": "80a032bf686cdddd"
      },
      "id": "80a032bf686cdddd",
      "type": "add",
      "after": "769bdb1b62ca5fe3",
      "date": 1675060990434
    },
    {
      "type": "edit",
      "id": "80a032bf686cdddd",
      "item": {
        "type": "paragraph",
        "id": "80a032bf686cdddd",
        "text": "[…] 4.5 Prompt programming as constraining behavior"
      },
      "date": 1675060993983
    },
    {
      "item": {
        "type": "factory",
        "id": "65fa60e40aa15d27"
      },
      "id": "65fa60e40aa15d27",
      "type": "add",
      "after": "80a032bf686cdddd",
      "date": 1675061008202
    },
    {
      "type": "edit",
      "id": "65fa60e40aa15d27",
      "item": {
        "type": "paragraph",
        "id": "65fa60e40aa15d27",
        "text": "A manner in which naive anthropomorphism of a language model like GPT-3 fails is this: the probability distribution produced in response to a prompt is not a distribution over ways a person would continue that prompt, it’s the distribution over the ways any person could continue that prompt. A contextually ambiguous prompt may be continued in mutually incoherent ways, as if by different people who might have continued the prompt under any plausible context. The versatility of a large generative model like GPT-3 means it will respond in many ways to a prompt if there are various ways that it is possible to continue the prompt - including all the ways unintended by the human operator. Thus it is helpful to approach prompt programming from the perspective of constraining behavior: we want a prompt that is not merely consistent with the desired continuation, but inconsistent with undesired continuations."
      },
      "date": 1675061010104
    },
    {
      "type": "edit",
      "id": "65fa60e40aa15d27",
      "item": {
        "type": "paragraph",
        "id": "65fa60e40aa15d27",
        "text": "A manner in which naive anthropomorphism of a language model like GPT-3 fails is this: the probability distribution produced in response to a prompt is not a distribution over ways a person would continue that prompt, it’s the distribution over the ways any person could continue that prompt. A contextually ambiguous prompt may be continued in mutually incoherent ways, as if by different people who might have continued the prompt under any plausible context. "
      },
      "date": 1675061024219
    },
    {
      "type": "add",
      "id": "6686858231c4225f",
      "item": {
        "type": "paragraph",
        "id": "6686858231c4225f",
        "text": "The versatility of a large generative model like GPT-3 means it will respond in many ways to a prompt if there are various ways that it is possible to continue the prompt - including all the ways unintended by the human operator. Thus it is helpful to approach prompt programming from the perspective of constraining behavior: we want a prompt that is not merely consistent with the desired continuation, but inconsistent with undesired continuations."
      },
      "after": "65fa60e40aa15d27",
      "date": 1675061028458
    },
    {
      "item": {
        "type": "factory",
        "id": "11ec20bd8aed8428"
      },
      "id": "11ec20bd8aed8428",
      "type": "add",
      "after": "6686858231c4225f",
      "date": 1675061083191
    },
    {
      "type": "edit",
      "id": "11ec20bd8aed8428",
      "item": {
        "type": "pagefold",
        "id": "11ec20bd8aed8428",
        "text": "chat.openai"
      },
      "date": 1675061092041
    },
    {
      "item": {
        "type": "factory",
        "id": "696fc46cb3ba6b5f"
      },
      "id": "696fc46cb3ba6b5f",
      "type": "add",
      "after": "11ec20bd8aed8428",
      "date": 1675061094355
    },
    {
      "type": "edit",
      "id": "696fc46cb3ba6b5f",
      "item": {
        "type": "paragraph",
        "id": "696fc46cb3ba6b5f",
        "text": "Programming can be seen as constraining behavior in the sense that it sets rules and parameters for how a computer or software system should operate. The code written by a programmer determines what the system can and cannot do, and thus limits its behavior. The constraints established in the code ensure that the system operates as intended and prevents it from doing things that may cause unintended consequences or errors. In this sense, programming serves as a means of controlling the behavior of a system and ensuring that it behaves in a predictable and reliable manner."
      },
      "date": 1675061096116
    },
    {
      "item": {
        "type": "factory",
        "id": "5de57cab7a6ac803"
      },
      "id": "5de57cab7a6ac803",
      "type": "add",
      "after": "696fc46cb3ba6b5f",
      "date": 1675061116402
    },
    {
      "type": "edit",
      "id": "5de57cab7a6ac803",
      "item": {
        "type": "pagefold",
        "id": "5de57cab7a6ac803",
        "text": "~"
      },
      "date": 1675061119824
    },
    {
      "item": {
        "type": "factory",
        "id": "b41ef5c2033c5c74"
      },
      "id": "b41ef5c2033c5c74",
      "type": "add",
      "after": "5de57cab7a6ac803",
      "date": 1675061127384
    },
    {
      "type": "edit",
      "id": "b41ef5c2033c5c74",
      "item": {
        "type": "paragraph",
        "id": "b41ef5c2033c5c74",
        "text": "⇒ [[Establish Rules]]"
      },
      "date": 1675061139165
    },
    {
      "item": {
        "type": "factory",
        "id": "d179d5b9f94b0244"
      },
      "id": "d179d5b9f94b0244",
      "type": "add",
      "after": "b41ef5c2033c5c74",
      "date": 1675061209519
    },
    {
      "type": "edit",
      "id": "d179d5b9f94b0244",
      "item": {
        "type": "reference",
        "id": "d179d5b9f94b0244",
        "site": "wiki.ralfbarkow.ch",
        "slug": "limitationality",
        "title": "Limitationality",
        "text": "⇒ [[Limitationalität]]"
      },
      "date": 1675061212726
    },
    {
      "item": {
        "type": "factory",
        "id": "5593c9484a519674"
      },
      "id": "5593c9484a519674",
      "type": "add",
      "after": "d179d5b9f94b0244",
      "date": 1675061552535
    },
    {
      "type": "edit",
      "id": "5593c9484a519674",
      "item": {
        "type": "pagefold",
        "id": "5593c9484a519674",
        "text": "~"
      },
      "date": 1675061555937
    },
    {
      "item": {
        "type": "factory",
        "id": "1beccaad5985fa7d"
      },
      "id": "1beccaad5985fa7d",
      "type": "add",
      "after": "5593c9484a519674",
      "date": 1675061557658
    },
    {
      "type": "edit",
      "id": "1beccaad5985fa7d",
      "item": {
        "type": "paragraph",
        "id": "1beccaad5985fa7d",
        "text": "[…]"
      },
      "date": 1675061560447
    },
    {
      "item": {
        "type": "factory",
        "id": "212bcc0a6df598cb"
      },
      "id": "212bcc0a6df598cb",
      "type": "add",
      "after": "1beccaad5985fa7d",
      "date": 1675061562858
    },
    {
      "type": "edit",
      "id": "212bcc0a6df598cb",
      "item": {
        "type": "paragraph",
        "id": "212bcc0a6df598cb",
        "text": "This prompt poorly constrains possible continuations to the intended task. The most common failure mode will be that instead of an English translation, the model continues with another French sentence. Adding a newline after the French sentence will increase the odds that the next sentence is an English translation, but it is still possible for the next sentence to be in French, because there’s nothing in the prompt that precludes a multi-line phrase from being the translation subject. Changing the first line of the prompt to “Translate this French sentence to English” will further increase reliability, so will adding quotes around the French sentence. But it’s still possible that the French passage contains sections enclosed in quotes, perhaps as a part of a dialogue. Most reliable would be to create a syntactical constraint where any reasonable continuation can only be desired behavior, like the simple colon prompt in Figure 1 or the master translator prompt in Figure 2."
      },
      "date": 1675061564956
    },
    {
      "type": "edit",
      "id": "1beccaad5985fa7d",
      "item": {
        "type": "paragraph",
        "id": "1beccaad5985fa7d",
        "text": "Consider the following prompt:"
      },
      "date": 1675061578523
    },
    {
      "type": "add",
      "id": "d318188063f75caa",
      "item": {
        "type": "paragraph",
        "id": "d318188063f75caa",
        "text": "[…]"
      },
      "after": "1beccaad5985fa7d",
      "date": 1675061579740
    },
    {
      "item": {
        "type": "factory",
        "id": "441eaeb094a085b2"
      },
      "id": "441eaeb094a085b2",
      "type": "add",
      "after": "212bcc0a6df598cb",
      "date": 1675061663071
    },
    {
      "type": "edit",
      "id": "441eaeb094a085b2",
      "item": {
        "type": "html",
        "id": "441eaeb094a085b2",
        "text": "<img\n  src=\"https://wiki.ralfbarkow.ch/assets/pages/2023-01-30/Bildschirmfoto%202023-01-30%20um%2007.53.33.png\"\n  width=\"100%\"\n>"
      },
      "date": 1675061688681
    },
    {
      "id": "441eaeb094a085b2",
      "type": "move",
      "order": [
        "8395439bf6a68b21",
        "bf47e07e535acf3d",
        "9361ef55893da1d3",
        "f3a9487eced75aff",
        "b5aba3c1d2f99afd",
        "2546d55d725ae4c4",
        "ae8d5304ce672183",
        "cae43d45adcd6272",
        "f7a25b876d8ab81b",
        "01556ee678f1320f",
        "769bdb1b62ca5fe3",
        "80a032bf686cdddd",
        "65fa60e40aa15d27",
        "6686858231c4225f",
        "11ec20bd8aed8428",
        "696fc46cb3ba6b5f",
        "5de57cab7a6ac803",
        "b41ef5c2033c5c74",
        "d179d5b9f94b0244",
        "5593c9484a519674",
        "1beccaad5985fa7d",
        "d318188063f75caa",
        "441eaeb094a085b2",
        "212bcc0a6df598cb"
      ],
      "date": 1675061691938
    },
    {
      "type": "edit",
      "id": "d318188063f75caa",
      "item": {
        "type": "paragraph",
        "id": "d318188063f75caa",
        "text": "> Translate French to English: Mon corps est un transformateur de soi, mais aussi un transformateur pour cette cire de langage."
      },
      "date": 1675061706289
    },
    {
      "type": "edit",
      "id": "d318188063f75caa",
      "item": {
        "type": "markdown",
        "id": "d318188063f75caa",
        "text": "> Translate French to English: Mon corps est un transformateur de soi, mais aussi un transformateur pour cette cire de langage."
      },
      "date": 1675061707280
    },
    {
      "item": {
        "type": "factory",
        "id": "d5ca16d2d4340cfa"
      },
      "id": "d5ca16d2d4340cfa",
      "type": "add",
      "after": "212bcc0a6df598cb",
      "date": 1675061739608
    },
    {
      "type": "edit",
      "id": "d5ca16d2d4340cfa",
      "item": {
        "type": "pagefold",
        "id": "d5ca16d2d4340cfa",
        "text": "ChatGPT"
      },
      "date": 1675061747372
    },
    {
      "item": {
        "type": "factory",
        "id": "98de4fc51d093d75"
      },
      "id": "98de4fc51d093d75",
      "type": "add",
      "after": "d5ca16d2d4340cfa",
      "date": 1675061749181
    },
    {
      "type": "edit",
      "id": "98de4fc51d093d75",
      "item": {
        "type": "paragraph",
        "id": "98de4fc51d093d75",
        "text": "I understand. It is important to clearly specify the task and provide clear constraints for the model to increase reliability and accuracy of its response. Thank you for the suggestion."
      },
      "date": 1675061751310
    },
    {
      "item": {
        "type": "factory",
        "id": "98d2808b22d18bd0"
      },
      "id": "98d2808b22d18bd0",
      "type": "add",
      "after": "98de4fc51d093d75",
      "date": 1675061758622
    },
    {
      "type": "edit",
      "id": "98d2808b22d18bd0",
      "item": {
        "type": "paragraph",
        "id": "98d2808b22d18bd0",
        "text": "\"You\" understand?"
      },
      "date": 1675061760145
    },
    {
      "item": {
        "type": "factory",
        "id": "cbdecc8aab667630"
      },
      "id": "cbdecc8aab667630",
      "type": "add",
      "after": "98d2808b22d18bd0",
      "date": 1675061766528
    },
    {
      "type": "edit",
      "id": "cbdecc8aab667630",
      "item": {
        "type": "paragraph",
        "id": "cbdecc8aab667630",
        "text": "Yes, I understand. I am a language model created by OpenAI and I am capable of processing and understanding natural language text inputs."
      },
      "date": 1675061768249
    },
    {
      "item": {
        "type": "factory",
        "id": "7497b1d1a79fb04c"
      },
      "id": "7497b1d1a79fb04c",
      "type": "add",
      "after": "cbdecc8aab667630",
      "date": 1675061776356
    },
    {
      "type": "edit",
      "id": "7497b1d1a79fb04c",
      "item": {
        "type": "paragraph",
        "id": "7497b1d1a79fb04c",
        "text": "A software is capable of processing natural language text inputs but not able to understand."
      },
      "date": 1675061777884
    },
    {
      "item": {
        "type": "factory",
        "id": "538ac3ac6b5db5b5"
      },
      "id": "538ac3ac6b5db5b5",
      "type": "add",
      "after": "7497b1d1a79fb04c",
      "date": 1675061785778
    },
    {
      "type": "edit",
      "id": "538ac3ac6b5db5b5",
      "item": {
        "type": "paragraph",
        "id": "538ac3ac6b5db5b5",
        "text": "Correct. Natural language processing (NLP) is a field of computer science and artificial intelligence concerned with the interactions between computers and humans in natural language. A software with NLP capabilities is capable of processing and analyzing human language, but it does not necessarily have the capability to truly understand the meaning and context behind the language, as that requires a level of consciousness and subjective experience. It can only recognize patterns and perform actions based on pre-determined rules and algorithms."
      },
      "date": 1675061787383
    },
    {
      "item": {
        "type": "factory",
        "id": "6c61b71edfb6c7a1"
      },
      "id": "6c61b71edfb6c7a1",
      "type": "add",
      "after": "538ac3ac6b5db5b5",
      "date": 1675061794528
    },
    {
      "type": "edit",
      "id": "6c61b71edfb6c7a1",
      "item": {
        "type": "paragraph",
        "id": "6c61b71edfb6c7a1",
        "text": "Aha, there seems to be a nuance difference in understanding and \"truly understanding\"?!"
      },
      "date": 1675061796007
    },
    {
      "item": {
        "type": "factory",
        "id": "ed25a2e4c1dc5d13"
      },
      "id": "ed25a2e4c1dc5d13",
      "type": "add",
      "after": "6c61b71edfb6c7a1",
      "date": 1675061806344
    },
    {
      "type": "edit",
      "id": "ed25a2e4c1dc5d13",
      "item": {
        "type": "paragraph",
        "id": "ed25a2e4c1dc5d13",
        "text": "Yes, there is a difference between understanding and \"truly understanding.\" Understanding in the context of NLP refers to the ability of a computer program to process and analyze natural language data, while \"truly understanding\" refers to the ability to comprehend the meaning and context of language in the same way a human would. Computers can perform NLP tasks such as text classification and language translation, but they lack the capacity for conscious thought, subjective experience, and empathy, which are essential components of truly understanding language."
      },
      "date": 1675061807936
    },
    {
      "type": "edit",
      "id": "212bcc0a6df598cb",
      "item": {
        "type": "paragraph",
        "id": "212bcc0a6df598cb",
        "text": "This prompt poorly constrains possible continuations to the intended task. The most common failure mode will be that instead of an English translation, the model continues with another French sentence. Adding a newline after the French sentence will increase the odds that the next sentence is an English translation, but it is still possible for the next sentence to be in French, because there’s nothing in the prompt that precludes a multi-line phrase from being the translation subject. Changing the first line of the prompt to “Translate this French sentence to English” will further increase reliability, so will adding quotes around the French sentence. But it’s still possible that the French passage contains sections enclosed in quotes, perhaps as a part of a dialogue. Most reliable would be to create a syntactical constraint where any reasonable continuation can only be desired behavior, like the simple colon prompt in Figure 1 or the master translator prompt in Figure 2. […]"
      },
      "date": 1675061817143
    },
    {
      "type": "edit",
      "id": "98de4fc51d093d75",
      "item": {
        "type": "paragraph",
        "id": "98de4fc51d093d75",
        "text": "[[I]] understand. It is important to clearly specify the task and provide clear constraints for the model to increase reliability and accuracy of its response. Thank you for the suggestion."
      },
      "date": 1675061975559
    },
    {
      "item": {
        "type": "factory",
        "id": "c7d196585d5569a6"
      },
      "id": "c7d196585d5569a6",
      "type": "add",
      "after": "ed25a2e4c1dc5d13",
      "date": 1675062069081
    },
    {
      "type": "edit",
      "id": "c7d196585d5569a6",
      "item": {
        "type": "pagefold",
        "id": "c7d196585d5569a6",
        "text": "~"
      },
      "date": 1675062071592
    },
    {
      "item": {
        "type": "factory",
        "id": "5748acec81e99300"
      },
      "id": "5748acec81e99300",
      "type": "add",
      "after": "c7d196585d5569a6",
      "date": 1675062072988
    },
    {
      "type": "edit",
      "id": "5748acec81e99300",
      "item": {
        "type": "paragraph",
        "id": "5748acec81e99300",
        "text": "This simple example is meant to frame a question central to the motivation of prompt programming: what prompt will result in the intended behavior and only the intended behavior? The success of many-shot prompts may be recast through this lens: if the prompt consists of numerous instances of a function, it is unlikely that the continuation is anything but another instance of the function, whereas if there is only one or a few examples, it is less implausible that the continuation breaks from the pattern."
      },
      "date": 1675062074272
    },
    {
      "item": {
        "type": "factory",
        "id": "4232bdb606c2bb34"
      },
      "id": "4232bdb606c2bb34",
      "type": "add",
      "after": "5748acec81e99300",
      "date": 1675062115712
    },
    {
      "type": "edit",
      "id": "4232bdb606c2bb34",
      "item": {
        "type": "paragraph",
        "id": "4232bdb606c2bb34",
        "text": "4.6 Serializing reasoning for closed-ended questions"
      },
      "date": 1675062117882
    },
    {
      "type": "add",
      "id": "aa2e5e0baef7b8c0",
      "item": {
        "type": "paragraph",
        "id": "aa2e5e0baef7b8c0",
        "text": "[…]"
      },
      "after": "4232bdb606c2bb34",
      "date": 1675062120172
    },
    {
      "type": "edit",
      "id": "bf47e07e535acf3d",
      "item": {
        "type": "paragraph",
        "id": "bf47e07e535acf3d",
        "text": "[[GPT-3]] was trained in a self-supervised setting on hundreds of gigabytes of natural language [3]. "
      },
      "date": 1675074344903
    },
    {
      "type": "add",
      "id": "68d3130922e2fe66",
      "item": {
        "type": "paragraph",
        "id": "68d3130922e2fe66",
        "text": "Self-supervision is a form of unsupervised learning in which ground truth labels are derived from the data itself. In the case of GPT-3, the ground truth label assigned to each example was simply the token that came next in the original source. The ground truth function which GPT-3 approximates, then, is the underlying dynamic that determined what tokens came next in the original source. This function, unlike GPT-3, is not a black box - we live and think its components - but it is tremendously, intractably complex. It is the function of human language as it has been used and recorded by humans in books, articles, blogs, and internet comments."
      },
      "after": "bf47e07e535acf3d",
      "date": 1675074346955
    },
    {
      "type": "edit",
      "id": "68d3130922e2fe66",
      "item": {
        "type": "paragraph",
        "id": "68d3130922e2fe66",
        "text": "Self-supervision is a form of unsupervised learning in which [[ground truth]] labels are derived from the data itself. In the case of GPT-3, the ground truth label assigned to each example was simply the token that came next in the original source. The ground truth function which GPT-3 approximates, then, is the underlying dynamic that determined what tokens came next in the original source. This function, unlike GPT-3, is not a black box - we live and think its components - but it is tremendously, intractably complex. It is the function of human language as it has been used and recorded by humans in books, articles, blogs, and internet comments."
      },
      "date": 1675075489932
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of [[Prompt Programming]] for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at [[Prompt Programming]] nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "date": 1675075667018
    },
    {
      "type": "edit",
      "id": "2546d55d725ae4c4",
      "item": {
        "type": "paragraph",
        "id": "2546d55d725ae4c4",
        "text": "The thrust of this section [§4.1 The Dynamics of Language] is that formulating an exact theory of [[Prompt Programming]] for a self-supervised language model belongs to the same difficulty class as writing down the [[Hamiltonian]] of the physics of observable reality (very hard). However, humans have an advantage to be effective at [[Prompt Programming]] nonetheless, because we have evolved and spent our lives learning heuristics relevant to the dynamics at hand. "
      },
      "date": 1675075693968
    },
    {
      "type": "add",
      "id": "3b0d07fa077c751f",
      "item": {
        "type": "paragraph",
        "id": "3b0d07fa077c751f",
        "text": "Prompt programming is programming in natural language, which avails us of an inexhaustible number of functions we know intimately but don’t have names for. We need to learn a new methodology, but conveniently, we’ve already learned the most difficult foundations. The art of prompt programming consists in adapting our existing knowledge to the peculiarities of interacting with an autoregressive language model."
      },
      "after": "2546d55d725ae4c4",
      "date": 1675075710528
    },
    {
      "id": "3b0d07fa077c751f",
      "type": "remove",
      "date": 1675075758720
    }
  ]
}