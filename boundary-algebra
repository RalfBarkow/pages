{
  "title": "Boundary Algebra",
  "story": [
    {
      "type": "paragraph",
      "id": "df6fca980cbbcc93",
      "text": "⇒ [[Boundaries]]"
    },
    {
      "type": "paragraph",
      "id": "d2a63420ee974adf",
      "text": "Boundary algebra applies boundary notation to perform algebraic manipulation. Any notation that expresses elementary algebra requires more than a single distinction. For this purpose, we extended boundary notation by attaching descriptors to each boundary that define each distinction. The rest of boundary mathematics remains intact: space is still commutative and associative, and rules still apply in parallel. "
    },
    {
      "type": "paragraph",
      "id": "139fb37946931f36",
      "text": "The fundamental construct of boundary algebra for expressing numbers is the unit, expressed here by an asterisk, *. A unit is necessary to \"add like things\" and to perform multiplication. Fundamentally, space has the semantics of addition; configurations add by incorporating them in the same space. If they have the same unit, the result can be simplified. On the other hand, multiplication replaces the units of one expression with the entirety of the other. "
    },
    {
      "type": "paragraph",
      "id": "11213407bf7ba4b0",
      "text": "We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents, which would cancel with a non-inverted copy when in the same space. Both of these distinctions can be distributed across their contents."
    },
    {
      "type": "factory",
      "id": "75ffd72726a26752"
    },
    {
      "type": "markdown",
      "id": "3e982b7145912c95",
      "text": "Two special-purpose distinctions allow the building of algebraic structure. The *lambda* distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows *composition* of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associative distinctions."
    },
    {
      "type": "paragraph",
      "id": "53acb08371292233",
      "text": "The special purpose distinctions above combine with additional distinctions representing algebraic unknowns. If we assume these distinctions represent quantities, then we can apply rules to them as such. Quantitative distinctions are commutative and associative, allowing composition. Quantitative distinctions can also be distributed across their content (the distribution rule). The examples in Figure 6 include a mixture of predefined and unknown distinctions."
    },
    {
      "type": "factory",
      "id": "fd1ac060a5b39670"
    },
    {
      "type": "markdown",
      "id": "976c3fafbd6399aa",
      "text": "Figure 6 shows three visual interpretationsof boundary algebra. *Stacks* use blocks for each object, and stack to specify distinction. The *distinction spaces* approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating *labeled boundaries*."
    },
    {
      "type": "paragraph",
      "id": "7260eaddfbbacea9",
      "text": "These approaches provide visual interpretations of the boundary algebra rules. Figure 7 shows this visualization for labeled boundaries. Using just these visual rules, algebraic manipulation is possible; they are sufficiently powerfid to visually derive the quadratic formula."
    },
    {
      "type": "factory",
      "id": "363c89f44b26a8ad"
    },
    {
      "type": "markdown",
      "id": "96edeec0adf7a350",
      "text": "# Conclusion"
    },
    {
      "type": "paragraph",
      "id": "476ada7531ddf24f",
      "text": "Mathematics can be made visual with boundary notation. Boundary notation forms expressions using boundaries to separate spaces and distinguish objects. Computation occurs on these spatial structures rather than on typographical structures. The resulting mathematical interactions are visual and can be fully animated."
    },
    {
      "type": "paragraph",
      "id": "357f551ea39cc8fa",
      "text": "Future work in this area will focus on the implementation of boundary algebra. Our current work in boundary logic is complete, having shown the boundary rules to be axiomatic and having implemented software to perform and animate logic proofs [4]. The rules of the boundary algebra must be similarly refined and a software implementation built. This implementation will demonstrate the power and interactivity of visual mathematics using boundary notation."
    },
    {
      "type": "pagefold",
      "id": "96fe45f61d9f124f",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "a2f285c8a32d0454",
      "text": "W. Bricken. An Introduction to Boundary Logic with the Losp Deductive Engine. Human Interface Technology Laboratory, TechnicalReport No. HlTL-R-89-1, 1989. [https://pascal-francis.inist.fr/vibad/index.php?action=getRecordDetail&idt=19495754 page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Boundary Algebra",
        "story": []
      },
      "date": 1659264366899
    },
    {
      "item": {
        "type": "factory",
        "id": "df6fca980cbbcc93"
      },
      "id": "df6fca980cbbcc93",
      "type": "add",
      "date": 1659264368290
    },
    {
      "type": "edit",
      "id": "df6fca980cbbcc93",
      "item": {
        "type": "paragraph",
        "id": "df6fca980cbbcc93",
        "text": "⇒ [[Boundaries]]"
      },
      "date": 1659264372557
    },
    {
      "item": {
        "type": "factory",
        "id": "d2a63420ee974adf"
      },
      "id": "d2a63420ee974adf",
      "type": "add",
      "after": "df6fca980cbbcc93",
      "date": 1659266442625
    },
    {
      "type": "edit",
      "id": "d2a63420ee974adf",
      "item": {
        "type": "paragraph",
        "id": "d2a63420ee974adf",
        "text": "Boundary algebra applies boundary notation to perform algebraic manipulation. Any notation that expresses elementary algebra requires more than a single distinction. For this purpose, we extended boundary notation by attaching descriptors to each boundary that define each distinction. The rest of boundary mathematics remains intact: space is still commutative and associative, and rules still apply in parallel. The fundamental construct of boundary algebra for expressing numbers is the unit, expressed here by an asterisk, *. A unit is necessary to \"add like things\" and to perform multiplication. Fundamentally, space has the semantics of addition; configurations add by incorporating them in the same space. If they have the same unit, the result can be simplified. On the other hand, multiplication replaces the units of one expression with the entirety of the other. We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents,"
      },
      "date": 1659266444889
    },
    {
      "type": "edit",
      "id": "d2a63420ee974adf",
      "item": {
        "type": "paragraph",
        "id": "d2a63420ee974adf",
        "text": "Boundary algebra applies boundary notation to perform algebraic manipulation. Any notation that expresses elementary algebra requires more than a single distinction. For this purpose, we extended boundary notation by attaching descriptors to each boundary that define each distinction. The rest of boundary mathematics remains intact: space is still commutative and associative, and rules still apply in parallel. "
      },
      "date": 1659266456666
    },
    {
      "type": "add",
      "id": "139fb37946931f36",
      "item": {
        "type": "paragraph",
        "id": "139fb37946931f36",
        "text": "The fundamental construct of boundary algebra for expressing numbers is the unit, expressed here by an asterisk, *. A unit is necessary to \"add like things\" and to perform multiplication. Fundamentally, space has the semantics of addition; configurations add by incorporating them in the same space. If they have the same unit, the result can be simplified. On the other hand, multiplication replaces the units of one expression with the entirety of the other. We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents,"
      },
      "after": "d2a63420ee974adf",
      "date": 1659266457708
    },
    {
      "type": "edit",
      "id": "139fb37946931f36",
      "item": {
        "type": "paragraph",
        "id": "139fb37946931f36",
        "text": "The fundamental construct of boundary algebra for expressing numbers is the unit, expressed here by an asterisk, *. A unit is necessary to \"add like things\" and to perform multiplication. Fundamentally, space has the semantics of addition; configurations add by incorporating them in the same space. If they have the same unit, the result can be simplified. On the other hand, multiplication replaces the units of one expression with the entirety of the other. "
      },
      "date": 1659266468109
    },
    {
      "type": "add",
      "id": "11213407bf7ba4b0",
      "item": {
        "type": "paragraph",
        "id": "11213407bf7ba4b0",
        "text": "We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents,"
      },
      "after": "139fb37946931f36",
      "date": 1659266468976
    },
    {
      "type": "edit",
      "id": "11213407bf7ba4b0",
      "item": {
        "type": "paragraph",
        "id": "11213407bf7ba4b0",
        "text": "We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents, which would cancel with a non-inverted copy when in the same space. Both of these distinctions can be distributed across their contents"
      },
      "date": 1659266496510
    },
    {
      "item": {
        "type": "factory",
        "id": "75ffd72726a26752"
      },
      "id": "75ffd72726a26752",
      "type": "add",
      "after": "11213407bf7ba4b0",
      "date": 1659266519335
    },
    {
      "item": {
        "type": "factory",
        "id": "3e982b7145912c95"
      },
      "id": "3e982b7145912c95",
      "type": "add",
      "after": "75ffd72726a26752",
      "date": 1659266522242
    },
    {
      "type": "edit",
      "id": "3e982b7145912c95",
      "item": {
        "type": "paragraph",
        "id": "3e982b7145912c95",
        "text": "Two special-purpose distinctions allow the building of algebraic structure. The lambda distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows composition of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associativedistinctions."
      },
      "date": 1659266525731
    },
    {
      "type": "edit",
      "id": "11213407bf7ba4b0",
      "item": {
        "type": "paragraph",
        "id": "11213407bf7ba4b0",
        "text": "We represent elementary algebra in boundary notation using four special purpose distinctions. The rules listed in Figure 5 define these distinctions. The first two rules accommodate numerical representation. Cardinality allows replacement of two identical configurations by a single configuration, distinguished as doubled. The inverse distinction indicates an inversion of the contents, which would cancel with a non-inverted copy when in the same space. Both of these distinctions can be distributed across their contents."
      },
      "date": 1659266535455
    },
    {
      "type": "edit",
      "id": "3e982b7145912c95",
      "item": {
        "type": "paragraph",
        "id": "3e982b7145912c95",
        "text": "Two special-purpose distinctions allow the building of algebraic structure. The *lambda* distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows composition of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associativedistinctions."
      },
      "date": 1659266561493
    },
    {
      "type": "edit",
      "id": "3e982b7145912c95",
      "item": {
        "type": "paragraph",
        "id": "3e982b7145912c95",
        "text": "Two special-purpose distinctions allow the building of algebraic structure. The *lambda* distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows *composition* of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associativedistinctions."
      },
      "date": 1659266584132
    },
    {
      "type": "edit",
      "id": "3e982b7145912c95",
      "item": {
        "type": "markdown",
        "id": "3e982b7145912c95",
        "text": "Two special-purpose distinctions allow the building of algebraic structure. The *lambda* distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows *composition* of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associativedistinctions."
      },
      "date": 1659266587067
    },
    {
      "item": {
        "type": "factory",
        "id": "53acb08371292233"
      },
      "id": "53acb08371292233",
      "type": "add",
      "after": "3e982b7145912c95",
      "date": 1659266606747
    },
    {
      "item": {
        "type": "factory",
        "id": "fd1ac060a5b39670"
      },
      "id": "fd1ac060a5b39670",
      "type": "add",
      "after": "53acb08371292233",
      "date": 1659266612308
    },
    {
      "type": "edit",
      "id": "53acb08371292233",
      "item": {
        "type": "paragraph",
        "id": "53acb08371292233",
        "text": "The special purpose distinctions above combine with additional distinctions representing algebraic unknowns. If we assume these distinctions represent quantities, then we can apply rules to them as such. Quantitative distinctions are commutative and associative, allowing composition. Quantitative distinctions can also be distributed across their content (the distribution rule). The examples in Figure 6 include a mixture of predefined and unknown distinctions."
      },
      "date": 1659266614244
    },
    {
      "item": {
        "type": "factory",
        "id": "976c3fafbd6399aa"
      },
      "id": "976c3fafbd6399aa",
      "type": "add",
      "after": "fd1ac060a5b39670",
      "date": 1659266648112
    },
    {
      "type": "edit",
      "id": "976c3fafbd6399aa",
      "item": {
        "type": "paragraph",
        "id": "976c3fafbd6399aa",
        "text": "Figure 6 shows three visual interpretationsof boundary algebra. Stacks use blocks for each object, and stack to specify distinction. The distinction spaces approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating labeled boundaries."
      },
      "date": 1659266650128
    },
    {
      "type": "edit",
      "id": "976c3fafbd6399aa",
      "item": {
        "type": "paragraph",
        "id": "976c3fafbd6399aa",
        "text": "Figure 6 shows three visual interpretationsof boundary algebra. *Stacks* use blocks for each object, and stack to specify distinction. The distinction spaces approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating labeled boundaries."
      },
      "date": 1659266669443
    },
    {
      "type": "edit",
      "id": "976c3fafbd6399aa",
      "item": {
        "type": "markdown",
        "id": "976c3fafbd6399aa",
        "text": "Figure 6 shows three visual interpretationsof boundary algebra. *Stacks* use blocks for each object, and stack to specify distinction. The distinction spaces approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating labeled boundaries."
      },
      "date": 1659266671596
    },
    {
      "type": "edit",
      "id": "976c3fafbd6399aa",
      "item": {
        "type": "markdown",
        "id": "976c3fafbd6399aa",
        "text": "Figure 6 shows three visual interpretationsof boundary algebra. *Stacks* use blocks for each object, and stack to specify distinction. The *distinction spaces* approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating labeled boundaries."
      },
      "date": 1659266727996
    },
    {
      "type": "edit",
      "id": "976c3fafbd6399aa",
      "item": {
        "type": "markdown",
        "id": "976c3fafbd6399aa",
        "text": "Figure 6 shows three visual interpretationsof boundary algebra. *Stacks* use blocks for each object, and stack to specify distinction. The *distinction spaces* approach draws boundaries as pairs of spaces, one to describe the boundary, the other to specify its content. This representation is vertically dependent. The third interpretation attaches objects to boundaries, creating *labeled boundaries*."
      },
      "date": 1659266750223
    },
    {
      "item": {
        "type": "factory",
        "id": "7260eaddfbbacea9"
      },
      "id": "7260eaddfbbacea9",
      "type": "add",
      "after": "976c3fafbd6399aa",
      "date": 1659266779569
    },
    {
      "type": "edit",
      "id": "7260eaddfbbacea9",
      "item": {
        "type": "paragraph",
        "id": "7260eaddfbbacea9",
        "text": "These approaches provide visual interpretations of the boundary algebra rules. Figure 7 shows this visualization"
      },
      "date": 1659266783409
    },
    {
      "type": "edit",
      "id": "7260eaddfbbacea9",
      "item": {
        "type": "paragraph",
        "id": "7260eaddfbbacea9",
        "text": "These approaches provide visual interpretations of the boundary algebra rules. Figure 7 shows this visualization for labeled boundaries. Using just these visual rules, algebraic manipulation is possible; they are sufficiently powerfid to visually derive the quadratic formula."
      },
      "date": 1659266798966
    },
    {
      "item": {
        "type": "factory",
        "id": "363c89f44b26a8ad"
      },
      "id": "363c89f44b26a8ad",
      "type": "add",
      "after": "7260eaddfbbacea9",
      "date": 1659266800565
    },
    {
      "item": {
        "type": "factory",
        "id": "96edeec0adf7a350"
      },
      "id": "96edeec0adf7a350",
      "type": "add",
      "after": "363c89f44b26a8ad",
      "date": 1659266844481
    },
    {
      "type": "edit",
      "id": "96edeec0adf7a350",
      "item": {
        "type": "markdown",
        "id": "96edeec0adf7a350",
        "text": "# Conclusion"
      },
      "date": 1659266853008
    },
    {
      "item": {
        "type": "factory",
        "id": "476ada7531ddf24f"
      },
      "id": "476ada7531ddf24f",
      "type": "add",
      "after": "96edeec0adf7a350",
      "date": 1659266860403
    },
    {
      "type": "edit",
      "id": "476ada7531ddf24f",
      "item": {
        "type": "paragraph",
        "id": "476ada7531ddf24f",
        "text": "Mathematics can be made visual with boundary notation. Boundary notation forms expressions using boundaries to separate spaces and distinguish objects. Computation occurs on these spatial structures rather than on typographical structures. The resulting mathematical interactions are visual and can be fully animated."
      },
      "date": 1659266863544
    },
    {
      "item": {
        "type": "factory",
        "id": "357f551ea39cc8fa"
      },
      "id": "357f551ea39cc8fa",
      "type": "add",
      "after": "476ada7531ddf24f",
      "date": 1659266887598
    },
    {
      "type": "edit",
      "id": "357f551ea39cc8fa",
      "item": {
        "type": "paragraph",
        "id": "357f551ea39cc8fa",
        "text": "Future work in this area will focus on the implementation of boundary algebra. Our current work in boundary logic is complete, having shown the boundary rules to be axiomatic and having implemented software to perform and animate logic proofs [4]. The rules of the boundary algebra must be similarly refined and a software implementation built. This implementation will demonstrate the power and interactivity of visual mathematics using boundary notation."
      },
      "date": 1659266890510
    },
    {
      "item": {
        "type": "factory",
        "id": "96fe45f61d9f124f"
      },
      "id": "96fe45f61d9f124f",
      "type": "add",
      "after": "357f551ea39cc8fa",
      "date": 1659266915306
    },
    {
      "type": "edit",
      "id": "96fe45f61d9f124f",
      "item": {
        "type": "pagefold",
        "id": "96fe45f61d9f124f",
        "text": "~"
      },
      "date": 1659266919148
    },
    {
      "item": {
        "type": "factory",
        "id": "a2f285c8a32d0454"
      },
      "id": "a2f285c8a32d0454",
      "type": "add",
      "after": "96fe45f61d9f124f",
      "date": 1659266920827
    },
    {
      "type": "edit",
      "id": "a2f285c8a32d0454",
      "item": {
        "type": "paragraph",
        "id": "a2f285c8a32d0454",
        "text": "W. Bricken. An Introduction to Boundary Logic with the Losp Deductive Engine. Human Interface Technology Laboratory, TechnicalReport No. HlTL-R-89-1, 1989."
      },
      "date": 1659266926594
    },
    {
      "type": "edit",
      "id": "a2f285c8a32d0454",
      "item": {
        "type": "paragraph",
        "id": "a2f285c8a32d0454",
        "text": "W. Bricken. An Introduction to Boundary Logic with the Losp Deductive Engine. Human Interface Technology Laboratory, TechnicalReport No. HlTL-R-89-1, 1989. [https://pascal-francis.inist.fr/vibad/index.php?action=getRecordDetail&idt=19495754 page]"
      },
      "date": 1659266951782
    },
    {
      "type": "edit",
      "id": "3e982b7145912c95",
      "item": {
        "type": "markdown",
        "id": "3e982b7145912c95",
        "text": "Two special-purpose distinctions allow the building of algebraic structure. The *lambda* distinction abstracts a common configuration out of an expression, replacing it with a place holder. The other special-purpose distinction allows *composition* of distinctions by abstracting them into a separate space. Once in a separate space, distinctions themselves can be modified by boundary algebra rules, creating exponents. The distinction composition rule applies only to commutative and associative distinctions."
      },
      "date": 1659370968852
    }
  ]
}