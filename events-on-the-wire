{
  "title": "Events on the Wire",
  "story": [
    {
      "type": "paragraph",
      "id": "68b4d22d25865975",
      "text": "Federated wiki combines a collaborative publishing model with individual editing and refactoring convenience. Here we compare events present in our system to the taxonomy of Martin Fowler, et.al. [https://martinfowler.com/articles/201701-event-driven.html post]"
    },
    {
      "type": "paragraph",
      "id": "4617ab745ee5f0de",
      "text": "Both clients and servers are coded as async javascript so there is considerable use of events and callbacks which we will disregard in this discussion as mere infrastructure."
    },
    {
      "type": "paragraph",
      "id": "76695a865b647fd3",
      "text": "We adopt the organization of the original post. The reader will benefit from consulting it first."
    },
    {
      "type": "markdown",
      "id": "79d7fdf44a13f994",
      "text": "# Event Notification"
    },
    {
      "type": "paragraph",
      "id": "7a142aeb36a12b15",
      "text": "We see little notification across the wire. The reader clicks a link which begets a search of the page's recorded context with http requests while handling 404 errors as they occur. We poll in a prescribed order and quit when satisfied. See [[Collaborative Link]]"
    },
    {
      "type": "paragraph",
      "id": "12140dd931512914",
      "text": "With a single browser tab new pages mention available sites which are then surveyed by requesting sitemaps and assembling these into a growing neighborhood of known pages, often numbering in the thousands. This spidering of the federation is again a async polling process that is repeated within each tab under the influence of browsing."
    },
    {
      "type": "markdown",
      "id": "1ad06493715e5e12",
      "text": "# Event-Carried State Transfer"
    },
    {
      "type": "paragraph",
      "id": "dcd5ab6ae1767267",
      "text": "Editing events we call actions originate in the client and are delivered to the server as they happen. This is the reverse of the flow described in the pattern. We could echo actions to subscribers who could then follow along with updates to the pages they are viewing."
    },
    {
      "type": "markdown",
      "id": "4e904a0acf9f8bf4",
      "text": "_Note to self: Try this event propagation out sometime. Consider persistent connections. This is still short of OT since only one party edits._"
    },
    {
      "type": "paragraph",
      "id": "72e711e16c3fb914",
      "text": "We keep the server-side current so that no save is required upon completion. Client and server can get out of sync in difficult networking situations. We recommend refreshing the browser thus accepting the server as truth."
    },
    {
      "type": "markdown",
      "id": "0c72d92ffa7816a4",
      "text": "# Event-Sourcing"
    },
    {
      "type": "paragraph",
      "id": "15ed3b718e8fab1b",
      "text": "We retain in each page the contents as a collection of items we call the story and the edit event history we call the journal. The server always provides both in their entirety but clients may choose to render a prior version by replying actions up to a point. Should a full replay of actions disagree with the story, the journal is assumed to have been corrupted."
    },
    {
      "type": "paragraph",
      "id": "fb304dfaf9aa2719",
      "text": "Change of ownership is also recorded in the journal as forks. One can consult a previous owner for their version of history as well as post fork updates."
    },
    {
      "type": "paragraph",
      "id": "60809692b7c4de61",
      "text": "We have experimented with concatenating journals as a means of merging changes. Here common prefixes would be replayed once."
    },
    {
      "type": "paragraph",
      "id": "597bb0c3dbe544a1",
      "text": "One can fork a reconstructed revision from history in which case the server's copy is replaced with the shortened journal. One should be clear: the journal tells how the current page came to be, not everything it might have been."
    },
    {
      "type": "markdown",
      "id": "5a813b59fbf0bd30",
      "text": "# CQRS"
    },
    {
      "type": "paragraph",
      "id": "7bae717e2d726066",
      "text": "We distinguish commands to the server from queries of the server. Here we departed from RESTful design early as our first command was the editing action 'move'."
    },
    {
      "type": "paragraph",
      "id": "0be5d878b1aa9840",
      "text": "The protocol by which a wiki page is edited is a decision made by the server when it, in the role of origin, delivers the appropriate javascript implementation to the browser. Federation depends only on reads and always of whole pages."
    },
    {
      "type": "markdown",
      "id": "39e42a11c0a187d6",
      "text": "# Making sense of these patterns"
    },
    {
      "type": "paragraph",
      "id": "283549e9564194a7",
      "text": "We detect in the summary by Fowler that the engineering goal is to overcome distribution rather than to embrace it as a creative force. We believe that overly consistent content creates a difficult editing environment and that some slip in consistency is required for natural selection to work its magic."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Events on the Wire",
        "story": []
      },
      "date": 1486481076035
    },
    {
      "item": {
        "type": "factory",
        "id": "68b4d22d25865975"
      },
      "id": "68b4d22d25865975",
      "type": "add",
      "date": 1486481078069
    },
    {
      "type": "edit",
      "id": "68b4d22d25865975",
      "item": {
        "type": "paragraph",
        "id": "68b4d22d25865975",
        "text": "Federated wiki combines a collaborative publishing model with individual editing and refactoring convenience. Here we compare events present in our system to the taxonomy of Martin Fowler, et.al."
      },
      "date": 1486481198507
    },
    {
      "type": "edit",
      "id": "68b4d22d25865975",
      "item": {
        "type": "paragraph",
        "id": "68b4d22d25865975",
        "text": "Federated wiki combines a collaborative publishing model with individual editing and refactoring convenience. Here we compare events present in our system to the taxonomy of Martin Fowler, et.al. [https://martinfowler.com/articles/201701-event-driven.html post]"
      },
      "date": 1486481215468
    },
    {
      "type": "add",
      "id": "4617ab745ee5f0de",
      "item": {
        "type": "paragraph",
        "id": "4617ab745ee5f0de",
        "text": "Both clients and servers are coded as async javascript so there is considerable use of events and callbacks which we will disregard in this discussion as mere infrastructure."
      },
      "after": "68b4d22d25865975",
      "date": 1486481348559
    },
    {
      "type": "add",
      "id": "76695a865b647fd3",
      "item": {
        "type": "paragraph",
        "id": "76695a865b647fd3",
        "text": "We adopt the organization of the original post. The reader will benefit from consulting it first."
      },
      "after": "4617ab745ee5f0de",
      "date": 1486481407393
    },
    {
      "type": "add",
      "id": "79d7fdf44a13f994",
      "item": {
        "type": "paragraph",
        "id": "79d7fdf44a13f994",
        "text": "# Event Notification"
      },
      "after": "76695a865b647fd3",
      "date": 1486481464727
    },
    {
      "type": "add",
      "id": "7a142aeb36a12b15",
      "item": {
        "type": "paragraph",
        "id": "7a142aeb36a12b15",
        "text": "We see little notification across the wire. The reader clicks a link which begets a search of the assembled context, the neighborhood, with http requests while handling 404 errors. We poll in a prescribed order and quit when satisfied. See [[Collaborative Link]]"
      },
      "after": "79d7fdf44a13f994",
      "date": 1486481819393
    },
    {
      "type": "edit",
      "id": "7a142aeb36a12b15",
      "item": {
        "type": "paragraph",
        "id": "7a142aeb36a12b15",
        "text": "We see little notification across the wire. The reader clicks a link which begets a search of the assembled context with http requests while handling 404 errors. We poll in a prescribed order and quit when satisfied. See [[Collaborative Link]]"
      },
      "date": 1486481886501
    },
    {
      "type": "edit",
      "id": "7a142aeb36a12b15",
      "item": {
        "type": "paragraph",
        "id": "7a142aeb36a12b15",
        "text": "We see little notification across the wire. The reader clicks a link which begets a search of the page's recorded context with http requests while handling 404 errors as they occur. We poll in a prescribed order and quit when satisfied. See [[Collaborative Link]]"
      },
      "date": 1486481949596
    },
    {
      "type": "add",
      "id": "12140dd931512914",
      "item": {
        "type": "paragraph",
        "id": "12140dd931512914",
        "text": "With a single browser tab new pages mention available sites which are then surveyed by requesting sitemaps and assembling these into a growing neighborhood of known pages, often numbering in the thousands. This spidering of the federation is again a async polling process that is repeated within each tab under the influence of browsing behavior within."
      },
      "after": "7a142aeb36a12b15",
      "date": 1486482277834
    },
    {
      "type": "edit",
      "id": "12140dd931512914",
      "item": {
        "type": "paragraph",
        "id": "12140dd931512914",
        "text": "With a single browser tab new pages mention available sites which are then surveyed by requesting sitemaps and assembling these into a growing neighborhood of known pages, often numbering in the thousands. This spidering of the federation is again a async polling process that is repeated within each tab under the influence of browsing."
      },
      "date": 1486482286749
    },
    {
      "type": "edit",
      "id": "79d7fdf44a13f994",
      "item": {
        "type": "markdown",
        "id": "79d7fdf44a13f994",
        "text": "# Event Notification"
      },
      "date": 1486482291848
    },
    {
      "item": {
        "type": "factory",
        "id": "1ad06493715e5e12"
      },
      "id": "1ad06493715e5e12",
      "type": "add",
      "after": "12140dd931512914",
      "date": 1486482379854
    },
    {
      "type": "edit",
      "id": "1ad06493715e5e12",
      "item": {
        "type": "paragraph",
        "id": "1ad06493715e5e12",
        "text": "# Event-Carried State Transfer"
      },
      "date": 1486482385263
    },
    {
      "type": "add",
      "id": "0c72d92ffa7816a4",
      "item": {
        "type": "paragraph",
        "id": "0c72d92ffa7816a4",
        "text": "# Event-Sourcing"
      },
      "after": "1ad06493715e5e12",
      "date": 1486482412040
    },
    {
      "type": "add",
      "id": "5a813b59fbf0bd30",
      "item": {
        "type": "paragraph",
        "id": "5a813b59fbf0bd30",
        "text": "# CQRS"
      },
      "after": "0c72d92ffa7816a4",
      "date": 1486482427266
    },
    {
      "type": "add",
      "id": "39e42a11c0a187d6",
      "item": {
        "type": "paragraph",
        "id": "39e42a11c0a187d6",
        "text": "# Making sense of these patterns"
      },
      "after": "5a813b59fbf0bd30",
      "date": 1486482475325
    },
    {
      "type": "add",
      "id": "dcd5ab6ae1767267",
      "item": {
        "type": "paragraph",
        "id": "dcd5ab6ae1767267",
        "text": "explain story and the actions that modify it"
      },
      "after": "1ad06493715e5e12",
      "date": 1486482660241
    },
    {
      "type": "add",
      "id": "15ed3b718e8fab1b",
      "item": {
        "type": "paragraph",
        "id": "15ed3b718e8fab1b",
        "text": "explain browsing and reconstruction of versions from actions"
      },
      "after": "0c72d92ffa7816a4",
      "date": 1486482694263
    },
    {
      "type": "add",
      "id": "7bae717e2d726066",
      "item": {
        "type": "paragraph",
        "id": "7bae717e2d726066",
        "text": "distinguish the public and private role of actions and their part in the story they create"
      },
      "after": "5a813b59fbf0bd30",
      "date": 1486482837840
    },
    {
      "type": "add",
      "id": "283549e9564194a7",
      "item": {
        "type": "paragraph",
        "id": "283549e9564194a7",
        "text": "assert that overly consistent content content creates a difficult editing environment and that some slip in consistency is required for creativity"
      },
      "after": "39e42a11c0a187d6",
      "date": 1486482923302
    },
    {
      "type": "edit",
      "id": "1ad06493715e5e12",
      "item": {
        "type": "markdown",
        "id": "1ad06493715e5e12",
        "text": "# Event-Carried State Transfer"
      },
      "date": 1486482928313
    },
    {
      "type": "edit",
      "id": "0c72d92ffa7816a4",
      "item": {
        "type": "markdown",
        "id": "0c72d92ffa7816a4",
        "text": "# Event-Sourcing"
      },
      "date": 1486482930101
    },
    {
      "type": "edit",
      "id": "5a813b59fbf0bd30",
      "item": {
        "type": "markdown",
        "id": "5a813b59fbf0bd30",
        "text": "# CQRS"
      },
      "date": 1486482931738
    },
    {
      "type": "edit",
      "id": "39e42a11c0a187d6",
      "item": {
        "type": "markdown",
        "id": "39e42a11c0a187d6",
        "text": "# Making sense of these patterns"
      },
      "date": 1486482933723
    },
    {
      "type": "edit",
      "id": "dcd5ab6ae1767267",
      "item": {
        "type": "paragraph",
        "id": "dcd5ab6ae1767267",
        "text": "Editing events we call actions originate in the client and are delivered to the server as they happen. This is the reverse of the flow described in the pattern. We could echo actions to subscribers who could then follow along with updates to the pages they are viewing."
      },
      "date": 1486911130245
    },
    {
      "type": "add",
      "id": "72e711e16c3fb914",
      "item": {
        "type": "paragraph",
        "id": "72e711e16c3fb914",
        "text": "We keep the server-side current so that no save is required upon completion. Client and server can get out of sync in difficult networking situations. We recommend refreshing the browser thus accepting the server as the source of truth."
      },
      "after": "dcd5ab6ae1767267",
      "date": 1486911646151
    },
    {
      "type": "edit",
      "id": "72e711e16c3fb914",
      "item": {
        "type": "paragraph",
        "id": "72e711e16c3fb914",
        "text": "We keep the server-side current so that no save is required upon completion. Client and server can get out of sync in difficult networking situations. We recommend refreshing the browser thus accepting the server as truth."
      },
      "date": 1486911655887
    },
    {
      "item": {
        "type": "factory",
        "id": "4e904a0acf9f8bf4"
      },
      "id": "4e904a0acf9f8bf4",
      "type": "add",
      "after": "283549e9564194a7",
      "date": 1486911686277
    },
    {
      "type": "edit",
      "id": "4e904a0acf9f8bf4",
      "item": {
        "type": "markdown",
        "id": "4e904a0acf9f8bf4",
        "text": "__Note to self: Try this event propagation out sometime. Consider persistent connections. This is still short of OT since only one party edits.__"
      },
      "date": 1486911847484
    },
    {
      "type": "edit",
      "id": "4e904a0acf9f8bf4",
      "item": {
        "type": "markdown",
        "id": "4e904a0acf9f8bf4",
        "text": "_Note to self: Try this event propagation out sometime. Consider persistent connections. This is still short of OT since only one party edits._"
      },
      "date": 1486911859018
    },
    {
      "type": "move",
      "order": [
        "68b4d22d25865975",
        "4617ab745ee5f0de",
        "76695a865b647fd3",
        "79d7fdf44a13f994",
        "7a142aeb36a12b15",
        "12140dd931512914",
        "1ad06493715e5e12",
        "dcd5ab6ae1767267",
        "4e904a0acf9f8bf4",
        "72e711e16c3fb914",
        "0c72d92ffa7816a4",
        "15ed3b718e8fab1b",
        "5a813b59fbf0bd30",
        "7bae717e2d726066",
        "39e42a11c0a187d6",
        "283549e9564194a7"
      ],
      "id": "4e904a0acf9f8bf4",
      "date": 1486911863921
    },
    {
      "type": "edit",
      "id": "15ed3b718e8fab1b",
      "item": {
        "type": "paragraph",
        "id": "15ed3b718e8fab1b",
        "text": "We retain in each page the contents as a collection of items we call the story and the edit event history we call the journal. The server always provides both in their entirety but clients may choose to render a prior version by replying actions up to a point. Should a full replay of actions disagree with the story, the journal is assumed to have been corrupted."
      },
      "date": 1486912499609
    },
    {
      "type": "add",
      "id": "fb304dfaf9aa2719",
      "item": {
        "type": "paragraph",
        "id": "fb304dfaf9aa2719",
        "text": "Change of ownership is also recorded in the journal as forks. One can consult a previous owner for their version of history as well as post fork updates."
      },
      "after": "15ed3b718e8fab1b",
      "date": 1486912665512
    },
    {
      "type": "add",
      "id": "60809692b7c4de61",
      "item": {
        "type": "paragraph",
        "id": "60809692b7c4de61",
        "text": "We have experimented with concatenating journals as a means of merging changes. Here common prefixes would be replayed once. "
      },
      "after": "fb304dfaf9aa2719",
      "date": 1486912847759
    },
    {
      "type": "edit",
      "id": "60809692b7c4de61",
      "item": {
        "type": "paragraph",
        "id": "60809692b7c4de61",
        "text": "We have experimented with concatenating journals as a means of merging changes. Here common prefixes would be replayed once."
      },
      "date": 1486912956940
    },
    {
      "type": "add",
      "id": "597bb0c3dbe544a1",
      "item": {
        "type": "paragraph",
        "id": "597bb0c3dbe544a1",
        "text": "One can fork a reconstructed revision from history in which case the server's copy is replaced with the shortened journal. One should be clear: the journal tells how the current page came to be, not everything it might have been."
      },
      "after": "60809692b7c4de61",
      "date": 1486913135585
    },
    {
      "type": "edit",
      "id": "7bae717e2d726066",
      "item": {
        "type": "paragraph",
        "id": "7bae717e2d726066",
        "text": "We distinguish commands to the server from queries of the server. Here we departed from RESTful design early as our first command was the editing action 'move'."
      },
      "date": 1486913480736
    },
    {
      "type": "add",
      "id": "0be5d878b1aa9840",
      "item": {
        "type": "paragraph",
        "id": "0be5d878b1aa9840",
        "text": "The protocol by which a wiki page is edited is a decision made by the server when it, in the role of origin, delivers the appropriate javascript implementation to the browser. Federation depends only on reads and always of whole pages."
      },
      "after": "7bae717e2d726066",
      "date": 1486913722359
    },
    {
      "type": "edit",
      "id": "283549e9564194a7",
      "item": {
        "type": "paragraph",
        "id": "283549e9564194a7",
        "text": "We sense in the summary by Fowler that the engineering goal is to overcome distribution rather than to embrace it as a creative force. We believe that overly consistent content creates a difficult editing environment and that some slip in consistency is required for natural selection to work its magic."
      },
      "date": 1486914190016
    },
    {
      "type": "edit",
      "id": "283549e9564194a7",
      "item": {
        "type": "paragraph",
        "id": "283549e9564194a7",
        "text": "We detect in the summary by Fowler that the engineering goal is to overcome distribution rather than to embrace it as a creative force. We believe that overly consistent content creates a difficult editing environment and that some slip in consistency is required for natural selection to work its magic."
      },
      "date": 1486914204201
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1527867818739
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1653815694809
    }
  ]
}