{
  "title": "3D Animation",
  "story": [
    {
      "type": "markdown",
      "id": "e3f655bca603bf53",
      "text": "This is an example of how a [[Croquet]] app can call on the services of a rich, independently developed JavaScript library - in this case, [[Three.js]] for 3D rendering through [[WebGL]]. The example extends into the third dimension the kind of simulation shown in the Simple Animation tutorial: in this case, balls bounce off the (invisible) walls of a container, and off a sphere that's embedded in the container's far wall. Dragging the sphere moves it, constrained to the container bounds. Clicking on the sphere resets the balls' positions to the sphere's center. – https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "3D Animation",
        "story": []
      },
      "date": 1655629970281
    },
    {
      "item": {
        "type": "factory",
        "id": "e3f655bca603bf53"
      },
      "id": "e3f655bca603bf53",
      "type": "add",
      "date": 1655629974557
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "paragraph",
        "id": "e3f655bca603bf53",
        "text": "– https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655629976833
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "markdown",
        "id": "e3f655bca603bf53",
        "text": "– https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655629977967
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "markdown",
        "id": "e3f655bca603bf53",
        "text": "This is an example of how a Croquet app can call on the services of a rich, independently developed JavaScript library - in this case, Three.js for 3D rendering through WebGL. The example extends into the third dimension the kind of simulation shown in the Simple Animation tutorial: in this case, balls bounce off the (invisible) walls of a container, and off a sphere that's embedded in the container's far wall. Dragging the sphere moves it, constrained to the container bounds. Clicking on the sphere resets the balls' positions to the sphere's center. – https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655629987284
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "markdown",
        "id": "e3f655bca603bf53",
        "text": "This is an example of how a [[Croquet]] app can call on the services of a rich, independently developed JavaScript library - in this case, Three.js for 3D rendering through WebGL. The example extends into the third dimension the kind of simulation shown in the Simple Animation tutorial: in this case, balls bounce off the (invisible) walls of a container, and off a sphere that's embedded in the container's far wall. Dragging the sphere moves it, constrained to the container bounds. Clicking on the sphere resets the balls' positions to the sphere's center. – https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655629996965
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "markdown",
        "id": "e3f655bca603bf53",
        "text": "This is an example of how a [[Croquet]] app can call on the services of a rich, independently developed JavaScript library - in this case, [[Three.js]] for 3D rendering through WebGL. The example extends into the third dimension the kind of simulation shown in the Simple Animation tutorial: in this case, balls bounce off the (invisible) walls of a container, and off a sphere that's embedded in the container's far wall. Dragging the sphere moves it, constrained to the container bounds. Clicking on the sphere resets the balls' positions to the sphere's center. – https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655630011600
    },
    {
      "type": "edit",
      "id": "e3f655bca603bf53",
      "item": {
        "type": "markdown",
        "id": "e3f655bca603bf53",
        "text": "This is an example of how a [[Croquet]] app can call on the services of a rich, independently developed JavaScript library - in this case, [[Three.js]] for 3D rendering through [[WebGL]]. The example extends into the third dimension the kind of simulation shown in the Simple Animation tutorial: in this case, balls bounce off the (invisible) walls of a container, and off a sphere that's embedded in the container's far wall. Dragging the sphere moves it, constrained to the container bounds. Clicking on the sphere resets the balls' positions to the sphere's center. – https://croquet.studio/docs/croquet/tutorial-1_5_3d_animation.html"
      },
      "date": 1655630021742
    }
  ]
}