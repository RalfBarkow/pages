{
  "title": "BackendTask",
  "story": [
    {
      "type": "paragraph",
      "id": "655e3bba8ee18bcb",
      "text": "In an [[elm-pages]] app, each Route Module can define a value data which is a BackendTask that will be resolved before init is called. That means it is also available when the page's HTML is pre-rendered during the build step. You can also access the resolved data in head to use it for the page's SEO meta tags. [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask page]"
    },
    {
      "type": "paragraph",
      "id": "9c53fc8328587a72",
      "text": "Think of BackendTask like a Cmd or Effect. It's a special type which you pass up to the runtime to ask it to do something for you. Since Elm code is pure, it can't perform side-effects. BackendTasks will not do anything unless they're passed to the elm-pages framework. Since the framework has its own Model, update, etc., it's able to go perform side-effects to resolve those BackendTasks for you. You can think of it like a wrapper around [[The Elm Architecture]] [https://guide.elm-lang.org/architecture/ site]. [https://elm-pages.com/docs/how-does-it-work page]"
    },
    {
      "type": "paragraph",
      "id": "c24cf26b3b2bb7cf",
      "text": "You can think of a BackendTask as a declarative (not imperative) definition of data. It represents where to get the data from, and how to transform it (map, combine with other BackendTasks, etc.). [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "BackendTask",
        "story": []
      },
      "date": 1682333234626
    },
    {
      "item": {
        "type": "factory",
        "id": "655e3bba8ee18bcb"
      },
      "id": "655e3bba8ee18bcb",
      "type": "add",
      "date": 1682333236125
    },
    {
      "type": "edit",
      "id": "655e3bba8ee18bcb",
      "item": {
        "type": "paragraph",
        "id": "655e3bba8ee18bcb",
        "text": "In an elm-pages app, each Route Module can define a value data which is a BackendTask that will be resolved before init is called. That means it is also available when the page's HTML is pre-rendered during the build step. You can also access the resolved data in head to use it for the page's SEO meta tags."
      },
      "date": 1682333238646
    },
    {
      "type": "edit",
      "id": "655e3bba8ee18bcb",
      "item": {
        "type": "paragraph",
        "id": "655e3bba8ee18bcb",
        "text": "In an elm-pages app, each Route Module can define a value data which is a BackendTask that will be resolved before init is called. That means it is also available when the page's HTML is pre-rendered during the build step. You can also access the resolved data in head to use it for the page's SEO meta tags. [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask page]"
      },
      "date": 1682333248858
    },
    {
      "type": "edit",
      "id": "655e3bba8ee18bcb",
      "item": {
        "type": "paragraph",
        "id": "655e3bba8ee18bcb",
        "text": "In an [[elm-pages]] app, each Route Module can define a value data which is a BackendTask that will be resolved before init is called. That means it is also available when the page's HTML is pre-rendered during the build step. You can also access the resolved data in head to use it for the page's SEO meta tags. [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/BackendTask page]"
      },
      "date": 1682333266243
    },
    {
      "id": "9c53fc8328587a72",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9c53fc8328587a72",
        "text": "Think of BackendTask like a Cmd or Effect. It's a special type which you pass up to the runtime to ask it to do something for you. Since Elm code is pure, it can't perform side-effects. BackendTasks will not do anything unless they're passed to the elm-pages framework. Since the framework has its own Model, update, etc., it's able to go perform side-effects to resolve those BackendTasks for you. You can think of it like a wrapper around [[The Elm Architecture]]."
      },
      "after": "655e3bba8ee18bcb",
      "attribution": {
        "page": "Cannot Get View"
      },
      "date": 1692796065526
    },
    {
      "type": "edit",
      "id": "9c53fc8328587a72",
      "item": {
        "type": "paragraph",
        "id": "9c53fc8328587a72",
        "text": "Think of BackendTask like a Cmd or Effect. It's a special type which you pass up to the runtime to ask it to do something for you. Since Elm code is pure, it can't perform side-effects. BackendTasks will not do anything unless they're passed to the elm-pages framework. Since the framework has its own Model, update, etc., it's able to go perform side-effects to resolve those BackendTasks for you. You can think of it like a wrapper around [[The Elm Architecture]]. [https://elm-pages.com/docs/how-does-it-work page]"
      },
      "date": 1692796091412
    },
    {
      "type": "edit",
      "id": "9c53fc8328587a72",
      "item": {
        "type": "paragraph",
        "id": "9c53fc8328587a72",
        "text": "Think of BackendTask like a Cmd or Effect. It's a special type which you pass up to the runtime to ask it to do something for you. Since Elm code is pure, it can't perform side-effects. BackendTasks will not do anything unless they're passed to the elm-pages framework. Since the framework has its own Model, update, etc., it's able to go perform side-effects to resolve those BackendTasks for you. You can think of it like a wrapper around [[The Elm Architecture]] [https://guide.elm-lang.org/architecture/ site]. [https://elm-pages.com/docs/how-does-it-work page]"
      },
      "date": 1692796201181
    },
    {
      "item": {
        "type": "factory",
        "id": "c24cf26b3b2bb7cf"
      },
      "id": "c24cf26b3b2bb7cf",
      "type": "add",
      "after": "9c53fc8328587a72",
      "date": 1692963241930
    },
    {
      "type": "edit",
      "id": "c24cf26b3b2bb7cf",
      "item": {
        "type": "paragraph",
        "id": "c24cf26b3b2bb7cf",
        "text": "You can think of a BackendTask as a declarative (not imperative) definition of data. It represents where to get the data from, and how to transform it (map, combine with other BackendTasks, etc.)."
      },
      "date": 1692963244248
    },
    {
      "type": "edit",
      "id": "c24cf26b3b2bb7cf",
      "item": {
        "type": "paragraph",
        "id": "c24cf26b3b2bb7cf",
        "text": "You can think of a BackendTask as a declarative (not imperative) definition of data. It represents where to get the data from, and how to transform it (map, combine with other BackendTasks, etc.). [https://package.elm-lang.org/packages/dillonkearns/elm-pages/10.0.1/BackendTask page]"
      },
      "date": 1692963251372
    }
  ]
}