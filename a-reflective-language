{
  "title": "A Reflective Language",
  "story": [
    {
      "type": "paragraph",
      "id": "3a19b67623db207e",
      "text": "RIVARD, Fred. Smalltalk: [[A Reflective Language]]. In: Proceedings of REFLECTION. 1996. S. 21-38. [http://ftp.linux62.org/~glibersat/publis/Riva96.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "bcd4db2584802544",
      "text": "> [[Classes]] as regular objects are described by other (regular) classes called [[metaclasses]]. A metaclass has a single instance (except metaclasses involved in the kernel of Smalltalk). It establishes a couple class/metaclass schema. Inheritance on metaclasses follows the one at the class level (cf Figure 1), defining the Smalltalk metaclass composition rule."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "A Reflective Language",
        "story": []
      },
      "date": 1660886335655
    },
    {
      "id": "3a19b67623db207e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3a19b67623db207e",
        "text": "RIVARD, Fred. Smalltalk: [[A Reflective Language]]. In: Proceedings of REFLECTION. 1996. S. 21-38. [http://ftp.linux62.org/~glibersat/publis/Riva96.pdf pdf]"
      },
      "date": 1660886360017
    },
    {
      "id": "bcd4db2584802544",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "bcd4db2584802544",
        "text": "> [[Classes]] as regular objects are described by other (regular) classes called metaclasses. A metaclass has a single instance (except metaclasses involved in the kernel of Smalltalk). It establishes a couple class/metaclass schema. Inheritance on metaclasses follows the one at the class level (cf Figure 1), defining the Smalltalk metaclass composition rule."
      },
      "after": "3a19b67623db207e",
      "date": 1660886363062
    },
    {
      "type": "edit",
      "id": "bcd4db2584802544",
      "item": {
        "type": "markdown",
        "id": "bcd4db2584802544",
        "text": "> [[Classes]] as regular objects are described by other (regular) classes called [[metaclasses]]. A metaclass has a single instance (except metaclasses involved in the kernel of Smalltalk). It establishes a couple class/metaclass schema. Inheritance on metaclasses follows the one at the class level (cf Figure 1), defining the Smalltalk metaclass composition rule."
      },
      "date": 1660887366147
    }
  ]
}