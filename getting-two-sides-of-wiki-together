{
  "title": "Getting Two sides of wiki together",
  "story": [
    {
      "type": "markdown",
      "id": "6c36e95dc727a57a",
      "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n"
    },
    {
      "type": "markdown",
      "id": "6e54501ef275ead7",
      "text": "> When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated."
    },
    {
      "type": "markdown",
      "id": "94ef58be49fd5f3e",
      "text": "\nThe article then explored _transclusion_, which is just a fancy way of saying \"inclusion\" or \"pointer to the original\", and that it's not the good solution for the purpose of Fediwiki.\n\nHowever I disagree with the observations and the conclusions.\n\n"
    },
    {
      "type": "markdown",
      "id": "f12d96ea51d6d30d",
      "text": "## The problems\n\nIn my view, Fedwiki is built around the idea of __forking__, or creating a copy of a page and start working on it independently, then showing it to the peers. I may not completely understand the motives (even [[ Federated Writing]] can't define what it is), but probably it is the total independence of others in the creative writing process.\n\n"
    },
    {
      "type": "markdown",
      "id": "8a8a12813f702634",
      "text": "### What might have been the main reasons behind using forking technique?\n\n- Working on an independent copy?\n- Same title - different content?\n- Adding content/updating to original? With the intent of merging back?\n- Segmentation of content? (To support or create [[Information Bubbles]]?)\n\nThe first reason nicely fits the solution.\n\nThe second could use a __common page reference__ (central or shared) which would contain infinite amount of forks, but this way they would be all collected in one place (and would offer much better merging possibilities than the scattered unconnected forks version). \n\nThe third would require a __fast, easy, painless way to merge back__, supported by code not manual labour. It would need multiple things, I'll detail later.\n\nThe fourth aspect would require controlled forks within specific areas, and may require \"same title\" pages covering \"different topics\". This could be solved by organising pages not by _title_ but by _meaning_ (by idea, by theory, by object), and controlling tightly how merges happen, and how links prefer the specific bubble sites first.\n\n"
    },
    {
      "type": "markdown",
      "id": "39bea65e6812a992",
      "text": "\n### Problem of the current method\n\nThe original idea was implemented as `wiki` `npm` module. This implementation - while containing extremely good features in large amounts - have a few problems in my opninion:\n\n- creates infinite amount of copies of the same material (violating _normalisation_ principles),\n- creates unorganised copies,\n- create unsearchable copies (same title on infinite sites need full-text searched to be distinguished),\n- creates wildly disconnected and diverging copies.\n\nAlso there are other, implementational problems:\n- hard (or impossible) to get full history of a page with authors, timestamps and full change history\n- backward (origin) pointers seem to be more-or-less available, but may be easily broken by sites removing specific Items or their versions\n- there seem to be no forward pointers, which would be essential to maintain updates of forks\n  - this also cause no forward notification possible, so forks can't be notified of changes (but forks could still ping origins backwards)\n* working state of links is highly dependent on the neighbourhood state of the moment, and can change from session to session.\n\nAnd the largest problem is\n- __there is no merging back.__\n\n"
    },
    {
      "type": "markdown",
      "id": "10b15c3dbca35cf7",
      "text": "### Response from the Fedwiki community about these problems\n\nThe mainstream answer were along the line of:\n- we wanted it this way (maximal independence of pages),\n- we already got used to it,\n- we can do it manually,\n- we discuss it in person/video chat (out of band),\n- we care way more about the writer than the readers,\n- some of those *can* be done in a hidden/non-trivial way,\n- we like surprises (instead of consistence/reliability).\n\n## Mergeback\n\nI believe my two most important missing features of the _current_ Fedwiki are\n1. fully connected forks with source, author and timestamp, and\n2. easy merging back.\n\nFor the first, I would imagine:\n\n"
    },
    {
      "type": "markdown",
      "id": "915681cd3a1eabab",
      "text": "### Every page with the same title would be somehow connected. \n\nBoth \"same title\" and \"somehow\" is open question. \n\n_Same title_ should rather mean __same object__ or __idea__, much similar to [[Wikidata]] entities, which are not connected to _words_ but _ideas_, like \"Kingdom of Hungary\" (1840) is a different object from \"Hungarian Republic\" (1995), which is also different from \"Hungary\" (2011); like \"Hungarian\" (language) is different from \"Hungarian\" (person) or \"Hungarian\" (attribute). Maybe that's too much added complexity, but a possible way to unify across languages and imperfect words/language. (Not to mention that Pages optionally could _actually reference Wikidata entities_ to connect to very precisely defined theories, objects, ideas.)\n\n_Somehow_ is preferably also federated, like every origin and every fork maintaining its First Origin (as an universal object indicator [think like [[GUID]] ]) and immediate parent and descendants (basically a [[DAG]]), so the fork tree always could be created and view. \n\nAlso it can be one central server recording all the forks of a page.\n\nSo anyone interested in __X__ would pull up the Tree of __X__ and be able to browse the forks, or do whatever they please to do with them.\nAlso it would be obvious how the forks are related, so if anyone looks for the most recent version of any given object it would be easy to find leaves, and find the one with the most recent timestamp. (Forks could be grouped by domains, or tags, or anything if one needs to actually mark the Information Bubbles, though I don't think it'd be necessary.)\n\n"
    },
    {
      "type": "markdown",
      "id": "8d8da1464cb68d68",
      "text": "### Easy merging back\n\nTo prevent information explosion there should be an automated, simple, machine-assisted way of merge-back.\n\nMerges require some well-known practical functions:\n- finding the original-fork relation (that's zeroth step, or call it pre-requisite)\n- seeing exactly the difference, clearly showing what and how changed\n- offering the possibility to merge whole document automatically if possible\n- when whole merge isn't possible due to conflicting changes, offering merging changed _Items_ in whole if it's possible \n- if that's not possible, offering merge strategies assisted with machine help as much as possible (while Wikipedia for example only offers \"merge the text manually\" at this stage, but it isn't good enough)\n- also offering the possibility to not to merge but _append_ the Items, or the Document to the original, preserving original state for example.\n\nMerging back would \"destroy\" the fork, or rather unify again it with its origin, lowering fragmentation and divergence.\n\nThere is two (non mutually exclusive) way to start a merge:\n1. Merge happens when original author gets notified (or become aware in any way) that their page was updated. It provides complete independence in the merging process but requires the author to thoroughly examine and manage the merging.\n2. Merge gets created when the fork author decides to merge back, knowing their own changes; they prepare a merge and notify the origin; the origin still decides whether to merge but the merging is already prepared, only have to be accepted, rejected or manually modified if the author wished so. (This is basically describing the _pull request model_.)\n\nThis would preserve independence of the original authors: they decide whether they merge or not, and what and how to merge. \n\nIt may pose a risk of malevolent forking notices or malevolent merging offers, but software could handle this gently, using unobtrusive hints, for example, as that someone have requested a merge on a page the author wishes to modify. And on a separate page provide a _waiting merges/PRs_ list which can be seen as the author feels fit (or ignored at will), without disturbing creative processes.\n\nSame goes, naturally, for the fork authors' protection. They would be notified if they want to work on a fork which was modified since in the original. \n\n(And all these \"realtime\" unotrusive notifications could be clicked away and ignored forever for that specific fork (or all forks for that page).)\n\nOrigin authors would have the option to set a page, or a whole site to \"independent\", meaning they do not want to know about the forks and usually do not intend to merge anything back. They would not get fork-changed page notifications and they wouldn't look at the _changed forks_ status page anyway.\n\nFork authors also have the possibility to mark the page as \"Not For Merging\", signaling that they do not intend to merge back, they intend to create a \"hard fork\" or an independent page, so all the warnings - both ways - would be silenced. These pages could be merged as any else, but there would be no origin-changed (and possibly fork-changed) notifications.\n\n"
    },
    {
      "type": "markdown",
      "id": "81c2aeca29c9a6cb",
      "text": "## Why not \"transclude\" or \"fork-protect\"?\n\nTransclusion means I have a document where parts are not mine. Its is working well with a frame already (and indeed there could be a transclusion Factory much like than a proxy now), but I believe it is against the original Fedwiki theory of owning the whole copy.\n\nFork protect would mean that parts of the text are not forkable but can only be edited locally. Since local editing is almost always forbidden (and creating a globally managed local edit frameworks seems like a lot of work for little gain) I do not think it would be better than having a fork actually phone home and tell that a merge (_pull request?_) is waiting.\n"
    },
    {
      "type": "pagefold",
      "id": "457e39c8dc722666",
      "text": "chat.openai"
    },
    {
      "type": "paragraph",
      "id": "b4dd03a33ee85e6d",
      "text": "There are a few ways to bring together different [[Perspectives]] on a topic that may be represented on Wikipedia. One way is to use the \"Talk\" pages [⇒ [[Talk Page]]] associated with each article. These pages are intended for discussing improvements to the article, and can be a good place to bring up any concerns or issues with the article's content or bias. Additionally, you can also use the Wikipedia's 'References' section that contains the source materials used by the Wikipedia editor to write the article, which can give you a better idea of where the information in the article is coming from and can help you form your own opinion on the topic.\n\n"
    },
    {
      "type": "paragraph",
      "id": "0ead6f8dffe55120",
      "text": "Another approach is to read articles from different sources, including reputable news outlets and academic journals, to get a well-rounded understanding of the topic. Additionally, you can also seek out experts in the field and ask them to share their perspectives on the topic."
    },
    {
      "type": "pagefold",
      "id": "170389b614f9ef5c",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "517f77474fdb8bdc",
      "text": "And what does that mean in the context of Federated Wiki instead of Wikipedia?"
    },
    {
      "type": "pagefold",
      "id": "613fb7f1f77dbf84",
      "text": "chat.openai",
      "alias": "457e39c8dc722666"
    },
    {
      "type": "paragraph",
      "id": "28e306ffb9a082a1",
      "text": "Federated Wiki is a decentralized platform for creating and sharing wikis. It differs from traditional wikis like Wikipedia in that it allows for multiple independent instances or \"federations\" of the wiki to exist and be linked together, rather than having a central authority controlling the content.\n\nIn the context of Federated Wiki, getting different sides of a topic together would involve searching for and reading different instances of the wiki that cover the topic, and possibly linking them together. This allows for a more diverse range of perspectives on a topic to be represented and easily accessed by readers. Additionally, Federated Wiki allows for easy editing and commenting on pages, so readers can also contribute their own perspectives on a topic and engage in discussions with others."
    },
    {
      "type": "pagefold",
      "id": "47252d70e2e68c18",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "8b9c0efa6bd40ceb",
      "text": "How is this \"linking them together\" related to transclusion?"
    },
    {
      "type": "pagefold",
      "id": "6fa8f97d9d6cf79f",
      "text": "chat.openai",
      "alias": "457e39c8dc722666"
    },
    {
      "type": "paragraph",
      "id": "683ec6633f76d684",
      "text": "In Federated Wiki, \"linking them together\" can be done through a feature called transclusion. [[Transclusion]] is a way to include the content of one wiki page within another, without actually duplicating the content. Instead, a link is created to the original page, and the content is displayed within the context of the page where it is transcluded.\n\nThis linking together of different pages allows readers to easily access and compare different perspectives on a topic, while also allowing them to contribute their own perspectives and engage in discussions. Transclusion also allows for pages to be easily updated, as changes made to the original page will be reflected on all pages where it is transcluded.\n\nIn summary, transclusion in Federated Wiki allows linking different pages together, which allows readers to see different perspectives on a topic and easily access the original content in one place, allowing for easy updates and interactions with the community."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Getting Two sides of wiki together",
        "story": []
      },
      "date": 1644252510292
    },
    {
      "item": {
        "type": "factory",
        "id": "6c36e95dc727a57a"
      },
      "id": "6c36e95dc727a57a",
      "type": "add",
      "date": 1644252511947
    },
    {
      "type": "edit",
      "id": "6c36e95dc727a57a",
      "item": {
        "type": "markdown",
        "id": "6c36e95dc727a57a",
        "text": "_(This piece was written by me, [[grin]], on or about 2022-02-07)_\n\nSomeone (I cannot tell who wrote the original piece) wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n\n>When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated.\n\nThe article then explored _transclusion_, which is just a fancy way of saying \"inclusion\" or \"pointer to the original\", and that it's not the good solution for the purpose of Fediwiki.\n\nHowever I disagree with the observations and the conclusions.\n\n## The problems\n\nIn my view, Fedwiki is built around the idea of __forking__, or creating a copy of a page and start working on it independently, then showing it to the peers. I may not completely understand the motives (even [[ Federated Writing]] can't define what it is), but probably it is the total independence of others in the creative writing process.\n\n### What might have been the main reasons behind using forking technique?\n\n- Working on an independent copy?\n- Same title - different content?\n- Adding content/updating to original? With the intent of merging back?\n- Segmentation of content? (To support or create [[Information Bubbles]]?)\n\nThe first reason nicely fits the solution.\n\nThe second could use a __common page reference__ (central or shared) which would contain infinite amount of forks, but this way they would be all collected in one place (and would offer much better merging possibilities than the scattered unconnected forks version). \n\nThe third would require a __fast, easy, painless way to merge back__, supported by code not manual labour. It would need multiple things, I'll detail later.\n\nThe fourth aspect would require controlled forks within specific areas, and may require \"same title\" pages covering \"different topics\". This could be solved by organising pages not by _title_ but by _meaning_ (by idea, by theory, by object), and controlling tightly how merges happen, and how links prefer the specific bubble sites first.\n\n\n### Problem of the current method\n\nThe original idea was implemented as `wiki` `npm` module. This implementation - while containing extremely good features in large amounts - have a few problems in my opninion:\n\n- creates infinite amount of copies of the same material (violating _normalisation_ principles),\n- creates unorganised copies,\n- create unsearchable copies (same title on infinite sites need full-text searched to be distinguished),\n- creates wildly disconnected and diverging copies.\n\nAlso there are other, implementational problems:\n- hard (or impossible) to get full history of a page with authors, timestamps and full change history\n- backward (origin) pointers seem to be more-or-less available, but may be easily broken by sites removing specific Items or their versions\n- there seem to be no forward pointers, which would be essential to maintain updates of forks\n  - this also cause no forward notification possible, so forks can't be notified of changes (but forks could still ping origins backwards)\n* working state of links is highly dependent on the neighbourhood state of the moment, and can change from session to session.\n\nAnd the largest problem is\n- __there is no merging back.__\n\n### Response from the Fedwiki community about these problems\n\nThe mainstream answer were along the line of:\n- we wanted it this was (maximal independence of pages),\n- we already got used to it,\n- we can do it manually,\n- we discuss it in person/video chat (out of band),\n- we care way more about the writer than the readers,\n- some of those *can* be done in a hidden/non-trivial way,\n- we like surprises (instead of consistence/reliability).\n\n## Mergeback\n\nI believe my two most important missing features of the _current_ Fedwiki are\n1. fully connected forks with source, author and timestamp, and\n2. easy merging back.\n\nFor the first, I would imagine:\n\n### Every page with the same title would be somehow connected. \n\nBoth \"same title\" and \"somehow\" is open question. \n\n_Same title_ should rather mean __same object__ or __idea__, much similar to [[Wikidata]] entities, which are not connected to _words_ but _ideas_, like \"Kingdom of Hungary\" (1840) is a different object from \"Hungarian Republic\" (1995), which is also different from \"Hungary\" (2011); like \"Hungarian\" (language) is different from \"Hungarian\" (person) or \"Hungarian\" (attribute). Maybe that's too much added complexity, but a possible way to unify across languages and imperfect words/language. (Not to mention that Pages optionally could _actually reference Wikidata entities_ to connect to very precisely defined theories, objects, ideas.)\n\n_Somehow_ is preferably also federated, like every origin and every fork maintaining its First Origin (as an universal object indicator [think like [[GUID]] ]) and immediate parent and descendants (basically a [[DAG]]), so the fork tree always could be created and view. \n\nAlso it can be one central server recording all the forks of a page.\n\nSo anyone interested in __X__ would pull up the Tree of __X__ and be able to browse the forks, or do whatever they please to do with them.\nAlso it would be obvious how the forks are related, so if anyone looks for the most recent version of any given object it would be easy to find leaves, and find the one with the most recent timestamp. (Forks could be grouped by domains, or tags, or anything if one needs to actually mark the Information Bubbles, though I don't think it'd be necessary.)\n\n### Easy merging back\n\nTo prevent information explosion there should be an automated, simple, machine-assisted way of merge-back.\n\nMerges require some well-known practical functions:\n- finding the original-fork relation (that's zeroth step, or call it pre-requisite)\n- seeing exactly the difference, clearly showing what and how changed\n- offering the possibility to merge whole document automatically if possible\n- when whole merge isn't possible due to conflicting changes, offering merging changed _Items_ in whole if it's possible \n- if that's not possible, offering merge strategies assisted with machine help as much as possible (while Wikipedia for example only offers \"merge the text manually\" at this stage, but it isn't good enough)\n- also offering the possibility to not to merge but _append_ the Items, or the Document to the original, preserving original state for example.\n\nMerging back would \"destroy\" the fork, or rather unify again it with its origin, lowering fragmentation and divergence.\n\nThere is two (non mutually exclusive) way to start a merge:\n1. Merge happens when original author gets notified (or become aware in any way) that their page was updated. It provides complete independence in the merging process but requires the author to thoroughly examine and manage the merging.\n2. Merge gets created when the fork author decides to merge back, knowing their own changes; they prepare a merge and notify the origin; the origin still decides whether to merge but the merging is already prepared, only have to be accepted, rejected or manually modified if the author wished so. (This is basically describing the _pull request model_.)\n\nThis would preserve independence of the original authors: they decide whether they merge or not, and what and how to merge. \n\nIt may pose a risk of malevolent forking notices or malevolent merging offers, but software could handle this gently, using unobtrusive hints, for example, as that someone have requested a merge on a page the author wishes to modify. And on a separate page provide a _waiting merges/PRs_ list which can be seen as the author feels fit (or ignored at will), without disturbing creative processes.\n\nSame goes, naturally, for the fork authors' protection. They would be notified if they want to work on a fork which was modified since in the original. \n\n(And all these \"realtime\" unotrusive notifications could be clicked away and ignored forever for that specific fork (or all forks for that page).)\n\nOrigin authors would have the option to set a page, or a whole site to \"independent\", meaning they do not want to know about the forks and usually do not intend to merge anything back. They would not get fork-changed page notifications and they wouldn't look at the _changed forks_ status page anyway.\n\nFork authors also have the possibility to mark the page as \"Not For Merging\", signaling that they do not intend to merge back, they intend to create a \"hard fork\" or an independent page, so all the warnings - both ways - would be silenced. These pages could be merged as any else, but there would be no origin-changed (and possibly fork-changed) notifications.\n\n## Why not \"transclude\" or \"fork-protect\"?\n\nTransclusion means I have a document where parts are not mine. Its is working well with a frame already (and indeed there could be a transclusion Factory much like than a proxy now), but I believe it is against the original Fedwiki theory of owning the whole copy.\n\nFork protect would mean that parts of the text are not forkable but can only be edited locally. Since local editing is almost always forbidden (and creating a globally managed local edit frameworks seems like a lot of work for little gain) I do not think it would be better than having a fork actually phone home and tell that a merge (_pull request?_) is waiting.\n"
      },
      "date": 1644252515879
    },
    {
      "type": "edit",
      "id": "6c36e95dc727a57a",
      "item": {
        "type": "markdown",
        "id": "6c36e95dc727a57a",
        "text": "_(This piece was written by me, [[grin]], on or about 2022-02-07)_\n\nSomeone (I cannot tell who wrote the original piece) wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n\n>When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated.\n\nThe article then explored _transclusion_, which is just a fancy way of saying \"inclusion\" or \"pointer to the original\", and that it's not the good solution for the purpose of Fediwiki.\n\nHowever I disagree with the observations and the conclusions.\n\n"
      },
      "date": 1644252534319
    },
    {
      "type": "add",
      "id": "f12d96ea51d6d30d",
      "item": {
        "type": "markdown",
        "id": "f12d96ea51d6d30d",
        "text": "## The problems\n\nIn my view, Fedwiki is built around the idea of __forking__, or creating a copy of a page and start working on it independently, then showing it to the peers. I may not completely understand the motives (even [[ Federated Writing]] can't define what it is), but probably it is the total independence of others in the creative writing process.\n\n"
      },
      "after": "6c36e95dc727a57a",
      "date": 1644252544702
    },
    {
      "type": "add",
      "id": "8a8a12813f702634",
      "item": {
        "type": "markdown",
        "id": "8a8a12813f702634",
        "text": "### What might have been the main reasons behind using forking technique?\n\n- Working on an independent copy?\n- Same title - different content?\n- Adding content/updating to original? With the intent of merging back?\n- Segmentation of content? (To support or create [[Information Bubbles]]?)\n\nThe first reason nicely fits the solution.\n\nThe second could use a __common page reference__ (central or shared) which would contain infinite amount of forks, but this way they would be all collected in one place (and would offer much better merging possibilities than the scattered unconnected forks version). \n\nThe third would require a __fast, easy, painless way to merge back__, supported by code not manual labour. It would need multiple things, I'll detail later.\n\nThe fourth aspect would require controlled forks within specific areas, and may require \"same title\" pages covering \"different topics\". This could be solved by organising pages not by _title_ but by _meaning_ (by idea, by theory, by object), and controlling tightly how merges happen, and how links prefer the specific bubble sites first.\n\n"
      },
      "after": "f12d96ea51d6d30d",
      "date": 1644252550599
    },
    {
      "type": "add",
      "id": "39bea65e6812a992",
      "item": {
        "type": "markdown",
        "id": "39bea65e6812a992",
        "text": "\n### Problem of the current method\n\nThe original idea was implemented as `wiki` `npm` module. This implementation - while containing extremely good features in large amounts - have a few problems in my opninion:\n\n- creates infinite amount of copies of the same material (violating _normalisation_ principles),\n- creates unorganised copies,\n- create unsearchable copies (same title on infinite sites need full-text searched to be distinguished),\n- creates wildly disconnected and diverging copies.\n\nAlso there are other, implementational problems:\n- hard (or impossible) to get full history of a page with authors, timestamps and full change history\n- backward (origin) pointers seem to be more-or-less available, but may be easily broken by sites removing specific Items or their versions\n- there seem to be no forward pointers, which would be essential to maintain updates of forks\n  - this also cause no forward notification possible, so forks can't be notified of changes (but forks could still ping origins backwards)\n* working state of links is highly dependent on the neighbourhood state of the moment, and can change from session to session.\n\nAnd the largest problem is\n- __there is no merging back.__\n\n"
      },
      "after": "8a8a12813f702634",
      "date": 1644252556038
    },
    {
      "type": "add",
      "id": "10b15c3dbca35cf7",
      "item": {
        "type": "markdown",
        "id": "10b15c3dbca35cf7",
        "text": "### Response from the Fedwiki community about these problems\n\nThe mainstream answer were along the line of:\n- we wanted it this was (maximal independence of pages),\n- we already got used to it,\n- we can do it manually,\n- we discuss it in person/video chat (out of band),\n- we care way more about the writer than the readers,\n- some of those *can* be done in a hidden/non-trivial way,\n- we like surprises (instead of consistence/reliability).\n\n## Mergeback\n\nI believe my two most important missing features of the _current_ Fedwiki are\n1. fully connected forks with source, author and timestamp, and\n2. easy merging back.\n\nFor the first, I would imagine:\n\n"
      },
      "after": "39bea65e6812a992",
      "date": 1644252561414
    },
    {
      "type": "add",
      "id": "915681cd3a1eabab",
      "item": {
        "type": "markdown",
        "id": "915681cd3a1eabab",
        "text": "### Every page with the same title would be somehow connected. \n\nBoth \"same title\" and \"somehow\" is open question. \n\n_Same title_ should rather mean __same object__ or __idea__, much similar to [[Wikidata]] entities, which are not connected to _words_ but _ideas_, like \"Kingdom of Hungary\" (1840) is a different object from \"Hungarian Republic\" (1995), which is also different from \"Hungary\" (2011); like \"Hungarian\" (language) is different from \"Hungarian\" (person) or \"Hungarian\" (attribute). Maybe that's too much added complexity, but a possible way to unify across languages and imperfect words/language. (Not to mention that Pages optionally could _actually reference Wikidata entities_ to connect to very precisely defined theories, objects, ideas.)\n\n_Somehow_ is preferably also federated, like every origin and every fork maintaining its First Origin (as an universal object indicator [think like [[GUID]] ]) and immediate parent and descendants (basically a [[DAG]]), so the fork tree always could be created and view. \n\nAlso it can be one central server recording all the forks of a page.\n\nSo anyone interested in __X__ would pull up the Tree of __X__ and be able to browse the forks, or do whatever they please to do with them.\nAlso it would be obvious how the forks are related, so if anyone looks for the most recent version of any given object it would be easy to find leaves, and find the one with the most recent timestamp. (Forks could be grouped by domains, or tags, or anything if one needs to actually mark the Information Bubbles, though I don't think it'd be necessary.)\n\n"
      },
      "after": "10b15c3dbca35cf7",
      "date": 1644252567437
    },
    {
      "type": "add",
      "id": "8d8da1464cb68d68",
      "item": {
        "type": "markdown",
        "id": "8d8da1464cb68d68",
        "text": "### Easy merging back\n\nTo prevent information explosion there should be an automated, simple, machine-assisted way of merge-back.\n\nMerges require some well-known practical functions:\n- finding the original-fork relation (that's zeroth step, or call it pre-requisite)\n- seeing exactly the difference, clearly showing what and how changed\n- offering the possibility to merge whole document automatically if possible\n- when whole merge isn't possible due to conflicting changes, offering merging changed _Items_ in whole if it's possible \n- if that's not possible, offering merge strategies assisted with machine help as much as possible (while Wikipedia for example only offers \"merge the text manually\" at this stage, but it isn't good enough)\n- also offering the possibility to not to merge but _append_ the Items, or the Document to the original, preserving original state for example.\n\nMerging back would \"destroy\" the fork, or rather unify again it with its origin, lowering fragmentation and divergence.\n\nThere is two (non mutually exclusive) way to start a merge:\n1. Merge happens when original author gets notified (or become aware in any way) that their page was updated. It provides complete independence in the merging process but requires the author to thoroughly examine and manage the merging.\n2. Merge gets created when the fork author decides to merge back, knowing their own changes; they prepare a merge and notify the origin; the origin still decides whether to merge but the merging is already prepared, only have to be accepted, rejected or manually modified if the author wished so. (This is basically describing the _pull request model_.)\n\nThis would preserve independence of the original authors: they decide whether they merge or not, and what and how to merge. \n\nIt may pose a risk of malevolent forking notices or malevolent merging offers, but software could handle this gently, using unobtrusive hints, for example, as that someone have requested a merge on a page the author wishes to modify. And on a separate page provide a _waiting merges/PRs_ list which can be seen as the author feels fit (or ignored at will), without disturbing creative processes.\n\nSame goes, naturally, for the fork authors' protection. They would be notified if they want to work on a fork which was modified since in the original. \n\n(And all these \"realtime\" unotrusive notifications could be clicked away and ignored forever for that specific fork (or all forks for that page).)\n\nOrigin authors would have the option to set a page, or a whole site to \"independent\", meaning they do not want to know about the forks and usually do not intend to merge anything back. They would not get fork-changed page notifications and they wouldn't look at the _changed forks_ status page anyway.\n\nFork authors also have the possibility to mark the page as \"Not For Merging\", signaling that they do not intend to merge back, they intend to create a \"hard fork\" or an independent page, so all the warnings - both ways - would be silenced. These pages could be merged as any else, but there would be no origin-changed (and possibly fork-changed) notifications.\n\n"
      },
      "after": "915681cd3a1eabab",
      "date": 1644252577021
    },
    {
      "type": "add",
      "id": "81c2aeca29c9a6cb",
      "item": {
        "type": "markdown",
        "id": "81c2aeca29c9a6cb",
        "text": "## Why not \"transclude\" or \"fork-protect\"?\n\nTransclusion means I have a document where parts are not mine. Its is working well with a frame already (and indeed there could be a transclusion Factory much like than a proxy now), but I believe it is against the original Fedwiki theory of owning the whole copy.\n\nFork protect would mean that parts of the text are not forkable but can only be edited locally. Since local editing is almost always forbidden (and creating a globally managed local edit frameworks seems like a lot of work for little gain) I do not think it would be better than having a fork actually phone home and tell that a merge (_pull request?_) is waiting.\n"
      },
      "after": "8d8da1464cb68d68",
      "date": 1644252579135
    },
    {
      "type": "fork",
      "site": "fedwiki.grin.hu",
      "date": 1644253065809
    },
    {
      "type": "edit",
      "id": "6c36e95dc727a57a",
      "item": {
        "type": "markdown",
        "id": "6c36e95dc727a57a",
        "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n"
      },
      "date": 1644253273059
    },
    {
      "type": "add",
      "id": "60cb5edb8f681951",
      "item": {
        "type": "markdown",
        "id": "60cb5edb8f681951",
        "text": ""
      },
      "after": "6c36e95dc727a57a",
      "date": 1644253279344
    },
    {
      "type": "add",
      "id": "94ef58be49fd5f3e",
      "item": {
        "type": "markdown",
        "id": "94ef58be49fd5f3e",
        "text": "\nThe article then explored _transclusion_, which is just a fancy way of saying \"inclusion\" or \"pointer to the original\", and that it's not the good solution for the purpose of Fediwiki.\n\nHowever I disagree with the observations and the conclusions.\n\n"
      },
      "after": "60cb5edb8f681951",
      "date": 1644253282826
    },
    {
      "id": "6e54501ef275ead7",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6e54501ef275ead7",
        "text": "When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated."
      },
      "after": "6c36e95dc727a57a",
      "date": 1644253285111
    },
    {
      "type": "remove",
      "id": "60cb5edb8f681951",
      "date": 1644253289023
    },
    {
      "type": "edit",
      "id": "6e54501ef275ead7",
      "item": {
        "type": "markdown",
        "id": "6e54501ef275ead7",
        "text": "> When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated."
      },
      "date": 1644253293601
    },
    {
      "type": "edit",
      "id": "6e54501ef275ead7",
      "item": {
        "type": "markdown",
        "id": "6e54501ef275ead7",
        "text": "> When you have multiple copies of a piece of information across many folders or domains (they are effectively the same in federated wiki), it becomes unmanageable when you have to keep multiple copies updated."
      },
      "date": 1644253295833
    },
    {
      "type": "edit",
      "id": "6c36e95dc727a57a",
      "item": {
        "type": "markdown",
        "id": "6c36e95dc727a57a",
        "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n"
      },
      "date": 1644253968802
    },
    {
      "type": "edit",
      "id": "6c36e95dc727a57a",
      "item": {
        "type": "markdown",
        "id": "6c36e95dc727a57a",
        "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:\n\n> Thinking about this leads us to the conclusion that there are two sides to wiki (any wiki), both of which are equally important:\n> - multi-tenanted [[consensus based writing]]\n> - solipsistic [[federated writing]]\n\nThe original example was mentioning a huge problem with the fediwiki approach:\n"
      },
      "date": 1644254028151
    },
    {
      "type": "fork",
      "date": 1644254035892
    },
    {
      "type": "edit",
      "id": "10b15c3dbca35cf7",
      "item": {
        "type": "markdown",
        "id": "10b15c3dbca35cf7",
        "text": "### Response from the Fedwiki community about these problems\n\nThe mainstream answer were along the line of:\n- we wanted it this way (maximal independence of pages),\n- we already got used to it,\n- we can do it manually,\n- we discuss it in person/video chat (out of band),\n- we care way more about the writer than the readers,\n- some of those *can* be done in a hidden/non-trivial way,\n- we like surprises (instead of consistence/reliability).\n\n## Mergeback\n\nI believe my two most important missing features of the _current_ Fedwiki are\n1. fully connected forks with source, author and timestamp, and\n2. easy merging back.\n\nFor the first, I would imagine:\n\n"
      },
      "date": 1644254502758
    },
    {
      "item": {
        "type": "factory",
        "id": "b4dd03a33ee85e6d"
      },
      "id": "b4dd03a33ee85e6d",
      "type": "add",
      "after": "81c2aeca29c9a6cb",
      "date": 1674806619507
    },
    {
      "id": "457e39c8dc722666",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "457e39c8dc722666",
        "text": "chat.openai"
      },
      "after": "81c2aeca29c9a6cb",
      "date": 1674806623692
    },
    {
      "type": "edit",
      "id": "b4dd03a33ee85e6d",
      "item": {
        "type": "paragraph",
        "id": "b4dd03a33ee85e6d",
        "text": "There are a few ways to bring together different perspectives on a topic that may be represented on Wikipedia. One way is to use the \"Talk\" pages associated with each article. These pages are intended for discussing improvements to the article, and can be a good place to bring up any concerns or issues with the article's content or bias. Additionally, you can also use the Wikipedia's 'References' section that contains the source materials used by the Wikipedia editor to write the article, which can give you a better idea of where the information in the article is coming from and can help you form your own opinion on the topic.\n\nAnother approach is to read articles from different sources, including reputable news outlets and academic journals, to get a well-rounded understanding of the topic. Additionally, you can also seek out experts in the field and ask them to share their perspectives on the topic."
      },
      "date": 1674806635225
    },
    {
      "type": "edit",
      "id": "b4dd03a33ee85e6d",
      "item": {
        "type": "paragraph",
        "id": "b4dd03a33ee85e6d",
        "text": "There are a few ways to bring together different [[Perspectives]] on a topic that may be represented on Wikipedia. One way is to use the \"Talk\" pages associated with each article. These pages are intended for discussing improvements to the article, and can be a good place to bring up any concerns or issues with the article's content or bias. Additionally, you can also use the Wikipedia's 'References' section that contains the source materials used by the Wikipedia editor to write the article, which can give you a better idea of where the information in the article is coming from and can help you form your own opinion on the topic.\n\nAnother approach is to read articles from different sources, including reputable news outlets and academic journals, to get a well-rounded understanding of the topic. Additionally, you can also seek out experts in the field and ask them to share their perspectives on the topic."
      },
      "date": 1674806650531
    },
    {
      "item": {
        "type": "factory",
        "id": "170389b614f9ef5c"
      },
      "id": "170389b614f9ef5c",
      "type": "add",
      "after": "b4dd03a33ee85e6d",
      "date": 1674806734171
    },
    {
      "type": "edit",
      "id": "170389b614f9ef5c",
      "item": {
        "type": "pagefold",
        "id": "170389b614f9ef5c",
        "text": "~"
      },
      "date": 1674806738124
    },
    {
      "item": {
        "type": "factory",
        "id": "517f77474fdb8bdc"
      },
      "id": "517f77474fdb8bdc",
      "type": "add",
      "after": "170389b614f9ef5c",
      "date": 1674806739788
    },
    {
      "type": "edit",
      "id": "517f77474fdb8bdc",
      "item": {
        "type": "paragraph",
        "id": "517f77474fdb8bdc",
        "text": "And what does that mean in the context of Federated Wiki instead of Wikipedia?"
      },
      "date": 1674806742763
    },
    {
      "id": "613fb7f1f77dbf84",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "613fb7f1f77dbf84",
        "text": "chat.openai",
        "alias": "457e39c8dc722666"
      },
      "after": "517f77474fdb8bdc",
      "date": 1674806747756
    },
    {
      "item": {
        "type": "factory",
        "id": "28e306ffb9a082a1"
      },
      "id": "28e306ffb9a082a1",
      "type": "add",
      "after": "613fb7f1f77dbf84",
      "date": 1674806749435
    },
    {
      "type": "edit",
      "id": "28e306ffb9a082a1",
      "item": {
        "type": "paragraph",
        "id": "28e306ffb9a082a1",
        "text": "Federated Wiki is a decentralized platform for creating and sharing wikis. It differs from traditional wikis like Wikipedia in that it allows for multiple independent instances or \"federations\" of the wiki to exist and be linked together, rather than having a central authority controlling the content.\n\nIn the context of Federated Wiki, getting different sides of a topic together would involve searching for and reading different instances of the wiki that cover the topic, and possibly linking them together. This allows for a more diverse range of perspectives on a topic to be represented and easily accessed by readers. Additionally, Federated Wiki allows for easy editing and commenting on pages, so readers can also contribute their own perspectives on a topic and engage in discussions with others."
      },
      "date": 1674806759926
    },
    {
      "item": {
        "type": "factory",
        "id": "47252d70e2e68c18"
      },
      "id": "47252d70e2e68c18",
      "type": "add",
      "after": "28e306ffb9a082a1",
      "date": 1674806840579
    },
    {
      "type": "edit",
      "id": "47252d70e2e68c18",
      "item": {
        "type": "pagefold",
        "id": "47252d70e2e68c18",
        "text": "~"
      },
      "date": 1674806844204
    },
    {
      "item": {
        "type": "factory",
        "id": "8b9c0efa6bd40ceb"
      },
      "id": "8b9c0efa6bd40ceb",
      "type": "add",
      "after": "47252d70e2e68c18",
      "date": 1674806851242
    },
    {
      "type": "edit",
      "id": "8b9c0efa6bd40ceb",
      "item": {
        "type": "paragraph",
        "id": "8b9c0efa6bd40ceb",
        "text": "How is this \"linking them together\" related to transclusion?"
      },
      "date": 1674806853540
    },
    {
      "id": "6fa8f97d9d6cf79f",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "6fa8f97d9d6cf79f",
        "text": "chat.openai",
        "alias": "457e39c8dc722666"
      },
      "after": "81c2aeca29c9a6cb",
      "date": 1674806903590
    },
    {
      "id": "6fa8f97d9d6cf79f",
      "type": "move",
      "order": [
        "6c36e95dc727a57a",
        "6e54501ef275ead7",
        "94ef58be49fd5f3e",
        "f12d96ea51d6d30d",
        "8a8a12813f702634",
        "39bea65e6812a992",
        "10b15c3dbca35cf7",
        "915681cd3a1eabab",
        "8d8da1464cb68d68",
        "81c2aeca29c9a6cb",
        "457e39c8dc722666",
        "b4dd03a33ee85e6d",
        "170389b614f9ef5c",
        "517f77474fdb8bdc",
        "613fb7f1f77dbf84",
        "28e306ffb9a082a1",
        "47252d70e2e68c18",
        "6fa8f97d9d6cf79f",
        "8b9c0efa6bd40ceb"
      ],
      "date": 1674806909245
    },
    {
      "id": "8b9c0efa6bd40ceb",
      "type": "move",
      "order": [
        "6c36e95dc727a57a",
        "6e54501ef275ead7",
        "94ef58be49fd5f3e",
        "f12d96ea51d6d30d",
        "8a8a12813f702634",
        "39bea65e6812a992",
        "10b15c3dbca35cf7",
        "915681cd3a1eabab",
        "8d8da1464cb68d68",
        "81c2aeca29c9a6cb",
        "457e39c8dc722666",
        "b4dd03a33ee85e6d",
        "170389b614f9ef5c",
        "517f77474fdb8bdc",
        "613fb7f1f77dbf84",
        "28e306ffb9a082a1",
        "47252d70e2e68c18",
        "8b9c0efa6bd40ceb",
        "6fa8f97d9d6cf79f"
      ],
      "date": 1674806911375
    },
    {
      "item": {
        "type": "factory",
        "id": "683ec6633f76d684"
      },
      "id": "683ec6633f76d684",
      "type": "add",
      "after": "6fa8f97d9d6cf79f",
      "date": 1674806912964
    },
    {
      "type": "edit",
      "id": "683ec6633f76d684",
      "item": {
        "type": "paragraph",
        "id": "683ec6633f76d684",
        "text": "In Federated Wiki, \"linking them together\" can be done through a feature called transclusion. Transclusion is a way to include the content of one wiki page within another, without actually duplicating the content. Instead, a link is created to the original page, and the content is displayed within the context of the page where it is transcluded.\n\nThis linking together of different pages allows readers to easily access and compare different perspectives on a topic, while also allowing them to contribute their own perspectives and engage in discussions. Transclusion also allows for pages to be easily updated, as changes made to the original page will be reflected on all pages where it is transcluded.\n\nIn summary, transclusion in Federated Wiki allows linking different pages together, which allows readers to see different perspectives on a topic and easily access the original content in one place, allowing for easy updates and interactions with the community."
      },
      "date": 1674806926391
    },
    {
      "type": "edit",
      "id": "683ec6633f76d684",
      "item": {
        "type": "paragraph",
        "id": "683ec6633f76d684",
        "text": "In Federated Wiki, \"linking them together\" can be done through a feature called transclusion. [[Transclusion]] is a way to include the content of one wiki page within another, without actually duplicating the content. Instead, a link is created to the original page, and the content is displayed within the context of the page where it is transcluded.\n\nThis linking together of different pages allows readers to easily access and compare different perspectives on a topic, while also allowing them to contribute their own perspectives and engage in discussions. Transclusion also allows for pages to be easily updated, as changes made to the original page will be reflected on all pages where it is transcluded.\n\nIn summary, transclusion in Federated Wiki allows linking different pages together, which allows readers to see different perspectives on a topic and easily access the original content in one place, allowing for easy updates and interactions with the community."
      },
      "date": 1674806951324
    },
    {
      "type": "edit",
      "id": "b4dd03a33ee85e6d",
      "item": {
        "type": "paragraph",
        "id": "b4dd03a33ee85e6d",
        "text": "There are a few ways to bring together different [[Perspectives]] on a topic that may be represented on Wikipedia. One way is to use the \"Talk\" pages associated with each article. These pages are intended for discussing improvements to the article, and can be a good place to bring up any concerns or issues with the article's content or bias. Additionally, you can also use the Wikipedia's 'References' section that contains the source materials used by the Wikipedia editor to write the article, which can give you a better idea of where the information in the article is coming from and can help you form your own opinion on the topic.\n\n"
      },
      "date": 1674807197745
    },
    {
      "type": "add",
      "id": "0ead6f8dffe55120",
      "item": {
        "type": "paragraph",
        "id": "0ead6f8dffe55120",
        "text": "Another approach is to read articles from different sources, including reputable news outlets and academic journals, to get a well-rounded understanding of the topic. Additionally, you can also seek out experts in the field and ask them to share their perspectives on the topic."
      },
      "after": "b4dd03a33ee85e6d",
      "date": 1674807200366
    },
    {
      "type": "edit",
      "id": "b4dd03a33ee85e6d",
      "item": {
        "type": "paragraph",
        "id": "b4dd03a33ee85e6d",
        "text": "There are a few ways to bring together different [[Perspectives]] on a topic that may be represented on Wikipedia. One way is to use the \"Talk\" pages [⇒ [[Talk Page]]] associated with each article. These pages are intended for discussing improvements to the article, and can be a good place to bring up any concerns or issues with the article's content or bias. Additionally, you can also use the Wikipedia's 'References' section that contains the source materials used by the Wikipedia editor to write the article, which can give you a better idea of where the information in the article is coming from and can help you form your own opinion on the topic.\n\n"
      },
      "date": 1674807227362
    }
  ]
}