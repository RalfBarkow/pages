{
  "title": "Generate a Lookup Table",
  "story": [
    {
      "type": "reference",
      "id": "265c29418e195a84",
      "site": "wiki.ralfbarkow.ch",
      "slug": "precomputation",
      "title": "Precomputation",
      "text": "is often used in algorithms that depend on the results of expensive computations that don't depend on the input of the algorithm. A trivial example of precomputation is the use of hardcoded mathematical constants, such as π and e, rather than computing their approximations to the necessary precision at run time. [https://en.wikipedia.org/wiki/Precomputation wikipedia]"
    },
    {
      "type": "pagefold",
      "id": "2df63d853ae2b303",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "06d8f78841899162",
      "site": "wiki.ralfbarkow.ch",
      "slug": "understanding-machines",
      "title": "Understanding Machines",
      "text": "⇒ [[Model Free Method Zoo]]"
    },
    {
      "type": "markdown",
      "id": "c3ac8e6f3894c578",
      "text": "> Table Lookup (of gathered experience) […];  \nGraph algorithms (table to graph transformation) [https://www.educative.io/blog/graph-algorithms-tutorial page]\n"
    },
    {
      "type": "reference",
      "id": "ef65090652012548",
      "site": "wiki.ralfbarkow.ch",
      "slug": "table-lookup",
      "title": "Table Lookup",
      "text": "[…] a [[Node]] can perform a simple table lookup operation augmented with extrapolation or interpolation techniques to determine and apply the best 𝛼 and 𝛽 settings in response to dynamically changing conditions. The lookup time is O(1) and can be efficiently applied at runtime."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Generate a Lookup Table",
        "story": []
      },
      "date": 1701353389448
    },
    {
      "item": {
        "type": "factory",
        "id": "265c29418e195a84"
      },
      "id": "265c29418e195a84",
      "type": "add",
      "date": 1701353390804
    },
    {
      "type": "edit",
      "id": "265c29418e195a84",
      "item": {
        "type": "reference",
        "id": "265c29418e195a84",
        "site": "wiki.ralfbarkow.ch",
        "slug": "precomputation",
        "title": "Precomputation",
        "text": "Precomputation is often used in algorithms that depend on the results of expensive computations that don't depend on the input of the algorithm. A trivial example of precomputation is the use of hardcoded mathematical constants, such as π and e, rather than computing their approximations to the necessary precision at run time."
      },
      "date": 1701353395094
    },
    {
      "type": "edit",
      "id": "265c29418e195a84",
      "item": {
        "type": "reference",
        "id": "265c29418e195a84",
        "site": "wiki.ralfbarkow.ch",
        "slug": "precomputation",
        "title": "Precomputation",
        "text": "is often used in algorithms that depend on the results of expensive computations that don't depend on the input of the algorithm. A trivial example of precomputation is the use of hardcoded mathematical constants, such as π and e, rather than computing their approximations to the necessary precision at run time."
      },
      "date": 1701353420028
    },
    {
      "type": "edit",
      "id": "265c29418e195a84",
      "item": {
        "type": "reference",
        "id": "265c29418e195a84",
        "site": "wiki.ralfbarkow.ch",
        "slug": "precomputation",
        "title": "Precomputation",
        "text": "is often used in algorithms that depend on the results of expensive computations that don't depend on the input of the algorithm. A trivial example of precomputation is the use of hardcoded mathematical constants, such as π and e, rather than computing their approximations to the necessary precision at run time. [https://en.wikipedia.org/wiki/Precomputation wikipedia]"
      },
      "date": 1701353441222
    },
    {
      "item": {
        "type": "factory",
        "id": "2df63d853ae2b303"
      },
      "id": "2df63d853ae2b303",
      "type": "add",
      "after": "265c29418e195a84",
      "date": 1701353482034
    },
    {
      "item": {
        "type": "factory",
        "id": "ef65090652012548"
      },
      "id": "ef65090652012548",
      "type": "add",
      "after": "2df63d853ae2b303",
      "date": 1701353486485
    },
    {
      "type": "edit",
      "id": "ef65090652012548",
      "item": {
        "type": "reference",
        "id": "ef65090652012548",
        "site": "wiki.ralfbarkow.ch",
        "slug": "table-lookup",
        "title": "Table Lookup",
        "text": "[…] a [[Node]] can perform a simple table lookup operation augmented with extrapolation or interpolation techniques to determine and apply the best 𝛼 and 𝛽 settings in response to dynamically changing conditions. The lookup time is O(1) and can be efficiently applied at runtime."
      },
      "date": 1701353515117
    },
    {
      "id": "06d8f78841899162",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "06d8f78841899162",
        "site": "wiki.ralfbarkow.ch",
        "slug": "understanding-machines",
        "title": "Understanding Machines",
        "text": "⇒ [[Model Free Method Zoo]]"
      },
      "after": "ef65090652012548",
      "attribution": {
        "page": "Table Lookup"
      },
      "date": 1701353525254
    },
    {
      "id": "c3ac8e6f3894c578",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "c3ac8e6f3894c578",
        "text": "> Table Lookup (of gathered experience) – 53:32;  \nGraph algorithms (table to graph transformation) [https://www.educative.io/blog/graph-algorithms-tutorial page]\n"
      },
      "after": "06d8f78841899162",
      "attribution": {
        "page": "Table Lookup"
      },
      "date": 1701353527788
    },
    {
      "type": "edit",
      "id": "c3ac8e6f3894c578",
      "item": {
        "type": "markdown",
        "id": "c3ac8e6f3894c578",
        "text": "> Table Lookup (of gathered experience) […];  \nGraph algorithms (table to graph transformation) [https://www.educative.io/blog/graph-algorithms-tutorial page]\n"
      },
      "date": 1701353560583
    },
    {
      "type": "edit",
      "id": "2df63d853ae2b303",
      "item": {
        "type": "pagefold",
        "id": "2df63d853ae2b303",
        "text": "~"
      },
      "date": 1701353623455
    },
    {
      "id": "ef65090652012548",
      "type": "move",
      "order": [
        "265c29418e195a84",
        "2df63d853ae2b303",
        "06d8f78841899162",
        "c3ac8e6f3894c578",
        "ef65090652012548"
      ],
      "date": 1701353768679
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1702046772517
    }
  ]
}