{
  "title": "CVE-2022-37454 SHA-3",
  "story": [
    {
      "type": "paragraph",
      "id": "28f46f3a49619827",
      "text": "This paper describes a vulnerability in several implementations of the Secure Hash Algorithm 3 (SHA-3) that have been released by its designers. "
    },
    {
      "type": "paragraph",
      "id": "f8ae3e1052715b88",
      "text": "The vulnerability has been present since the final-round update of Keccak was submitted to the National Institute of Standards and Technology (NIST) SHA-3 hash function competition in January 2011, and is present in the eXtended Keccak Code Package (XKCP) of the Keccak team. It affects all software projects that have integrated this code, such as the scripting languages Python and PHP Hypertext Preprocessor (PHP). The vulnerability is a buffer overflow that allows attacker-controlled values to be eXclusive-ORed (XORed) into memory (without any restrictions on values to be XORed and even far beyond the location of the original buffer), thereby making many standard protection measures against buffer overflows (e.g., canary values) completely ineffective. "
    },
    {
      "type": "paragraph",
      "id": "203480e0d08cbbcb",
      "text": "First, we provide Python and PHP scripts that cause segmentation faults when vulnerable versions of the interpreters are used. Then, we show how this vulnerability can be used to construct second preimages and preimages for the implementation, and we provide a specially constructed file that, when hashed, allows the attacker to execute arbitrary code on the victim’s device. "
    },
    {
      "type": "paragraph",
      "id": "6b630c94cbb2d554",
      "text": "The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations."
    },
    {
      "type": "pagefold",
      "id": "2f6bd466b1037c74",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "72114f0acb92801a",
      "text": "MOUHA, Nicky and CELI, Christopher, 2023. A Vulnerability in Implementations of SHA-3, SHAKE, EdDSA, and Other NIST-Approved Algorithm. Online. 2023. [Accessed 7 March 2023]. Available from: https://eprint.iacr.org/2023/331"
    },
    {
      "type": "paragraph",
      "id": "84462235e780252c",
      "text": "The vulnerability described in this paper does not affect the SHA-3 standard (as specified in FIPS 202 [12]), and not all implementations of SHA-3 are vulnerable. Most notably, the implementation of SHA-3 in [[OpenSSL]] is not affected."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "CVE-2022-37454 SHA-3",
        "story": []
      },
      "date": 1678218557016
    },
    {
      "id": "28f46f3a49619827",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "28f46f3a49619827",
        "text": "This paper describes a vulnerability in several implementations of the Secure Hash Algorithm 3 (SHA-3) that have been released by its designers. The vulnerability has been present since the final-round update of Keccak was submitted to the National Institute of Standards and Technology (NIST) SHA-3 hash function competition in January 2011, and is present in the eXtended Keccak Code Package (XKCP) of the Keccak team. It affects all software projects that have integrated this code, such as the scripting languages Python and PHP Hypertext Preprocessor (PHP). The vulnerability is a buffer overflow that allows attacker-controlled values to be eXclusive-ORed (XORed) into memory (without any restrictions on values to be XORed and even far beyond the location of the original buffer), thereby making many standard protection measures against buffer overflows (e.g., canary values) completely ineffective. First, we provide Python and PHP scripts that cause segmentation faults when vulnerable versions of the interpreters are used. Then, we show how this vulnerability can be used to construct second preimages and preimages for the implementation, and we provide a specially constructed file that, when hashed, allows the attacker to execute arbitrary code on the victim’s device. The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations.Report Number: 331\n"
      },
      "attribution": {
        "page": "2023-03-07"
      },
      "date": 1678218578722
    },
    {
      "item": {
        "type": "factory",
        "id": "2f6bd466b1037c74"
      },
      "id": "2f6bd466b1037c74",
      "type": "add",
      "after": "28f46f3a49619827",
      "date": 1678218605986
    },
    {
      "type": "edit",
      "id": "2f6bd466b1037c74",
      "item": {
        "type": "pagefold",
        "id": "2f6bd466b1037c74",
        "text": "~"
      },
      "date": 1678218609157
    },
    {
      "id": "72114f0acb92801a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "72114f0acb92801a",
        "text": "MOUHA, Nicky and CELI, Christopher, 2023. A Vulnerability in Implementations of SHA-3, SHAKE, EdDSA, and Other NIST-Approved Algorithm. Online. 2023. [Accessed 7 March 2023]. Available from: https://eprint.iacr.org/2023/331"
      },
      "after": "2f6bd466b1037c74",
      "attribution": {
        "page": "2023-03-07"
      },
      "date": 1678218612224
    },
    {
      "type": "edit",
      "id": "28f46f3a49619827",
      "item": {
        "type": "paragraph",
        "id": "28f46f3a49619827",
        "text": "This paper describes a vulnerability in several implementations of the Secure Hash Algorithm 3 (SHA-3) that have been released by its designers. "
      },
      "date": 1678218623209
    },
    {
      "type": "add",
      "id": "f8ae3e1052715b88",
      "item": {
        "type": "paragraph",
        "id": "f8ae3e1052715b88",
        "text": "The vulnerability has been present since the final-round update of Keccak was submitted to the National Institute of Standards and Technology (NIST) SHA-3 hash function competition in January 2011, and is present in the eXtended Keccak Code Package (XKCP) of the Keccak team. It affects all software projects that have integrated this code, such as the scripting languages Python and PHP Hypertext Preprocessor (PHP). The vulnerability is a buffer overflow that allows attacker-controlled values to be eXclusive-ORed (XORed) into memory (without any restrictions on values to be XORed and even far beyond the location of the original buffer), thereby making many standard protection measures against buffer overflows (e.g., canary values) completely ineffective. First, we provide Python and PHP scripts that cause segmentation faults when vulnerable versions of the interpreters are used. Then, we show how this vulnerability can be used to construct second preimages and preimages for the implementation, and we provide a specially constructed file that, when hashed, allows the attacker to execute arbitrary code on the victim’s device. The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations.Report Number: 331\n"
      },
      "after": "28f46f3a49619827",
      "date": 1678218624861
    },
    {
      "type": "edit",
      "id": "f8ae3e1052715b88",
      "item": {
        "type": "paragraph",
        "id": "f8ae3e1052715b88",
        "text": "The vulnerability has been present since the final-round update of Keccak was submitted to the National Institute of Standards and Technology (NIST) SHA-3 hash function competition in January 2011, and is present in the eXtended Keccak Code Package (XKCP) of the Keccak team. It affects all software projects that have integrated this code, such as the scripting languages Python and PHP Hypertext Preprocessor (PHP). The vulnerability is a buffer overflow that allows attacker-controlled values to be eXclusive-ORed (XORed) into memory (without any restrictions on values to be XORed and even far beyond the location of the original buffer), thereby making many standard protection measures against buffer overflows (e.g., canary values) completely ineffective. "
      },
      "date": 1678218677743
    },
    {
      "type": "add",
      "id": "203480e0d08cbbcb",
      "item": {
        "type": "paragraph",
        "id": "203480e0d08cbbcb",
        "text": "First, we provide Python and PHP scripts that cause segmentation faults when vulnerable versions of the interpreters are used. Then, we show how this vulnerability can be used to construct second preimages and preimages for the implementation, and we provide a specially constructed file that, when hashed, allows the attacker to execute arbitrary code on the victim’s device. The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations.Report Number: 331\n"
      },
      "after": "f8ae3e1052715b88",
      "date": 1678218680827
    },
    {
      "type": "edit",
      "id": "203480e0d08cbbcb",
      "item": {
        "type": "paragraph",
        "id": "203480e0d08cbbcb",
        "text": "First, we provide Python and PHP scripts that cause segmentation faults when vulnerable versions of the interpreters are used. Then, we show how this vulnerability can be used to construct second preimages and preimages for the implementation, and we provide a specially constructed file that, when hashed, allows the attacker to execute arbitrary code on the victim’s device. "
      },
      "date": 1678218714780
    },
    {
      "type": "add",
      "id": "6b630c94cbb2d554",
      "item": {
        "type": "paragraph",
        "id": "6b630c94cbb2d554",
        "text": "The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations.Report Number: 331\n"
      },
      "after": "203480e0d08cbbcb",
      "date": 1678218715650
    },
    {
      "type": "edit",
      "id": "6b630c94cbb2d554",
      "item": {
        "type": "paragraph",
        "id": "6b630c94cbb2d554",
        "text": "The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations. Report Number: 331\n"
      },
      "date": 1678218738462
    },
    {
      "type": "edit",
      "id": "6b630c94cbb2d554",
      "item": {
        "type": "paragraph",
        "id": "6b630c94cbb2d554",
        "text": "The vulnerability applies to all hash value sizes, and all 64-bit Windows, Linux, and macOS operating systems, and may also impact cryptographic algorithms that require SHA-3 or its variants, such as the Edwards-curve Digital Signature Algorithm (EdDSA) when the Edwards448 curve is used. We introduce the Init-Update-Final Test (IUFT) to detect this vulnerability in implementations."
      },
      "date": 1678218749891
    },
    {
      "item": {
        "type": "factory",
        "id": "84462235e780252c"
      },
      "id": "84462235e780252c",
      "type": "add",
      "after": "72114f0acb92801a",
      "date": 1678219063391
    },
    {
      "type": "edit",
      "id": "84462235e780252c",
      "item": {
        "type": "paragraph",
        "id": "84462235e780252c",
        "text": "The vulnerability described in this paper does not affect the SHA-3 standard (as specified in FIPS 202 [12]), and not all implementations of SHA-3 are vulnerable. Most notably, the implementation of SHA-3 in OpenSSL is not affected."
      },
      "date": 1678219064955
    },
    {
      "type": "edit",
      "id": "84462235e780252c",
      "item": {
        "type": "paragraph",
        "id": "84462235e780252c",
        "text": "The vulnerability described in this paper does not affect the SHA-3 standard (as specified in FIPS 202 [12]), and not all implementations of SHA-3 are vulnerable. Most notably, the implementation of SHA-3 in [[OpenSSL]] is not affected."
      },
      "date": 1678219082299
    }
  ]
}