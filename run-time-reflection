{
  "title": "Run-Time Reflection",
  "story": [
    {
      "type": "markdown",
      "id": "daa2d35cb295fe39",
      "text": "The source code describes programs statically, but this perspective is insufficient if you want to fully understand the behavior of the computer system. The source code can, for example, describe a complex graph of data objects, although its concrete shape depends on input data and state of the application. To examine the real-time status of the system, you need to have tools that allow you to see the state of objects and relations between them. It is especially true if the program does not behave in an expected way, and you need to debug it. For modern development environments, to provide such tools for run-time analysis is an essential feature. [https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/ post], [https://pharo.org/features page]"
    },
    {
      "type": "paragraph",
      "id": "cb0f55876fad897c",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "08ef600cee0aec4d",
      "text": "* Pharo classes use single inheritance, but they can use [[stateful traits]] for sharing of behavior with other classes."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Run-Time Reflection",
        "story": []
      },
      "date": 1662278928606
    },
    {
      "item": {
        "type": "factory",
        "id": "daa2d35cb295fe39"
      },
      "id": "daa2d35cb295fe39",
      "type": "add",
      "date": 1662278935109
    },
    {
      "type": "edit",
      "id": "daa2d35cb295fe39",
      "item": {
        "type": "paragraph",
        "id": "daa2d35cb295fe39",
        "text": "– https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/"
      },
      "date": 1662278937872
    },
    {
      "type": "edit",
      "id": "daa2d35cb295fe39",
      "item": {
        "type": "markdown",
        "id": "daa2d35cb295fe39",
        "text": "– https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/"
      },
      "date": 1662278939036
    },
    {
      "type": "edit",
      "id": "daa2d35cb295fe39",
      "item": {
        "type": "markdown",
        "id": "daa2d35cb295fe39",
        "text": "– https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/ , [https://pharo.org/features page]"
      },
      "date": 1662278958341
    },
    {
      "item": {
        "type": "factory",
        "id": "cb0f55876fad897c"
      },
      "id": "cb0f55876fad897c",
      "type": "add",
      "after": "daa2d35cb295fe39",
      "date": 1662279009833
    },
    {
      "type": "edit",
      "id": "cb0f55876fad897c",
      "item": {
        "type": "paragraph",
        "id": "cb0f55876fad897c",
        "text": "[…]"
      },
      "date": 1662279015235
    },
    {
      "type": "add",
      "id": "08ef600cee0aec4d",
      "item": {
        "type": "paragraph",
        "id": "08ef600cee0aec4d",
        "text": "* Pharo classes use single inheritance, but they can use stateful traits for sharing of behavior with other classes."
      },
      "after": "cb0f55876fad897c",
      "date": 1662279017624
    },
    {
      "type": "edit",
      "id": "08ef600cee0aec4d",
      "item": {
        "type": "markdown",
        "id": "08ef600cee0aec4d",
        "text": "* Pharo classes use single inheritance, but they can use stateful traits for sharing of behavior with other classes."
      },
      "date": 1662279018798
    },
    {
      "type": "edit",
      "id": "08ef600cee0aec4d",
      "item": {
        "type": "markdown",
        "id": "08ef600cee0aec4d",
        "text": "* Pharo classes use single inheritance, but they can use [[stateful traits]] for sharing of behavior with other classes."
      },
      "date": 1662279026167
    },
    {
      "type": "edit",
      "id": "daa2d35cb295fe39",
      "item": {
        "type": "markdown",
        "id": "daa2d35cb295fe39",
        "text": "The source code describes programs statically, but this perspective is insufficient if you want to fully understand the behavior of the computer system. The source code can, for example, describe a complex graph of data objects, although its concrete shape depends on input data and state of the application. To examine the real-time status of the system, you need to have tools that allow you to see the state of objects and relations between them. It is especially true if the program does not behave in an expected way, and you need to debug it. For modern development environments, to provide such tools for run-time analysis is an essential feature. [https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/ , [https://pharo.org/features post]"
      },
      "date": 1662380477632
    },
    {
      "type": "edit",
      "id": "daa2d35cb295fe39",
      "item": {
        "type": "markdown",
        "id": "daa2d35cb295fe39",
        "text": "The source code describes programs statically, but this perspective is insufficient if you want to fully understand the behavior of the computer system. The source code can, for example, describe a complex graph of data objects, although its concrete shape depends on input data and state of the application. To examine the real-time status of the system, you need to have tools that allow you to see the state of objects and relations between them. It is especially true if the program does not behave in an expected way, and you need to debug it. For modern development environments, to provide such tools for run-time analysis is an essential feature. [https://thepharo.dev/2020/05/27/pharo-features-advanced-run-time-reflection/ post], [https://pharo.org/features page]"
      },
      "date": 1662380498834
    }
  ]
}