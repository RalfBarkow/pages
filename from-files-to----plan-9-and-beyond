{
  "title": "From Files To. . . : Plan 9 and Beyond",
  "story": [
    {
      "type": "markdown",
      "id": "e7a5c3e56cbeb3aa",
      "text": "[…] As the filesystem’s use has expanded, its semantics have become less clear. What do the timestamps on a process represent? What about the size of a control file? Is a directory tree always finite in depth (hence recursable-down) or in breadth (hence readable via readdir())? Although some diversity was present even when limited to files and devices (is a file seekable? what ioctls6 does the device support?), semantic diversity inevitably strains a fixed protocol. The result is a system in which the likelihood of a client’s idea of “file” being different from the file server’s idea is ever-greater. It becomes ill-defined whether “the usual things” one can do with files will work. Can I use cp -r to take a snapshot of a process tree? It is hard to tell. The selection of what files to compose with what programs, and the fixing-up of any differences in expected and provided behaviour, becomes a task for a very careful user. Unlike in Smalltalk, semantic diversity is not accompanied with any meta-level descriptive facility analogous to classes."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "From Files To. . . : Plan 9 and Beyond",
        "story": []
      },
      "date": 1635965087374
    },
    {
      "item": {
        "type": "factory",
        "id": "e7a5c3e56cbeb3aa"
      },
      "id": "e7a5c3e56cbeb3aa",
      "type": "add",
      "date": 1635965089319
    },
    {
      "item": {
        "type": "factory",
        "id": "c302700eddac3de8"
      },
      "id": "c302700eddac3de8",
      "type": "add",
      "after": "e7a5c3e56cbeb3aa",
      "date": 1635965117504
    },
    {
      "type": "edit",
      "id": "e7a5c3e56cbeb3aa",
      "item": {
        "type": "markdown",
        "id": "e7a5c3e56cbeb3aa",
        "text": "[…] As the filesystem’s use has expanded, its semantics have become less clear. What do the timestamps on a process represent? What about the size of a control file? Is a directory tree always finite in depth (hence recursable-down) or in breadth (hence readable via readdir())? Although some diversity was present even when limited to files and devices (is a file seekable? what ioctls6 does the device support?), semantic diversity inevitably strains a fixed protocol. The result is a system in which the likelihood of a client’s idea of “file” being different from the file server’s idea is ever-greater. It becomes ill-defined whether “the usual things” one can do with files will work. Can I use cp -r to take a snapshot of a process tree? It is hard to tell. The selection of what files to compose with what programs, and the fixing-up of any differences in expected and provided behaviour, becomes a task for a very careful user. Unlike in Smalltalk, semantic diversity is not accompanied with any meta-level descriptive facility analogous to classes."
      },
      "date": 1635965126191
    },
    {
      "type": "remove",
      "id": "c302700eddac3de8",
      "date": 1635965129957
    }
  ]
}