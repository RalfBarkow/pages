{
  "title": "Moldability and Malleability",
  "story": [
    {
      "type": "paragraph",
      "id": "143f609905203851",
      "text": "[[Moldability]] and [[Malleability]] refer to two distinct properties that are not interchangeable."
    },
    {
      "type": "paragraph",
      "id": "2178b9bef64268c2",
      "text": "[[Tudor Girba]] via [https://discord.com/channels/729445214812504107/735947900651175998/931205823848390686 discord]"
    },
    {
      "type": "paragraph",
      "id": "0032d863b181f619",
      "text": "\n[[Malleability]] refers to the property of a system to be adjusted to the needs of a user. These adjustments happen within bounds of the hooks that the system provides. In this sense, a system with a plugin architecture fits this description. So does a typical knowledge management system."
    },
    {
      "type": "paragraph",
      "id": "ad910faef0d4da81",
      "text": "[[Moldability]] refers to the property of a development environment of empower the user to change the environment inexpensively while working with the environment and for the purpose of explaining the inside of a system. Smalltalk is almost there. So is Emacs. GT reaches further on this scale.\n\nThere are two ways to evaluate such properties: one is to evaluate the environments themselves, another one is to look at what people can do with them. [[I]] – [[Tudor Girba]] propose that the latter is more interesting. Here is why. "
    },
    {
      "type": "paragraph",
      "id": "ff787af12ce3b3d6",
      "text": "For example, Emacs is flexible indeed, but it still does not make it fundamentally easier to reason about a system or set of data. In comparison, GT enables what we call [[Moldable Development]]. Granted, the associated skills are not easy to get, but there exist at least one case that shows that it is possible. This is why looking at the effects is more interesting: they give you a benchmark of problems to evaluate the other systems by.\n\n"
    },
    {
      "type": "reference",
      "id": "824009c82744203f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "moldable-development",
      "title": "Moldable Development",
      "text": "Moldable development is a way of programming through which you construct custom tools for each problem."
    },
    {
      "type": "paragraph",
      "id": "dd76c1d15e93fba2",
      "text": "So, from this perspective moldability as a property is broader (a superset) of malleability. Interestingly, it is also correct to say that given that a moldable system qualifies also as a malleable one, malleable systems are a superset of moldable environments."
    },
    {
      "type": "paragraph",
      "id": "2535d6d14dde4cd6",
      "text": "Our goal is to make the inside of systems explainable. Presently, this is not a subject of conversation. This is the conversation we want to start, and this is why we say GT is the beginning of the conversation. It is important to qualify which conversation we start.\n\nUp until recently, GT was qualified as a development environment with implications for programmers only. Indeed, that’s understandable as we focused for the longest time on how to affect how we relate to a single object. With the addition of [[Lepiter]] it became more obvious that the implications of moldability are broader."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Moldability and Malleability",
        "story": []
      },
      "date": 1701187812291
    },
    {
      "id": "2178b9bef64268c2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2178b9bef64268c2",
        "text": "[[Tudor Girba]] via [https://discord.com/channels/729445214812504107/735947900651175998/931205823848390686 discord]"
      },
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187816733
    },
    {
      "id": "143f609905203851",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "143f609905203851",
        "text": "Ok. Let's clarify the situation. [[Moldability]] and [[Malleability]] refer to two distinct properties that are not interchangeable."
      },
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187825407
    },
    {
      "type": "edit",
      "id": "143f609905203851",
      "item": {
        "type": "paragraph",
        "id": "143f609905203851",
        "text": "[[Moldability]] and [[Malleability]] refer to two distinct properties that are not interchangeable."
      },
      "date": 1701187832843
    },
    {
      "id": "0032d863b181f619",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0032d863b181f619",
        "text": "\n[[Malleability]] refers to the property of a system to be adjusted to the needs of a user. These adjustments happen within bounds of the hooks that the system provides. In this sense, a system with a plugin architecture fits this description. So does a typical knowledge management system."
      },
      "after": "2178b9bef64268c2",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187847230
    },
    {
      "id": "ad910faef0d4da81",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ad910faef0d4da81",
        "text": "[[Moldability]] refers to the property of a development environment of empower the user to change the environment inexpensively while working with the environment and for the purpose of explaining the inside of a system. Smalltalk is almost there. So is Emacs. GT reaches further on this scale.\n\nThere are two ways to evaluate such properties: one is to evaluate the environments themselves, another one is to look at what people can do with them. [[I]] – [[Tudor Girba]] propose that the latter is more interesting. Here is why. "
      },
      "after": "0032d863b181f619",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187849629
    },
    {
      "id": "ff787af12ce3b3d6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ff787af12ce3b3d6",
        "text": "For example, Emacs is flexible indeed, but it still does not make it fundamentally easier to reason about a system or set of data. In comparison, GT enables what we call [[Moldable Development]]. Granted, the associated skills are not easy to get, but there exist at least one case that shows that it is possible. This is why looking at the effects is more interesting: they give you a benchmark of problems to evaluate the other systems by.\n\n"
      },
      "after": "ad910faef0d4da81",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187852450
    },
    {
      "id": "824009c82744203f",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "824009c82744203f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "moldable-development",
        "title": "Moldable Development",
        "text": "Moldable development is a way of programming through which you construct custom tools for each problem."
      },
      "after": "ff787af12ce3b3d6",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187857593
    },
    {
      "id": "dd76c1d15e93fba2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dd76c1d15e93fba2",
        "text": "So, from this perspective moldability as a property is broader (a superset) of malleability. Interestingly, it is also correct to say that given that a moldable system qualifies also as a malleable one, malleable systems are a superset of moldable environments."
      },
      "after": "824009c82744203f",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187867625
    },
    {
      "id": "2535d6d14dde4cd6",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2535d6d14dde4cd6",
        "text": "Our goal is to make the inside of systems explainable. Presently, this is not a subject of conversation. This is the conversation we want to start, and this is why we say GT is the beginning of the conversation. It is important to qualify which conversation we start.\n\nUp until recently, GT was qualified as a development environment with implications for programmers only. Indeed, that’s understandable as we focused for the longest time on how to affect how we relate to a single object. With the addition of [[Lepiter]] it became more obvious that the implications of moldability are broader."
      },
      "after": "dd76c1d15e93fba2",
      "attribution": {
        "page": "Malleability"
      },
      "date": 1701187874457
    }
  ]
}