{
  "title": "JSON Plugin",
  "story": [
    {
      "type": "paragraph",
      "id": "94734ee597653649",
      "text": "We read and write the json 'resource' subtree within the JSON item on this page. "
    },
    {
      "type": "paragraph",
      "id": "26ec29edb22d01bf",
      "text": "See [[About JSON Plugin]]"
    },
    {
      "type": "paragraph",
      "id": "1d01d6470608d2a2",
      "text": "The web addressable data on this page is easily readable with an external link. [http:/plugin/json/json-plugin json]"
    },
    {
      "type": "json",
      "id": "35ece947aa90b581",
      "text": "Sensor feed from jd.local screen json. Raw format at present. Soon to be converted to wiki friendly format.",
      "resource": {
        "mpx4250": 354.5420560747664,
        "a2010": 984.9532710280374,
        "a2011": 483.93457943925233,
        "a2012": 0,
        "a2013": 785.8878504672897,
        "a2014": 0.9825285302467764,
        "acrms": 223.38825472741553
      },
      "slug": "json-plugin",
      "writes": 56730,
      "written": 1491577041948,
      "interval": 102089,
      "writer": "demo"
    },
    {
      "type": "paragraph",
      "id": "fad521fc3bf2180a",
      "text": "Data is from the 'a' series of sensors also reported by the legacy SensorServer software. [http://c2.com/~ward/arduino/SensorServer/ site]"
    },
    {
      "type": "paragraph",
      "id": "c3b1f25fdd93a1e8",
      "text": "This work-in-progress is available for preview as source or package. [https://github.com/WardCunningham/wiki-plugin-json github] [https://www.npmjs.com/package/wiki-plugin-json npm]"
    },
    {
      "type": "paragraph",
      "id": "e914779ef9c63123",
      "text": "See [[Data in Context]] where pages pool data to be assembled into one large graph database."
    },
    {
      "type": "paragraph",
      "id": "e8931b0d6b5cd15f",
      "text": "We allow regular mechanical updates without relying on the journal to keep this history. The plugin makes some effort to report change but this sidestepping of the journal breaks our notion of forking from history. [https://github.com/WardCunningham/wiki-plugin-json/issues/2 github]"
    },
    {
      "type": "markdown",
      "id": "83dfb967155642a1",
      "text": "# Markup"
    },
    {
      "type": "paragraph",
      "id": "08e8b00522b8c4d9",
      "text": "I've looked into implementing the jq json manipulation package as a dsl for formatting posted resources. I find it too powerful to be a convenient markup. It feels more like programming than I would like."
    },
    {
      "type": "paragraph",
      "id": "81d8c9ddff518a53",
      "text": "Here I will test some markup ideas that should make it easy to post and easy to markup with an eye toward sources we support or are likely to eventually support."
    },
    {
      "type": "paragraph",
      "id": "e508d38c1f1c495a",
      "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? Merge? Reset to empty on save?"
    },
    {
      "type": "paragraph",
      "id": "9ea9f759691e8cd8",
      "text": "TIMESERIES Key — source a kept value as a measurement over time. This could estimate epoch for each sample knowing interval or by finding a date or time field. Search json breadth first until Key is found."
    },
    {
      "type": "paragraph",
      "id": "802efb4f4575b2e0",
      "text": "What about units and conversion noise?"
    },
    {
      "type": "paragraph",
      "id": "eaca0dbb7cd54409",
      "text": "What about aggregation, percentile, missing data?"
    },
    {
      "type": "markdown",
      "id": "3909ef38d9e83d7e",
      "text": "# Security"
    },
    {
      "type": "paragraph",
      "id": "2440b911e9c4292b",
      "text": "We have not yet chosen a mechanism for creation and distribution of access tokens. We have one for now which demonstrates our intention but offers no security."
    },
    {
      "type": "paragraph",
      "id": "1185301fd0c8d132",
      "text": "We should consider who can grant access by minting tokens. Choices include the logged-in site owner, the logged-in server administrator, or the operator with ssh access to the installation."
    },
    {
      "type": "paragraph",
      "id": "18607dada32fd0a9",
      "text": "Consider holding tokens in a json file on the server accessed through the path status/plugin/json/tokens."
    },
    {
      "type": "code",
      "id": "8c5943367a831a25",
      "text": "{\n  \"json-plugin\": {\n    \"35ece947aa90b581\": {\n      \"id\": \"demo\",\n      \"nb\": \"widely known, discard if abused\"\n    }\n  }\n}"
    },
    {
      "type": "paragraph",
      "id": "9af83e477207a839",
      "text": "A write would be authorized if the file is present, the slug listed and the token appearing under the slug. Usage stats could be collected under the provided id as a way of distinguishing abusers should there be multiple tokens."
    },
    {
      "type": "markdown",
      "id": "686ee871469b8fa8",
      "text": "# Resources"
    },
    {
      "type": "paragraph",
      "id": "05f8ed14ff686d79",
      "text": "REST Best Practices for Concurrent Updates. [https://blog.4psa.com/rest-best-practices-managing-concurrent-updates/ post]"
    },
    {
      "type": "plugmatic",
      "id": "35e960a5c70e1e79",
      "text": "wiki-plugin-json"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "JSON Plugin",
        "story": []
      },
      "date": 1471841312228
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "94734ee597653649",
        "text": "We read and write json subtrees within this item."
      },
      "id": "94734ee597653649",
      "date": 1471841348174
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "26ec29edb22d01bf",
        "text": "See [[About JSON Plugin]]"
      },
      "after": "94734ee597653649",
      "id": "26ec29edb22d01bf",
      "date": 1471841351548
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1d01d6470608d2a2",
        "text": "This page has. [http:/plugin/json/testing-json json]"
      },
      "after": "26ec29edb22d01bf",
      "id": "1d01d6470608d2a2",
      "date": 1471841355911
    },
    {
      "type": "add",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "145 reads, 44 writes, 4 array, 46 object, 122 string, 15 number, 120 null",
        "resource": {
          "foo": "bar"
        }
      },
      "after": "1d01d6470608d2a2",
      "id": "35ece947aa90b581",
      "date": 1471841360333
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "686ee871469b8fa8",
        "text": "# Resources"
      },
      "after": "35ece947aa90b581",
      "id": "686ee871469b8fa8",
      "date": 1471841364238
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "05f8ed14ff686d79",
        "text": "REST Best Practices for Concurrent Updates. [https://blog.4psa.com/rest-best-practices-managing-concurrent-updates/ post]"
      },
      "after": "686ee871469b8fa8",
      "id": "05f8ed14ff686d79",
      "date": 1471841369889
    },
    {
      "type": "edit",
      "id": "1d01d6470608d2a2",
      "item": {
        "type": "paragraph",
        "id": "1d01d6470608d2a2",
        "text": "This page has data accessible through rest. [http:/plugin/json/json-plugin json]"
      },
      "date": 1471841456962,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1471842725027
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "44 writes, 46 objects, 4 arrays.",
        "resource": {
          "foo": "bar"
        }
      },
      "date": 1471842759072
    },
    {
      "type": "edit",
      "id": "94734ee597653649",
      "item": {
        "type": "paragraph",
        "id": "94734ee597653649",
        "text": "We read and write the json 'resource' subtree within the JSON item on this page. "
      },
      "date": 1471880349478
    },
    {
      "type": "edit",
      "id": "1d01d6470608d2a2",
      "item": {
        "type": "paragraph",
        "id": "1d01d6470608d2a2",
        "text": "This page has web addressable data. [http:/plugin/json/json-plugin json]"
      },
      "date": 1471880371458
    },
    {
      "type": "edit",
      "id": "1d01d6470608d2a2",
      "item": {
        "type": "paragraph",
        "id": "1d01d6470608d2a2",
        "text": "The web addressable data on this page is easily readable with an external link. [http:/plugin/json/json-plugin json]"
      },
      "date": 1471880463209
    },
    {
      "type": "add",
      "id": "4fb43a4c2635176b",
      "item": {
        "type": "paragraph",
        "id": "4fb43a4c2635176b",
        "text": "We've yet to figure out how it should be displayed here but we'll probably just show some statistics."
      },
      "after": "1d01d6470608d2a2",
      "date": 1471880529395
    },
    {
      "type": "add",
      "id": "fad521fc3bf2180a",
      "item": {
        "type": "paragraph",
        "id": "fad521fc3bf2180a",
        "text": "Write to this page with curl using the temporary api key. Soon we will figure out secure key management."
      },
      "after": "4fb43a4c2635176b",
      "date": 1471880652229
    },
    {
      "type": "move",
      "order": [
        "94734ee597653649",
        "26ec29edb22d01bf",
        "1d01d6470608d2a2",
        "4fb43a4c2635176b",
        "35ece947aa90b581",
        "fad521fc3bf2180a",
        "686ee871469b8fa8",
        "05f8ed14ff686d79"
      ],
      "id": "fad521fc3bf2180a",
      "date": 1471880655940
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "6803b3063cc970e8",
        "text": "echo '{\"foo\": \"bar\"}' |\\\n  curl -X PUT  -d @- \\\n    -H \"Content-Type: application/json\" \\\n    -H \"X-Api-Key:35ece947aa90b581\" \\\n    http://<site>/plugin/json/<slug>"
      },
      "after": "fad521fc3bf2180a",
      "id": "6803b3063cc970e8",
      "date": 1471880661582
    },
    {
      "type": "edit",
      "id": "6803b3063cc970e8",
      "item": {
        "type": "code",
        "id": "6803b3063cc970e8",
        "text": "echo '{\"foo\": \"bar\"}' |\\\n  curl -X PUT  -d @- \\\n    -H \"Content-Type: application/json\" \\\n    -H \"X-Api-Key:35ece947aa90b581\" \\\n    http://ward.asia.wiki.org/plugin/json/json-plugin"
      },
      "date": 1471880688804
    },
    {
      "type": "add",
      "id": "c3b1f25fdd93a1e8",
      "item": {
        "type": "paragraph",
        "id": "c3b1f25fdd93a1e8",
        "text": "This work-in-progress is available for preview. [https://github.com/WardCunningham/wiki-plugin-json github]"
      },
      "after": "fad521fc3bf2180a",
      "date": 1471880779489
    },
    {
      "type": "edit",
      "id": "c3b1f25fdd93a1e8",
      "item": {
        "type": "paragraph",
        "id": "c3b1f25fdd93a1e8",
        "text": "This work-in-progress is available for preview. [https://github.com/WardCunningham/wiki-plugin-json github] [https://www.npmjs.com/package/wiki-plugin-json npm]"
      },
      "date": 1471880845977
    },
    {
      "type": "edit",
      "id": "c3b1f25fdd93a1e8",
      "item": {
        "type": "paragraph",
        "id": "c3b1f25fdd93a1e8",
        "text": "This work-in-progress is available for preview as source or package. [https://github.com/WardCunningham/wiki-plugin-json github] [https://www.npmjs.com/package/wiki-plugin-json npm]"
      },
      "date": 1471880870337
    },
    {
      "type": "move",
      "order": [
        "94734ee597653649",
        "26ec29edb22d01bf",
        "1d01d6470608d2a2",
        "4fb43a4c2635176b",
        "35ece947aa90b581",
        "fad521fc3bf2180a",
        "6803b3063cc970e8",
        "c3b1f25fdd93a1e8",
        "686ee871469b8fa8",
        "05f8ed14ff686d79"
      ],
      "id": "c3b1f25fdd93a1e8",
      "date": 1471880882968
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "JSON data. 44 writes, last 2 days ago, 134 bytes.",
        "resource": {
          "author": "Ward Cunningham"
        }
      },
      "date": 1471881027052
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "JSON data, last write 2 days ago, 134 bytes.",
        "resource": {
          "author": "Ward Cunningham"
        }
      },
      "date": 1471881175404
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "JSON data, 134 bytes from 2 days ago",
        "resource": {
          "author": "Ward Cunningham"
        }
      },
      "date": 1471881229694
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "Sensor feed from jd.local screen json. Raw format at present. Soon to be converted to wiki friendly format.",
        "resource": {
          "foo": "bar"
        },
        "slug": "json-plugin",
        "writes": 5,
        "written": 1472052377203,
        "interval": 30225
      },
      "date": 1472053857988,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1472053880279
    },
    {
      "type": "edit",
      "id": "fad521fc3bf2180a",
      "item": {
        "type": "paragraph",
        "id": "fad521fc3bf2180a",
        "text": "Data is from the 'a' series of sensors also reported by the legacy SensorServer software. [http://c2.com/~ward/arduino/SensorServer/ site]"
      },
      "date": 1472165301668,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1472165324767
    },
    {
      "type": "remove",
      "id": "6803b3063cc970e8",
      "date": 1472165329856
    },
    {
      "type": "remove",
      "id": "4fb43a4c2635176b",
      "date": 1472355311377,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1472355329446
    },
    {
      "type": "add",
      "id": "83dfb967155642a1",
      "item": {
        "type": "paragraph",
        "id": "83dfb967155642a1",
        "text": "# Markup"
      },
      "after": "c3b1f25fdd93a1e8",
      "date": 1472355376244
    },
    {
      "type": "add",
      "id": "08e8b00522b8c4d9",
      "item": {
        "type": "paragraph",
        "id": "08e8b00522b8c4d9",
        "text": "I've looked into implementing the jq json manipulation package as a dsl for formatting posted resources. I find it too powerful to be a convenient markup. It feels more like programming than I would like."
      },
      "after": "83dfb967155642a1",
      "date": 1472355596477
    },
    {
      "type": "add",
      "id": "81d8c9ddff518a53",
      "item": {
        "type": "paragraph",
        "id": "81d8c9ddff518a53",
        "text": "Here I will test some markup ideas that should make it easy to post and easy to markup with an eye toward sources we support or are likely to eventually support."
      },
      "after": "08e8b00522b8c4d9",
      "date": 1472355684807
    },
    {
      "type": "add",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 to save the last 100 posts. This would be interpreted server side."
      },
      "after": "81d8c9ddff518a53",
      "date": 1472355738258
    },
    {
      "type": "add",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES label to source a kept value as values over time. This could estimate epoch for each sample. Search json breadth first until label is found."
      },
      "after": "e508d38c1f1c495a",
      "date": 1472356043582
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES :abel to source a kept value as values over time. This could estimate epoch for each sample. Search json breadth first until label is found."
      },
      "date": 1472356054909
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Label to source a kept value as values over time. This could estimate epoch for each sample. Search json breadth first until label is found."
      },
      "date": 1472356064194
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side."
      },
      "date": 1472356096425
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Label — source a kept value as values over time. This could estimate epoch for each sample. Search json breadth first until label is found."
      },
      "date": 1472356107263
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Key — source a kept value as values over time. This could estimate epoch for each sample. Search json breadth first until Key is found."
      },
      "date": 1472356148896
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Key — source a kept value as a measurement over time. This could estimate epoch for each sample. Search json breadth first until Key is found."
      },
      "date": 1472356221441
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Key — source a kept value as a measurement over time. This could estimate epoch for each sample knowing interval or finding a date or time field. Search json breadth first until Key is found."
      },
      "date": 1472356300527
    },
    {
      "type": "edit",
      "id": "83dfb967155642a1",
      "item": {
        "type": "markdown",
        "id": "83dfb967155642a1",
        "text": "# Markup"
      },
      "date": 1472389910174
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing?"
      },
      "date": 1472390819087
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? "
      },
      "date": 1472390894135
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? Even KEEP 1 is set back by edit."
      },
      "date": 1472390964703
    },
    {
      "type": "edit",
      "id": "9ea9f759691e8cd8",
      "item": {
        "type": "paragraph",
        "id": "9ea9f759691e8cd8",
        "text": "TIMESERIES Key — source a kept value as a measurement over time. This could estimate epoch for each sample knowing interval or by finding a date or time field. Search json breadth first until Key is found."
      },
      "date": 1472391006158
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? Even KEEP 1 is set back by edit without merge."
      },
      "date": 1472391144701
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? Reset to empty on save?"
      },
      "date": 1472391405305
    },
    {
      "type": "edit",
      "id": "e508d38c1f1c495a",
      "item": {
        "type": "paragraph",
        "id": "e508d38c1f1c495a",
        "text": "KEEP 100 — save the last 100 posts. This would be interpreted server side. But how does this interact with editing? Merge? Reset to empty on save?"
      },
      "date": 1472391423772
    },
    {
      "type": "add",
      "id": "802efb4f4575b2e0",
      "item": {
        "type": "paragraph",
        "id": "802efb4f4575b2e0",
        "text": "What about units and conversion noise?"
      },
      "after": "9ea9f759691e8cd8",
      "date": 1472391586144
    },
    {
      "type": "add",
      "id": "eaca0dbb7cd54409",
      "item": {
        "type": "paragraph",
        "id": "eaca0dbb7cd54409",
        "text": "What about aggregation, percentile, missing data?"
      },
      "after": "802efb4f4575b2e0",
      "date": 1472391629679
    },
    {
      "type": "add",
      "id": "3909ef38d9e83d7e",
      "item": {
        "type": "paragraph",
        "id": "3909ef38d9e83d7e",
        "text": "# Security"
      },
      "after": "eaca0dbb7cd54409",
      "date": 1472399549450
    },
    {
      "type": "add",
      "id": "2440b911e9c4292b",
      "item": {
        "type": "paragraph",
        "id": "2440b911e9c4292b",
        "text": "We have not yet chosen a mechanism for creation and distribution of access tokens. We have one for now which demonstrates our intention but offers no security."
      },
      "after": "3909ef38d9e83d7e",
      "date": 1472399758168
    },
    {
      "type": "add",
      "id": "1185301fd0c8d132",
      "item": {
        "type": "paragraph",
        "id": "1185301fd0c8d132",
        "text": "We should consider who can grant access by minting tokens. Choices include the logged-in site owner, the logged-in server administrator, or the operator with ssh access to the installation."
      },
      "after": "2440b911e9c4292b",
      "date": 1472399952556
    },
    {
      "type": "add",
      "id": "18607dada32fd0a9",
      "item": {
        "type": "paragraph",
        "id": "18607dada32fd0a9",
        "text": "Consider holding tokens in a json file on the server accessed through the path status/plugin/json/tokens."
      },
      "after": "1185301fd0c8d132",
      "date": 1472400346094
    },
    {
      "item": {
        "type": "factory",
        "id": "8c5943367a831a25"
      },
      "id": "8c5943367a831a25",
      "type": "add",
      "after": "05f8ed14ff686d79",
      "date": 1472400360042
    },
    {
      "type": "move",
      "order": [
        "94734ee597653649",
        "26ec29edb22d01bf",
        "1d01d6470608d2a2",
        "35ece947aa90b581",
        "fad521fc3bf2180a",
        "c3b1f25fdd93a1e8",
        "83dfb967155642a1",
        "08e8b00522b8c4d9",
        "81d8c9ddff518a53",
        "e508d38c1f1c495a",
        "9ea9f759691e8cd8",
        "802efb4f4575b2e0",
        "eaca0dbb7cd54409",
        "3909ef38d9e83d7e",
        "2440b911e9c4292b",
        "1185301fd0c8d132",
        "18607dada32fd0a9",
        "8c5943367a831a25",
        "686ee871469b8fa8",
        "05f8ed14ff686d79"
      ],
      "id": "8c5943367a831a25",
      "date": 1472400365111
    },
    {
      "type": "edit",
      "id": "8c5943367a831a25",
      "item": {
        "type": "code",
        "id": "8c5943367a831a25",
        "text": "{\"json-plugin\":\n  {\""
      },
      "date": 1472400424946
    },
    {
      "type": "edit",
      "id": "8c5943367a831a25",
      "item": {
        "type": "code",
        "id": "8c5943367a831a25",
        "text": "{\n  \"json-plugin\": {\n    \"35ece947aa90b581\": {\n      \"id\": \"demo\",\n      \"about\": \"widely known, discard if abused\"\n    }\n  }\n}\n  "
      },
      "date": 1472400646470
    },
    {
      "type": "edit",
      "id": "8c5943367a831a25",
      "item": {
        "type": "code",
        "id": "8c5943367a831a25",
        "text": "{\n  \"json-plugin\": {\n    \"35ece947aa90b581\": {\n      \"id\": \"demo\",\n      \"about\": \"widely known, discard if abused\"\n    }\n  }\n}"
      },
      "date": 1472400701830
    },
    {
      "type": "edit",
      "id": "8c5943367a831a25",
      "item": {
        "type": "code",
        "id": "8c5943367a831a25",
        "text": "{\n  \"json-plugin\": {\n    \"35ece947aa90b581\": {\n      \"id\": \"demo\",\n      \"nbt\": \"widely known, discard if abused\"\n    }\n  }\n}"
      },
      "date": 1472400749193
    },
    {
      "type": "edit",
      "id": "8c5943367a831a25",
      "item": {
        "type": "code",
        "id": "8c5943367a831a25",
        "text": "{\n  \"json-plugin\": {\n    \"35ece947aa90b581\": {\n      \"id\": \"demo\",\n      \"nb\": \"widely known, discard if abused\"\n    }\n  }\n}"
      },
      "date": 1472400756075
    },
    {
      "item": {
        "type": "factory",
        "id": "9af83e477207a839"
      },
      "id": "9af83e477207a839",
      "type": "add",
      "after": "05f8ed14ff686d79",
      "date": 1472400785061
    },
    {
      "type": "move",
      "order": [
        "94734ee597653649",
        "26ec29edb22d01bf",
        "1d01d6470608d2a2",
        "35ece947aa90b581",
        "fad521fc3bf2180a",
        "c3b1f25fdd93a1e8",
        "83dfb967155642a1",
        "08e8b00522b8c4d9",
        "81d8c9ddff518a53",
        "e508d38c1f1c495a",
        "9ea9f759691e8cd8",
        "802efb4f4575b2e0",
        "eaca0dbb7cd54409",
        "3909ef38d9e83d7e",
        "2440b911e9c4292b",
        "1185301fd0c8d132",
        "18607dada32fd0a9",
        "8c5943367a831a25",
        "9af83e477207a839",
        "686ee871469b8fa8",
        "05f8ed14ff686d79"
      ],
      "id": "9af83e477207a839",
      "date": 1472400788606
    },
    {
      "type": "edit",
      "id": "9af83e477207a839",
      "item": {
        "type": "paragraph",
        "id": "9af83e477207a839",
        "text": "A write would be authorized if the file is present, the slug listed and the token appearing under the slug. Usage stats could be collected under the provided id as a way of distinguishing abusers should there be multiple tokens."
      },
      "date": 1472401088976
    },
    {
      "type": "edit",
      "id": "3909ef38d9e83d7e",
      "item": {
        "type": "markdown",
        "id": "3909ef38d9e83d7e",
        "text": "# Security"
      },
      "date": 1472401136020
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "Sensor feed from jd.local screen json. Raw format at present. Soon to be converted to wiki friendly format.\nTIMESERIES",
        "resource": {
          "mpx4250": 367.7102803738318,
          "a2010": 980.8878504672897,
          "a2011": 535.2523364485982,
          "a2012": 131.85981308411215,
          "a2013": 787.1121495327103,
          "a2014": 0.9882456058694691,
          "acrms": 223.3984420003443
        },
        "slug": "json-plugin",
        "writes": 10323,
        "written": 1473270356025,
        "interval": 103325,
        "writer": "demo"
      },
      "date": 1473270554635
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "Sensor feed from jd.local screen json. Raw format at present. Soon to be converted to wiki friendly format.\nMARKERS",
        "resource": {
          "mpx4250": 367.7102803738318,
          "a2010": 980.8878504672897,
          "a2011": 535.2523364485982,
          "a2012": 131.85981308411215,
          "a2013": 787.1121495327103,
          "a2014": 0.9882456058694691,
          "acrms": 223.3984420003443
        },
        "slug": "json-plugin",
        "writes": 10323,
        "written": 1473270356025,
        "interval": 103325,
        "writer": "demo"
      },
      "date": 1473270635128
    },
    {
      "type": "edit",
      "id": "35ece947aa90b581",
      "item": {
        "type": "json",
        "id": "35ece947aa90b581",
        "text": "Sensor feed from jd.local screen json. Raw format at present. Soon to be converted to wiki friendly format.",
        "resource": {
          "mpx4250": 367.7102803738318,
          "a2010": 980.8878504672897,
          "a2011": 535.2523364485982,
          "a2012": 131.85981308411215,
          "a2013": 787.1121495327103,
          "a2014": 0.9882456058694691,
          "acrms": 223.3984420003443
        },
        "slug": "json-plugin",
        "writes": 10323,
        "written": 1473270356025,
        "interval": 103325,
        "writer": "demo"
      },
      "date": 1473270661589
    },
    {
      "item": {
        "type": "factory",
        "id": "35e960a5c70e1e79"
      },
      "id": "35e960a5c70e1e79",
      "type": "add",
      "after": "05f8ed14ff686d79",
      "date": 1533322952680
    },
    {
      "type": "edit",
      "id": "35e960a5c70e1e79",
      "item": {
        "type": "plugmatic",
        "id": "35e960a5c70e1e79",
        "text": "wiki-plugin-json"
      },
      "date": 1533322973056
    },
    {
      "type": "add",
      "id": "e914779ef9c63123",
      "item": {
        "type": "paragraph",
        "id": "e914779ef9c63123",
        "text": "See [[Data in Context]] where pages pool data to be assembled into one large graph database."
      },
      "after": "c3b1f25fdd93a1e8",
      "date": 1542122118681
    },
    {
      "type": "add",
      "id": "e8931b0d6b5cd15f",
      "item": {
        "type": "paragraph",
        "id": "e8931b0d6b5cd15f",
        "text": "We allow regular mechanical updates without relying on the journal to keep this history. The plugin makes some effort to report change but this sidestepping of the journal breaks our notion of forking from history. [https://github.com/WardCunningham/wiki-plugin-json/issues/2 github]"
      },
      "after": "e914779ef9c63123",
      "date": 1542122437534
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1694156655162
    }
  ]
}