{
  "title": "Path Dialect",
  "story": [
    {
      "type": "markdown",
      "id": "c9209810ebfe2dff",
      "text": "The *path dialect* shows a traversal across [[Fences]] rather than through doors. "
    },
    {
      "type": "paragraph",
      "id": "466f333049636281",
      "text": "This dialect represents potential parellelism as diverging paths, however the traversal metaphor suggests that we must choose one path and backtrack to explore the other path. "
    },
    {
      "type": "paragraph",
      "id": "9cd6602aa24dc395",
      "text": "Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Polynomial processes (P) do not require [[Backtracking]], while exponential processes (NP) do."
    },
    {
      "type": "paragraph",
      "id": "c6223517c1befe94",
      "text": "Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of [[cross]]ings. They structurally distinguish odd and even depths of nestings. "
    },
    {
      "type": "markdown",
      "id": "c328764eb723055c",
      "text": "When a path terminates at a variable or constant on both sides of a border, the form is *[[Binate]]*, another inherent marker of computational complexity.\n"
    },
    {
      "type": "paragraph",
      "id": "6e0def8fe5430035",
      "text": "â‡’ [[Dnet Dialect]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Path Dialect",
        "story": []
      },
      "date": 1673338751289
    },
    {
      "item": {
        "type": "factory",
        "id": "c9209810ebfe2dff"
      },
      "id": "c9209810ebfe2dff",
      "type": "add",
      "date": 1673338758410
    },
    {
      "type": "edit",
      "id": "c9209810ebfe2dff",
      "item": {
        "type": "paragraph",
        "id": "c9209810ebfe2dff",
        "text": "The path dialect shows a traversal across fences rather than through doors. This dialect represents potential parellelism as diverging paths, however the traversal metaphor suggests that we must choose one path and backtrack to explore the other path. Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. When a path terminates at a variable or constant on both sides of a border, the form is binate, another inherent marker of computational complexity.\n"
      },
      "date": 1673338759975
    },
    {
      "type": "edit",
      "id": "c9209810ebfe2dff",
      "item": {
        "type": "paragraph",
        "id": "c9209810ebfe2dff",
        "text": "The path dialect shows a traversal across [[Fences]] rather than through doors. This dialect represents potential parellelism as diverging paths, however the traversal metaphor suggests that we must choose one path and backtrack to explore the other path. Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. When a path terminates at a variable or constant on both sides of a border, the form is binate, another inherent marker of computational complexity.\n"
      },
      "date": 1673338806240
    },
    {
      "type": "edit",
      "id": "c9209810ebfe2dff",
      "item": {
        "type": "paragraph",
        "id": "c9209810ebfe2dff",
        "text": "The path dialect shows a traversal across [[Fences]] rather than through doors. "
      },
      "date": 1673338817270
    },
    {
      "type": "add",
      "id": "466f333049636281",
      "item": {
        "type": "paragraph",
        "id": "466f333049636281",
        "text": "This dialect represents potential parellelism as diverging paths, however the traversal metaphor suggests that we must choose one path and backtrack to explore the other path. Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. When a path terminates at a variable or constant on both sides of a border, the form is binate, another inherent marker of computational complexity.\n"
      },
      "after": "c9209810ebfe2dff",
      "date": 1673338818401
    },
    {
      "type": "edit",
      "id": "c9209810ebfe2dff",
      "item": {
        "type": "paragraph",
        "id": "c9209810ebfe2dff",
        "text": "The *path dialect* shows a traversal across [[Fences]] rather than through doors. "
      },
      "date": 1673338837621
    },
    {
      "type": "edit",
      "id": "c9209810ebfe2dff",
      "item": {
        "type": "markdown",
        "id": "c9209810ebfe2dff",
        "text": "The *path dialect* shows a traversal across [[Fences]] rather than through doors. "
      },
      "date": 1673338839223
    },
    {
      "type": "edit",
      "id": "466f333049636281",
      "item": {
        "type": "paragraph",
        "id": "466f333049636281",
        "text": "This dialect represents potential parellelism as diverging paths, however the traversal metaphor suggests that we must choose one path and backtrack to explore the other path. "
      },
      "date": 1673338947875
    },
    {
      "type": "add",
      "id": "9cd6602aa24dc395",
      "item": {
        "type": "paragraph",
        "id": "9cd6602aa24dc395",
        "text": "Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. When a path terminates at a variable or constant on both sides of a border, the form is binate, another inherent marker of computational complexity.\n"
      },
      "after": "466f333049636281",
      "date": 1673338949069
    },
    {
      "type": "edit",
      "id": "9cd6602aa24dc395",
      "item": {
        "type": "paragraph",
        "id": "9cd6602aa24dc395",
        "text": "Uninformed choice of one path over another is the hallmark of a complex algorithmic process. "
      },
      "date": 1673338997045
    },
    {
      "type": "add",
      "id": "c6223517c1befe94",
      "item": {
        "type": "paragraph",
        "id": "c6223517c1befe94",
        "text": "Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. When a path terminates at a variable or constant on both sides of a border, the form is binate, another inherent marker of computational complexity.\n"
      },
      "after": "9cd6602aa24dc395",
      "date": 1673338998106
    },
    {
      "type": "edit",
      "id": "c6223517c1befe94",
      "item": {
        "type": "paragraph",
        "id": "c6223517c1befe94",
        "text": "Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of crossings. They structurally distinguish odd and even depths of nestings. "
      },
      "date": 1673339050976
    },
    {
      "type": "add",
      "id": "c328764eb723055c",
      "item": {
        "type": "paragraph",
        "id": "c328764eb723055c",
        "text": "When a path terminates at a variable or constant on both sides of a border, the form is *binate*, another inherent marker of computational complexity.\n"
      },
      "after": "c6223517c1befe94",
      "date": 1673339056170
    },
    {
      "type": "edit",
      "id": "c328764eb723055c",
      "item": {
        "type": "markdown",
        "id": "c328764eb723055c",
        "text": "When a path terminates at a variable or constant on both sides of a border, the form is *binate*, another inherent marker of computational complexity.\n"
      },
      "date": 1673339057322
    },
    {
      "item": {
        "type": "factory",
        "id": "240c3d0184d4787c"
      },
      "id": "240c3d0184d4787c",
      "type": "add",
      "after": "c328764eb723055c",
      "date": 1673339116242
    },
    {
      "type": "edit",
      "id": "240c3d0184d4787c",
      "item": {
        "type": "paragraph",
        "id": "240c3d0184d4787c",
        "text": "Binate is a technical term from Boolean optimization that identifies expressions in which a variable appears both negated and non-negated, for example, A AND NOT A. Here it is expanded to refer to a from in which a variable occurs at both an odd and an even depth of nesting within square-brackets."
      },
      "date": 1673339204649
    },
    {
      "type": "edit",
      "id": "9cd6602aa24dc395",
      "item": {
        "type": "paragraph",
        "id": "9cd6602aa24dc395",
        "text": "Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Polynomial processes (P) do not require backtracking, while exponential processes (NP) do."
      },
      "date": 1673339299887
    },
    {
      "type": "edit",
      "id": "9cd6602aa24dc395",
      "item": {
        "type": "paragraph",
        "id": "9cd6602aa24dc395",
        "text": "Uninformed choice of one path over another is the hallmark of a complex algorithmic process. Polynomial processes (P) do not require [[Backtracking]], while exponential processes (NP) do."
      },
      "date": 1673339334626
    },
    {
      "item": {
        "type": "factory",
        "id": "6e0def8fe5430035"
      },
      "id": "6e0def8fe5430035",
      "type": "add",
      "after": "240c3d0184d4787c",
      "date": 1673341250779
    },
    {
      "type": "edit",
      "id": "6e0def8fe5430035",
      "item": {
        "type": "paragraph",
        "id": "6e0def8fe5430035",
        "text": "â‡’ [[Dnet Dialect]]"
      },
      "date": 1673341269153
    },
    {
      "type": "edit",
      "id": "c328764eb723055c",
      "item": {
        "type": "markdown",
        "id": "c328764eb723055c",
        "text": "When a path terminates at a variable or constant on both sides of a border, the form is *[[Binate]]*, another inherent marker of computational complexity.\n"
      },
      "date": 1673345258414
    },
    {
      "id": "240c3d0184d4787c",
      "type": "remove",
      "date": 1673345281095
    },
    {
      "type": "edit",
      "id": "c6223517c1befe94",
      "item": {
        "type": "paragraph",
        "id": "c6223517c1befe94",
        "text": "Paths end at units along the round border and at constants along the square border. Labeled variables lying on the round or square border identify subpaths with their own internal structure. Paths provide a unique parity count of [[cross]]ings. They structurally distinguish odd and even depths of nestings. "
      },
      "date": 1673419413133
    }
  ]
}