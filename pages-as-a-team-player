{
  "title": "Pages as a Team Player",
  "story": [
    {
      "type": "paragraph",
      "id": "b920c66dfdb61900",
      "text": "In this video Martin Fowler distinguishes internal and external implementations of domain specific languages, a subtlety that is relevant to our work with Mechs."
    },
    {
      "type": "video",
      "id": "3de585d4a4a754a4",
      "text": "YOUTUBE ZfdAwV0HlEU\nPublished Aug 15, 2012."
    },
    {
      "type": "paragraph",
      "id": "a2164eeae1b22308",
      "text": "He also starts by describing a situation where a new and application specific language enables more nuanced cooperation between programmers and the folks they serve. This alone advances the notion of \"automation as a team player\"."
    },
    {
      "type": "paragraph",
      "id": "39bf0fb2886302de",
      "text": "See Ten Challenges for Making\nAutomation a “Team Player”\nin Joint Human-Agent Activity. [https://jeffreymbradshaw.net/publications/17._Team_Players.pdf_1.pdf pdf]"
    },
    {
      "type": "pagefold",
      "id": "9ad527add5225bef",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "c9ac54d3dea497e1",
      "text": "Ralf asks, in the context of Martin's analysis, \"What is your semantic model so far?\" [https://app.element.io/#/room/#fedwiki:matrix.org/$171687910914Uewgg:dreyeck.freedombox.rocks matrix]"
    },
    {
      "type": "paragraph",
      "id": "3f0d1df9ae433308",
      "text": "I have only a vague notion of exactly how Mech blocks will do whatever it is that they will eventually do. The most useful semantics will be discovered by making and using blocks. However, I have strong feelings that they should be welcome members in the federation. That is, they should enhance our willingness to browse the federation without any fear that looking at or even forking a page will somehow take over control of our experience."
    },
    {
      "type": "paragraph",
      "id": "8c09d5ff336a6816",
      "text": "I think we can make the connections between blocks be \"magnetic\" in the same way some of our pages already are. When you open the Lineup Diagram it \"reads\" the existing lineup to the left and offers to add pages that might have been missed to the right. It can do this because the Graphviz plugin grants that power to our blockish extension to Graphviz's Dot notation."
    },
    {
      "type": "paragraph",
      "id": "ee654465f8e55b79",
      "text": "Similarly the Mech plugin can grant power to blocks that are not available to html scripts inside the Frame plugin. In Fowler's terms Mechs are leaning towards internal implementation if they only rearrange capabilities already present in wiki."
    },
    {
      "type": "paragraph",
      "id": "1225a0edb355a2a7",
      "text": "Of course this all depends on what the available blocks are programmed to do. I can imagine each release of the Mech plugin will offer new blocks that don't break this compact: be a team player. Perhaps other plugins will offer Mech compatible blocks that make their services and representations more useful. We will have to watch this supply-chain carefully to be sure all Mechs are to be trusted."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Pages as a Team Player",
        "story": []
      },
      "date": 1716905223453
    },
    {
      "item": {
        "type": "factory",
        "id": "b920c66dfdb61900"
      },
      "id": "b920c66dfdb61900",
      "type": "add",
      "date": 1716905233217
    },
    {
      "type": "edit",
      "id": "b920c66dfdb61900",
      "item": {
        "type": "paragraph",
        "id": "b920c66dfdb61900",
        "text": "In this video Martin Fowler distinguishes internal and external implementations of domain specific languages, a subtlety that is relevant to our work with Mechs. He also starts by describing a situation where a new and application specific language enables more nuanced cooperation between programmers and the folks they serve. This alone advances the notion of \"automation as a team player\"."
      },
      "date": 1716905282687
    },
    {
      "type": "add",
      "id": "3f0d1df9ae433308",
      "item": {
        "type": "paragraph",
        "id": "3f0d1df9ae433308",
        "text": "I have only a vague notion of exactly how Mech blocks will do whatever it is that they will eventually do. The most useful semantics will be discovered by making and using blocks. However, I have strong feelings that they should be welcome members in the federation. That is, they should enhance our willingness to browse the federation without any fear that looking at or even forking a page will somehow take over control of our experience."
      },
      "after": "b920c66dfdb61900",
      "date": 1716905286715
    },
    {
      "type": "add",
      "id": "8c09d5ff336a6816",
      "item": {
        "type": "paragraph",
        "id": "8c09d5ff336a6816",
        "text": "I think we can make the connections between blocks be \"magnetic\" in the same way some of our pages already are. When you open the Lineup Diagram it \"reads\" the existing lineup to the left and offers to add pages that might have been missed to the right. It can do this because the Graphviz plugin grants that power to our blockish extension to Graphviz's Dot notation."
      },
      "after": "3f0d1df9ae433308",
      "date": 1716905291146
    },
    {
      "type": "add",
      "id": "ee654465f8e55b79",
      "item": {
        "type": "paragraph",
        "id": "ee654465f8e55b79",
        "text": "Similarly the Mech plugin can grant power to blocks that are not available to html scripts inside the Frame plugin. In Fowler's terms Mechs are leaning towards internal implementation if they only rearrange capabilities already present in wiki. Of course this all depends on what the available blocks are programmed to do. I can imagine each release of the Mech plugin will offer new blocks that don't break this compact: be a team player. Perhaps other plugins will offer Mech compatible blocks that make their services and representations more useful. We will have to watch this supply-chain carefully to be sure all Mechs are to be trusted."
      },
      "after": "8c09d5ff336a6816",
      "date": 1716905295136
    },
    {
      "type": "edit",
      "id": "b920c66dfdb61900",
      "item": {
        "type": "paragraph",
        "id": "b920c66dfdb61900",
        "text": "In this video Martin Fowler distinguishes internal and external implementations of domain specific languages, a subtlety that is relevant to our work with Mechs."
      },
      "date": 1716905319840
    },
    {
      "type": "add",
      "id": "a2164eeae1b22308",
      "item": {
        "type": "paragraph",
        "id": "a2164eeae1b22308",
        "text": "He also starts by describing a situation where a new and application specific language enables more nuanced cooperation between programmers and the folks they serve. This alone advances the notion of \"automation as a team player\"."
      },
      "after": "b920c66dfdb61900",
      "date": 1716905325583
    },
    {
      "item": {
        "type": "factory",
        "id": "3de585d4a4a754a4"
      },
      "id": "3de585d4a4a754a4",
      "type": "add",
      "after": "ee654465f8e55b79",
      "date": 1716905334909
    },
    {
      "type": "edit",
      "id": "3de585d4a4a754a4",
      "item": {
        "type": "video",
        "id": "3de585d4a4a754a4",
        "text": "YOUTUBE ZfdAwV0HlEU\n(double-click to edit caption)\n"
      },
      "date": 1716905385570
    },
    {
      "type": "edit",
      "id": "3de585d4a4a754a4",
      "item": {
        "type": "video",
        "id": "3de585d4a4a754a4",
        "text": "YOUTUBE ZfdAwV0HlEU\nPublished Aug 15, 2012."
      },
      "date": 1716905415277
    },
    {
      "id": "3de585d4a4a754a4",
      "type": "move",
      "order": [
        "b920c66dfdb61900",
        "3de585d4a4a754a4",
        "a2164eeae1b22308",
        "3f0d1df9ae433308",
        "8c09d5ff336a6816",
        "ee654465f8e55b79"
      ],
      "date": 1716905436059
    },
    {
      "type": "add",
      "id": "c9ac54d3dea497e1",
      "item": {
        "type": "paragraph",
        "id": "c9ac54d3dea497e1",
        "text": "Ralf asks, \"\" https://app.element.io/#/room/#fedwiki:matrix.org/$171687910914Uewgg:dreyeck.freedombox.rocks matrix]"
      },
      "after": "a2164eeae1b22308",
      "date": 1716905614175
    },
    {
      "type": "edit",
      "id": "c9ac54d3dea497e1",
      "item": {
        "type": "paragraph",
        "id": "c9ac54d3dea497e1",
        "text": "Ralf asks, \"What is your semantic model so far?\" [https://app.element.io/#/room/#fedwiki:matrix.org/$171687910914Uewgg:dreyeck.freedombox.rocks matrix]"
      },
      "date": 1716905655635
    },
    {
      "type": "edit",
      "id": "c9ac54d3dea497e1",
      "item": {
        "type": "paragraph",
        "id": "c9ac54d3dea497e1",
        "text": "Ralf asks, in the context of Martin's analysis, \"What is your semantic model so far?\" [https://app.element.io/#/room/#fedwiki:matrix.org/$171687910914Uewgg:dreyeck.freedombox.rocks matrix]"
      },
      "date": 1716905730765
    },
    {
      "type": "edit",
      "id": "ee654465f8e55b79",
      "item": {
        "type": "paragraph",
        "id": "ee654465f8e55b79",
        "text": "Similarly the Mech plugin can grant power to blocks that are not available to html scripts inside the Frame plugin. In Fowler's terms Mechs are leaning towards internal implementation if they only rearrange capabilities already present in wiki."
      },
      "date": 1716905754179
    },
    {
      "type": "add",
      "id": "1225a0edb355a2a7",
      "item": {
        "type": "paragraph",
        "id": "1225a0edb355a2a7",
        "text": "Of course this all depends on what the available blocks are programmed to do. I can imagine each release of the Mech plugin will offer new blocks that don't break this compact: be a team player. Perhaps other plugins will offer Mech compatible blocks that make their services and representations more useful. We will have to watch this supply-chain carefully to be sure all Mechs are to be trusted."
      },
      "after": "ee654465f8e55b79",
      "date": 1716905755943
    },
    {
      "item": {
        "type": "factory",
        "id": "9ad527add5225bef"
      },
      "id": "9ad527add5225bef",
      "type": "add",
      "after": "1225a0edb355a2a7",
      "date": 1716905915285
    },
    {
      "type": "edit",
      "id": "9ad527add5225bef",
      "item": {
        "type": "pagefold",
        "id": "9ad527add5225bef",
        "text": "."
      },
      "date": 1716905920059
    },
    {
      "id": "9ad527add5225bef",
      "type": "move",
      "order": [
        "b920c66dfdb61900",
        "3de585d4a4a754a4",
        "a2164eeae1b22308",
        "9ad527add5225bef",
        "c9ac54d3dea497e1",
        "3f0d1df9ae433308",
        "8c09d5ff336a6816",
        "ee654465f8e55b79",
        "1225a0edb355a2a7"
      ],
      "date": 1716905927315
    },
    {
      "type": "add",
      "id": "39bf0fb2886302de",
      "item": {
        "type": "paragraph",
        "id": "39bf0fb2886302de",
        "text": "See Ten Challenges for Making\nAutomation a “Team Player”\nin Joint Human-Agent Activity. "
      },
      "after": "a2164eeae1b22308",
      "date": 1716906175383
    },
    {
      "type": "edit",
      "id": "39bf0fb2886302de",
      "item": {
        "type": "paragraph",
        "id": "39bf0fb2886302de",
        "text": "See Ten Challenges for Making\nAutomation a “Team Player”\nin Joint Human-Agent Activity. [https://jeffreymbradshaw.net/publications/17._Team_Players.pdf_1.pdf pdf]"
      },
      "date": 1716906196589
    },
    {
      "type": "fork",
      "site": "found.ward.fed.wiki",
      "date": 1717078500800
    }
  ]
}