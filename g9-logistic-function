{
  "title": "G9 Logistic Function",
  "story": [
    {
      "type": "paragraph",
      "id": "950a0d5556e90ba0",
      "text": "The logistic curve is much more recognizable than its formula. [https://en.wikipedia.org/wiki/Logistic_function wikipedia] See [[G9 Demos]]"
    },
    {
      "type": "code",
      "id": "6c206e00fc8a6a51",
      "text": "const initialData = { k:1 }\nconst exp = Math.exp\n\nconst render = ({k}, c) => {\n  c.text('k = '+k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const f = x => 1 / (1 + exp(-k*3*x))\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
    },
    {
      "type": "frame",
      "id": "505c1fcc28f45ecf",
      "text": "//wiki.ralfbarkow.ch/assets/pages/g9-demos/run-g9.html\nHEIGHT 160"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "G9 Logistic Function",
        "story": []
      },
      "date": 1650415669139
    },
    {
      "item": {
        "type": "factory",
        "id": "950a0d5556e90ba0"
      },
      "id": "950a0d5556e90ba0",
      "type": "add",
      "date": 1650415797774
    },
    {
      "type": "edit",
      "id": "950a0d5556e90ba0",
      "item": {
        "type": "paragraph",
        "id": "950a0d5556e90ba0",
        "text": "The logistic function finds applications in a range of fields where the curve is much more recognizable than the formula."
      },
      "date": 1650415884817
    },
    {
      "type": "edit",
      "id": "950a0d5556e90ba0",
      "item": {
        "type": "paragraph",
        "id": "950a0d5556e90ba0",
        "text": "The logistic function finds applications in a range of fields where the curve is much more recognizable than the formula. [https://en.wikipedia.org/wiki/Logistic_function wikipedia]"
      },
      "date": 1650415905322
    },
    {
      "id": "6c206e00fc8a6a51",
      "type": "add",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { a:30, p:0 }\nconst sin = Math.sin\n\nconst render = ({a,p}, c) => {\n  c.text(p.toFixed(2),-120,-50)\n  for (let t=-100; t<100; t++) {\n    const fill = (t+100)%10<5?'black':'red'\n    c.point(2*t+p, a*sin(t/10), {fill})\n  }\n}         "
      },
      "after": "950a0d5556e90ba0",
      "date": 1650415911806
    },
    {
      "id": "505c1fcc28f45ecf",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "505c1fcc28f45ecf",
        "text": "http://ward.dojo.fed.wiki/assets/pages/g9-demos/run-g9.html\nHEIGHT 160"
      },
      "after": "6c206e00fc8a6a51",
      "date": 1650415915225
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\nconst sin = Math.sin\n\nconst render = ({a,p}, c) => {\n  c.text(p.toFixed(2),-120,-50)\n  for (let t=-100; t<100; t++) {\n    const fill = (t+100)%10<5?'black':'red'\n    c.point(2*t+p, a*sin(t/10), {fill})\n  }\n}         "
      },
      "date": 1650415987422
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(x, k*x), {fill})\n  }\n}         "
      },
      "date": 1650416111710
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(x, k*x, {fill})\n  }\n}         "
      },
      "date": 1650416149721
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(x, -k*x, {fill})\n  }\n}         "
      },
      "date": 1650416213901
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(1.5*x, -k*x, {fill})\n  }\n}         "
      },
      "date": 1650416244032
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -k*x, {fill})\n  }\n}         "
      },
      "date": 1650416277916
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, 10/(1+Math.exp(-k*x), {fill})\n  }\n}         "
      },
      "date": 1650416429542
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, 10/(1+Math.exp(-k*x)), {fill})\n  }\n}         "
      },
      "date": 1650416449343
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, 100/(1+Math.exp(-k*x)), {fill})\n  }\n}         "
      },
      "date": 1650416460168
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, 50/(1+Math.exp(-k*x)), {fill})\n  }\n}         "
      },
      "date": 1650416471278
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -50/(1+Math.exp(-k*x)), {fill})\n  }\n}         "
      },
      "date": 1650416513334
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -50/(1+Math.exp(-k*x/10)), {fill})\n  }\n}         "
      },
      "date": 1650416542083
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 50/(1+Math.exp(-k*x))\n    c.point(2*x, -f(x/20), {fill})\n  }\n}         "
      },
      "date": 1650416718096
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -50*f(x/20), {fill})\n  }\n}         "
      },
      "date": 1650416782270
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)-50, {fill})\n  }\n}         "
      },
      "date": 1650416799240
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)-100, {fill})\n  }\n}         "
      },
      "date": 1650416827195
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)-10, {fill})\n  }\n}         "
      },
      "date": 1650416837893
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)+10, {fill})\n  }\n}         "
      },
      "date": 1650416846975
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)+100, {fill})\n  }\n}         "
      },
      "date": 1650416857645
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*x))\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650416867976
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k/10*x))\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650416955562
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+Math.exp(-k*3*x))\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650416979764
    },
    {
      "type": "fork",
      "date": 1650417234624
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\nconst exp = Math.exp\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const fill = (x+100)%10<5?'black':'red'\n    const f = x => 1/(1+exp(-k*3*x))\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650417824560
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\nconst exp = Math.exp\n\nconst render = ({k}, c) => {\n  c.text(k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const f = x => 1 / (1 + exp(-k*3*x))\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650417915576
    },
    {
      "type": "edit",
      "id": "6c206e00fc8a6a51",
      "item": {
        "type": "code",
        "id": "6c206e00fc8a6a51",
        "text": "const initialData = { k:1 }\nconst exp = Math.exp\n\nconst render = ({k}, c) => {\n  c.text('k = '+k.toFixed(2),-120,-50)\n  for (let x=-100; x<100; x++) {\n    const f = x => 1 / (1 + exp(-k*3*x))\n    const fill = (x+100)%10<5?'black':'red'\n    c.point(2*x, -100*f(x/20)+50, {fill})\n  }\n}         "
      },
      "date": 1650417962748
    },
    {
      "type": "edit",
      "id": "950a0d5556e90ba0",
      "item": {
        "type": "paragraph",
        "id": "950a0d5556e90ba0",
        "text": "The logistic curve is much more recognizable than the formula. [https://en.wikipedia.org/wiki/Logistic_function wikipedia]"
      },
      "date": 1650419489653
    },
    {
      "type": "edit",
      "id": "950a0d5556e90ba0",
      "item": {
        "type": "paragraph",
        "id": "950a0d5556e90ba0",
        "text": "The logistic curve is much more recognizable than the formula that it represents. [https://en.wikipedia.org/wiki/Logistic_function wikipedia]"
      },
      "date": 1650419513815
    },
    {
      "type": "edit",
      "id": "950a0d5556e90ba0",
      "item": {
        "type": "paragraph",
        "id": "950a0d5556e90ba0",
        "text": "The logistic curve is much more recognizable than its formula. [https://en.wikipedia.org/wiki/Logistic_function wikipedia] See [[G9 Demos]]"
      },
      "date": 1650419563275
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1650437611027
    },
    {
      "type": "edit",
      "id": "505c1fcc28f45ecf",
      "item": {
        "type": "frame",
        "id": "505c1fcc28f45ecf",
        "text": "//wiki.ralfbarkow.ch/assets/pages/g9-demos/run-g9.html\nHEIGHT 160"
      },
      "date": 1650437629343
    }
  ]
}