{
  "title": "Reflective Capabilities",
  "story": [
    {
      "type": "paragraph",
      "id": "e70d704ce58c04ea",
      "text": "Since [[Smalltalk]] is so dynamic, everything occurs at run-time, including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes. (p. 10–11)"
    },
    {
      "type": "pagefold",
      "id": "4107d4d2b93b0065",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "e5e555326296477a",
      "text": "N. Bouraqadi, D. Mason, [[Test-Driven Development for Generated Portable Javascript Apps]], Sci. Comput. Program. (2018), https://doi.org/10.1016/j.scico.2018.02.003"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Reflective Capabilities",
        "story": []
      },
      "date": 1649784547383
    },
    {
      "item": {
        "type": "factory",
        "id": "e70d704ce58c04ea"
      },
      "id": "e70d704ce58c04ea",
      "type": "add",
      "date": 1649784553755
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since Smalltalk is so dynamic, everything occurs at run-time, including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4"
      },
      "date": 1649784554835
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since Smalltalk is so dynamic, everything occurs at run-time, including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes."
      },
      "date": 1649784565285
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since Smalltalk is so dynamic, everything occurs at [[run-time]], including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes."
      },
      "date": 1649784580644
    },
    {
      "id": "4107d4d2b93b0065",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "4107d4d2b93b0065",
        "text": "~"
      },
      "after": "e70d704ce58c04ea",
      "date": 1649784634659
    },
    {
      "id": "e5e555326296477a",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "e5e555326296477a",
        "text": "N. Bouraqadi, D. Mason, [[Test-Driven Development for Generated Portable Javascript Apps]], Sci. Comput. Program. (2018), https://doi.org/10.1016/j.scico.2018.02.003"
      },
      "after": "4107d4d2b93b0065",
      "date": 1649784638540
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since Smalltalk is so dynamic, everything occurs at [[run-time]], including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes. (p. 10–11)"
      },
      "date": 1649784664443
    },
    {
      "type": "fork",
      "date": 1649785052572
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since [[Smalltalk]] is so dynamic, everything occurs at [[run-time]], including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes. (p. 10–11)"
      },
      "date": 1701899519748
    },
    {
      "type": "edit",
      "id": "e70d704ce58c04ea",
      "item": {
        "type": "paragraph",
        "id": "e70d704ce58c04ea",
        "text": "Since [[Smalltalk]] is so dynamic, everything occurs at run-time, including programming. Because of this dynamicity and uniformity, it supports a set of advanced reflective capabilities that allows easy implementation of IDEs. For example, browsing the code can be achieved by introspection through a sequence of 4 messages: (1) send a message to the environment to get the list of packages; (2) send a message to a given package to get its classes; (3) send a message to a class to get the list of its methods; (4) send a message to a method to get its source code. Of course, the IDE uses these messages to support visual navigation of the code including built-in classes. (p. 10–11)"
      },
      "date": 1701899541825
    }
  ]
}