{
  "title": "addNode",
  "story": [
    {
      "type": "paragraph",
      "id": "f1c9ad6a8b268b0a",
      "text": "We learn about \"rules and recommendations for the naming of node labels, relationship types, property names, variables, indexes, and constraints\". [https://neo4j.com/docs/cypher-manual/current/syntax/naming/#symbolic-names-escaping-rules page]"
    },
    {
      "type": "markdown",
      "id": "89819497da780837",
      "text": "> Names should not begin with a number.\nTo illustrate, `1first` is not allowed, whereas `first1` is allowed."
    },
    {
      "type": "paragraph",
      "id": "2140803deea7948d",
      "text": "Within the [[Paragraph Recommendation Viewer]] searchGraph context, we understand that paragraph IDs should not be used as types because paragraph IDs could begin with a number, which is not allowed in [[Cypher]], and ask: Where do we create such nodes? See [[Speed Bot]] ([http://localhost:3000/assets/pages/parse-page-paragraphs/speed-bot.html speed-bot.html], addNode function)"
    },
    {
      "type": "code",
      "id": "7935f013fe274b63",
      "text": "function addNode(node, nodeProperties){\n  console.log(\"addNode reached\");\n\n  // Add the node to the graph\n    const newNodeId = graph.addNode(node, 0, 0, nodeProperties);\n    console.log(`Node \"${node}\" (${newNodeId}) added`);\n    serializeGraphAsJSONL(graph);\n    return newNodeId;\n}\n"
    },
    {
      "type": "paragraph",
      "id": "68f10d4f1904c831",
      "text": "We call"
    },
    {
      "type": "code",
      "id": "0cf8c3afb21cb01b",
      "text": "  addNode(type, props={}){\n    const obj = {type, in:[], out:[], props};\n    this.nodes.push(obj);\n    return this.nodes.length-1;\n  }"
    },
    {
      "type": "paragraph",
      "id": "5d3485a51f4e9a1e",
      "text": "defined in Ward's graph.js. See [[Property Graphs as Javascript Module]]"
    },
    {
      "type": "paragraph",
      "id": "ebd5acf8747c97a3",
      "text": "But, "
    },
    {
      "type": "markdown",
      "id": "ae5659fb24f435c5",
      "text": "> Nodes have \"labels\", not \"types\" (the latter term only applies to relationships)."
    },
    {
      "type": "paragraph",
      "id": "0b9c107d83b506f5",
      "text": "See \"How do I check the type of a node in cypher?\" [https://stackoverflow.com/questions/44835575/how-do-i-check-the-type-of-a-node-in-cypher#44835775 stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "dcf27a018691c0f7",
      "text": "See also Cypher documentation: the \"Node patterns\" [https://neo4j.com/docs/cypher-cheat-sheet/5/auradb-enterprise/#_node_patterns section] of the \"Cypher Cheat Sheet\" [https://neo4j.com/docs/cypher-cheat-sheet/5/auradb-enterprise page]"
    },
    {
      "type": "paragraph",
      "id": "f3d4a80dfb010df7",
      "text": "⇒ [[Basic Properties of the Property Graph Model]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "addNode",
        "story": []
      },
      "date": 1712592535812
    },
    {
      "id": "f1c9ad6a8b268b0a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f1c9ad6a8b268b0a",
        "text": "We learn about \"rules and recommendations for the naming of node labels, relationship types, property names, variables, indexes, and constraints\". [https://neo4j.com/docs/cypher-manual/current/syntax/naming/#symbolic-names-escaping-rules page]"
      },
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592538758
    },
    {
      "type": "fork",
      "date": 1712592555808
    },
    {
      "id": "89819497da780837",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "89819497da780837",
        "text": "> Names should not begin with a number.\nTo illustrate, `1first` is not allowed, whereas `first1` is allowed."
      },
      "after": "f1c9ad6a8b268b0a",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592568586
    },
    {
      "id": "2140803deea7948d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2140803deea7948d",
        "text": "Within the [[Paragraph Recommendation Viewer]] searchGraph context, we understand that paragraph IDs should not be used as types because paragraph IDs could begin with a number, which is not allowed in [[Cypher]], and ask: Where do we create such nodes? See [[Speed Bot]] ([http://localhost:3000/assets/pages/parse-page-paragraphs/speed-bot.html speed-bot.html], addNode function)"
      },
      "after": "89819497da780837",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592572064
    },
    {
      "id": "7935f013fe274b63",
      "type": "add",
      "item": {
        "type": "code",
        "id": "7935f013fe274b63",
        "text": "function addNode(node, nodeProperties){\n  console.log(\"addNode reached\");\n\n  // Add the node to the graph\n    const newNodeId = graph.addNode(node, 0, 0, nodeProperties);\n    console.log(`Node \"${node}\" (${newNodeId}) added`);\n    serializeGraphAsJSONL(graph);\n    return newNodeId;\n}\n"
      },
      "after": "2140803deea7948d",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592575356
    },
    {
      "id": "68f10d4f1904c831",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "68f10d4f1904c831",
        "text": "We call"
      },
      "after": "7935f013fe274b63",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592580895
    },
    {
      "id": "0cf8c3afb21cb01b",
      "type": "add",
      "item": {
        "type": "code",
        "id": "0cf8c3afb21cb01b",
        "text": "  addNode(type, props={}){\n    const obj = {type, in:[], out:[], props};\n    this.nodes.push(obj);\n    return this.nodes.length-1;\n  }"
      },
      "after": "68f10d4f1904c831",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592584796
    },
    {
      "id": "5d3485a51f4e9a1e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "5d3485a51f4e9a1e",
        "text": "defined in Ward's graph.js. See [[Property Graphs as Javascript Module]]"
      },
      "after": "0cf8c3afb21cb01b",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592588599
    },
    {
      "id": "ebd5acf8747c97a3",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ebd5acf8747c97a3",
        "text": "But, "
      },
      "after": "5d3485a51f4e9a1e",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592596022
    },
    {
      "type": "fork",
      "date": 1712592619808
    },
    {
      "id": "ae5659fb24f435c5",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ae5659fb24f435c5",
        "text": "> Nodes have \"labels\", not \"types\" (the latter term only applies to relationships)."
      },
      "after": "ebd5acf8747c97a3",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592637543
    },
    {
      "id": "0b9c107d83b506f5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0b9c107d83b506f5",
        "text": "See \"How do I check the type of a node in cypher?\" [https://stackoverflow.com/questions/44835575/how-do-i-check-the-type-of-a-node-in-cypher#44835775 stackoverflow]"
      },
      "after": "ae5659fb24f435c5",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592640474
    },
    {
      "id": "dcf27a018691c0f7",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dcf27a018691c0f7",
        "text": "See also Cypher documentation: the \"Node patterns\" [https://neo4j.com/docs/cypher-cheat-sheet/5/auradb-enterprise/#_node_patterns section] of the \"Cypher Cheat Sheet\" [https://neo4j.com/docs/cypher-cheat-sheet/5/auradb-enterprise page]"
      },
      "after": "0b9c107d83b506f5",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592643281
    },
    {
      "id": "f3d4a80dfb010df7",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f3d4a80dfb010df7",
        "text": "⇒ [[Basic Properties of the Property Graph Model]]"
      },
      "after": "dcf27a018691c0f7",
      "attribution": {
        "page": "addNote",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1712592647034
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1712592720419
    }
  ]
}