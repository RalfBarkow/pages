{
  "title": "BitcoinTracker",
  "story": [
    {
      "type": "paragraph",
      "id": "89a4a318df6d5073",
      "text": "Actually you cannot subclass a [[Behavior]] from another Behavior; IOW, you cannot use \"extends\" to define a behavior. The main thing is that a behavior definition needs to be serializable, and when deserialized it needs to come back as the exact same \"thing\" so it cannot have any free variables, including the superclass object (at least for now.)"
    },
    {
      "type": "paragraph",
      "id": "262db29e43176fcd",
      "text": "An example is the Elected behavior module, that provides a way to choose one participant as the leader. In the default world, the BitcoinTracker and the [[FlightTracker]] uses it."
    },
    {
      "type": "pagefold",
      "id": "e8e81f77d600c08d",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "2421bf7caa8d907e",
      "text": "yoshiki — [https://discord.com/channels/694586717247635488/968615641248571422/973292894960091196 discord]"
    },
    {
      "type": "reference",
      "id": "43fc7f7789c3a40c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "deck-of-cards",
      "title": "Deck of Cards",
      "text": "I represent a deck of cards."
    },
    {
      "type": "reference",
      "id": "2958759359355bde",
      "site": "wiki.ralfbarkow.ch",
      "slug": "display-scene-tree",
      "title": "Display-Scene Tree",
      "text": "A [[Croquet Microverse]] world is \"nothing but\" a [[Deck of Cards]], into which we could \"add\" another deck of cards by \"Load\" and later \"Save\" the resulting new deck. [https://discord.com/channels/694586717247635488/965416258499653642/975139926565875752 discord]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "BitcoinTracker",
        "story": []
      },
      "date": 1669900417825
    },
    {
      "item": {
        "type": "factory",
        "id": "89a4a318df6d5073"
      },
      "id": "89a4a318df6d5073",
      "type": "add",
      "date": 1669900435068
    },
    {
      "type": "edit",
      "id": "89a4a318df6d5073",
      "item": {
        "type": "paragraph",
        "id": "89a4a318df6d5073",
        "text": "Actually you cannot subclass a Behavior from another Behavior; IOW, you cannot use \"extends\" to define a behavior. The main thing is that a behavior definition needs to be serializable, and when deserialized it needs to come back as the exact same \"thing\" so it cannot have any free variables, including the superclass object (at least for now.)"
      },
      "date": 1669900440253
    },
    {
      "item": {
        "type": "factory",
        "id": "262db29e43176fcd"
      },
      "id": "262db29e43176fcd",
      "type": "add",
      "after": "89a4a318df6d5073",
      "date": 1669900445077
    },
    {
      "type": "edit",
      "id": "262db29e43176fcd",
      "item": {
        "type": "paragraph",
        "id": "262db29e43176fcd",
        "text": "An example is the Elected behavior module, that provides a way to choose one participant as the leader. In the default world, the BitcoinTracker and the FlightTracker uses it."
      },
      "date": 1669900448703
    },
    {
      "item": {
        "type": "factory",
        "id": "e8e81f77d600c08d"
      },
      "id": "e8e81f77d600c08d",
      "type": "add",
      "after": "262db29e43176fcd",
      "date": 1669900453989
    },
    {
      "type": "edit",
      "id": "e8e81f77d600c08d",
      "item": {
        "type": "pagefold",
        "id": "e8e81f77d600c08d",
        "text": "~"
      },
      "date": 1669900456660
    },
    {
      "item": {
        "type": "factory",
        "id": "2421bf7caa8d907e"
      },
      "id": "2421bf7caa8d907e",
      "type": "add",
      "after": "e8e81f77d600c08d",
      "date": 1669900458747
    },
    {
      "type": "edit",
      "id": "2421bf7caa8d907e",
      "item": {
        "type": "paragraph",
        "id": "2421bf7caa8d907e",
        "text": "yoshiki — 09.05.2022 20:38"
      },
      "date": 1669900462438
    },
    {
      "type": "edit",
      "id": "2421bf7caa8d907e",
      "item": {
        "type": "paragraph",
        "id": "2421bf7caa8d907e",
        "text": "yoshiki — [https://discord.com/channels/694586717247635488/968615641248571422/973292894960091196 discord]"
      },
      "date": 1669900483007
    },
    {
      "type": "edit",
      "id": "89a4a318df6d5073",
      "item": {
        "type": "paragraph",
        "id": "89a4a318df6d5073",
        "text": "Actually you cannot subclass a [[Behavior]] from another Behavior; IOW, you cannot use \"extends\" to define a behavior. The main thing is that a behavior definition needs to be serializable, and when deserialized it needs to come back as the exact same \"thing\" so it cannot have any free variables, including the superclass object (at least for now.)"
      },
      "date": 1669900516905
    },
    {
      "item": {
        "type": "factory",
        "id": "43fc7f7789c3a40c"
      },
      "id": "43fc7f7789c3a40c",
      "type": "add",
      "after": "2421bf7caa8d907e",
      "date": 1669903138543
    },
    {
      "type": "edit",
      "id": "43fc7f7789c3a40c",
      "item": {
        "type": "reference",
        "id": "43fc7f7789c3a40c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "deck-of-cards",
        "title": "Deck of Cards",
        "text": "I represent a deck of cards."
      },
      "date": 1669903141369
    },
    {
      "item": {
        "type": "factory",
        "id": "2958759359355bde"
      },
      "id": "2958759359355bde",
      "type": "add",
      "after": "43fc7f7789c3a40c",
      "date": 1669903288750
    },
    {
      "type": "edit",
      "id": "2958759359355bde",
      "item": {
        "type": "reference",
        "id": "2958759359355bde",
        "site": "wiki.ralfbarkow.ch",
        "slug": "display-scene-tree",
        "title": "Display-Scene Tree",
        "text": "A [[Croquet Microverse]] world is \"nothing but\" a [[Deck of Cards]], into which we could \"add\" another deck of cards by \"Load\" and later \"Save\" the resulting new deck. [https://discord.com/channels/694586717247635488/965416258499653642/975139926565875752 discord]"
      },
      "date": 1669903291638
    },
    {
      "type": "edit",
      "id": "262db29e43176fcd",
      "item": {
        "type": "paragraph",
        "id": "262db29e43176fcd",
        "text": "An example is the Elected behavior module, that provides a way to choose one participant as the leader. In the default world, the BitcoinTracker and the [[FlightTracker]] uses it."
      },
      "date": 1669908925563
    }
  ]
}