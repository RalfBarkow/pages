{
  "title": "Program (Programm)",
  "story": [
    {
      "type": "markdown",
      "id": "febd7672fb38bfd9",
      "text": "Programs are generally defined as complexes of conditions of correctness. Programs provide criteria for the correct attribution of the →[[code]]’s values, so that a system oriented towards them [→[[Differentiation of Society]]] can reach structured complexity and control its own processes.\n"
    },
    {
      "type": "markdown",
      "id": "a37067a53a258e1c",
      "text": "In an autopoietic system [→[[Autopoiesis]]] differentiated through a binary code, the code guides the unity of operations reproducing the system: it regulates the production of differences, through which it also regulates the system’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for operations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for instance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and procedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For instance, the programs of the education system determine the criteria for the selection of the pupils.\n"
    },
    {
      "type": "markdown",
      "id": "99995fca5b3582cb",
      "text": "Programs compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account political opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the results. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as political opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\n\n"
    },
    {
      "type": "markdown",
      "id": "33a984705ec59f19",
      "text": "Programs re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/untrue, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never generates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\n"
    },
    {
      "type": "markdown",
      "id": "7441b4a97507fa50",
      "text": "As the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→[[Operation/Observation]]], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\n"
    },
    {
      "type": "markdown",
      "id": "0a4d5763055f5f8c",
      "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals regards the reference of the correctness of behaviors to the realization of particular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.] – ([[Unlocking Luhmann]], p 181–183)\n\n"
    },
    {
      "type": "markdown",
      "id": "3567896c9aa994d1",
      "text": "Social Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Program (Programm)",
        "story": []
      },
      "date": 1628378008079
    },
    {
      "item": {
        "type": "factory",
        "id": "febd7672fb38bfd9"
      },
      "id": "febd7672fb38bfd9",
      "type": "add",
      "date": 1628378014746
    },
    {
      "type": "edit",
      "id": "febd7672fb38bfd9",
      "item": {
        "type": "markdown",
        "id": "febd7672fb38bfd9",
        "text": "Programs are generally defined as complexes of conditions of correctness. Programs provide criteria for the correct attribution of the →code’s values, so that a system oriented towards them [→Differentiation of Society] can reach structured complexity and control its own processes.\nIn an autopoietic system [→Autopoiesis] differentiated through a binary code, the code guides the unity of operations reproducing the system: it reg- ulates the production of differences, through which it also regulates the sys- tem’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for oper- ations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for in- stance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and pro- cedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For in- stance, the programs of the education system determine the criteria for the selection of the pupils.\nPrograms compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account po- litical opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep"
      },
      "date": 1628378029264
    },
    {
      "type": "edit",
      "id": "febd7672fb38bfd9",
      "item": {
        "type": "markdown",
        "id": "febd7672fb38bfd9",
        "text": "Programs are generally defined as complexes of conditions of correctness. Programs provide criteria for the correct attribution of the →code’s values, so that a system oriented towards them [→Differentiation of Society] can reach structured complexity and control its own processes.\n"
      },
      "date": 1628378042379
    },
    {
      "type": "add",
      "id": "a37067a53a258e1c",
      "item": {
        "type": "markdown",
        "id": "a37067a53a258e1c",
        "text": "In an autopoietic system [→Autopoiesis] differentiated through a binary code, the code guides the unity of operations reproducing the system: it reg- ulates the production of differences, through which it also regulates the sys- tem’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for oper- ations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for in- stance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and pro- cedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For in- stance, the programs of the education system determine the criteria for the selection of the pupils.\nPrograms compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account po- litical opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the re- sults. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as polit- ical opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\nPrograms re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/un- true, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\nAs the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\nIf we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The"
      },
      "after": "febd7672fb38bfd9",
      "date": 1628378049708
    },
    {
      "type": "edit",
      "id": "a37067a53a258e1c",
      "item": {
        "type": "markdown",
        "id": "a37067a53a258e1c",
        "text": "In an autopoietic system [→Autopoiesis] differentiated through a binary code, the code guides the unity of operations reproducing the system: it reg- ulates the production of differences, through which it also regulates the sys- tem’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for oper- ations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for in- stance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and pro- cedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For in- stance, the programs of the education system determine the criteria for the selection of the pupils.\nPrograms compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account po- litical opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the re- sults. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as polit- ical opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\nPrograms re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/un- true, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\nAs the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\nIf we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "date": 1628378064568
    },
    {
      "type": "edit",
      "id": "febd7672fb38bfd9",
      "item": {
        "type": "markdown",
        "id": "febd7672fb38bfd9",
        "text": "Programs are generally defined as complexes of conditions of correctness. Programs provide criteria for the correct attribution of the →[[code]]’s values, so that a system oriented towards them [→[[Differentiation of Society]]] can reach structured complexity and control its own processes.\n"
      },
      "date": 1628378100656
    },
    {
      "type": "edit",
      "id": "a37067a53a258e1c",
      "item": {
        "type": "markdown",
        "id": "a37067a53a258e1c",
        "text": "In an autopoietic system [→[[Autopoiesis]]] differentiated through a binary code, the code guides the unity of operations reproducing the system: it regulates the production of differences, through which it also regulates the system’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for oper- ations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for in- stance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and pro- cedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For in- stance, the programs of the education system determine the criteria for the selection of the pupils.\n"
      },
      "date": 1628378136328
    },
    {
      "type": "add",
      "id": "99995fca5b3582cb",
      "item": {
        "type": "markdown",
        "id": "99995fca5b3582cb",
        "text": "Programs compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account po- litical opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the re- sults. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as polit- ical opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\nPrograms re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/un- true, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\nAs the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\nIf we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "after": "a37067a53a258e1c",
      "date": 1628378154676
    },
    {
      "type": "edit",
      "id": "a37067a53a258e1c",
      "item": {
        "type": "markdown",
        "id": "a37067a53a258e1c",
        "text": "In an autopoietic system [→[[Autopoiesis]]] differentiated through a binary code, the code guides the unity of operations reproducing the system: it regulates the production of differences, through which it also regulates the system’s information processing. Operations always run blind and, at the level of operations, the system has no control over its own processes. The code does not provide instructions for action; it provides only the orientation for operations, securing the connection to following operations. Self-regulation and self-control of the system happen at the level of programs, which guide the observation of the operations by the system itself (based on other distinctions than the ones orienting those operations). Programs determine the conditions necessary for the realizability of a certain operation. They determine, for instance, that attributing the positive value of the code is only correct under particular conditions. Hence the programs of the legal system (laws and procedures) determine which of the parties can be correctly claimed to be right and which to be wrong, and what must be taken into account in this decision. The programs of science (theories and methods) determine which conditions must be fulfilled in order to be able to claim that something is true. For instance, the programs of the education system determine the criteria for the selection of the pupils.\n"
      },
      "date": 1628378190374
    },
    {
      "type": "edit",
      "id": "99995fca5b3582cb",
      "item": {
        "type": "markdown",
        "id": "99995fca5b3582cb",
        "text": "Programs compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account po- litical opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the re- sults. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as polit- ical opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\n\n"
      },
      "date": 1628378265883
    },
    {
      "type": "add",
      "id": "33a984705ec59f19",
      "item": {
        "type": "markdown",
        "id": "33a984705ec59f19",
        "text": "Programs re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/un- true, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\nAs the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\nIf we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "after": "99995fca5b3582cb",
      "date": 1628378269522
    },
    {
      "type": "edit",
      "id": "99995fca5b3582cb",
      "item": {
        "type": "markdown",
        "id": "99995fca5b3582cb",
        "text": "Programs compensate for the strict binarity of the code, which permits only two values to be considered, by introducing in the decision criteria that are foreign to the system. The programs of science can take into account political opportunity or research costs—even when the operations of the system are ultimately led only by the distinction true/untrue. One can therefore keep an eye on the available financial resources or on particular interests when programing research, but these influences cannot affect the truth of the results. This truth is not a political or economic fact, but is always dependent on the scientific code. As such, criteria external to the system, such as political opportunity or costs, in no way determine the production of knowledge: they can, however, limit research and influence the implementation of the programs.\n\n"
      },
      "date": 1628378285302
    },
    {
      "type": "edit",
      "id": "33a984705ec59f19",
      "item": {
        "type": "markdown",
        "id": "33a984705ec59f19",
        "text": "Programs re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/un- true, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\n"
      },
      "date": 1628378332234
    },
    {
      "type": "add",
      "id": "7441b4a97507fa50",
      "item": {
        "type": "markdown",
        "id": "7441b4a97507fa50",
        "text": "As the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\nIf we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "after": "33a984705ec59f19",
      "date": 1628378350800
    },
    {
      "type": "edit",
      "id": "33a984705ec59f19",
      "item": {
        "type": "markdown",
        "id": "33a984705ec59f19",
        "text": "Programs re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/untrue, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never gener- ates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\n"
      },
      "date": 1628378361995
    },
    {
      "type": "edit",
      "id": "33a984705ec59f19",
      "item": {
        "type": "markdown",
        "id": "33a984705ec59f19",
        "text": "Programs re-introduce the third value excluded by the binary code into the system that orients itself to the code. In this way, the rigidity of the code is mitigated. Even if the system orients itself only to its code (e.g., true/untrue, legal/illegal), at the level of programs it takes criteria into account that are valid in other systems. Even though, for instance, science never generates its truths in accordance with beauty or economic factors, it can attempt to make its truths compatible with these priorities. Based on the “foreign” criteria introduced by the programs, binary-coded systems can get enough distance from their operations to observe them and direct their own course. They are thus able to increase and structure their complexity.\n"
      },
      "date": 1628378384448
    },
    {
      "type": "edit",
      "id": "7441b4a97507fa50",
      "item": {
        "type": "markdown",
        "id": "7441b4a97507fa50",
        "text": "As the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→Operation/Observation], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\n"
      },
      "date": 1628378431378
    },
    {
      "type": "add",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify con- nections between expectations [→Identity/Difference]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "after": "7441b4a97507fa50",
      "date": 1628378433845
    },
    {
      "type": "edit",
      "id": "7441b4a97507fa50",
      "item": {
        "type": "markdown",
        "id": "7441b4a97507fa50",
        "text": "As the self-observation of a system always requires the continuation of autopoiesis (of the operations) [→[[Operation/Observation]]], programming always requires orientation to a code. Through the code, the system differentiates itself as a unity from the environment, and none of the system operations can take place independently of the code. Only on the basis of the differentiation and functioning of the code can programming take criteria foreign to the system into account—and programs of course always refer to each system’s respective code. If one is no longer able to distinguish between truth and property or between truth and beauty, one cannot set criteria for attributing truth. While the code can never be changed, programs can change on the basis of the operations of the system: in science, for instance, theories and methods can change, albeit always on the basis of the code true/untrue. Opening the system at the level of programs requires closure at the level of coding, whilst reaching a certain level of complexity in the system requires programming.\n"
      },
      "date": 1628378442190
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\nProgram (Programm) 183\nSocial Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "date": 1628378510433
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals re- gards the reference of the correctness of behaviors to the realization of partic- ular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\n\n"
      },
      "date": 1628378564640
    },
    {
      "type": "add",
      "id": "3567896c9aa994d1",
      "item": {
        "type": "markdown",
        "id": "3567896c9aa994d1",
        "text": "Social Systems (1995: 317-319); Codierung und Programmierung: Bildung und Selektion im Erziehungssystem (1986); Die Wissenschaft der Gesellschaft (1990: 197 ff., 401 ff.); Einführung in die Theorie der Gesellschaft (2005: Ch. 4.11)."
      },
      "after": "0a4d5763055f5f8c",
      "date": 1628378570143
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals regards the reference of the correctness of behaviors to the realization of particular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.]\n\n"
      },
      "date": 1628378581466
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals regards the reference of the correctness of behaviors to the realization of particular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.] – ([[Unlocking Luhmann]], p 27–30)\n\n"
      },
      "date": 1628378613156
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals regards the reference of the correctness of behaviors to the realization of particular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.] – ([[Unlocking Luhmann]], p 27–183)\n\n"
      },
      "date": 1628378624152
    },
    {
      "type": "edit",
      "id": "0a4d5763055f5f8c",
      "item": {
        "type": "markdown",
        "id": "0a4d5763055f5f8c",
        "text": "If we look at the correctness of behavior instead of the attribution of code values, programs are specific points of reference that serve to identify connections between expectations [→[[Identity/Difference]]]. For instance, a surgical intervention is a program that coordinates the behavior of various people and means that a particular behavior, exhibited by each person in each moment and coordinated with the others, can be expected. The program determines which behavior must be deemed correct and is therefore to be expected. The distinction between conditional programming and programming by goals regards the reference of the correctness of behaviors to the realization of particular conditions (when a specific state occurs, then a particular behavior must be realized) or to the desired consequences. [E.E.] – ([[Unlocking Luhmann]], p 181–183)\n\n"
      },
      "date": 1628378643450
    }
  ]
}