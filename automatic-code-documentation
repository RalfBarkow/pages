{
  "title": "Automatic Code Documentation",
  "story": [
    {
      "type": "paragraph",
      "id": "944337967d049bb9",
      "text": "PROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT. [https://www.researchgate.net/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/link/65afde756c7ad06ab42605f4/download?_tp=eyJjb250ZXh0Ijp7InBhZ2UiOiJwdWJsaWNhdGlvbiIsInByZXZpb3VzUGFnZSI6bnVsbH19 page] [Accessed 18 February 2024]. \n"
    },
    {
      "type": "paragraph",
      "id": "dc146e445ead0445",
      "text": "Context: The explicit documentation of written software has historically been a common task within the software development life cycle, providing developers, users and other stakeholders with human-readable artifacts alongside code. Code documentation is a tedious process plagued by a host of issues, most notably that of documentation debt, which can occur when code is modified and its documentation no longer reflects it. With the recent advancement of large language models (LLMs), e.g., OpenAI’s GPT-3.5 and GPT-4, many common software development processes are being assisted by LLMs. For instance, GPT is used frequently by software developers as a know-it-all software consultant."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Automatic Code Documentation",
        "story": []
      },
      "date": 1708286266569
    },
    {
      "type": "edit",
      "id": "944337967d049bb9",
      "item": {
        "type": "paragraph",
        "id": "944337967d049bb9",
        "text": "\nPROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT. . Online. Available from: https://www.researchgate.net/profile/Tyler_Procko/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/links/65afde756c7ad06ab42605f4/Automatic-Code-Documentation-with-Syntax-Trees-and-GPT-Alleviating-Software-Developments-Most-Redundant-Task.pdf [Accessed 18 February 2024]. \n"
      },
      "date": 1708286272457
    },
    {
      "type": "edit",
      "id": "944337967d049bb9",
      "item": {
        "type": "paragraph",
        "id": "944337967d049bb9",
        "text": "PROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT.  [https://www.researchgate.net/profile/Tyler_Procko/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/links/65afde756c7ad06ab42605f4/Automatic-Code-Documentation-with-Syntax-Trees-and-GPT-Alleviating-Software-Developments-Most-Redundant-Task.pdf pdf][Accessed 18 February 2024]. \n"
      },
      "date": 1708286303552
    },
    {
      "type": "edit",
      "id": "944337967d049bb9",
      "item": {
        "type": "paragraph",
        "id": "944337967d049bb9",
        "text": "PROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT.  [https://www.researchgate.net/profile/Tyler_Procko/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/links/65afde756c7ad06ab42605f4/Automatic-Code-Documentation-with-Syntax-Trees-and-GPT-Alleviating-Software-Developments-Most-Redundant-Task.pdf pdf] [Accessed 18 February 2024]. \n"
      },
      "date": 1708286308889
    },
    {
      "type": "edit",
      "id": "944337967d049bb9",
      "item": {
        "type": "paragraph",
        "id": "944337967d049bb9",
        "text": "PROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT. [https://www.researchgate.net/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/link/65afde756c7ad06ab42605f4/download?_tp=eyJjb250ZXh0Ijp7InBhZ2UiOiJwdWJsaWNhdGlvbiIsInByZXZpb3VzUGFnZSI6bnVsbH19 pdf] [Accessed 18 February 2024]. \n"
      },
      "date": 1708286341084
    },
    {
      "type": "edit",
      "id": "944337967d049bb9",
      "item": {
        "type": "paragraph",
        "id": "944337967d049bb9",
        "text": "PROCKO, Tyler Thomas and COLLINS, Steve, [no date]. Automatic Code Documentation with Syntax Trees and GPT. [https://www.researchgate.net/publication/373911060_Automatic_Code_Documentation_with_Syntax_Trees_and_GPT_Alleviating_Software_Development's_Most_Redundant_Task/link/65afde756c7ad06ab42605f4/download?_tp=eyJjb250ZXh0Ijp7InBhZ2UiOiJwdWJsaWNhdGlvbiIsInByZXZpb3VzUGFnZSI6bnVsbH19 page] [Accessed 18 February 2024]. \n"
      },
      "date": 1708286357891
    },
    {
      "type": "fork",
      "date": 1708286455375
    },
    {
      "item": {
        "type": "factory",
        "id": "dc146e445ead0445"
      },
      "id": "dc146e445ead0445",
      "type": "add",
      "after": "944337967d049bb9",
      "date": 1708286564064
    },
    {
      "type": "edit",
      "id": "dc146e445ead0445",
      "item": {
        "type": "paragraph",
        "id": "dc146e445ead0445",
        "text": "Context: The explicit documentation of written software has historically been a common task within the software development life cycle, providing developers, users and other stakeholders with human-readable artifacts alongside code. Code documentation is a tedious process plagued by a host of issues, most notably that of documentation debt, which can occur when code is modified and its documentation no longer reflects it. With the recent advancement of large language models (LLMs), e.g., OpenAI’s GPT-3.5 and GPT-4, many common software development"
      },
      "date": 1708286565744
    },
    {
      "type": "edit",
      "id": "dc146e445ead0445",
      "item": {
        "type": "paragraph",
        "id": "dc146e445ead0445",
        "text": "Context: The explicit documentation of written software has historically been a common task within the software development life cycle, providing developers, users and other stakeholders with human-readable artifacts alongside code. Code documentation is a tedious process plagued by a host of issues, most notably that of documentation debt, which can occur when code is modified and its documentation no longer reflects it. With the recent advancement of large language models (LLMs), e.g., OpenAI’s GPT-3.5 and GPT-4, many common software development processes are being assisted by LLMs. For instance, GPT is used frequently by software developers as a know-it-all software consultant."
      },
      "date": 1708286601152
    }
  ]
}