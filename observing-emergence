{
  "title": "Observing Emergence",
  "story": [
    {
      "type": "paragraph",
      "id": "538db1c9de0cba4b",
      "text": "Ward Cunningham found a way of watching large software developments that recalls Domain Driven Design's Context Map. Here we collect insights about exploring complex systems and tools that lend themselves to continually re-calibrating the model as the business grows. He re-examines original c2 wiki, recent (as of 2017) work on El Dorado for New Relic, and federated wiki. [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]"
    },
    {
      "type": "video",
      "id": "1f8171e9286c1465",
      "text": "YOUTUBE oPJIXPC_vn8\nWard Cunningham, Observation of Emergent Schema in Organized Development, Explore DDD 2017 [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]\n"
    },
    {
      "type": "paragraph",
      "id": "3e51ae821d6138ff",
      "text": "Abstract from [[Explore DDD 2017]]"
    },
    {
      "type": "paragraph",
      "id": "6ce1b5edf736a6d4",
      "text": "The original wiki was founded to understand engineering at a social level, first within one company and then more broadly around the world. We asked not for advice but for personal experience, what parts worked and why."
    },
    {
      "type": "paragraph",
      "id": "66f575fb288be485",
      "text": "The agile methods incubated in wiki have enabled a pace and scale of development unimaginable at its founding. Now, situated within rapid development, we have found a new way to observe and understand software and the people who make it."
    },
    {
      "type": "paragraph",
      "id": "dc4cc50301b28dc7",
      "text": "In this keynote we describe our methods, similar to data warehousing, but with the same interests as the original wiki. Our system captures from existing data a broad picture of what has been built and puts this in service of its continuing evolution."
    },
    {
      "type": "pagefold",
      "id": "b130f2948ff35900",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "1c4840f72676592e",
      "text": "Eric Evans reflects on the impact Ward had on the Data Driven Design book. \"He was sort of a proto-DDDer.\" Ward had suggested putting tactical patterns into an appendix to bring clearer focus on the essential patterns. Eric defends the presence of tactical patterns to ensure the book staked a claim to concrete and practical concerns."
    },
    {
      "type": "paragraph",
      "id": "4919896c992be58c",
      "text": "We're going to watch connections change."
    },
    {
      "type": "paragraph",
      "id": "300328b0dba8906c",
      "text": "Sometimes you don't know what you're going to get until you look."
    },
    {
      "type": "paragraph",
      "id": "865d23183199801c",
      "text": "Three examples of computing. A gesture that presents completely different paradigms of computation. University lab full of keypunch consoles. Kids gathered around a Xerox Alto running Smalltalk. And an airconditioned datacenter full of 19\" cabinets."
    },
    {
      "type": "paragraph",
      "id": "b7a00c50ae2c4e9a",
      "text": "How are we gonna live in this new world of computing?"
    },
    {
      "type": "paragraph",
      "id": "007b3585acd1a81f",
      "text": "This tool, El Dorado, enables exploration of changing relationships in a complex microservices architecture. This resembles how the original c2 wiki enabled a community to explore each others experience learning how to program with objects and pattern languages. In particular, the tool exposes the markup used to query the database and to draw the diagrams. [https://wiki.c2.com c2]"
    },
    {
      "type": "paragraph",
      "id": "16e52545c06caed2",
      "text": "Context. New Relic R&D went through a transformation into 40 or 50 autonomous teams each with at least a developer, a UI expert, a big data expert, and so on. Internally teams would work any way they liked. One rule though. If one team was going to depend on another team, it had to be self-service. No one could put work on another team's to-do list."
    },
    {
      "type": "paragraph",
      "id": "6a6c3f4f94e741ca",
      "text": "Ward asked himself, \"What could possibly go wrong?\" Teams are going to create lots of different services. How are we going to be able to manage the deprecation over time? Can we even count the number of services? That turned out to be hard."
    },
    {
      "type": "paragraph",
      "id": "c62fb12033821b0e",
      "text": "It got easier with a prototype that used neo4j to graph the relationships."
    },
    {
      "type": "paragraph",
      "id": "8041d60b7564f708",
      "text": "Sometimes you care more about how the things are connected than what the things are. [https://youtu.be/oPJIXPC_vn8?t=1160 19m20s]"
    },
    {
      "type": "paragraph",
      "id": "c29af3ca300130f0",
      "text": "You can click the arrows to discover those connections. Here's an example where two systems connected to each other, and that's the kafka topic that they're talking over in a stream of data."
    },
    {
      "type": "paragraph",
      "id": "2687bd0ed36ed67d",
      "text": "What's neat about it is that I made a small diagram that meant something that could have been written on any whiteboard by any team member and they'd recognize it."
    },
    {
      "type": "paragraph",
      "id": "a5003deed416ca0b",
      "text": "It is a kind of structure warehouse. It uses an ETL process to gather metadata from 20 different sources, as of 2017, and loads that into the graph database."
    },
    {
      "type": "paragraph",
      "id": "746186f925f564e7",
      "text": "The web-based UI allows editing of the cypher query that is sent to the database and editing of the graphviz instructions for drawing the returned table of data. This enables a closed loop where people viewing these things can tamper with them to discover better ways to look at the structure."
    },
    {
      "type": "paragraph",
      "id": "54382f00b6ab62ad",
      "text": "When I showed it to Eric Evans last summer he said that's a context map and the bounded context. Here I was discovering what Eric had forecast 14 years ago. [https://youtu.be/oPJIXPC_vn8?t=1304 21m44s]"
    },
    {
      "type": "paragraph",
      "id": "92e362016fb2fd69",
      "text": "The nodes are the domain objects. The capitalized words are relationships between them. And the faint dotted lines in the lowercase is what file or database I read to learn that relationship. [https://youtu.be/oPJIXPC_vn8?t=1381 23m01s]"
    },
    {
      "type": "paragraph",
      "id": "c9b7311cb9baa733",
      "text": "I didn't say how to organize the graph. In trying to place these nodes and route the edges, graphviz surfaced a nice diagram of our company. Here's the product planning. This is the management structure with the teams. Connecting to teams we have how we develop software. And down here, with a little overlap, is how we deploy software."
    },
    {
      "type": "paragraph",
      "id": "270bd2787157c911",
      "text": "I also have a drill down because it's too big to look at."
    },
    {
      "type": "paragraph",
      "id": "5bde0bd34abf7177",
      "text": "I should have called this \"employee\" instead of \"person\" because here I have a former employee, not a former person."
    },
    {
      "type": "paragraph",
      "id": "96e197ac04c56218",
      "text": "All these dotted lines show how many of our sources  talk about teams. Oh, and you know, they don't actually punctuate or captalize the names the same way in any of them, so I apply a half-a-dozen heuristics to get those keys to match up. [https://youtu.be/oPJIXPC_vn8?t=1616 26m56s]"
    },
    {
      "type": "paragraph",
      "id": "9cf96c4c9ed0556a",
      "text": "One thing that turned out to be important was to tabulate how many heuristics had to be applied to make any connection. I can write queries to show me what heuristics got applied today and show me the examples of what came out. That's how I check my work. Just throw all of that data into the graph database and write some queries. Service is another major connector and there are 8 sources that are combined help us understand how our services are connected. [https://youtu.be/oPJIXPC_vn8?t=1641 27m21s]"
    },
    {
      "type": "paragraph",
      "id": "4f65bcd25abd7682",
      "text": "Architects query the system and develop meaningful queries and diagrams. I can save those diagrams into our collection of canned queries and include them in the test suite to ensure we keep those queries working as new sources are folded into the system and change the structure."
    },
    {
      "type": "paragraph",
      "id": "dccfbabf23243f54",
      "text": "The content-editable part is YAML with two fields: one for the cypher query, the other for dot to send to graphviz. The labels in the cypher query can be used as placeholders in the dot."
    },
    {
      "type": "paragraph",
      "id": "30c6f84b312f4d1c",
      "text": "This is probably our most advanced query because it is the hardest one to make a very simple diagram that anybody could look at and say \"yes, that's what we do.\" [https://youtu.be/oPJIXPC_vn8?t=2099 34m53s]"
    },
    {
      "type": "paragraph",
      "id": "3c2a101cd7f68ee6",
      "text": "We discovered in terms of modeling from all this information that we get from all of these sources that we really have processes that are running in production or staging, they come from the same source code which we call programs, and above that we group them into clusters of servicesâ€”Eric said we should have called those contexts. [https://youtu.be/oPJIXPC_vn8?t=2121 35m15s]"
    },
    {
      "type": "paragraph",
      "id": "38032658e76ab0de",
      "text": "This is a conceptual thing that has more to do with how the engineers think about what they're building and that's very dynamic. People will say, \"Look, you ought to own this service, not us. Why don't you get current on it and we'll forget about it.\" There's a lot of evolution. This is changing all the time. [https://youtu.be/oPJIXPC_vn8?t=2183 36m23s]"
    },
    {
      "type": "paragraph",
      "id": "1dd2868c7e155081",
      "text": "We don't describe how the services are connected. We can pull in data about the producers and consumers and the graph database can infer the connectivity between the services through the kafka topic."
    },
    {
      "type": "paragraph",
      "id": "7a665384440122e0",
      "text": "We have this goal of making human looking diagrams."
    },
    {
      "type": "paragraph",
      "id": "13f10d53e151ce4b",
      "text": "Demo of exploring maps and map data in Federated Wiki. \"I want to mention how I came to be devoted to this idea. ... I want to show you just a little bit of federated wiki to show this same kind of ... usability model that is exploring and observing as opposed to getting a quick answer.\" [https://youtu.be/oPJIXPC_vn8?t=2315 38m35s]"
    },
    {
      "type": "paragraph",
      "id": "61bc1e77d84cbec6",
      "text": "Ward demonstrates using maps in federated wiki to coordinate with a friend visiting from out of town. They were looking for good places to stay in Portland and wanted to enjoy Bike Town. Ward was able to mark the hip neighborhoods on a map and then locate bike share stations to help his friend choose a place to stay. To broaden the point he showed the same activity of finding a coffee shop close to the conference venue for meeting some federated wiki community members in Denver. See [[Federated Wiki Meetup Lunch]]."
    },
    {
      "type": "paragraph",
      "id": "3dcbc970ad3da6bc",
      "text": "Two principals to take away. We're not making data warehouses, we're making structure warehousesâ€”I think the DDD community are very tuned in to structure. The other thing is building interfaces that you discover and explore in. I used to think of that as scientific. Now I think of it as a belief system. You want to hold onto those beliefs, but as you look a little deeper and find evidence that contradicts your beliefs, you want to be able to modify your beliefs and have that reflected in what you've built. [https://youtu.be/oPJIXPC_vn8?t=2852 47m32s]"
    },
    {
      "type": "paragraph",
      "id": "37d5888cb14fbf34",
      "text": "How hard was it to build? Hard because ETL involves a lot of clerical work to clean dirty data. It generally takes about a day to bring a new source of metadata. It's better if I have somebody who knows the API or schema and has the necessary credentials and cares about their data. It is difficult to understand someone's representations. I have to enter their world and learn their [domain] language. A lot of the work is adding checking and validation. Yes it's JSON and it's valid JSON, but is it formatted with the keys we expect. We prefer to push those checks closer to the extraction rather than discover it in the transform. Do more logging and better diagnostics. When somebody does change something that breaks your ETL and your query starts returning empty rows, you want to know how your going to spend your morning and really just want something to tell you what to fix. [https://youtu.be/oPJIXPC_vn8?t=3114 51m54s]"
    },
    {
      "type": "pagefold",
      "id": "7e577e94289b2cfe",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "eb9649003965c09c",
      "text": "For a method of developing a data extraction, see [[Exploratory Parsing in Frames]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Observing Emergence",
        "story": []
      },
      "date": 1634855503909
    },
    {
      "id": "538db1c9de0cba4b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "538db1c9de0cba4b",
        "text": "[[Observing Emergence]] Ward Cunningham re-examines original wiki, recent work on El Dorado for New Relic, and federated wiki."
      },
      "date": 1634855508908
    },
    {
      "type": "edit",
      "id": "538db1c9de0cba4b",
      "item": {
        "type": "paragraph",
        "id": "538db1c9de0cba4b",
        "text": "Ward Cunningham re-examines original wiki, recent work on El Dorado for New Relic, and federated wiki. [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]"
      },
      "date": 1634855545410
    },
    {
      "type": "add",
      "id": "faf086d7fd646641",
      "item": {
        "type": "paragraph",
        "id": "faf086d7fd646641",
        "text": "See [[Explore DDD 2017]]"
      },
      "after": "538db1c9de0cba4b",
      "date": 1634855560389
    },
    {
      "item": {
        "type": "factory",
        "id": "1f8171e9286c1465"
      },
      "id": "1f8171e9286c1465",
      "type": "add",
      "after": "faf086d7fd646641",
      "date": 1634856608888
    },
    {
      "type": "edit",
      "id": "1f8171e9286c1465",
      "item": {
        "type": "video",
        "id": "1f8171e9286c1465",
        "text": "YOUTUBE \nWard Cunningham, Observation of Emergent Schema in Organized Development, DDD 2017\n"
      },
      "date": 1634856635410
    },
    {
      "type": "edit",
      "id": "1f8171e9286c1465",
      "item": {
        "type": "video",
        "id": "1f8171e9286c1465",
        "text": "YOUTUBE oPJIXPC_vn8\nWard Cunningham, Observation of Emergent Schema in Organized Development, DDD 2017 [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]\n"
      },
      "date": 1634856647569
    },
    {
      "id": "faf086d7fd646641",
      "type": "move",
      "order": [
        "538db1c9de0cba4b",
        "1f8171e9286c1465",
        "faf086d7fd646641"
      ],
      "date": 1634856651557
    },
    {
      "type": "edit",
      "id": "538db1c9de0cba4b",
      "item": {
        "type": "paragraph",
        "id": "538db1c9de0cba4b",
        "text": "Ward Cunningham found a way of watching large software developments that recalls Domain Driven Design's Context Map. Here we collect insights about exploring complex systems and tools that lend themselves to continually re-calibrating the model as the business grows. He re-examines original c2 wiki, recent (as of 2017) work on El Dorado for New Relic, and federated wiki. [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]"
      },
      "date": 1709443066803
    },
    {
      "type": "edit",
      "id": "1f8171e9286c1465",
      "item": {
        "type": "video",
        "id": "1f8171e9286c1465",
        "text": "YOUTUBE oPJIXPC_vn8\nWard Cunningham, Observation of Emergent Schema in Organized Development, Explore DDD 2017 [https://www.youtube.com/watch?v=oPJIXPC_vn8 youtube]\n"
      },
      "date": 1709443094759
    },
    {
      "type": "edit",
      "id": "faf086d7fd646641",
      "item": {
        "type": "paragraph",
        "id": "faf086d7fd646641",
        "text": "Abstract from [[Explore DDD 2017]]"
      },
      "date": 1709443135747
    },
    {
      "type": "add",
      "id": "4f41a367ba9f18f9",
      "item": {
        "type": "paragraph",
        "id": "4f41a367ba9f18f9",
        "text": "The original wiki was founded to understand engineering at a social level, first within one company and then more broadly around the world. We asked not for advice but for personal experience, what parts worked and why."
      },
      "after": "faf086d7fd646641",
      "date": 1709443150201
    },
    {
      "type": "add",
      "id": "f70041ab2191cb09",
      "item": {
        "type": "paragraph",
        "id": "f70041ab2191cb09",
        "text": "The agile methods incubated in wiki have enabled a pace and scale of development unimaginable at its founding. Now, situated within rapid development, we have found a new way to observe and understand software and the people who make it."
      },
      "after": "4f41a367ba9f18f9",
      "date": 1709443152807
    },
    {
      "type": "add",
      "id": "83d293ca089dc2b8",
      "item": {
        "type": "paragraph",
        "id": "83d293ca089dc2b8",
        "text": "In this keynote we describe our methods, similar to data warehousing, but with the same interests as the original wiki. Our system captures from existing data a broad picture of what has been built and puts this in service of its continuing evolution."
      },
      "after": "f70041ab2191cb09",
      "date": 1709443156818
    },
    {
      "type": "add",
      "id": "b130f2948ff35900",
      "item": {
        "type": "paragraph",
        "id": "b130f2948ff35900",
        "text": "..."
      },
      "after": "83d293ca089dc2b8",
      "date": 1709443173679
    },
    {
      "type": "add",
      "id": "1c4840f72676592e",
      "item": {
        "type": "paragraph",
        "id": "1c4840f72676592e",
        "text": "Eric Evans reflects on the impact Ward had on the Data Driven Design book. \"He was sort of a proto-DDDer.\" Ward had suggested putting tactical patterns into an appendix to bring clearer focus on the essential patterns. Eric defends the presence of tactical patterns to ensure the book staked a claim to concrete and practical concerns."
      },
      "after": "b130f2948ff35900",
      "date": 1709443195459
    },
    {
      "type": "add",
      "id": "4919896c992be58c",
      "item": {
        "type": "paragraph",
        "id": "4919896c992be58c",
        "text": "We're going to watch connections change."
      },
      "after": "1c4840f72676592e",
      "date": 1709443196701
    },
    {
      "type": "add",
      "id": "300328b0dba8906c",
      "item": {
        "type": "paragraph",
        "id": "300328b0dba8906c",
        "text": "Sometimes you don't know what you're going to get until you look."
      },
      "after": "4919896c992be58c",
      "date": 1709443198149
    },
    {
      "type": "add",
      "id": "865d23183199801c",
      "item": {
        "type": "paragraph",
        "id": "865d23183199801c",
        "text": "Three examples of computing. A gesture that presents completely different paradigms of computation. University lab full of keypunch consoles. Kids gathered around a Xerox Alto running Smalltalk. And an airconditioned datacenter full of 19\" cabinets."
      },
      "after": "300328b0dba8906c",
      "date": 1709443200027
    },
    {
      "type": "add",
      "id": "b7a00c50ae2c4e9a",
      "item": {
        "type": "paragraph",
        "id": "b7a00c50ae2c4e9a",
        "text": "How are we gonna live in this new world of computing?"
      },
      "after": "865d23183199801c",
      "date": 1709443202114
    },
    {
      "type": "add",
      "id": "007b3585acd1a81f",
      "item": {
        "type": "paragraph",
        "id": "007b3585acd1a81f",
        "text": "This tool, El Dorado, enables exploration of changing relationships in a complex microservices architecture. This resembles how the original c2 wiki enabled a community to explore each others experience learning how to program with objects and pattern languages. In particular, the tool exposes the markup used to query the database and to draw the diagrams. [https://wiki.c2.com c2]"
      },
      "after": "b7a00c50ae2c4e9a",
      "date": 1709443218017
    },
    {
      "type": "add",
      "id": "16e52545c06caed2",
      "item": {
        "type": "paragraph",
        "id": "16e52545c06caed2",
        "text": "Context. New Relic R&D went through a transformation into 40 or 50 autonomous teams each with at least a developer, a UI expert, a big data expert, and so on. Internally teams would work any way they liked. One rule though. If one team was going to depend on another team, it had to be self-service. No one could put work on another team's to-do list."
      },
      "after": "007b3585acd1a81f",
      "date": 1709443241005
    },
    {
      "type": "add",
      "id": "6a6c3f4f94e741ca",
      "item": {
        "type": "paragraph",
        "id": "6a6c3f4f94e741ca",
        "text": "Ward asked himself, \"What could possibly go wrong?\" Teams are going to create lots of different services. How are we going to be able to manage the deprecation over time? Can we even count the number of services? That turned out to be hard."
      },
      "after": "16e52545c06caed2",
      "date": 1709443243412
    },
    {
      "type": "add",
      "id": "c62fb12033821b0e",
      "item": {
        "type": "paragraph",
        "id": "c62fb12033821b0e",
        "text": "It got easier with a prototype that used neo4j to graph the relationships."
      },
      "after": "6a6c3f4f94e741ca",
      "date": 1709443245288
    },
    {
      "type": "add",
      "id": "8041d60b7564f708",
      "item": {
        "type": "paragraph",
        "id": "8041d60b7564f708",
        "text": "Sometimes you care more about how the things are connected than what the things are. [https://youtu.be/oPJIXPC_vn8?t=1160 19m20s]"
      },
      "after": "c62fb12033821b0e",
      "date": 1709443266413
    },
    {
      "type": "add",
      "id": "c29af3ca300130f0",
      "item": {
        "type": "paragraph",
        "id": "c29af3ca300130f0",
        "text": "You can click the arrows to discover those connections. Here's an example where two systems connected to each other, and that's the kafka topic that they're talking over in a stream of data."
      },
      "after": "8041d60b7564f708",
      "date": 1709443278828
    },
    {
      "type": "add",
      "id": "2687bd0ed36ed67d",
      "item": {
        "type": "paragraph",
        "id": "2687bd0ed36ed67d",
        "text": "What's neat about it is that I made a small diagram that meant something that could have been written on any whiteboard by any team member and they'd recognize it."
      },
      "after": "c29af3ca300130f0",
      "date": 1709443280530
    },
    {
      "type": "add",
      "id": "a5003deed416ca0b",
      "item": {
        "type": "paragraph",
        "id": "a5003deed416ca0b",
        "text": "It is a kind of structure warehouse. It uses an ETL process to gather metadata from 20 different sources, as of 2017, and loads that into the graph database."
      },
      "after": "2687bd0ed36ed67d",
      "date": 1709443282807
    },
    {
      "type": "add",
      "id": "746186f925f564e7",
      "item": {
        "type": "paragraph",
        "id": "746186f925f564e7",
        "text": "The web-based UI allows editing of the cypher query that is sent to the database and editing of the graphviz instructions for drawing the returned table of data. This enables a closed loop where people viewing these things can tamper with them to discover better ways to look at the structure."
      },
      "after": "a5003deed416ca0b",
      "date": 1709443285093
    },
    {
      "type": "add",
      "id": "54382f00b6ab62ad",
      "item": {
        "type": "paragraph",
        "id": "54382f00b6ab62ad",
        "text": "When I showed it to Eric Evans last summer he said that's a context map and the bounded context. Here I was discovering what Eric had forecast 14 years ago. [https://youtu.be/oPJIXPC_vn8?t=1304 21m44s]"
      },
      "after": "746186f925f564e7",
      "date": 1709443302073
    },
    {
      "type": "add",
      "id": "92e362016fb2fd69",
      "item": {
        "type": "paragraph",
        "id": "92e362016fb2fd69",
        "text": "The nodes are the domain objects. The capitalized words are relationships between them. And the faint dotted lines in the lowercase is what file or database I read to learn that relationship. [https://youtu.be/oPJIXPC_vn8?t=1381 23m01s]"
      },
      "after": "54382f00b6ab62ad",
      "date": 1709443311008
    },
    {
      "type": "add",
      "id": "c9b7311cb9baa733",
      "item": {
        "type": "paragraph",
        "id": "c9b7311cb9baa733",
        "text": "I didn't say how to organize the graph. In trying to place these nodes and route the edges, graphviz surfaced a nice diagram of our company. Here's the product planning. This is the management structure with the teams. Connecting to teams we have how we develop software. And down here, with a little overlap, is how we deploy software."
      },
      "after": "92e362016fb2fd69",
      "date": 1709443331671
    },
    {
      "type": "add",
      "id": "270bd2787157c911",
      "item": {
        "type": "paragraph",
        "id": "270bd2787157c911",
        "text": "I also have a drill down because it's too big to look at."
      },
      "after": "c9b7311cb9baa733",
      "date": 1709443333810
    },
    {
      "type": "add",
      "id": "5bde0bd34abf7177",
      "item": {
        "type": "paragraph",
        "id": "5bde0bd34abf7177",
        "text": "I should have called this \"employee\" instead of \"person\" because here I have a former employee, not a former person."
      },
      "after": "270bd2787157c911",
      "date": 1709443336106
    },
    {
      "type": "add",
      "id": "96e197ac04c56218",
      "item": {
        "type": "paragraph",
        "id": "96e197ac04c56218",
        "text": "All these dotted lines show how many of our sources  talk about teams. Oh, and you know, they don't actually punctuate or captalize the names the same way in any of them, so I apply a half-a-dozen heuristics to get those keys to match up. [https://youtu.be/oPJIXPC_vn8?t=1616 26m56s]"
      },
      "after": "5bde0bd34abf7177",
      "date": 1709443354480
    },
    {
      "type": "add",
      "id": "9cf96c4c9ed0556a",
      "item": {
        "type": "paragraph",
        "id": "9cf96c4c9ed0556a",
        "text": "One thing that turned out to be important was to tabulate how many heuristics had to be applied to make any connection. I can write queries to show me what heuristics got applied today and show me the examples of what came out. That's how I check my work. Just throw all of that data into the graph database and write some queries. Service is another major connector and there are 8 sources that are combined help us understand how our services are connected. [https://youtu.be/oPJIXPC_vn8?t=1641 27m21s]"
      },
      "after": "96e197ac04c56218",
      "date": 1709443367828
    },
    {
      "type": "add",
      "id": "4f65bcd25abd7682",
      "item": {
        "type": "paragraph",
        "id": "4f65bcd25abd7682",
        "text": "Architects query the system and develop meaningful queries and diagrams. I can save those diagrams into our collection of canned queries and include them in the test suite to ensure we keep those queries working as new sources are folded into the system and change the structure."
      },
      "after": "9cf96c4c9ed0556a",
      "date": 1709443384139
    },
    {
      "type": "add",
      "id": "dccfbabf23243f54",
      "item": {
        "type": "paragraph",
        "id": "dccfbabf23243f54",
        "text": "The content-editable part is YAML with two fields: one for the cypher query, the other for dot to send to graphviz. The labels in the cypher query can be used as placeholders in the dot."
      },
      "after": "4f65bcd25abd7682",
      "date": 1709443385188
    },
    {
      "type": "add",
      "id": "30c6f84b312f4d1c",
      "item": {
        "type": "paragraph",
        "id": "30c6f84b312f4d1c",
        "text": "This is probably our most advanced query because it is the hardest one to make a very simple diagram that anybody could look at and say \"yes, that's what we do.\" [https://youtu.be/oPJIXPC_vn8?t=2099 34m53s]"
      },
      "after": "dccfbabf23243f54",
      "date": 1709443401735
    },
    {
      "type": "add",
      "id": "3c2a101cd7f68ee6",
      "item": {
        "type": "paragraph",
        "id": "3c2a101cd7f68ee6",
        "text": "We discovered in terms of modeling from all this information that we get from all of these sources that we really have processes that are running in production or staging, they come from the same source code which we call programs, and above that we group them into clusters of servicesâ€”Eric said we should have called those contexts. [https://youtu.be/oPJIXPC_vn8?t=2121 35m15s]"
      },
      "after": "30c6f84b312f4d1c",
      "date": 1709443411021
    },
    {
      "type": "add",
      "id": "38032658e76ab0de",
      "item": {
        "type": "paragraph",
        "id": "38032658e76ab0de",
        "text": "This is a conceptual thing that has more to do with how the engineers think about what they're building and that's very dynamic. People will say, \"Look, you ought to own this service, not us. Why don't you get current on it and we'll forget about it.\" There's a lot of evolution. This is changing all the time. [https://youtu.be/oPJIXPC_vn8?t=2183 36m23s]"
      },
      "after": "3c2a101cd7f68ee6",
      "date": 1709443422213
    },
    {
      "type": "add",
      "id": "1dd2868c7e155081",
      "item": {
        "type": "paragraph",
        "id": "1dd2868c7e155081",
        "text": "We don't describe how the services are connected. We can pull in data about the producers and consumers and the graph database can infer the connectivity between the services through the kafka topic."
      },
      "after": "38032658e76ab0de",
      "date": 1709443438466
    },
    {
      "type": "add",
      "id": "7a665384440122e0",
      "item": {
        "type": "paragraph",
        "id": "7a665384440122e0",
        "text": "We have this goal of making human looking diagrams."
      },
      "after": "1dd2868c7e155081",
      "date": 1709443439041
    },
    {
      "type": "add",
      "id": "3dcbc970ad3da6bc",
      "item": {
        "type": "paragraph",
        "id": "3dcbc970ad3da6bc",
        "text": "Two principals to take away. We're not making data warehouses, we're making structure warehousesâ€”I think the DDD community are very tuned in to structure. The other thing is building interfaces that you discover and explore in. I used to think of that as scientific. Now I think of it as a belief system. You want to hold onto those beliefs, but as you look a little deeper and find evidence that contradicts your beliefs, you want to be able to modify your beliefs and have that reflected in what you've built. [https://youtu.be/oPJIXPC_vn8?t=2852 47m32s]"
      },
      "after": "7a665384440122e0",
      "date": 1709443448763
    },
    {
      "type": "add",
      "id": "37d5888cb14fbf34",
      "item": {
        "type": "paragraph",
        "id": "37d5888cb14fbf34",
        "text": "How hard was it to build? Hard because ETL involves a lot of clerical work to clean dirty data. It generally takes about a day to bring a new source of metadata. It's better if I have somebody who knows the API or schema and has the necessary credentials and cares about their data. It is difficult to understand someone's representations. I have to enter their world and learn their [domain] language. A lot of the work is adding checking and validation. Yes it's JSON and it's valid JSON, but is it formatted with the keys we expect. We prefer to push those checks closer to the extraction rather than discover it in the transform. Do more logging and better diagnostics. When somebody does change something that breaks your ETL and your query starts returning empty rows, you want to know how your going to spend your morning and really just want something to tell you what to fix. [https://youtu.be/oPJIXPC_vn8?t=3114 51m54s]"
      },
      "after": "3dcbc970ad3da6bc",
      "date": 1709443460448
    },
    {
      "type": "edit",
      "id": "b130f2948ff35900",
      "item": {
        "type": "pagefold",
        "id": "b130f2948ff35900",
        "text": "."
      },
      "date": 1709443545660
    },
    {
      "type": "remove",
      "id": "83d293ca089dc2b8",
      "date": 1709443569621
    },
    {
      "type": "remove",
      "id": "f70041ab2191cb09",
      "date": 1709443570907
    },
    {
      "type": "remove",
      "id": "4f41a367ba9f18f9",
      "date": 1709443574102
    },
    {
      "id": "3e51ae821d6138ff",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3e51ae821d6138ff",
        "text": "Abstract"
      },
      "after": "faf086d7fd646641",
      "attribution": {
        "page": "Observation of Context",
        "site": "ddd.ward.wiki.org"
      },
      "date": 1709443577522
    },
    {
      "id": "6ce1b5edf736a6d4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6ce1b5edf736a6d4",
        "text": "The original wiki was founded to understand engineering at a social level, first within one company and then more broadly around the world. We asked not for advice but for personal experience, what parts worked and why."
      },
      "after": "3e51ae821d6138ff",
      "attribution": {
        "page": "Observation of Context",
        "site": "ddd.ward.wiki.org"
      },
      "date": 1709443580686
    },
    {
      "id": "66f575fb288be485",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "66f575fb288be485",
        "text": "The agile methods incubated in wiki have enabled a pace and scale of development unimaginable at its founding. Now, situated within rapid development, we have found a new way to observe and understand software and the people who make it."
      },
      "after": "6ce1b5edf736a6d4",
      "attribution": {
        "page": "Observation of Context",
        "site": "ddd.ward.wiki.org"
      },
      "date": 1709443584165
    },
    {
      "id": "dc4cc50301b28dc7",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dc4cc50301b28dc7",
        "text": "In this keynote we describe our methods, similar to data warehousing, but with the same interests as the original wiki. Our system captures from existing data a broad picture of what has been built and puts this in service of its continuing evolution."
      },
      "after": "66f575fb288be485",
      "attribution": {
        "page": "Observation of Context",
        "site": "ddd.ward.wiki.org"
      },
      "date": 1709443587214
    },
    {
      "type": "remove",
      "id": "faf086d7fd646641",
      "date": 1709443596394
    },
    {
      "type": "edit",
      "id": "3e51ae821d6138ff",
      "item": {
        "type": "paragraph",
        "id": "3e51ae821d6138ff",
        "text": "Abstract from [[Explore DDD 2017]]"
      },
      "date": 1709443602920
    },
    {
      "type": "add",
      "id": "7e577e94289b2cfe",
      "item": {
        "type": "paragraph",
        "id": "7e577e94289b2cfe",
        "text": "..."
      },
      "after": "37d5888cb14fbf34",
      "date": 1709443841162
    },
    {
      "type": "add",
      "id": "eb9649003965c09c",
      "item": {
        "type": "paragraph",
        "id": "eb9649003965c09c",
        "text": "For a method of developing a data extraction, see [[Exploratory Parsing in Frames]]."
      },
      "after": "7e577e94289b2cfe",
      "date": 1709443945849
    },
    {
      "type": "edit",
      "id": "7e577e94289b2cfe",
      "item": {
        "type": "pagefold",
        "id": "7e577e94289b2cfe",
        "text": "."
      },
      "date": 1709443990058
    },
    {
      "type": "add",
      "id": "13f10d53e151ce4b",
      "item": {
        "type": "paragraph",
        "id": "13f10d53e151ce4b",
        "text": "Demo of exploring maps and map data in Federated Wiki. \"\" [https://youtu.be/oPJIXPC_vn8?t=2315 38m35s]"
      },
      "after": "7a665384440122e0",
      "date": 1709444350469
    },
    {
      "type": "edit",
      "id": "13f10d53e151ce4b",
      "item": {
        "type": "paragraph",
        "id": "13f10d53e151ce4b",
        "text": "Demo of exploring maps and map data in Federated Wiki. \"I want to mention how I came to be devoted to this idea. ... I want to show you just a little bit of federated wiki to show this same kind of ... usability model that is exploring and observing as opposed to getting a quick answer.\" [https://youtu.be/oPJIXPC_vn8?t=2315 38m35s]"
      },
      "date": 1709444515323
    },
    {
      "type": "add",
      "id": "61bc1e77d84cbec6",
      "item": {
        "type": "paragraph",
        "id": "61bc1e77d84cbec6",
        "text": "Ward demonstrates using maps in federated wiki to coordinate with a friend visiting from out of town. They were looking for good places to stay in Portland and wanted to enjoy Bike Town. Ward was able to mark the hip neighborhoods on a map and then locate bike share stations to help his friend choose a place to stay. To broaden the point he showed the same activity of finding a coffee shop close to the conference venue for meeting some federated wiki community members in Denver."
      },
      "after": "13f10d53e151ce4b",
      "date": 1709444779515
    },
    {
      "type": "edit",
      "id": "61bc1e77d84cbec6",
      "item": {
        "type": "paragraph",
        "id": "61bc1e77d84cbec6",
        "text": "Ward demonstrates using maps in federated wiki to coordinate with a friend visiting from out of town. They were looking for good places to stay in Portland and wanted to enjoy Bike Town. Ward was able to mark the hip neighborhoods on a map and then locate bike share stations to help his friend choose a place to stay. To broaden the point he showed the same activity of finding a coffee shop close to the conference venue for meeting some federated wiki community members in Denver. See [[Federated Wiki Meetup Lunch]]."
      },
      "date": 1709445091383
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1709465938458
    }
  ]
}