{
  "title": "Function $wrapEl",
  "story": [
    {
      "type": "paragraph",
      "id": "cd11bf9e41765eaf",
      "text": "⇐ [[rdom]]: [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html IComponent] wrapper for an existing DOM element. When mounted, the given element will be (re)attached to the parent node provided at that time. [https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]"
    },
    {
      "type": "markdown",
      "id": "ba352f6280f95958",
      "text": "# Example"
    },
    {
      "type": "code",
      "id": "f3f01bfdebdcef8a",
      "text": "import { $compile, $wrapEl } from 'https://esm.run/@thi.ng/rdom';\n\nconst title = document.createElement(\"h1\");\ntitle.innerText = \"hello\";\n\n// embed existing DOM element inside an rdom tree\n$compile([\"div\", {}, $wrapEl(title), \"world...\"]).mount(document.body);\n"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame"
    },
    {
      "type": "frame",
      "id": "ddb9f8e3172ed2a3",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "a3ecb2cabfb00f7c",
      "text": "See:"
    },
    {
      "type": "paragraph",
      "id": "d550eceb335f0725",
      "text": "– [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html#mount mount]: Async component lifecycle method to [[initialize]] & [[attach]] the component in the target DOM."
    },
    {
      "type": "paragraph",
      "id": "796605a2cd14e1bd",
      "text": "The index arg is used to define the child index of where to mount the component in the parent element and SHOULD default to -1, causing the component to be appended to (rather than inserted into) the list of children. The index arg MUST be passed to any DOM creation functions used within mount() (e.g. $el, $tree). Likewise, for control-flow or wrapper components, the index arg MUST be used when mounting child components in-place of the wrapper component itself (e.g. see $list, $klist, $sub etc.)"
    },
    {
      "type": "paragraph",
      "id": "fe5ef62eb42c9842",
      "text": "– [[Function $el]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Function $wrapEl",
        "story": []
      },
      "date": 1713458483558,
      "error": {
        "type": "error",
        "msg": "Forbidden",
        "response": "Forbidden"
      }
    },
    {
      "type": "fork",
      "date": 1713458524264
    },
    {
      "item": {
        "type": "factory",
        "id": "961440db13c28d11"
      },
      "id": "961440db13c28d11",
      "type": "add",
      "date": 1713458527043
    },
    {
      "type": "edit",
      "id": "961440db13c28d11",
      "item": {
        "type": "paragraph",
        "id": "961440db13c28d11",
        "text": "https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html"
      },
      "date": 1713458529577
    },
    {
      "type": "edit",
      "id": "961440db13c28d11",
      "item": {
        "type": "paragraph",
        "id": "961440db13c28d11",
        "text": "[[https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]]"
      },
      "date": 1713458542167
    },
    {
      "id": "f3f01bfdebdcef8a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { $compile, $inputTrigger } from 'https://esm.run/@thi.ng/rdom';\n\n// button component with reactive label showing click count\n$compile([\n    \"button\",\n    { onclick: ()=> count.next(count.deref()+1) }, //deref can be number or undefined here\n    count\n  ]).mount(document.body);"
      },
      "after": "961440db13c28d11",
      "attribution": {
        "page": "Playground: rdom"
      },
      "date": 1713458548497
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame"
      },
      "after": "f3f01bfdebdcef8a",
      "attribution": {
        "page": "Playground: rdom"
      },
      "date": 1713458553655
    },
    {
      "id": "ddb9f8e3172ed2a3",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "ddb9f8e3172ed2a3",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "f3f01bfdebdcef8a",
      "attribution": {
        "page": "Playground: rdom"
      },
      "date": 1713458562233
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { $compile, $inputTrigger } from 'https://esm.run/@thi.ng/rdom';\n\nconst title = document.createElement(\"h1\");\ntitle.innerText = \"hello\";\n\n// embed existing DOM element inside an rdom tree\n$compile([\"div\", {}, $wrapEl(title), \"world...\"]).mount(document.body);\n"
      },
      "date": 1713458580737
    },
    {
      "id": "00f76ff348892888",
      "type": "move",
      "order": [
        "961440db13c28d11",
        "f3f01bfdebdcef8a",
        "00f76ff348892888",
        "ddb9f8e3172ed2a3"
      ],
      "date": 1713458585976
    },
    {
      "item": {
        "type": "factory",
        "id": "cd11bf9e41765eaf"
      },
      "id": "cd11bf9e41765eaf",
      "type": "add",
      "after": "ddb9f8e3172ed2a3",
      "date": 1713458608015
    },
    {
      "id": "cd11bf9e41765eaf",
      "type": "move",
      "order": [
        "cd11bf9e41765eaf",
        "961440db13c28d11",
        "f3f01bfdebdcef8a",
        "00f76ff348892888",
        "ddb9f8e3172ed2a3"
      ],
      "date": 1713458610577
    },
    {
      "type": "edit",
      "id": "cd11bf9e41765eaf",
      "item": {
        "type": "paragraph",
        "id": "cd11bf9e41765eaf",
        "text": "⇐ [[rdom]]"
      },
      "date": 1713458623155
    },
    {
      "type": "edit",
      "id": "961440db13c28d11",
      "item": {
        "type": "paragraph",
        "id": "961440db13c28d11",
        "text": "[https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]"
      },
      "date": 1713458631427
    },
    {
      "type": "edit",
      "id": "cd11bf9e41765eaf",
      "item": {
        "type": "paragraph",
        "id": "cd11bf9e41765eaf",
        "text": "⇐ [[rdom]]:"
      },
      "date": 1713458638123
    },
    {
      "type": "remove",
      "id": "961440db13c28d11",
      "date": 1713458642018
    },
    {
      "type": "edit",
      "id": "cd11bf9e41765eaf",
      "item": {
        "type": "paragraph",
        "id": "cd11bf9e41765eaf",
        "text": "⇐ [[rdom]]: [https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]"
      },
      "date": 1713458642943
    },
    {
      "type": "edit",
      "id": "ddb9f8e3172ed2a3",
      "item": {
        "type": "frame",
        "id": "ddb9f8e3172ed2a3",
        "text": "//localhost:3000/assets/pages/snippet-template/esm.html"
      },
      "date": 1713458691751
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { $compile, $wrapEl } from 'https://esm.run/@thi.ng/rdom';\n\nconst title = document.createElement(\"h1\");\ntitle.innerText = \"hello\";\n\n// embed existing DOM element inside an rdom tree\n$compile([\"div\", {}, $wrapEl(title), \"world...\"]).mount(document.body);\n"
      },
      "date": 1713458822339
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713458970705
    },
    {
      "type": "edit",
      "id": "ddb9f8e3172ed2a3",
      "item": {
        "type": "frame",
        "id": "ddb9f8e3172ed2a3",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "date": 1713458985673
    },
    {
      "type": "edit",
      "id": "cd11bf9e41765eaf",
      "item": {
        "type": "paragraph",
        "id": "cd11bf9e41765eaf",
        "text": "⇐ [[rdom]]: IComponent wrapper for an existing DOM element. When mounted, the given element will be (re)attached to the parent node provided at that time. [https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]"
      },
      "date": 1713459030010
    },
    {
      "type": "edit",
      "id": "cd11bf9e41765eaf",
      "item": {
        "type": "paragraph",
        "id": "cd11bf9e41765eaf",
        "text": "⇐ [[rdom]]: [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html IComponent] wrapper for an existing DOM element. When mounted, the given element will be (re)attached to the parent node provided at that time. [https://docs.thi.ng/umbrella/rdom/functions/_wrapEl.html docs]"
      },
      "date": 1713459053753
    },
    {
      "type": "add",
      "id": "ba352f6280f95958",
      "item": {
        "type": "paragraph",
        "id": "ba352f6280f95958",
        "text": "# Example"
      },
      "after": "cd11bf9e41765eaf",
      "date": 1713459084225
    },
    {
      "type": "edit",
      "id": "ba352f6280f95958",
      "item": {
        "type": "markdown",
        "id": "ba352f6280f95958",
        "text": "# Example"
      },
      "date": 1713459087289
    },
    {
      "item": {
        "type": "factory",
        "id": "a3ecb2cabfb00f7c"
      },
      "id": "a3ecb2cabfb00f7c",
      "type": "add",
      "after": "ddb9f8e3172ed2a3",
      "date": 1713518966693
    },
    {
      "type": "edit",
      "id": "a3ecb2cabfb00f7c",
      "item": {
        "type": "paragraph",
        "id": "a3ecb2cabfb00f7c",
        "text": "See:"
      },
      "date": 1713518976948
    },
    {
      "type": "add",
      "id": "d550eceb335f0725",
      "item": {
        "type": "paragraph",
        "id": "d550eceb335f0725",
        "text": "– mount"
      },
      "after": "a3ecb2cabfb00f7c",
      "date": 1713518981551
    },
    {
      "type": "edit",
      "id": "d550eceb335f0725",
      "item": {
        "type": "paragraph",
        "id": "d550eceb335f0725",
        "text": "– [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html#mount mount]"
      },
      "date": 1713518995845
    },
    {
      "type": "edit",
      "id": "d550eceb335f0725",
      "item": {
        "type": "paragraph",
        "id": "d550eceb335f0725",
        "text": "– [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html#mount mount]: Async component lifecycle method to initialize & attach the component in the target DOM."
      },
      "date": 1713519008749
    },
    {
      "type": "edit",
      "id": "d550eceb335f0725",
      "item": {
        "type": "paragraph",
        "id": "d550eceb335f0725",
        "text": "– [https://docs.thi.ng/umbrella/rdom/interfaces/IComponent.html#mount mount]: Async component lifecycle method to [[initialize]] & [[attach]] the component in the target DOM."
      },
      "date": 1713519035351
    },
    {
      "item": {
        "type": "factory",
        "id": "796605a2cd14e1bd"
      },
      "id": "796605a2cd14e1bd",
      "type": "add",
      "after": "d550eceb335f0725",
      "date": 1713519084965
    },
    {
      "type": "edit",
      "id": "796605a2cd14e1bd",
      "item": {
        "type": "paragraph",
        "id": "796605a2cd14e1bd",
        "text": "The index arg is used to define the child index of where to mount the component in the parent element and SHOULD default to -1, causing the component to be appended to (rather than inserted into) the list of children. The index arg MUST be passed to any DOM creation functions used within mount() (e.g. $el, $tree). Likewise, for control-flow or wrapper components, the index arg MUST be used when mounting child components in-place of the wrapper component itself (e.g. see $list, $klist, $sub etc.)"
      },
      "date": 1713519086768
    },
    {
      "item": {
        "type": "factory",
        "id": "fe5ef62eb42c9842"
      },
      "id": "fe5ef62eb42c9842",
      "type": "add",
      "after": "796605a2cd14e1bd",
      "date": 1713519143320
    },
    {
      "type": "edit",
      "id": "fe5ef62eb42c9842",
      "item": {
        "type": "paragraph",
        "id": "fe5ef62eb42c9842",
        "text": "– [[Function $el]]"
      },
      "date": 1713519149438
    }
  ]
}