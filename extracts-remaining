{
  "title": "Extracts Remaining",
  "story": [
    {
      "type": "paragraph",
      "id": "55926381125f9041",
      "text": "I've been frustrated keeping track of progress of a 4-1/2 hour job I run every 6 hours. I now report progress in terms of the number of remaining steps. This slow signal does not render well in an environment designed for things happening 1000 times a second. So I wrote my own rendering in javascript. [https://github.com/WardCunningham/extracts/blob/main/remaining.html github] [https://extracts.deno.dev/ deploy]"
    },
    {
      "type": "paragraph",
      "id": "5d0d44b529c469f3",
      "text": "This is hard to understand because the staircase is not at all obvious when steps take a long time. It also doesn't recognize the periodicity of the signal making comparison with previous results confusing. [https://chart-embed.staging-service.newrelic.com/herald/2d92c689-6220-4507-8509-aa4b067f0f3c?height=400px&timepicker=true expand]"
    },
    {
      "type": "html",
      "id": "dce4b83a79c87463",
      "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/screenshot.png>"
    },
    {
      "type": "paragraph",
      "id": "4f3fc7378be6e7a0",
      "text": "My result has all data points represented rather than just the final value in fixed sized temporal bins. I draw each point as a step down followed by a step over. [http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html expand]"
    },
    {
      "type": "frame",
      "id": "246ff9aa6ea1f053",
      "text": "http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html\nHEIGHT 250"
    },
    {
      "type": "code",
      "id": "03e6d6a8b2d34513",
      "text": "function draw(line, seq, t0) {\n  const x = s => (s.timestamp-t0) * (600/interval)\n  const y = s => 300 - s.remaining * (300/50)\n  let points = `${x(seq[0])},${y(seq[0])} `\n  for (let i = 1; i<seq.length; i++) {\n    points += `${x(seq[i-1])},${y(seq[i])} `\n    points += `${x(seq[i])},${y(seq[i])} `\n  }\n  line.setAttribute('points',points)\n}"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Extracts Remaining",
        "story": []
      },
      "date": 1631754050992
    },
    {
      "item": {
        "type": "factory",
        "id": "55926381125f9041"
      },
      "id": "55926381125f9041",
      "type": "add",
      "date": 1631754052529
    },
    {
      "item": {
        "type": "factory",
        "id": "246ff9aa6ea1f053"
      },
      "id": "246ff9aa6ea1f053",
      "type": "add",
      "after": "55926381125f9041",
      "date": 1631754058234
    },
    {
      "type": "edit",
      "id": "246ff9aa6ea1f053",
      "item": {
        "type": "frame",
        "id": "246ff9aa6ea1f053",
        "text": "https://chart-embed.staging-service.newrelic.com/herald/2d92c689-6220-4507-8509-aa4b067f0f3c?height=400px&timepicker=true"
      },
      "date": 1631754065028
    },
    {
      "type": "edit",
      "id": "246ff9aa6ea1f053",
      "item": {
        "type": "frame",
        "id": "246ff9aa6ea1f053",
        "text": "https://chart-embed.staging-service.newrelic.com/herald/2d92c689-6220-4507-8509-aa4b067f0f3c?height=400px&timepicker=true\nHEIGHT 400"
      },
      "date": 1631754087035
    },
    {
      "item": {
        "type": "factory",
        "id": "65123918b079dd87"
      },
      "id": "65123918b079dd87",
      "type": "add",
      "after": "246ff9aa6ea1f053",
      "date": 1631754136221
    },
    {
      "type": "edit",
      "id": "65123918b079dd87",
      "item": {
        "type": "assets",
        "id": "65123918b079dd87",
        "text": "pages/extracts-remaining"
      },
      "date": 1631754144309
    },
    {
      "type": "edit",
      "id": "246ff9aa6ea1f053",
      "item": {
        "type": "frame",
        "id": "246ff9aa6ea1f053",
        "text": "http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html"
      },
      "date": 1631754334665
    },
    {
      "type": "edit",
      "id": "246ff9aa6ea1f053",
      "item": {
        "type": "frame",
        "id": "246ff9aa6ea1f053",
        "text": "http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html\nHEIGHT 300"
      },
      "date": 1631754355684
    },
    {
      "type": "edit",
      "id": "246ff9aa6ea1f053",
      "item": {
        "type": "frame",
        "id": "246ff9aa6ea1f053",
        "text": "http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html\nHEIGHT 250"
      },
      "date": 1631754519843
    },
    {
      "item": {
        "type": "factory",
        "id": "dce4b83a79c87463"
      },
      "id": "dce4b83a79c87463",
      "type": "add",
      "after": "65123918b079dd87",
      "date": 1631754692889
    },
    {
      "type": "edit",
      "id": "dce4b83a79c87463",
      "item": {
        "type": "html",
        "id": "dce4b83a79c87463",
        "text": "<img width=100% src=http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/screenshot.png>"
      },
      "date": 1631754714068
    },
    {
      "type": "edit",
      "id": "55926381125f9041",
      "item": {
        "type": "paragraph",
        "id": "55926381125f9041",
        "text": "I've been frustrated keeping track of progress of a 4-1/2 hour job I run every 6 hours. I now report progress in terms of the number of remaining steps. This slow signal does not render well in an environment designed for things happening 1000 times a second. So I wrote my own rendering in javascript."
      },
      "date": 1631755016337
    },
    {
      "id": "dce4b83a79c87463",
      "type": "move",
      "order": [
        "55926381125f9041",
        "dce4b83a79c87463",
        "246ff9aa6ea1f053",
        "65123918b079dd87"
      ],
      "date": 1631755024438
    },
    {
      "type": "add",
      "id": "5d0d44b529c469f3",
      "item": {
        "type": "paragraph",
        "id": "5d0d44b529c469f3",
        "text": "This is hard to understand because the staircase is not at all obvious when steps take a long time. It also doesn't recognize the periodicity of the signal making comparison with previous results confusing."
      },
      "after": "55926381125f9041",
      "date": 1631755118026
    },
    {
      "id": "5d0d44b529c469f3",
      "type": "move",
      "order": [
        "55926381125f9041",
        "dce4b83a79c87463",
        "5d0d44b529c469f3",
        "246ff9aa6ea1f053",
        "65123918b079dd87"
      ],
      "date": 1631755120557
    },
    {
      "type": "add",
      "id": "4f3fc7378be6e7a0",
      "item": {
        "type": "paragraph",
        "id": "4f3fc7378be6e7a0",
        "text": "My result has all data points represented rather than just the final value in fixed sized temporal bins. I draw each point as a step down followed by a step over. [http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/screenshot.png expand]"
      },
      "after": "5d0d44b529c469f3",
      "date": 1631755260120
    },
    {
      "id": "4f3fc7378be6e7a0",
      "type": "move",
      "order": [
        "55926381125f9041",
        "dce4b83a79c87463",
        "5d0d44b529c469f3",
        "246ff9aa6ea1f053",
        "4f3fc7378be6e7a0",
        "65123918b079dd87"
      ],
      "date": 1631755263533
    },
    {
      "type": "edit",
      "id": "5d0d44b529c469f3",
      "item": {
        "type": "paragraph",
        "id": "5d0d44b529c469f3",
        "text": "This is hard to understand because the staircase is not at all obvious when steps take a long time. It also doesn't recognize the periodicity of the signal making comparison with previous results confusing. [https://chart-embed.staging-service.newrelic.com/herald/2d92c689-6220-4507-8509-aa4b067f0f3c?height=400px&timepicker=true expand]"
      },
      "date": 1631755618588
    },
    {
      "type": "remove",
      "id": "65123918b079dd87",
      "date": 1631755662280
    },
    {
      "id": "5d0d44b529c469f3",
      "type": "move",
      "order": [
        "55926381125f9041",
        "5d0d44b529c469f3",
        "dce4b83a79c87463",
        "246ff9aa6ea1f053",
        "4f3fc7378be6e7a0"
      ],
      "date": 1631755685248
    },
    {
      "id": "4f3fc7378be6e7a0",
      "type": "move",
      "order": [
        "55926381125f9041",
        "5d0d44b529c469f3",
        "dce4b83a79c87463",
        "4f3fc7378be6e7a0",
        "246ff9aa6ea1f053"
      ],
      "date": 1631755688264
    },
    {
      "item": {
        "type": "factory",
        "id": "03e6d6a8b2d34513"
      },
      "id": "03e6d6a8b2d34513",
      "type": "add",
      "after": "246ff9aa6ea1f053",
      "date": 1631758886354
    },
    {
      "type": "edit",
      "id": "03e6d6a8b2d34513",
      "item": {
        "type": "factory",
        "id": "03e6d6a8b2d34513",
        "text": "function draw(line, seq, t0, color) {\n  const x = s => (s.timestamp-t0) * (600/interval)\n  const y = s => 300 - s.remaining * (300/50)\n  let points = `${x(seq[0])},${y(seq[0])} `\n  for (let i = 1; i<seq.length; i++) {\n    points += `${x(seq[i-1])},${y(seq[i])} `\n    points += `${x(seq[i])},${y(seq[i])} `\n  }\n  line.setAttribute('points',points)\n\n}"
      },
      "date": 1631758930071
    },
    {
      "type": "edit",
      "id": "03e6d6a8b2d34513",
      "item": {
        "type": "code",
        "id": "03e6d6a8b2d34513",
        "text": "function draw(line, seq, t0, color) {\n  const x = s => (s.timestamp-t0) * (600/interval)\n  const y = s => 300 - s.remaining * (300/50)\n  let points = `${x(seq[0])},${y(seq[0])} `\n  for (let i = 1; i<seq.length; i++) {\n    points += `${x(seq[i-1])},${y(seq[i])} `\n    points += `${x(seq[i])},${y(seq[i])} `\n  }\n  line.setAttribute('points',points)\n}"
      },
      "date": 1631758936820
    },
    {
      "type": "edit",
      "id": "03e6d6a8b2d34513",
      "item": {
        "type": "code",
        "id": "03e6d6a8b2d34513",
        "text": "function draw(line, seq, t0) {\n  const x = s => (s.timestamp-t0) * (600/interval)\n  const y = s => 300 - s.remaining * (300/50)\n  let points = `${x(seq[0])},${y(seq[0])} `\n  for (let i = 1; i<seq.length; i++) {\n    points += `${x(seq[i-1])},${y(seq[i])} `\n    points += `${x(seq[i])},${y(seq[i])} `\n  }\n  line.setAttribute('points',points)\n}"
      },
      "date": 1631758961078
    },
    {
      "type": "edit",
      "id": "55926381125f9041",
      "item": {
        "type": "paragraph",
        "id": "55926381125f9041",
        "text": "I've been frustrated keeping track of progress of a 4-1/2 hour job I run every 6 hours. I now report progress in terms of the number of remaining steps. This slow signal does not render well in an environment designed for things happening 1000 times a second. So I wrote my own rendering in javascript. [https://github.com/WardCunningham/extracts/blob/main/remaining.html github]"
      },
      "date": 1631759013409
    },
    {
      "type": "edit",
      "id": "4f3fc7378be6e7a0",
      "item": {
        "type": "paragraph",
        "id": "4f3fc7378be6e7a0",
        "text": "My result has all data points represented rather than just the final value in fixed sized temporal bins. I draw each point as a step down followed by a step over. [http://found.ward.bay.wiki.org/assets/pages/extracts-remaining/remaining.html expand]"
      },
      "date": 1631802979944
    },
    {
      "type": "fork",
      "date": 1631829856189
    },
    {
      "type": "edit",
      "id": "55926381125f9041",
      "item": {
        "type": "paragraph",
        "id": "55926381125f9041",
        "text": "I've been frustrated keeping track of progress of a 4-1/2 hour job I run every 6 hours. I now report progress in terms of the number of remaining steps. This slow signal does not render well in an environment designed for things happening 1000 times a second. So I wrote my own rendering in javascript. [https://github.com/WardCunningham/extracts/blob/main/remaining.html github] [https://extracts.deno.dev/ deploy]"
      },
      "date": 1631829929736
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1631861553276
    }
  ]
}