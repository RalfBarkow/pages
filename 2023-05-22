{
  "title": "2023-05-22",
  "story": [
    {
      "type": "paragraph",
      "id": "5f21e39444857879",
      "text": "⇒ [[services.nginx]]: Support both HTTP and HTTPS in a single virtualHost #25533 [https://github.com/NixOS/nixpkgs/issues/25533 github]"
    },
    {
      "type": "code",
      "id": "6dff3e57c205af44",
      "text": "  services.nginx = {\n    enable = true;\n    recommendedProxySettings = false;\n    recommendedTlsSettings = true;\n    virtualHosts = {\n      \"wiki.ralfbarkow.ch\" = {\n        enableACME = true;\n        enableSSL = true;\n        extraConfig = ''\n          listen 80;\n        '';\n        locations.\"/\" = {\n          proxyPass = \"http://127.0.0.1:3000\";\n          proxyWebsockets = true; # needed if you need to use WebSocket\n        };\n      };\n"
    },
    {
      "type": "paragraph",
      "id": "d5901e6a7dec5b57",
      "text": "Reasons for a page to use SSL"
    },
    {
      "type": "paragraph",
      "id": "1c731eff66c5df94",
      "text": "Reasons for a page to not use SSL:"
    },
    {
      "type": "markdown",
      "id": "e53d9917d4c0346d",
      "text": "https://parser.dreyeck.ch/view/parser search failed: error"
    },
    {
      "type": "paragraph",
      "id": "8957595bf3410fed",
      "text": "⇒ add full internet toggle to footer #294 [https://github.com/fedwiki/wiki-client/pull/294 github]"
    },
    {
      "type": "markdown",
      "id": "ed5845bf358b9fd9",
      "text": "> The full federation is only visible when the origin javascript comes from an http site. "
    },
    {
      "type": "reference",
      "id": "a4bc35964f5931a6",
      "site": "glossary.asia.wiki.org",
      "slug": "origin",
      "title": "Origin",
      "text": "The Origin is the site from which we started browsing the federated wiki within a given tab. The origin is first among equals wielding some unexpected power over our experience."
    },
    {
      "type": "markdown",
      "id": "7afac1148afaf0c4",
      "text": "> We don't know if it is possible to dynamically detect what protocols are supported by a given server. "
    },
    {
      "type": "paragraph",
      "id": "21b0c4a439e8e064",
      "text": "Client-side code can complement the server-side setup by conditionally rendering forms or displaying error messages based on the protocol detected by the client."
    },
    {
      "type": "paragraph",
      "id": "e067d51d82b8d6b9",
      "text": "Robert Best commented on Mar 22 [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1478881283 github]"
    },
    {
      "type": "markdown",
      "id": "209ff6fd387edd77",
      "text": "> Could a wiki be set up using passportjs (generic OAuth), and treafik or caddy, to only allow authentication over HTTPS, but redirect all visitors by default to HTTP if they aren't logged in (So the neighborhood and everything works)... but then as soon as the padlock is clicked, if on HTTP, then redirect to HTTPS for log in (since it would only be possible over HTTPS)"
    },
    {
      "type": "paragraph",
      "id": "cb074fd8fb7f4e66",
      "text": "HANCOCK, Alexis, 2021. HTTPS Is Actually Everywhere. Electronic Frontier Foundation. Online. 21 September 2021. [Accessed 22 May 2023]. [https://www.eff.org/deeplinks/2021/09/https-actually-everywhere post] For more than 10 years, EFF’s HTTPS Everywhere browser extension has provided a much-needed service to users: encrypting their browser communications with websites and making sure they benefit from the protection of HTTPS wherever possible. Since we started offering HTTPS Everywhere, the battle to...\n"
    },
    {
      "type": "paragraph",
      "id": "9440a09eef8d6036",
      "text": "⇒ [[HTTPS Only Wiki]] [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1328229357 github]"
    },
    {
      "type": "paragraph",
      "id": "35c3d6bc179fd6d6",
      "text": "Reading cookies via HTTPS that were set using HTTP [https://stackoverflow.com/questions/2163828/reading-cookies-via-https-that-were-set-using-http stackoverflow]"
    },
    {
      "type": "markdown",
      "id": "4f203ca680cd38be",
      "text": "> Cookies set with the \"Secure\" keyword will only be sent by the browser when connecting by a secure means (HTTPS). Apart from that there is no distinction - if \"secure\" is absent, the cookie may be sent over an insecure connection."
    },
    {
      "type": "pagefold",
      "id": "a91310901f5882fa",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "434ee8cdc7076b80",
      "text": "⇒ [[Glasperlenspiel]]: 3:47:12"
    },
    {
      "type": "paragraph",
      "id": "bf2dc4002dc2ce51",
      "text": "Page 110\n\nEs bleibe nicht unerwahnt, da auch Plinio Designori unter dem Einfluf seines Antagonisten erhebliche Wandlungen und Entwicklungen erfuhr, und zwar nicht nur im Sinn ei- ner Erziehung zur Lauterung seiner Kampfmethoden. Wahrend des kollegialen und kampferischen Austausches jener Schuljahre sah er seinen Gegenspieler sich in stetiger Steigerung zum vorbildlichen Kastalier entwickeln, es trat ihm der Geist der Provinz in der Gestalt des Freundes im- mer sichtbarer und lebendiger entgegen, und ebenso wie er jenen bis zu einem gewissen Garungsgrade mit der Atmo- sphare seiner Welt infiziert hatte, atmete er selbst die kasta- lische Luft und erlag ihrem Reiz und Einflu&. Im letzten Jahr seiner Schulzeit, nach einer zweistiindigen Disputation iiber die Ideale des Ménchtums und deren Gefahren, welche sie im Beisein der obersten Glasperlenspiel-Klasse ausge- kampft hatten, nahm er Josef zu einem Spaziergang mit und machte ihm auf diesem Gang ein Gestandnis, das wir nach einem Brief Ferromontes zitieren: »Ich wei natiirlich langst, Josef, da du der frommglaubige Glasperlenspieler und Provinzheilige nicht bist, dessen Rolle du so ausge- zeichnet spielst. Jeder von uns beiden steht an exponierter Stelle in einem Kampf, und jeder von uns weif ja wohl, daf das, wogegen er kampft, zu Recht existiert und seine unbe- strittenen Werte hat. Du stehst auf der Seite der Hochzucht des Geistes, ich auf der Seite des natiirlichen Lebens. In uns- rem Kampf hast du gelernt, die Gefahren des natiirlichen Lebens aufzuspiiren und aufs Korn zu nehmen; dein Amt ist es, darauf hinzuweisen, wie das natiirliche, naive Leben ohne geistige Zucht zum Sumpf werden und ins Tierische und noch weiter zuriickfiihren mu&. Und ich wieder muf "
    },
    {
      "type": "pagefold",
      "id": "bbd14b82cc202999",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b17ba77324a12648",
      "text": "⇒ [[Parser]]"
    },
    {
      "type": "paragraph",
      "id": "d28a4161529f677b",
      "text": "⇒ [[Elm and Vite]]"
    },
    {
      "type": "roster",
      "id": "d9e2ffb9a092f060",
      "text": "elm.dreyeck.ch"
    },
    {
      "type": "paragraph",
      "id": "382ea9b906e170ea",
      "text": "currying: gypsydave5 — [https://discord.com/channels/223421264751099906/305208145020715019/909778402943316008 discord]\n@Garklein - not by default (afaik) @Dave Mason has extended Pharo to include currying and other FP ideas https://github.com/dvmason/Pharo-Functional."
    },
    {
      "type": "paragraph",
      "id": "1526c0ad1460a298",
      "text": "⇒ [[Dave Mason]]: [https://github.com/dvmason/Pharo-Functional github]"
    },
    {
      "type": "paragraph",
      "id": "6fdbcb73f3f76eb8",
      "text": "⇒ [[Niko Schwarz]]: Point-free programming in Smalltalk [https://smalltalkthoughts.blogspot.com/2011/08/point-free-programming-in-smalltalk.html post]"
    },
    {
      "type": "pagefold",
      "id": "53012f4bba7634f6",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "b98edaeeeeba97da",
      "text": "⇒ [[NikolaiSuslov]] — [[2023-05-09]] 15:56 [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord]\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language. What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
    },
    {
      "type": "paragraph",
      "id": "eb6611315dca193a",
      "text": "⇒ [[Clojure]] is a dialect of Lisp that runs on the JVM. [https://hub.docker.com/_/clojure docker]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-05-22",
        "story": []
      },
      "date": 1684735587393
    },
    {
      "item": {
        "type": "factory",
        "id": "6dff3e57c205af44"
      },
      "id": "6dff3e57c205af44",
      "type": "add",
      "date": 1684735588949
    },
    {
      "type": "edit",
      "id": "6dff3e57c205af44",
      "item": {
        "type": "code",
        "id": "6dff3e57c205af44",
        "text": "  services.nginx = {\n    enable = true;\n    recommendedProxySettings = false;\n    recommendedTlsSettings = true;\n    virtualHosts = {\n      \"wiki.ralfbarkow.ch\" = {\n        enableACME = true;\n        enableSSL = true;\n        extraConfig = ''\n          listen 80;\n        '';\n        locations.\"/\" = {\n          proxyPass = \"http://127.0.0.1:3000\";\n          proxyWebsockets = true; # needed if you need to use WebSocket\n        };\n      };\n"
      },
      "date": 1684735591394
    },
    {
      "item": {
        "type": "factory",
        "id": "5f21e39444857879"
      },
      "id": "5f21e39444857879",
      "type": "add",
      "after": "6dff3e57c205af44",
      "date": 1684735634106
    },
    {
      "id": "5f21e39444857879",
      "type": "move",
      "order": [
        "5f21e39444857879",
        "6dff3e57c205af44"
      ],
      "date": 1684735636036
    },
    {
      "type": "edit",
      "id": "5f21e39444857879",
      "item": {
        "type": "paragraph",
        "id": "5f21e39444857879",
        "text": "⇒ [[services.nginx]]: Support both HTTP and HTTPS in a single virtualHost #25533 "
      },
      "date": 1684735663291
    },
    {
      "type": "edit",
      "id": "5f21e39444857879",
      "item": {
        "type": "paragraph",
        "id": "5f21e39444857879",
        "text": "⇒ [[services.nginx]]: Support both HTTP and HTTPS in a single virtualHost #25533 [https://github.com/NixOS/nixpkgs/issues/25533 github]"
      },
      "date": 1684735696840
    },
    {
      "item": {
        "type": "factory",
        "id": "d5901e6a7dec5b57"
      },
      "id": "d5901e6a7dec5b57",
      "type": "add",
      "after": "6dff3e57c205af44",
      "date": 1684737882035
    },
    {
      "type": "edit",
      "id": "d5901e6a7dec5b57",
      "item": {
        "type": "paragraph",
        "id": "d5901e6a7dec5b57",
        "text": "https://parser.dreyeck.ch/view/welcome-visitors/view/parser"
      },
      "date": 1684737889037
    },
    {
      "type": "edit",
      "id": "d5901e6a7dec5b57",
      "item": {
        "type": "paragraph",
        "id": "d5901e6a7dec5b57",
        "text": "reasons for a page to use SSL"
      },
      "date": 1684737904532
    },
    {
      "type": "add",
      "id": "e53d9917d4c0346d",
      "item": {
        "type": "paragraph",
        "id": "e53d9917d4c0346d",
        "text": "https://parser.dreyeck.ch/view/welcome-visitors/view/parser"
      },
      "after": "d5901e6a7dec5b57",
      "date": 1684737906392
    },
    {
      "type": "edit",
      "id": "d5901e6a7dec5b57",
      "item": {
        "type": "paragraph",
        "id": "d5901e6a7dec5b57",
        "text": "Reasons for a page to use SSL"
      },
      "date": 1684737913503
    },
    {
      "type": "add",
      "id": "1c731eff66c5df94",
      "item": {
        "type": "paragraph",
        "id": "1c731eff66c5df94",
        "text": "Reasons for a page to not use SSL"
      },
      "after": "d5901e6a7dec5b57",
      "date": 1684737918921
    },
    {
      "type": "edit",
      "id": "1c731eff66c5df94",
      "item": {
        "type": "paragraph",
        "id": "1c731eff66c5df94",
        "text": "Reasons for a page to not use SSL:"
      },
      "date": 1684737932372
    },
    {
      "type": "edit",
      "id": "e53d9917d4c0346d",
      "item": {
        "type": "paragraph",
        "id": "e53d9917d4c0346d",
        "text": "https://parser.dreyeck.ch/view/parser"
      },
      "date": 1684737945819
    },
    {
      "type": "edit",
      "id": "e53d9917d4c0346d",
      "item": {
        "type": "paragraph",
        "id": "e53d9917d4c0346d",
        "text": "https://parser.dreyeck.ch/view/parser search failed: error"
      },
      "date": 1684737956385
    },
    {
      "item": {
        "type": "factory",
        "id": "8957595bf3410fed"
      },
      "id": "8957595bf3410fed",
      "type": "add",
      "after": "e53d9917d4c0346d",
      "date": 1684738073666
    },
    {
      "type": "edit",
      "id": "8957595bf3410fed",
      "item": {
        "type": "paragraph",
        "id": "8957595bf3410fed",
        "text": "\nadd full internet toggle to footer #294 "
      },
      "date": 1684738076534
    },
    {
      "type": "edit",
      "id": "8957595bf3410fed",
      "item": {
        "type": "paragraph",
        "id": "8957595bf3410fed",
        "text": "add full internet toggle to footer #294 [https://github.com/fedwiki/wiki-client/pull/294 github]"
      },
      "date": 1684738089515
    },
    {
      "item": {
        "type": "factory",
        "id": "7afac1148afaf0c4"
      },
      "id": "7afac1148afaf0c4",
      "type": "add",
      "after": "8957595bf3410fed",
      "date": 1684738211426
    },
    {
      "item": {
        "type": "factory",
        "id": "21b0c4a439e8e064"
      },
      "id": "21b0c4a439e8e064",
      "type": "add",
      "after": "7afac1148afaf0c4",
      "date": 1684738213548
    },
    {
      "type": "edit",
      "id": "21b0c4a439e8e064",
      "item": {
        "type": "paragraph",
        "id": "21b0c4a439e8e064",
        "text": "Client-side code can complement the server-side setup by conditionally rendering forms or displaying error messages based on the protocol detected by the client."
      },
      "date": 1684738235458
    },
    {
      "type": "edit",
      "id": "7afac1148afaf0c4",
      "item": {
        "type": "markdown",
        "id": "7afac1148afaf0c4",
        "text": "> We don't know if it is possible to dynamically detect what protocols are supported by a given server. "
      },
      "date": 1684738249097
    },
    {
      "item": {
        "type": "factory",
        "id": "e067d51d82b8d6b9"
      },
      "id": "e067d51d82b8d6b9",
      "type": "add",
      "after": "21b0c4a439e8e064",
      "date": 1684738493516
    },
    {
      "type": "edit",
      "id": "e067d51d82b8d6b9",
      "item": {
        "type": "paragraph",
        "id": "e067d51d82b8d6b9",
        "text": "Robert Best"
      },
      "date": 1684738498009
    },
    {
      "type": "edit",
      "id": "e067d51d82b8d6b9",
      "item": {
        "type": "paragraph",
        "id": "e067d51d82b8d6b9",
        "text": "Robert Best commented on Mar 22"
      },
      "date": 1684738513375
    },
    {
      "type": "edit",
      "id": "e067d51d82b8d6b9",
      "item": {
        "type": "paragraph",
        "id": "e067d51d82b8d6b9",
        "text": "Robert Best commented on Mar 22 [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1478881283 github]"
      },
      "date": 1684738539882
    },
    {
      "item": {
        "type": "factory",
        "id": "209ff6fd387edd77"
      },
      "id": "209ff6fd387edd77",
      "type": "add",
      "after": "e067d51d82b8d6b9",
      "date": 1684738556975
    },
    {
      "type": "edit",
      "id": "209ff6fd387edd77",
      "item": {
        "type": "markdown",
        "id": "209ff6fd387edd77",
        "text": "> Could a wiki be set up using passportjs (generic OAuth), and treafik or caddy, to only allow authentication over HTTPS, but redirect all visitors by default to HTTP if they aren't logged in (So the neighborhood and everything works)... but then as soon as the padlock is clicked, if on HTTP, then redirect to HTTPS for log in (since it would only be possible over HTTPS)"
      },
      "date": 1684738559647
    },
    {
      "item": {
        "type": "factory",
        "id": "cb074fd8fb7f4e66"
      },
      "id": "cb074fd8fb7f4e66",
      "type": "add",
      "after": "209ff6fd387edd77",
      "date": 1684738898413
    },
    {
      "type": "edit",
      "id": "cb074fd8fb7f4e66",
      "item": {
        "type": "paragraph",
        "id": "cb074fd8fb7f4e66",
        "text": "\nHANCOCK, Alexis, 2021. HTTPS Is Actually Everywhere. Electronic Frontier Foundation. Online. 21 September 2021. [Accessed 22 May 2023]. Available from: https://www.eff.org/deeplinks/2021/09/https-actually-everywhere For more than 10 years, EFF’s HTTPS Everywhere browser extension has provided a much-needed service to users: encrypting their browser communications with websites and making sure they benefit from the protection of HTTPS wherever possible. Since we started offering HTTPS Everywhere, the battle to...\n"
      },
      "date": 1684738907181
    },
    {
      "type": "edit",
      "id": "cb074fd8fb7f4e66",
      "item": {
        "type": "paragraph",
        "id": "cb074fd8fb7f4e66",
        "text": "HANCOCK, Alexis, 2021. HTTPS Is Actually Everywhere. Electronic Frontier Foundation. Online. 21 September 2021. [Accessed 22 May 2023]. [ "
      },
      "date": 1684739160076
    },
    {
      "type": "edit",
      "id": "cb074fd8fb7f4e66",
      "item": {
        "type": "paragraph",
        "id": "cb074fd8fb7f4e66",
        "text": "HANCOCK, Alexis, 2021. HTTPS Is Actually Everywhere. Electronic Frontier Foundation. Online. 21 September 2021. [Accessed 22 May 2023]. [https://www.eff.org/deeplinks/2021/09/https-actually-everywhere post] For more than 10 years, EFF’s HTTPS Everywhere browser extension has provided a much-needed service to users: encrypting their browser communications with websites and making sure they benefit from the protection of HTTPS wherever possible. Since we started offering HTTPS Everywhere, the battle to...\n"
      },
      "date": 1684739166171
    },
    {
      "item": {
        "type": "factory",
        "id": "9440a09eef8d6036"
      },
      "id": "9440a09eef8d6036",
      "type": "add",
      "after": "cb074fd8fb7f4e66",
      "date": 1684739228693
    },
    {
      "type": "edit",
      "id": "9440a09eef8d6036",
      "item": {
        "type": "paragraph",
        "id": "9440a09eef8d6036",
        "text": "Re: https only wiki"
      },
      "date": 1684739233281
    },
    {
      "type": "edit",
      "id": "9440a09eef8d6036",
      "item": {
        "type": "paragraph",
        "id": "9440a09eef8d6036",
        "text": "Re: https only wiki [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1328229357 github]"
      },
      "date": 1684739248388
    },
    {
      "type": "add",
      "id": "98d1e9d8900ebb1e",
      "item": {
        "type": "paragraph",
        "id": "98d1e9d8900ebb1e",
        "text": "As Paul wrote in this comment: \"The real problem is people deploying https only wiki. That problem can only be addressed by getting them to switch to supporting http in their installations, and not redirecting from http to https. And maybe adding an automatic redirect from https to http if the user is not the wiki owner – and subjecting people to endless redirection if a site refuses to allow http!\""
      },
      "after": "9440a09eef8d6036",
      "date": 1684739319307
    },
    {
      "type": "edit",
      "id": "98d1e9d8900ebb1e",
      "item": {
        "type": "paragraph",
        "id": "98d1e9d8900ebb1e",
        "text": "As Paul wrote in this comment [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1328229357 github]: \"The real problem is people deploying https only wiki. That problem can only be addressed by getting them to switch to supporting http in their installations, and not redirecting from http to https. And maybe adding an automatic redirect from https to http if the user is not the wiki owner – and subjecting people to endless redirection if a site refuses to allow http!\""
      },
      "date": 1684739393725
    },
    {
      "type": "edit",
      "id": "e53d9917d4c0346d",
      "item": {
        "type": "markdown",
        "id": "e53d9917d4c0346d",
        "text": "https://parser.dreyeck.ch/view/parser search failed: error"
      },
      "date": 1684739869672
    },
    {
      "item": {
        "type": "factory",
        "id": "a91310901f5882fa"
      },
      "id": "a91310901f5882fa",
      "type": "add",
      "after": "98d1e9d8900ebb1e",
      "date": 1684740636425
    },
    {
      "type": "edit",
      "id": "a91310901f5882fa",
      "item": {
        "type": "pagefold",
        "id": "a91310901f5882fa",
        "text": "~"
      },
      "date": 1684740640311
    },
    {
      "item": {
        "type": "factory",
        "id": "434ee8cdc7076b80"
      },
      "id": "434ee8cdc7076b80",
      "type": "add",
      "after": "a91310901f5882fa",
      "date": 1684740702635
    },
    {
      "type": "edit",
      "id": "434ee8cdc7076b80",
      "item": {
        "type": "paragraph",
        "id": "434ee8cdc7076b80",
        "text": "⇒ [[Glasperlenspiel]]"
      },
      "date": 1684740717135
    },
    {
      "type": "edit",
      "id": "434ee8cdc7076b80",
      "item": {
        "type": "paragraph",
        "id": "434ee8cdc7076b80",
        "text": "⇒ [[Glasperlenspiel]]: 3:47:12"
      },
      "date": 1684740731223
    },
    {
      "item": {
        "type": "factory",
        "id": "bf2dc4002dc2ce51"
      },
      "id": "bf2dc4002dc2ce51",
      "type": "add",
      "after": "434ee8cdc7076b80",
      "date": 1684740834658
    },
    {
      "type": "edit",
      "id": "bf2dc4002dc2ce51",
      "item": {
        "type": "paragraph",
        "id": "bf2dc4002dc2ce51",
        "text": "Page 110\n\nEs bleibe nicht unerwahnt, da auch Plinio Designori unter dem Einfluf seines Antagonisten erhebliche Wandlungen und Entwicklungen erfuhr, und zwar nicht nur im Sinn ei- ner Erziehung zur Lauterung seiner Kampfmethoden. Wahrend des kollegialen und kampferischen Austausches jener Schuljahre sah er seinen Gegenspieler sich in stetiger Steigerung zum vorbildlichen Kastalier entwickeln, es trat ihm der Geist der Provinz in der Gestalt des Freundes im- mer sichtbarer und lebendiger entgegen, und ebenso wie er jenen bis zu einem gewissen Garungsgrade mit der Atmo- sphare seiner Welt infiziert hatte, atmete er selbst die kasta- lische Luft und erlag ihrem Reiz und Einflu&. Im letzten Jahr seiner Schulzeit, nach einer zweistiindigen Disputation iiber die Ideale des Ménchtums und deren Gefahren, welche sie im Beisein der obersten Glasperlenspiel-Klasse ausge- kampft hatten, nahm er Josef zu einem Spaziergang mit und machte ihm auf diesem Gang ein Gestandnis, das wir nach einem Brief Ferromontes zitieren: »Ich wei natiirlich langst, Josef, da du der frommglaubige Glasperlenspieler und Provinzheilige nicht bist, dessen Rolle du so ausge- zeichnet spielst. Jeder von uns beiden steht an exponierter Stelle in einem Kampf, und jeder von uns weif ja wohl, daf das, wogegen er kampft, zu Recht existiert und seine unbe- strittenen Werte hat. Du stehst auf der Seite der Hochzucht des Geistes, ich auf der Seite des natiirlichen Lebens. In uns- rem Kampf hast du gelernt, die Gefahren des natiirlichen Lebens aufzuspiiren und aufs Korn zu nehmen; dein Amt ist es, darauf hinzuweisen, wie das natiirliche, naive Leben ohne geistige Zucht zum Sumpf werden und ins Tierische und noch weiter zuriickfiihren mu&. Und ich wieder muf "
      },
      "date": 1684740836554
    },
    {
      "item": {
        "type": "factory",
        "id": "bbd14b82cc202999"
      },
      "id": "bbd14b82cc202999",
      "type": "add",
      "after": "bf2dc4002dc2ce51",
      "date": 1684740860191
    },
    {
      "type": "edit",
      "id": "bbd14b82cc202999",
      "item": {
        "type": "pagefold",
        "id": "bbd14b82cc202999",
        "text": "~"
      },
      "date": 1684740863110
    },
    {
      "item": {
        "type": "factory",
        "id": "b17ba77324a12648"
      },
      "id": "b17ba77324a12648",
      "type": "add",
      "after": "bbd14b82cc202999",
      "date": 1684740865071
    },
    {
      "type": "edit",
      "id": "b17ba77324a12648",
      "item": {
        "type": "paragraph",
        "id": "b17ba77324a12648",
        "text": "⇒ [[Parser]]"
      },
      "date": 1684740881600
    },
    {
      "type": "edit",
      "id": "9440a09eef8d6036",
      "item": {
        "type": "paragraph",
        "id": "9440a09eef8d6036",
        "text": "Re: [[HTTPS Only Wiki]] [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1328229357 github]"
      },
      "date": 1684754332070
    },
    {
      "id": "98d1e9d8900ebb1e",
      "type": "remove",
      "removedTo": {
        "page": "HTTPS Only Wiki"
      },
      "date": 1684754342947
    },
    {
      "type": "add",
      "id": "35c3d6bc179fd6d6",
      "item": {
        "type": "paragraph",
        "id": "35c3d6bc179fd6d6",
        "text": "https://stackoverflow.com/questions/2163828/reading-cookies-via-https-that-were-set-using-http"
      },
      "after": "9440a09eef8d6036",
      "date": 1684756709953
    },
    {
      "type": "edit",
      "id": "9440a09eef8d6036",
      "item": {
        "type": "paragraph",
        "id": "9440a09eef8d6036",
        "text": "⇒ [[HTTPS Only Wiki]] [https://github.com/fedwiki/wiki-client/pull/294#issuecomment-1328229357 github]"
      },
      "date": 1684756721720
    },
    {
      "type": "edit",
      "id": "35c3d6bc179fd6d6",
      "item": {
        "type": "paragraph",
        "id": "35c3d6bc179fd6d6",
        "text": "[https://stackoverflow.com/questions/2163828/reading-cookies-via-https-that-were-set-using-http stackoverflow]"
      },
      "date": 1684756739754
    },
    {
      "type": "add",
      "id": "4f203ca680cd38be",
      "item": {
        "type": "paragraph",
        "id": "4f203ca680cd38be",
        "text": "> \n\nCookies set with the \"Secure\" keyword will only be sent by the browser when connecting by a secure means (HTTPS). Apart from that there is no distinction - if \"secure\" is absent, the cookie may be sent over an insecure connection."
      },
      "after": "35c3d6bc179fd6d6",
      "date": 1684756870514
    },
    {
      "type": "edit",
      "id": "4f203ca680cd38be",
      "item": {
        "type": "paragraph",
        "id": "4f203ca680cd38be",
        "text": "> Cookies set with the \"Secure\" keyword will only be sent by the browser when connecting by a secure means (HTTPS). Apart from that there is no distinction - if \"secure\" is absent, the cookie may be sent over an insecure connection."
      },
      "date": 1684756878196
    },
    {
      "type": "edit",
      "id": "4f203ca680cd38be",
      "item": {
        "type": "markdown",
        "id": "4f203ca680cd38be",
        "text": "> Cookies set with the \"Secure\" keyword will only be sent by the browser when connecting by a secure means (HTTPS). Apart from that there is no distinction - if \"secure\" is absent, the cookie may be sent over an insecure connection."
      },
      "date": 1684756879587
    },
    {
      "type": "edit",
      "id": "35c3d6bc179fd6d6",
      "item": {
        "type": "paragraph",
        "id": "35c3d6bc179fd6d6",
        "text": "Reading cookies via HTTPS that were set using HTTP [https://stackoverflow.com/questions/2163828/reading-cookies-via-https-that-were-set-using-http stackoverflow]"
      },
      "date": 1684756906754
    },
    {
      "type": "add",
      "id": "ed5845bf358b9fd9",
      "item": {
        "type": "paragraph",
        "id": "ed5845bf358b9fd9",
        "text": "> The full federation is only visible when the origin javascript comes from an http site. "
      },
      "after": "8957595bf3410fed",
      "date": 1684757150634
    },
    {
      "type": "edit",
      "id": "ed5845bf358b9fd9",
      "item": {
        "type": "markdown",
        "id": "ed5845bf358b9fd9",
        "text": "> The full federation is only visible when the origin javascript comes from an http site. "
      },
      "date": 1684757151712
    },
    {
      "item": {
        "type": "factory",
        "id": "a4bc35964f5931a6"
      },
      "id": "a4bc35964f5931a6",
      "type": "add",
      "after": "b17ba77324a12648",
      "date": 1684757183585
    },
    {
      "id": "a4bc35964f5931a6",
      "type": "move",
      "order": [
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648"
      ],
      "date": 1684757190356
    },
    {
      "type": "edit",
      "id": "a4bc35964f5931a6",
      "item": {
        "type": "reference",
        "id": "a4bc35964f5931a6",
        "site": "glossary.asia.wiki.org",
        "slug": "origin",
        "title": "Origin",
        "text": "The Origin is the site from which we started browsing the federated wiki within a given tab. The origin is first among equals wielding some unexpected power over our experience."
      },
      "date": 1684757192826
    },
    {
      "type": "edit",
      "id": "8957595bf3410fed",
      "item": {
        "type": "paragraph",
        "id": "8957595bf3410fed",
        "text": "⇒ add full internet toggle to footer #294 [https://github.com/fedwiki/wiki-client/pull/294 github]"
      },
      "date": 1684757268398
    },
    {
      "type": "add",
      "id": "1526c0ad1460a298",
      "item": {
        "type": "paragraph",
        "id": "1526c0ad1460a298",
        "text": "[[Dave Mason]]"
      },
      "after": "b17ba77324a12648",
      "date": 1684758160127
    },
    {
      "type": "edit",
      "id": "1526c0ad1460a298",
      "item": {
        "type": "paragraph",
        "id": "1526c0ad1460a298",
        "text": "⇒ [[Dave Mason]]"
      },
      "date": 1684758168107
    },
    {
      "type": "add",
      "id": "382ea9b906e170ea",
      "item": {
        "type": "paragraph",
        "id": "382ea9b906e170ea",
        "text": "currying"
      },
      "after": "b17ba77324a12648",
      "date": 1684758201578
    },
    {
      "type": "edit",
      "id": "382ea9b906e170ea",
      "item": {
        "type": "paragraph",
        "id": "382ea9b906e170ea",
        "text": "currying: gypsydave5 — 15.11.2021 13:14\n@Garklein - not by default (afaik) @Dave Mason has extended Pharo to include currying and other FP ideas https://github.com/dvmason/Pharo-Functional."
      },
      "date": 1684758273634
    },
    {
      "type": "edit",
      "id": "382ea9b906e170ea",
      "item": {
        "type": "paragraph",
        "id": "382ea9b906e170ea",
        "text": "currying: gypsydave5 — [https://discord.com/channels/223421264751099906/305208145020715019/909778402943316008 discord]\n@Garklein - not by default (afaik) @Dave Mason has extended Pharo to include currying and other FP ideas https://github.com/dvmason/Pharo-Functional."
      },
      "date": 1684758310895
    },
    {
      "type": "edit",
      "id": "1526c0ad1460a298",
      "item": {
        "type": "paragraph",
        "id": "1526c0ad1460a298",
        "text": "⇒ [[Dave Mason]]: [https://github.com/dvmason/Pharo-Functional github]"
      },
      "date": 1684758332790
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — 09.05.2023 15:56\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language.What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\nhttps://github.com/NikolaySuslov/krestianstvo-electric"
      },
      "date": 1684758549628
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — 09.05.2023 15:56\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language.What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "date": 1684758563911
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord] [[2023-05-09]] 15:56\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language.What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "date": 1684758847870
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — [[2023-05-09]] 15:56 [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord]\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language.What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "date": 1684758866583
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — [[2023-05-09]] 15:56 [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord]\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language. What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "date": 1684758893271
    },
    {
      "item": {
        "type": "factory",
        "id": "eb6611315dca193a"
      },
      "id": "eb6611315dca193a",
      "type": "add",
      "after": "b98edaeeeeba97da",
      "date": 1684759068953
    },
    {
      "type": "edit",
      "id": "eb6611315dca193a",
      "item": {
        "type": "paragraph",
        "id": "eb6611315dca193a",
        "text": "⇒ [[Clojure]] is a dialect of Lisp that runs on the JVM."
      },
      "date": 1684759082114
    },
    {
      "type": "edit",
      "id": "eb6611315dca193a",
      "item": {
        "type": "paragraph",
        "id": "eb6611315dca193a",
        "text": "⇒ [[Clojure]] is a dialect of Lisp that runs on the JVM. [https://hub.docker.com/_/clojure docker]"
      },
      "date": 1684759103490
    },
    {
      "type": "add",
      "id": "6fdbcb73f3f76eb8",
      "item": {
        "type": "paragraph",
        "id": "6fdbcb73f3f76eb8",
        "text": "Point-free programming in Smalltalk"
      },
      "after": "1526c0ad1460a298",
      "date": 1684759137743
    },
    {
      "type": "edit",
      "id": "6fdbcb73f3f76eb8",
      "item": {
        "type": "paragraph",
        "id": "6fdbcb73f3f76eb8",
        "text": "Point-free programming in Smalltalk [https://smalltalkthoughts.blogspot.com/2011/08/point-free-programming-in-smalltalk.html post]"
      },
      "date": 1684759154146
    },
    {
      "type": "edit",
      "id": "6fdbcb73f3f76eb8",
      "item": {
        "type": "paragraph",
        "id": "6fdbcb73f3f76eb8",
        "text": "⇒ [[Niko Schwarz]]: Point-free programming in Smalltalk [https://smalltalkthoughts.blogspot.com/2011/08/point-free-programming-in-smalltalk.html post]"
      },
      "date": 1684759196561
    },
    {
      "type": "edit",
      "id": "b98edaeeeeba97da",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[Nikolai Suslov]] — [[2023-05-09]] 15:56 [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord]\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language. What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "date": 1684759490984
    },
    {
      "item": {
        "type": "factory",
        "id": "53012f4bba7634f6"
      },
      "id": "53012f4bba7634f6",
      "type": "add",
      "after": "eb6611315dca193a",
      "date": 1684759604971
    },
    {
      "type": "edit",
      "id": "53012f4bba7634f6",
      "item": {
        "type": "pagefold",
        "id": "53012f4bba7634f6",
        "text": "~"
      },
      "date": 1684759608367
    },
    {
      "item": {
        "type": "factory",
        "id": "d28a4161529f677b"
      },
      "id": "d28a4161529f677b",
      "type": "add",
      "after": "53012f4bba7634f6",
      "date": 1684759616634
    },
    {
      "type": "edit",
      "id": "d28a4161529f677b",
      "item": {
        "type": "paragraph",
        "id": "d28a4161529f677b",
        "text": "⇒ [[Elm and Vite]]"
      },
      "date": 1684759625039
    },
    {
      "id": "eb6611315dca193a",
      "type": "move",
      "order": [
        "53012f4bba7634f6",
        "d28a4161529f677b",
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "eb6611315dca193a"
      ],
      "date": 1684761293634
    },
    {
      "id": "d28a4161529f677b",
      "type": "move",
      "order": [
        "53012f4bba7634f6",
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "eb6611315dca193a",
        "d28a4161529f677b"
      ],
      "date": 1684761310091
    },
    {
      "id": "d28a4161529f677b",
      "type": "move",
      "order": [
        "53012f4bba7634f6",
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "d28a4161529f677b",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "eb6611315dca193a"
      ],
      "date": 1684761355120
    },
    {
      "id": "53012f4bba7634f6",
      "type": "move",
      "order": [
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "d28a4161529f677b",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "eb6611315dca193a",
        "53012f4bba7634f6"
      ],
      "date": 1684761365511
    },
    {
      "item": {
        "type": "factory",
        "id": "d9e2ffb9a092f060"
      },
      "id": "d9e2ffb9a092f060",
      "type": "add",
      "after": "53012f4bba7634f6",
      "date": 1684761377228
    },
    {
      "type": "edit",
      "id": "d9e2ffb9a092f060",
      "item": {
        "type": "roster",
        "id": "d9e2ffb9a092f060",
        "text": "elm.dreyeck.ch"
      },
      "date": 1684761380274
    },
    {
      "id": "d9e2ffb9a092f060",
      "type": "move",
      "order": [
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "d28a4161529f677b",
        "d9e2ffb9a092f060",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "eb6611315dca193a",
        "53012f4bba7634f6"
      ],
      "date": 1684761385883
    },
    {
      "id": "b98edaeeeeba97da",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b98edaeeeeba97da",
        "text": "⇒ [[NikolaiSuslov]] — [[2023-05-09]] 15:56 [https://discord.com/channels/694586717247635488/984210689503662140/1105493613590356058 discord]\nHello all Croquet lovers! Want to share an early prototype of implementing the Croquet VM in the novel reactive DSL Electric - Clojure programming language. What is already intriguing, that in <200 LoC mostly all parts of the classic Croquet VM (VWF reference implementation) are working, including Reflector server, Virtual Time, Future message sending etc. VM is distributed in a network-transparent single Electric application as a streaming DAG.\n[https://github.com/NikolaySuslov/krestianstvo-electric github]"
      },
      "after": "6fdbcb73f3f76eb8",
      "attribution": {
        "page": "2023-05-09"
      },
      "date": 1684761785763
    },
    {
      "id": "53012f4bba7634f6",
      "type": "move",
      "order": [
        "5f21e39444857879",
        "6dff3e57c205af44",
        "d5901e6a7dec5b57",
        "1c731eff66c5df94",
        "e53d9917d4c0346d",
        "8957595bf3410fed",
        "ed5845bf358b9fd9",
        "a4bc35964f5931a6",
        "7afac1148afaf0c4",
        "21b0c4a439e8e064",
        "e067d51d82b8d6b9",
        "209ff6fd387edd77",
        "cb074fd8fb7f4e66",
        "9440a09eef8d6036",
        "35c3d6bc179fd6d6",
        "4f203ca680cd38be",
        "a91310901f5882fa",
        "434ee8cdc7076b80",
        "bf2dc4002dc2ce51",
        "bbd14b82cc202999",
        "b17ba77324a12648",
        "d28a4161529f677b",
        "d9e2ffb9a092f060",
        "382ea9b906e170ea",
        "1526c0ad1460a298",
        "6fdbcb73f3f76eb8",
        "53012f4bba7634f6",
        "b98edaeeeeba97da",
        "eb6611315dca193a"
      ],
      "date": 1684761798635
    }
  ]
}