{
  "title": "Context-Free Parsing",
  "story": [
    {
      "type": "paragraph",
      "id": "c15e7bf48a1f0b8a",
      "text": "All efficient algorithms for parsing context-free grammars make use of some kind of well-formed substring table. Earley's algorithm (1970) is perhaps the best-known example. The algorithm builds up a vector of parse lists, where each entry in a parse list is an item – a production rule with one indicator showing how much of the righthand side has been parsed, and another saying where the parse started. "
    },
    {
      "type": "paragraph",
      "id": "ee8299765fabdadb",
      "text": "Kay (1980) introduced a similar data structure called a chart, along with a family of parsing algorithms that operate on the chart. Chart parsing is described in virtually all recent texts on natural language processing; for example, Winograd (1983) devotes 19 pages to the topic. It is part of the \"folklore\" on parsing that these algorithms can be thought of as tabular (i.e., memoized) versions of corresponding simpler algorithms. Earley (1970) himself mentions it, and Shieber (1989) gives a general abstract parsing strategy, and then proves that Earley's algorithm can be derived by suitable constraints on control of the strategy."
    },
    {
      "type": "paragraph",
      "id": "7b8813ea31c52194",
      "text": "This paper's contribution is a concrete demonstration of just how direct the correspondence is between the simple and the efficient algorithm. We present a simple parser which, when memoized, performs the same calculations as Earley's algorithm."
    },
    {
      "type": "pagefold",
      "id": "ee8cca142aec2925",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "90e3becd881883aa",
      "text": "NORVIG, Peter, 1991. Techniques for automatic memoization with applications to context-free parsing. Computational Linguistics. 1991. Vol. 17, no. 1, p. 91–98. \n"
    },
    {
      "type": "paragraph",
      "id": "682312866b5a0393",
      "text": "Kay, M. (1980). \"Algorithm schemata and data structures in syntactic processing.\" In Proceedings, Symposium on Text Processing, Nobel Academy."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Context-Free Parsing",
        "story": []
      },
      "date": 1680005009480
    },
    {
      "item": {
        "type": "factory",
        "id": "c15e7bf48a1f0b8a"
      },
      "id": "c15e7bf48a1f0b8a",
      "type": "add",
      "date": 1680005016062
    },
    {
      "item": {
        "type": "factory",
        "id": "ee8cca142aec2925"
      },
      "id": "ee8cca142aec2925",
      "type": "add",
      "after": "c15e7bf48a1f0b8a",
      "date": 1680005018468
    },
    {
      "type": "edit",
      "id": "c15e7bf48a1f0b8a",
      "item": {
        "type": "paragraph",
        "id": "c15e7bf48a1f0b8a",
        "text": "All efficient algorithms for parsing context-free grammars make use of some kind of well-formed substring table. Earley's algorithm (1970) is perhaps the best-known example. The algorithm builds up a vector of parse lists, where each entry in a parse list is an item -- a production rule with one indicator showing how much of the righthand side has been parsed, and another saying where the parse started. Kay (1980) introduced a similar data structure called a chart, along with a family of parsing algorithms that operate on the chart. Chart parsing is described in virtually all recent texts on natural language processing; for example, Winograd (1983) devotes 19 pages to the topic. It is part of the \"folklore\" on parsing that these algorithms can be thought of as tabular (i.e., memoized) versions of corresponding simpler algorithms. Earley (1970) himself mentions it, and Shieber (1989) gives a general abstract parsing strategy, and then proves that Earley's algorithm can be derived by suitable constraints on control of the strategy"
      },
      "date": 1680005019645
    },
    {
      "type": "edit",
      "id": "ee8cca142aec2925",
      "item": {
        "type": "pagefold",
        "id": "ee8cca142aec2925",
        "text": "~"
      },
      "date": 1680005021235
    },
    {
      "id": "90e3becd881883aa",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "90e3becd881883aa",
        "text": "NORVIG, Peter, 1991. Techniques for automatic memoization with applications to context-free parsing. Computational Linguistics. 1991. Vol. 17, no. 1, p. 91–98. \n"
      },
      "after": "ee8cca142aec2925",
      "attribution": {
        "page": "Memoization"
      },
      "date": 1680005026365
    },
    {
      "type": "edit",
      "id": "c15e7bf48a1f0b8a",
      "item": {
        "type": "paragraph",
        "id": "c15e7bf48a1f0b8a",
        "text": "All efficient algorithms for parsing context-free grammars make use of some kind of well-formed substring table. Earley's algorithm (1970) is perhaps the best-known example. The algorithm builds up a vector of parse lists, where each entry in a parse list is an item – a production rule with one indicator showing how much of the righthand side has been parsed, and another saying where the parse started. Kay (1980) introduced a similar data structure called a chart, along with a family of parsing algorithms that operate on the chart. Chart parsing is described in virtually all recent texts on natural language processing; for example, Winograd (1983) devotes 19 pages to the topic. It is part of the \"folklore\" on parsing that these algorithms can be thought of as tabular (i.e., memoized) versions of corresponding simpler algorithms. Earley (1970) himself mentions it, and Shieber (1989) gives a general abstract parsing strategy, and then proves that Earley's algorithm can be derived by suitable constraints on control of the strategy"
      },
      "date": 1680005054318
    },
    {
      "item": {
        "type": "factory",
        "id": "682312866b5a0393"
      },
      "id": "682312866b5a0393",
      "type": "add",
      "after": "90e3becd881883aa",
      "date": 1680005088959
    },
    {
      "type": "edit",
      "id": "682312866b5a0393",
      "item": {
        "type": "paragraph",
        "id": "682312866b5a0393",
        "text": "Kay, M. (1980). \"Algorithm schemata and data structures in syntactic processing.\" In Proceedings, Symposium on Text Processing, Nobel Academy."
      },
      "date": 1680005091675
    },
    {
      "type": "edit",
      "id": "c15e7bf48a1f0b8a",
      "item": {
        "type": "paragraph",
        "id": "c15e7bf48a1f0b8a",
        "text": "All efficient algorithms for parsing context-free grammars make use of some kind of well-formed substring table. Earley's algorithm (1970) is perhaps the best-known example. The algorithm builds up a vector of parse lists, where each entry in a parse list is an item – a production rule with one indicator showing how much of the righthand side has been parsed, and another saying where the parse started. "
      },
      "date": 1680005102743
    },
    {
      "type": "add",
      "id": "ee8299765fabdadb",
      "item": {
        "type": "paragraph",
        "id": "ee8299765fabdadb",
        "text": "Kay (1980) introduced a similar data structure called a chart, along with a family of parsing algorithms that operate on the chart. Chart parsing is described in virtually all recent texts on natural language processing; for example, Winograd (1983) devotes 19 pages to the topic. It is part of the \"folklore\" on parsing that these algorithms can be thought of as tabular (i.e., memoized) versions of corresponding simpler algorithms. Earley (1970) himself mentions it, and Shieber (1989) gives a general abstract parsing strategy, and then proves that Earley's algorithm can be derived by suitable constraints on control of the strategy"
      },
      "after": "c15e7bf48a1f0b8a",
      "date": 1680005103534
    },
    {
      "type": "edit",
      "id": "ee8299765fabdadb",
      "item": {
        "type": "paragraph",
        "id": "ee8299765fabdadb",
        "text": "Kay (1980) introduced a similar data structure called a chart, along with a family of parsing algorithms that operate on the chart. Chart parsing is described in virtually all recent texts on natural language processing; for example, Winograd (1983) devotes 19 pages to the topic. It is part of the \"folklore\" on parsing that these algorithms can be thought of as tabular (i.e., memoized) versions of corresponding simpler algorithms. Earley (1970) himself mentions it, and Shieber (1989) gives a general abstract parsing strategy, and then proves that Earley's algorithm can be derived by suitable constraints on control of the strategy."
      },
      "date": 1680005194598
    },
    {
      "type": "add",
      "id": "7b8813ea31c52194",
      "item": {
        "type": "paragraph",
        "id": "7b8813ea31c52194",
        "text": "This paper's contribution is a concrete demonstration of just how direct the correspondence is between the simple and the efficient algorithm. We present a simple parser which, when memoized, performs the same calculations as Earley's algorithm."
      },
      "after": "ee8299765fabdadb",
      "date": 1680005197648
    }
  ]
}