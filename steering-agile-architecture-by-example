{
  "title": "Steering Agile Architecture by Example",
  "story": [
    {
      "type": "markdown",
      "id": "09a880c47cdb5fa1",
      "text": "[https://lepiter.io/feenk/steering-agile-architecture-by-example--th-e2p6aps2brbby94deek31xqxh/ page] – an illustration of what \"understanding the system without reading code\" means in practice. \n"
    },
    {
      "type": "markdown",
      "id": "cb920d31bfa70822",
      "text": "[[Konrad Hinsen]], [https://discord.com/channels/729445214812504107/771616712822751252/880389407625052171 discord]:"
    },
    {
      "type": "markdown",
      "id": "ce64cf85c4d8309f",
      "text": "> What you describe about [[openEdx]] is something I have seen frequently in Python code bases: people end up implementing an informal DSL through conventions about strings and variable/class names. That's impossible to analyze with generic Python tools, but very well possible with custom tools."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Steering Agile Architecture by Example",
        "story": []
      },
      "date": 1630066319039
    },
    {
      "item": {
        "type": "factory",
        "id": "09a880c47cdb5fa1"
      },
      "id": "09a880c47cdb5fa1",
      "type": "add",
      "date": 1630066325684
    },
    {
      "type": "edit",
      "id": "09a880c47cdb5fa1",
      "item": {
        "type": "markdown",
        "id": "09a880c47cdb5fa1",
        "text": "https://lepiter.io/feenk/steering-agile-architecture-by-example--th-e2p6aps2brbby94deek31xqxh/"
      },
      "date": 1630066328270
    },
    {
      "type": "edit",
      "id": "09a880c47cdb5fa1",
      "item": {
        "type": "markdown",
        "id": "09a880c47cdb5fa1",
        "text": "[https://lepiter.io/feenk/steering-agile-architecture-by-example--th-e2p6aps2brbby94deek31xqxh/ page] – an illustration of what \"understanding the system without reading code\" means in practice. What you describe about openEdx is something I have seen frequently in Python code bases: people end up implementing an informal DSL through conventions about strings and variable/class names. That's impossible to analyze with generic Python tools, but very well possible with custom tools."
      },
      "date": 1630066372407
    },
    {
      "type": "edit",
      "id": "09a880c47cdb5fa1",
      "item": {
        "type": "markdown",
        "id": "09a880c47cdb5fa1",
        "text": "[https://lepiter.io/feenk/steering-agile-architecture-by-example--th-e2p6aps2brbby94deek31xqxh/ page] – an illustration of what \"understanding the system without reading code\" means in practice. \n"
      },
      "date": 1630066396393
    },
    {
      "type": "add",
      "id": "ce64cf85c4d8309f",
      "item": {
        "type": "markdown",
        "id": "ce64cf85c4d8309f",
        "text": "> What you describe about openEdx is something I have seen frequently in Python code bases: people end up implementing an informal DSL through conventions about strings and variable/class names. That's impossible to analyze with generic Python tools, but very well possible with custom tools."
      },
      "after": "09a880c47cdb5fa1",
      "date": 1630066401797
    },
    {
      "type": "add",
      "id": "cb920d31bfa70822",
      "item": {
        "type": "markdown",
        "id": "cb920d31bfa70822",
        "text": "[[Konrad Hinsen]]"
      },
      "after": "09a880c47cdb5fa1",
      "date": 1630066414102
    },
    {
      "type": "edit",
      "id": "cb920d31bfa70822",
      "item": {
        "type": "markdown",
        "id": "cb920d31bfa70822",
        "text": "[[Konrad Hinsen]], [https://discord.com/channels/729445214812504107/771616712822751252/880389407625052171 discord]:"
      },
      "date": 1630066441425
    },
    {
      "type": "edit",
      "id": "ce64cf85c4d8309f",
      "item": {
        "type": "markdown",
        "id": "ce64cf85c4d8309f",
        "text": "> What you describe about [[openEdx]] is something I have seen frequently in Python code bases: people end up implementing an informal DSL through conventions about strings and variable/class names. That's impossible to analyze with generic Python tools, but very well possible with custom tools."
      },
      "date": 1630066471072
    }
  ]
}