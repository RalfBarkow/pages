{
  "title": "6",
  "story": [
    {
      "type": "paragraph",
      "id": "cecdbde93db4cebd",
      "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $ [⇒ [[void]]], and a payload whose [[Shape]] is [sample context]."
    },
    {
      "type": "image",
      "id": "3dfd250c99061884",
      "text": "Hoon-Funktion",
      "size": "wide",
      "width": 419,
      "height": 298,
      "url": "/assets/plugins/image/4505bb0c92a4df319ff798c1b9e42040.jpg"
    },
    {
      "type": "reference",
      "id": "420a36963428ed48",
      "site": "wiki.ralfbarkow.ch",
      "slug": "context",
      "title": "Context",
      "text": "The [[Arrangement]] axiom gives permission to [[take]] multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
    },
    {
      "type": "paragraph",
      "id": "9755c59fc289329c",
      "text": "The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
    },
    {
      "type": "graphviz",
      "id": "8628e14d2779975f",
      "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=white penwidth=3 color=white fontname=\"comic-sans-ms\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightgreen]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTATIC\n\nstrict digraph {rankdir=LR\n\n\n\n\n\nnode [style=filled fillcolor=black penwidth=3 color=white fontname=\"comic-sans-ms\"]\n\"Preview\nNext\nDiagram\nTemplate\"\nnode [style=filled fillcolor=lightgreen]\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white]\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"Preview\nNext\nDiagram\nTemplate\" -> \"First\nLink\"\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Agile\"\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"Preview\nNext\nDiagram\nTemplate\"}",
      "dot": "strict digraph {rankdir=LR\n\n\n\n\n\nnode [style=filled fillcolor=white penwidth=3 color=white fontname=\"comic-sans-ms\"]\n\"6\"\nnode [style=filled fillcolor=lightgreen]\nnode [style=filled fillcolor=white penwidth=3 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"6\"\n\"3\" -> \"6\"\n\"2024-02-05\" -> \"6\"}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"210pt\" height=\"98pt\"\n viewBox=\"0.00 0.00 210.19 98.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 94)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-94 206.19,-94 206.19,4 -4,4\"/>\n<!-- 6 -->\n<g id=\"node1\" class=\"node\">\n<title>6</title>\n<ellipse fill=\"white\" stroke=\"white\" stroke-width=\"3\" cx=\"175.19\" cy=\"-45\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"175.19\" y=\"-40.8\" font-family=\"comic-sans-ms\" font-size=\"14.00\">6</text>\n</g>\n<!-- 3 -->\n<g id=\"node2\" class=\"node\">\n<title>3</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" stroke-dasharray=\"1,5\" cx=\"56.1\" cy=\"-72\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"56.1\" y=\"-67.8\" font-family=\"comic-sans-ms\" font-size=\"14.00\">3</text>\n</g>\n<!-- 3&#45;&gt;6 -->\n<g id=\"edge1\" class=\"edge\">\n<title>3&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"1,5\" d=\"M83.08,-66.01C99.15,-62.3 120.02,-57.49 137.73,-53.41\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"138.32,-56.63 147.28,-50.98 136.75,-49.81 138.32,-56.63\"/>\n</g>\n<!-- 2024&#45;02&#45;05 -->\n<g id=\"node3\" class=\"node\">\n<title>2024&#45;02&#45;05</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" stroke-dasharray=\"1,5\" cx=\"56.1\" cy=\"-18\" rx=\"56.1\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"56.1\" y=\"-13.8\" font-family=\"comic-sans-ms\" font-size=\"14.00\">2024&#45;02&#45;05</text>\n</g>\n<!-- 2024&#45;02&#45;05&#45;&gt;6 -->\n<g id=\"edge2\" class=\"edge\">\n<title>2024&#45;02&#45;05&#45;&gt;6</title>\n<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"1,5\" d=\"M103.71,-28.75C114.98,-31.35 126.86,-34.09 137.59,-36.56\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"136.75,-40.19 147.28,-39.03 138.32,-33.37 136.75,-40.19\"/>\n</g>\n</g>\n</svg>\n"
    },
    {
      "type": "pagefold",
      "id": "509450e495c4a352",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "364ee02bede04321",
      "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. [[Urbit]]: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "6",
        "story": []
      },
      "date": 1682866249601
    },
    {
      "item": {
        "type": "factory",
        "id": "d1ff2b7172ba335c"
      },
      "id": "d1ff2b7172ba335c",
      "type": "add",
      "date": 1682866250842
    },
    {
      "type": "edit",
      "id": "d1ff2b7172ba335c",
      "item": {
        "type": "paragraph",
        "id": "d1ff2b7172ba335c",
        "text": "[[14]]"
      },
      "date": 1682866333018
    },
    {
      "type": "remove",
      "id": "d1ff2b7172ba335c",
      "date": 1682867723811
    },
    {
      "item": {
        "type": "factory",
        "id": "0276bb88a4a63039"
      },
      "id": "0276bb88a4a63039",
      "type": "add",
      "date": 1682867813347
    },
    {
      "type": "edit",
      "id": "0276bb88a4a63039",
      "item": {
        "type": "paragraph",
        "id": "0276bb88a4a63039",
        "text": "[[14]]"
      },
      "date": 1682867818518
    },
    {
      "type": "remove",
      "id": "0276bb88a4a63039",
      "date": 1682868004610
    },
    {
      "item": {
        "type": "factory",
        "id": "e854627096204a03"
      },
      "id": "e854627096204a03",
      "type": "add",
      "date": 1682868497114
    },
    {
      "type": "edit",
      "id": "e854627096204a03",
      "item": {
        "type": "paragraph",
        "id": "e854627096204a03",
        "text": "[[3]]"
      },
      "date": 1682868499587
    },
    {
      "type": "remove",
      "id": "e854627096204a03",
      "date": 1682868860987
    },
    {
      "item": {
        "type": "factory",
        "id": "3dfd250c99061884"
      },
      "id": "3dfd250c99061884",
      "type": "add",
      "date": 1682872047403
    },
    {
      "id": "8628e14d2779975f",
      "type": "add",
      "item": {
        "type": "graphviz",
        "id": "8628e14d2779975f",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=white penwidth=3 color=white fontname=\"comic-sans-ms\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightgreen]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTATIC\n\nstrict digraph {rankdir=LR\n\n\n\n\n\nnode [style=filled fillcolor=black penwidth=3 color=white fontname=\"comic-sans-ms\"]\n\"Preview\nNext\nDiagram\nTemplate\"\nnode [style=filled fillcolor=lightgreen]\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white]\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"Preview\nNext\nDiagram\nTemplate\" -> \"First\nLink\"\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Agile\"\n\"Preview\nNext\nDiagram\nTemplate\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"Preview\nNext\nDiagram\nTemplate\"}",
        "dot": "strict digraph {rankdir=LR\n\n\n\n\n\nnode [style=filled fillcolor=white penwidth=3 color=white fontname=\"comic-sans-ms\"]\n\"4\"\nnode [style=filled fillcolor=lightgreen]\nnode [style=filled fillcolor=white penwidth=3 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"4\"\n\"2\" -> \"4\"}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.44.0 (20200518.1210)\n -->\n<!-- Pages: 1 -->\n<svg width=\"152pt\" height=\"44pt\"\n viewBox=\"0.00 0.00 152.00 44.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 40)\">\n<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-40 148,-40 148,4 -4,4\"/>\n<!-- 4 -->\n<g id=\"node1\" class=\"node\">\n<title>4</title>\n<ellipse fill=\"white\" stroke=\"white\" stroke-width=\"3\" cx=\"117\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"117\" y=\"-13.8\" font-family=\"comic-sans-ms\" font-size=\"14.00\">4</text>\n</g>\n<!-- 2 -->\n<g id=\"node2\" class=\"node\">\n<title>2</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" stroke-dasharray=\"1,5\" cx=\"27\" cy=\"-18\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"27\" y=\"-13.8\" font-family=\"comic-sans-ms\" font-size=\"14.00\">2</text>\n</g>\n<!-- 2&#45;&gt;4 -->\n<g id=\"edge1\" class=\"edge\">\n<title>2&#45;&gt;4</title>\n<path fill=\"none\" stroke=\"black\" stroke-dasharray=\"1,5\" d=\"M54.4,-18C62.39,-18 71.31,-18 79.82,-18\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"79.92,-21.5 89.92,-18 79.92,-14.5 79.92,-21.5\"/>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1682872060224
    },
    {
      "type": "fork",
      "site": "uvp.viki.wiki",
      "date": 1707121363161
    },
    {
      "type": "edit",
      "id": "3dfd250c99061884",
      "item": {
        "type": "image",
        "id": "3dfd250c99061884",
        "text": "Hoon-Funktion",
        "size": "wide",
        "width": 419,
        "height": 298,
        "url": "/assets/plugins/image/4505bb0c92a4df319ff798c1b9e42040.jpg"
      },
      "date": 1707121363162
    },
    {
      "id": "3dfd250c99061884",
      "type": "move",
      "order": [
        "3dfd250c99061884",
        "8628e14d2779975f"
      ],
      "date": 1707121373217
    },
    {
      "id": "cecdbde93db4cebd",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "cecdbde93db4cebd",
        "text": "A Hoon function (or [[Gate]]) is a core with one arm, whose name is the [[empty]] symbol $ [⇒ [[void]]], and a payload whose [[Shape]] is [sample context]."
      },
      "attribution": {
        "page": "2024-02-05"
      },
      "date": 1707121404995
    },
    {
      "id": "420a36963428ed48",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "420a36963428ed48",
        "site": "wiki.ralfbarkow.ch",
        "slug": "context",
        "title": "Context",
        "text": "The [[Arrangement]] axiom gives permission to [[take]] multiple forms out of the interior [[Content]] of a [[Frame]] and [[put]] them into separate frames, so long as we carry their [[Context]] — i.e. their [[Frame Type]], (A [...]) — along with them."
      },
      "after": "3dfd250c99061884",
      "attribution": {
        "page": "2024-02-05"
      },
      "date": 1707121410328
    },
    {
      "id": "9755c59fc289329c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9755c59fc289329c",
        "text": "The [[Context]] is the subject in which the [[Gate]] was defined; the sample is the argument. To call the gate on an argument x, replace the sample (at tree address [[6]] in the core) with x, then compute the arm. (Of course, we are not mutating the [[Noun]], but creating a mutant [[copy]].)"
      },
      "after": "420a36963428ed48",
      "attribution": {
        "page": "2024-02-05"
      },
      "date": 1707121413928
    },
    {
      "item": {
        "type": "factory",
        "id": "509450e495c4a352"
      },
      "id": "509450e495c4a352",
      "type": "add",
      "after": "8628e14d2779975f",
      "date": 1707121423977
    },
    {
      "type": "edit",
      "id": "509450e495c4a352",
      "item": {
        "type": "pagefold",
        "id": "509450e495c4a352",
        "text": "~"
      },
      "date": 1707121428196
    },
    {
      "id": "364ee02bede04321",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "364ee02bede04321",
        "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. Urbit: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
      },
      "after": "509450e495c4a352",
      "attribution": {
        "page": "2024-02-05"
      },
      "date": 1707121433205
    },
    {
      "type": "edit",
      "id": "364ee02bede04321",
      "item": {
        "type": "paragraph",
        "id": "364ee02bede04321",
        "text": "YARVIN, Curtis, MONK, Philip, DYUDIN, Anton and PASCO, Raymond, 2016. [[Urbit]]: A solid-state interpreter. White Paper, May. 2016. Vol. 26. [https://media.urbit.org/whitepaper.pdf pdf] [Accessed 5 February 2024]. \n"
      },
      "date": 1707121476722
    }
  ]
}