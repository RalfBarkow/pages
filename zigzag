{
  "title": "ZigZag",
  "story": [
    {
      "type": "markdown",
      "id": "363a8efc463b27fb",
      "text": "[[Non-Distructive Development]] brought us here\n> The algorithm above sounds like an XOR doubly-linked list (https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/).   This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( http://gzigzag.sourceforge.net/nutshell.html and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n\n"
    },
    {
      "type": "markdown",
      "id": "9637820c5e409fe9",
      "text": "# What is ZigZag?\n"
    },
    {
      "type": "markdown",
      "id": "2c94a3d69a103359",
      "text": "ZigZag is a way of representing the structure of information. Compared with the previous ways, ZigZag is very different, for example the concepts of 'file', 'folder' and 'application' are abandoned. Because of this a bit of fantasy, creativity and an ability to forget previous knowledge is needed in order to understand ZigZag.\n\nA ZigZag structure consists of cells and dimensions. A cell is the basic unit of information of a ZigZag structure. Cells containing related information can be connected with each other along dimensions, the number of which is unlimited. A ZigZag structure is separate from its visualisation (= the way the data is presented on the screen), which means that a ZigZag structure can have many visualisations designed for different purposes.\n\nEven though a ZigZag structure is separate from its visualisation, a ZigZag structure is not separate from other ZigZag structures. Every piece of information stored in a digital device using based on ZigZag is in the same space: the same cells can be connected on several dimensions created for different structures. For example, the cells containing the names of one's relatives can be connected on dimensions created for a family tree structure, an address book structure and a photo album structure. "
    },
    {
      "type": "markdown",
      "id": "765ac9bc9af9455f",
      "text": "# See also\n * [[Zig Zag]], Original at [https://wiki.c2.com/?ZigZag c2.com]\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by [[Ted Nelson]]. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "ZigZag",
        "story": []
      },
      "date": 1627423526580
    },
    {
      "item": {
        "type": "factory",
        "id": "363a8efc463b27fb"
      },
      "id": "363a8efc463b27fb",
      "type": "add",
      "date": 1627423546128
    },
    {
      "type": "edit",
      "id": "363a8efc463b27fb",
      "item": {
        "type": "markdown",
        "id": "363a8efc463b27fb",
        "text": "[[Non-Distructive Development]] brought us here"
      },
      "date": 1627423557248
    },
    {
      "type": "edit",
      "id": "363a8efc463b27fb",
      "item": {
        "type": "markdown",
        "id": "363a8efc463b27fb",
        "text": "[[Non-Distructive Development]] brought us here\n"
      },
      "date": 1627423575788
    },
    {
      "type": "add",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * GZigZag in a Nutshell"
      },
      "after": "363a8efc463b27fb",
      "date": 1627423594767
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page]"
      },
      "date": 1627423603756
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by Ted Nelson. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
      },
      "date": 1627423646945
    },
    {
      "type": "add",
      "id": "9637820c5e409fe9",
      "item": {
        "type": "markdown",
        "id": "9637820c5e409fe9",
        "text": "# What is ZigZag?\n"
      },
      "after": "363a8efc463b27fb",
      "date": 1627423667210
    },
    {
      "type": "add",
      "id": "2c94a3d69a103359",
      "item": {
        "type": "markdown",
        "id": "2c94a3d69a103359",
        "text": "ZigZag is a way of representing the structure of information. Compared with the previous ways, ZigZag is very different, for example the concepts of 'file', 'folder' and 'application' are abandoned. Because of this a bit of fantasy, creativity and an ability to forget previous knowledge is needed in order to understand ZigZag.\n\nA ZigZag structure consists of cells and dimensions. A cell is the basic unit of information of a ZigZag structure. Cells containing related information can be connected with each other along dimensions, the number of which is unlimited. A ZigZag structure is separate from its visualisation (= the way the data is presented on the screen), which means that a ZigZag structure can have many visualisations designed for different purposes.\n\nEven though a ZigZag structure is separate from its visualisation, a ZigZag structure is not separate from other ZigZag structures. Every piece of information stored in a digital device using based on ZigZag is in the same space: the same cells can be connected on several dimensions created for different structures. For example, the cells containing the names of one's relatives can be connected on dimensions created for a family tree structure, an address book structure and a photo album structure. "
      },
      "after": "9637820c5e409fe9",
      "date": 1627423678207
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by [[Ted Nelson]]. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
      },
      "date": 1627423700272
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * [[Zig Zag]]\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by [[Ted Nelson]]. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
      },
      "date": 1627423886057
    },
    {
      "type": "edit",
      "id": "363a8efc463b27fb",
      "item": {
        "type": "markdown",
        "id": "363a8efc463b27fb",
        "text": "[[Non-Distructive Development]] brought us here\n> The algorithm above sounds like an XOR doubly-linked list (https://www.geeksforgeeks.org/xor-linked-list-a-memory-efficient-doubly-linked-list-set-1/).   This also triggered me to dig around a bit to find a link to Ted Nelson's ZigZag from Xanadu ( http://gzigzag.sourceforge.net/nutshell.html and https://wiki.c2.com/?ZigZag ) which has an interesting techno / sociological history about proto-wiki.\n\n"
      },
      "date": 1627424161042
    },
    {
      "item": {
        "type": "factory",
        "id": "0fc16e22b16c6974"
      },
      "id": "0fc16e22b16c6974",
      "type": "add",
      "after": "765ac9bc9af9455f",
      "date": 1627424204908
    },
    {
      "type": "remove",
      "id": "0fc16e22b16c6974",
      "date": 1627424210046
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * [[Zig Zag]] [https://wiki.c2.com/?ZigZag c2.com]\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by [[Ted Nelson]]. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
      },
      "date": 1627424227055
    },
    {
      "type": "edit",
      "id": "765ac9bc9af9455f",
      "item": {
        "type": "markdown",
        "id": "765ac9bc9af9455f",
        "text": "# See also\n * [[Zig Zag]], Original at [https://wiki.c2.com/?ZigZag c2.com]\n * GZigZag in a Nutshell [http://gzigzag.sourceforge.net/nutshell.html page] –  GZigZag is an implementation of ZigZag, an abstraction invented by [[Ted Nelson]]. GZigZag is being developed by Hyperstructure Group at the university of Jyväskylä, Finland, in collaboration with Nelson. "
      },
      "date": 1627424254250
    }
  ]
}