{
  "title": "Tweak",
  "story": [
    {
      "type": "paragraph",
      "id": "ae6fe9b7cf129bbb",
      "text": "Tweak is a media authoring environment for children of all ages."
    },
    {
      "type": "paragraph",
      "id": "24e7db3cd9309981",
      "text": "The latest version of [[Tweak]] is part of [[Croquet]]. "
    },
    {
      "type": "markdown",
      "id": "b219c1d708b0b22e",
      "text": "OriginalTweakMemo [https://web.archive.org/web/20111002012532/http://tweakproject.org/ABOUT/FAQ/OriginalTweakMemo/ wayback]"
    },
    {
      "type": "markdown",
      "id": "589975d14d6f4032",
      "text": "The architecture of [[Tweak]] has been heavily influenced by the experiences with [[Squeak]] and the Squeak user interface framework, [[Morphic]]. At the base of Tweak we find TCAR, the Tweak Core Architecture , on top of which the authoring system is being built. Noticable features of Tweak and TCAR include:\n\n* An asynchronous event architecture. Much of the communication in Tweak is asynchronous, decoupling the system and making it more robust. Fields generate events when they change making it easy to track values asynchronously.\n* Language extensions ensure that Tweak features are easy and conveniently to use. This includes method triggers for specifying which event triggers which methods and other kinds of annotations.\n* Players and Costumes define a viewing architecture which takes the best from Morphic and MVC. The architecture can be used as easily as Morphic but is as flexible as MVC.\n\nTweak is currently under active development; see the Roadmap for details on the work being done. The main goal is currently to get a true Tweak 1.0 out of the door and into the hands of real users. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Tweak",
        "story": []
      },
      "date": 1644310526225
    },
    {
      "item": {
        "type": "factory",
        "id": "ae6fe9b7cf129bbb"
      },
      "id": "ae6fe9b7cf129bbb",
      "type": "add",
      "date": 1644310537510
    },
    {
      "type": "edit",
      "id": "ae6fe9b7cf129bbb",
      "item": {
        "type": "paragraph",
        "id": "ae6fe9b7cf129bbb",
        "text": "Tweak is a media authoring environment for children of all ages."
      },
      "date": 1644310538827
    },
    {
      "item": {
        "type": "factory",
        "id": "24e7db3cd9309981"
      },
      "id": "24e7db3cd9309981",
      "type": "add",
      "after": "ae6fe9b7cf129bbb",
      "date": 1644310568982
    },
    {
      "type": "edit",
      "id": "24e7db3cd9309981",
      "item": {
        "type": "paragraph",
        "id": "24e7db3cd9309981",
        "text": "The latest version of [[Tweak]] is part of [[Croquet]]. "
      },
      "date": 1644310571050
    },
    {
      "item": {
        "type": "factory",
        "id": "b219c1d708b0b22e"
      },
      "id": "b219c1d708b0b22e",
      "type": "add",
      "after": "24e7db3cd9309981",
      "date": 1644310577558
    },
    {
      "type": "edit",
      "id": "b219c1d708b0b22e",
      "item": {
        "type": "markdown",
        "id": "b219c1d708b0b22e",
        "text": "OriginalTweakMemo [wayback](https://web.archive.org/web/20111002012532/http://tweakproject.org/ABOUT/FAQ/OriginalTweakMemo/)"
      },
      "date": 1644310579252
    },
    {
      "item": {
        "type": "factory",
        "id": "589975d14d6f4032"
      },
      "id": "589975d14d6f4032",
      "type": "add",
      "after": "b219c1d708b0b22e",
      "date": 1644310609085
    },
    {
      "type": "edit",
      "id": "589975d14d6f4032",
      "item": {
        "type": "paragraph",
        "id": "589975d14d6f4032",
        "text": "The architecture of Tweak has been heavily influenced by the experiences with Squeak and the Squeak user interface framework, Morphic. At the base of Tweak we find TCAR, the Tweak Core Architecture , on top of which the authoring system is being built. Noticable features of Tweak and TCAR include:\n\n    An asynchronous event architecture. Much of the communication in Tweak is asynchronous, decoupling the system and making it more robust. Fields generate events when they change making it easy to track values asynchronously.\n    Language extensions ensure that Tweak features are easy and conveniently to use. This includes method triggers for specifying which event triggers which methods and other kinds of annotations.\n    Players and Costumes define a viewing architecture which takes the best from Morphic and MVC. The architecture can be used as easily as Morphic but is as flexible as MVC.\n\nTweak is currently under active development; see the Roadmap for details on the work being done. The main goal is currently to get a true Tweak 1.0 out of the door and into the hands of real users. "
      },
      "date": 1644310611946
    },
    {
      "type": "edit",
      "id": "589975d14d6f4032",
      "item": {
        "type": "paragraph",
        "id": "589975d14d6f4032",
        "text": "The architecture of Tweak has been heavily influenced by the experiences with Squeak and the Squeak user interface framework, Morphic. At the base of Tweak we find TCAR, the Tweak Core Architecture , on top of which the authoring system is being built. Noticable features of Tweak and TCAR include:\n\n* An asynchronous event architecture. Much of the communication in Tweak is asynchronous, decoupling the system and making it more robust. Fields generate events when they change making it easy to track values asynchronously.\n* Language extensions ensure that Tweak features are easy and conveniently to use. This includes method triggers for specifying which event triggers which methods and other kinds of annotations.\n* Players and Costumes define a viewing architecture which takes the best from Morphic and MVC. The architecture can be used as easily as Morphic but is as flexible as MVC.\n\nTweak is currently under active development; see the Roadmap for details on the work being done. The main goal is currently to get a true Tweak 1.0 out of the door and into the hands of real users. "
      },
      "date": 1644310643091
    },
    {
      "type": "edit",
      "id": "589975d14d6f4032",
      "item": {
        "type": "markdown",
        "id": "589975d14d6f4032",
        "text": "The architecture of Tweak has been heavily influenced by the experiences with Squeak and the Squeak user interface framework, Morphic. At the base of Tweak we find TCAR, the Tweak Core Architecture , on top of which the authoring system is being built. Noticable features of Tweak and TCAR include:\n\n* An asynchronous event architecture. Much of the communication in Tweak is asynchronous, decoupling the system and making it more robust. Fields generate events when they change making it easy to track values asynchronously.\n* Language extensions ensure that Tweak features are easy and conveniently to use. This includes method triggers for specifying which event triggers which methods and other kinds of annotations.\n* Players and Costumes define a viewing architecture which takes the best from Morphic and MVC. The architecture can be used as easily as Morphic but is as flexible as MVC.\n\nTweak is currently under active development; see the Roadmap for details on the work being done. The main goal is currently to get a true Tweak 1.0 out of the door and into the hands of real users. "
      },
      "date": 1644310644046
    },
    {
      "type": "edit",
      "id": "b219c1d708b0b22e",
      "item": {
        "type": "markdown",
        "id": "b219c1d708b0b22e",
        "text": "OriginalTweakMemo [https://web.archive.org/web/20111002012532/http://tweakproject.org/ABOUT/FAQ/OriginalTweakMemo/ wayback]"
      },
      "date": 1644310672472
    },
    {
      "type": "edit",
      "id": "589975d14d6f4032",
      "item": {
        "type": "markdown",
        "id": "589975d14d6f4032",
        "text": "The architecture of [[Tweak]] has been heavily influenced by the experiences with [[Squeak]] and the Squeak user interface framework, [[Morphic]]. At the base of Tweak we find TCAR, the Tweak Core Architecture , on top of which the authoring system is being built. Noticable features of Tweak and TCAR include:\n\n* An asynchronous event architecture. Much of the communication in Tweak is asynchronous, decoupling the system and making it more robust. Fields generate events when they change making it easy to track values asynchronously.\n* Language extensions ensure that Tweak features are easy and conveniently to use. This includes method triggers for specifying which event triggers which methods and other kinds of annotations.\n* Players and Costumes define a viewing architecture which takes the best from Morphic and MVC. The architecture can be used as easily as Morphic but is as flexible as MVC.\n\nTweak is currently under active development; see the Roadmap for details on the work being done. The main goal is currently to get a true Tweak 1.0 out of the door and into the hands of real users. "
      },
      "date": 1644310703184
    }
  ]
}