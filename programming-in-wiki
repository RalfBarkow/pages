{
  "title": "Programming In Wiki",
  "story": [
    {
      "type": "paragraph",
      "text": "Why shouldn't programming be as easy as wiki? Easy to navigate, easy to document, easy to share comments, easy to peer review, programming by gradual accretion ... massive re-use through linking to defining [[Wiki Word]]s, can be programmed linearly, chaotically, rapidly -  [http://c2.com/cgi/wiki?ProgrammingInWiki c2.com]",
      "id": "55df492548a2250cee69103bcd59d6c7"
    },
    {
      "type": "paragraph",
      "text": "\nWhy shouldn't an [[Integrated Development Environment]] be like wiki?",
      "id": "7a8bbb513f6234d5038e08b6b9b573ac"
    },
    {
      "type": "paragraph",
      "text": "\nWhy shouldn't an IDE BE a wiki?  (good question.  See [[Wiki Ide]].)",
      "id": "928be88227e1961d09a7a4aedaf8314b"
    },
    {
      "type": "paragraph",
      "text": "\nWhy is programming harder than sketching algorithms and diagrams in a notebook?",
      "id": "557c4b1d146313421e3c1575910a8c99"
    },
    {
      "type": "paragraph",
      "text": "\nIncreasingly the [[Pain Of Programming]] comes from managing such rigid development environments. Think of the multiple files we manage, in different languages, in different file systems. The XML configuration files. The SQL scripts to build databases etc.",
      "id": "e00879269c6693770f7e4bf8e0df8af2"
    },
    {
      "type": "paragraph",
      "text": "\nNow imagine all these different files replaced by [[Wiki Page]]s.",
      "id": "95a2f94ad067f867e46e064b413f4424"
    },
    {
      "type": "paragraph",
      "text": "\nImagine if we could",
      "id": "5189b54373e0339f60cdb5e738957124"
    },
    {
      "type": "paragraph",
      "text": " embed all code (Java, Perl, SQL, config data etc) in freeform text pages;",
      "id": "d4c03c3a3bdd659ca5dc132238190add"
    },
    {
      "type": "code",
      "text": "    * could MarkupLanguageNine be used for this? ''Discussed below''.\n    * is having multiple languages a GoodThing? ''Discussed below''.",
      "id": "6c5cf78fe2a27d56d3efc82358ac64e3"
    },
    {
      "type": "paragraph",
      "text": " allow free text annotations,",
      "id": "e23cac01cb068fcded34cbc9e626fe85"
    },
    {
      "type": "paragraph",
      "text": " allow easy Wiki linking to related pieces of info: from code to config \"file\", from bug reports to code blocks, code blocks to programmer homepages (with contact details)",
      "id": "dafcbddfeb0be4231c96884a465c2cc4"
    },
    {
      "type": "paragraph",
      "text": "\nAt the moment, WE do the hard job of arranging things for the environment. But a <i>make</i> script could easily crawl a wiki picking up various pieces of code, data in order to build source files, config files, etc.",
      "id": "ebd99380e57b39888c8da2de1043c849"
    },
    {
      "type": "paragraph",
      "text": "\nThe make script would itself be written on a wiki page for easy reference. It could save the various components in their traditional places before calling the compiler.",
      "id": "113ee5e4232b10e047177e034392d3f0"
    },
    {
      "type": "paragraph",
      "text": "\nAre the [[Literate Programming]] people converging on something parallel to this?",
      "id": "f3ffc6a079ae98a79e8e3d499d84a83c"
    },
    {
      "type": "paragraph",
      "text": "<i>But I want something less structured. Code embedded in wiki rather than comments embedded in code.</i>",
      "id": "89428200889bc8d98fad2c80f94e5ab5"
    },
    {
      "type": "paragraph",
      "text": "\n[[Literate Programming]] is supposed to be code embedded in documentation rather than comments embedded in code. Take a look at [[Tex The Program]]. Granted, we're accustomed to [[Barely Literate Programming]] ([[Java Doc]] etc.), but that doesn't mean all programming has to be like that.",
      "id": "334403e9548a5cb6d242b9a87a6b4f76"
    },
    {
      "type": "paragraph",
      "text": "\nI wonder if an existing [[Literate Programming]] tool could be adapted to crawl a wiki. Seems like a good way to handle collaborative projects. There might potentially be a problem with dependencies (look how long it takes pages to get [[Re Factor]]ed here) or in [[Concurrent Editing]], but in does seem like the ultimate in Bazaar-style development.",
      "id": "8d533e1671b47449d3337ec938a18f99"
    },
    {
      "type": "paragraph",
      "text": " [[Hyper Perl]] is an attempt to mix literate programming and wiki.",
      "id": "fd92ec0d81ef43404c182a0daf6d8c33"
    },
    {
      "type": "paragraph",
      "text": "\nI <i>love</i> [[Literate Programming]].  Nonetheless, the biggest problem I have with [[Literate Programming]], and the one thing that keeps me from using it beyond toy projects, is the difficulty of keeping the documentation and the code in sync.  --[[Samuel Falvo]]",
      "id": "f2fea257ca2d1f89a3e6f7aeb5b4289e"
    },
    {
      "type": "paragraph",
      "text": "\nThe first paragraph builds a vision far beyond just mixing code and documentation - it's programming in a collaborative environment: users and programmers changing code fragments or modules whenever needed. The WikiIDE will care for version control and data migration. In my opinion if [[Programming In Wiki]] becomes real this will change everything we knew about [[Software Development]]. [[Community Programmed Wiki]] could be a first step -- [[Mirko Blueming]] and the [[Pfomp Vision]].",
      "id": "ddb183171cc84658af425e52bc5845d8"
    },
    {
      "type": "paragraph",
      "text": "\nSean [[Mc Grath]] on mixing code and data: [http://www.itworld.com/nl/ebiz_ent/03112003/ www.itworld.com]",
      "id": "ed7d72612304757d3c79aff50577bdac"
    },
    {
      "type": "paragraph",
      "text": "\nI have taken the first steps down this path for a project which I have all but abandoned (attention deficit :) ). Over on my wiki, I have a utility called [[Wiki Extract]]. It crawls my wiki and pulls out specially-formatted PHP code. You can look at (but not run) the source code at:",
      "id": "a98cfdd1e775c6a8e084e4b075c54f12"
    },
    {
      "type": "paragraph",
      "text": "\n[http://www.llamacom.com/~sky/wiki/phpwiki-1.3.3/index.php/WikiExtract www.llamacom.com] (<i>404 - File not found! Try [http://web.archive.org/web/20050326181313/http://www.llamacom.com/~sky/wiki/phpwiki-1.3.3/index.php/WikiExtract web.archive.org]. -- 20060328</i>)",
      "id": "16025a9117179ae8cb05b74685d53c65"
    },
    {
      "type": "paragraph",
      "text": "\nNote that it's tested only on my wiki, which runs under [[Php Wiki]], and it only writes into my directory. Feel free to grab it and modify, though.",
      "id": "fd2eac82f564d55d15734c237b707ff7"
    },
    {
      "type": "paragraph",
      "text": "-- [[Patrick Connors]]",
      "id": "64ffefae7c9f9713b7d6e3892a00446d"
    },
    {
      "type": "paragraph",
      "text": "\nI have my own [[Unfinished Project]] here (a wiki with code generation): [http://www.nooranch.com/synaesmedia/beach/wiki.cgi/CodeGenerationExperiment www.nooranch.com]. ([[Broken Link]] 20070402) -- [[Phil Jones]]",
      "id": "18d9bf88e241036345f51f967accb730"
    },
    {
      "type": "paragraph",
      "text": "\nNed Gulley wrote an interesting article on a closed access wiki-like programming competition, really goes to show the speed benefits of such a system above a standard comparable OSS system; blowing away the (already pretty small) restrictions to editing placed on traditional OSS projects seems to make a huge difference.\n[http://portal.acm.org/ft_gateway.cfm?id=986264&type=pdf&coll=GUIDE&dl=GUIDE&CFID=37969099&CFTOKEN=20840995 portal.acm.org]",
      "id": "67bfc7c60a3c647bdeacea403e8c328f"
    },
    {
      "type": "paragraph",
      "text": "\nYou can also find this paper at [http://www.starchamber.com/gulley/pubs/tweaking/tweaking.html www.starchamber.com].",
      "id": "1107a1270e35cba51f9eda023421d4f9"
    },
    {
      "type": "html",
      "text": "<i>Content is merely -> \"Describe the new page here\" </i>",
      "id": "58967ad54c62a6b6fea5f799a247f3fe"
    },
    {
      "type": "paragraph",
      "text": " [http://jot.com jot.com] is a wiki with structured forms and programmable pages. Jot's wiki markup includes search, if, etc.",
      "id": "ccd8a4f4ed52db073e6bb4da07e8391e"
    },
    {
      "type": "paragraph",
      "text": " IBM's QEDWiki looks in the right direction too  : [http://files.zend.com/qedwiki/ files.zend.com] , [http://services.alphaworks.ibm.com/qedwiki services.alphaworks.ibm.com]",
      "id": "23a698eb31d34a36070438367dd105e4"
    },
    {
      "type": "paragraph",
      "text": "[[Programming In Wiki]] - [[Multiple Independent Languages]]",
      "id": "f4c5c02ca4e65c42ed8e8306a447c058"
    },
    {
      "type": "html",
      "text": " This idea can be actuated, if it is organized and expressed so as to include required D<b></b>efinitionAndImplementation and incorporates R<b></b>eachableValues ",
      "id": "41a919fd9e9d94dc843d1516866e7923"
    },
    {
      "type": "html",
      "text": " It requires a new way of thinking about how one uses words, by considering different types of Words as having facets, where the name can have a D<b></b>escriptiveAndStructuralFacet as well as a P<b></b>roceduralAndActionableFacet ",
      "id": "ea30c618d10d80d3c8cb390953e84fbd"
    },
    {
      "type": "html",
      "text": " Incorporates the use of the different types of Words as representatives of components, functions, methods, containers and elaborations. Included must be the ability to add comments, reminders, P<b></b>rogramInformation, D<b></b>evelopmentSchedules, I<b></b>ndifiedActions, expressed as E<b></b>xtendedWords within or linked from within the [[Source Code]] (making it R<b></b>eachableComputableAndDisplayable via the Executable.",
      "id": "455ee68031da43a486bcf87b803b5395"
    },
    {
      "type": "html",
      "text": " I<b></b>nformationIntersectionsAsIdentities ",
      "id": "552afcccbee7e5f19143895b02828c9c"
    },
    {
      "type": "paragraph",
      "text": " variables, constants, objects, structs, constructors, includes, etc",
      "id": "080969012bb4f24fe699feee7c5bfd62"
    },
    {
      "type": "html",
      "text": " visualComponents used in the Gui: Controls, Containers, and R<b></b>elationalDevices and locationalInformation displayable through the visualInterface ",
      "id": "de79a7a9b527578ca4b3cb94ef514fcf"
    },
    {
      "type": "paragraph",
      "text": " namingConventions ",
      "id": "d170d151f4b1bbf097843e9547fb0c82"
    },
    {
      "type": "paragraph",
      "text": " [[Extended Words]] used to represent:",
      "id": "f9f852cb801acd1e2a097d44ce2f9583"
    },
    {
      "type": "paragraph",
      "text": " functionNames",
      "id": "cb1583eb28f2001259781ea175c49eba"
    },
    {
      "type": "paragraph",
      "text": " functions",
      "id": "8793daf81557fe21bd3668cff17c38ae"
    },
    {
      "type": "paragraph",
      "text": " routines",
      "id": "71cdcac887b2c923ff3f81bafc9ef794"
    },
    {
      "type": "paragraph",
      "text": " operations",
      "id": "0ba05adc9b6bafa78fd6dae36da00f5a"
    },
    {
      "type": "paragraph",
      "text": " processes",
      "id": "66163decf31a27cc520451cdc51f7077"
    },
    {
      "type": "paragraph",
      "text": " routings",
      "id": "a92e770663608b65e73e7cd1e87a05d9"
    },
    {
      "type": "paragraph",
      "text": " elementIdentifiers ",
      "id": "84543b9d978321b824ad9679c35848fd"
    },
    {
      "type": "paragraph",
      "text": " controlledElements",
      "id": "e5b723c8bebb7b9c91cf327bb351886c"
    },
    {
      "type": "paragraph",
      "text": " uncontrolledElements",
      "id": "49fef1ee24d23484bce2fc446ba1a7b6"
    },
    {
      "type": "paragraph",
      "text": " Components",
      "id": "705d08e8b980ca6a67d02a0abd0f63bc"
    },
    {
      "type": "paragraph",
      "text": " Definitions",
      "id": "30d245088ca4ab3d40eb8480f085cf2d"
    },
    {
      "type": "html",
      "text": " I<b></b>nformationIntersections",
      "id": "2ec83df298714d27ce7f5bfc1f09862b"
    },
    {
      "type": "paragraph",
      "text": " Storage ",
      "id": "a4cfc522671a53e88de38df5a3c751f4"
    },
    {
      "type": "paragraph",
      "text": " Reference",
      "id": "e5278efc931f1f0fea47933387d642fe"
    },
    {
      "type": "paragraph",
      "text": " temporarySpaces",
      "id": "efe029793638e1e90dd97a1db5999655"
    },
    {
      "type": "paragraph",
      "text": " verifiedSpaces ",
      "id": "5368dd21307469e931eb8a07d1873f82"
    },
    {
      "type": "paragraph",
      "text": " controlledInfoSpace ",
      "id": "b9d466d623832afc77e9db89035c93ed"
    },
    {
      "type": "paragraph",
      "text": " Procedures",
      "id": "47a38e4049d90ff6c472192e93f9510a"
    },
    {
      "type": "paragraph",
      "text": " uncontrolledExternalProcesses",
      "id": "303db7aadd6081874eaa92fc7c5fa613"
    },
    {
      "type": "paragraph",
      "text": " controlledVerifiedProcesses",
      "id": "b255330130971661ab3f3f5b6fa1b9b7"
    },
    {
      "type": "paragraph",
      "text": " addIns ",
      "id": "2598240ef0065445556fcb2f3dead79d"
    },
    {
      "type": "paragraph",
      "text": "-- [[Donald Noyes]] 20100714 20120523",
      "id": "e1fb45678aa6c04573f5af657260b29c"
    },
    {
      "type": "markdown",
      "text": "# See also",
      "id": "c85977f3ff134e444f1330f5e373ba35"
    },
    {
      "type": "markdown",
      "id": "995dae490022f0af",
      "text": "- [[Literate Wiki]]\n- [[Self Programming Wiki]]\n- [[Programming In Wiki]]\n- [[Wiki With Programmable Content]]\n- [[Wiki Ide]]\n- [[Soft Wiki]]\n- [[Wiki With More Than Pages]]",
      "alias": "2dfa736f1c31a277"
    },
    {
      "type": "markdown",
      "id": "3137abd741c9198d",
      "text": "- [[Xp System]]\n- [[Hyper Perl]]\n- [[Language Oriented Programming]]"
    }
  ],
  "journal": [
    {
      "date": 1337820962000,
      "id": "66fa4119b8d82e8b82616a86e9f38f57",
      "type": "create",
      "item": {
        "title": "Programming In Wiki",
        "story": [
          {
            "type": "paragraph",
            "text": "Why shouldn't programming be as easy as wiki?",
            "id": "55df492548a2250cee69103bcd59d6c7"
          },
          {
            "type": "paragraph",
            "text": "\nEasy to navigate, easy to document, easy to share comments, easy to peer review, programming by gradual accretion ... massive re-use through linking to defining [[Wiki Word]]s, can be programmed linearly, chaotically, rapidly.",
            "id": "54970e4a167bb91c6dedec4c5dbc575c"
          },
          {
            "type": "paragraph",
            "text": "\nWhy shouldn't an [[Integrated Development Environment]] be like wiki?",
            "id": "7a8bbb513f6234d5038e08b6b9b573ac"
          },
          {
            "type": "paragraph",
            "text": "\nWhy shouldn't an IDE BE a wiki?  (good question.  See [[Wiki Ide]].)",
            "id": "928be88227e1961d09a7a4aedaf8314b"
          },
          {
            "type": "paragraph",
            "text": "\nWhy is programming harder than sketching algorithms and diagrams in a notebook?",
            "id": "557c4b1d146313421e3c1575910a8c99"
          },
          {
            "type": "paragraph",
            "text": "\nIncreasingly the [[Pain Of Programming]] comes from managing such rigid development environments. Think of the multiple files we manage, in different languages, in different file systems. The XML configuration files. The SQL scripts to build databases etc.",
            "id": "e00879269c6693770f7e4bf8e0df8af2"
          },
          {
            "type": "paragraph",
            "text": "\nNow imagine all these different files replaced by [[Wiki Page]]s.",
            "id": "95a2f94ad067f867e46e064b413f4424"
          },
          {
            "type": "paragraph",
            "text": "\nImagine if we could",
            "id": "5189b54373e0339f60cdb5e738957124"
          },
          {
            "type": "paragraph",
            "text": " embed all code (Java, Perl, SQL, config data etc) in freeform text pages;",
            "id": "d4c03c3a3bdd659ca5dc132238190add"
          },
          {
            "type": "code",
            "text": "    * could MarkupLanguageNine be used for this? ''Discussed below''.\n    * is having multiple languages a GoodThing? ''Discussed below''.",
            "id": "6c5cf78fe2a27d56d3efc82358ac64e3"
          },
          {
            "type": "paragraph",
            "text": " allow free text annotations,",
            "id": "e23cac01cb068fcded34cbc9e626fe85"
          },
          {
            "type": "paragraph",
            "text": " allow easy Wiki linking to related pieces of info: from code to config \"file\", from bug reports to code blocks, code blocks to programmer homepages (with contact details)",
            "id": "dafcbddfeb0be4231c96884a465c2cc4"
          },
          {
            "type": "paragraph",
            "text": "\nAt the moment, WE do the hard job of arranging things for the environment. But a <i>make</i> script could easily crawl a wiki picking up various pieces of code, data in order to build source files, config files, etc.",
            "id": "ebd99380e57b39888c8da2de1043c849"
          },
          {
            "type": "paragraph",
            "text": "\nThe make script would itself be written on a wiki page for easy reference. It could save the various components in their traditional places before calling the compiler.",
            "id": "113ee5e4232b10e047177e034392d3f0"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nAre the [[Literate Programming]] people converging on something parallel to this?",
            "id": "f3ffc6a079ae98a79e8e3d499d84a83c"
          },
          {
            "type": "paragraph",
            "text": "<i>But I want something less structured. Code embedded in wiki rather than comments embedded in code.</i>",
            "id": "89428200889bc8d98fad2c80f94e5ab5"
          },
          {
            "type": "paragraph",
            "text": "\n[[Literate Programming]] is supposed to be code embedded in documentation rather than comments embedded in code. Take a look at [[Tex The Program]]. Granted, we're accustomed to [[Barely Literate Programming]] ([[Java Doc]] etc.), but that doesn't mean all programming has to be like that.",
            "id": "334403e9548a5cb6d242b9a87a6b4f76"
          },
          {
            "type": "paragraph",
            "text": "\nI wonder if an existing [[Literate Programming]] tool could be adapted to crawl a wiki. Seems like a good way to handle collaborative projects. There might potentially be a problem with dependencies (look how long it takes pages to get [[Re Factor]]ed here) or in [[Concurrent Editing]], but in does seem like the ultimate in Bazaar-style development.",
            "id": "8d533e1671b47449d3337ec938a18f99"
          },
          {
            "type": "paragraph",
            "text": " [[Hyper Perl]] is an attempt to mix literate programming and wiki.",
            "id": "fd92ec0d81ef43404c182a0daf6d8c33"
          },
          {
            "type": "paragraph",
            "text": "\nI <i>love</i> [[Literate Programming]].  Nonetheless, the biggest problem I have with [[Literate Programming]], and the one thing that keeps me from using it beyond toy projects, is the difficulty of keeping the documentation and the code in sync.  --[[Samuel Falvo]]",
            "id": "f2fea257ca2d1f89a3e6f7aeb5b4289e"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nThe first paragraph builds a vision far beyond just mixing code and documentation - it's programming in a collaborative environment: users and programmers changing code fragments or modules whenever needed. The WikiIDE will care for version control and data migration. In my opinion if [[Programming In Wiki]] becomes real this will change everything we knew about [[Software Development]]. [[Community Programmed Wiki]] could be a first step -- [[Mirko Blueming]] and the [[Pfomp Vision]].",
            "id": "ddb183171cc84658af425e52bc5845d8"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nSean [[Mc Grath]] on mixing code and data: [http://www.itworld.com/nl/ebiz_ent/03112003/ www.itworld.com]",
            "id": "ed7d72612304757d3c79aff50577bdac"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nI have taken the first steps down this path for a project which I have all but abandoned (attention deficit :) ). Over on my wiki, I have a utility called [[Wiki Extract]]. It crawls my wiki and pulls out specially-formatted PHP code. You can look at (but not run) the source code at:",
            "id": "a98cfdd1e775c6a8e084e4b075c54f12"
          },
          {
            "type": "paragraph",
            "text": "\n[http://www.llamacom.com/~sky/wiki/phpwiki-1.3.3/index.php/WikiExtract www.llamacom.com] (<i>404 - File not found! Try [http://web.archive.org/web/20050326181313/http://www.llamacom.com/~sky/wiki/phpwiki-1.3.3/index.php/WikiExtract web.archive.org]. -- 20060328</i>)",
            "id": "16025a9117179ae8cb05b74685d53c65"
          },
          {
            "type": "paragraph",
            "text": "\nNote that it's tested only on my wiki, which runs under [[Php Wiki]], and it only writes into my directory. Feel free to grab it and modify, though.",
            "id": "fd2eac82f564d55d15734c237b707ff7"
          },
          {
            "type": "paragraph",
            "text": "-- [[Patrick Connors]]",
            "id": "64ffefae7c9f9713b7d6e3892a00446d"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nI have my own [[Unfinished Project]] here (a wiki with code generation): [http://www.nooranch.com/synaesmedia/beach/wiki.cgi/CodeGenerationExperiment www.nooranch.com]. ([[Broken Link]] 20070402) -- [[Phil Jones]]",
            "id": "18d9bf88e241036345f51f967accb730"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nNed Gulley wrote an interesting article on a closed access wiki-like programming competition, really goes to show the speed benefits of such a system above a standard comparable OSS system; blowing away the (already pretty small) restrictions to editing placed on traditional OSS projects seems to make a huge difference.\n[http://portal.acm.org/ft_gateway.cfm?id=986264&type=pdf&coll=GUIDE&dl=GUIDE&CFID=37969099&CFTOKEN=20840995 portal.acm.org]",
            "id": "67bfc7c60a3c647bdeacea403e8c328f"
          },
          {
            "type": "paragraph",
            "text": "\nYou can also find this paper at [http://www.starchamber.com/gulley/pubs/tweaking/tweaking.html www.starchamber.com].",
            "id": "1107a1270e35cba51f9eda023421d4f9"
          },
          {
            "type": "paragraph",
            "text": "<i>Content is merely -> \"Describe the new page here\" </i>",
            "id": "58967ad54c62a6b6fea5f799a247f3fe"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": " [http://jot.com jot.com] is a wiki with structured forms and programmable pages. Jot's wiki markup includes search, if, etc.",
            "id": "ccd8a4f4ed52db073e6bb4da07e8391e"
          },
          {
            "type": "paragraph",
            "text": " IBM's QEDWiki looks in the right direction too  : [http://files.zend.com/qedwiki/ files.zend.com] , [http://services.alphaworks.ibm.com/qedwiki services.alphaworks.ibm.com]",
            "id": "23a698eb31d34a36070438367dd105e4"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "<b>[[Programming In Wiki]] - [[Multiple Independent Languages]]</b>",
            "id": "f4c5c02ca4e65c42ed8e8306a447c058"
          },
          {
            "type": "paragraph",
            "text": " This idea can be actuated, if it is organized and expressed so as to include required D<b></b>efinitionAndImplementation and incorporates R<b></b>eachableValues ",
            "id": "41a919fd9e9d94dc843d1516866e7923"
          },
          {
            "type": "paragraph",
            "text": " It requires a new way of thinking about how one uses words, by considering different types of Words as having facets, where the name can have a D<b></b>escriptiveAndStructuralFacet as well as a P<b></b>roceduralAndActionableFacet ",
            "id": "ea30c618d10d80d3c8cb390953e84fbd"
          },
          {
            "type": "paragraph",
            "text": " Incorporates the use of the different types of Words as representatives of components, functions, methods, containers and elaborations. Included must be the ability to add comments, reminders, P<b></b>rogramInformation, D<b></b>evelopmentSchedules, I<b></b>ndifiedActions, expressed as E<b></b>xtendedWords within or linked from within the [[Source Code]] (making it R<b></b>eachableComputableAndDisplayable via the Executable.",
            "id": "455ee68031da43a486bcf87b803b5395"
          },
          {
            "type": "paragraph",
            "text": " I<b></b>nformationIntersectionsAsIdentities ",
            "id": "552afcccbee7e5f19143895b02828c9c"
          },
          {
            "type": "paragraph",
            "text": " variables, constants, objects, structs, constructors, includes, etc",
            "id": "080969012bb4f24fe699feee7c5bfd62"
          },
          {
            "type": "paragraph",
            "text": " visualComponents used in the Gui: Controls, Containers, and R<b></b>elationalDevices and locationalInformation displayable through the visualInterface ",
            "id": "de79a7a9b527578ca4b3cb94ef514fcf"
          },
          {
            "type": "paragraph",
            "text": " namingConventions ",
            "id": "d170d151f4b1bbf097843e9547fb0c82"
          },
          {
            "type": "paragraph",
            "text": " [[Extended Words]] used to represent:",
            "id": "f9f852cb801acd1e2a097d44ce2f9583"
          },
          {
            "type": "paragraph",
            "text": " functionNames",
            "id": "cb1583eb28f2001259781ea175c49eba"
          },
          {
            "type": "paragraph",
            "text": " functions",
            "id": "8793daf81557fe21bd3668cff17c38ae"
          },
          {
            "type": "paragraph",
            "text": " routines",
            "id": "71cdcac887b2c923ff3f81bafc9ef794"
          },
          {
            "type": "paragraph",
            "text": " operations",
            "id": "0ba05adc9b6bafa78fd6dae36da00f5a"
          },
          {
            "type": "paragraph",
            "text": " processes",
            "id": "66163decf31a27cc520451cdc51f7077"
          },
          {
            "type": "paragraph",
            "text": " routings",
            "id": "a92e770663608b65e73e7cd1e87a05d9"
          },
          {
            "type": "paragraph",
            "text": " elementIdentifiers ",
            "id": "84543b9d978321b824ad9679c35848fd"
          },
          {
            "type": "paragraph",
            "text": " controlledElements",
            "id": "e5b723c8bebb7b9c91cf327bb351886c"
          },
          {
            "type": "paragraph",
            "text": " uncontrolledElements",
            "id": "49fef1ee24d23484bce2fc446ba1a7b6"
          },
          {
            "type": "paragraph",
            "text": " Components",
            "id": "705d08e8b980ca6a67d02a0abd0f63bc"
          },
          {
            "type": "paragraph",
            "text": " Definitions",
            "id": "30d245088ca4ab3d40eb8480f085cf2d"
          },
          {
            "type": "paragraph",
            "text": " I<b></b>nformationIntersections",
            "id": "2ec83df298714d27ce7f5bfc1f09862b"
          },
          {
            "type": "paragraph",
            "text": " Storage ",
            "id": "a4cfc522671a53e88de38df5a3c751f4"
          },
          {
            "type": "paragraph",
            "text": " Reference",
            "id": "e5278efc931f1f0fea47933387d642fe"
          },
          {
            "type": "paragraph",
            "text": " temporarySpaces",
            "id": "efe029793638e1e90dd97a1db5999655"
          },
          {
            "type": "paragraph",
            "text": " verifiedSpaces ",
            "id": "5368dd21307469e931eb8a07d1873f82"
          },
          {
            "type": "paragraph",
            "text": " controlledInfoSpace ",
            "id": "b9d466d623832afc77e9db89035c93ed"
          },
          {
            "type": "paragraph",
            "text": " Procedures",
            "id": "47a38e4049d90ff6c472192e93f9510a"
          },
          {
            "type": "paragraph",
            "text": " uncontrolledExternalProcesses",
            "id": "303db7aadd6081874eaa92fc7c5fa613"
          },
          {
            "type": "paragraph",
            "text": " controlledVerifiedProcesses",
            "id": "b255330130971661ab3f3f5b6fa1b9b7"
          },
          {
            "type": "paragraph",
            "text": " addIns ",
            "id": "2598240ef0065445556fcb2f3dead79d"
          },
          {
            "type": "paragraph",
            "text": "-- [[Donald Noyes]] 20100714 20120523",
            "id": "e1fb45678aa6c04573f5af657260b29c"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "\nSee [[Wiki With Programmable Content]], [[Soft Wiki]], [[Xp System]], [[Self Programming Wiki]], [[Hyper Perl]], [[Language Oriented Programming]], [[Wiki Ide]]",
            "id": "c85977f3ff134e444f1330f5e373ba35"
          },
          {
            "type": "paragraph",
            "text": "<hr>",
            "id": "f0aa7fde9148b0c36f725f521c739d77"
          },
          {
            "type": "paragraph",
            "text": "[[Category Source Management]]",
            "id": "89fbcb6b04856eb8effef7de6f8e252b"
          },
          {
            "type": "paragraph",
            "text": "See original on  [http://c2.com/cgi/wiki?ProgrammingInWiki c2.com]",
            "id": "29ce27bec9f27e4f7be6516cff4ea8c1"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1371126016860
    },
    {
      "type": "fork",
      "site": "sfwhangout.don.fed.wiki.org",
      "date": 1550580993441
    },
    {
      "type": "remove",
      "id": "29ce27bec9f27e4f7be6516cff4ea8c1",
      "date": 1550581047248
    },
    {
      "type": "remove",
      "id": "89fbcb6b04856eb8effef7de6f8e252b",
      "date": 1550581050481
    },
    {
      "type": "remove",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "date": 1550581057857
    },
    {
      "type": "remove",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "date": 1550581110139
    },
    {
      "type": "remove",
      "id": "54970e4a167bb91c6dedec4c5dbc575c",
      "date": 1550581139654
    },
    {
      "type": "edit",
      "id": "55df492548a2250cee69103bcd59d6c7",
      "item": {
        "type": "paragraph",
        "text": "Why shouldn't programming be as easy as wiki? Easy to navigate, easy to document, easy to share comments, easy to peer review, programming by gradual accretion ... massive re-use through linking to defining [[Wiki Word]]s, can be programmed linearly, chaotically, rapidly -  [http://c2.com/cgi/wiki?ProgrammingInWiki c2.com]",
        "id": "55df492548a2250cee69103bcd59d6c7"
      },
      "date": 1550581147077
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581182024
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581193153
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "paragraph",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581201981
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "paragraph",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581213606
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581226328
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581238563
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581245003
    },
    {
      "type": "edit",
      "id": "58967ad54c62a6b6fea5f799a247f3fe",
      "item": {
        "type": "html",
        "text": "<i>Content is merely -> \"Describe the new page here\" </i>",
        "id": "58967ad54c62a6b6fea5f799a247f3fe"
      },
      "date": 1550581249574
    },
    {
      "type": "edit",
      "id": "f0aa7fde9148b0c36f725f521c739d77",
      "item": {
        "type": "factory",
        "text": ".",
        "id": "f0aa7fde9148b0c36f725f521c739d77"
      },
      "date": 1550581255706
    },
    {
      "type": "edit",
      "id": "f4c5c02ca4e65c42ed8e8306a447c058",
      "item": {
        "type": "paragraph",
        "text": "[[Programming In Wiki]] - [[Multiple Independent Languages]]",
        "id": "f4c5c02ca4e65c42ed8e8306a447c058"
      },
      "date": 1550581264616
    },
    {
      "type": "edit",
      "id": "c85977f3ff134e444f1330f5e373ba35",
      "item": {
        "type": "paragraph",
        "text": "# See also",
        "id": "c85977f3ff134e444f1330f5e373ba35"
      },
      "date": 1550581277195
    },
    {
      "type": "add",
      "id": "3137abd741c9198d",
      "item": {
        "type": "paragraph",
        "id": "3137abd741c9198d",
        "text": "- [[Wiki With Programmable Content]], [[Soft Wiki]], [[Xp System]], [[Self Programming Wiki]], [[Hyper Perl]], [[Language Oriented Programming]], [[Wiki Ide]]"
      },
      "after": "c85977f3ff134e444f1330f5e373ba35",
      "date": 1550581282553
    },
    {
      "type": "edit",
      "id": "c85977f3ff134e444f1330f5e373ba35",
      "item": {
        "type": "markdown",
        "text": "# See also",
        "id": "c85977f3ff134e444f1330f5e373ba35"
      },
      "date": 1550581283503
    },
    {
      "type": "edit",
      "id": "3137abd741c9198d",
      "item": {
        "type": "markdown",
        "id": "3137abd741c9198d",
        "text": "- [[Wiki With Programmable Content]], [[Soft Wiki]], [[Xp System]], [[Self Programming Wiki]], [[Hyper Perl]], [[Language Oriented Programming]], [[Wiki Ide]]"
      },
      "date": 1550581284659
    },
    {
      "type": "edit",
      "id": "3137abd741c9198d",
      "item": {
        "type": "markdown",
        "id": "3137abd741c9198d",
        "text": "- [[Wiki With Programmable Content]]\n- [[Soft Wiki]]\n- [[Xp System]]\n- [[Self Programming Wiki]]\n- [[Hyper Perl]]\n- [[Language Oriented Programming]]\n- [[Wiki Ide]]"
      },
      "date": 1550581314817
    },
    {
      "type": "edit",
      "id": "41a919fd9e9d94dc843d1516866e7923",
      "item": {
        "type": "html",
        "text": " This idea can be actuated, if it is organized and expressed so as to include required D<b></b>efinitionAndImplementation and incorporates R<b></b>eachableValues ",
        "id": "41a919fd9e9d94dc843d1516866e7923"
      },
      "date": 1550581328054
    },
    {
      "type": "edit",
      "id": "ea30c618d10d80d3c8cb390953e84fbd",
      "item": {
        "type": "html",
        "text": " It requires a new way of thinking about how one uses words, by considering different types of Words as having facets, where the name can have a D<b></b>escriptiveAndStructuralFacet as well as a P<b></b>roceduralAndActionableFacet ",
        "id": "ea30c618d10d80d3c8cb390953e84fbd"
      },
      "date": 1550581330858
    },
    {
      "type": "edit",
      "id": "455ee68031da43a486bcf87b803b5395",
      "item": {
        "type": "html",
        "text": " Incorporates the use of the different types of Words as representatives of components, functions, methods, containers and elaborations. Included must be the ability to add comments, reminders, P<b></b>rogramInformation, D<b></b>evelopmentSchedules, I<b></b>ndifiedActions, expressed as E<b></b>xtendedWords within or linked from within the [[Source Code]] (making it R<b></b>eachableComputableAndDisplayable via the Executable.",
        "id": "455ee68031da43a486bcf87b803b5395"
      },
      "date": 1550581332396
    },
    {
      "type": "edit",
      "id": "552afcccbee7e5f19143895b02828c9c",
      "item": {
        "type": "html",
        "text": " I<b></b>nformationIntersectionsAsIdentities ",
        "id": "552afcccbee7e5f19143895b02828c9c"
      },
      "date": 1550581334167
    },
    {
      "type": "edit",
      "id": "de79a7a9b527578ca4b3cb94ef514fcf",
      "item": {
        "type": "html",
        "text": " visualComponents used in the Gui: Controls, Containers, and R<b></b>elationalDevices and locationalInformation displayable through the visualInterface ",
        "id": "de79a7a9b527578ca4b3cb94ef514fcf"
      },
      "date": 1550581335607
    },
    {
      "type": "edit",
      "id": "2ec83df298714d27ce7f5bfc1f09862b",
      "item": {
        "type": "html",
        "text": " I<b></b>nformationIntersections",
        "id": "2ec83df298714d27ce7f5bfc1f09862b"
      },
      "date": 1550581339385
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2dfa736f1c31a277",
        "text": "- [[Literate Wiki]]\n- [[Self Programming Wiki]]\n- [[Programming In Wiki]]\n- [[Wiki With Programmable Content]]\n- [[Wiki Ide]]\n- [[Soft Wiki]]\n- [[Wiki With More Than Pages]]"
      },
      "after": "c85977f3ff134e444f1330f5e373ba35",
      "id": "2dfa736f1c31a277",
      "date": 1550599653578
    },
    {
      "type": "edit",
      "id": "3137abd741c9198d",
      "item": {
        "type": "markdown",
        "id": "3137abd741c9198d",
        "text": "- [[Xp System]]\n- [[Hyper Perl]]\n- [[Language Oriented Programming]]"
      },
      "date": 1550599669047
    },
    {
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "995dae490022f0af",
        "text": "- [[Literate Wiki]]\n- [[Self Programming Wiki]]\n- [[Programming In Wiki]]\n- [[Wiki With Programmable Content]]\n- [[Wiki Ide]]\n- [[Soft Wiki]]\n- [[Wiki With More Than Pages]]",
        "alias": "2dfa736f1c31a277"
      },
      "after": "c85977f3ff134e444f1330f5e373ba35",
      "id": "995dae490022f0af",
      "date": 1550599682995
    },
    {
      "type": "remove",
      "id": "2dfa736f1c31a277",
      "date": 1550599695366
    },
    {
      "type": "fork",
      "site": "literate.wiki",
      "date": 1626101479141
    }
  ]
}