{
  "title": "Test to Learn",
  "story": [
    {
      "type": "paragraph",
      "id": "626905308426303a",
      "text": "As small executable code examples, unit tests make a perfect learning resource. Isolating a specific aspect of an interface in a unit test is a great way to learn more about how it behaves. Other types of automated tests can help our understanding of both the language and specific problems. Benchmarks are a valuable tool to measure relative performance, and can guide decisions about how to solve a specific problem."
    },
    {
      "type": "paragraph",
      "id": "236f57f6f573a773",
      "text": "See [[Array.prototype.splice Method]]"
    },
    {
      "type": "pagefold",
      "id": "fe49c9acda9ace66",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "c0eedf3c3255ce14",
      "text": "JOHANSEN, Christian, 2011. [[Test-driven JavaScript Development]]. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5."
    },
    {
      "type": "paragraph",
      "id": "be23f6f4617fd499",
      "text": "BOURAQADI, Noury and MASON, Dave, 2018. Test-driven development for generated portable Javascript apps. Science of Computer Programming. 1 September 2018. Vol. 161, p. 2–17. DOI 10.1016/j.scico.2018.02.003. \nWith the advent of HTML 5, we can now develop rich web apps in Javascript that rival classical standalone apps. Nevertheless, developing in Javascript is still challenging and error prone because of the language’s ambiguous semantics and quirks. In this paper, we advocate that the popular solution of using another language with better semantics and constructs is not enough. Developers should be provided with an IDE that eases the integration of Javascript libraries and enables testing an application across the many available Javascript interpreters. We introduce [[PharoJS]], an infrastructure that allows Test-Driven Development (TDD) in Pharo Smalltalk of applications that ultimately run on a Javascript interpreter. PharoJS makes it possible to run interactive tests within the Pharo IDE, so as to fully exploit the debugging and development environment, while UI and libraries reside on the Javascript side."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Test to Learn",
        "story": []
      },
      "date": 1713708863663
    },
    {
      "item": {
        "type": "factory",
        "id": "626905308426303a"
      },
      "id": "626905308426303a",
      "type": "add",
      "date": 1713708864624
    },
    {
      "type": "edit",
      "id": "626905308426303a",
      "item": {
        "type": "paragraph",
        "id": "626905308426303a",
        "text": "As small executable code examples, unit tests make a perfect learning resource. Isolating a specific aspect of an interface in a unit test is a great way to learn more about how it behaves. Other types of automated tests can help our understanding of both the language and specific problems. Benchmarks are a valuable tool to measure relative performance, and can guide decisions about how to solve a specific problem."
      },
      "date": 1713708866402
    },
    {
      "item": {
        "type": "factory",
        "id": "fe49c9acda9ace66"
      },
      "id": "fe49c9acda9ace66",
      "type": "add",
      "after": "626905308426303a",
      "date": 1713708903593
    },
    {
      "type": "edit",
      "id": "fe49c9acda9ace66",
      "item": {
        "type": "pagefold",
        "id": "fe49c9acda9ace66",
        "text": "~"
      },
      "date": 1713708906364
    },
    {
      "item": {
        "type": "factory",
        "id": "be23f6f4617fd499"
      },
      "id": "be23f6f4617fd499",
      "type": "add",
      "after": "fe49c9acda9ace66",
      "date": 1713708907880
    },
    {
      "type": "edit",
      "id": "be23f6f4617fd499",
      "item": {
        "type": "paragraph",
        "id": "be23f6f4617fd499",
        "text": "\nBOURAQADI, Noury and MASON, Dave, 2018. Test-driven development for generated portable Javascript apps. Science of Computer Programming. 1 September 2018. Vol. 161, p. 2–17. DOI 10.1016/j.scico.2018.02.003. \nWith the advent of HTML 5, we can now develop rich web apps in Javascript that rival classical standalone apps. Nevertheless, developing in Javascript is still challenging and error prone because of the language’s ambiguous semantics and quirks. In this paper, we advocate that the popular solution of using another language with better semantics and constructs is not enough. Developers should be provided with an IDE that eases the integration of Javascript libraries and enables testing an application across the many available Javascript interpreters. We introduce PharoJS,1 an infrastructure that allows Test-Driven Development (TDD) in Pharo Smalltalk of applications that ultimately run on a Javascript interpreter. PharoJS makes it possible to run interactive tests within the Pharo IDE, so as to fully exploit the debugging and development environment, while UI and libraries reside on the Javascript side.\n\nJOHANSEN, Christian, 2011. Test-driven JavaScript development. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5. \nQA76.73.J39 J64 2011\n"
      },
      "date": 1713708909533
    },
    {
      "type": "edit",
      "id": "be23f6f4617fd499",
      "item": {
        "type": "paragraph",
        "id": "be23f6f4617fd499",
        "text": "BOURAQADI, Noury and MASON, Dave, 2018. Test-driven development for generated portable Javascript apps. Science of Computer Programming. 1 September 2018. Vol. 161, p. 2–17. DOI 10.1016/j.scico.2018.02.003. \nWith the advent of HTML 5, we can now develop rich web apps in Javascript that rival classical standalone apps. Nevertheless, developing in Javascript is still challenging and error prone because of the language’s ambiguous semantics and quirks. In this paper, we advocate that the popular solution of using another language with better semantics and constructs is not enough. Developers should be provided with an IDE that eases the integration of Javascript libraries and enables testing an application across the many available Javascript interpreters. We introduce PharoJS,1 an infrastructure that allows Test-Driven Development (TDD) in Pharo Smalltalk of applications that ultimately run on a Javascript interpreter. PharoJS makes it possible to run interactive tests within the Pharo IDE, so as to fully exploit the debugging and development environment, while UI and libraries reside on the Javascript side."
      },
      "date": 1713708915771
    },
    {
      "type": "add",
      "id": "c0eedf3c3255ce14",
      "item": {
        "type": "paragraph",
        "id": "c0eedf3c3255ce14",
        "text": "JOHANSEN, Christian, 2011. Test-driven JavaScript development. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5. \nQA76.73.J39 J64 2011"
      },
      "after": "be23f6f4617fd499",
      "date": 1713708916583
    },
    {
      "type": "edit",
      "id": "c0eedf3c3255ce14",
      "item": {
        "type": "paragraph",
        "id": "c0eedf3c3255ce14",
        "text": "JOHANSEN, Christian, 2011. Test-driven JavaScript development. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5."
      },
      "date": 1713708925664
    },
    {
      "id": "c0eedf3c3255ce14",
      "type": "move",
      "order": [
        "626905308426303a",
        "fe49c9acda9ace66",
        "c0eedf3c3255ce14",
        "be23f6f4617fd499"
      ],
      "date": 1713708930426
    },
    {
      "type": "edit",
      "id": "be23f6f4617fd499",
      "item": {
        "type": "paragraph",
        "id": "be23f6f4617fd499",
        "text": "BOURAQADI, Noury and MASON, Dave, 2018. Test-driven development for generated portable Javascript apps. Science of Computer Programming. 1 September 2018. Vol. 161, p. 2–17. DOI 10.1016/j.scico.2018.02.003. \nWith the advent of HTML 5, we can now develop rich web apps in Javascript that rival classical standalone apps. Nevertheless, developing in Javascript is still challenging and error prone because of the language’s ambiguous semantics and quirks. In this paper, we advocate that the popular solution of using another language with better semantics and constructs is not enough. Developers should be provided with an IDE that eases the integration of Javascript libraries and enables testing an application across the many available Javascript interpreters. We introduce [[PharoJS]], an infrastructure that allows Test-Driven Development (TDD) in Pharo Smalltalk of applications that ultimately run on a Javascript interpreter. PharoJS makes it possible to run interactive tests within the Pharo IDE, so as to fully exploit the debugging and development environment, while UI and libraries reside on the Javascript side."
      },
      "date": 1713708983179
    },
    {
      "type": "fork",
      "date": 1713709156520
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713712061316
    },
    {
      "type": "add",
      "id": "236f57f6f573a773",
      "item": {
        "type": "paragraph",
        "id": "236f57f6f573a773",
        "text": "See [[Array.prototype.splice Method]]"
      },
      "after": "626905308426303a",
      "date": 1713712077110
    },
    {
      "type": "edit",
      "id": "c0eedf3c3255ce14",
      "item": {
        "type": "paragraph",
        "id": "c0eedf3c3255ce14",
        "text": "JOHANSEN, Christian, 2011. [[Test-driven JavaScript development]]. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5."
      },
      "date": 1713716960905
    },
    {
      "type": "edit",
      "id": "c0eedf3c3255ce14",
      "item": {
        "type": "paragraph",
        "id": "c0eedf3c3255ce14",
        "text": "JOHANSEN, Christian, 2011. [[Test-driven JavaScript Development]]. Upper Saddle River, NJ: Addison-Wesley. Developer’s library series. ISBN 978-0-321-68391-5."
      },
      "date": 1713716975744
    }
  ]
}