{
  "title": "Iterative Development",
  "story": [
    {
      "type": "html",
      "text": "The word \"iterative\" means that it involves repetition.",
      "id": "d2178c46d4b2d306b15d35fab44a431d"
    },
    {
      "type": "html",
      "text": "\nIterative Development is a development approach that \"cycles\" through the development phases, from gathering requirements to delivering functionality in a working release.",
      "id": "9a184c424e05ebbcced85eb3b1c408e9"
    },
    {
      "type": "html",
      "text": "\nContrast this with the [[Waterfall Model]], where you gather all the requirements up front, do all necessary design, down to a detailed level, then hand the specs to the coders, who write the code; then you do testing <i>(possibly with a side trip to [[Integration Hell]])</i> and deliver the whole thing in one big end-all release.  Everything is big including the risk of failure.",
      "id": "eff58092fcc886c435596610e50b3bcd"
    },
    {
      "type": "html",
      "text": "\nConsider also [[Incremental Delivery]];",
      "id": "d57b29f348fb806b281248442d8f03fa"
    },
    {
      "type": "html",
      "text": "<i>(an XP page that may actually be talking about [[Iterative Development]])</i>\n[[Incremental Delivery]] also delivers functionality to users in cycles, but is historically less focused on reworking existing functionality. So a traditional \"[[Incremental Delivery]]\" project will deliver one subsystem at a time to the end users, with \"as little change as possible\" to each subsystem, after it's delivered.  ",
      "id": "413726b7ce1aad79e9c4aaae7cb04ca6"
    },
    {
      "type": "html",
      "text": "\nA key differentiation between the traditional [[Water Fall]] and the Iterative processes is how the project tasks are boxed in the plan.  If they are functionally boxed you are probably [[Water Falling]],  if they time-boxed you are probably Iterating.  ",
      "id": "6cd7183d077d30adb2228ca362312510"
    },
    {
      "type": "html",
      "text": "\nThe mantras of [[Iterative Development]] are:",
      "id": "5aec92852b553b9267c8d1d276f5046a"
    },
    {
      "type": "html",
      "text": " Phases are Time-Boxed not Functionally-Boxed.",
      "id": "5ccaddc7aba7b5d11a7ea78bd676b5ca"
    },
    {
      "type": "html",
      "text": " Test early, Test often.",
      "id": "a61b7d2148feccbe3938fc65e8c6d877"
    },
    {
      "type": "html",
      "text": " Deliver early, Deliver often.",
      "id": "6012061a25c8e3cd165240d8f3bb29e9"
    },
    {
      "type": "html",
      "text": " Production Quality.",
      "id": "be0fa12fbc17e27687ac2ee2e04dd0ec"
    },
    {
      "type": "html",
      "text": "\nIterative Development processes grew out of [[Object Oriented Development]] where it quick appreciated that a Class could be considered a mini-project and developed in isolation, the task was naturally boxed by its responsibilities.",
      "id": "5732163ec7b1fdb9ae438250f9a2a38d"
    },
    {
      "type": "html",
      "text": "\nSome examples of Iterative Development Processes.",
      "id": "7614c9961a2c53948bd923d7a4218e43"
    },
    {
      "type": "html",
      "text": " Agile (XP).",
      "id": "2e0fbbdd3377b2f913254c8e8c6ae81e"
    },
    {
      "type": "html",
      "text": " Iconix",
      "id": "5054ec7a1fc8cfa915b2410d142cae42"
    },
    {
      "type": "html",
      "text": " OPEN.",
      "id": "a0334676e14c16aeeb4e34f4116906fd"
    },
    {
      "type": "html",
      "text": " [[Rational Unified Process]].",
      "id": "fa8310efcae973086c3b447fe6e2b2fb"
    },
    {
      "type": "html",
      "text": " [[Select Perspective]].",
      "id": "2642f0ebf09cc803c0adce8212313ac5"
    },
    {
      "type": "html",
      "text": "-- [[Martin Spamer]]",
      "id": "989245917912571d5ad42d5b2ff25ffc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7ecaef016d7eb5c7c7e3f5b287101089"
    },
    {
      "type": "html",
      "text": "\nThe [[Telescope Rule]] is also a good analogy for the reasoning behind [[Iterative Development]].",
      "id": "c98b6b57f631431e7f32d508549b0629"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7ecaef016d7eb5c7c7e3f5b287101089"
    },
    {
      "type": "html",
      "text": "\nI looked up the word \"iteration\" in the index of [[Extreme Programming Explained Embrace Change]]. It was there and there was also a pointer to Iteration - defined, pointing to page 180, which is a blank page!",
      "id": "c00c70e04629d6d3f29073c8ea2ca46d"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7ecaef016d7eb5c7c7e3f5b287101089"
    },
    {
      "type": "html",
      "text": "\nThe problem I have is with iteration 1.  For example I am given a high level spec which says \"Build a system which can control the equipment to carry men to the moon and land them on the surface.  The system must also be able to bring them safely back to Earth\".  Which piece should/can I design, code and deliver in the first 1 to 2 months, giving my customer usable/valuable functionality?",
      "id": "e863dccca566dc629db21b1fde014c32"
    },
    {
      "type": "html",
      "text": "-- [[Barry Allebone]]",
      "id": "eb89659b712302549cbddc183379154d"
    },
    {
      "type": "html",
      "text": "\nIn XP terms, how about a series of spikes:  ",
      "id": "0c87cdf1c1ac5ce31cc0c03f5be7db41"
    },
    {
      "type": "html",
      "text": " build a rocket engine that has enough thrust",
      "id": "a246040a8ab8464a0353b67b65708dca"
    },
    {
      "type": "html",
      "text": " build a rocket that can lob a man into space",
      "id": "4f9b471f557e5335cae9bb17597abf9a"
    },
    {
      "type": "html",
      "text": " build one that can lob him into orbit",
      "id": "fa8747ad39ad8ed758ef126286cdc24e"
    },
    {
      "type": "html",
      "text": " dock two space vehicles in orbit",
      "id": "5385255af2b50955e1196c8797caa549"
    },
    {
      "type": "html",
      "text": " land an unmanned one-way vehicle on the moon to check the environment",
      "id": "372c563b70f23ee1f938d48b6858b04d"
    },
    {
      "type": "html",
      "text": " fly round the moon",
      "id": "18cbb177a585895c8d57149d58a5e936"
    },
    {
      "type": "html",
      "text": " test out the lander near the moon",
      "id": "e48fff4ec25893a4a0bc89da96375d07"
    },
    {
      "type": "html",
      "text": "Learn from each spike and refactor your design",
      "id": "9e00da2887f77ed26639e78bebeb21da"
    },
    {
      "type": "html",
      "text": " land on the moon.",
      "id": "de5989bbd4dade765f208d644bf6ad8d"
    },
    {
      "type": "html",
      "text": "-- [[Tom Ayerst]]",
      "id": "17fcb5f9e55e087a2c7fe47330e6df0e"
    },
    {
      "type": "html",
      "text": "\nDecompose the system into functional parts and implement one of them. E.g. build software which controls the amount of oxygen in the air, or or or...",
      "id": "02ad849a7afd398c47b4985633f48891"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "7ecaef016d7eb5c7c7e3f5b287101089"
    },
    {
      "type": "html",
      "text": "\nSee also: [[Iterative Vs Incremental]]",
      "id": "27072d4b2ea25ae200f33a48381c711d"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?IterativeDevelopment c2.com]",
      "id": "dcb224fcaa4e6a007f7a088d9b248a57"
    }
  ],
  "journal": [
    {
      "date": 1110915883000,
      "id": "d9ee6ce445fdf9174e550b29a56e18d0",
      "type": "create",
      "item": {
        "title": "Iterative Development",
        "story": [
          {
            "type": "html",
            "text": "The word \"iterative\" means that it involves repetition.",
            "id": "d2178c46d4b2d306b15d35fab44a431d"
          },
          {
            "type": "html",
            "text": "\nIterative Development is a development approach that \"cycles\" through the development phases, from gathering requirements to delivering functionality in a working release.",
            "id": "9a184c424e05ebbcced85eb3b1c408e9"
          },
          {
            "type": "html",
            "text": "\nContrast this with the [[Waterfall Model]], where you gather all the requirements up front, do all necessary design, down to a detailed level, then hand the specs to the coders, who write the code; then you do testing <i>(possibly with a side trip to [[Integration Hell]])</i> and deliver the whole thing in one big end-all release.  Everything is big including the risk of failure.",
            "id": "eff58092fcc886c435596610e50b3bcd"
          },
          {
            "type": "html",
            "text": "\nConsider also [[Incremental Delivery]];",
            "id": "d57b29f348fb806b281248442d8f03fa"
          },
          {
            "type": "html",
            "text": "<i>(an XP page that may actually be talking about [[Iterative Development]])</i>\n[[Incremental Delivery]] also delivers functionality to users in cycles, but is historically less focused on reworking existing functionality. So a traditional \"[[Incremental Delivery]]\" project will deliver one subsystem at a time to the end users, with \"as little change as possible\" to each subsystem, after it's delivered.  ",
            "id": "413726b7ce1aad79e9c4aaae7cb04ca6"
          },
          {
            "type": "html",
            "text": "\nA key differentiation between the traditional [[Water Fall]] and the Iterative processes is how the project tasks are boxed in the plan.  If they are functionally boxed you are probably [[Water Falling]],  if they time-boxed you are probably Iterating.  ",
            "id": "6cd7183d077d30adb2228ca362312510"
          },
          {
            "type": "html",
            "text": "\nThe mantras of [[Iterative Development]] are:",
            "id": "5aec92852b553b9267c8d1d276f5046a"
          },
          {
            "type": "html",
            "text": " Phases are Time-Boxed not Functionally-Boxed.",
            "id": "5ccaddc7aba7b5d11a7ea78bd676b5ca"
          },
          {
            "type": "html",
            "text": " Test early, Test often.",
            "id": "a61b7d2148feccbe3938fc65e8c6d877"
          },
          {
            "type": "html",
            "text": " Deliver early, Deliver often.",
            "id": "6012061a25c8e3cd165240d8f3bb29e9"
          },
          {
            "type": "html",
            "text": " Production Quality.",
            "id": "be0fa12fbc17e27687ac2ee2e04dd0ec"
          },
          {
            "type": "html",
            "text": "\nIterative Development processes grew out of [[Object Oriented Development]] where it quick appreciated that a Class could be considered a mini-project and developed in isolation, the task was naturally boxed by its responsibilities.",
            "id": "5732163ec7b1fdb9ae438250f9a2a38d"
          },
          {
            "type": "html",
            "text": "\nSome examples of Iterative Development Processes.",
            "id": "7614c9961a2c53948bd923d7a4218e43"
          },
          {
            "type": "html",
            "text": " Agile (XP).",
            "id": "2e0fbbdd3377b2f913254c8e8c6ae81e"
          },
          {
            "type": "html",
            "text": " Iconix",
            "id": "5054ec7a1fc8cfa915b2410d142cae42"
          },
          {
            "type": "html",
            "text": " OPEN.",
            "id": "a0334676e14c16aeeb4e34f4116906fd"
          },
          {
            "type": "html",
            "text": " [[Rational Unified Process]].",
            "id": "fa8310efcae973086c3b447fe6e2b2fb"
          },
          {
            "type": "html",
            "text": " [[Select Perspective]].",
            "id": "2642f0ebf09cc803c0adce8212313ac5"
          },
          {
            "type": "html",
            "text": "-- [[Martin Spamer]]",
            "id": "989245917912571d5ad42d5b2ff25ffc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7ecaef016d7eb5c7c7e3f5b287101089"
          },
          {
            "type": "html",
            "text": "\nThe [[Telescope Rule]] is also a good analogy for the reasoning behind [[Iterative Development]].",
            "id": "c98b6b57f631431e7f32d508549b0629"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7ecaef016d7eb5c7c7e3f5b287101089"
          },
          {
            "type": "html",
            "text": "\nI looked up the word \"iteration\" in the index of [[Extreme Programming Explained Embrace Change]]. It was there and there was also a pointer to Iteration - defined, pointing to page 180, which is a blank page!",
            "id": "c00c70e04629d6d3f29073c8ea2ca46d"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7ecaef016d7eb5c7c7e3f5b287101089"
          },
          {
            "type": "html",
            "text": "\nThe problem I have is with iteration 1.  For example I am given a high level spec which says \"Build a system which can control the equipment to carry men to the moon and land them on the surface.  The system must also be able to bring them safely back to Earth\".  Which piece should/can I design, code and deliver in the first 1 to 2 months, giving my customer usable/valuable functionality?",
            "id": "e863dccca566dc629db21b1fde014c32"
          },
          {
            "type": "html",
            "text": "-- [[Barry Allebone]]",
            "id": "eb89659b712302549cbddc183379154d"
          },
          {
            "type": "html",
            "text": "\nIn XP terms, how about a series of spikes:  ",
            "id": "0c87cdf1c1ac5ce31cc0c03f5be7db41"
          },
          {
            "type": "html",
            "text": " build a rocket engine that has enough thrust",
            "id": "a246040a8ab8464a0353b67b65708dca"
          },
          {
            "type": "html",
            "text": " build a rocket that can lob a man into space",
            "id": "4f9b471f557e5335cae9bb17597abf9a"
          },
          {
            "type": "html",
            "text": " build one that can lob him into orbit",
            "id": "fa8747ad39ad8ed758ef126286cdc24e"
          },
          {
            "type": "html",
            "text": " dock two space vehicles in orbit",
            "id": "5385255af2b50955e1196c8797caa549"
          },
          {
            "type": "html",
            "text": " land an unmanned one-way vehicle on the moon to check the environment",
            "id": "372c563b70f23ee1f938d48b6858b04d"
          },
          {
            "type": "html",
            "text": " fly round the moon",
            "id": "18cbb177a585895c8d57149d58a5e936"
          },
          {
            "type": "html",
            "text": " test out the lander near the moon",
            "id": "e48fff4ec25893a4a0bc89da96375d07"
          },
          {
            "type": "html",
            "text": "Learn from each spike and refactor your design",
            "id": "9e00da2887f77ed26639e78bebeb21da"
          },
          {
            "type": "html",
            "text": " land on the moon.",
            "id": "de5989bbd4dade765f208d644bf6ad8d"
          },
          {
            "type": "html",
            "text": "-- [[Tom Ayerst]]",
            "id": "17fcb5f9e55e087a2c7fe47330e6df0e"
          },
          {
            "type": "html",
            "text": "\nDecompose the system into functional parts and implement one of them. E.g. build software which controls the amount of oxygen in the air, or or or...",
            "id": "02ad849a7afd398c47b4985633f48891"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "7ecaef016d7eb5c7c7e3f5b287101089"
          },
          {
            "type": "html",
            "text": "\nSee also: [[Iterative Vs Incremental]]",
            "id": "27072d4b2ea25ae200f33a48381c711d"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?IterativeDevelopment c2.com]",
            "id": "dcb224fcaa4e6a007f7a088d9b248a57"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1627291401209
    }
  ]
}