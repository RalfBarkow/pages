{
  "title": "Contains Relation",
  "story": [
    {
      "type": "paragraph",
      "id": "44c64c9cb5cbcf4e",
      "text": "[[Concepts]] are [[Network]]s of [[contains]] [[Relation]]s."
    },
    {
      "type": "pagefold",
      "id": "679ef17dc701f5a1",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "638dde160fc676d9",
      "site": "wiki.ralfbarkow.ch",
      "slug": "james-form",
      "title": "James Form",
      "text": "First and foremost, James forms are void-based."
    },
    {
      "type": "reference",
      "id": "6b0ec738e325a3cb",
      "site": "wiki.ralfbarkow.ch",
      "slug": "container-types",
      "title": "Container Types",
      "text": "[[James Algebra]] uses three distinct types of containers to express numeric and non-numeric structure."
    },
    {
      "type": "markdown",
      "id": "a8349e3b097c558f",
      "text": "> The only relation within a boundary calculus is that of [[Containment]], a minimal conceptual basis consisting of one binary relation. The contains relation is quite general. When expressed within logic, containment can be interpreted as implies. When expressed as a network, containment is directly-connected-to. When expressed as a set, it’s called is-a-member. When expressed as a number, it is successor. When expressed as a map, it’s shares-a-common-border. Within the context of a pile of blocks, contains becomes supported-by. When seen as a family relationship, it is parent-of. When described as an abstract mathematical structure, it is a rooted tree. All of these metaphors share a collection of common characteristics that are concretized by the properties of physical containers. The fundamental concept underlying containment is distinction: a container distinguishes inside from outside."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Contains Relation",
        "story": []
      },
      "date": 1678170932154
    },
    {
      "id": "44c64c9cb5cbcf4e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "44c64c9cb5cbcf4e",
        "text": "[[Concepts]] are [[Network]]s  of [[Contains Relation]]s."
      },
      "attribution": {
        "page": "James Form"
      },
      "date": 1678170936242
    },
    {
      "type": "edit",
      "id": "44c64c9cb5cbcf4e",
      "item": {
        "type": "paragraph",
        "id": "44c64c9cb5cbcf4e",
        "text": "[[Concepts]] are [[Network]]s  of contains relations."
      },
      "date": 1678170949062
    },
    {
      "item": {
        "type": "factory",
        "id": "679ef17dc701f5a1"
      },
      "id": "679ef17dc701f5a1",
      "type": "add",
      "after": "44c64c9cb5cbcf4e",
      "date": 1678170950915
    },
    {
      "type": "edit",
      "id": "679ef17dc701f5a1",
      "item": {
        "type": "pagefold",
        "id": "679ef17dc701f5a1",
        "text": "~"
      },
      "date": 1678170953165
    },
    {
      "item": {
        "type": "factory",
        "id": "638dde160fc676d9"
      },
      "id": "638dde160fc676d9",
      "type": "add",
      "after": "679ef17dc701f5a1",
      "date": 1678170954885
    },
    {
      "type": "edit",
      "id": "638dde160fc676d9",
      "item": {
        "type": "reference",
        "id": "638dde160fc676d9",
        "site": "wiki.ralfbarkow.ch",
        "slug": "james-form",
        "title": "James Form",
        "text": "First and foremost, James forms are void-based."
      },
      "date": 1678170958357
    },
    {
      "type": "edit",
      "id": "44c64c9cb5cbcf4e",
      "item": {
        "type": "paragraph",
        "id": "44c64c9cb5cbcf4e",
        "text": "[[Concepts]] are [[Network]]s of [[contains]] relations."
      },
      "date": 1678170971494
    },
    {
      "type": "edit",
      "id": "44c64c9cb5cbcf4e",
      "item": {
        "type": "paragraph",
        "id": "44c64c9cb5cbcf4e",
        "text": "[[Concepts]] are [[Network]]s of [[contains]] [[Relation]]s."
      },
      "date": 1678170989527
    },
    {
      "item": {
        "type": "factory",
        "id": "6b0ec738e325a3cb"
      },
      "id": "6b0ec738e325a3cb",
      "type": "add",
      "after": "638dde160fc676d9",
      "date": 1678196741348
    },
    {
      "type": "edit",
      "id": "6b0ec738e325a3cb",
      "item": {
        "type": "reference",
        "id": "6b0ec738e325a3cb",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container-types",
        "title": "Container Types",
        "text": "[[James Algebra]] uses three distinct types of containers to express numeric and non-numeric structure."
      },
      "date": 1678196743992
    },
    {
      "id": "a8349e3b097c558f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a8349e3b097c558f",
        "text": "The only relation within a boundary calculus is that of [[Containment]], a minimal conceptual basis consisting of one binary relation. The [[Contains Relation]] is quite general. When expressed within logic, containment can be interpreted as implies. When expressed as a network, containment is directly-connected-to. When expressed as a set, it’s called is-a-member. When expressed as a number, it is successor. When expressed as a map, it’s shares-a-common-border. Within the context of a pile of blocks, contains becomes supported-by. When seen as a family relationship, it is parent-of. When described as an abstract mathematical structure, it is a rooted tree. All of these metaphors share a collection of common characteristics that are concretized by the properties of physical containers. The fundamental concept underlying containment is distinction: a container distinguishes inside from outside."
      },
      "after": "6b0ec738e325a3cb",
      "attribution": {
        "page": "Container Types"
      },
      "date": 1678196752532
    },
    {
      "type": "edit",
      "id": "a8349e3b097c558f",
      "item": {
        "type": "paragraph",
        "id": "a8349e3b097c558f",
        "text": "The only relation within a boundary calculus is that of [[Containment]], a minimal conceptual basis consisting of one binary relation. The contains relation is quite general. When expressed within logic, containment can be interpreted as implies. When expressed as a network, containment is directly-connected-to. When expressed as a set, it’s called is-a-member. When expressed as a number, it is successor. When expressed as a map, it’s shares-a-common-border. Within the context of a pile of blocks, contains becomes supported-by. When seen as a family relationship, it is parent-of. When described as an abstract mathematical structure, it is a rooted tree. All of these metaphors share a collection of common characteristics that are concretized by the properties of physical containers. The fundamental concept underlying containment is distinction: a container distinguishes inside from outside."
      },
      "date": 1678196769047
    },
    {
      "type": "edit",
      "id": "a8349e3b097c558f",
      "item": {
        "type": "paragraph",
        "id": "a8349e3b097c558f",
        "text": "> The only relation within a boundary calculus is that of [[Containment]], a minimal conceptual basis consisting of one binary relation. The contains relation is quite general. When expressed within logic, containment can be interpreted as implies. When expressed as a network, containment is directly-connected-to. When expressed as a set, it’s called is-a-member. When expressed as a number, it is successor. When expressed as a map, it’s shares-a-common-border. Within the context of a pile of blocks, contains becomes supported-by. When seen as a family relationship, it is parent-of. When described as an abstract mathematical structure, it is a rooted tree. All of these metaphors share a collection of common characteristics that are concretized by the properties of physical containers. The fundamental concept underlying containment is distinction: a container distinguishes inside from outside."
      },
      "date": 1678196784865
    },
    {
      "type": "edit",
      "id": "a8349e3b097c558f",
      "item": {
        "type": "markdown",
        "id": "a8349e3b097c558f",
        "text": "> The only relation within a boundary calculus is that of [[Containment]], a minimal conceptual basis consisting of one binary relation. The contains relation is quite general. When expressed within logic, containment can be interpreted as implies. When expressed as a network, containment is directly-connected-to. When expressed as a set, it’s called is-a-member. When expressed as a number, it is successor. When expressed as a map, it’s shares-a-common-border. Within the context of a pile of blocks, contains becomes supported-by. When seen as a family relationship, it is parent-of. When described as an abstract mathematical structure, it is a rooted tree. All of these metaphors share a collection of common characteristics that are concretized by the properties of physical containers. The fundamental concept underlying containment is distinction: a container distinguishes inside from outside."
      },
      "date": 1678196785900
    }
  ]
}