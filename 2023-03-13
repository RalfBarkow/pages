{
  "title": "2023-03-13",
  "story": [
    {
      "type": "paragraph",
      "id": "ee4eeede4eb9a91e",
      "text": "⇒ [[Kandinsky]]: ⇒ [[Point]] and line to surface/area/face ⇒ [[Reden und Schweigen]] ⇒ [[Kommunikationssperren in der Unternehmensberatung]]"
    },
    {
      "type": "pagefold",
      "id": "17c388b9aa463682",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "d7ecda96a0f81ecb",
      "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [⇒ [[Algorithmic Markup]]] ⇒ [[More About Algorithmic Markup]] ⇒ [[Wiki's Robot Scouts]] ⇒ [[conjure]]]"
    },
    {
      "type": "paragraph",
      "id": "4cda1a18986e454a",
      "text": "Ward@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page."
    },
    {
      "type": "paragraph",
      "id": "e38432166cb9e78f",
      "text": "Ward@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\n"
    },
    {
      "type": "paragraph",
      "id": "7690ffdf78058bc1",
      "text": "Ward\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png"
    },
    {
      "type": "paragraph",
      "id": "318eb5f643a77513",
      "text": "This uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/[[geo-eco-pol-org-for-diagramming]].html"
    },
    {
      "type": "paragraph",
      "id": "a6ab7c4d87104540",
      "text": "It might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\n"
    },
    {
      "type": "paragraph",
      "id": "13789b1b9b903e0b",
      "text": "Ward\nI have recently translated Thompson's preferred algorithmic drawing ([[Preview Next Diagram]]) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/[[book-garden-validator]]/diagram.js\n"
    },
    {
      "type": "pagefold",
      "id": "fc6afb0f715433b0",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "a61e470bec2906fb",
      "text": "The lineup is volatile and fleeting. Each link is a contains relation. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "e87c8d484e110941",
      "text": "⇒ [[Lineup]] ⇒ [[Lineage]]"
    },
    {
      "type": "reference",
      "id": "73e75c32f36e4d97",
      "site": "wiki.ralfbarkow.ch",
      "slug": "lineage",
      "title": "Lineage",
      "text": "See Updating [[Events and Causal Dependence]]."
    },
    {
      "type": "paragraph",
      "id": "910903e1b1aaa41b",
      "text": "⇒ [[Static Import Snippet]], importjs.html (frameContext):"
    },
    {
      "type": "paragraph",
      "id": "d0f7135ec639abbb",
      "text": "let code = page.story.filter(it => it.type == 'code').map(it => it.text)"
    },
    {
      "type": "paragraph",
      "id": "8f6cd01c3027db08",
      "text": "⇒ [[Read Context of Frame]] ⇒ [[Open Page in Lineup]] ⇒ [[Reference Filter]]"
    },
    {
      "type": "frame",
      "id": "87b0811ac2b889e1",
      "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 256"
    },
    {
      "type": "reference",
      "id": "bf88b42ce45c10a4",
      "site": "small.fed.wiki",
      "slug": "frame-script-context",
      "title": "Frame Script Context",
      "text": "We have found that an html script sandboxed within a Frame plugin must distinguish three resource locations: origin, site and host."
    },
    {
      "type": "reference",
      "id": "f1cc4f4b29f3ea82",
      "site": "js.ward.asia.wiki.org",
      "slug": "read-context-of-frame",
      "title": "Read Context of Frame",
      "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
    },
    {
      "type": "pagefold",
      "id": "48d545e14dde20aa",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "2d80fc235ec0d544",
      "text": "⇒ [[Funktionen und Folgen formaler Organisation]] ⇒ [[Epilog 1994]]"
    },
    {
      "type": "paragraph",
      "id": "f75b1741a58d9bdf",
      "text": "\nWAGNER, Gabriele, GUSE, Juan S. and HASENBRUCH, Monika, 2023. „Eigentlich war es immer sonnenklar.“ Zur Invisibilisierung von formaler Organisation in Bewertungspraktiken. Berliner Journal für Soziologie. 2023. P. 1–29. \n"
    },
    {
      "type": "markdown",
      "id": "469ae570253b152c",
      "text": "> […] formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-03-13",
        "story": []
      },
      "date": 1678702937626
    },
    {
      "item": {
        "type": "factory",
        "id": "ee4eeede4eb9a91e"
      },
      "id": "ee4eeede4eb9a91e",
      "type": "add",
      "date": 1678702939387
    },
    {
      "type": "edit",
      "id": "ee4eeede4eb9a91e",
      "item": {
        "type": "paragraph",
        "id": "ee4eeede4eb9a91e",
        "text": "⇒ [[Kandinsky]]: ⇒ [[Point]] and line to surface/area/face ⇒ [[Reden und Schweigen]]"
      },
      "date": 1678702955183
    },
    {
      "type": "edit",
      "id": "ee4eeede4eb9a91e",
      "item": {
        "type": "paragraph",
        "id": "ee4eeede4eb9a91e",
        "text": "⇒ [[Kandinsky]]: ⇒ [[Point]] and line to surface/area/face ⇒ [[Reden und Schweigen]] ⇒ [["
      },
      "date": 1678702977950
    },
    {
      "type": "edit",
      "id": "ee4eeede4eb9a91e",
      "item": {
        "type": "paragraph",
        "id": "ee4eeede4eb9a91e",
        "text": "⇒ [[Kandinsky]]: ⇒ [[Point]] and line to surface/area/face ⇒ [[Reden und Schweigen]] ⇒ [[Kommunikationssperren in der Unternehmensberatung]]"
      },
      "date": 1678702988960
    },
    {
      "item": {
        "type": "factory",
        "id": "17c388b9aa463682"
      },
      "id": "17c388b9aa463682",
      "type": "add",
      "after": "ee4eeede4eb9a91e",
      "date": 1678703166601
    },
    {
      "type": "edit",
      "id": "17c388b9aa463682",
      "item": {
        "type": "pagefold",
        "id": "17c388b9aa463682",
        "text": "~"
      },
      "date": 1678703169343
    },
    {
      "item": {
        "type": "factory",
        "id": "d7ecda96a0f81ecb"
      },
      "id": "d7ecda96a0f81ecb",
      "type": "add",
      "after": "17c388b9aa463682",
      "date": 1678703170881
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward@Ward:matrix.org\nRalf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the Graphviz plugin's algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. But I would not be surprised to discover that it can or that it can't.\nWard@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page.\nWard@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\nWard\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/book-garden-validator/diagram.js\n"
      },
      "date": 1678703173559
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the Graphviz plugin's algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. But I would not be surprised to discover that it can or that it can't.\nWard@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page.\nWard@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\nWard\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/book-garden-validator/diagram.js\n"
      },
      "date": 1678703204385
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the Graphviz plugin's algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. But I would not be surprised to discover that it can or that it can't."
      },
      "date": 1678703240659
    },
    {
      "type": "add",
      "id": "4cda1a18986e454a",
      "item": {
        "type": "paragraph",
        "id": "4cda1a18986e454a",
        "text": "Ward@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page.\nWard@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\nWard\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/book-garden-validator/diagram.js\n"
      },
      "after": "d7ecda96a0f81ecb",
      "date": 1678703245654
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the Graphviz plugin's algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […]"
      },
      "date": 1678703251414
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […]"
      },
      "date": 1678703308343
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […]"
      },
      "date": 1678703313068
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] []"
      },
      "date": 1678703386323
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [⇒ ]"
      },
      "date": 1678703399242
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [ ⇒ [[More About Algorithmic Markup]]]"
      },
      "date": 1678703408241
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [ ⇒ [[Algorithmic Markup]]] ⇒ [[More About Algorithmic Markup]]]"
      },
      "date": 1678703433446
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [ ⇒ [[Algorithmic Markup]]] ⇒ [[More About Algorithmic Markup]] [[conjure]]]"
      },
      "date": 1678704367534
    },
    {
      "type": "edit",
      "id": "d7ecda96a0f81ecb",
      "item": {
        "type": "paragraph",
        "id": "d7ecda96a0f81ecb",
        "text": "Ward via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1678631821188372FuBdR:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\n@Ralf Barkow\n explains:\n\nSo I'm looking for a way to generate the AST ghost page depending on a changing lineup each time, without losing the connection to the graph.\n\nWard@Ward:matrix.org\nI think the question is, can the ⇒ [[Graphviz Plugin]]'s algorithmic drawing capability produce a diagram from links found in the lineup that responds when reordering the lineup?\nI don't know. […] [⇒ [[Algorithmic Markup]]] ⇒ [[More About Algorithmic Markup]] ⇒ [[Wiki's Robot Scouts]] ⇒ [[conjure]]]"
      },
      "date": 1678704495870
    },
    {
      "item": {
        "type": "factory",
        "id": "fc6afb0f715433b0"
      },
      "id": "fc6afb0f715433b0",
      "type": "add",
      "after": "4cda1a18986e454a",
      "date": 1678704897918
    },
    {
      "type": "edit",
      "id": "fc6afb0f715433b0",
      "item": {
        "type": "pagefold",
        "id": "fc6afb0f715433b0",
        "text": "~"
      },
      "date": 1678704900635
    },
    {
      "item": {
        "type": "factory",
        "id": "a61e470bec2906fb"
      },
      "id": "a61e470bec2906fb",
      "type": "add",
      "after": "fc6afb0f715433b0",
      "date": 1678704901936
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile."
      },
      "date": 1678704906593
    },
    {
      "type": "edit",
      "id": "4cda1a18986e454a",
      "item": {
        "type": "paragraph",
        "id": "4cda1a18986e454a",
        "text": "Ward@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page.\nWard@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\nWard\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/[[book-garden-validator]]/diagram.js\n"
      },
      "date": 1678705066961
    },
    {
      "type": "edit",
      "id": "4cda1a18986e454a",
      "item": {
        "type": "paragraph",
        "id": "4cda1a18986e454a",
        "text": "Ward@Ward:matrix.org\nThe lineup has a sequence that is meaningful when we retrieve information from the lineup. Our convention is to pull from the left which makes influence apply to the right. Strictly we say up and to the left because our search for sources starts with the plugin doing the search and the data may be on the same page."
      },
      "date": 1678705182182
    },
    {
      "type": "add",
      "id": "e38432166cb9e78f",
      "item": {
        "type": "paragraph",
        "id": "e38432166cb9e78f",
        "text": "Ward@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\nWard\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/[[book-garden-validator]]/diagram.js\n"
      },
      "after": "4cda1a18986e454a",
      "date": 1678705183410
    },
    {
      "type": "edit",
      "id": "e38432166cb9e78f",
      "item": {
        "type": "paragraph",
        "id": "e38432166cb9e78f",
        "text": "Ward@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\nWard\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png\nThis uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html\nIt might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\n"
      },
      "date": 1678705215905
    },
    {
      "type": "add",
      "id": "13789b1b9b903e0b",
      "item": {
        "type": "paragraph",
        "id": "13789b1b9b903e0b",
        "text": "Ward\nI have recently translated Thompson's preferred algorithmic drawing (Preview Next Diagram) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/[[book-garden-validator]]/diagram.js\n"
      },
      "after": "e38432166cb9e78f",
      "date": 1678705219033
    },
    {
      "type": "edit",
      "id": "e38432166cb9e78f",
      "item": {
        "type": "paragraph",
        "id": "e38432166cb9e78f",
        "text": "Ward@Ward:matrix.org\nThe Graphviz plugin's algorithmic drawing takes some liberties because it is under the control of a nested specification that is itself traversed in a breadth-first manor so as to overlap page fetches to speed processing. The graphviz layout itself is free to disregard the order of inputs so that it can make a pleasing diagram. But, I have also seen it use input order when not otherwise constrained. Consider these two inputs to Edotor:\n"
      },
      "date": 1678705225762
    },
    {
      "type": "add",
      "id": "7690ffdf78058bc1",
      "item": {
        "type": "paragraph",
        "id": "7690ffdf78058bc1",
        "text": "Ward\nimage.png\nimage.png\nI have seen Marc assert large scale order over graphviz's layout algorithm as for example here:\nimage.png"
      },
      "after": "e38432166cb9e78f",
      "date": 1678705234167
    },
    {
      "type": "add",
      "id": "318eb5f643a77513",
      "item": {
        "type": "paragraph",
        "id": "318eb5f643a77513",
        "text": "This uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/geo-eco-pol-org-for-diagramming.html"
      },
      "after": "7690ffdf78058bc1",
      "date": 1678705241805
    },
    {
      "type": "add",
      "id": "a6ab7c4d87104540",
      "item": {
        "type": "paragraph",
        "id": "a6ab7c4d87104540",
        "text": "It might be possible to coax the Graphviz plugin's algorithmic drawing to make something like this. I have allowed one cluster definitions to pass through its algorithm but only with statically defined clusters. I don't think the drawing language or its interpretation are capable of dynamically generating a cluster for each page in a lineup.\n"
      },
      "after": "318eb5f643a77513",
      "date": 1678705243129
    },
    {
      "type": "edit",
      "id": "318eb5f643a77513",
      "item": {
        "type": "paragraph",
        "id": "318eb5f643a77513",
        "text": "This uses clusters positioned with nodes and edges made invisible.\nhttp://ward.dojo.fed.wiki/[[geo-eco-pol-org-for-diagramming]].html"
      },
      "date": 1678705252791
    },
    {
      "type": "edit",
      "id": "13789b1b9b903e0b",
      "item": {
        "type": "paragraph",
        "id": "13789b1b9b903e0b",
        "text": "Ward\nI have recently translated Thompson's preferred algorithmic drawing ([[Preview Next Diagram]]) into javascript. This would open the door for more nuanced interpretation of lineup content. Regretfully, we don't yet provide the lineup to javascript running in the Frame plugin. This uses the two-way-links feature recently added to sitemaps so that no further fetching is required to discover link structure. But again, there is no sense of lineup.\nhttps://github.com/WardCunningham/assets/blob/master/pages/[[book-garden-validator]]/diagram.js\n"
      },
      "date": 1678705283419
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting."
      },
      "date": 1678705331956
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[   ]]."
      },
      "date": 1678705351957
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[   ]]. So I should record the lineup I want to save in the travel history (journal) of a wiki page."
      },
      "date": 1678705402690
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[   ]]. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use reference paragraphs for each component of the lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs."
      },
      "date": 1678705555272
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[ ]]. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs."
      },
      "date": 1678705727909
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[ ]]. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678705739833
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [[   ]]. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678705754057
    },
    {
      "item": {
        "type": "factory",
        "id": "689be9819b0a4250"
      },
      "id": "689be9819b0a4250",
      "type": "add",
      "after": "a61e470bec2906fb",
      "date": 1678705765754
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678705766958
    },
    {
      "type": "edit",
      "id": "689be9819b0a4250",
      "item": {
        "type": "code",
        "id": "689be9819b0a4250",
        "text": "[[   ]]."
      },
      "date": 1678705774625
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: [. "
      },
      "date": 1678705778108
    },
    {
      "type": "add",
      "id": "cd45a4806e2a351b",
      "item": {
        "type": "paragraph",
        "id": "cd45a4806e2a351b",
        "text": "So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "a61e470bec2906fb",
      "date": 1678705778874
    },
    {
      "id": "689be9819b0a4250",
      "type": "move",
      "order": [
        "ee4eeede4eb9a91e",
        "17c388b9aa463682",
        "d7ecda96a0f81ecb",
        "4cda1a18986e454a",
        "e38432166cb9e78f",
        "7690ffdf78058bc1",
        "318eb5f643a77513",
        "a6ab7c4d87104540",
        "13789b1b9b903e0b",
        "fc6afb0f715433b0",
        "a61e470bec2906fb",
        "689be9819b0a4250",
        "cd45a4806e2a351b"
      ],
      "date": 1678705781234
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation: "
      },
      "date": 1678705784017
    },
    {
      "item": {
        "type": "factory",
        "id": "0b2f14a3f2643b03"
      },
      "id": "0b2f14a3f2643b03",
      "type": "add",
      "after": "cd45a4806e2a351b",
      "date": 1678712858934
    },
    {
      "type": "remove",
      "id": "0b2f14a3f2643b03",
      "date": 1678712864334
    },
    {
      "item": {
        "type": "factory",
        "id": "f9b843041ec46ab5"
      },
      "id": "f9b843041ec46ab5",
      "type": "add",
      "after": "cd45a4806e2a351b",
      "date": 1678712868224
    },
    {
      "type": "remove",
      "id": "f9b843041ec46ab5",
      "date": 1678713135116
    },
    {
      "item": {
        "type": "factory",
        "id": "dacaf0286ab95c23"
      },
      "id": "dacaf0286ab95c23",
      "type": "add",
      "after": "cd45a4806e2a351b",
      "date": 1678713154026
    },
    {
      "item": {
        "type": "factory",
        "id": "e87c8d484e110941"
      },
      "id": "e87c8d484e110941",
      "type": "add",
      "after": "dacaf0286ab95c23",
      "date": 1678713157829
    },
    {
      "id": "e87c8d484e110941",
      "type": "move",
      "order": [
        "ee4eeede4eb9a91e",
        "17c388b9aa463682",
        "d7ecda96a0f81ecb",
        "4cda1a18986e454a",
        "e38432166cb9e78f",
        "7690ffdf78058bc1",
        "318eb5f643a77513",
        "a6ab7c4d87104540",
        "13789b1b9b903e0b",
        "fc6afb0f715433b0",
        "a61e470bec2906fb",
        "689be9819b0a4250",
        "cd45a4806e2a351b",
        "e87c8d484e110941",
        "dacaf0286ab95c23"
      ],
      "date": 1678713159838
    },
    {
      "type": "edit",
      "id": "dacaf0286ab95c23",
      "item": {
        "type": "code",
        "id": "dacaf0286ab95c23",
        "text": "       function handler ({data}) {\n         if (data.action == \"frameContext\") {\n           window.removeEventListener(\"message\", handler)\n           const {slug, item, page} = data\n           let code = page.story.filter(it => it.type == 'code').map(it => it.text)\n           if (code.length) { render(code.join(\"\\n\")) }\n         }\n       }"
      },
      "date": 1678713161043
    },
    {
      "type": "edit",
      "id": "e87c8d484e110941",
      "item": {
        "type": "paragraph",
        "id": "e87c8d484e110941",
        "text": "[[Lineup]]"
      },
      "date": 1678713166660
    },
    {
      "type": "edit",
      "id": "e87c8d484e110941",
      "item": {
        "type": "paragraph",
        "id": "e87c8d484e110941",
        "text": "⇒ [[Lineup]] ⇒ [[Lineage]]"
      },
      "date": 1678713185722
    },
    {
      "type": "add",
      "id": "910903e1b1aaa41b",
      "item": {
        "type": "paragraph",
        "id": "910903e1b1aaa41b",
        "text": "⇒ [[Static Import Snippet]], importjs.html:"
      },
      "after": "e87c8d484e110941",
      "date": 1678713209321
    },
    {
      "type": "edit",
      "id": "910903e1b1aaa41b",
      "item": {
        "type": "paragraph",
        "id": "910903e1b1aaa41b",
        "text": "⇒ [[Static Import Snippet]], importjs.html (frameContext):"
      },
      "date": 1678713303663
    },
    {
      "item": {
        "type": "factory",
        "id": "73e75c32f36e4d97"
      },
      "id": "73e75c32f36e4d97",
      "type": "add",
      "after": "dacaf0286ab95c23",
      "date": 1678713460463
    },
    {
      "type": "edit",
      "id": "73e75c32f36e4d97",
      "item": {
        "type": "reference",
        "id": "73e75c32f36e4d97",
        "site": "wiki.ralfbarkow.ch",
        "slug": "lineage",
        "title": "Lineage",
        "text": "See Updating [[Events and Causal Dependence]]."
      },
      "date": 1678713463615
    },
    {
      "id": "73e75c32f36e4d97",
      "type": "move",
      "order": [
        "ee4eeede4eb9a91e",
        "17c388b9aa463682",
        "d7ecda96a0f81ecb",
        "4cda1a18986e454a",
        "e38432166cb9e78f",
        "7690ffdf78058bc1",
        "318eb5f643a77513",
        "a6ab7c4d87104540",
        "13789b1b9b903e0b",
        "fc6afb0f715433b0",
        "a61e470bec2906fb",
        "689be9819b0a4250",
        "cd45a4806e2a351b",
        "e87c8d484e110941",
        "73e75c32f36e4d97",
        "910903e1b1aaa41b",
        "dacaf0286ab95c23"
      ],
      "date": 1678713465537
    },
    {
      "id": "87b0811ac2b889e1",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "87b0811ac2b889e1",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 256"
      },
      "after": "dacaf0286ab95c23",
      "attribution": {
        "page": "2023-03-11"
      },
      "date": 1678713517082
    },
    {
      "type": "remove",
      "id": "dacaf0286ab95c23",
      "date": 1678713546547
    },
    {
      "item": {
        "type": "factory",
        "id": "d0f7135ec639abbb"
      },
      "id": "d0f7135ec639abbb",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1678713550858
    },
    {
      "id": "d0f7135ec639abbb",
      "type": "move",
      "order": [
        "ee4eeede4eb9a91e",
        "17c388b9aa463682",
        "d7ecda96a0f81ecb",
        "4cda1a18986e454a",
        "e38432166cb9e78f",
        "7690ffdf78058bc1",
        "318eb5f643a77513",
        "a6ab7c4d87104540",
        "13789b1b9b903e0b",
        "fc6afb0f715433b0",
        "a61e470bec2906fb",
        "689be9819b0a4250",
        "cd45a4806e2a351b",
        "e87c8d484e110941",
        "73e75c32f36e4d97",
        "910903e1b1aaa41b",
        "d0f7135ec639abbb",
        "87b0811ac2b889e1"
      ],
      "date": 1678713553349
    },
    {
      "type": "edit",
      "id": "d0f7135ec639abbb",
      "item": {
        "type": "paragraph",
        "id": "d0f7135ec639abbb",
        "text": "let code = page.story.filter(it => it.type == 'code').map(it => it.text)"
      },
      "date": 1678713555053
    },
    {
      "item": {
        "type": "factory",
        "id": "bf88b42ce45c10a4"
      },
      "id": "bf88b42ce45c10a4",
      "type": "add",
      "after": "87b0811ac2b889e1",
      "date": 1678713696493
    },
    {
      "type": "edit",
      "id": "bf88b42ce45c10a4",
      "item": {
        "type": "reference",
        "id": "bf88b42ce45c10a4",
        "site": "small.fed.wiki",
        "slug": "frame-script-context",
        "title": "Frame Script Context",
        "text": "We have found that an html script sandboxed within a Frame plugin must distinguish three resource locations: origin, site and host."
      },
      "date": 1678713700312
    },
    {
      "item": {
        "type": "factory",
        "id": "f1cc4f4b29f3ea82"
      },
      "id": "f1cc4f4b29f3ea82",
      "type": "add",
      "after": "bf88b42ce45c10a4",
      "date": 1678713823049
    },
    {
      "type": "edit",
      "id": "f1cc4f4b29f3ea82",
      "item": {
        "type": "reference",
        "id": "f1cc4f4b29f3ea82",
        "site": "js.ward.asia.wiki.org",
        "slug": "read-context-of-frame",
        "title": "Read Context of Frame",
        "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
      },
      "date": 1678713826219
    },
    {
      "type": "remove",
      "id": "689be9819b0a4250",
      "date": 1678714116051
    },
    {
      "type": "add",
      "id": "f78d62bf767ee207",
      "item": {
        "type": "paragraph",
        "id": "f78d62bf767ee207",
        "text": "`[[   ]].`"
      },
      "after": "a61e470bec2906fb",
      "date": 1678714125175
    },
    {
      "type": "remove",
      "id": "f78d62bf767ee207",
      "date": 1678714136705
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation."
      },
      "date": 1678714144034
    },
    {
      "type": "remove",
      "id": "cd45a4806e2a351b",
      "date": 1678714147943
    },
    {
      "type": "edit",
      "id": "a61e470bec2906fb",
      "item": {
        "type": "paragraph",
        "id": "a61e470bec2906fb",
        "text": "The lineup is volatile and fleeting. Each link is a contains relation. So I should record the lineup I want to save in the travel history (journal) of a wiki page. I could convert the horizontal lineup into a corresponding vertical paragraph structure and use a reference paragraph to link to each component of a lineup. Changes in the lineup could be modeled by changes in the order of the reference paragraphs. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16787056350jZIgy:dreyeck.freedombox.rocks?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1678714149863
    },
    {
      "type": "add",
      "id": "8f6cd01c3027db08",
      "item": {
        "type": "paragraph",
        "id": "8f6cd01c3027db08",
        "text": "[[Read Context of Frame]]"
      },
      "after": "d0f7135ec639abbb",
      "date": 1678714189750
    },
    {
      "type": "edit",
      "id": "8f6cd01c3027db08",
      "item": {
        "type": "paragraph",
        "id": "8f6cd01c3027db08",
        "text": "⇒ [[Read Context of Frame]]"
      },
      "date": 1678714198881
    },
    {
      "type": "edit",
      "id": "8f6cd01c3027db08",
      "item": {
        "type": "paragraph",
        "id": "8f6cd01c3027db08",
        "text": "⇒ [[Read Context of Frame]] ⇒ [[Open Page in Lineup]]"
      },
      "date": 1678714225888
    },
    {
      "item": {
        "type": "factory",
        "id": "48d545e14dde20aa"
      },
      "id": "48d545e14dde20aa",
      "type": "add",
      "after": "f1cc4f4b29f3ea82",
      "date": 1678715311304
    },
    {
      "type": "edit",
      "id": "48d545e14dde20aa",
      "item": {
        "type": "pagefold",
        "id": "48d545e14dde20aa",
        "text": "~"
      },
      "date": 1678715315125
    },
    {
      "item": {
        "type": "factory",
        "id": "2d80fc235ec0d544"
      },
      "id": "2d80fc235ec0d544",
      "type": "add",
      "after": "48d545e14dde20aa",
      "date": 1678715316904
    },
    {
      "type": "edit",
      "id": "2d80fc235ec0d544",
      "item": {
        "type": "paragraph",
        "id": "2d80fc235ec0d544",
        "text": "[[Epilog 1994]]"
      },
      "date": 1678715327643
    },
    {
      "type": "edit",
      "id": "2d80fc235ec0d544",
      "item": {
        "type": "paragraph",
        "id": "2d80fc235ec0d544",
        "text": "⇒ [[Epilog 1994]]"
      },
      "date": 1678715335631
    },
    {
      "type": "edit",
      "id": "2d80fc235ec0d544",
      "item": {
        "type": "paragraph",
        "id": "2d80fc235ec0d544",
        "text": "Funktionen und Folgen formaler Organisation ⇒ [[Epilog 1994]]"
      },
      "date": 1678715724594
    },
    {
      "type": "edit",
      "id": "2d80fc235ec0d544",
      "item": {
        "type": "paragraph",
        "id": "2d80fc235ec0d544",
        "text": "⇒ [[Funktionen und Folgen formaler Organisation]] ⇒ [[Epilog 1994]]"
      },
      "date": 1678715735056
    },
    {
      "item": {
        "type": "factory",
        "id": "469ae570253b152c"
      },
      "id": "469ae570253b152c",
      "type": "add",
      "after": "2d80fc235ec0d544",
      "date": 1678729558251
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "paragraph",
        "id": "469ae570253b152c",
        "text": "We would like to go a decisive step further and claim that formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all."
      },
      "date": 1678729561001
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "paragraph",
        "id": "469ae570253b152c",
        "text": "We would like to go a decisive step further and claim that formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. (Gabriele Wagner, Juan S. Guse, and Monika Hasenbruch, „‚Eigentlich war es immer sonnenklar.‘Zur Invisibilisierung von formaler Organisation in Bewertungspraktiken“, Berliner Journal für Soziologie, 2023, 1–29, p. "
      },
      "date": 1678729596192
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "paragraph",
        "id": "469ae570253b152c",
        "text": "We would like to go a decisive step further and claim that formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. (Gabriele Wagner, Juan S. Guse, and Monika Hasenbruch, „‚Eigentlich war es immer sonnenklar.‘Zur Invisibilisierung von formaler Organisation in Bewertungspraktiken“, Berliner Journal für Soziologie, 2023, 1–29) "
      },
      "date": 1678729639364
    },
    {
      "item": {
        "type": "factory",
        "id": "f75b1741a58d9bdf"
      },
      "id": "f75b1741a58d9bdf",
      "type": "add",
      "after": "469ae570253b152c",
      "date": 1678729653234
    },
    {
      "type": "edit",
      "id": "f75b1741a58d9bdf",
      "item": {
        "type": "paragraph",
        "id": "f75b1741a58d9bdf",
        "text": "\nWAGNER, Gabriele, GUSE, Juan S. and HASENBRUCH, Monika, 2023. „Eigentlich war es immer sonnenklar.“ Zur Invisibilisierung von formaler Organisation in Bewertungspraktiken. Berliner Journal für Soziologie. 2023. P. 1–29. \n"
      },
      "date": 1678729664358
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "paragraph",
        "id": "469ae570253b152c",
        "text": "We would like to go a decisive step further and claim that formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. "
      },
      "date": 1678729675537
    },
    {
      "id": "469ae570253b152c",
      "type": "move",
      "order": [
        "ee4eeede4eb9a91e",
        "17c388b9aa463682",
        "d7ecda96a0f81ecb",
        "4cda1a18986e454a",
        "e38432166cb9e78f",
        "7690ffdf78058bc1",
        "318eb5f643a77513",
        "a6ab7c4d87104540",
        "13789b1b9b903e0b",
        "fc6afb0f715433b0",
        "a61e470bec2906fb",
        "e87c8d484e110941",
        "73e75c32f36e4d97",
        "910903e1b1aaa41b",
        "d0f7135ec639abbb",
        "8f6cd01c3027db08",
        "87b0811ac2b889e1",
        "bf88b42ce45c10a4",
        "f1cc4f4b29f3ea82",
        "48d545e14dde20aa",
        "2d80fc235ec0d544",
        "f75b1741a58d9bdf",
        "469ae570253b152c"
      ],
      "date": 1678729677275
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "paragraph",
        "id": "469ae570253b152c",
        "text": "> […] formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. "
      },
      "date": 1678729686523
    },
    {
      "type": "edit",
      "id": "469ae570253b152c",
      "item": {
        "type": "markdown",
        "id": "469ae570253b152c",
        "text": "> […] formal organization significantly structures evaluation practices by ensuring that only certain decision paths can be entered at all. "
      },
      "date": 1678729687584
    },
    {
      "type": "edit",
      "id": "8f6cd01c3027db08",
      "item": {
        "type": "paragraph",
        "id": "8f6cd01c3027db08",
        "text": "⇒ [[Read Context of Frame]] ⇒ [[Open Page in Lineup]] ⇒ [[Reference Filter]]"
      },
      "date": 1678741148546
    }
  ]
}