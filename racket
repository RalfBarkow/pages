{
  "title": "Racket",
  "story": [
    {
      "type": "paragraph",
      "id": "e6b785796d8493ac",
      "text": "[[Racket]] is an all inclusive educational dialect of Scheme. It is a very cool language with a slick environment for getting started, including great examples and tutorials. Racket is by far the smallest language on this list, which is a big advantage for getting started, but it also is the least popular, and least production focused."
    },
    {
      "type": "paragraph",
      "id": "0f4584db442b258a",
      "text": "… and"
    },
    {
      "type": "reference",
      "id": "61cd6a33407048c8",
      "site": "wiki.ralfbarkow.ch",
      "slug": "rackets-und-rume",
      "title": "Rackets und Räume",
      "text": "The Russian Regime Follows a Volkish-Imperial Ideology"
    },
    {
      "type": "pagefold",
      "id": "009a40eb3bb48e98",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "75ad6d89211717c5",
      "text": "ANDERSENLEIF, CHANGSTEPHEN and FELLEISENMATTHIAS, 2017. Super 8 languages for making movies (functional pearl). Proceedings of the ACM on Programming Languages. Online. 29 August 2017. [Accessed 10 June 2022]. DOI 10.1145/3110274. New York, NY, USA "
    },
    {
      "type": "markdown",
      "id": "028679dd4d081438",
      "text": "> The Racket doctrine tells developers to narrow the gap between the terminology of a problem domain and general programming constructs by creating languages instead of just plain programs. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Racket",
        "story": []
      },
      "date": 1651919166497
    },
    {
      "id": "e6b785796d8493ac",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e6b785796d8493ac",
        "text": "[[Racket]] is an all inclusive educational dialect of Scheme. It is a very cool language with a slick environment for getting started, including great examples and tutorials. Racket is by far the smallest language on this list, which is a big advantage for getting started, but it also is the least popular, and least production focused."
      },
      "date": 1654872081156
    },
    {
      "item": {
        "type": "factory",
        "id": "0f4584db442b258a"
      },
      "id": "0f4584db442b258a",
      "type": "add",
      "after": "e6b785796d8493ac",
      "date": 1654872111098
    },
    {
      "type": "edit",
      "id": "0f4584db442b258a",
      "item": {
        "type": "paragraph",
        "id": "0f4584db442b258a",
        "text": "… and"
      },
      "date": 1654872118121
    },
    {
      "item": {
        "type": "factory",
        "id": "61cd6a33407048c8"
      },
      "id": "61cd6a33407048c8",
      "type": "add",
      "after": "0f4584db442b258a",
      "date": 1654872144609
    },
    {
      "type": "edit",
      "id": "61cd6a33407048c8",
      "item": {
        "type": "reference",
        "id": "61cd6a33407048c8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "rackets-und-rume",
        "title": "Rackets und Räume",
        "text": "The Russian Regime Follows a Volkish-Imperial Ideology"
      },
      "date": 1654872146767
    },
    {
      "item": {
        "type": "factory",
        "id": "009a40eb3bb48e98"
      },
      "id": "009a40eb3bb48e98",
      "type": "add",
      "after": "61cd6a33407048c8",
      "date": 1654872249608
    },
    {
      "type": "edit",
      "id": "009a40eb3bb48e98",
      "item": {
        "type": "pagefold",
        "id": "009a40eb3bb48e98",
        "text": "~"
      },
      "date": 1654872253439
    },
    {
      "item": {
        "type": "factory",
        "id": "75ad6d89211717c5"
      },
      "id": "75ad6d89211717c5",
      "type": "add",
      "after": "009a40eb3bb48e98",
      "date": 1654872254864
    },
    {
      "type": "edit",
      "id": "75ad6d89211717c5",
      "item": {
        "type": "paragraph",
        "id": "75ad6d89211717c5",
        "text": "\nANDERSENLEIF, CHANGSTEPHEN and FELLEISENMATTHIAS, 2017. Super 8 languages for making movies (functional pearl). Proceedings of the ACM on Programming Languages. Online. 29 August 2017. [Accessed 10 June 2022]. DOI 10.1145/3110274. New York, NY, USAThe Racket doctrine tells developers to narrow the gap between the terminology of\na problem domain and general programming constructs by creating languages instead\nof just plain programs. This pearl illustrates this point with the creation of a ...PUB27\n\t\tNew York, NY, USA\n"
      },
      "date": 1654872257558
    },
    {
      "type": "edit",
      "id": "75ad6d89211717c5",
      "item": {
        "type": "paragraph",
        "id": "75ad6d89211717c5",
        "text": "ANDERSENLEIF, CHANGSTEPHEN and FELLEISENMATTHIAS, 2017. Super 8 languages for making movies (functional pearl). Proceedings of the ACM on Programming Languages. Online. 29 August 2017. [Accessed 10 June 2022]. DOI 10.1145/3110274. New York, NY, USA "
      },
      "date": 1654872267921
    },
    {
      "type": "add",
      "id": "028679dd4d081438",
      "item": {
        "type": "paragraph",
        "id": "028679dd4d081438",
        "text": "> The Racket doctrine tells developers to narrow the gap between the terminology of\na problem domain and general programming constructs by creating languages instead\nof just plain programs. This pearl illustrates this point with the creation of a ...PUB27\n\t\tNew York, NY, USA\n"
      },
      "after": "75ad6d89211717c5",
      "date": 1654872268929
    },
    {
      "type": "edit",
      "id": "028679dd4d081438",
      "item": {
        "type": "markdown",
        "id": "028679dd4d081438",
        "text": "> The Racket doctrine tells developers to narrow the gap between the terminology of\na problem domain and general programming constructs by creating languages instead\nof just plain programs. This pearl illustrates this point with the creation of a ...PUB27\n\t\tNew York, NY, USA\n"
      },
      "date": 1654872270066
    },
    {
      "type": "edit",
      "id": "028679dd4d081438",
      "item": {
        "type": "markdown",
        "id": "028679dd4d081438",
        "text": "> The Racket doctrine tells developers to narrow the gap between the terminology of a problem domain and general programming constructs by creating languages instead of just plain programs. "
      },
      "date": 1654872293275
    },
    {
      "type": "fork",
      "date": 1654872379741
    }
  ]
}