{
  "title": "requestAnimationFrame",
  "story": [
    {
      "type": "markdown",
      "id": "9deda747db9edca5",
      "text": "* Trying to get hold of webcomponent dom node in a port subscribe (on javascript) called from update [https://discourse.elm-lang.org/t/trying-to-get-hold-of-webcomponent-dom-node-in-a-port-subscribe-on-javascript-called-from-update/3941/1 discourse]\n> I think the trick is to wrap any JS ports that touch the DOM inside requestAnimationFrame. So if you pass an id or some other selector through the port, then you should be able to grab the DOM node inside the requestAnimationFrame callback. Here’s the original post where I learned that trick:"
    },
    {
      "type": "markdown",
      "id": "88f830552bfdda4e",
      "text": "* When is `Cmd` actually processed? [https://discourse.elm-lang.org/t/when-is-cmd-actually-processed/1008/2 discourse]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "requestAnimationFrame",
        "story": []
      },
      "date": 1638189423400
    },
    {
      "item": {
        "type": "factory",
        "id": "88f830552bfdda4e"
      },
      "id": "88f830552bfdda4e",
      "type": "add",
      "date": 1638189439443
    },
    {
      "type": "edit",
      "id": "88f830552bfdda4e",
      "item": {
        "type": "markdown",
        "id": "88f830552bfdda4e",
        "text": "* When is `Cmd` actually processed?"
      },
      "date": 1638189444822
    },
    {
      "type": "edit",
      "id": "88f830552bfdda4e",
      "item": {
        "type": "markdown",
        "id": "88f830552bfdda4e",
        "text": "* When is `Cmd` actually processed? [https://discourse.elm-lang.org/t/when-is-cmd-actually-processed/1008/2 discourse]"
      },
      "date": 1638189456193
    },
    {
      "item": {
        "type": "factory",
        "id": "9deda747db9edca5"
      },
      "id": "9deda747db9edca5",
      "type": "add",
      "after": "88f830552bfdda4e",
      "date": 1638189474212
    },
    {
      "type": "edit",
      "id": "9deda747db9edca5",
      "item": {
        "type": "markdown",
        "id": "9deda747db9edca5",
        "text": "* Trying to get hold of webcomponent dom node in a port subscribe (on javascript) called from update"
      },
      "date": 1638189477998
    },
    {
      "type": "edit",
      "id": "9deda747db9edca5",
      "item": {
        "type": "markdown",
        "id": "9deda747db9edca5",
        "text": "* Trying to get hold of webcomponent dom node in a port subscribe (on javascript) called from update [https://discourse.elm-lang.org/t/trying-to-get-hold-of-webcomponent-dom-node-in-a-port-subscribe-on-javascript-called-from-update/3941/1 discourse]"
      },
      "date": 1638189491915
    },
    {
      "type": "edit",
      "id": "9deda747db9edca5",
      "item": {
        "type": "markdown",
        "id": "9deda747db9edca5",
        "text": "* Trying to get hold of webcomponent dom node in a port subscribe (on javascript) called from update [https://discourse.elm-lang.org/t/trying-to-get-hold-of-webcomponent-dom-node-in-a-port-subscribe-on-javascript-called-from-update/3941/1 discourse]\n> I think the trick is to wrap any JS ports that touch the DOM inside requestAnimationFrame. So if you pass an id or some other selector through the port, then you should be able to grab the DOM node inside the requestAnimationFrame callback. Here’s the original post where I learned that trick:"
      },
      "date": 1638189512958
    },
    {
      "id": "88f830552bfdda4e",
      "type": "move",
      "order": [
        "9deda747db9edca5",
        "88f830552bfdda4e"
      ],
      "date": 1638189516271
    }
  ]
}