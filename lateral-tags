{
  "title": "Lateral Tags",
  "story": [
    {
      "type": "paragraph",
      "id": "649dbf1c4b2006c2",
      "text": "With regards to tagging content on wiki pages we are at the exploratory phase where even basic operations take two or three workflow steps. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679329074241934kUsGY:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "d7b91cd7df1a51a1",
      "text": "This gives us lots of latitude for invention, and Ward indulged in some of it. In summary: ⇒ [[Site Survey]] is based on html scripts with no special powers other than available to any script floating around the federation. […]"
    },
    {
      "type": "paragraph",
      "id": "cac92a9126e6a97d",
      "text": "This brings us finally to the point where we can explain \"lateral tags\". [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679330427242770azuxg:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "2cf6a2c186a08456",
      "text": "The probe finds strings of words at the end of paragraphs distinguished by the newly made up tag symbol >> before the words. The probe records these words as written so long as they are lower case, properly spaced and at the end of a Paragraph or Markdown item. It is the tag aggregator that attaches significance to individual words. If we wrote \">> world order\" then the aggregator sees \"world\" and \"order\" without regard to the order that they appeared in the raw record. A different aggregator could do otherwise. Continuing my inclination to invent new things I added to this particular aggregator the notion that a paragraph tagged with world order would be making some possible association between the individual words \"world\" and \"order\". Now, If \"world\" were shown to appear in the corpus 9 times, and one were to click that tag, they could expect to see 9 paragraphs in the ghost page result with the title \"world x 9\" summarizing a few facts leading to the creation of the ghost page. The same script that creates this page notices that the raw tags encounter imply some association between world and order. Another paragraph might be about baseball and be appropriately tagged with \"world series\". My logic then concludes that \"order\" and \"series\" are laterally related. While generating the expected \"world x 9\" ghost page my script adds any paragraphs that contain tags for \"order\" and \"series\" that have not already been mentioned on the page. Should the corpus contain mathematical content tagged \"taylor series\" this would be found as lateral material. The connection is by tag associations. In this case from \"world\" to \"world order\" to \"world series\" to \"taylor series\". Here we will have traveled latterly from government to sports to mathematics but only because all were present in the corpus we have chosen. This is the reward we expect from our selective participation in the commons. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679330427242770azuxg:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Lateral Tags",
        "story": []
      },
      "date": 1679330823355
    },
    {
      "item": {
        "type": "factory",
        "id": "649dbf1c4b2006c2"
      },
      "id": "649dbf1c4b2006c2",
      "type": "add",
      "date": 1679330824760
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "This brings us finally to the point where we can explain \"lateral tags\". The probe finds strings of words at the end of paragraphs distinguished by the newly made up tag symbol >> before the words. The probe records these words as written so long as they are lower case, properly spaced and at the end of a Paragraph or Markdown item. It is the tag aggregator that attaches significance to individual words. If we wrote \">> world order\" then the aggregator sees \"world\" and \"order\" without regard to the order that they appeared in the raw record. A different aggregator could do otherwise. Continuing my inclination to invent new things I added to this particular aggregator the notion that a paragraph tagged with world order would be making some possible association between the individual words \"world\" and \"order\". Now, If \"world\" were shown to appear in the corpus 9 times, and one were to click that tag, they could expect to see 9 paragraphs in the ghost page result with the title \"world x 9\" summarizing a few facts leading to the creation of the ghost page. The same script that creates this page notices that the raw tags encounter imply some association between world and order. Another paragraph might be about baseball and be appropriately tagged with \"world series\". My logic then concludes that \"order\" and \"series\" are laterally related. While generating the expected \"world x 9\" ghost page my script adds any paragraphs that contain tags for \"order\" and \"series\" that have not already been mentioned on the page. Should the corpus contain mathematical content tagged \"taylor series\" this would be found as lateral material. The connection is by tag associations. In this case from \"world\" to \"world order\" to \"world series\" to \"taylor series\". Here we will have traveled latterly from government to sports to mathematics but only because all were present in the corpus we have chosen. This is the reward we expect from our selective participation in the commons."
      },
      "date": 1679330826345
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "This brings us finally to the point where we can explain \"lateral tags\". "
      },
      "date": 1679330834726
    },
    {
      "type": "add",
      "id": "2cf6a2c186a08456",
      "item": {
        "type": "paragraph",
        "id": "2cf6a2c186a08456",
        "text": "The probe finds strings of words at the end of paragraphs distinguished by the newly made up tag symbol >> before the words. The probe records these words as written so long as they are lower case, properly spaced and at the end of a Paragraph or Markdown item. It is the tag aggregator that attaches significance to individual words. If we wrote \">> world order\" then the aggregator sees \"world\" and \"order\" without regard to the order that they appeared in the raw record. A different aggregator could do otherwise. Continuing my inclination to invent new things I added to this particular aggregator the notion that a paragraph tagged with world order would be making some possible association between the individual words \"world\" and \"order\". Now, If \"world\" were shown to appear in the corpus 9 times, and one were to click that tag, they could expect to see 9 paragraphs in the ghost page result with the title \"world x 9\" summarizing a few facts leading to the creation of the ghost page. The same script that creates this page notices that the raw tags encounter imply some association between world and order. Another paragraph might be about baseball and be appropriately tagged with \"world series\". My logic then concludes that \"order\" and \"series\" are laterally related. While generating the expected \"world x 9\" ghost page my script adds any paragraphs that contain tags for \"order\" and \"series\" that have not already been mentioned on the page. Should the corpus contain mathematical content tagged \"taylor series\" this would be found as lateral material. The connection is by tag associations. In this case from \"world\" to \"world order\" to \"world series\" to \"taylor series\". Here we will have traveled latterly from government to sports to mathematics but only because all were present in the corpus we have chosen. This is the reward we expect from our selective participation in the commons."
      },
      "after": "649dbf1c4b2006c2",
      "date": 1679330835313
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "This brings us finally to the point where we can explain \"lateral tags\". [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679330427242770azuxg:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679330846043
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "With regards to tagging content on wiki pages we are at the exploratory phase where even basic operations take two or three workflow steps. This gives us lots of latitude for invention and I have indulged myself with a bit of it. In summary: Site Survey is based on html scripts with no special powers other than available to any script floating around the federation. Site Survey was coded to use more application specific pluggable modules we calling Probes. A survey \"launch\" creates a page, necessarily a ghost page, with information within it to maintain and update results from one probe for one site. This is the raw data which a probe can render in a form most useful for double checking the accuracy of probes and the content probed. To this we add more application specific scripts which can be as varied as the applications they support. My most recent work has been exploring tagging through the creation of a probe for a tag syntax that would fit gracefully into the ways we already write in wiki. I support the viewing of tag survey results with another script called the tag aggregator. The aggregator reads a list of raw survey results and constructs a variation of a tag cloud where tag words are listed in numbered sections based on their frequency in the corpus. More common tag clouds use various font sizes in a cleverly packed square of words going every which way. We have not ruled this out. We just need another script."
      },
      "date": 1679330878154
    },
    {
      "type": "add",
      "id": "cac92a9126e6a97d",
      "item": {
        "type": "paragraph",
        "id": "cac92a9126e6a97d",
        "text": "This brings us finally to the point where we can explain \"lateral tags\". [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679330427242770azuxg:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "after": "649dbf1c4b2006c2",
      "date": 1679330878742
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "With regards to tagging content on wiki pages we are at the exploratory phase where even basic operations take two or three workflow steps. "
      },
      "date": 1679330887852
    },
    {
      "type": "add",
      "id": "d7b91cd7df1a51a1",
      "item": {
        "type": "paragraph",
        "id": "d7b91cd7df1a51a1",
        "text": "This gives us lots of latitude for invention and I have indulged myself with a bit of it. In summary: Site Survey is based on html scripts with no special powers other than available to any script floating around the federation. Site Survey was coded to use more application specific pluggable modules we calling Probes. A survey \"launch\" creates a page, necessarily a ghost page, with information within it to maintain and update results from one probe for one site. This is the raw data which a probe can render in a form most useful for double checking the accuracy of probes and the content probed. To this we add more application specific scripts which can be as varied as the applications they support. My most recent work has been exploring tagging through the creation of a probe for a tag syntax that would fit gracefully into the ways we already write in wiki. I support the viewing of tag survey results with another script called the tag aggregator. The aggregator reads a list of raw survey results and constructs a variation of a tag cloud where tag words are listed in numbered sections based on their frequency in the corpus. More common tag clouds use various font sizes in a cleverly packed square of words going every which way. We have not ruled this out. We just need another script."
      },
      "after": "649dbf1c4b2006c2",
      "date": 1679330888500
    },
    {
      "type": "edit",
      "id": "649dbf1c4b2006c2",
      "item": {
        "type": "paragraph",
        "id": "649dbf1c4b2006c2",
        "text": "With regards to tagging content on wiki pages we are at the exploratory phase where even basic operations take two or three workflow steps. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679329074241934kUsGY:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679330899857
    },
    {
      "type": "edit",
      "id": "d7b91cd7df1a51a1",
      "item": {
        "type": "paragraph",
        "id": "d7b91cd7df1a51a1",
        "text": "This gives us lots of latitude for invention Ward indulged in some of it. In summary: Site Survey is based on html scripts with no special powers other than available to any script floating around the federation. Site Survey was coded to use more application specific pluggable modules we calling Probes. A survey \"launch\" creates a page, necessarily a ghost page, with information within it to maintain and update results from one probe for one site. This is the raw data which a probe can render in a form most useful for double checking the accuracy of probes and the content probed. To this we add more application specific scripts which can be as varied as the applications they support. My most recent work has been exploring tagging through the creation of a probe for a tag syntax that would fit gracefully into the ways we already write in wiki. I support the viewing of tag survey results with another script called the tag aggregator. The aggregator reads a list of raw survey results and constructs a variation of a tag cloud where tag words are listed in numbered sections based on their frequency in the corpus. More common tag clouds use various font sizes in a cleverly packed square of words going every which way. We have not ruled this out. We just need another script."
      },
      "date": 1679330959141
    },
    {
      "type": "edit",
      "id": "d7b91cd7df1a51a1",
      "item": {
        "type": "paragraph",
        "id": "d7b91cd7df1a51a1",
        "text": "This gives us lots of latitude for invention, and Ward indulged in some of it. In summary: Site Survey is based on html scripts with no special powers other than available to any script floating around the federation. Site Survey was coded to use more application specific pluggable modules we calling Probes. A survey \"launch\" creates a page, necessarily a ghost page, with information within it to maintain and update results from one probe for one site. This is the raw data which a probe can render in a form most useful for double checking the accuracy of probes and the content probed. To this we add more application specific scripts which can be as varied as the applications they support. My most recent work has been exploring tagging through the creation of a probe for a tag syntax that would fit gracefully into the ways we already write in wiki. I support the viewing of tag survey results with another script called the tag aggregator. The aggregator reads a list of raw survey results and constructs a variation of a tag cloud where tag words are listed in numbered sections based on their frequency in the corpus. More common tag clouds use various font sizes in a cleverly packed square of words going every which way. We have not ruled this out. We just need another script."
      },
      "date": 1679330973655
    },
    {
      "type": "edit",
      "id": "d7b91cd7df1a51a1",
      "item": {
        "type": "paragraph",
        "id": "d7b91cd7df1a51a1",
        "text": "This gives us lots of latitude for invention, and Ward indulged in some of it. In summary: [[Site Survey]] is based on html scripts with no special powers other than available to any script floating around the federation. Site Survey was coded to use more application specific pluggable modules we calling Probes. A survey \"launch\" creates a page, necessarily a ghost page, with information within it to maintain and update results from one probe for one site. This is the raw data which a probe can render in a form most useful for double checking the accuracy of probes and the content probed. To this we add more application specific scripts which can be as varied as the applications they support. My most recent work has been exploring tagging through the creation of a probe for a tag syntax that would fit gracefully into the ways we already write in wiki. I support the viewing of tag survey results with another script called the tag aggregator. The aggregator reads a list of raw survey results and constructs a variation of a tag cloud where tag words are listed in numbered sections based on their frequency in the corpus. More common tag clouds use various font sizes in a cleverly packed square of words going every which way. We have not ruled this out. We just need another script."
      },
      "date": 1679330991198
    },
    {
      "type": "edit",
      "id": "d7b91cd7df1a51a1",
      "item": {
        "type": "paragraph",
        "id": "d7b91cd7df1a51a1",
        "text": "This gives us lots of latitude for invention, and Ward indulged in some of it. In summary: ⇒ [[Site Survey]] is based on html scripts with no special powers other than available to any script floating around the federation. […]"
      },
      "date": 1679331156359
    },
    {
      "type": "edit",
      "id": "2cf6a2c186a08456",
      "item": {
        "type": "paragraph",
        "id": "2cf6a2c186a08456",
        "text": "The probe finds strings of words at the end of paragraphs distinguished by the newly made up tag symbol >> before the words. The probe records these words as written so long as they are lower case, properly spaced and at the end of a Paragraph or Markdown item. It is the tag aggregator that attaches significance to individual words. If we wrote \">> world order\" then the aggregator sees \"world\" and \"order\" without regard to the order that they appeared in the raw record. A different aggregator could do otherwise. Continuing my inclination to invent new things I added to this particular aggregator the notion that a paragraph tagged with world order would be making some possible association between the individual words \"world\" and \"order\". Now, If \"world\" were shown to appear in the corpus 9 times, and one were to click that tag, they could expect to see 9 paragraphs in the ghost page result with the title \"world x 9\" summarizing a few facts leading to the creation of the ghost page. The same script that creates this page notices that the raw tags encounter imply some association between world and order. Another paragraph might be about baseball and be appropriately tagged with \"world series\". My logic then concludes that \"order\" and \"series\" are laterally related. While generating the expected \"world x 9\" ghost page my script adds any paragraphs that contain tags for \"order\" and \"series\" that have not already been mentioned on the page. Should the corpus contain mathematical content tagged \"taylor series\" this would be found as lateral material. The connection is by tag associations. In this case from \"world\" to \"world order\" to \"world series\" to \"taylor series\". Here we will have traveled latterly from government to sports to mathematics but only because all were present in the corpus we have chosen. This is the reward we expect from our selective participation in the commons. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1679330427242770azuxg:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1679331264453
    }
  ]
}