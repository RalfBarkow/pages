{
  "title": "Coaxing a Program into Existence",
  "story": [
    {
      "type": "markdown",
      "id": "8d3ffa8b076e2117",
      "text": "A [https://c2.com/doc/oopsla94.html position statement] for the OOPSLA '94 Workshop on Teams & Objects brought us here.\n"
    },
    {
      "type": "markdown",
      "id": "bb5038cbb68ecc0a",
      "text": "A [[Program]] is decisions made. Humans make those decisions and write them into programs. When I (Ward) compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call [[Grappling]]. I feel it when I program, with cards or at a machine.\n"
    },
    {
      "type": "markdown",
      "id": "7c3bc0c5cab81c52",
      "text": "I now call these grapple cycles programming [[Episodes]]. Episodic programming is most noticeable when decisions require judgment. Mechanical decisions, like looking something up in a book, don't feel particularly episodic. But, then, they aren't actually decisions. Designing framework software on the other hand does require judgment and progresses in distinct episodes. \n"
    },
    {
      "type": "markdown",
      "id": "1e5e347ac5a21825",
      "text": "[[CRC Cards]] work by taking people through programming episodes together. As cards are written for familiar objects, all participants pick up the same context and ready themselves for decision making. Then, by waving cards and pointing fingers and yelling statements like, \"no, this guy should do that,\" decisions are made. Finally, the group starts to relax as consensus has been reached and the issue becomes simply finding the right words to record a decision as a responsibility on a card. \n"
    },
    {
      "type": "markdown",
      "id": "7d6211da9440ccdf",
      "text": "I've had people tell me about their struggles to make CRC Cards work. Often many none-too-fruitful sessions preceded an almost spiritual experience when the right people are finally assembled and they \"come together\" to break a log-jam of indecision. \n"
    },
    {
      "type": "markdown",
      "id": "3eedf6a5280476a8",
      "text": "Such reports are of course satisfying. Even more satisfying is my more recent experience in front of the Smalltalk browsers. Having left research, I found myself swimming in a river of decisions. As I pointed out earlier, production programming requires many times more decisions per day than research. Production decisions are rarely as profound as those in research, but they are of equal or greater consequence and demand as much or more judgment. Our production team \"came together\" when we learned to work through episodes promptly and in synchronization so that our collective experience came to bear on all of our decision making. \n"
    },
    {
      "type": "markdown",
      "id": "c44bb9978f8f2dc2",
      "text": "We regularly worked two to a machine. This worked best when we had enough framework in place that our Smalltalk code read like specification. An episode would begin by poking around with \"senders\", \"implementers\", a few \"inspectors\" and an occasional \"ctrl-c\". We were lifting the problem into our collective consciousness. One would type, the other watch, then trade off. As we approached decisions our attention would turn to each other. The communication would become complex as human communication often does. I won't attempt to analyze it except to say that it includes a lot of hand waving, body motion and statements like, \"hey, that guy shouldn't do that.\" Finally, decisions would be made and the consequences followed through, not by writing on cards, but, by adjusting the specification- like code. And, as with cards, we would search for just the right words to represent the decisions as they had come to us. \n"
    },
    {
      "type": "markdown",
      "id": "de8e0d57ba80a870",
      "text": "What I've just described, I'd felt in research. And, I thought of it as just a happy compatibility. In production, our machine sharing collaborations were more intentional, based on our need to work quickly and correctly. It was a practice that grew slowly in our core group of four implementers, individuals of only average compatibility. The practice spread by first-hand experience. First others learned that I preferred collaborative episodes as a work style. Then they chose to work that way too. Ultimately, any possible pairing was likely in the office and a group of three would form when the problems required that much talent. \n"
    },
    {
      "type": "markdown",
      "id": "681c109f9d056323",
      "text": "I'd like to point out again the unusually high capacity human-to-human communication path that is opened by two people sharing a machine. As the developers work through whole programming episodes together, the machine presents a broad range of situations to be dealt with, all, of course, relevant to the work at hand. In order to stay synchronized each programmer must at least follow the problem-solving strategies and techniques of the other. Things that worked were obvious. These spread quickly as did our general understanding of what worked well and what didn't in the program as a whole. In the few cases where programmers chose to disagree, one would occasionally have to admit, \"you technique would have really helped just then.\" \n"
    },
    {
      "type": "markdown",
      "id": "cb6b66a4101656ba",
      "text": "I now recognize the organization we built to be a High-Performance Team. (See The Wisdom of Teams by Katzenbach & Smith.) Such teams are recognized by their ability to play to member's strengths while covering for each other's weaknesses. We were able to work at maximum productivity continuously and indefinitely. When an occasional crises did occur, we simply pulled the most relevant people together and worked through the problem as another episode. We new we were working on the most important thing in the most productive way. No further urgency was necessary. \n"
    },
    {
      "type": "markdown",
      "id": "70eda95df93a9cca",
      "text": "In summary, Smalltalk's specification-like coding and incremental development environment permits a unique human-human-machine dialogue. CRC Cards allow larger groups to feel this dialogue which is based on repeated episodes of decision making. Finally, members of somewhat larger production development teams can exploit the human-human-machine dialogue on a pair-wise basis. The complex communication that then takes place will support a High-Performance organization with many benefits, a few of which I have mentioned.\n\n"
    },
    {
      "type": "markdown",
      "id": "3c053a38c0888ce1",
      "text": "See [[A CRC Description of HotDraw]] for first ever CRC-Cards. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Coaxing a Program into Existence",
        "story": []
      },
      "date": 1629477713200
    },
    {
      "item": {
        "type": "factory",
        "id": "8d3ffa8b076e2117"
      },
      "id": "8d3ffa8b076e2117",
      "type": "add",
      "date": 1629477729491
    },
    {
      "type": "edit",
      "id": "8d3ffa8b076e2117",
      "item": {
        "type": "markdown",
        "id": "8d3ffa8b076e2117",
        "text": "A program is decisions made. Humans make those decisions and write them into programs. When I compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call grappling. I feel it when I program, with cards or at a machine. "
      },
      "date": 1629477734383
    },
    {
      "type": "edit",
      "id": "8d3ffa8b076e2117",
      "item": {
        "type": "markdown",
        "id": "8d3ffa8b076e2117",
        "text": "a [https://c2.com/doc/oopsla94.html position statement] for the OOPSLA '94 Workshop on Teams & Objects brought us here.\n"
      },
      "date": 1629477753110
    },
    {
      "type": "add",
      "id": "bb5038cbb68ecc0a",
      "item": {
        "type": "markdown",
        "id": "bb5038cbb68ecc0a",
        "text": "A program is decisions made. Humans make those decisions and write them into programs. When I compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call grappling. I feel it when I program, with cards or at a machine. "
      },
      "after": "8d3ffa8b076e2117",
      "date": 1629477755433
    },
    {
      "type": "edit",
      "id": "8d3ffa8b076e2117",
      "item": {
        "type": "markdown",
        "id": "8d3ffa8b076e2117",
        "text": "A [https://c2.com/doc/oopsla94.html position statement] for the OOPSLA '94 Workshop on Teams & Objects brought us here.\n"
      },
      "date": 1629477759694
    },
    {
      "type": "edit",
      "id": "bb5038cbb68ecc0a",
      "item": {
        "type": "markdown",
        "id": "bb5038cbb68ecc0a",
        "text": "A program is decisions made. Humans make those decisions and write them into programs. When I compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call grappling. I feel it when I program, with cards or at a machine.\n"
      },
      "date": 1629477815040
    },
    {
      "type": "add",
      "id": "7c3bc0c5cab81c52",
      "item": {
        "type": "markdown",
        "id": "7c3bc0c5cab81c52",
        "text": "I now call these grapple cycles programming [[episodes]]. Episodic programming is most noticeable when decisions require judgment. Mechanical decisions, like looking something up in a book, don't feel particularly episodic. But, then, they aren't actually decisions. Designing framework software on the other hand does require judgment and progresses in distinct episodes. "
      },
      "after": "bb5038cbb68ecc0a",
      "date": 1629477824183
    },
    {
      "type": "edit",
      "id": "7c3bc0c5cab81c52",
      "item": {
        "type": "markdown",
        "id": "7c3bc0c5cab81c52",
        "text": "I now call these grapple cycles programming [[episodes]]. Episodic programming is most noticeable when decisions require judgment. Mechanical decisions, like looking something up in a book, don't feel particularly episodic. But, then, they aren't actually decisions. Designing framework software on the other hand does require judgment and progresses in distinct episodes. \n"
      },
      "date": 1629477843351
    },
    {
      "type": "add",
      "id": "1e5e347ac5a21825",
      "item": {
        "type": "markdown",
        "id": "1e5e347ac5a21825",
        "text": "[[CRC Cards]] work by taking people through programming episodes together. As cards are written for familiar objects, all participants pick up the same context and ready themselves for decision making. Then, by waving cards and pointing fingers and yelling statements like, \"no, this guy should do that,\" decisions are made. Finally, the group starts to relax as consensus has been reached and the issue becomes simply finding the right words to record a decision as a responsibility on a card. "
      },
      "after": "7c3bc0c5cab81c52",
      "date": 1629477854232
    },
    {
      "type": "edit",
      "id": "1e5e347ac5a21825",
      "item": {
        "type": "markdown",
        "id": "1e5e347ac5a21825",
        "text": "[[CRC Cards]] work by taking people through programming episodes together. As cards are written for familiar objects, all participants pick up the same context and ready themselves for decision making. Then, by waving cards and pointing fingers and yelling statements like, \"no, this guy should do that,\" decisions are made. Finally, the group starts to relax as consensus has been reached and the issue becomes simply finding the right words to record a decision as a responsibility on a card. \n"
      },
      "date": 1629477976522
    },
    {
      "type": "add",
      "id": "7d6211da9440ccdf",
      "item": {
        "type": "markdown",
        "id": "7d6211da9440ccdf",
        "text": "I've had people tell me about their struggles to make CRC Cards work. Often many none-too-fruitful sessions preceded an almost spiritual experience when the right people are finally assembled and they \"come together\" to break a log-jam of indecision. "
      },
      "after": "1e5e347ac5a21825",
      "date": 1629478027462
    },
    {
      "type": "edit",
      "id": "7d6211da9440ccdf",
      "item": {
        "type": "markdown",
        "id": "7d6211da9440ccdf",
        "text": "I've had people tell me about their struggles to make CRC Cards work. Often many none-too-fruitful sessions preceded an almost spiritual experience when the right people are finally assembled and they \"come together\" to break a log-jam of indecision. \n"
      },
      "date": 1629478032826
    },
    {
      "type": "add",
      "id": "3eedf6a5280476a8",
      "item": {
        "type": "markdown",
        "id": "3eedf6a5280476a8",
        "text": "Such reports are of course satisfying. Even more satisfying is my more recent experience in front of the Smalltalk browsers. Having left research, I found myself swimming in a river of decisions. As I pointed out earlier, production programming requires many times more decisions per day than research. Production decisions are rarely as profound as those in research, but they are of equal or greater consequence and demand as much or more judgment. Our production team \"came together\" when we learned to work through episodes promptly and in synchronization so that our collective experience came to bear on all of our decision making. "
      },
      "after": "7d6211da9440ccdf",
      "date": 1629478034426
    },
    {
      "type": "edit",
      "id": "3eedf6a5280476a8",
      "item": {
        "type": "markdown",
        "id": "3eedf6a5280476a8",
        "text": "Such reports are of course satisfying. Even more satisfying is my more recent experience in front of the Smalltalk browsers. Having left research, I found myself swimming in a river of decisions. As I pointed out earlier, production programming requires many times more decisions per day than research. Production decisions are rarely as profound as those in research, but they are of equal or greater consequence and demand as much or more judgment. Our production team \"came together\" when we learned to work through episodes promptly and in synchronization so that our collective experience came to bear on all of our decision making. \n"
      },
      "date": 1629478071432
    },
    {
      "type": "add",
      "id": "c44bb9978f8f2dc2",
      "item": {
        "type": "markdown",
        "id": "c44bb9978f8f2dc2",
        "text": "We regularly worked two to a machine. This worked best when we had enough framework in place that our Smalltalk code read like specification. An episode would begin by poking around with \"senders\", \"implementers\", a few \"inspectors\" and an occasional \"ctrl-c\". We were lifting the problem into our collective consciousness. One would type, the other watch, then trade off. As we approached decisions our attention would turn to each other. The communication would become complex as human communication often does. I won't attempt to analyze it except to say that it includes a lot of hand waving, body motion and statements like, \"hey, that guy shouldn't do that.\" Finally, decisions would be made and the consequences followed through, not by writing on cards, but, by adjusting the specification- like code. And, as with cards, we would search for just the right words to represent the decisions as they had come to us. "
      },
      "after": "3eedf6a5280476a8",
      "date": 1629478073793
    },
    {
      "type": "edit",
      "id": "c44bb9978f8f2dc2",
      "item": {
        "type": "markdown",
        "id": "c44bb9978f8f2dc2",
        "text": "We regularly worked two to a machine. This worked best when we had enough framework in place that our Smalltalk code read like specification. An episode would begin by poking around with \"senders\", \"implementers\", a few \"inspectors\" and an occasional \"ctrl-c\". We were lifting the problem into our collective consciousness. One would type, the other watch, then trade off. As we approached decisions our attention would turn to each other. The communication would become complex as human communication often does. I won't attempt to analyze it except to say that it includes a lot of hand waving, body motion and statements like, \"hey, that guy shouldn't do that.\" Finally, decisions would be made and the consequences followed through, not by writing on cards, but, by adjusting the specification- like code. And, as with cards, we would search for just the right words to represent the decisions as they had come to us. \n"
      },
      "date": 1629478129507
    },
    {
      "type": "add",
      "id": "de8e0d57ba80a870",
      "item": {
        "type": "markdown",
        "id": "de8e0d57ba80a870",
        "text": "What I've just described, I'd felt in research. And, I thought of it as just a happy compatibility. In production, our machine sharing collaborations were more intentional, based on our need to work quickly and correctly. It was a practice that grew slowly in our core group of four implementers, individuals of only average compatibility. The practice spread by first-hand experience. First others learned that I preferred collaborative episodes as a work style. Then they chose to work that way too. Ultimately, any possible pairing was likely in the office and a group of three would form when the problems required that much talent. "
      },
      "after": "c44bb9978f8f2dc2",
      "date": 1629478131892
    },
    {
      "type": "edit",
      "id": "de8e0d57ba80a870",
      "item": {
        "type": "markdown",
        "id": "de8e0d57ba80a870",
        "text": "What I've just described, I'd felt in research. And, I thought of it as just a happy compatibility. In production, our machine sharing collaborations were more intentional, based on our need to work quickly and correctly. It was a practice that grew slowly in our core group of four implementers, individuals of only average compatibility. The practice spread by first-hand experience. First others learned that I preferred collaborative episodes as a work style. Then they chose to work that way too. Ultimately, any possible pairing was likely in the office and a group of three would form when the problems required that much talent. \n"
      },
      "date": 1629478173165
    },
    {
      "type": "add",
      "id": "681c109f9d056323",
      "item": {
        "type": "markdown",
        "id": "681c109f9d056323",
        "text": "I'd like to point out again the unusually high capacity human-to-human communication path that is opened by two people sharing a machine. As the developers work through whole programming episodes together, the machine presents a broad range of situations to be dealt with, all, of course, relevant to the work at hand. In order to stay synchronized each programmer must at least follow the problem-solving strategies and techniques of the other. Things that worked were obvious. These spread quickly as did our general understanding of what worked well and what didn't in the program as a whole. In the few cases where programmers chose to disagree, one would occasionally have to admit, \"you technique would have really helped just then.\" \n"
      },
      "after": "de8e0d57ba80a870",
      "date": 1629478175787
    },
    {
      "type": "add",
      "id": "cb6b66a4101656ba",
      "item": {
        "type": "markdown",
        "id": "cb6b66a4101656ba",
        "text": "I now recognize the organization we built to be a High-Performance Team. (See The Wisdom of Teams by Katzenbach & Smith.) Such teams are recognized by their ability to play to member's strengths while covering for each other's weaknesses. We were able to work at maximum productivity continuously and indefinitely. When an occasional crises did occur, we simply pulled the most relevant people together and worked through the problem as another episode. We new we were working on the most important thing in the most productive way. No further urgency was necessary. \n"
      },
      "after": "681c109f9d056323",
      "date": 1629478215928
    },
    {
      "type": "add",
      "id": "70eda95df93a9cca",
      "item": {
        "type": "markdown",
        "id": "70eda95df93a9cca",
        "text": "In summary, Smalltalk's specification-like coding and incremental development environment permits a unique human-human-machine dialogue. CRC Cards allow larger groups to feel this dialogue which is based on repeated episodes of decision making. Finally, members of somewhat larger production development teams can exploit the human-human-machine dialogue on a pair-wise basis. The complex communication that then takes place will support a High-Performance organization with many benefits, a few of which I have mentioned.\n"
      },
      "after": "cb6b66a4101656ba",
      "date": 1629478230756
    },
    {
      "type": "edit",
      "id": "70eda95df93a9cca",
      "item": {
        "type": "markdown",
        "id": "70eda95df93a9cca",
        "text": "In summary, Smalltalk's specification-like coding and incremental development environment permits a unique human-human-machine dialogue. CRC Cards allow larger groups to feel this dialogue which is based on repeated episodes of decision making. Finally, members of somewhat larger production development teams can exploit the human-human-machine dialogue on a pair-wise basis. The complex communication that then takes place will support a High-Performance organization with many benefits, a few of which I have mentioned.\n\n"
      },
      "date": 1629478264270
    },
    {
      "type": "add",
      "id": "3c053a38c0888ce1",
      "item": {
        "type": "markdown",
        "id": "3c053a38c0888ce1",
        "text": "See A CRC Description of HotDraw for first ever CRC-Cards. "
      },
      "after": "70eda95df93a9cca",
      "date": 1629478265907
    },
    {
      "type": "edit",
      "id": "3c053a38c0888ce1",
      "item": {
        "type": "markdown",
        "id": "3c053a38c0888ce1",
        "text": "See [[A CRC Description of HotDraw]] for first ever CRC-Cards. "
      },
      "date": 1629478285549
    },
    {
      "type": "edit",
      "id": "7c3bc0c5cab81c52",
      "item": {
        "type": "markdown",
        "id": "7c3bc0c5cab81c52",
        "text": "I now call these grapple cycles programming [[Episodes]]. Episodic programming is most noticeable when decisions require judgment. Mechanical decisions, like looking something up in a book, don't feel particularly episodic. But, then, they aren't actually decisions. Designing framework software on the other hand does require judgment and progresses in distinct episodes. \n"
      },
      "date": 1706542647895
    },
    {
      "type": "edit",
      "id": "bb5038cbb68ecc0a",
      "item": {
        "type": "markdown",
        "id": "bb5038cbb68ecc0a",
        "text": "A program is decisions made. Humans make those decisions and write them into programs. When I (Ward) compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call grappling. I feel it when I program, with cards or at a machine.\n"
      },
      "date": 1706542659516
    },
    {
      "type": "edit",
      "id": "bb5038cbb68ecc0a",
      "item": {
        "type": "markdown",
        "id": "bb5038cbb68ecc0a",
        "text": "A [[Program]] is decisions made. Humans make those decisions and write them into programs. When I (Ward) compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call grappling. I feel it when I program, with cards or at a machine.\n"
      },
      "date": 1706542741106
    },
    {
      "type": "edit",
      "id": "bb5038cbb68ecc0a",
      "item": {
        "type": "markdown",
        "id": "bb5038cbb68ecc0a",
        "text": "A [[Program]] is decisions made. Humans make those decisions and write them into programs. When I (Ward) compare the research programming I did early on to the production programming I've done recently, I find that the activities differ only in the quantity of decisions made on a given day. In both cases decisions come in spurts. A period of investigation precedes a spurt of decisions. Likewise, a period of rather mechanical activity following through with consequences follows a decision spurt. The feeling one gets is of lifting a problem up into the mind, struggling with it until decisions come, then, putting those decisions down in place of the problem. Only then can one relax. This cycle repeats. It's what I call [[Grappling]]. I feel it when I program, with cards or at a machine.\n"
      },
      "date": 1706543687213
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1706585472298
    }
  ]
}