{
  "title": "2023-05-31",
  "story": [
    {
      "type": "paragraph",
      "id": "9d8f6475636b7473",
      "text": "From an information theory perspective, an arbitrary selected pattern can have unbounded amounts of complexity. [https://btm.qva.mybluehost.me/building-arbitrary-life-patterns-in-15-gliders/ post], [https://assemblag.es/@ideoforms/109377632328641624 post]"
    },
    {
      "type": "paragraph",
      "id": "255c4baae5d842f5",
      "text": "Universal [[Constructor]] ⇒ [[Constructor Theory]]"
    },
    {
      "type": "reference",
      "id": "7b3e927514e76d31",
      "site": "wiki.ralfbarkow.ch",
      "slug": "constructor-theory",
      "title": "Constructor Theory",
      "text": "seeks to express all fundamental scientific theories in terms of a dichotomy between [[possible]] and [[impossible]] physical transformations – those that can be caused to happen and those that cannot."
    },
    {
      "type": "paragraph",
      "id": "9ddff89fd69ee592",
      "text": "Context:"
    },
    {
      "type": "paragraph",
      "id": "79fd20e888b06517",
      "text": "⇒ [[Trond Hjorteland]] #OpenSystemsTheory #kanDDDinsky [https://hachyderm.io/@trondhjort/110458320719239555 post] – October"
    },
    {
      "type": "paragraph",
      "id": "9579fb7aaad74ebc",
      "text": "⇒ Heimeshoff: The CookieCutterContext [https://mastodon.social/@Heimeshoff/109427870140617602 post] (Templates)"
    },
    {
      "type": "pagefold",
      "id": "fdf0a3eda790315b",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9e01cdfeef0f33a2",
      "text": "[[Using Lamdera Professionally]]"
    },
    {
      "type": "paragraph",
      "id": "c57605bf4e5565cd",
      "text": "Using [[Lamdera]] professionally [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142 post]"
    },
    {
      "type": "paragraph",
      "id": "3333bc05cbef7fa0",
      "text": "A real estate agent, referred to often as a realtor and/or a real estate broker, is a person who represents sellers or buyers of real estate or real property. [https://en.wikipedia.org/wiki/Real_estate_agent wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "f6b6863138a6f396",
      "text": "a postgres database and http requests would be made to it the old fashioned way. ⇒ [[Make HTTP Requests in Elm]]"
    },
    {
      "type": "paragraph",
      "id": "9f0bca41d5c02217",
      "text": "jbrgfx /\nelm-tutorial-app-using-PostgREST-API\nPublic\nforked from sporto/elm-example-app [https://github.com/jbrgfx/elm-tutorial-app-using-PostgREST-API github], [https://github.com/sporto/elm-example-app github]"
    },
    {
      "type": "paragraph",
      "id": "6379030b58a46543",
      "text": "An example Elm single page application built for https://www.elm-tutorial.org/en/06-fetching-resources/cover.html adapted to use postgRest and postgreSQL data rather than the Javascript JSON server and static JSON data file in the original project."
    },
    {
      "type": "paragraph",
      "id": "0dfac1c5d48b6c6d",
      "text": "⇒ [[Lamdera]]"
    },
    {
      "type": "html",
      "id": "230100ccc388b220",
      "text": "<img\n  src=\"https://dashboard.lamdera.app/glue-problem.png\"\n  width=\"100%\"\n>"
    },
    {
      "type": "paragraph",
      "id": "37c1004eb77b9eb9",
      "text": "Re: Transport, see [[Page.json]] [⇒ [[Wiki Page JSON]]]"
    },
    {
      "type": "paragraph",
      "id": "aa598cb89479a79f",
      "text": "Note: The connection to the transport.fedwiki.org server failed."
    },
    {
      "type": "reference",
      "id": "ab8db28b3ad06a5b",
      "site": "wiki.ralfbarkow.ch",
      "slug": "transport-model",
      "title": "Transport Model",
      "text": "is a model stored on a [[Transport Server]] such as the [[Liveworld Server]]. They are (or at lest should be) built on top of the following foundational handlers:"
    },
    {
      "type": "pagefold",
      "id": "ada01d56bee7ad08",
      "text": "Storing Data"
    },
    {
      "type": "paragraph",
      "id": "fc6849f5c3f9f810",
      "text": "⇒ [[Martin Stewart]] has talked with Mario about this and he’s put together a [https://realmario.notion.site/Lamdera-Data-Storage-faf9d90bc31e45cc9959caec5ced4ad2 draft] describing what data guarantees Lamdera provides. "
    },
    {
      "type": "markdown",
      "id": "996bfd5302636132",
      "text": "# How Backend Persistence Works in Lamdera"
    },
    {
      "type": "paragraph",
      "id": "49175e7fbc0d0966",
      "text": "Lamdera apps provide persistence by combining a few architectural properties:"
    },
    {
      "type": "paragraph",
      "id": "3251a51f8dfd70ea",
      "text": "Write-ahead-log (WAL): Every message is persisted to an ACID data store (Postgres) before it gets processed. [⇒ [[TCR]]]"
    },
    {
      "type": "paragraph",
      "id": "fea1f7381a74f6c8",
      "text": "[[The Elm Architecture]] (TEA)\n"
    },
    {
      "type": "pagefold",
      "id": "ceb2d98362c2e935",
      "text": "Tooling support for Lamdera"
    },
    {
      "type": "paragraph",
      "id": "6677a24fb76747ef",
      "text": "Tooling support for Lamdera is mixed right now:"
    },
    {
      "type": "paragraph",
      "id": "3e75eed0a280294c",
      "text": "The Elm plugin for Intellij can fail to load lamdera projects and the package cache can end up in a weird state (lamdera reset usually fixes these issues) "
    },
    {
      "type": "paragraph",
      "id": "b86d20a357764f0d",
      "text": "elm-json doesn’t know about Lamdera packages"
    },
    {
      "type": "paragraph",
      "id": "513300058e443b28",
      "text": "elm-dependencies-analyzer had the same issue but [[Martin Stewart]] got a PR merged that adds support"
    },
    {
      "type": "paragraph",
      "id": "d40d143af9f78513",
      "text": "Elm-review fully supports Lamdera!"
    },
    {
      "type": "pagefold",
      "id": "20f7423ac7442bd0",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "78206e8efcf34c8a",
      "text": "# Creating a Map Widget in Pure Elm"
    },
    {
      "type": "paragraph",
      "id": "fac48b14f472f06d",
      "text": "An important part of the app is displaying an interactive map with markers to show where realtors have previously sold properties. [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142#creating-a-map-widget-in-pure-elm-3 post]"
    },
    {
      "type": "paragraph",
      "id": "0b0698396e3f7ad5",
      "text": "Mapbox: ⇒ [[Jakub Hampl]] ⇒ elm-mapbox [https://package.elm-lang.org/packages/gampleman/elm-mapbox/latest/ page], [https://github.com/gampleman/elm-mapbox/tree/4.1.0 github]"
    },
    {
      "type": "paragraph",
      "id": "7ad4ce54d90d6a83",
      "text": "Mapbox to Elm Style Converter [https://code.gampleman.eu/elm-mapbox/style-generator/ page]"
    },
    {
      "type": "paragraph",
      "id": "872d5218bc54a0dd",
      "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[Leaflet]] vs [[Mapbox]]:\nThey are both brain children to a large extent of one person: [[Volodymyr Agafonkin]]. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
    },
    {
      "type": "paragraph",
      "id": "57e091e82cac82f2",
      "text": "WebGL for Elm [https://package.elm-lang.org/packages/elm-explorations/webgl/latest/ page]"
    },
    {
      "type": "paragraph",
      "id": "62ab78b0e3af095b",
      "text": "MartinSStewart /\nelm-map [https://github.com/MartinSStewart/elm-map github] – A world map viewer written purely in Elm "
    },
    {
      "type": "paragraph",
      "id": "bbd41a41c8835812",
      "text": "This package does depend on [[Mapbox]] servers to provide vector tiles. You'll need to create an account with them and generate an API key."
    },
    {
      "type": "paragraph",
      "id": "05f56c2c800c36d1",
      "text": "… if you like to hire me to …"
    },
    {
      "type": "pagefold",
      "id": "9917134807ba9ac3",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "bdf9aeb23575ee69",
      "text": "Over the Wall ⇒ [[Andrew MacMurray]] ⇒ Map in Elm [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
    },
    {
      "type": "paragraph",
      "id": "6eed6b6885c1bd43",
      "text": "Picture for a moment that the square brackets of the List are walls. Imagine also that the function we want to apply \\x -> x * 2 can’t reach over the wall!\n\nWe use map to “lift” the function over the wall of the List to reach the values [[inside]]. The wall is still intact after but the values are now changed."
    },
    {
      "type": "pagefold",
      "id": "648577cefaa0f94f",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "c0fc5dfa9719f0b8",
      "text": "⇒ [[Elm]] ⇒ [[Elm and JSON]]: Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page], [https://github.com/RalfBarkow/vite-elm-dojo/commit/1f56043a46aedec6ac099250a1bf72be17d7d5c1 commit]"
    },
    {
      "type": "paragraph",
      "id": "e02b0e71cb9bec74",
      "text": "We now modify this example to get a [[Wiki Page JSON]] instead of a random quote."
    },
    {
      "type": "paragraph",
      "id": "055512bb7923b0cd",
      "text": "Elm 0.19: How to obtain request body when receiving BadStatus with elm/http 2.0.0 [https://stackoverflow.com/questions/54379403/elm-0-19-how-to-obtain-request-body-when-receiving-badstatus-with-elm-http-2-0 stackoverflow]"
    },
    {
      "type": "paragraph",
      "id": "90a2bbc3b4158ec4",
      "text": "⇒ [[Jeffrey Huang]], Going Beyond 200 OK: A Guide to Detailed HTTP Responses in Elm [https://jzxhuang.medium.com/going-beyond-200-ok-a-guide-to-detailed-http-responses-in-elm-6ddd02322e post]"
    },
    {
      "type": "paragraph",
      "id": "e009a7652f58fca8",
      "text": "Jeffrey wrote this article on how to extract detailed information from an HTTP response, it includes multiple Ellie examples that don't require the package, as well as an example that uses the package. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-05-31",
        "story": []
      },
      "date": 1685512017419
    },
    {
      "item": {
        "type": "factory",
        "id": "9d8f6475636b7473"
      },
      "id": "9d8f6475636b7473",
      "type": "add",
      "date": 1685512018788
    },
    {
      "type": "edit",
      "id": "9d8f6475636b7473",
      "item": {
        "type": "paragraph",
        "id": "9d8f6475636b7473",
        "text": "From an information theory perspective, an arbitrary selected pattern can have unbounded amounts of complexity."
      },
      "date": 1685512021827
    },
    {
      "type": "edit",
      "id": "9d8f6475636b7473",
      "item": {
        "type": "paragraph",
        "id": "9d8f6475636b7473",
        "text": "From an information theory perspective, an arbitrary selected pattern can have unbounded amounts of complexity. [https://btm.qva.mybluehost.me/building-arbitrary-life-patterns-in-15-gliders/ post]"
      },
      "date": 1685512039300
    },
    {
      "type": "edit",
      "id": "9d8f6475636b7473",
      "item": {
        "type": "paragraph",
        "id": "9d8f6475636b7473",
        "text": "From an information theory perspective, an arbitrary selected pattern can have unbounded amounts of complexity. [https://btm.qva.mybluehost.me/building-arbitrary-life-patterns-in-15-gliders/ post], [https://assemblag.es/@ideoforms/109377632328641624 post]"
      },
      "date": 1685512134164
    },
    {
      "item": {
        "type": "factory",
        "id": "255c4baae5d842f5"
      },
      "id": "255c4baae5d842f5",
      "type": "add",
      "after": "9d8f6475636b7473",
      "date": 1685512292639
    },
    {
      "type": "edit",
      "id": "255c4baae5d842f5",
      "item": {
        "type": "paragraph",
        "id": "255c4baae5d842f5",
        "text": "Universal constructor"
      },
      "date": 1685512297224
    },
    {
      "type": "edit",
      "id": "255c4baae5d842f5",
      "item": {
        "type": "paragraph",
        "id": "255c4baae5d842f5",
        "text": "Universal [[Constructor]]"
      },
      "date": 1685512313679
    },
    {
      "item": {
        "type": "factory",
        "id": "7b3e927514e76d31"
      },
      "id": "7b3e927514e76d31",
      "type": "add",
      "after": "255c4baae5d842f5",
      "date": 1685512331958
    },
    {
      "type": "edit",
      "id": "7b3e927514e76d31",
      "item": {
        "type": "reference",
        "id": "7b3e927514e76d31",
        "site": "wiki.ralfbarkow.ch",
        "slug": "constructor-theory",
        "title": "Constructor Theory",
        "text": "seeks to express all fundamental scientific theories in terms of a dichotomy between [[possible]] and [[impossible]] physical transformations–those that can be caused to happen and those that cannot."
      },
      "date": 1685512333833
    },
    {
      "type": "edit",
      "id": "7b3e927514e76d31",
      "item": {
        "type": "reference",
        "id": "7b3e927514e76d31",
        "site": "wiki.ralfbarkow.ch",
        "slug": "constructor-theory",
        "title": "Constructor Theory",
        "text": "seeks to express all fundamental scientific theories in terms of a dichotomy between [[possible]] and [[impossible]] physical transformations – those that can be caused to happen and those that cannot."
      },
      "date": 1685512354721
    },
    {
      "type": "edit",
      "id": "255c4baae5d842f5",
      "item": {
        "type": "paragraph",
        "id": "255c4baae5d842f5",
        "text": "Universal [[Constructor]] ⇒ [[Constructor Theory]]"
      },
      "date": 1685512398661
    },
    {
      "item": {
        "type": "factory",
        "id": "9ddff89fd69ee592"
      },
      "id": "9ddff89fd69ee592",
      "type": "add",
      "after": "7b3e927514e76d31",
      "date": 1685512647138
    },
    {
      "type": "edit",
      "id": "9ddff89fd69ee592",
      "item": {
        "type": "paragraph",
        "id": "9ddff89fd69ee592",
        "text": "Context:"
      },
      "date": 1685512651667
    },
    {
      "type": "add",
      "id": "79fd20e888b06517",
      "item": {
        "type": "paragraph",
        "id": "79fd20e888b06517",
        "text": "⇒ [[Trond Hjorteland]]"
      },
      "after": "9ddff89fd69ee592",
      "date": 1685512691400
    },
    {
      "type": "edit",
      "id": "79fd20e888b06517",
      "item": {
        "type": "paragraph",
        "id": "79fd20e888b06517",
        "text": "⇒ [[Trond Hjorteland]] [https://hachyderm.io/@trondhjort/110458320719239555 post]"
      },
      "date": 1685512708976
    },
    {
      "item": {
        "type": "factory",
        "id": "9579fb7aaad74ebc"
      },
      "id": "9579fb7aaad74ebc",
      "type": "add",
      "after": "79fd20e888b06517",
      "date": 1685512855528
    },
    {
      "type": "edit",
      "id": "9579fb7aaad74ebc",
      "item": {
        "type": "paragraph",
        "id": "9579fb7aaad74ebc",
        "text": "Templates"
      },
      "date": 1685512865355
    },
    {
      "type": "edit",
      "id": "9579fb7aaad74ebc",
      "item": {
        "type": "paragraph",
        "id": "9579fb7aaad74ebc",
        "text": "⇒ Heimeshoff [https://mastodon.social/@Heimeshoff/109427870140617602 post] Templates"
      },
      "date": 1685512924857
    },
    {
      "type": "edit",
      "id": "9579fb7aaad74ebc",
      "item": {
        "type": "paragraph",
        "id": "9579fb7aaad74ebc",
        "text": "⇒ Heimeshoff The CookieCutterContext [https://mastodon.social/@Heimeshoff/109427870140617602 post] Templates"
      },
      "date": 1685512936415
    },
    {
      "type": "edit",
      "id": "9579fb7aaad74ebc",
      "item": {
        "type": "paragraph",
        "id": "9579fb7aaad74ebc",
        "text": "⇒ Heimeshoff The CookieCutterContext [https://mastodon.social/@Heimeshoff/109427870140617602 post] (Templates)"
      },
      "date": 1685512943683
    },
    {
      "type": "edit",
      "id": "9579fb7aaad74ebc",
      "item": {
        "type": "paragraph",
        "id": "9579fb7aaad74ebc",
        "text": "⇒ Heimeshoff: The CookieCutterContext [https://mastodon.social/@Heimeshoff/109427870140617602 post] (Templates)"
      },
      "date": 1685512957421
    },
    {
      "type": "edit",
      "id": "79fd20e888b06517",
      "item": {
        "type": "paragraph",
        "id": "79fd20e888b06517",
        "text": "⇒ [[Trond Hjorteland]] #OpenSystemsTheory #kanDDDinsky [https://hachyderm.io/@trondhjort/110458320719239555 post]"
      },
      "date": 1685513197940
    },
    {
      "type": "edit",
      "id": "79fd20e888b06517",
      "item": {
        "type": "paragraph",
        "id": "79fd20e888b06517",
        "text": "⇒ [[Trond Hjorteland]] #OpenSystemsTheory #kanDDDinsky [https://hachyderm.io/@trondhjort/110458320719239555 post] – October"
      },
      "date": 1685513238637
    },
    {
      "item": {
        "type": "factory",
        "id": "fdf0a3eda790315b"
      },
      "id": "fdf0a3eda790315b",
      "type": "add",
      "after": "9579fb7aaad74ebc",
      "date": 1685513295102
    },
    {
      "type": "edit",
      "id": "fdf0a3eda790315b",
      "item": {
        "type": "pagefold",
        "id": "fdf0a3eda790315b",
        "text": "~"
      },
      "date": 1685513299460
    },
    {
      "item": {
        "type": "factory",
        "id": "9e01cdfeef0f33a2"
      },
      "id": "9e01cdfeef0f33a2",
      "type": "add",
      "after": "fdf0a3eda790315b",
      "date": 1685513300810
    },
    {
      "type": "edit",
      "id": "9e01cdfeef0f33a2",
      "item": {
        "type": "paragraph",
        "id": "9e01cdfeef0f33a2",
        "text": "Using [[Lamdera]] professionally"
      },
      "date": 1685513310008
    },
    {
      "type": "edit",
      "id": "9e01cdfeef0f33a2",
      "item": {
        "type": "paragraph",
        "id": "9e01cdfeef0f33a2",
        "text": "Using [[Lamdera]] professionally [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142 post]"
      },
      "date": 1685513328239
    },
    {
      "type": "add",
      "id": "3333bc05cbef7fa0",
      "item": {
        "type": "paragraph",
        "id": "3333bc05cbef7fa0",
        "text": "A real estate agent, referred to often as a realtor and/or a real estate broker, is a person who represents sellers or buyers of real estate or real property. "
      },
      "after": "9e01cdfeef0f33a2",
      "date": 1685513566772
    },
    {
      "type": "edit",
      "id": "3333bc05cbef7fa0",
      "item": {
        "type": "paragraph",
        "id": "3333bc05cbef7fa0",
        "text": "A real estate agent, referred to often as a realtor and/or a real estate broker, is a person who represents sellers or buyers of real estate or real property. [https://en.wikipedia.org/wiki/Real_estate_agent wikipedia]"
      },
      "date": 1685513578965
    },
    {
      "type": "add",
      "id": "f6b6863138a6f396",
      "item": {
        "type": "paragraph",
        "id": "f6b6863138a6f396",
        "text": "a postgres database and http requests would be made to it the old fashioned way."
      },
      "after": "3333bc05cbef7fa0",
      "date": 1685513642363
    },
    {
      "type": "edit",
      "id": "f6b6863138a6f396",
      "item": {
        "type": "paragraph",
        "id": "f6b6863138a6f396",
        "text": "a postgres database and http requests would be made to it the old fashioned way. ⇒ [[Make HTTP Requests in Elm]]"
      },
      "date": 1685513703181
    },
    {
      "item": {
        "type": "factory",
        "id": "6379030b58a46543"
      },
      "id": "6379030b58a46543",
      "type": "add",
      "after": "f6b6863138a6f396",
      "date": 1685515135783
    },
    {
      "type": "edit",
      "id": "6379030b58a46543",
      "item": {
        "type": "paragraph",
        "id": "6379030b58a46543",
        "text": "An example Elm single page application built for https://www.elm-tutorial.org/en/06-fetching-resources/cover.html adapted to use postgRest and postgreSQL data rather than the Javascript JSON server and static JSON data file in the original project."
      },
      "date": 1685515145238
    },
    {
      "type": "add",
      "id": "9f0bca41d5c02217",
      "item": {
        "type": "paragraph",
        "id": "9f0bca41d5c02217",
        "text": "jbrgfx /\nelm-tutorial-app-using-PostgREST-API\nPublic\nforked from sporto/elm-example-app "
      },
      "after": "f6b6863138a6f396",
      "date": 1685515178198
    },
    {
      "type": "edit",
      "id": "9f0bca41d5c02217",
      "item": {
        "type": "paragraph",
        "id": "9f0bca41d5c02217",
        "text": "jbrgfx /\nelm-tutorial-app-using-PostgREST-API\nPublic\nforked from sporto/elm-example-app [https://github.com/jbrgfx/elm-tutorial-app-using-PostgREST-API github]"
      },
      "date": 1685515256528
    },
    {
      "type": "edit",
      "id": "9f0bca41d5c02217",
      "item": {
        "type": "paragraph",
        "id": "9f0bca41d5c02217",
        "text": "jbrgfx /\nelm-tutorial-app-using-PostgREST-API\nPublic\nforked from sporto/elm-example-app [https://github.com/jbrgfx/elm-tutorial-app-using-PostgREST-API github], [https://github.com/sporto/elm-example-app github]"
      },
      "date": 1685515268920
    },
    {
      "item": {
        "type": "factory",
        "id": "e4859f7a9561411d"
      },
      "id": "e4859f7a9561411d",
      "type": "add",
      "after": "6379030b58a46543",
      "date": 1685516881768
    },
    {
      "type": "remove",
      "id": "e4859f7a9561411d",
      "date": 1685516884998
    },
    {
      "item": {
        "type": "factory",
        "id": "230100ccc388b220"
      },
      "id": "230100ccc388b220",
      "type": "add",
      "after": "6379030b58a46543",
      "date": 1685516886856
    },
    {
      "type": "edit",
      "id": "230100ccc388b220",
      "item": {
        "type": "html",
        "id": "230100ccc388b220",
        "text": "<img\n  src=\"https://dashboard.lamdera.app/glue-problem.png\"\n  width=\"100%\"\n>"
      },
      "date": 1685516901540
    },
    {
      "item": {
        "type": "factory",
        "id": "37c1004eb77b9eb9"
      },
      "id": "37c1004eb77b9eb9",
      "type": "add",
      "after": "230100ccc388b220",
      "date": 1685516916841
    },
    {
      "type": "edit",
      "id": "37c1004eb77b9eb9",
      "item": {
        "type": "paragraph",
        "id": "37c1004eb77b9eb9",
        "text": "Re: Transport"
      },
      "date": 1685516925409
    },
    {
      "type": "add",
      "id": "fca8f7317cd38034",
      "item": {
        "type": "paragraph",
        "id": "fca8f7317cd38034",
        "text": "See [[page.json]]"
      },
      "after": "37c1004eb77b9eb9",
      "date": 1685516930713
    },
    {
      "type": "edit",
      "id": "fca8f7317cd38034",
      "item": {
        "type": "paragraph",
        "id": "fca8f7317cd38034",
        "text": "See [[Page.json]]"
      },
      "date": 1685516939110
    },
    {
      "type": "add",
      "id": "aa598cb89479a79f",
      "item": {
        "type": "paragraph",
        "id": "aa598cb89479a79f",
        "text": "Note: The connection to the transport.fedwiki.org server failed."
      },
      "after": "fca8f7317cd38034",
      "date": 1685517118703
    },
    {
      "type": "add",
      "id": "0dfac1c5d48b6c6d",
      "item": {
        "type": "paragraph",
        "id": "0dfac1c5d48b6c6d",
        "text": "⇒ [[Lamdera]]"
      },
      "after": "6379030b58a46543",
      "date": 1685517161998
    },
    {
      "item": {
        "type": "factory",
        "id": "fc6849f5c3f9f810"
      },
      "id": "fc6849f5c3f9f810",
      "type": "add",
      "after": "aa598cb89479a79f",
      "date": 1685517577016
    },
    {
      "type": "edit",
      "id": "fc6849f5c3f9f810",
      "item": {
        "type": "paragraph",
        "id": "fc6849f5c3f9f810",
        "text": ". I spoke with Mario about this and he’s put together a draft 13 describing what data guarantees Lamdera provides. "
      },
      "date": 1685517589825
    },
    {
      "item": {
        "type": "factory",
        "id": "d7c993cbf30dedd5"
      },
      "id": "d7c993cbf30dedd5",
      "type": "add",
      "after": "fc6849f5c3f9f810",
      "date": 1685517635937
    },
    {
      "id": "d7c993cbf30dedd5",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "fca8f7317cd38034",
        "aa598cb89479a79f",
        "d7c993cbf30dedd5",
        "fc6849f5c3f9f810"
      ],
      "date": 1685517638349
    },
    {
      "type": "edit",
      "id": "d7c993cbf30dedd5",
      "item": {
        "type": "mathjax",
        "id": "d7c993cbf30dedd5",
        "text": "Storing Data"
      },
      "date": 1685517640752
    },
    {
      "type": "edit",
      "id": "fc6849f5c3f9f810",
      "item": {
        "type": "paragraph",
        "id": "fc6849f5c3f9f810",
        "text": "⇒ [[artin Stewart)]] spoke with Mario about this and he’s put together a draft 13 describing what data guarantees Lamdera provides. "
      },
      "date": 1685517799066
    },
    {
      "type": "edit",
      "id": "fc6849f5c3f9f810",
      "item": {
        "type": "paragraph",
        "id": "fc6849f5c3f9f810",
        "text": "⇒ [[Martin Stewart]] spoke with Mario about this and he’s put together a draft 13 describing what data guarantees Lamdera provides. "
      },
      "date": 1685517809446
    },
    {
      "type": "edit",
      "id": "fc6849f5c3f9f810",
      "item": {
        "type": "paragraph",
        "id": "fc6849f5c3f9f810",
        "text": "⇒ [[Martin Stewart]] has talked with Mario about this and he’s put together a draft 13 describing what data guarantees Lamdera provides. "
      },
      "date": 1685517820537
    },
    {
      "type": "edit",
      "id": "fc6849f5c3f9f810",
      "item": {
        "type": "paragraph",
        "id": "fc6849f5c3f9f810",
        "text": "⇒ [[Martin Stewart]] has talked with Mario about this and he’s put together a [https://realmario.notion.site/Lamdera-Data-Storage-faf9d90bc31e45cc9959caec5ced4ad2 draft] describing what data guarantees Lamdera provides. "
      },
      "date": 1685517885795
    },
    {
      "item": {
        "type": "factory",
        "id": "996bfd5302636132"
      },
      "id": "996bfd5302636132",
      "type": "add",
      "after": "fc6849f5c3f9f810",
      "date": 1685517906879
    },
    {
      "type": "edit",
      "id": "996bfd5302636132",
      "item": {
        "type": "paragraph",
        "id": "996bfd5302636132",
        "text": "How backend persistence works in Lamdera\n"
      },
      "date": 1685517908514
    },
    {
      "type": "edit",
      "id": "996bfd5302636132",
      "item": {
        "type": "paragraph",
        "id": "996bfd5302636132",
        "text": "# How backend persistence works in Lamdera\n"
      },
      "date": 1685517927439
    },
    {
      "item": {
        "type": "factory",
        "id": "49175e7fbc0d0966"
      },
      "id": "49175e7fbc0d0966",
      "type": "add",
      "after": "996bfd5302636132",
      "date": 1685517928704
    },
    {
      "type": "edit",
      "id": "49175e7fbc0d0966",
      "item": {
        "type": "paragraph",
        "id": "49175e7fbc0d0966",
        "text": "Lamdera apps provide persistence by combining a few architectural properties:"
      },
      "date": 1685517930548
    },
    {
      "type": "edit",
      "id": "996bfd5302636132",
      "item": {
        "type": "paragraph",
        "id": "996bfd5302636132",
        "text": "# How Backend Persistence Works in Lamdera"
      },
      "date": 1685517961211
    },
    {
      "type": "edit",
      "id": "996bfd5302636132",
      "item": {
        "type": "markdown",
        "id": "996bfd5302636132",
        "text": "# How Backend Persistence Works in Lamdera"
      },
      "date": 1685517962751
    },
    {
      "type": "add",
      "id": "3251a51f8dfd70ea",
      "item": {
        "type": "paragraph",
        "id": "3251a51f8dfd70ea",
        "text": "Write-ahead-log (WAL)\n"
      },
      "after": "49175e7fbc0d0966",
      "date": 1685518012096
    },
    {
      "type": "edit",
      "id": "3251a51f8dfd70ea",
      "item": {
        "type": "paragraph",
        "id": "3251a51f8dfd70ea",
        "text": "Write-ahead-log (WAL): Every message is persisted to an ACID data store (Postgres) before it gets processed."
      },
      "date": 1685518024025
    },
    {
      "type": "add",
      "id": "fea1f7381a74f6c8",
      "item": {
        "type": "paragraph",
        "id": "fea1f7381a74f6c8",
        "text": "The Elm Architecture (TEA)\n"
      },
      "after": "3251a51f8dfd70ea",
      "date": 1685518025246
    },
    {
      "type": "edit",
      "id": "fea1f7381a74f6c8",
      "item": {
        "type": "paragraph",
        "id": "fea1f7381a74f6c8",
        "text": "[[The Elm Architecture]] (TEA)\n"
      },
      "date": 1685518050970
    },
    {
      "type": "remove",
      "id": "d7c993cbf30dedd5",
      "date": 1685518110692
    },
    {
      "item": {
        "type": "factory",
        "id": "ada01d56bee7ad08"
      },
      "id": "ada01d56bee7ad08",
      "type": "add",
      "after": "fea1f7381a74f6c8",
      "date": 1685518112451
    },
    {
      "type": "edit",
      "id": "ada01d56bee7ad08",
      "item": {
        "type": "pagefold",
        "id": "ada01d56bee7ad08",
        "text": "Storing Data"
      },
      "date": 1685518114111
    },
    {
      "id": "ada01d56bee7ad08",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "fca8f7317cd38034",
        "aa598cb89479a79f",
        "fc6849f5c3f9f810",
        "996bfd5302636132",
        "49175e7fbc0d0966",
        "ada01d56bee7ad08",
        "3251a51f8dfd70ea",
        "fea1f7381a74f6c8"
      ],
      "date": 1685518116953
    },
    {
      "id": "ada01d56bee7ad08",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "fca8f7317cd38034",
        "aa598cb89479a79f",
        "ada01d56bee7ad08",
        "fc6849f5c3f9f810",
        "996bfd5302636132",
        "49175e7fbc0d0966",
        "3251a51f8dfd70ea",
        "fea1f7381a74f6c8"
      ],
      "date": 1685518119367
    },
    {
      "item": {
        "type": "factory",
        "id": "ceb2d98362c2e935"
      },
      "id": "ceb2d98362c2e935",
      "type": "add",
      "after": "fea1f7381a74f6c8",
      "date": 1685518122170
    },
    {
      "type": "edit",
      "id": "ceb2d98362c2e935",
      "item": {
        "type": "pagefold",
        "id": "ceb2d98362c2e935",
        "text": "~"
      },
      "date": 1685518124969
    },
    {
      "type": "edit",
      "id": "ceb2d98362c2e935",
      "item": {
        "type": "pagefold",
        "id": "ceb2d98362c2e935",
        "text": "Tooling support for Lamdera"
      },
      "date": 1685518180745
    },
    {
      "item": {
        "type": "factory",
        "id": "6677a24fb76747ef"
      },
      "id": "6677a24fb76747ef",
      "type": "add",
      "after": "ceb2d98362c2e935",
      "date": 1685518193537
    },
    {
      "type": "edit",
      "id": "6677a24fb76747ef",
      "item": {
        "type": "paragraph",
        "id": "6677a24fb76747ef",
        "text": "Tooling support for Lamdera is mixed right now "
      },
      "date": 1685518196126
    },
    {
      "type": "edit",
      "id": "6677a24fb76747ef",
      "item": {
        "type": "paragraph",
        "id": "6677a24fb76747ef",
        "text": "Tooling support for Lamdera is mixed right now:"
      },
      "date": 1685518206225
    },
    {
      "type": "add",
      "id": "3e75eed0a280294c",
      "item": {
        "type": "paragraph",
        "id": "3e75eed0a280294c",
        "text": "The Elm plugin for Intellij can fail to load lamdera projects and the package cache can end up in a weird state (lamdera reset usually fixes these issues) "
      },
      "after": "6677a24fb76747ef",
      "date": 1685518207041
    },
    {
      "type": "add",
      "id": "b86d20a357764f0d",
      "item": {
        "type": "paragraph",
        "id": "b86d20a357764f0d",
        "text": "elm-json doesn’t know about Lamdera packages"
      },
      "after": "3e75eed0a280294c",
      "date": 1685518224497
    },
    {
      "type": "add",
      "id": "513300058e443b28",
      "item": {
        "type": "paragraph",
        "id": "513300058e443b28",
        "text": "elm-dependencies-analyzer had the same issue but I got a PR merged that adds support"
      },
      "after": "b86d20a357764f0d",
      "date": 1685518245739
    },
    {
      "type": "edit",
      "id": "513300058e443b28",
      "item": {
        "type": "paragraph",
        "id": "513300058e443b28",
        "text": "elm-dependencies-analyzer had the same issue but [[Martin Stewart]] got a PR merged that adds support"
      },
      "date": 1685518255838
    },
    {
      "type": "add",
      "id": "d40d143af9f78513",
      "item": {
        "type": "paragraph",
        "id": "d40d143af9f78513",
        "text": "Elm-review fully supports Lamdera!"
      },
      "after": "513300058e443b28",
      "date": 1685518269029
    },
    {
      "item": {
        "type": "factory",
        "id": "20f7423ac7442bd0"
      },
      "id": "20f7423ac7442bd0",
      "type": "add",
      "after": "d40d143af9f78513",
      "date": 1685518320357
    },
    {
      "type": "edit",
      "id": "20f7423ac7442bd0",
      "item": {
        "type": "pagefold",
        "id": "20f7423ac7442bd0",
        "text": "~"
      },
      "date": 1685518323526
    },
    {
      "item": {
        "type": "factory",
        "id": "78206e8efcf34c8a"
      },
      "id": "78206e8efcf34c8a",
      "type": "add",
      "after": "20f7423ac7442bd0",
      "date": 1685518324582
    },
    {
      "type": "edit",
      "id": "78206e8efcf34c8a",
      "item": {
        "type": "paragraph",
        "id": "78206e8efcf34c8a",
        "text": "# Creating a Map Widget in Pure Elm"
      },
      "date": 1685518327802
    },
    {
      "type": "add",
      "id": "fac48b14f472f06d",
      "item": {
        "type": "paragraph",
        "id": "fac48b14f472f06d",
        "text": "An important part of the app is displaying an interactive map with markers to show where realtors have previously sold properties."
      },
      "after": "78206e8efcf34c8a",
      "date": 1685518339838
    },
    {
      "type": "edit",
      "id": "78206e8efcf34c8a",
      "item": {
        "type": "markdown",
        "id": "78206e8efcf34c8a",
        "text": "# Creating a Map Widget in Pure Elm"
      },
      "date": 1685518340682
    },
    {
      "type": "edit",
      "id": "fac48b14f472f06d",
      "item": {
        "type": "paragraph",
        "id": "fac48b14f472f06d",
        "text": "An important part of the app is displaying an interactive map with markers to show where realtors have previously sold properties. [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142#creating-a-map-widget-in-pure-elm-3 post]"
      },
      "date": 1685518355842
    },
    {
      "type": "add",
      "id": "0b0698396e3f7ad5",
      "item": {
        "type": "paragraph",
        "id": "0b0698396e3f7ad5",
        "text": "Mapbox"
      },
      "after": "fac48b14f472f06d",
      "date": 1685518395238
    },
    {
      "type": "edit",
      "id": "0b0698396e3f7ad5",
      "item": {
        "type": "paragraph",
        "id": "0b0698396e3f7ad5",
        "text": "Mapbox: elm-mapbox"
      },
      "date": 1685518411119
    },
    {
      "type": "edit",
      "id": "0b0698396e3f7ad5",
      "item": {
        "type": "paragraph",
        "id": "0b0698396e3f7ad5",
        "text": "Mapbox: elm-mapbox [https://package.elm-lang.org/packages/gampleman/elm-mapbox/latest/ page]"
      },
      "date": 1685518418097
    },
    {
      "type": "edit",
      "id": "0b0698396e3f7ad5",
      "item": {
        "type": "paragraph",
        "id": "0b0698396e3f7ad5",
        "text": "Mapbox: elm-mapbox [https://package.elm-lang.org/packages/gampleman/elm-mapbox/latest/ page], [https://github.com/gampleman/elm-mapbox/tree/4.1.0 github]"
      },
      "date": 1685518482500
    },
    {
      "type": "add",
      "id": "7ad4ce54d90d6a83",
      "item": {
        "type": "paragraph",
        "id": "7ad4ce54d90d6a83",
        "text": "Mapbox to Elm Style Converter\n"
      },
      "after": "0b0698396e3f7ad5",
      "date": 1685519099910
    },
    {
      "type": "edit",
      "id": "7ad4ce54d90d6a83",
      "item": {
        "type": "paragraph",
        "id": "7ad4ce54d90d6a83",
        "text": "Mapbox to Elm Style Converter [https://code.gampleman.eu/elm-mapbox/style-generator/ site]"
      },
      "date": 1685519113553
    },
    {
      "type": "edit",
      "id": "7ad4ce54d90d6a83",
      "item": {
        "type": "paragraph",
        "id": "7ad4ce54d90d6a83",
        "text": "Mapbox to Elm Style Converter [https://code.gampleman.eu/elm-mapbox/style-generator/ page]"
      },
      "date": 1685519171814
    },
    {
      "type": "edit",
      "id": "0b0698396e3f7ad5",
      "item": {
        "type": "paragraph",
        "id": "0b0698396e3f7ad5",
        "text": "Mapbox: ⇒ [[Jakub Hampl]] ⇒ elm-mapbox [https://package.elm-lang.org/packages/gampleman/elm-mapbox/latest/ page], [https://github.com/gampleman/elm-mapbox/tree/4.1.0 github]"
      },
      "date": 1685519312972
    },
    {
      "type": "add",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman:\n\n\nJust on leaflet vs mapbox:\nThey are both brain children to a large extent of one person: Volodomir Agafonkin. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "after": "7ad4ce54d90d6a83",
      "date": 1685519401831
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\n\n\nJust on leaflet vs mapbox:\nThey are both brain children to a large extent of one person: Volodomir Agafonkin. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519420953
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on leaflet vs mapbox:\nThey are both brain children to a large extent of one person: Volodomir Agafonkin. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519426413
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[leaflet]] vs [[mapbox]]:\nThey are both brain children to a large extent of one person: Volodomir Agafonkin. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519442190
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[leaflet]] vs [[mapbox]]:\nThey are both brain children to a large extent of one person: [[Volodomir Agafonkin]]. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519463327
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[Leaflet]] vs [[mapbox]]:\nThey are both brain children to a large extent of one person: [[Volodomir Agafonkin]]. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519673255
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[Leaflet]] vs [[Mapbox]]:\nThey are both brain children to a large extent of one person: [[Volodomir Agafonkin]]. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519731139
    },
    {
      "type": "edit",
      "id": "872d5218bc54a0dd",
      "item": {
        "type": "paragraph",
        "id": "872d5218bc54a0dd",
        "text": "gampleman via [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142/12 discourse]:\nJust on [[Leaflet]] vs [[Mapbox]]:\nThey are both brain children to a large extent of one person: [[Volodymyr Agafonkin]]. Leaflet is the older sibling predominantly designed to deal with raster tiles and focuses on simplicity (and asset size consequently), Mapbox on the other hand pioneered a lot of vector tile rendering technology and focuses more on performance and customasiblity of the output (and more recently on 3D)."
      },
      "date": 1685519879773
    },
    {
      "item": {
        "type": "factory",
        "id": "57e091e82cac82f2"
      },
      "id": "57e091e82cac82f2",
      "type": "add",
      "after": "872d5218bc54a0dd",
      "date": 1685519982030
    },
    {
      "type": "edit",
      "id": "57e091e82cac82f2",
      "item": {
        "type": "paragraph",
        "id": "57e091e82cac82f2",
        "text": "WebGL for Elm"
      },
      "date": 1685519985040
    },
    {
      "type": "edit",
      "id": "57e091e82cac82f2",
      "item": {
        "type": "paragraph",
        "id": "57e091e82cac82f2",
        "text": "WebGL for Elm [https://package.elm-lang.org/packages/elm-explorations/webgl/latest/ page]"
      },
      "date": 1685519991801
    },
    {
      "type": "add",
      "id": "62ab78b0e3af095b",
      "item": {
        "type": "paragraph",
        "id": "62ab78b0e3af095b",
        "text": "MartinSStewart /\nelm-map\n"
      },
      "after": "57e091e82cac82f2",
      "date": 1685520187523
    },
    {
      "type": "edit",
      "id": "62ab78b0e3af095b",
      "item": {
        "type": "paragraph",
        "id": "62ab78b0e3af095b",
        "text": "MartinSStewart /\nelm-map [https://github.com/MartinSStewart/elm-map github]"
      },
      "date": 1685520199722
    },
    {
      "type": "edit",
      "id": "62ab78b0e3af095b",
      "item": {
        "type": "paragraph",
        "id": "62ab78b0e3af095b",
        "text": "MartinSStewart /\nelm-map [https://github.com/MartinSStewart/elm-map github] – A world map viewer written purely in Elm "
      },
      "date": 1685520216579
    },
    {
      "type": "add",
      "id": "bbd41a41c8835812",
      "item": {
        "type": "paragraph",
        "id": "bbd41a41c8835812",
        "text": "This package does depend on Mapbox servers to provide vector tiles. You'll need to create an account with them and generate an API key."
      },
      "after": "62ab78b0e3af095b",
      "date": 1685520377216
    },
    {
      "type": "edit",
      "id": "bbd41a41c8835812",
      "item": {
        "type": "paragraph",
        "id": "bbd41a41c8835812",
        "text": "This package does depend on [[Mapbox]] servers to provide vector tiles. You'll need to create an account with them and generate an API key."
      },
      "date": 1685520387941
    },
    {
      "type": "add",
      "id": "05f56c2c800c36d1",
      "item": {
        "type": "paragraph",
        "id": "05f56c2c800c36d1",
        "text": "… if you like to hire me to …"
      },
      "after": "bbd41a41c8835812",
      "date": 1685520425926
    },
    {
      "item": {
        "type": "factory",
        "id": "9917134807ba9ac3"
      },
      "id": "9917134807ba9ac3",
      "type": "add",
      "after": "05f56c2c800c36d1",
      "date": 1685521321451
    },
    {
      "type": "edit",
      "id": "9917134807ba9ac3",
      "item": {
        "type": "pagefold",
        "id": "9917134807ba9ac3",
        "text": "~"
      },
      "date": 1685521326014
    },
    {
      "item": {
        "type": "factory",
        "id": "bdf9aeb23575ee69"
      },
      "id": "bdf9aeb23575ee69",
      "type": "add",
      "after": "9917134807ba9ac3",
      "date": 1685521327565
    },
    {
      "type": "edit",
      "id": "bdf9aeb23575ee69",
      "item": {
        "type": "paragraph",
        "id": "bdf9aeb23575ee69",
        "text": "Over the Wall"
      },
      "date": 1685521330998
    },
    {
      "type": "edit",
      "id": "bdf9aeb23575ee69",
      "item": {
        "type": "paragraph",
        "id": "bdf9aeb23575ee69",
        "text": "Over the Wall [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
      },
      "date": 1685521355219
    },
    {
      "type": "edit",
      "id": "bdf9aeb23575ee69",
      "item": {
        "type": "paragraph",
        "id": "bdf9aeb23575ee69",
        "text": "Over the Wall ⇒ Map in Elm [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
      },
      "date": 1685521371854
    },
    {
      "item": {
        "type": "factory",
        "id": "6eed6b6885c1bd43"
      },
      "id": "6eed6b6885c1bd43",
      "type": "add",
      "after": "bdf9aeb23575ee69",
      "date": 1685521408489
    },
    {
      "type": "edit",
      "id": "6eed6b6885c1bd43",
      "item": {
        "type": "paragraph",
        "id": "6eed6b6885c1bd43",
        "text": "Picture for a moment that the square brackets of the List are walls. Imagine also that the function we want to apply \\x -> x * 2 can’t reach over the wall!\n\nWe use map to “lift” the function over the wall of the List to reach the values inside. The wall is still intact after but the values are now changed."
      },
      "date": 1685521409747
    },
    {
      "type": "edit",
      "id": "6eed6b6885c1bd43",
      "item": {
        "type": "paragraph",
        "id": "6eed6b6885c1bd43",
        "text": "Picture for a moment that the square brackets of the List are walls. Imagine also that the function we want to apply \\x -> x * 2 can’t reach over the wall!\n\nWe use map to “lift” the function over the wall of the List to reach the values [[inside]]. The wall is still intact after but the values are now changed."
      },
      "date": 1685521431308
    },
    {
      "type": "edit",
      "id": "bdf9aeb23575ee69",
      "item": {
        "type": "paragraph",
        "id": "bdf9aeb23575ee69",
        "text": "Over the Wall ⇒ ⇒ Map in Elm [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
      },
      "date": 1685521582954
    },
    {
      "type": "edit",
      "id": "bdf9aeb23575ee69",
      "item": {
        "type": "paragraph",
        "id": "bdf9aeb23575ee69",
        "text": "Over the Wall ⇒ [[Andrew MacMurray]] ⇒ Map in Elm [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
      },
      "date": 1685521595218
    },
    {
      "item": {
        "type": "factory",
        "id": "648577cefaa0f94f"
      },
      "id": "648577cefaa0f94f",
      "type": "add",
      "after": "6eed6b6885c1bd43",
      "date": 1685523704042
    },
    {
      "type": "edit",
      "id": "648577cefaa0f94f",
      "item": {
        "type": "pagefold",
        "id": "648577cefaa0f94f",
        "text": "~"
      },
      "date": 1685523706668
    },
    {
      "item": {
        "type": "factory",
        "id": "1a015f44d082f555"
      },
      "id": "1a015f44d082f555",
      "type": "add",
      "after": "648577cefaa0f94f",
      "date": 1685523707805
    },
    {
      "type": "edit",
      "id": "1a015f44d082f555",
      "item": {
        "type": "paragraph",
        "id": "1a015f44d082f555",
        "text": "type Decoder a = Decoder\nA value that knows how to decode JSON values.\n\nThere is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction!"
      },
      "date": 1685523709589
    },
    {
      "type": "add",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "Elm Json.Decode Documentation"
      },
      "after": "1a015f44d082f555",
      "date": 1685523913410
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "Elm Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]"
      },
      "date": 1685523934190
    },
    {
      "type": "edit",
      "id": "1a015f44d082f555",
      "item": {
        "type": "paragraph",
        "id": "1a015f44d082f555",
        "text": "type Decoder a = Decoder\nA value that knows how to decode JSON values.\n\nThere is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page]"
      },
      "date": 1685523955441
    },
    {
      "item": {
        "type": "factory",
        "id": "7686cbba9b212ce3"
      },
      "id": "7686cbba9b212ce3",
      "type": "add",
      "after": "c0fc5dfa9719f0b8",
      "date": 1685529885251
    },
    {
      "type": "edit",
      "id": "7686cbba9b212ce3",
      "item": {
        "type": "paragraph",
        "id": "7686cbba9b212ce3",
        "text": "https://noredink.github.io/json-to-elm/"
      },
      "date": 1685529888802
    },
    {
      "type": "edit",
      "id": "1a015f44d082f555",
      "item": {
        "type": "paragraph",
        "id": "1a015f44d082f555",
        "text": "There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page]"
      },
      "date": 1685533148620
    },
    {
      "id": "1a015f44d082f555",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "fca8f7317cd38034",
        "aa598cb89479a79f",
        "ada01d56bee7ad08",
        "fc6849f5c3f9f810",
        "996bfd5302636132",
        "49175e7fbc0d0966",
        "3251a51f8dfd70ea",
        "fea1f7381a74f6c8",
        "ceb2d98362c2e935",
        "6677a24fb76747ef",
        "3e75eed0a280294c",
        "b86d20a357764f0d",
        "513300058e443b28",
        "d40d143af9f78513",
        "20f7423ac7442bd0",
        "78206e8efcf34c8a",
        "fac48b14f472f06d",
        "0b0698396e3f7ad5",
        "7ad4ce54d90d6a83",
        "872d5218bc54a0dd",
        "57e091e82cac82f2",
        "62ab78b0e3af095b",
        "bbd41a41c8835812",
        "05f56c2c800c36d1",
        "9917134807ba9ac3",
        "bdf9aeb23575ee69",
        "6eed6b6885c1bd43",
        "648577cefaa0f94f",
        "c0fc5dfa9719f0b8",
        "1a015f44d082f555",
        "7686cbba9b212ce3"
      ],
      "date": 1685533151370
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "Elm Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]:"
      },
      "date": 1685533163076
    },
    {
      "type": "remove",
      "id": "1a015f44d082f555",
      "date": 1685533165392
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "Elm Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page]"
      },
      "date": 1685533166502
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "Elm Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page], [https://github.com/RalfBarkow/vite-elm-dojo/commit/1f56043a46aedec6ac099250a1bf72be17d7d5c1 commit]"
      },
      "date": 1685533178861
    },
    {
      "type": "remove",
      "id": "7686cbba9b212ce3",
      "date": 1685533221039
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "⇒ [[Elm]] Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page], [https://github.com/RalfBarkow/vite-elm-dojo/commit/1f56043a46aedec6ac099250a1bf72be17d7d5c1 commit]"
      },
      "date": 1685533250177
    },
    {
      "type": "add",
      "id": "e02b0e71cb9bec74",
      "item": {
        "type": "paragraph",
        "id": "e02b0e71cb9bec74",
        "text": "We now modify this example to get a wiki page JSON instead of a random quote."
      },
      "after": "c0fc5dfa9719f0b8",
      "date": 1685533345802
    },
    {
      "type": "edit",
      "id": "e02b0e71cb9bec74",
      "item": {
        "type": "paragraph",
        "id": "e02b0e71cb9bec74",
        "text": "We now modify this example to get a [[Wiki Page JSON]] instead of a random quote."
      },
      "date": 1685533378485
    },
    {
      "type": "edit",
      "id": "fca8f7317cd38034",
      "item": {
        "type": "paragraph",
        "id": "fca8f7317cd38034",
        "text": "See [[Page.json]] [⇒ [[Wiki Page JSON]]]"
      },
      "date": 1685533452802
    },
    {
      "type": "edit",
      "id": "9e01cdfeef0f33a2",
      "item": {
        "type": "paragraph",
        "id": "9e01cdfeef0f33a2",
        "text": "[[\nUsing Lamdera professionally ]]"
      },
      "date": 1685533688401
    },
    {
      "type": "add",
      "id": "c57605bf4e5565cd",
      "item": {
        "type": "paragraph",
        "id": "c57605bf4e5565cd",
        "text": "Using [[Lamdera]] professionally [https://discourse.elm-lang.org/t/using-lamdera-professionally/9142 post]"
      },
      "after": "9e01cdfeef0f33a2",
      "date": 1685533689627
    },
    {
      "type": "edit",
      "id": "9e01cdfeef0f33a2",
      "item": {
        "type": "paragraph",
        "id": "9e01cdfeef0f33a2",
        "text": "[[Using Lamdera Professionally]]"
      },
      "date": 1685533715360
    },
    {
      "type": "edit",
      "id": "3251a51f8dfd70ea",
      "item": {
        "type": "paragraph",
        "id": "3251a51f8dfd70ea",
        "text": "Write-ahead-log (WAL): Every message is persisted to an ACID data store (Postgres) before it gets processed. [[TCR]]]"
      },
      "date": 1685533799396
    },
    {
      "type": "edit",
      "id": "3251a51f8dfd70ea",
      "item": {
        "type": "paragraph",
        "id": "3251a51f8dfd70ea",
        "text": "Write-ahead-log (WAL): Every message is persisted to an ACID data store (Postgres) before it gets processed. [⇒ [[TCR]]]"
      },
      "date": 1685533817873
    },
    {
      "type": "remove",
      "id": "fca8f7317cd38034",
      "date": 1685541106255
    },
    {
      "type": "edit",
      "id": "37c1004eb77b9eb9",
      "item": {
        "type": "paragraph",
        "id": "37c1004eb77b9eb9",
        "text": "Re: Transport, see [[Page.json]] [⇒ [[Wiki Page JSON]]]"
      },
      "date": 1685541108207
    },
    {
      "item": {
        "type": "factory",
        "id": "ab8db28b3ad06a5b"
      },
      "id": "ab8db28b3ad06a5b",
      "type": "add",
      "after": "e02b0e71cb9bec74",
      "date": 1685541220826
    },
    {
      "id": "ab8db28b3ad06a5b",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "c57605bf4e5565cd",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "aa598cb89479a79f",
        "ab8db28b3ad06a5b",
        "ada01d56bee7ad08",
        "fc6849f5c3f9f810",
        "996bfd5302636132",
        "49175e7fbc0d0966",
        "3251a51f8dfd70ea",
        "fea1f7381a74f6c8",
        "ceb2d98362c2e935",
        "6677a24fb76747ef",
        "3e75eed0a280294c",
        "b86d20a357764f0d",
        "513300058e443b28",
        "d40d143af9f78513",
        "20f7423ac7442bd0",
        "78206e8efcf34c8a",
        "fac48b14f472f06d",
        "0b0698396e3f7ad5",
        "7ad4ce54d90d6a83",
        "872d5218bc54a0dd",
        "57e091e82cac82f2",
        "62ab78b0e3af095b",
        "bbd41a41c8835812",
        "05f56c2c800c36d1",
        "9917134807ba9ac3",
        "bdf9aeb23575ee69",
        "6eed6b6885c1bd43",
        "648577cefaa0f94f",
        "c0fc5dfa9719f0b8",
        "e02b0e71cb9bec74"
      ],
      "date": 1685541236020
    },
    {
      "type": "edit",
      "id": "ab8db28b3ad06a5b",
      "item": {
        "type": "reference",
        "id": "ab8db28b3ad06a5b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "transport-model",
        "title": "Transport Model",
        "text": "A __Transport Model__ is a model stored on a [[Transport Server]] such as the [[Liveworld Server]]. They are (or at lest should be) built on top of the following foundational handlers:"
      },
      "date": 1685541238247
    },
    {
      "type": "edit",
      "id": "ab8db28b3ad06a5b",
      "item": {
        "type": "reference",
        "id": "ab8db28b3ad06a5b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "transport-model",
        "title": "Transport Model",
        "text": "is a model stored on a [[Transport Server]] such as the [[Liveworld Server]]. They are (or at lest should be) built on top of the following foundational handlers:"
      },
      "date": 1685541243726
    },
    {
      "item": {
        "type": "factory",
        "id": "055512bb7923b0cd"
      },
      "id": "055512bb7923b0cd",
      "type": "add",
      "after": "e02b0e71cb9bec74",
      "date": 1685541385325
    },
    {
      "type": "edit",
      "id": "055512bb7923b0cd",
      "item": {
        "type": "paragraph",
        "id": "055512bb7923b0cd",
        "text": "Elm 0.19: How to obtain request body when receiving BadStatus with elm/http 2.0.0"
      },
      "date": 1685541390566
    },
    {
      "type": "edit",
      "id": "055512bb7923b0cd",
      "item": {
        "type": "paragraph",
        "id": "055512bb7923b0cd",
        "text": "Elm 0.19: How to obtain request body when receiving BadStatus with elm/http 2.0.0 [https://stackoverflow.com/questions/54379403/elm-0-19-how-to-obtain-request-body-when-receiving-badstatus-with-elm-http-2-0 stackoverflow]"
      },
      "date": 1685541405875
    },
    {
      "type": "add",
      "id": "90a2bbc3b4158ec4",
      "item": {
        "type": "paragraph",
        "id": "90a2bbc3b4158ec4",
        "text": "Going Beyond 200 OK: A Guide to Detailed HTTP Responses in Elm"
      },
      "after": "055512bb7923b0cd",
      "date": 1685541420129
    },
    {
      "type": "edit",
      "id": "90a2bbc3b4158ec4",
      "item": {
        "type": "paragraph",
        "id": "90a2bbc3b4158ec4",
        "text": "⇒ [[Jeffrey Huang]],Going Beyond 200 OK: A Guide to Detailed HTTP Responses in Elm"
      },
      "date": 1685541442841
    },
    {
      "type": "edit",
      "id": "90a2bbc3b4158ec4",
      "item": {
        "type": "paragraph",
        "id": "90a2bbc3b4158ec4",
        "text": "⇒ [[Jeffrey Huang]], Going Beyond 200 OK: A Guide to Detailed HTTP Responses in Elm"
      },
      "date": 1685541445755
    },
    {
      "type": "edit",
      "id": "90a2bbc3b4158ec4",
      "item": {
        "type": "paragraph",
        "id": "90a2bbc3b4158ec4",
        "text": "⇒ [[Jeffrey Huang]], Going Beyond 200 OK: A Guide to Detailed HTTP Responses in Elm [https://jzxhuang.medium.com/going-beyond-200-ok-a-guide-to-detailed-http-responses-in-elm-6ddd02322e post]"
      },
      "date": 1685541475791
    },
    {
      "type": "add",
      "id": "e009a7652f58fca8",
      "item": {
        "type": "paragraph",
        "id": "e009a7652f58fca8",
        "text": "Jeffrey wrote this article on how to extract detailed information from an HTTP response, it includes multiple Ellie examples that don't require the package, as well as an example that uses the package. "
      },
      "after": "90a2bbc3b4158ec4",
      "date": 1685541604007
    },
    {
      "item": {
        "type": "factory",
        "id": "929d75f0931376ec"
      },
      "id": "929d75f0931376ec",
      "type": "add",
      "after": "e009a7652f58fca8",
      "date": 1685542036761
    },
    {
      "id": "929d75f0931376ec",
      "type": "move",
      "order": [
        "9d8f6475636b7473",
        "255c4baae5d842f5",
        "7b3e927514e76d31",
        "9ddff89fd69ee592",
        "79fd20e888b06517",
        "9579fb7aaad74ebc",
        "fdf0a3eda790315b",
        "9e01cdfeef0f33a2",
        "c57605bf4e5565cd",
        "3333bc05cbef7fa0",
        "f6b6863138a6f396",
        "9f0bca41d5c02217",
        "6379030b58a46543",
        "0dfac1c5d48b6c6d",
        "230100ccc388b220",
        "37c1004eb77b9eb9",
        "aa598cb89479a79f",
        "ab8db28b3ad06a5b",
        "ada01d56bee7ad08",
        "fc6849f5c3f9f810",
        "996bfd5302636132",
        "49175e7fbc0d0966",
        "3251a51f8dfd70ea",
        "fea1f7381a74f6c8",
        "ceb2d98362c2e935",
        "6677a24fb76747ef",
        "3e75eed0a280294c",
        "b86d20a357764f0d",
        "513300058e443b28",
        "d40d143af9f78513",
        "20f7423ac7442bd0",
        "78206e8efcf34c8a",
        "fac48b14f472f06d",
        "0b0698396e3f7ad5",
        "7ad4ce54d90d6a83",
        "872d5218bc54a0dd",
        "57e091e82cac82f2",
        "62ab78b0e3af095b",
        "bbd41a41c8835812",
        "05f56c2c800c36d1",
        "9917134807ba9ac3",
        "bdf9aeb23575ee69",
        "6eed6b6885c1bd43",
        "648577cefaa0f94f",
        "929d75f0931376ec",
        "c0fc5dfa9719f0b8",
        "e02b0e71cb9bec74",
        "055512bb7923b0cd",
        "90a2bbc3b4158ec4",
        "e009a7652f58fca8"
      ],
      "date": 1685542046201
    },
    {
      "type": "remove",
      "id": "929d75f0931376ec",
      "date": 1685542059685
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "⇒ [[Elm]] ⇒ [[Elm and JSON]] Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page], [https://github.com/RalfBarkow/vite-elm-dojo/commit/1f56043a46aedec6ac099250a1bf72be17d7d5c1 commit]"
      },
      "date": 1685542078349
    },
    {
      "type": "edit",
      "id": "c0fc5dfa9719f0b8",
      "item": {
        "type": "paragraph",
        "id": "c0fc5dfa9719f0b8",
        "text": "⇒ [[Elm]] ⇒ [[Elm and JSON]]: Json.Decode Documentation [https://package.elm-lang.org/packages/elm/json/latest/Json-Decode page]: There is a whole section in guide.elm-lang.org about decoders, so check it out for a more comprehensive introduction! [https://guide.elm-lang.org/effects/json.html page], [https://github.com/RalfBarkow/vite-elm-dojo/commit/1f56043a46aedec6ac099250a1bf72be17d7d5c1 commit]"
      },
      "date": 1685542083731
    }
  ]
}