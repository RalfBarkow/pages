{
  "title": "Source Compare",
  "story": [
    {
      "type": "paragraph",
      "id": "261165c438743b5c",
      "text": "I (Ward) wrote my own version of unix's diff when SPSS resequenced their source and my local mods turned bad. Line by line source comparison was the only way to save them."
    },
    {
      "type": "paragraph",
      "id": "53255ad173bc6a8c",
      "text": "I've always considered it odd that rather than attaching a unique identifier to every line, modern SCM systems depend on diff, a process I considere an emergency procedure."
    },
    {
      "type": "paragraph",
      "id": "ab1c9cb6ad87d373",
      "text": "I wrote SRCCOM in a hurry to solve my problem. I made it general enough to become a standard offering in our computing center. I wrote a couple of pages of Fortran and some assembly subroutines to make the I/O fast."
    },
    {
      "type": "paragraph",
      "id": "3425da6aff5ff1f7",
      "text": "My algorithm was to keep parallel queues of unmatched lines and search them combinatorially with each new read. I bounded the queues so that this computation remained under control should the comparison get completely lost."
    },
    {
      "type": "paragraph",
      "id": "293fa027e4e3359c",
      "text": "I didn't look at diff. But I knew that the diff available on unix 5 was known to \"jackpot\". This was when it gave up and told you that you'd changed everything."
    },
    {
      "type": "paragraph",
      "id": "ef611d74a0a4fc9c",
      "text": "I brought the source with me to Tektronix where it was used to manage source on some project in MDP. I know, because they came looking for my source as part of their archiving process at the end of their development cycle. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Source Compare"
      },
      "date": 1354548400586
    },
    {
      "item": {
        "type": "factory",
        "id": "261165c438743b5c"
      },
      "id": "261165c438743b5c",
      "type": "add",
      "date": 1354548407246
    },
    {
      "type": "edit",
      "id": "261165c438743b5c",
      "item": {
        "type": "paragraph",
        "id": "261165c438743b5c",
        "text": "I wrote my own version of unix's diff when SPSS resequenced their source and my local mods turned bad. Line by line source comparison was the only way to save them."
      },
      "date": 1354548665408
    },
    {
      "item": {
        "type": "paragraph",
        "id": "53255ad173bc6a8c",
        "text": ""
      },
      "id": "53255ad173bc6a8c",
      "type": "add",
      "after": "261165c438743b5c",
      "date": 1354548665914
    },
    {
      "type": "edit",
      "id": "53255ad173bc6a8c",
      "item": {
        "type": "paragraph",
        "id": "53255ad173bc6a8c",
        "text": "I've always considered it odd that rather than attaching a unique identifier to every line, modern SCM systems depend on diff, a process I considere an emergency procedure."
      },
      "date": 1354548766210
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ab1c9cb6ad87d373",
        "text": ""
      },
      "id": "ab1c9cb6ad87d373",
      "type": "add",
      "after": "53255ad173bc6a8c",
      "date": 1354548766715
    },
    {
      "type": "edit",
      "id": "ab1c9cb6ad87d373",
      "item": {
        "type": "paragraph",
        "id": "ab1c9cb6ad87d373",
        "text": "I wrote SRCCOM in a hurry to solve my problem. I made it general enough to become a standard offering in our computing center. I wrote a couple of pages of Fortran and some assembly subroutines to make the I/O fast."
      },
      "date": 1354548881661
    },
    {
      "item": {
        "type": "paragraph",
        "id": "3425da6aff5ff1f7",
        "text": ""
      },
      "id": "3425da6aff5ff1f7",
      "type": "add",
      "after": "ab1c9cb6ad87d373",
      "date": 1354548882165
    },
    {
      "type": "edit",
      "id": "3425da6aff5ff1f7",
      "item": {
        "type": "paragraph",
        "id": "3425da6aff5ff1f7",
        "text": "My algorithm was to keep parallel queues of unmatched lines and search them combinatorially with each new read. I bounded the queues so that this computation remained under control should the comparison get completely lost."
      },
      "date": 1354549106310
    },
    {
      "item": {
        "type": "paragraph",
        "id": "293fa027e4e3359c",
        "text": ""
      },
      "id": "293fa027e4e3359c",
      "type": "add",
      "after": "3425da6aff5ff1f7",
      "date": 1354549106815
    },
    {
      "type": "edit",
      "id": "293fa027e4e3359c",
      "item": {
        "type": "paragraph",
        "id": "293fa027e4e3359c",
        "text": "I didn't look at diff. But I knew that the diff available on unix 5 was known to \"jackpot\". This was when it gave up and told you that you'd changed everything."
      },
      "date": 1354549178436
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ef611d74a0a4fc9c",
        "text": ""
      },
      "id": "ef611d74a0a4fc9c",
      "type": "add",
      "after": "293fa027e4e3359c",
      "date": 1354549197853
    },
    {
      "type": "edit",
      "id": "ef611d74a0a4fc9c",
      "item": {
        "type": "paragraph",
        "id": "ef611d74a0a4fc9c",
        "text": "I brought the source with me to Tektronix where it was used to manage source on some project in MDP. I know, because they came looking for my source as part of their archiving process at the end of their development cycle. "
      },
      "date": 1354549297513
    },
    {
      "type": "fork",
      "site": "code.fed.wiki.org",
      "date": 1707799537631
    },
    {
      "type": "edit",
      "id": "261165c438743b5c",
      "item": {
        "type": "paragraph",
        "id": "261165c438743b5c",
        "text": "I (Ward) wrote my own version of unix's diff when SPSS resequenced their source and my local mods turned bad. Line by line source comparison was the only way to save them."
      },
      "date": 1707799544775
    }
  ]
}