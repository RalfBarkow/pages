{
  "title": "Fizz Buzz",
  "story": [
    {
      "type": "paragraph",
      "text": "Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.",
      "id": "45ed2bf63f5f1b66f7b174a55f9bc68a"
    },
    {
      "type": "code",
      "text": "  for n in range(1, 101):\n      line = \"\"\n      if n%3 == 0:\n          line = line + \"Fizz\"\n      if n%5 == 0:\n          line = line + \"Buzz\"\n      if line:\n          print line\n      else:\n          print n",
      "id": "e5c4699911bb64d6893aa8b37b5b45b4"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?FizzBuzz c2.com]",
      "id": "c3ca7064b4462f8b19ced24f0ca1c7e7"
    },
    {
      "type": "html",
      "text": "An example of [[Fizz Buzz Test]] written from the ground up using Test-Driven Development and Ruby:",
      "id": "f10d7dabee380f2e3ecd6d0cde53915e"
    },
    {
      "type": "video",
      "id": "f5f498f33a1ac8e0",
      "text": "YOUTUBE CHTep2zQVAc\nPublished on May 3, 2014."
    },
    {
      "type": "paragraph",
      "id": "3a134872d137d3a4",
      "text": "\"lorond\" offers this version where b and e are indices of substring we need to get, b stands for \"beginning\" and e stands for \"ending\""
    },
    {
      "type": "code",
      "id": "561c20b8e8dabe01",
      "text": "for (var i = 1; i <= 100; i++)\n{\n  var b = i % 3 == 0 ? 0 : 4;\n  var e = i % 5 == 0 ? 8 : 4;\n  Console.WriteLine(b == e ?\n    i.ToString() : \"FizzBuzz\".Substring(b, e - b));\n}"
    }
  ],
  "journal": [
    {
      "date": 1416971026000,
      "id": "d4fa111a3c38e5d59bf7223d85ad20a2",
      "type": "create",
      "item": {
        "title": "Fizz Buzz",
        "story": [
          {
            "type": "code",
            "text": "  for n in range(1, 101):\n      line = \"\"\n      if n%3 == 0:\n          line = line + \"Fizz\"\n      if n%5 == 0:\n          line = line + \"Buzz\"",
            "id": "e5c4699911bb64d6893aa8b37b5b45b4"
          },
          {
            "type": "code",
            "text": "      if line:\n          print line\n      else:\n          print n",
            "id": "af069da36dbbe958d0999d34e748eb23"
          },
          {
            "type": "html",
            "text": "\nAn example of [[Fizz Buzz]] being written from the ground up using Test-Driven Development and Ruby: [https://www.youtube.com/watch?v=CHTep2zQVAc www.youtube.com] ",
            "id": "f10d7dabee380f2e3ecd6d0cde53915e"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?FizzBuzz c2.com]",
            "id": "c3ca7064b4462f8b19ced24f0ca1c7e7"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "language.sfw.c2.com",
      "date": 1566605153470
    },
    {
      "type": "remove",
      "id": "af069da36dbbe958d0999d34e748eb23",
      "date": 1566605176018
    },
    {
      "type": "edit",
      "id": "e5c4699911bb64d6893aa8b37b5b45b4",
      "item": {
        "type": "code",
        "text": "  for n in range(1, 101):\n      line = \"\"\n      if n%3 == 0:\n          line = line + \"Fizz\"\n      if n%5 == 0:\n          line = line + \"Buzz\"\n\n      if line:\n          print line\n      else:\n          print n",
        "id": "e5c4699911bb64d6893aa8b37b5b45b4"
      },
      "date": 1566605192408
    },
    {
      "type": "edit",
      "id": "e5c4699911bb64d6893aa8b37b5b45b4",
      "item": {
        "type": "code",
        "text": "  for n in range(1, 101):\n      line = \"\"\n      if n%3 == 0:\n          line = line + \"Fizz\"\n      if n%5 == 0:\n          line = line + \"Buzz\"\n      if line:\n          print line\n      else:\n          print n",
        "id": "e5c4699911bb64d6893aa8b37b5b45b4"
      },
      "date": 1566605234478
    },
    {
      "item": {
        "type": "factory",
        "id": "561c20b8e8dabe01"
      },
      "id": "561c20b8e8dabe01",
      "type": "add",
      "after": "c3ca7064b4462f8b19ced24f0ca1c7e7",
      "date": 1566605256076
    },
    {
      "type": "edit",
      "id": "561c20b8e8dabe01",
      "item": {
        "type": "code",
        "id": "561c20b8e8dabe01",
        "text": "for (var i = 1; i <= 100; i++)\n{\n    var b = i % 3 == 0 ? 0 : 4;\n    var e = i % 5 == 0 ? 8 : 4;\n    Console.WriteLine(b == e ? i.ToString() : \"FizzBuzz\".Substring(b, e - b));\n}"
      },
      "date": 1566605265066
    },
    {
      "type": "edit",
      "id": "561c20b8e8dabe01",
      "item": {
        "type": "code",
        "id": "561c20b8e8dabe01",
        "text": "for (var i = 1; i <= 100; i++)\n{\n    var b = i % 3 == 0 ? 0 : 4;\n    var e = i % 5 == 0 ? 8 : 4;\n    Console.WriteLine(b == e ?\n      i.ToString() : \"FizzBuzz\".Substring(b, e - b));\n}"
      },
      "date": 1566605313788
    },
    {
      "type": "edit",
      "id": "561c20b8e8dabe01",
      "item": {
        "type": "code",
        "id": "561c20b8e8dabe01",
        "text": "for (var i = 1; i <= 100; i++)\n{\n  var b = i % 3 == 0 ? 0 : 4;\n  var e = i % 5 == 0 ? 8 : 4;\n  Console.WriteLine(b == e ?\n    i.ToString() : \"FizzBuzz\".Substring(b, e - b));\n}"
      },
      "date": 1566605329163
    },
    {
      "type": "fork",
      "date": 1566605590018
    },
    {
      "item": {
        "type": "factory",
        "id": "3a134872d137d3a4"
      },
      "id": "3a134872d137d3a4",
      "type": "add",
      "after": "561c20b8e8dabe01",
      "date": 1566605592718
    },
    {
      "type": "edit",
      "id": "3a134872d137d3a4",
      "item": {
        "type": "paragraph",
        "id": "3a134872d137d3a4",
        "text": "\"lorond\" offers this version where"
      },
      "date": 1566605622735
    },
    {
      "type": "edit",
      "id": "3a134872d137d3a4",
      "item": {
        "type": "paragraph",
        "id": "3a134872d137d3a4",
        "text": "\"lorond\" offers this version where "
      },
      "date": 1566605646691
    },
    {
      "type": "edit",
      "id": "3a134872d137d3a4",
      "item": {
        "type": "paragraph",
        "id": "3a134872d137d3a4",
        "text": "\"lorond\" offers this version where b and e are indices of substring we need to get, b stands for \"beginning\" and e stands for \"ending\""
      },
      "date": 1566605970987
    },
    {
      "type": "move",
      "order": [
        "e5c4699911bb64d6893aa8b37b5b45b4",
        "f10d7dabee380f2e3ecd6d0cde53915e",
        "c3ca7064b4462f8b19ced24f0ca1c7e7",
        "3a134872d137d3a4",
        "561c20b8e8dabe01"
      ],
      "id": "3a134872d137d3a4",
      "date": 1566606274745
    },
    {
      "type": "edit",
      "id": "f10d7dabee380f2e3ecd6d0cde53915e",
      "item": {
        "type": "html",
        "text": "An example of [[Fizz Buzz Test]] being written from the ground up using Test-Driven Development and Ruby: [https://www.youtube.com/watch?v=CHTep2zQVAc www.youtube.com] ",
        "id": "f10d7dabee380f2e3ecd6d0cde53915e"
      },
      "date": 1566606790151
    },
    {
      "type": "add",
      "item": {
        "type": "html",
        "text": "<i>\"Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “F<b></b>izzBuzz”.\"</i>",
        "id": "45ed2bf63f5f1b66f7b174a55f9bc68a"
      },
      "id": "45ed2bf63f5f1b66f7b174a55f9bc68a",
      "date": 1566606849584
    },
    {
      "type": "edit",
      "id": "f10d7dabee380f2e3ecd6d0cde53915e",
      "item": {
        "type": "html",
        "text": "An example of [[Fizz Buzz Test]] written from the ground up using Test-Driven Development and Ruby: [https://www.youtube.com/watch?v=CHTep2zQVAc www.youtube.com] ",
        "id": "f10d7dabee380f2e3ecd6d0cde53915e"
      },
      "date": 1566606864386
    },
    {
      "item": {
        "type": "factory",
        "id": "f5f498f33a1ac8e0"
      },
      "id": "f5f498f33a1ac8e0",
      "type": "add",
      "after": "561c20b8e8dabe01",
      "date": 1566606897629
    },
    {
      "type": "edit",
      "id": "f5f498f33a1ac8e0",
      "item": {
        "type": "video",
        "id": "f5f498f33a1ac8e0",
        "text": "YOUTUBE CHTep2zQVAc\n(double-click to edit caption)\n"
      },
      "date": 1566606911793
    },
    {
      "type": "edit",
      "id": "f5f498f33a1ac8e0",
      "item": {
        "type": "video",
        "id": "f5f498f33a1ac8e0",
        "text": "YOUTUBE CHTep2zQVAc\nPublished on May 3, 2014."
      },
      "date": 1566606932992
    },
    {
      "type": "edit",
      "id": "f10d7dabee380f2e3ecd6d0cde53915e",
      "item": {
        "type": "html",
        "text": "An example of [[Fizz Buzz Test]] written from the ground up using Test-Driven Development and Ruby:",
        "id": "f10d7dabee380f2e3ecd6d0cde53915e"
      },
      "date": 1566606960065
    },
    {
      "type": "move",
      "order": [
        "45ed2bf63f5f1b66f7b174a55f9bc68a",
        "e5c4699911bb64d6893aa8b37b5b45b4",
        "f10d7dabee380f2e3ecd6d0cde53915e",
        "f5f498f33a1ac8e0",
        "c3ca7064b4462f8b19ced24f0ca1c7e7",
        "3a134872d137d3a4",
        "561c20b8e8dabe01"
      ],
      "id": "f5f498f33a1ac8e0",
      "date": 1566606970876
    },
    {
      "type": "edit",
      "id": "45ed2bf63f5f1b66f7b174a55f9bc68a",
      "item": {
        "type": "paragraph",
        "text": "Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “F<b></b>izzBuzz”.",
        "id": "45ed2bf63f5f1b66f7b174a55f9bc68a"
      },
      "date": 1566607004997
    },
    {
      "type": "edit",
      "id": "45ed2bf63f5f1b66f7b174a55f9bc68a",
      "item": {
        "type": "paragraph",
        "text": "Write a program that prints the numbers from 1 to 100. But for multiples of three print “Fizz” instead of the number and for the multiples of five print “Buzz”. For numbers which are multiples of both three and five print “FizzBuzz”.",
        "id": "45ed2bf63f5f1b66f7b174a55f9bc68a"
      },
      "date": 1566607015092
    },
    {
      "type": "move",
      "order": [
        "45ed2bf63f5f1b66f7b174a55f9bc68a",
        "e5c4699911bb64d6893aa8b37b5b45b4",
        "c3ca7064b4462f8b19ced24f0ca1c7e7",
        "f10d7dabee380f2e3ecd6d0cde53915e",
        "f5f498f33a1ac8e0",
        "3a134872d137d3a4",
        "561c20b8e8dabe01"
      ],
      "id": "c3ca7064b4462f8b19ced24f0ca1c7e7",
      "date": 1566607059306
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1652512066137
    }
  ]
}