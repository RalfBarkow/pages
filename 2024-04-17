{
  "title": "2024-04-17",
  "story": [
    {
      "type": "markdown",
      "id": "050361931e8e36b4",
      "text": "# Create a Perfect Honeycomb Shape"
    },
    {
      "type": "markdown",
      "id": "a9c1ecf775331588",
      "text": "To create a perfect honeycomb shape as the container for the clickable text, we can use SVG `<polygon>` elements. Here's a model for the variable parts, including the honeycomb shape and the text:\n\n```svg\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"X1,Y1 X2,Y2 X3,Y3 X4,Y4 X5,Y5 X6,Y6\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n```\n\nReplace `YOUR_WIKI_LINK` with the link to the corresponding wiki page. Adjust the `points` attribute of the `<polygon>` element to define the honeycomb shape. You can calculate the points manually or using a tool like [[Inkscape]].\n\nReplace `TEXT_X` and `TEXT_Y` with the coordinates where you want the text to be positioned inside the honeycomb shape.\n\nReplace `YOUR_TEXT_HERE` with the text you want to display inside the honeycomb shape. Adjust the font size and other text attributes as needed."
    },
    {
      "type": "code",
      "id": "c8c0654f41478e5d",
      "text": "<polygon points=\"50,25 150,25 200,75 150,125 50,125 0,75\" />\n"
    },
    {
      "type": "pagefold",
      "id": "d7c660ad3fb21cb2",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "e41a62c29edde386",
      "text": "SVG honeycomb polygon filling animation [https://stackoverflow.com/questions/62554864/svg-honeycomb-polygon-filling-animation stackoverflow]"
    },
    {
      "type": "html",
      "id": "e7f5c58326f7ebb1",
      "text": "<svg width=\"31\" height=\"29\" viewBox=\"0 0 31 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n   <path d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\" stroke=\"white\" />\n   <g opacity=\"0.5\">\n      <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"10\" y=\"0\" width=\"21\" height=\"17\">\n         <path d=\"M10 17V6.5L11 0L30.5 13.5L22 10L10 17Z\" fill=\"white\" />\n      </mask>\n      <g mask=\"url(#mask0)\">\n         <path d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\" fill=\"white\" />\n      </g>\n   </g>\n</svg>\n"
    },
    {
      "type": "html",
      "id": "e6ff5cbd7aba085d",
      "text": "<iframe src='about:blank' srcdoc='\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>SVG Animation</title>\n</head>\n<body>\n  <div style=\"width: 200px; height: 200px;\">\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 100%; height: 100%;\">\n      <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"blue\">\n        <animate attributeName=\"cy\" values=\"50; 80; 50\" dur=\"2s\" repeatCount=\"indefinite\" />\n      </circle>\n    </svg>\n  </div>\n</body>\n</html>' width=\"220\" height=\"220\" style=\"border: none;\"></iframe>\n"
    },
    {
      "type": "frame",
      "id": "99adba9d14f3c32d",
      "text": "<iframe src='about:blank' srcdoc='<svg width=\"180\" viewBox=\"0 0 31 29\">\n<g transform=\"translate(6 -3)\">\n    <clipPath id=\"clip\">\n        <path id=\"path\" d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\"/>\n    </clipPath>\n    <path d=\"M10,12.5A5,5 0 0 1 10,22.5A5,5 0 0 1 10,12.5\" fill=\"none\" stroke=\"#cab\" stroke-dasharray=\"0 62.84\" stroke-width=\"10\" clip-path=\"url(#clip)\">\n        <animate attributeName=\"stroke-dasharray\"\n            values=\"0 31.4;10 21.4;20 11.4;31.4 0\" begin=\"0s\" dur=\"10s\" fill=\"freeze\"/>\n    </path>\n    <use xlink:href=\"#path\"  stroke=\"#fff\" fill=\"none\"/>\n</g>\n</svg>' width=\"220\" height=\"220\" style=\"border: none;\"></iframe>\n"
    },
    {
      "type": "pagefold",
      "id": "91be87389216f766",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "00ecd26b0b315b2b",
      "text": "# Points"
    },
    {
      "type": "code",
      "id": "c6f6fb4ab8aa41d6",
      "text": "<polygon points=\"1,13.5 5,11 9,13.5 9,17.5 5,20 1,17.5\" />\n"
    },
    {
      "type": "html",
      "id": "d3ec0d91ea997471",
      "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"1,13.5 5,11 9,13.5 9,17.5 5,20 1,17.5\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n"
    },
    {
      "type": "paragraph",
      "id": "a99121d749374d54",
      "text": "5x scaling:"
    },
    {
      "type": "code",
      "id": "f65ef1d3a9299b40",
      "text": "<polygon points=\"5,67.5 25,55 45,67.5 45,82.5 25,95 5,82.5\" />\n"
    },
    {
      "type": "html",
      "id": "4535d22013bb30af",
      "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"5,67.5 25,55 45,67.5 45,82.5 25,95 5,82.5\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>"
    },
    {
      "type": "paragraph",
      "id": "4f02e009a4fbbeb8",
      "text": "⇒ [[Calculate Honeycomb Points]]"
    },
    {
      "type": "code",
      "id": "f52b1df65438c599",
      "text": "function scalePolygonToText(polygonPoints, textBoundingRect) {\n    // Get the width and height of the text bounding box\n    const textWidth = textBoundingRect.width;\n    const textHeight = textBoundingRect.height;\n\n    // Find the maximum dimension of the text bounding box\n    const maxDimension = Math.max(textWidth, textHeight);\n\n    // Calculate the scale factor based on the maximum dimension\n    const scaleFactor = maxDimension / 8; // Assuming the original bounding box width of the polygon is 8\n\n    // Scale each point of the polygon\n    const scaledPolygonPoints = polygonPoints.map(point => ({\n        x: point.x * scaleFactor,\n        y: point.y * scaleFactor\n    }));\n\n    return scaledPolygonPoints;\n}\n\n// Example usage\nconst polygonPoints = [\n    { x: 1, y: 13.5 },\n    { x: 5, y: 11 },\n    { x: 9, y: 13.5 },\n    { x: 9, y: 17.5 },\n    { x: 5, y: 20 },\n    { x: 1, y: 17.5 }\n];\n\nconst textBoundingRect = {\n    width: 100, // Example width of the text bounding box\n    height: 50 // Example height of the text bounding box\n};\n\nconst scaledPolygon = scalePolygonToText(polygonPoints, textBoundingRect);\nconsole.log(scaledPolygon); // Output the scaled polygon points\n"
    },
    {
      "type": "html",
      "id": "6b59353d9eadc650",
      "text": "<svg width=\"180\" height=\"180\" viewBox=\"0 0 20 20\">\n  <g transform=\"translate(0, 5)\">\n    <polygon points=\"2,12 6,9.5 10,12 10,16 6,18.5 2,16\" fill=\"none\" stroke=\"#000\"/>\n    <clipPath id=\"clip\">\n      <polygon points=\"2,12 6,9.5 10,12 10,16 6,18.5 2,16\" fill=\"none\"/>\n    </clipPath>\n    <text x=\"2\" y=\"12\" clip-path=\"url(#clip)\" font-size=\"4\" font-family=\"Arial, sans-serif\">Welcome Visitors</text>\n  </g>\n</svg>\n"
    },
    {
      "type": "html",
      "id": "b2966a43b7f357da",
      "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Empowering_Business_Units\">\n    <polygon points=\"30,50 70,38 130,38 170,50 130,62 70,62\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <text x=\"100\" y=\"50\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Empowering Business Units]]</text>\n  </a>\n</svg>\n"
    },
    {
      "type": "code",
      "id": "b2e76f530165a543",
      "text": "<polygon points=\"40,25 100,17 180,25 180,35 100,43 40,35\" />\n"
    },
    {
      "type": "html",
      "id": "8740ee9eae3d0539",
      "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Welcome Visitors]]</text>\n  </a>\n</svg>\n"
    },
    {
      "type": "markdown",
      "id": "f493e238c458430f",
      "text": "Got it! Here's the modified SVG with the Welcome Visitors wiki link and the honeycomb shape scaled to fit the text:\n\n```xml\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">Welcome Visitors</text>\n  </a>\n</svg>\n```\n\nIn this SVG:\n\n- The polygon points have been adjusted to scale the honeycomb shape around the text.\n- The text is centered inside the honeycomb shape.\n- The xlink:href attribute of the <a> tag has been set to \"#Welcome_Visitors\" to make it a link.\n\nFeel free to adjust the coordinates and styling as needed! Let me know if you need further customization. (ChatGPT 3.5)"
    },
    {
      "type": "pagefold",
      "id": "741dd4de329c9c55",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "c6559841f5c9845b",
      "text": "⇒ [[Declarative UI Specification]], [[GtPhlowViewSpecification]]"
    },
    {
      "type": "image",
      "id": "0bf619a321080ed7",
      "text": "ROHS, Michael, 2005. Visual code widgets for marker-based interaction.",
      "size": "wide",
      "width": 418,
      "height": 254,
      "url": "/assets/plugins/image/8e88017ab8099cdd2520ed24239a5ea8.jpg"
    },
    {
      "type": "paragraph",
      "id": "22c9d9a4f0925a92",
      "text": "ROHS, Michael, 2005. Visual code widgets for marker-based interaction. In: 25th IEEE International Conference on Distributed Computing Systems Workshops. IEEE. 2005. p. 506–513. [https://ieeexplore.ieee.org/abstract/document/1437218/ ieee]. \n"
    },
    {
      "type": "pagefold",
      "id": "e6fe603b3c8547d6",
      "text": "~"
    },
    {
      "type": "html",
      "id": "768d9760acbc3629",
      "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n<svg fill=\"#000000\" height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 404.618 404.618\" xml:space=\"preserve\">\r\n<g>\r\n\t<path d=\"M84.62,120.674h-48.36c-2.671,0-5.16,1.436-6.495,3.75l-24.18,41.879c-1.336,2.316-1.336,5.188,0,7.5l24.18,41.885\r\n\t\tc1.335,2.311,3.824,3.746,6.495,3.746h48.36c2.671,0,5.16-1.436,6.496-3.746l24.18-41.885c1.335-2.313,1.335-5.184,0-7.5\r\n\t\tl-24.18-41.879C89.78,122.11,87.29,120.674,84.62,120.674z\"/>\r\n\t<path d=\"M180.034,178.586h-48.361c-2.67,0-5.16,1.439-6.495,3.75l-24.181,41.885c-1.334,2.311-1.334,5.186,0,7.498l24.181,41.883\r\n\t\tc1.335,2.313,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.438,6.494-3.75l24.179-41.883c1.335-2.313,1.335-5.188,0-7.498\r\n\t\tl-24.179-41.885C185.192,180.026,182.704,178.586,180.034,178.586z\"/>\r\n\t<path d=\"M186.528,293.168c-1.336-2.315-3.824-3.75-6.494-3.75h-48.361c-2.67,0-5.16,1.435-6.495,3.75l-24.181,41.879\r\n\t\tc-1.334,2.314-1.334,5.188,0,7.5l24.181,41.881c1.335,2.313,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.438,6.494-3.75\r\n\t\tl24.179-41.881c1.335-2.313,1.335-5.186,0-7.5L186.528,293.168z\"/>\r\n\t<path d=\"M110.712,280.049L86.532,238.17c-1.335-2.314-3.824-3.75-6.494-3.75H31.676c-2.671,0-5.16,1.436-6.496,3.75L1,280.049\r\n\t\tc-1.334,2.315-1.334,5.188,0,7.5l24.18,41.881c1.336,2.313,3.825,3.75,6.496,3.75h48.361c2.67,0,5.159-1.438,6.494-3.75\r\n\t\tl24.181-41.881C112.047,285.237,112.047,282.364,110.712,280.049z\"/>\r\n\t<path d=\"M180.034,64.428h-48.361c-2.67,0-5.16,1.436-6.495,3.75l-24.181,41.879c-1.334,2.314-1.334,5.185,0,7.502l24.181,41.879\r\n\t\tc1.335,2.314,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.436,6.494-3.75l24.179-41.879c1.335-2.316,1.335-5.188,0-7.502\r\n\t\tl-24.179-41.879C185.192,65.864,182.704,64.428,180.034,64.428z\"/>\r\n\t<path d=\"M229.167,221.899h48.36c2.67,0,5.16-1.434,6.495-3.75l24.181-41.879c1.334-2.314,1.334-5.188,0-7.5l-24.181-41.885\r\n\t\tc-1.335-2.309-3.825-3.748-6.495-3.748h-48.36c-2.671,0-5.159,1.44-6.495,3.748l-24.178,41.885c-1.336,2.313-1.336,5.186,0,7.5\r\n\t\tl24.178,41.879C224.008,220.465,226.497,221.899,229.167,221.899z\"/>\r\n\t<path d=\"M379.436,184.803c-1.336-2.314-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.436-6.496,3.75l-24.18,41.879\r\n\t\tc-1.334,2.314-1.334,5.186,0,7.5l24.18,41.881c1.336,2.313,3.825,3.75,6.496,3.75h48.36c2.671,0,5.159-1.438,6.495-3.75\r\n\t\tl24.18-41.881c1.336-2.314,1.336-5.186,0-7.5L379.436,184.803z\"/>\r\n\t<path d=\"M379.436,297.295c-1.336-2.309-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.441-6.496,3.75l-24.18,41.885\r\n\t\tc-1.334,2.309-1.334,5.186,0,7.5l24.18,41.879c1.336,2.315,3.825,3.75,6.496,3.75h48.36c2.671,0,5.159-1.435,6.495-3.75\r\n\t\tl24.18-41.879c1.336-2.314,1.336-5.191,0-7.5L379.436,297.295z\"/>\r\n\t<path d=\"M308.204,280.049l-24.181-41.879c-1.335-2.314-3.825-3.75-6.495-3.75h-48.36c-2.671,0-5.159,1.436-6.495,3.75\r\n\t\tl-24.178,41.879c-1.336,2.315-1.336,5.188,0,7.5l24.178,41.881c1.336,2.313,3.824,3.75,6.495,3.75h48.36\r\n\t\tc2.67,0,5.16-1.438,6.495-3.75l24.181-41.881C309.538,285.237,309.538,282.364,308.204,280.049z\"/>\r\n\t<path d=\"M308.204,57.94l-24.181-41.881c-1.335-2.313-3.825-3.75-6.495-3.75h-48.36c-2.671,0-5.159,1.438-6.495,3.75L198.495,57.94\r\n\t\tc-1.336,2.313-1.336,5.189,0,7.5l24.178,41.883c1.336,2.311,3.824,3.75,6.495,3.75h48.36c2.67,0,5.16-1.439,6.495-3.75\r\n\t\tl24.181-41.883C309.538,63.129,309.538,60.252,308.204,57.94z\"/>\r\n\t<path d=\"M379.436,70.639c-1.336-2.313-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.438-6.496,3.75l-24.18,41.885\r\n\t\tc-1.334,2.309-1.334,5.186,0,7.496l24.18,41.883c1.336,2.314,3.825,3.752,6.496,3.752h48.36c2.671,0,5.159-1.438,6.495-3.752\r\n\t\tl24.18-41.883c1.336-2.311,1.336-5.188,0-7.496L379.436,70.639z\"/>\r\n</g>\r\n</svg>"
    },
    {
      "type": "paragraph",
      "id": "71130ec90232cb30",
      "text": "Honeycomb Vectors. [https://www.svgrepo.com/vectors/honeycomb/ svgrepo.com]"
    },
    {
      "type": "reference",
      "id": "8600fab0d955764c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "calculate-honeycomb-points",
      "title": "Calculate Honeycomb Points",
      "text": "The following [[SVG]] code creates a clickable honeycomb-shaped container with text inside. We want the text and the [[Honeycomb]] surrounding it to fit together. We assume that the honeycomb must be scaled so that the variable text, e.g. a wiki link, is well wrapped."
    },
    {
      "type": "pagefold",
      "id": "ffe72c2183557802",
      "text": "~"
    },
    {
      "type": "html",
      "id": "472d9d634088920f",
      "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<svg height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 512 512\" xml:space=\"preserve\">\r\n<path style=\"fill:#FFA733;\" d=\"M257.601,42.641L67.677,246.249l69.464,250.43c2.045,7.39,8.779,12.507,16.446,12.507h204.825\r\n\tc7.667,0,14.401-5.117,16.446-12.507l69.464-250.43L257.601,42.641z\"/>\r\n<path style=\"fill:#EE8700;\" d=\"M256,44.357v464.83h102.412c7.667,0,14.401-5.117,16.446-12.507l69.464-250.43L257.601,42.641\r\n\tL256,44.357z\"/>\r\n<g>\r\n\t<path style=\"fill:#95673F;\" d=\"M256,372.637c-47.061,0-85.344-38.283-85.344-85.344s38.283-85.344,85.344-85.344\r\n\t\ts85.344,38.283,85.344,85.344S303.062,372.637,256,372.637z\"/>\r\n\t<path style=\"fill:#95673F;\" d=\"M426.687,509.187H85.312c-9.423,0-17.069-7.64-17.069-17.069c0-9.429,7.646-17.069,17.069-17.069\r\n\t\th341.375c9.423,0,17.069,7.64,17.069,17.069C443.756,501.547,436.111,509.187,426.687,509.187z\"/>\r\n</g>\r\n<path style=\"fill:#EEBE43;\" d=\"M290.137,440.912h-68.275c-9.423,0-17.069-7.64-17.069-17.069c0-9.429,7.646-17.069,17.069-17.069\r\n\th68.275c9.423,0,17.069,7.64,17.069,17.069C307.206,433.272,299.561,440.912,290.137,440.912z\"/>\r\n<g>\r\n\t<path style=\"fill:#875334;\" d=\"M341.343,287.293c0-47.061-38.283-85.344-85.344-85.344v170.688\r\n\t\tC303.062,372.637,341.343,334.355,341.343,287.293z\"/>\r\n\t<path style=\"fill:#875334;\" d=\"M426.687,475.049H256v34.138h170.688c9.423,0,17.069-7.64,17.069-17.069\r\n\t\tC443.756,482.689,436.111,475.049,426.687,475.049z\"/>\r\n</g>\r\n<path style=\"fill:#E4A637;\" d=\"M290.137,406.774H256v34.138h34.137c9.423,0,17.069-7.64,17.069-17.069\r\n\tC307.206,414.414,299.561,406.774,290.137,406.774z\"/>\r\n<path style=\"fill:#95673F;\" d=\"M493.597,185.335L288.772,14.648C279.213,6.682,267.606,2.814,256,2.814\r\n\tc-11.607,0-23.214,3.869-32.772,11.834L18.403,185.335c-21.734,18.093-24.579,50.41-6.6,72.144\r\n\tc18.093,21.62,50.409,24.579,72.144,6.6L256,120.702l172.053,143.378c21.734,18.093,53.937,15.134,72.144-6.6\r\n\tC518.177,235.745,515.332,203.428,493.597,185.335z\"/>\r\n<path style=\"fill:#875334;\" d=\"M500.197,257.479c-18.207,21.734-50.409,24.693-72.144,6.6L256,120.702V2.814\r\n\tc11.607,0,23.213,3.869,32.772,11.834l204.825,170.688C515.332,203.428,518.177,235.745,500.197,257.479z\"/>\r\n</svg>"
    },
    {
      "type": "code",
      "id": "ac4446df75c5aceb",
      "text": "  \"type\": \"html\",\n      \"id\": \"472d9d634088920f\",\n      \"text\": \"<?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?>\\r\\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\\r\\n<svg …"
    },
    {
      "type": "paragraph",
      "id": "82f7d0345cdd18c3",
      "text": "The Rise Of The Bee Bandits. [https://www.noemamag.com/the-rise-of-the-bee-bandits/ noemamag]"
    },
    {
      "type": "paragraph",
      "id": "41446d07b52d6326",
      "text": "The Honeybee Era\n\nHorses and cattle may be the antecedents to bees in terms of human thievery, but the scale involved here is very different. Farmers have carpeted huge swathes of prime Central Valley land with serried ranks of almond trees. The annual budding of this sought-after nut and its burgeoning pollination needs means up to roughly nine out of every 10 commercial honeybee hives must be sent here from all corners of the U.S.\n\nFor some time at the start of each year, the Central Valley becomes a sort of giant, mechanized jamboree of honeybees, with 18-wheelers and semis bearing several million hives traversing this monoculture and depositing their cargo in orchards to propagate the crop. We are accustomed to aggregating sheep and cows and, to a lesser degree at home, our cats and dogs. But in terms of the sheer numbers — 2.7 million hives, according to Wenger, or a lowball estimate of some 54 billion bees to support this year’s almond crop — there is little to compare to the annual seething mass of bees clustered in California outside of enthralling wild scenes like the African migration of wildebeest. "
    },
    {
      "type": "html",
      "id": "72c091e86fb86e9b",
      "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<svg height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 409 409\" xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path style=\"fill:#EFCA60;\" d=\"M321.442,31.438c0-3.872-0.829-10.054-5.878-11.438H80.055c-7.034,0-8.084,7.348-8.084,11.728\r\n\t\t\tc0,3.872,0.829,10.053,5.878,11.437h235.509C320.391,43.165,321.442,35.818,321.442,31.438z\"/>\r\n\t\t<path style=\"fill:#EFCA60;\" d=\"M300.011,371.096c0.724-1.186,72.322-119.496,54.594-186.792\r\n\t\t\tc-11.451-43.469-49.125-65.44-49.504-65.657c-3.114-1.78-5.058-5.106-5.058-8.693V98.78c-0.142,5.399-4.553,9.735-9.987,9.735\r\n\t\t\tH254.5c-5.523,0-10-4.478-10-10c0-5.522,4.477-10,10-10h35.556c5.434,0,9.845,4.336,9.987,9.735V74.892H93.37v23.624\r\n\t\t\tc0,3.605-1.941,6.933-5.08,8.706c-0.357,0.204-38.031,22.176-49.482,65.644C21.08,240.162,92.678,358.473,93.403,359.66\r\n\t\t\tc9.726,15.903,33.693,29.34,52.336,29.34h117.523c9.176,0,19.639-3.259,29.061-8.461\r\n\t\t\tC295.376,377.56,298.001,374.382,300.011,371.096z M118.944,88.516h99.556c5.523,0,10,4.478,10,10c0,5.522-4.477,10-10,10h-99.556\r\n\t\t\tc-5.523,0-10-4.478-10-10C108.944,92.993,113.421,88.516,118.944,88.516z M261.059,280.697l-22.493,38.958\r\n\t\t\tc-1.786,3.094-5.087,5-8.66,5h-50.758c-3.573,0-6.874-1.906-8.66-5l-22.493-38.958h-45.039c-3.573,0-6.874-1.906-8.66-5\r\n\t\t\tl-25.379-43.958c-1.787-3.094-1.787-6.906,0-10l25.379-43.959c1.786-3.094,5.087-5,8.66-5h50.758c3.573,0,6.874,1.906,8.66,5\r\n\t\t\tl22.493,38.959h39.266l22.493-38.959c1.786-3.094,5.087-5,8.66-5h50.758c3.573,0,6.874,1.906,8.66,5l25.379,43.959\r\n\t\t\tc1.787,3.094,1.787,6.906,0,10l-25.379,43.958c-1.786,3.094-5.087,5-8.66,5H261.059z\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"147.941,192.78 108.729,192.78 89.123,226.739 108.729,260.697 147.941,260.697 \r\n\t\t\t167.547,226.739 \t\t\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"224.133,236.739 184.921,236.739 165.315,270.697 184.921,304.655 224.133,304.655 \r\n\t\t\t243.739,270.697 233.936,253.718 \t\t\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"300.271,192.78 261.059,192.78 241.453,226.739 251.256,243.718 261.059,260.697 \r\n\t\t\t300.271,260.697 319.876,226.739 \t\t\"/>\r\n\t</g>\r\n\t<g>\r\n\t\t<path d=\"M389.532,167.77c-11.059-41.98-41.676-66.41-53.902-74.738V62.685c12.878-3.038,21.399-14.916,21.399-30.958\r\n\t\t\tC357.029,13.047,345.48,0,328.945,0H80.055C63.52,0,51.971,13.047,51.971,31.728c0,16.041,8.521,27.92,21.399,30.958v30.347\r\n\t\t\tc-12.226,8.328-42.843,32.758-53.902,74.738c-19.899,75.534,53.727,197.18,56.872,202.321C89.682,391.909,120.165,409,145.739,409\r\n\t\t\th117.523c25.573,0,56.057-17.091,69.399-38.908C335.805,364.95,409.431,243.305,389.532,167.77z M337.029,31.728\r\n\t\t\tc0,4.38-1.05,11.727-8.084,11.727H80.055c-0.816,0-1.543-0.108-2.206-0.29c-5.05-1.384-5.878-7.565-5.878-11.437\r\n\t\t\tc0-4.38,1.05-11.728,8.084-11.728h235.508h13.382C335.979,20,337.029,27.348,337.029,31.728z M315.598,359.658\r\n\t\t\tc-4.939,8.077-13.553,15.513-23.275,20.88c-9.422,5.202-19.886,8.461-29.061,8.461H145.739c-18.643,0-42.61-13.436-52.336-29.34\r\n\t\t\tc-0.725-1.188-72.323-119.498-54.595-186.794c11.451-43.469,49.124-65.44,49.482-65.644c3.139-1.774,5.08-5.101,5.08-8.706V74.892\r\n\t\t\tV63.454H315.63v35.062c0,3.587,1.944,6.913,5.058,8.693c0.379,0.217,38.053,22.189,49.504,65.657\r\n\t\t\tC387.92,240.162,316.322,358.473,315.598,359.658z\"/>\r\n\t\t<path d=\"M314.704,275.697l25.379-43.958c1.787-3.094,1.787-6.906,0-10l-25.379-43.959c-1.786-3.094-5.087-5-8.66-5h-50.758\r\n\t\t\tc-3.573,0-6.874,1.906-8.66,5l-22.493,38.959h-39.266l-22.493-38.959c-1.786-3.094-5.087-5-8.66-5h-50.758\r\n\t\t\tc-3.573,0-6.874,1.906-8.66,5l-25.379,43.959c-1.787,3.094-1.787,6.906,0,10l25.379,43.958c1.786,3.094,5.087,5,8.66,5h45.039\r\n\t\t\tl22.493,38.958c1.786,3.094,5.087,5,8.66,5h50.758c3.573,0,6.874-1.906,8.66-5l22.493-38.958h44.985\r\n\t\t\tC309.617,280.697,312.918,278.791,314.704,275.697z M147.941,260.697h-39.211l-19.606-33.958l19.606-33.959h39.211l19.606,33.959\r\n\t\t\tL147.941,260.697z M224.133,304.655h-39.211l-19.606-33.958l19.606-33.958h39.211l9.803,16.979l9.803,16.979L224.133,304.655z\r\n\t\t\t M261.059,260.697l-9.803-16.979l-9.803-16.979l19.606-33.959h39.211l19.606,33.959l-19.606,33.958H261.059z\"/>\r\n\t\t<path d=\"M290.056,88.516H254.5c-5.523,0-10,4.478-10,10c0,5.522,4.477,10,10,10h35.556c5.434,0,9.845-4.336,9.987-9.735\r\n\t\t\tc0.002-0.089,0.013-0.175,0.013-0.265c0-0.089-0.011-0.176-0.013-0.265C299.901,92.852,295.49,88.516,290.056,88.516z\"/>\r\n\t\t<path d=\"M118.944,108.516h99.556c5.523,0,10-4.478,10-10c0-5.522-4.477-10-10-10h-99.556c-5.523,0-10,4.478-10,10\r\n\t\t\tC108.944,104.038,113.421,108.516,118.944,108.516z\"/>\r\n\t</g>\r\n</g>\r\n</svg>"
    },
    {
      "type": "paragraph",
      "id": "9628fa4373d7c1d3",
      "text": "Generating a clickable SVG floorplan, where I need to manually \"close off\" rooms to make them clickable [https://graphicdesign.stackexchange.com/questions/152523/generating-a-clickable-svg-floorplan-where-i-need-to-manually-close-off-rooms stackexchange]"
    },
    {
      "type": "paragraph",
      "id": "981116f31690095c",
      "text": "How To Create SVG Paths Easily Using The GIMP [http://www.useragentman.com/blog/2013/04/26/how-to-create-svg-paths-easily-using-the-gimp/ blog]"
    },
    {
      "type": "paragraph",
      "id": "ff18036e23c39568",
      "text": "Clipping JPEG Images Into Non-Rectangular Polygons Using polyClip.js [http://www.useragentman.com/blog/2011/10/29/clipping-jpeg-images-into-non-rectangular-polygons-using-polyclip-js/ blog]"
    },
    {
      "type": "frame",
      "id": "0993b4cf2c9cbe5e",
      "text": "https://svgshare.com/i/_ad.svg"
    },
    {
      "type": "paragraph",
      "id": "ebda291ff6bdac29",
      "text": "[https://svgshare.com/i/_ad.svg expand]"
    },
    {
      "type": "paragraph",
      "id": "c5c98859aa13bbd0",
      "text": "Here's the SVG code for the above example"
    },
    {
      "type": "html",
      "id": "38673c37032eeaee",
      "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\n<svg width=\"175mm\" height=\"125mm\" version=\"1.1\" viewBox=\"0 0 175 125\" xmlns=\"http://www.w3.org/2000/svg\">\n <g transform=\"translate(70.8 -14.7)\">\n  <g fill=\"none\" stroke=\"#000\">\n   <path d=\"m-68.8 66.5v-49.8h171v121h-64\" stop-color=\"#000000\" stroke-width=\"4.05\"/>\n   <path d=\"m-68.8 87.8v49.8h85.3\" stop-color=\"#000000\" stroke-width=\"4.05\"/>\n   <g stroke-width=\"1.9\">\n    <path d=\"m-68.8 52.3h21.3\"/>\n    <path d=\"m-26.1 52.3h14.2v-35.6\"/>\n    <path d=\"m-11.9 52.3h14.2v14.2\"/>\n    <path d=\"m2.32 87.8v21.3h-28.4\"/>\n    <path d=\"m-47.5 109h-21.3\"/>\n    <path d=\"m2.32 109v28.4\"/>\n    <path d=\"m2.32 52.3h14.2\"/>\n    <path d=\"m37.9 52.3h14.2v-35.6\"/>\n    <path d=\"m52.1 52.3v14.2\"/>\n    <path d=\"m102 87.8h-14.2\"/>\n    <path d=\"m66.3 87.8h-14.2v49.8\"/>\n   </g>\n  </g>\n  <g fill-opacity=\"0\">\n   <rect x=\"-68.8\" y=\"16.7\" width=\"56.9\" height=\"35.6\" onclick=\"alert('You have clicked room 1')\"/>\n   <rect x=\"-11.9\" y=\"16.7\" width=\"64\" height=\"35.6\" onclick=\"alert('You have clicked room 2')\"/>\n   <rect x=\"52.1\" y=\"16.7\" width=\"49.8\" height=\"71.1\" onclick=\"alert('You have clicked room 3')\"/>\n   <rect x=\"-68.8\" y=\"52.3\" width=\"71.1\" height=\"56.9\" onclick=\"alert('You have clicked room 4')\"/>\n   <rect x=\"2.32\" y=\"52.3\" width=\"49.8\" height=\"85.3\" onclick=\"alert('You have clicked the hallway')\"/>\n   <rect x=\"52.1\" y=\"87.8\" width=\"49.8\" height=\"49.8\" onclick=\"alert('You have clicked room 6')\"/>\n   <rect x=\"-68.8\" y=\"109\" width=\"71.1\" height=\"28.4\" onclick=\"alert('You have clicked room 5')\"/>\n  </g>\n </g>\n</svg>\n"
    },
    {
      "type": "paragraph",
      "id": "51a626e13fa0ac24",
      "text": "See [https://graphicdesign.stackexchange.com/questions/152523/generating-a-clickable-svg-floorplan-where-i-need-to-manually-close-off-rooms stackexchange]"
    },
    {
      "type": "pagefold",
      "id": "668fd02fb49c7175",
      "text": "~"
    },
    {
      "type": "html",
      "id": "57f4d4b514219b36",
      "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"334.758\" height=\"61.313\" viewBox=\"0 3.715312500000003 334.7578125 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M105.750 30.012L112.781 30.012C113.612 27.046 114.479 24.116 115.383 21.223L99.211 21.223C96.543 29.922 94.013 38.760 91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M124.031 30.012L131.063 30.012C131.893 27.046 132.760 24.116 133.664 21.223L117.492 21.223C116.589 24.116 115.721 27.046 114.891 30.012L121.430 38.731L120.094 43.161L117.984 43.161L119.320 38.731L112.289 38.731C111.402 41.641 110.534 44.570 109.688 47.520L125.859 47.520C126.706 44.570 127.574 41.641 128.461 38.731L121.922 30.012L123.188 25.583L125.297 25.583Z\"/><path d=\"M127.969 47.520L135 47.520C138.438 35.817 141.955 24.193 145.336 12.434L147.938 3.715L140.906 3.715L138.305 12.434L132.680 12.434L131.414 16.864L137.039 16.864Z\"/><path d=\"M151.453 30.012L158.484 30.012C159.315 27.046 160.182 24.116 161.086 21.223L144.914 21.223C142.246 29.922 139.716 38.760 137.109 47.520L144.141 47.520L150.609 25.583L152.719 25.583Z\"/><path d=\"M167.133 38.731L174.164 38.731C175.896 32.893 177.573 26.999 179.367 21.223L163.195 21.223L161.859 25.583L161.896 25.583C159.729 32.897 157.517 40.165 155.391 47.520L171.563 47.520L172.828 43.161L163.688 43.161L168.927 25.583L171 25.583Z\"/><path d=\"M173.672 47.520L189.844 47.520C191.969 40.176 194.158 32.896 196.313 25.583L197.648 21.223L181.477 21.223L180.141 25.583L189.281 25.583L184.078 43.161L181.969 43.161L185.906 30.012L178.875 30.012C177.139 35.847 175.362 41.640 173.672 47.520Z\"/><path d=\"M210.234 47.520L217.266 47.520C219.872 38.759 222.402 29.922 225.070 21.223L199.758 21.223C197.089 29.922 194.560 38.760 191.953 47.520L198.984 47.520L205.453 25.583L207.563 25.583L201.094 47.520L208.125 47.520L214.594 25.583L216.703 25.583Z\"/><path d=\"M223.242 34.372L239.414 34.372L240.750 30.012L224.578 30.012Z\"/><path d=\"M232.453 65.028L248.625 65.028C252.590 51.954 256.396 38.721 260.297 25.583L261.633 21.223L245.461 21.223C242.793 29.922 240.263 38.760 237.656 47.520L244.688 47.520L251.156 25.583L253.266 25.583L242.930 60.668L240.820 60.668L242.086 56.309L235.055 56.309C234.216 59.244 233.349 62.150 232.453 65.028Z\"/><path d=\"M270.281 30.012L277.313 30.012C278.143 27.046 279.010 24.116 279.914 21.223L263.742 21.223C261.074 29.922 258.544 38.760 255.938 47.520L262.969 47.520L269.438 25.583L271.547 25.583Z\"/><path d=\"M274.219 47.520L290.391 47.520C292.516 40.176 294.705 32.896 296.859 25.583L298.195 21.223L282.023 21.223L280.688 25.583L289.828 25.583L284.625 43.161L282.516 43.161L286.453 30.012L279.422 30.012C277.686 35.847 275.909 41.640 274.219 47.520Z\"/><path d=\"M301.641 47.520L308.672 47.520C311.278 38.759 313.809 29.922 316.477 21.223L300.305 21.223C295.901 35.757 291.642 50.436 287.297 65.028L294.328 65.028L306 25.583L308.109 25.583Z\"/><path d=\"M319.922 47.520L326.953 47.520C329.559 38.759 332.090 29.922 334.758 21.223L325.617 21.223L330.750 3.715L323.719 3.715C321.560 11.002 319.478 18.366 317.250 25.583L310.781 47.520L317.813 47.520L324.281 25.583L326.391 25.583Z\"/></svg>"
    },
    {
      "type": "paragraph",
      "id": "d1793717e918549c",
      "text": "Stream subscription types act as graph nodes and attached transducers as graph edges, transforming data for downstream consumers / nodes. Theoretically, allows cycles and is not restricted to DAG topologies, but care must be taken to avoid CPU hogging if those cycles are causing synchronous computation loops (it the user's responsibility to avoid these and keep any cycles async). [https://github.com/thi-ng/umbrella/tree/develop/packages/rstream-graph github] ⇒ [[rstream-graph]]"
    },
    {
      "type": "paragraph",
      "id": "d4368c654320e095",
      "text": "Become a sponsor to [[Karsten Schmidt]]. [https://github.com/sponsors/postspectacular github]"
    },
    {
      "type": "paragraph",
      "id": "f70bfd98c472145d",
      "text": "⇒ [[Visual Code Widgets for Marker-Based Interaction]]"
    },
    {
      "type": "pagefold",
      "id": "4b5d2008db4d1348",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "86b80ea7ee446aee",
      "text": "Reproducible Research II: Practices and tools for managing computations and data. [https://scholar.social/@khinsen/112239880593000830 mastodon], [https://www.fun-mooc.fr/en/courses/reproducible-research-ii-practices-and-tools-for-managing-comput/ moc]"
    },
    {
      "type": "paragraph",
      "id": "fda6561241ee43b0",
      "text": "LibreQoS [https://libreqos.io/ site]"
    },
    {
      "type": "paragraph",
      "id": "7b10330eb35db547",
      "text": "[[#HowToThing #001]]"
    },
    {
      "type": "paragraph",
      "id": "28e4ba78b97ca180",
      "text": "[[rstream-system-bus]]"
    },
    {
      "type": "paragraph",
      "id": "1f619dada86de559",
      "text": "Bun is a fast JavaScript runtime, package manager, bundler, and test runner. [https://bun.sh/ site]"
    },
    {
      "type": "code",
      "id": "47f429dc80380899",
      "text": "curl -fsSL https://bun.sh/install | bash"
    },
    {
      "type": "code",
      "id": "8a0e352f9399d955",
      "text": "…\n(more flags in bun install --help, bun test --help, and bun build --help)\n\nLearn more about Bun:            https://bun.sh/docs\nJoin our Discord community:      https://bun.sh/discord\n➜  rstream-system-bus git:(develop) ✗ yarn start                                                  ~/Projects/RalfBarkow/umbrella/examples/rstream-system-bus\nerror: Module not found \"/Users/rgb/Projects/RalfBarkow/umbrella/packages/meta-css/bin/../index.js\"\n➜  rstream-system-bus git:(develop) ✗"
    },
    {
      "type": "paragraph",
      "id": "b823e6841e8c3bd2",
      "text": "Example build instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github]"
    },
    {
      "type": "paragraph",
      "id": "b440584d6b685c3b",
      "text": "Development mode for examples using thi.ng meta‐css [https://github.com/thi-ng/umbrella/wiki/Development-mode-for-examples-using-thi.ng-meta%E2%80%90css github]"
    },
    {
      "type": "code",
      "id": "5b539e8f21006cb4",
      "text": "error: Module not found \"/Users/rgb/Projects/RalfBarkow/umbrella/packages/meta-css/bin/../index.js\""
    },
    {
      "type": "code",
      "id": "f26e6aedba8d96af",
      "text": " cd packages/meta-css                                                                              ~/Projects/RalfBarkow/umbrella\n➜  meta-css git:(develop) ✗ "
    },
    {
      "type": "code",
      "id": "0f83cdfee9cb76cb",
      "text": "yarn install"
    },
    {
      "type": "code",
      "id": "808262b7cf14ca91",
      "text": "yarn build                                                                      ~/Projects/RalfBarkow/umbrella/packages/meta-css\n\n  index.js  39.40 KB\n\n[111ms] bundle 501 modules"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2024-04-17",
        "story": []
      },
      "date": 1713338831979
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "paragraph",
        "id": "050361931e8e36b4",
        "text": "replace the <rect> element with a hexagon shape"
      },
      "date": 1713338837228
    },
    {
      "item": {
        "type": "factory",
        "id": "22583a7a21c649ea"
      },
      "id": "22583a7a21c649ea",
      "type": "add",
      "after": "050361931e8e36b4",
      "date": 1713338840554
    },
    {
      "type": "edit",
      "id": "22583a7a21c649ea",
      "item": {
        "type": "html",
        "id": "22583a7a21c649ea",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Empowering_Business_Units\">\n    <polygon points=\"10,50 50,10 150,10 190,50 150,90 50,90\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <text x=\"100\" y=\"50\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Empowering Business Units]]</text>\n  </a>\n</svg>\n"
      },
      "date": 1713338842641
    },
    {
      "type": "edit",
      "id": "22583a7a21c649ea",
      "item": {
        "type": "html",
        "id": "22583a7a21c649ea",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"X1,Y1 X2,Y2 X3,Y3 X4,Y4 X5,Y5 X6,Y6\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n"
      },
      "date": 1713338959181
    },
    {
      "item": {
        "type": "factory",
        "id": "a9c1ecf775331588"
      },
      "id": "a9c1ecf775331588",
      "type": "add",
      "after": "22583a7a21c649ea",
      "date": 1713339034760
    },
    {
      "item": {
        "type": "factory",
        "id": "c8c0654f41478e5d"
      },
      "id": "c8c0654f41478e5d",
      "type": "add",
      "after": "a9c1ecf775331588",
      "date": 1713339036298
    },
    {
      "type": "edit",
      "id": "c8c0654f41478e5d",
      "item": {
        "type": "code",
        "id": "c8c0654f41478e5d",
        "text": "<polygon points=\"50,25 150,25 200,75 150,125 50,125 0,75\" />\n"
      },
      "date": 1713339039845
    },
    {
      "type": "edit",
      "id": "a9c1ecf775331588",
      "item": {
        "type": "markdown",
        "id": "a9c1ecf775331588",
        "text": "To create a perfect honeycomb shape as the container for the clickable text, we can use SVG `<polygon>` elements. Here's a model for the variable parts, including the honeycomb shape and the text:\n\n```svg\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"X1,Y1 X2,Y2 X3,Y3 X4,Y4 X5,Y5 X6,Y6\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n```\n\nReplace `YOUR_WIKI_LINK` with the link to the corresponding wiki page. Adjust the `points` attribute of the `<polygon>` element to define the honeycomb shape. You can calculate the points manually or using a tool like Inkscape.\n\nReplace `TEXT_X` and `TEXT_Y` with the coordinates where you want the text to be positioned inside the honeycomb shape.\n\nReplace `YOUR_TEXT_HERE` with the text you want to display inside the honeycomb shape. Adjust the font size and other text attributes as needed."
      },
      "date": 1713339050816
    },
    {
      "item": {
        "type": "factory",
        "id": "d3ec0d91ea997471"
      },
      "id": "d3ec0d91ea997471",
      "type": "add",
      "after": "c8c0654f41478e5d",
      "date": 1713339072222
    },
    {
      "type": "edit",
      "id": "d3ec0d91ea997471",
      "item": {
        "type": "html",
        "id": "d3ec0d91ea997471",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"X1,Y1 X2,Y2 X3,Y3 X4,Y4 X5,Y5 X6,Y6\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339082875
    },
    {
      "type": "edit",
      "id": "d3ec0d91ea997471",
      "item": {
        "type": "html",
        "id": "d3ec0d91ea997471",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"50,25 150,25 200,75 150,125 50,125 0,75\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339106277
    },
    {
      "item": {
        "type": "factory",
        "id": "d7c660ad3fb21cb2"
      },
      "id": "d7c660ad3fb21cb2",
      "type": "add",
      "after": "d3ec0d91ea997471",
      "date": 1713339188375
    },
    {
      "type": "edit",
      "id": "d7c660ad3fb21cb2",
      "item": {
        "type": "pagefold",
        "id": "d7c660ad3fb21cb2",
        "text": "~"
      },
      "date": 1713339192198
    },
    {
      "item": {
        "type": "factory",
        "id": "e41a62c29edde386"
      },
      "id": "e41a62c29edde386",
      "type": "add",
      "after": "d7c660ad3fb21cb2",
      "date": 1713339193650
    },
    {
      "type": "edit",
      "id": "e41a62c29edde386",
      "item": {
        "type": "paragraph",
        "id": "e41a62c29edde386",
        "text": "SVG honeycomb polygon filling animation"
      },
      "date": 1713339204215
    },
    {
      "type": "edit",
      "id": "e41a62c29edde386",
      "item": {
        "type": "paragraph",
        "id": "e41a62c29edde386",
        "text": "SVG honeycomb polygon filling animation [https://stackoverflow.com/questions/62554864/svg-honeycomb-polygon-filling-animation stackoverflow]"
      },
      "date": 1713339217782
    },
    {
      "item": {
        "type": "factory",
        "id": "e7f5c58326f7ebb1"
      },
      "id": "e7f5c58326f7ebb1",
      "type": "add",
      "after": "e41a62c29edde386",
      "date": 1713339227899
    },
    {
      "type": "edit",
      "id": "e7f5c58326f7ebb1",
      "item": {
        "type": "html",
        "id": "e7f5c58326f7ebb1",
        "text": "<svg width=\"31\" height=\"29\" viewBox=\"0 0 31 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n   <path d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\" stroke=\"white\" />\n   <g opacity=\"0.5\">\n      <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"10\" y=\"0\" width=\"21\" height=\"17\">\n         <path d=\"M10 17V6.5L11 0L30.5 13.5L22 10L10 17Z\" fill=\"white\" />\n      </mask>\n      <g mask=\"url(#mask0)\">\n         <path d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\" fill=\"white\" />\n      </g>\n   </g>\n</svg>\n"
      },
      "date": 1713339230002
    },
    {
      "type": "fork",
      "date": 1713339288907
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "paragraph",
        "id": "050361931e8e36b4",
        "text": "create a perfect honeycomb shape"
      },
      "date": 1713339305290
    },
    {
      "type": "add",
      "id": "14c5e5d64d7c8897",
      "item": {
        "type": "paragraph",
        "id": "14c5e5d64d7c8897",
        "text": "replace the <rect> element with a hexagon shape"
      },
      "after": "050361931e8e36b4",
      "date": 1713339306863
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "paragraph",
        "id": "050361931e8e36b4",
        "text": "Create a perfect honeycomb shape"
      },
      "date": 1713339309600
    },
    {
      "item": {
        "type": "factory",
        "id": "e6ff5cbd7aba085d"
      },
      "id": "e6ff5cbd7aba085d",
      "type": "add",
      "after": "e7f5c58326f7ebb1",
      "date": 1713339311871
    },
    {
      "type": "edit",
      "id": "e6ff5cbd7aba085d",
      "item": {
        "type": "html",
        "id": "e6ff5cbd7aba085d",
        "text": "<iframe src='about:blank' srcdoc='\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>SVG Animation</title>\n</head>\n<body>\n  <div style=\"width: 200px; height: 200px;\">\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 100%; height: 100%;\">\n      <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"blue\">\n        <animate attributeName=\"cy\" values=\"50; 80; 50\" dur=\"2s\" repeatCount=\"indefinite\" />\n      </circle>\n    </svg>\n  </div>\n</body>\n</html>' width=\"220\" height=\"220\" style=\"border: none;\"></iframe>\n"
      },
      "date": 1713339336309
    },
    {
      "type": "fork",
      "date": 1713339347850
    },
    {
      "item": {
        "type": "factory",
        "id": "99adba9d14f3c32d"
      },
      "id": "99adba9d14f3c32d",
      "type": "add",
      "after": "e6ff5cbd7aba085d",
      "date": 1713339352020
    },
    {
      "type": "edit",
      "id": "99adba9d14f3c32d",
      "item": {
        "type": "frame",
        "id": "99adba9d14f3c32d",
        "text": "<iframe src='about:blank' srcdoc='\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>SVG Animation</title>\n</head>\n<body>\n  <div style=\"width: 200px; height: 200px;\">\n    <svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 100%; height: 100%;\">\n      <circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"blue\">\n        <animate attributeName=\"cy\" values=\"50; 80; 50\" dur=\"2s\" repeatCount=\"indefinite\" />\n      </circle>\n    </svg>\n  </div>\n</body>\n</html>' width=\"220\" height=\"220\" style=\"border: none;\"></iframe>\n"
      },
      "date": 1713339354304
    },
    {
      "type": "edit",
      "id": "99adba9d14f3c32d",
      "item": {
        "type": "frame",
        "id": "99adba9d14f3c32d",
        "text": "<iframe src='about:blank' srcdoc='<svg width=\"180\" viewBox=\"0 0 31 29\">\n<g transform=\"translate(6 -3)\">\n    <clipPath id=\"clip\">\n        <path id=\"path\" d=\"M9.00035 7.55536L2.02871 11.4285C1.39378 11.7812 1 12.4505 1 13.1768V21.8232C1 22.5495 1.39378 23.2188 2.02871 23.5715L9.00035 27.4446C9.61973 27.7887 10.3749 27.7794 10.9857 27.4202L17.514 23.58C18.1249 23.2206 18.5 22.5648 18.5 21.8561V13.1439C18.5 12.4352 18.1249 11.7794 17.514 11.42L10.9857 7.57981C10.375 7.22056 9.61973 7.21126 9.00035 7.55536Z\"/>\n    </clipPath>\n    <path d=\"M10,12.5A5,5 0 0 1 10,22.5A5,5 0 0 1 10,12.5\" fill=\"none\" stroke=\"#cab\" stroke-dasharray=\"0 62.84\" stroke-width=\"10\" clip-path=\"url(#clip)\">\n        <animate attributeName=\"stroke-dasharray\"\n            values=\"0 31.4;10 21.4;20 11.4;31.4 0\" begin=\"0s\" dur=\"10s\" fill=\"freeze\"/>\n    </path>\n    <use xlink:href=\"#path\"  stroke=\"#fff\" fill=\"none\"/>\n</g>\n</svg>' width=\"220\" height=\"220\" style=\"border: none;\"></iframe>\n"
      },
      "date": 1713339392699
    },
    {
      "item": {
        "type": "factory",
        "id": "c6f6fb4ab8aa41d6"
      },
      "id": "c6f6fb4ab8aa41d6",
      "type": "add",
      "after": "99adba9d14f3c32d",
      "date": 1713339458251
    },
    {
      "type": "edit",
      "id": "c6f6fb4ab8aa41d6",
      "item": {
        "type": "code",
        "id": "c6f6fb4ab8aa41d6",
        "text": "<polygon points=\"1,13.5 5,11 9,13.5 9,17.5 5,20 1,17.5\" />\n"
      },
      "date": 1713339464822
    },
    {
      "id": "d3ec0d91ea997471",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "14c5e5d64d7c8897",
        "22583a7a21c649ea",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471"
      ],
      "date": 1713339470012
    },
    {
      "item": {
        "type": "factory",
        "id": "91be87389216f766"
      },
      "id": "91be87389216f766",
      "type": "add",
      "after": "d3ec0d91ea997471",
      "date": 1713339471163
    },
    {
      "id": "91be87389216f766",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "14c5e5d64d7c8897",
        "22583a7a21c649ea",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "91be87389216f766",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471"
      ],
      "date": 1713339473758
    },
    {
      "type": "edit",
      "id": "91be87389216f766",
      "item": {
        "type": "pagefold",
        "id": "91be87389216f766",
        "text": "~"
      },
      "date": 1713339476384
    },
    {
      "item": {
        "type": "factory",
        "id": "00ecd26b0b315b2b"
      },
      "id": "00ecd26b0b315b2b",
      "type": "add",
      "after": "d3ec0d91ea997471",
      "date": 1713339499213
    },
    {
      "type": "edit",
      "id": "00ecd26b0b315b2b",
      "item": {
        "type": "markdown",
        "id": "00ecd26b0b315b2b",
        "text": "# Points"
      },
      "date": 1713339505142
    },
    {
      "id": "00ecd26b0b315b2b",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "14c5e5d64d7c8897",
        "22583a7a21c649ea",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "91be87389216f766",
        "00ecd26b0b315b2b",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471"
      ],
      "date": 1713339507883
    },
    {
      "type": "edit",
      "id": "d3ec0d91ea997471",
      "item": {
        "type": "html",
        "id": "d3ec0d91ea997471",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"1,13.5 5,11 9,13.5 9,17.5 5,20 1,17.5\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339520085
    },
    {
      "item": {
        "type": "factory",
        "id": "f52b1df65438c599"
      },
      "id": "f52b1df65438c599",
      "type": "add",
      "after": "d3ec0d91ea997471",
      "date": 1713339578314
    },
    {
      "type": "edit",
      "id": "f52b1df65438c599",
      "item": {
        "type": "code",
        "id": "f52b1df65438c599",
        "text": "function scalePolygonToText(polygonPoints, textBoundingRect) {\n    // Get the width and height of the text bounding box\n    const textWidth = textBoundingRect.width;\n    const textHeight = textBoundingRect.height;\n\n    // Find the maximum dimension of the text bounding box\n    const maxDimension = Math.max(textWidth, textHeight);\n\n    // Calculate the scale factor based on the maximum dimension\n    const scaleFactor = maxDimension / 8; // Assuming the original bounding box width of the polygon is 8\n\n    // Scale each point of the polygon\n    const scaledPolygonPoints = polygonPoints.map(point => ({\n        x: point.x * scaleFactor,\n        y: point.y * scaleFactor\n    }));\n\n    return scaledPolygonPoints;\n}\n\n// Example usage\nconst polygonPoints = [\n    { x: 1, y: 13.5 },\n    { x: 5, y: 11 },\n    { x: 9, y: 13.5 },\n    { x: 9, y: 17.5 },\n    { x: 5, y: 20 },\n    { x: 1, y: 17.5 }\n];\n\nconst textBoundingRect = {\n    width: 100, // Example width of the text bounding box\n    height: 50 // Example height of the text bounding box\n};\n\nconst scaledPolygon = scalePolygonToText(polygonPoints, textBoundingRect);\nconsole.log(scaledPolygon); // Output the scaled polygon points\n"
      },
      "date": 1713339580203
    },
    {
      "item": {
        "type": "factory",
        "id": "6b59353d9eadc650"
      },
      "id": "6b59353d9eadc650",
      "type": "add",
      "after": "f52b1df65438c599",
      "date": 1713339686181
    },
    {
      "type": "edit",
      "id": "6b59353d9eadc650",
      "item": {
        "type": "html",
        "id": "6b59353d9eadc650",
        "text": "<svg width=\"180\" height=\"180\" viewBox=\"0 0 20 20\">\n  <g transform=\"translate(0, 5)\">\n    <polygon points=\"2,12 6,9.5 10,12 10,16 6,18.5 2,16\" fill=\"none\" stroke=\"#000\"/>\n    <clipPath id=\"clip\">\n      <polygon points=\"2,12 6,9.5 10,12 10,16 6,18.5 2,16\" fill=\"none\"/>\n    </clipPath>\n    <text x=\"2\" y=\"12\" clip-path=\"url(#clip)\" font-size=\"4\" font-family=\"Arial, sans-serif\">Welcome Visitors</text>\n  </g>\n</svg>\n"
      },
      "date": 1713339689174
    },
    {
      "item": {
        "type": "factory",
        "id": "b2966a43b7f357da"
      },
      "id": "b2966a43b7f357da",
      "type": "add",
      "after": "6b59353d9eadc650",
      "date": 1713339829990
    },
    {
      "type": "edit",
      "id": "b2966a43b7f357da",
      "item": {
        "type": "html",
        "id": "b2966a43b7f357da",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Empowering_Business_Units\">\n    <polygon points=\"30,50 70,38 130,38 170,50 130,62 70,62\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <text x=\"100\" y=\"50\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Empowering Business Units]]</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339832718
    },
    {
      "item": {
        "type": "factory",
        "id": "2a243b387209c8bf"
      },
      "id": "2a243b387209c8bf",
      "type": "add",
      "after": "b2966a43b7f357da",
      "date": 1713339888013
    },
    {
      "type": "edit",
      "id": "2a243b387209c8bf",
      "item": {
        "type": "paragraph",
        "id": "2a243b387209c8bf",
        "text": "<polygon points=\"40,25 100,17 180,25 180,35 100,43 40,35\" />\n"
      },
      "date": 1713339890317
    },
    {
      "type": "remove",
      "id": "2a243b387209c8bf",
      "date": 1713339902416
    },
    {
      "item": {
        "type": "factory",
        "id": "b2e76f530165a543"
      },
      "id": "b2e76f530165a543",
      "type": "add",
      "after": "b2966a43b7f357da",
      "date": 1713339903446
    },
    {
      "type": "edit",
      "id": "b2e76f530165a543",
      "item": {
        "type": "code",
        "id": "b2e76f530165a543",
        "text": "<polygon points=\"40,25 100,17 180,25 180,35 100,43 40,35\" />\n"
      },
      "date": 1713339905556
    },
    {
      "item": {
        "type": "factory",
        "id": "8740ee9eae3d0539"
      },
      "id": "8740ee9eae3d0539",
      "type": "add",
      "after": "b2e76f530165a543",
      "date": 1713339921192
    },
    {
      "type": "edit",
      "id": "8740ee9eae3d0539",
      "item": {
        "type": "html",
        "id": "8740ee9eae3d0539",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Empowering_Business_Units\">\n    <polygon points=\"30,50 70,38 130,38 170,50 130,62 70,62\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <text x=\"100\" y=\"50\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Empowering Business Units]]</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339925874
    },
    {
      "type": "edit",
      "id": "8740ee9eae3d0539",
      "item": {
        "type": "html",
        "id": "8740ee9eae3d0539",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Empowering_Business_Units\">\n    <polygon points=\"40,25 100,17 180,25 180,35 100,43 40,35\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <text x=\"100\" y=\"50\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Empowering Business Units]]</text>\n  </a>\n</svg>\n"
      },
      "date": 1713339934347
    },
    {
      "type": "edit",
      "id": "8740ee9eae3d0539",
      "item": {
        "type": "html",
        "id": "8740ee9eae3d0539",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">Welcome Visitors</text>\n  </a>\n</svg>\n"
      },
      "date": 1713340023686
    },
    {
      "item": {
        "type": "factory",
        "id": "f493e238c458430f"
      },
      "id": "f493e238c458430f",
      "type": "add",
      "after": "8740ee9eae3d0539",
      "date": 1713340050888
    },
    {
      "type": "edit",
      "id": "f493e238c458430f",
      "item": {
        "type": "markdown",
        "id": "f493e238c458430f",
        "text": "Got it! Here's the modified SVG with the Welcome Visitors wiki link and the honeycomb shape scaled to fit the text:\n\n```xml\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">Welcome Visitors</text>\n  </a>\n</svg>\n```\n\nIn this SVG:\n\n- The polygon points have been adjusted to scale the honeycomb shape around the text.\n- The text is centered inside the honeycomb shape.\n- The xlink:href attribute of the <a> tag has been set to \"#Welcome_Visitors\" to make it a link.\n\nFeel free to adjust the coordinates and styling as needed! Let me know if you need further customization."
      },
      "date": 1713340053340
    },
    {
      "type": "edit",
      "id": "8740ee9eae3d0539",
      "item": {
        "type": "html",
        "id": "8740ee9eae3d0539",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">[[Welcome Visitors]]</text>\n  </a>\n</svg>\n"
      },
      "date": 1713340117268
    },
    {
      "type": "remove",
      "id": "14c5e5d64d7c8897",
      "date": 1713340226266
    },
    {
      "type": "remove",
      "id": "22583a7a21c649ea",
      "date": 1713340228105
    },
    {
      "type": "edit",
      "id": "a9c1ecf775331588",
      "item": {
        "type": "markdown",
        "id": "a9c1ecf775331588",
        "text": "To create a perfect honeycomb shape as the container for the clickable text, we can use SVG `<polygon>` elements. Here's a model for the variable parts, including the honeycomb shape and the text:\n\n```svg\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"X1,Y1 X2,Y2 X3,Y3 X4,Y4 X5,Y5 X6,Y6\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>\n```\n\nReplace `YOUR_WIKI_LINK` with the link to the corresponding wiki page. Adjust the `points` attribute of the `<polygon>` element to define the honeycomb shape. You can calculate the points manually or using a tool like [[Inkscape]].\n\nReplace `TEXT_X` and `TEXT_Y` with the coordinates where you want the text to be positioned inside the honeycomb shape.\n\nReplace `YOUR_TEXT_HERE` with the text you want to display inside the honeycomb shape. Adjust the font size and other text attributes as needed."
      },
      "date": 1713340280514
    },
    {
      "type": "edit",
      "id": "f493e238c458430f",
      "item": {
        "type": "markdown",
        "id": "f493e238c458430f",
        "text": "Got it! Here's the modified SVG with the Welcome Visitors wiki link and the honeycomb shape scaled to fit the text:\n\n```xml\n<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#Welcome_Visitors\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"30,30 70,20 130,30 130,40 70,50 30,40\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"70\" y=\"35\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">Welcome Visitors</text>\n  </a>\n</svg>\n```\n\nIn this SVG:\n\n- The polygon points have been adjusted to scale the honeycomb shape around the text.\n- The text is centered inside the honeycomb shape.\n- The xlink:href attribute of the <a> tag has been set to \"#Welcome_Visitors\" to make it a link.\n\nFeel free to adjust the coordinates and styling as needed! Let me know if you need further customization. (ChatGPT 3.5)"
      },
      "date": 1713340437128
    },
    {
      "item": {
        "type": "factory",
        "id": "741dd4de329c9c55"
      },
      "id": "741dd4de329c9c55",
      "type": "add",
      "after": "f493e238c458430f",
      "date": 1713340478380
    },
    {
      "type": "edit",
      "id": "741dd4de329c9c55",
      "item": {
        "type": "pagefold",
        "id": "741dd4de329c9c55",
        "text": "~"
      },
      "date": 1713340481429
    },
    {
      "item": {
        "type": "factory",
        "id": "c6559841f5c9845b"
      },
      "id": "c6559841f5c9845b",
      "type": "add",
      "after": "741dd4de329c9c55",
      "date": 1713340495298
    },
    {
      "type": "edit",
      "id": "c6559841f5c9845b",
      "item": {
        "type": "paragraph",
        "id": "c6559841f5c9845b",
        "text": "⇒ [[Declarative UI Specification]]"
      },
      "date": 1713340505156
    },
    {
      "item": {
        "type": "factory",
        "id": "0bf619a321080ed7"
      },
      "id": "0bf619a321080ed7",
      "type": "add",
      "after": "c6559841f5c9845b",
      "date": 1713343765413
    },
    {
      "type": "edit",
      "id": "0bf619a321080ed7",
      "item": {
        "type": "image",
        "id": "0bf619a321080ed7",
        "text": "\nROHS, Michael, 2005. Visual code widgets for marker-based interaction. In: 25th IEEE International Conference on Distributed Computing Systems Workshops. Online. IEEE. 2005. p. 506–513. Available from: https://ieeexplore.ieee.org/abstract/document/1437218/ [Accessed 17 April 2024]. \n",
        "size": "wide",
        "width": 418,
        "height": 254,
        "url": "/assets/plugins/image/8e88017ab8099cdd2520ed24239a5ea8.jpg"
      },
      "date": 1713343801626
    },
    {
      "item": {
        "type": "factory",
        "id": "22c9d9a4f0925a92"
      },
      "id": "22c9d9a4f0925a92",
      "type": "add",
      "after": "0bf619a321080ed7",
      "date": 1713343819949
    },
    {
      "type": "edit",
      "id": "22c9d9a4f0925a92",
      "item": {
        "type": "paragraph",
        "id": "22c9d9a4f0925a92",
        "text": "\nROHS, Michael, 2005. Visual code widgets for marker-based interaction. In: 25th IEEE International Conference on Distributed Computing Systems Workshops. Online. IEEE. 2005. p. 506–513. Available from: https://ieeexplore.ieee.org/abstract/document/1437218/ [Accessed 17 April 2024]. \n"
      },
      "date": 1713343822662
    },
    {
      "type": "edit",
      "id": "0bf619a321080ed7",
      "item": {
        "type": "image",
        "id": "0bf619a321080ed7",
        "text": "ROHS, Michael, 2005. Visual code widgets for marker-based interaction.",
        "size": "wide",
        "width": 418,
        "height": 254,
        "url": "/assets/plugins/image/8e88017ab8099cdd2520ed24239a5ea8.jpg"
      },
      "date": 1713343830302
    },
    {
      "type": "edit",
      "id": "22c9d9a4f0925a92",
      "item": {
        "type": "paragraph",
        "id": "22c9d9a4f0925a92",
        "text": "ROHS, Michael, 2005. Visual code widgets for marker-based interaction. In: 25th IEEE International Conference on Distributed Computing Systems Workshops. IEEE. 2005. p. 506–513. [https://ieeexplore.ieee.org/abstract/document/1437218/ ieee]. \n"
      },
      "date": 1713343851950
    },
    {
      "id": "a99121d749374d54",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a99121d749374d54",
        "text": "10x scaling:"
      },
      "after": "d3ec0d91ea997471",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713344688846
    },
    {
      "id": "f65ef1d3a9299b40",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f65ef1d3a9299b40",
        "text": "<polygon points=\"10,135 50,110 90,135 90,165 50,190 10,165\" />\n"
      },
      "after": "a99121d749374d54",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713344699599
    },
    {
      "type": "edit",
      "id": "a99121d749374d54",
      "item": {
        "type": "paragraph",
        "id": "a99121d749374d54",
        "text": "5x scaling:"
      },
      "date": 1713344824797
    },
    {
      "type": "edit",
      "id": "f65ef1d3a9299b40",
      "item": {
        "type": "code",
        "id": "f65ef1d3a9299b40",
        "text": "<polygon points=\"5,67.5 25,55 45,67.5 45,82.5 25,95 5,82.5\" />\n"
      },
      "date": 1713344843740
    },
    {
      "id": "4535d22013bb30af",
      "type": "add",
      "item": {
        "type": "html",
        "id": "4535d22013bb30af",
        "text": "<svg width=\"400\" height=\"100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <a xlink:href=\"#YOUR_WIKI_LINK\">\n    <!-- Define the points for the honeycomb shape -->\n    <polygon points=\"5,67.5 25,55 45,67.5 45,82.5 25,95 5,82.5\" fill=\"#f0f0f0\" stroke=\"#000\" stroke-width=\"2\"/>\n    <!-- Add the text inside the honeycomb shape -->\n    <text x=\"TEXT_X\" y=\"TEXT_Y\" text-anchor=\"middle\" alignment-baseline=\"middle\" fill=\"blue\">YOUR_TEXT_HERE</text>\n  </a>\n</svg>"
      },
      "after": "f65ef1d3a9299b40",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713344909190
    },
    {
      "id": "4f02e009a4fbbeb8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4f02e009a4fbbeb8",
        "text": "Calculate Honeycomb Points"
      },
      "after": "4535d22013bb30af",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713345016641
    },
    {
      "type": "edit",
      "id": "4f02e009a4fbbeb8",
      "item": {
        "type": "paragraph",
        "id": "4f02e009a4fbbeb8",
        "text": "⇒ [[Calculate Honeycomb Points]]"
      },
      "date": 1713345027582
    },
    {
      "item": {
        "type": "factory",
        "id": "e6fe603b3c8547d6"
      },
      "id": "e6fe603b3c8547d6",
      "type": "add",
      "after": "22c9d9a4f0925a92",
      "date": 1713351713291
    },
    {
      "item": {
        "type": "factory",
        "id": "768d9760acbc3629"
      },
      "id": "768d9760acbc3629",
      "type": "add",
      "after": "e6fe603b3c8547d6",
      "date": 1713351718046
    },
    {
      "type": "edit",
      "id": "768d9760acbc3629",
      "item": {
        "type": "html",
        "id": "768d9760acbc3629",
        "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\r\n<svg fill=\"#000000\" height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 404.618 404.618\" xml:space=\"preserve\">\r\n<g>\r\n\t<path d=\"M84.62,120.674h-48.36c-2.671,0-5.16,1.436-6.495,3.75l-24.18,41.879c-1.336,2.316-1.336,5.188,0,7.5l24.18,41.885\r\n\t\tc1.335,2.311,3.824,3.746,6.495,3.746h48.36c2.671,0,5.16-1.436,6.496-3.746l24.18-41.885c1.335-2.313,1.335-5.184,0-7.5\r\n\t\tl-24.18-41.879C89.78,122.11,87.29,120.674,84.62,120.674z\"/>\r\n\t<path d=\"M180.034,178.586h-48.361c-2.67,0-5.16,1.439-6.495,3.75l-24.181,41.885c-1.334,2.311-1.334,5.186,0,7.498l24.181,41.883\r\n\t\tc1.335,2.313,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.438,6.494-3.75l24.179-41.883c1.335-2.313,1.335-5.188,0-7.498\r\n\t\tl-24.179-41.885C185.192,180.026,182.704,178.586,180.034,178.586z\"/>\r\n\t<path d=\"M186.528,293.168c-1.336-2.315-3.824-3.75-6.494-3.75h-48.361c-2.67,0-5.16,1.435-6.495,3.75l-24.181,41.879\r\n\t\tc-1.334,2.314-1.334,5.188,0,7.5l24.181,41.881c1.335,2.313,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.438,6.494-3.75\r\n\t\tl24.179-41.881c1.335-2.313,1.335-5.186,0-7.5L186.528,293.168z\"/>\r\n\t<path d=\"M110.712,280.049L86.532,238.17c-1.335-2.314-3.824-3.75-6.494-3.75H31.676c-2.671,0-5.16,1.436-6.496,3.75L1,280.049\r\n\t\tc-1.334,2.315-1.334,5.188,0,7.5l24.18,41.881c1.336,2.313,3.825,3.75,6.496,3.75h48.361c2.67,0,5.159-1.438,6.494-3.75\r\n\t\tl24.181-41.881C112.047,285.237,112.047,282.364,110.712,280.049z\"/>\r\n\t<path d=\"M180.034,64.428h-48.361c-2.67,0-5.16,1.436-6.495,3.75l-24.181,41.879c-1.334,2.314-1.334,5.185,0,7.502l24.181,41.879\r\n\t\tc1.335,2.314,3.825,3.75,6.495,3.75h48.361c2.67,0,5.158-1.436,6.494-3.75l24.179-41.879c1.335-2.316,1.335-5.188,0-7.502\r\n\t\tl-24.179-41.879C185.192,65.864,182.704,64.428,180.034,64.428z\"/>\r\n\t<path d=\"M229.167,221.899h48.36c2.67,0,5.16-1.434,6.495-3.75l24.181-41.879c1.334-2.314,1.334-5.188,0-7.5l-24.181-41.885\r\n\t\tc-1.335-2.309-3.825-3.748-6.495-3.748h-48.36c-2.671,0-5.159,1.44-6.495,3.748l-24.178,41.885c-1.336,2.313-1.336,5.186,0,7.5\r\n\t\tl24.178,41.879C224.008,220.465,226.497,221.899,229.167,221.899z\"/>\r\n\t<path d=\"M379.436,184.803c-1.336-2.314-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.436-6.496,3.75l-24.18,41.879\r\n\t\tc-1.334,2.314-1.334,5.186,0,7.5l24.18,41.881c1.336,2.313,3.825,3.75,6.496,3.75h48.36c2.671,0,5.159-1.438,6.495-3.75\r\n\t\tl24.18-41.881c1.336-2.314,1.336-5.186,0-7.5L379.436,184.803z\"/>\r\n\t<path d=\"M379.436,297.295c-1.336-2.309-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.441-6.496,3.75l-24.18,41.885\r\n\t\tc-1.334,2.309-1.334,5.186,0,7.5l24.18,41.879c1.336,2.315,3.825,3.75,6.496,3.75h48.36c2.671,0,5.159-1.435,6.495-3.75\r\n\t\tl24.18-41.879c1.336-2.314,1.336-5.191,0-7.5L379.436,297.295z\"/>\r\n\t<path d=\"M308.204,280.049l-24.181-41.879c-1.335-2.314-3.825-3.75-6.495-3.75h-48.36c-2.671,0-5.159,1.436-6.495,3.75\r\n\t\tl-24.178,41.879c-1.336,2.315-1.336,5.188,0,7.5l24.178,41.881c1.336,2.313,3.824,3.75,6.495,3.75h48.36\r\n\t\tc2.67,0,5.16-1.438,6.495-3.75l24.181-41.881C309.538,285.237,309.538,282.364,308.204,280.049z\"/>\r\n\t<path d=\"M308.204,57.94l-24.181-41.881c-1.335-2.313-3.825-3.75-6.495-3.75h-48.36c-2.671,0-5.159,1.438-6.495,3.75L198.495,57.94\r\n\t\tc-1.336,2.313-1.336,5.189,0,7.5l24.178,41.883c1.336,2.311,3.824,3.75,6.495,3.75h48.36c2.67,0,5.16-1.439,6.495-3.75\r\n\t\tl24.181-41.883C309.538,63.129,309.538,60.252,308.204,57.94z\"/>\r\n\t<path d=\"M379.436,70.639c-1.336-2.313-3.824-3.75-6.495-3.75h-48.36c-2.671,0-5.16,1.438-6.496,3.75l-24.18,41.885\r\n\t\tc-1.334,2.309-1.334,5.186,0,7.496l24.18,41.883c1.336,2.314,3.825,3.752,6.496,3.752h48.36c2.671,0,5.159-1.438,6.495-3.752\r\n\t\tl24.18-41.883c1.336-2.311,1.336-5.188,0-7.496L379.436,70.639z\"/>\r\n</g>\r\n</svg>"
      },
      "date": 1713351725092
    },
    {
      "item": {
        "type": "factory",
        "id": "8600fab0d955764c"
      },
      "id": "8600fab0d955764c",
      "type": "add",
      "after": "768d9760acbc3629",
      "date": 1713351791181
    },
    {
      "type": "edit",
      "id": "8600fab0d955764c",
      "item": {
        "type": "reference",
        "id": "8600fab0d955764c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "calculate-honeycomb-points",
        "title": "Calculate Honeycomb Points",
        "text": "The following [[SVG]] code creates a clickable honeycomb-shaped container with text inside. We want the text and the [[Honeycomb]] surrounding it to fit together. We assume that the honeycomb must be scaled so that the variable text, e.g. a wiki link, is well wrapped."
      },
      "date": 1713351793513
    },
    {
      "item": {
        "type": "factory",
        "id": "71130ec90232cb30"
      },
      "id": "71130ec90232cb30",
      "type": "add",
      "after": "8600fab0d955764c",
      "date": 1713352157632
    },
    {
      "type": "edit",
      "id": "71130ec90232cb30",
      "item": {
        "type": "paragraph",
        "id": "71130ec90232cb30",
        "text": "Honeycomb Vectors"
      },
      "date": 1713352173873
    },
    {
      "id": "71130ec90232cb30",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "91be87389216f766",
        "00ecd26b0b315b2b",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471",
        "a99121d749374d54",
        "f65ef1d3a9299b40",
        "4535d22013bb30af",
        "4f02e009a4fbbeb8",
        "f52b1df65438c599",
        "6b59353d9eadc650",
        "b2966a43b7f357da",
        "b2e76f530165a543",
        "8740ee9eae3d0539",
        "f493e238c458430f",
        "741dd4de329c9c55",
        "c6559841f5c9845b",
        "0bf619a321080ed7",
        "22c9d9a4f0925a92",
        "e6fe603b3c8547d6",
        "768d9760acbc3629",
        "71130ec90232cb30",
        "8600fab0d955764c"
      ],
      "date": 1713352175666
    },
    {
      "type": "edit",
      "id": "71130ec90232cb30",
      "item": {
        "type": "paragraph",
        "id": "71130ec90232cb30",
        "text": "Honeycomb Vectors. [https://www.svgrepo.com/vectors/honeycomb/ svgrepo.com]"
      },
      "date": 1713352195396
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713353526598
    },
    {
      "type": "edit",
      "id": "e6fe603b3c8547d6",
      "item": {
        "type": "pagefold",
        "id": "e6fe603b3c8547d6",
        "text": "~"
      },
      "date": 1713353574337
    },
    {
      "type": "edit",
      "id": "c6559841f5c9845b",
      "item": {
        "type": "paragraph",
        "id": "c6559841f5c9845b",
        "text": "⇒ [[Declarative UI Specification]], [[GtPhlowViewSpecification]]"
      },
      "date": 1713353824170
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1713357152166
    },
    {
      "item": {
        "type": "factory",
        "id": "ffe72c2183557802"
      },
      "id": "ffe72c2183557802",
      "type": "add",
      "after": "8600fab0d955764c",
      "date": 1713357155612
    },
    {
      "type": "edit",
      "id": "ffe72c2183557802",
      "item": {
        "type": "pagefold",
        "id": "ffe72c2183557802",
        "text": "~"
      },
      "date": 1713357167919
    },
    {
      "item": {
        "type": "factory",
        "id": "472d9d634088920f"
      },
      "id": "472d9d634088920f",
      "type": "add",
      "after": "ffe72c2183557802",
      "date": 1713357170477
    },
    {
      "type": "edit",
      "id": "472d9d634088920f",
      "item": {
        "type": "html",
        "id": "472d9d634088920f",
        "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<svg height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 512 512\" xml:space=\"preserve\">\r\n<path style=\"fill:#FFA733;\" d=\"M257.601,42.641L67.677,246.249l69.464,250.43c2.045,7.39,8.779,12.507,16.446,12.507h204.825\r\n\tc7.667,0,14.401-5.117,16.446-12.507l69.464-250.43L257.601,42.641z\"/>\r\n<path style=\"fill:#EE8700;\" d=\"M256,44.357v464.83h102.412c7.667,0,14.401-5.117,16.446-12.507l69.464-250.43L257.601,42.641\r\n\tL256,44.357z\"/>\r\n<g>\r\n\t<path style=\"fill:#95673F;\" d=\"M256,372.637c-47.061,0-85.344-38.283-85.344-85.344s38.283-85.344,85.344-85.344\r\n\t\ts85.344,38.283,85.344,85.344S303.062,372.637,256,372.637z\"/>\r\n\t<path style=\"fill:#95673F;\" d=\"M426.687,509.187H85.312c-9.423,0-17.069-7.64-17.069-17.069c0-9.429,7.646-17.069,17.069-17.069\r\n\t\th341.375c9.423,0,17.069,7.64,17.069,17.069C443.756,501.547,436.111,509.187,426.687,509.187z\"/>\r\n</g>\r\n<path style=\"fill:#EEBE43;\" d=\"M290.137,440.912h-68.275c-9.423,0-17.069-7.64-17.069-17.069c0-9.429,7.646-17.069,17.069-17.069\r\n\th68.275c9.423,0,17.069,7.64,17.069,17.069C307.206,433.272,299.561,440.912,290.137,440.912z\"/>\r\n<g>\r\n\t<path style=\"fill:#875334;\" d=\"M341.343,287.293c0-47.061-38.283-85.344-85.344-85.344v170.688\r\n\t\tC303.062,372.637,341.343,334.355,341.343,287.293z\"/>\r\n\t<path style=\"fill:#875334;\" d=\"M426.687,475.049H256v34.138h170.688c9.423,0,17.069-7.64,17.069-17.069\r\n\t\tC443.756,482.689,436.111,475.049,426.687,475.049z\"/>\r\n</g>\r\n<path style=\"fill:#E4A637;\" d=\"M290.137,406.774H256v34.138h34.137c9.423,0,17.069-7.64,17.069-17.069\r\n\tC307.206,414.414,299.561,406.774,290.137,406.774z\"/>\r\n<path style=\"fill:#95673F;\" d=\"M493.597,185.335L288.772,14.648C279.213,6.682,267.606,2.814,256,2.814\r\n\tc-11.607,0-23.214,3.869-32.772,11.834L18.403,185.335c-21.734,18.093-24.579,50.41-6.6,72.144\r\n\tc18.093,21.62,50.409,24.579,72.144,6.6L256,120.702l172.053,143.378c21.734,18.093,53.937,15.134,72.144-6.6\r\n\tC518.177,235.745,515.332,203.428,493.597,185.335z\"/>\r\n<path style=\"fill:#875334;\" d=\"M500.197,257.479c-18.207,21.734-50.409,24.693-72.144,6.6L256,120.702V2.814\r\n\tc11.607,0,23.213,3.869,32.772,11.834l204.825,170.688C515.332,203.428,518.177,235.745,500.197,257.479z\"/>\r\n</svg>"
      },
      "date": 1713357181499
    },
    {
      "item": {
        "type": "factory",
        "id": "ac4446df75c5aceb"
      },
      "id": "ac4446df75c5aceb",
      "type": "add",
      "after": "472d9d634088920f",
      "date": 1713357318993
    },
    {
      "type": "edit",
      "id": "ac4446df75c5aceb",
      "item": {
        "type": "code",
        "id": "ac4446df75c5aceb",
        "text": "  \"type\": \"html\",\n      \"id\": \"472d9d634088920f\",\n      \"text\": \"<?xml version=\\\"1.0\\\" encoding=\\\"iso-8859-1\\\"?>\\r\\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\\r\\n<svg …"
      },
      "date": 1713357323307
    },
    {
      "item": {
        "type": "factory",
        "id": "72c091e86fb86e9b"
      },
      "id": "72c091e86fb86e9b",
      "type": "add",
      "after": "ac4446df75c5aceb",
      "date": 1713357460558
    },
    {
      "type": "edit",
      "id": "72c091e86fb86e9b",
      "item": {
        "type": "html",
        "id": "72c091e86fb86e9b",
        "text": "<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>\r\n<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r\n<svg height=\"800px\" width=\"800px\" version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" \r\n\t viewBox=\"0 0 409 409\" xml:space=\"preserve\">\r\n<g>\r\n\t<g>\r\n\t\t<path style=\"fill:#EFCA60;\" d=\"M321.442,31.438c0-3.872-0.829-10.054-5.878-11.438H80.055c-7.034,0-8.084,7.348-8.084,11.728\r\n\t\t\tc0,3.872,0.829,10.053,5.878,11.437h235.509C320.391,43.165,321.442,35.818,321.442,31.438z\"/>\r\n\t\t<path style=\"fill:#EFCA60;\" d=\"M300.011,371.096c0.724-1.186,72.322-119.496,54.594-186.792\r\n\t\t\tc-11.451-43.469-49.125-65.44-49.504-65.657c-3.114-1.78-5.058-5.106-5.058-8.693V98.78c-0.142,5.399-4.553,9.735-9.987,9.735\r\n\t\t\tH254.5c-5.523,0-10-4.478-10-10c0-5.522,4.477-10,10-10h35.556c5.434,0,9.845,4.336,9.987,9.735V74.892H93.37v23.624\r\n\t\t\tc0,3.605-1.941,6.933-5.08,8.706c-0.357,0.204-38.031,22.176-49.482,65.644C21.08,240.162,92.678,358.473,93.403,359.66\r\n\t\t\tc9.726,15.903,33.693,29.34,52.336,29.34h117.523c9.176,0,19.639-3.259,29.061-8.461\r\n\t\t\tC295.376,377.56,298.001,374.382,300.011,371.096z M118.944,88.516h99.556c5.523,0,10,4.478,10,10c0,5.522-4.477,10-10,10h-99.556\r\n\t\t\tc-5.523,0-10-4.478-10-10C108.944,92.993,113.421,88.516,118.944,88.516z M261.059,280.697l-22.493,38.958\r\n\t\t\tc-1.786,3.094-5.087,5-8.66,5h-50.758c-3.573,0-6.874-1.906-8.66-5l-22.493-38.958h-45.039c-3.573,0-6.874-1.906-8.66-5\r\n\t\t\tl-25.379-43.958c-1.787-3.094-1.787-6.906,0-10l25.379-43.959c1.786-3.094,5.087-5,8.66-5h50.758c3.573,0,6.874,1.906,8.66,5\r\n\t\t\tl22.493,38.959h39.266l22.493-38.959c1.786-3.094,5.087-5,8.66-5h50.758c3.573,0,6.874,1.906,8.66,5l25.379,43.959\r\n\t\t\tc1.787,3.094,1.787,6.906,0,10l-25.379,43.958c-1.786,3.094-5.087,5-8.66,5H261.059z\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"147.941,192.78 108.729,192.78 89.123,226.739 108.729,260.697 147.941,260.697 \r\n\t\t\t167.547,226.739 \t\t\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"224.133,236.739 184.921,236.739 165.315,270.697 184.921,304.655 224.133,304.655 \r\n\t\t\t243.739,270.697 233.936,253.718 \t\t\"/>\r\n\t\t<polygon style=\"fill:#EFA348;\" points=\"300.271,192.78 261.059,192.78 241.453,226.739 251.256,243.718 261.059,260.697 \r\n\t\t\t300.271,260.697 319.876,226.739 \t\t\"/>\r\n\t</g>\r\n\t<g>\r\n\t\t<path d=\"M389.532,167.77c-11.059-41.98-41.676-66.41-53.902-74.738V62.685c12.878-3.038,21.399-14.916,21.399-30.958\r\n\t\t\tC357.029,13.047,345.48,0,328.945,0H80.055C63.52,0,51.971,13.047,51.971,31.728c0,16.041,8.521,27.92,21.399,30.958v30.347\r\n\t\t\tc-12.226,8.328-42.843,32.758-53.902,74.738c-19.899,75.534,53.727,197.18,56.872,202.321C89.682,391.909,120.165,409,145.739,409\r\n\t\t\th117.523c25.573,0,56.057-17.091,69.399-38.908C335.805,364.95,409.431,243.305,389.532,167.77z M337.029,31.728\r\n\t\t\tc0,4.38-1.05,11.727-8.084,11.727H80.055c-0.816,0-1.543-0.108-2.206-0.29c-5.05-1.384-5.878-7.565-5.878-11.437\r\n\t\t\tc0-4.38,1.05-11.728,8.084-11.728h235.508h13.382C335.979,20,337.029,27.348,337.029,31.728z M315.598,359.658\r\n\t\t\tc-4.939,8.077-13.553,15.513-23.275,20.88c-9.422,5.202-19.886,8.461-29.061,8.461H145.739c-18.643,0-42.61-13.436-52.336-29.34\r\n\t\t\tc-0.725-1.188-72.323-119.498-54.595-186.794c11.451-43.469,49.124-65.44,49.482-65.644c3.139-1.774,5.08-5.101,5.08-8.706V74.892\r\n\t\t\tV63.454H315.63v35.062c0,3.587,1.944,6.913,5.058,8.693c0.379,0.217,38.053,22.189,49.504,65.657\r\n\t\t\tC387.92,240.162,316.322,358.473,315.598,359.658z\"/>\r\n\t\t<path d=\"M314.704,275.697l25.379-43.958c1.787-3.094,1.787-6.906,0-10l-25.379-43.959c-1.786-3.094-5.087-5-8.66-5h-50.758\r\n\t\t\tc-3.573,0-6.874,1.906-8.66,5l-22.493,38.959h-39.266l-22.493-38.959c-1.786-3.094-5.087-5-8.66-5h-50.758\r\n\t\t\tc-3.573,0-6.874,1.906-8.66,5l-25.379,43.959c-1.787,3.094-1.787,6.906,0,10l25.379,43.958c1.786,3.094,5.087,5,8.66,5h45.039\r\n\t\t\tl22.493,38.958c1.786,3.094,5.087,5,8.66,5h50.758c3.573,0,6.874-1.906,8.66-5l22.493-38.958h44.985\r\n\t\t\tC309.617,280.697,312.918,278.791,314.704,275.697z M147.941,260.697h-39.211l-19.606-33.958l19.606-33.959h39.211l19.606,33.959\r\n\t\t\tL147.941,260.697z M224.133,304.655h-39.211l-19.606-33.958l19.606-33.958h39.211l9.803,16.979l9.803,16.979L224.133,304.655z\r\n\t\t\t M261.059,260.697l-9.803-16.979l-9.803-16.979l19.606-33.959h39.211l19.606,33.959l-19.606,33.958H261.059z\"/>\r\n\t\t<path d=\"M290.056,88.516H254.5c-5.523,0-10,4.478-10,10c0,5.522,4.477,10,10,10h35.556c5.434,0,9.845-4.336,9.987-9.735\r\n\t\t\tc0.002-0.089,0.013-0.175,0.013-0.265c0-0.089-0.011-0.176-0.013-0.265C299.901,92.852,295.49,88.516,290.056,88.516z\"/>\r\n\t\t<path d=\"M118.944,108.516h99.556c5.523,0,10-4.478,10-10c0-5.522-4.477-10-10-10h-99.556c-5.523,0-10,4.478-10,10\r\n\t\t\tC108.944,104.038,113.421,108.516,118.944,108.516z\"/>\r\n\t</g>\r\n</g>\r\n</svg>"
      },
      "date": 1713357464667
    },
    {
      "item": {
        "type": "factory",
        "id": "82f7d0345cdd18c3"
      },
      "id": "82f7d0345cdd18c3",
      "type": "add",
      "after": "ac4446df75c5aceb",
      "date": 1713357552327
    },
    {
      "item": {
        "type": "factory",
        "id": "9628fa4373d7c1d3"
      },
      "id": "9628fa4373d7c1d3",
      "type": "add",
      "after": "72c091e86fb86e9b",
      "date": 1713357583824
    },
    {
      "type": "edit",
      "id": "9628fa4373d7c1d3",
      "item": {
        "type": "paragraph",
        "id": "9628fa4373d7c1d3",
        "text": "Generating a clickable SVG floorplan, where I need to manually \"close off\" rooms to make them clickable"
      },
      "date": 1713357589347
    },
    {
      "type": "edit",
      "id": "9628fa4373d7c1d3",
      "item": {
        "type": "paragraph",
        "id": "9628fa4373d7c1d3",
        "text": "Generating a clickable SVG floorplan, where I need to manually \"close off\" rooms to make them clickable [https://graphicdesign.stackexchange.com/questions/152523/generating-a-clickable-svg-floorplan-where-i-need-to-manually-close-off-rooms stackexchange]"
      },
      "date": 1713357609640
    },
    {
      "item": {
        "type": "factory",
        "id": "981116f31690095c"
      },
      "id": "981116f31690095c",
      "type": "add",
      "after": "9628fa4373d7c1d3",
      "date": 1713357652216
    },
    {
      "type": "edit",
      "id": "981116f31690095c",
      "item": {
        "type": "paragraph",
        "id": "981116f31690095c",
        "text": "How To Create SVG Paths Easily Using The GIMP"
      },
      "date": 1713357654347
    },
    {
      "type": "edit",
      "id": "981116f31690095c",
      "item": {
        "type": "paragraph",
        "id": "981116f31690095c",
        "text": "How To Create SVG Paths Easily Using The GIMP [http://www.useragentman.com/blog/2013/04/26/how-to-create-svg-paths-easily-using-the-gimp/ blog]"
      },
      "date": 1713357716440
    },
    {
      "item": {
        "type": "factory",
        "id": "ff18036e23c39568"
      },
      "id": "ff18036e23c39568",
      "type": "add",
      "after": "981116f31690095c",
      "date": 1713357792500
    },
    {
      "type": "edit",
      "id": "ff18036e23c39568",
      "item": {
        "type": "paragraph",
        "id": "ff18036e23c39568",
        "text": "Clipping JPEG Images Into Non-Rectangular Polygons Using polyClip.js"
      },
      "date": 1713357795163
    },
    {
      "type": "edit",
      "id": "ff18036e23c39568",
      "item": {
        "type": "paragraph",
        "id": "ff18036e23c39568",
        "text": "Clipping JPEG Images Into Non-Rectangular Polygons Using polyClip.js [http://www.useragentman.com/blog/2011/10/29/clipping-jpeg-images-into-non-rectangular-polygons-using-polyclip-js/ blog]"
      },
      "date": 1713357814389
    },
    {
      "item": {
        "type": "factory",
        "id": "38673c37032eeaee"
      },
      "id": "38673c37032eeaee",
      "type": "add",
      "after": "ff18036e23c39568",
      "date": 1713358064442
    },
    {
      "type": "edit",
      "id": "38673c37032eeaee",
      "item": {
        "type": "html",
        "id": "38673c37032eeaee",
        "text": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!-- Created with Inkscape (http://www.inkscape.org/) -->\n<svg width=\"175mm\" height=\"125mm\" version=\"1.1\" viewBox=\"0 0 175 125\" xmlns=\"http://www.w3.org/2000/svg\">\n <g transform=\"translate(70.8 -14.7)\">\n  <g fill=\"none\" stroke=\"#000\">\n   <path d=\"m-68.8 66.5v-49.8h171v121h-64\" stop-color=\"#000000\" stroke-width=\"4.05\"/>\n   <path d=\"m-68.8 87.8v49.8h85.3\" stop-color=\"#000000\" stroke-width=\"4.05\"/>\n   <g stroke-width=\"1.9\">\n    <path d=\"m-68.8 52.3h21.3\"/>\n    <path d=\"m-26.1 52.3h14.2v-35.6\"/>\n    <path d=\"m-11.9 52.3h14.2v14.2\"/>\n    <path d=\"m2.32 87.8v21.3h-28.4\"/>\n    <path d=\"m-47.5 109h-21.3\"/>\n    <path d=\"m2.32 109v28.4\"/>\n    <path d=\"m2.32 52.3h14.2\"/>\n    <path d=\"m37.9 52.3h14.2v-35.6\"/>\n    <path d=\"m52.1 52.3v14.2\"/>\n    <path d=\"m102 87.8h-14.2\"/>\n    <path d=\"m66.3 87.8h-14.2v49.8\"/>\n   </g>\n  </g>\n  <g fill-opacity=\"0\">\n   <rect x=\"-68.8\" y=\"16.7\" width=\"56.9\" height=\"35.6\" onclick=\"alert('You have clicked room 1')\"/>\n   <rect x=\"-11.9\" y=\"16.7\" width=\"64\" height=\"35.6\" onclick=\"alert('You have clicked room 2')\"/>\n   <rect x=\"52.1\" y=\"16.7\" width=\"49.8\" height=\"71.1\" onclick=\"alert('You have clicked room 3')\"/>\n   <rect x=\"-68.8\" y=\"52.3\" width=\"71.1\" height=\"56.9\" onclick=\"alert('You have clicked room 4')\"/>\n   <rect x=\"2.32\" y=\"52.3\" width=\"49.8\" height=\"85.3\" onclick=\"alert('You have clicked the hallway')\"/>\n   <rect x=\"52.1\" y=\"87.8\" width=\"49.8\" height=\"49.8\" onclick=\"alert('You have clicked room 6')\"/>\n   <rect x=\"-68.8\" y=\"109\" width=\"71.1\" height=\"28.4\" onclick=\"alert('You have clicked room 5')\"/>\n  </g>\n </g>\n</svg>\n"
      },
      "date": 1713358068259
    },
    {
      "item": {
        "type": "factory",
        "id": "c5c98859aa13bbd0"
      },
      "id": "c5c98859aa13bbd0",
      "type": "add",
      "after": "38673c37032eeaee",
      "date": 1713358095486
    },
    {
      "item": {
        "type": "factory",
        "id": "0993b4cf2c9cbe5e"
      },
      "id": "0993b4cf2c9cbe5e",
      "type": "add",
      "after": "c5c98859aa13bbd0",
      "date": 1713358097136
    },
    {
      "type": "edit",
      "id": "0993b4cf2c9cbe5e",
      "item": {
        "type": "frame",
        "id": "0993b4cf2c9cbe5e",
        "text": "https://svgshare.com/i/_ad.svg"
      },
      "date": 1713358099217
    },
    {
      "item": {
        "type": "factory",
        "id": "ebda291ff6bdac29"
      },
      "id": "ebda291ff6bdac29",
      "type": "add",
      "after": "0993b4cf2c9cbe5e",
      "date": 1713358115968
    },
    {
      "type": "edit",
      "id": "ebda291ff6bdac29",
      "item": {
        "type": "paragraph",
        "id": "ebda291ff6bdac29",
        "text": "[https://svgshare.com/i/_ad.svg expand]"
      },
      "date": 1713358123251
    },
    {
      "type": "edit",
      "id": "c5c98859aa13bbd0",
      "item": {
        "type": "paragraph",
        "id": "c5c98859aa13bbd0",
        "text": "Here's the SVG code for the above example"
      },
      "date": 1713358216599
    },
    {
      "id": "c5c98859aa13bbd0",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "91be87389216f766",
        "00ecd26b0b315b2b",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471",
        "a99121d749374d54",
        "f65ef1d3a9299b40",
        "4535d22013bb30af",
        "4f02e009a4fbbeb8",
        "f52b1df65438c599",
        "6b59353d9eadc650",
        "b2966a43b7f357da",
        "b2e76f530165a543",
        "8740ee9eae3d0539",
        "f493e238c458430f",
        "741dd4de329c9c55",
        "c6559841f5c9845b",
        "0bf619a321080ed7",
        "22c9d9a4f0925a92",
        "e6fe603b3c8547d6",
        "768d9760acbc3629",
        "71130ec90232cb30",
        "8600fab0d955764c",
        "ffe72c2183557802",
        "472d9d634088920f",
        "ac4446df75c5aceb",
        "82f7d0345cdd18c3",
        "72c091e86fb86e9b",
        "9628fa4373d7c1d3",
        "981116f31690095c",
        "ff18036e23c39568",
        "38673c37032eeaee",
        "0993b4cf2c9cbe5e",
        "ebda291ff6bdac29",
        "c5c98859aa13bbd0"
      ],
      "date": 1713358219678
    },
    {
      "id": "38673c37032eeaee",
      "type": "move",
      "order": [
        "050361931e8e36b4",
        "a9c1ecf775331588",
        "c8c0654f41478e5d",
        "d7c660ad3fb21cb2",
        "e41a62c29edde386",
        "e7f5c58326f7ebb1",
        "e6ff5cbd7aba085d",
        "99adba9d14f3c32d",
        "91be87389216f766",
        "00ecd26b0b315b2b",
        "c6f6fb4ab8aa41d6",
        "d3ec0d91ea997471",
        "a99121d749374d54",
        "f65ef1d3a9299b40",
        "4535d22013bb30af",
        "4f02e009a4fbbeb8",
        "f52b1df65438c599",
        "6b59353d9eadc650",
        "b2966a43b7f357da",
        "b2e76f530165a543",
        "8740ee9eae3d0539",
        "f493e238c458430f",
        "741dd4de329c9c55",
        "c6559841f5c9845b",
        "0bf619a321080ed7",
        "22c9d9a4f0925a92",
        "e6fe603b3c8547d6",
        "768d9760acbc3629",
        "71130ec90232cb30",
        "8600fab0d955764c",
        "ffe72c2183557802",
        "472d9d634088920f",
        "ac4446df75c5aceb",
        "82f7d0345cdd18c3",
        "72c091e86fb86e9b",
        "9628fa4373d7c1d3",
        "981116f31690095c",
        "ff18036e23c39568",
        "0993b4cf2c9cbe5e",
        "ebda291ff6bdac29",
        "c5c98859aa13bbd0",
        "38673c37032eeaee"
      ],
      "date": 1713358224610
    },
    {
      "item": {
        "type": "factory",
        "id": "51a626e13fa0ac24"
      },
      "id": "51a626e13fa0ac24",
      "type": "add",
      "after": "38673c37032eeaee",
      "date": 1713358242509
    },
    {
      "type": "edit",
      "id": "51a626e13fa0ac24",
      "item": {
        "type": "paragraph",
        "id": "51a626e13fa0ac24",
        "text": "See [https://graphicdesign.stackexchange.com/questions/152523/generating-a-clickable-svg-floorplan-where-i-need-to-manually-close-off-rooms stackexchange]"
      },
      "date": 1713358253769
    },
    {
      "type": "edit",
      "id": "82f7d0345cdd18c3",
      "item": {
        "type": "paragraph",
        "id": "82f7d0345cdd18c3",
        "text": "The Rise Of The Bee Bandits"
      },
      "date": 1713359083115
    },
    {
      "type": "edit",
      "id": "82f7d0345cdd18c3",
      "item": {
        "type": "paragraph",
        "id": "82f7d0345cdd18c3",
        "text": "The Rise Of The Bee Bandits [https://www.noemamag.com/the-rise-of-the-bee-bandits/ noemamag]"
      },
      "date": 1713359217601
    },
    {
      "type": "edit",
      "id": "82f7d0345cdd18c3",
      "item": {
        "type": "paragraph",
        "id": "82f7d0345cdd18c3",
        "text": "The Rise Of The Bee Bandits. [https://www.noemamag.com/the-rise-of-the-bee-bandits/ noemamag]"
      },
      "date": 1713359224360
    },
    {
      "type": "add",
      "id": "41446d07b52d6326",
      "item": {
        "type": "paragraph",
        "id": "41446d07b52d6326",
        "text": "The Honeybee Era\n\nHorses and cattle may be the antecedents to bees in terms of human thievery, but the scale involved here is very different. Farmers have carpeted huge swathes of prime Central Valley land with serried ranks of almond trees. The annual budding of this sought-after nut and its burgeoning pollination needs means up to roughly nine out of every 10 commercial honeybee hives must be sent here from all corners of the U.S.\n\nFor some time at the start of each year, the Central Valley becomes a sort of giant, mechanized jamboree of honeybees, with 18-wheelers and semis bearing several million hives traversing this monoculture and depositing their cargo in orchards to propagate the crop. We are accustomed to aggregating sheep and cows and, to a lesser degree at home, our cats and dogs. But in terms of the sheer numbers — 2.7 million hives, according to Wenger, or a lowball estimate of some 54 billion bees to support this year’s almond crop — there is little to compare to the annual seething mass of bees clustered in California outside of enthralling wild scenes like the African migration of wildebeest. "
      },
      "after": "82f7d0345cdd18c3",
      "date": 1713359315154
    },
    {
      "item": {
        "type": "factory",
        "id": "668fd02fb49c7175"
      },
      "id": "668fd02fb49c7175",
      "type": "add",
      "after": "51a626e13fa0ac24",
      "date": 1713359605534
    },
    {
      "item": {
        "type": "factory",
        "id": "57f4d4b514219b36"
      },
      "id": "57f4d4b514219b36",
      "type": "add",
      "after": "668fd02fb49c7175",
      "date": 1713359610019
    },
    {
      "item": {
        "type": "factory",
        "id": "d1793717e918549c"
      },
      "id": "d1793717e918549c",
      "type": "add",
      "after": "57f4d4b514219b36",
      "date": 1713359613161
    },
    {
      "type": "edit",
      "id": "d1793717e918549c",
      "item": {
        "type": "paragraph",
        "id": "d1793717e918549c",
        "text": "Stream subscription types act as graph nodes and attached transducers as graph edges, transforming data for downstream consumers / nodes. Theoretically, allows cycles and is not restricted to DAG topologies, but care must be taken to avoid CPU hogging if those cycles are causing synchronous computation loops (it the user's responsibility to avoid these and keep any cycles async)."
      },
      "date": 1713359615123
    },
    {
      "item": {
        "type": "factory",
        "id": "d4368c654320e095"
      },
      "id": "d4368c654320e095",
      "type": "add",
      "after": "d1793717e918549c",
      "date": 1713359739192
    },
    {
      "type": "edit",
      "id": "d4368c654320e095",
      "item": {
        "type": "paragraph",
        "id": "d4368c654320e095",
        "text": "Become a sponsor to [[Karsten Schmidt]]"
      },
      "date": 1713359746294
    },
    {
      "type": "edit",
      "id": "d4368c654320e095",
      "item": {
        "type": "paragraph",
        "id": "d4368c654320e095",
        "text": "Become a sponsor to [[Karsten Schmidt]]. [https://github.com/sponsors/postspectacular github]"
      },
      "date": 1713359839100
    },
    {
      "type": "edit",
      "id": "57f4d4b514219b36",
      "item": {
        "type": "html",
        "id": "57f4d4b514219b36",
        "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"334.758\" height=\"61.313\" viewBox=\"0 3.715312500000003 334.7578125 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M105.750 30.012L112.781 30.012C113.612 27.046 114.479 24.116 115.383 21.223L99.211 21.223C96.543 29.922 94.013 38.760 91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M124.031 30.012L131.063 30.012C131.893 27.046 132.760 24.116 133.664 21.223L117.492 21.223C116.589 24.116 115.721 27.046 114.891 30.012L121.430 38.731L120.094 43.161L117.984 43.161L119.320 38.731L112.289 38.731C111.402 41.641 110.534 44.570 109.688 47.520L125.859 47.520C126.706 44.570 127.574 41.641 128.461 38.731L121.922 30.012L123.188 25.583L125.297 25.583Z\"/><path d=\"M127.969 47.520L135 47.520C138.438 35.817 141.955 24.193 145.336 12.434L147.938 3.715L140.906 3.715L138.305 12.434L132.680 12.434L131.414 16.864L137.039 16.864Z\"/><path d=\"M151.453 30.012L158.484 30.012C159.315 27.046 160.182 24.116 161.086 21.223L144.914 21.223C142.246 29.922 139.716 38.760 137.109 47.520L144.141 47.520L150.609 25.583L152.719 25.583Z\"/><path d=\"M167.133 38.731L174.164 38.731C175.896 32.893 177.573 26.999 179.367 21.223L163.195 21.223L161.859 25.583L161.896 25.583C159.729 32.897 157.517 40.165 155.391 47.520L171.563 47.520L172.828 43.161L163.688 43.161L168.927 25.583L171 25.583Z\"/><path d=\"M173.672 47.520L189.844 47.520C191.969 40.176 194.158 32.896 196.313 25.583L197.648 21.223L181.477 21.223L180.141 25.583L189.281 25.583L184.078 43.161L181.969 43.161L185.906 30.012L178.875 30.012C177.139 35.847 175.362 41.640 173.672 47.520Z\"/><path d=\"M210.234 47.520L217.266 47.520C219.872 38.759 222.402 29.922 225.070 21.223L199.758 21.223C197.089 29.922 194.560 38.760 191.953 47.520L198.984 47.520L205.453 25.583L207.563 25.583L201.094 47.520L208.125 47.520L214.594 25.583L216.703 25.583Z\"/><path d=\"M223.242 34.372L239.414 34.372L240.750 30.012L224.578 30.012Z\"/><path d=\"M232.453 65.028L248.625 65.028C252.590 51.954 256.396 38.721 260.297 25.583L261.633 21.223L245.461 21.223C242.793 29.922 240.263 38.760 237.656 47.520L244.688 47.520L251.156 25.583L253.266 25.583L242.930 60.668L240.820 60.668L242.086 56.309L235.055 56.309C234.216 59.244 233.349 62.150 232.453 65.028Z\"/><path d=\"M270.281 30.012L277.313 30.012C278.143 27.046 279.010 24.116 279.914 21.223L263.742 21.223C261.074 29.922 258.544 38.760 255.938 47.520L262.969 47.520L269.438 25.583L271.547 25.583Z\"/><path d=\"M274.219 47.520L290.391 47.520C292.516 40.176 294.705 32.896 296.859 25.583L298.195 21.223L282.023 21.223L280.688 25.583L289.828 25.583L284.625 43.161L282.516 43.161L286.453 30.012L279.422 30.012C277.686 35.847 275.909 41.640 274.219 47.520Z\"/><path d=\"M301.641 47.520L308.672 47.520C311.278 38.759 313.809 29.922 316.477 21.223L300.305 21.223C295.901 35.757 291.642 50.436 287.297 65.028L294.328 65.028L306 25.583L308.109 25.583Z\"/><path d=\"M319.922 47.520L326.953 47.520C329.559 38.759 332.090 29.922 334.758 21.223L325.617 21.223L330.750 3.715L323.719 3.715C321.560 11.002 319.478 18.366 317.250 25.583L310.781 47.520L317.813 47.520L324.281 25.583L326.391 25.583Z\"/></svg>"
      },
      "date": 1713360131630
    },
    {
      "type": "edit",
      "id": "d1793717e918549c",
      "item": {
        "type": "paragraph",
        "id": "d1793717e918549c",
        "text": "Stream subscription types act as graph nodes and attached transducers as graph edges, transforming data for downstream consumers / nodes. Theoretically, allows cycles and is not restricted to DAG topologies, but care must be taken to avoid CPU hogging if those cycles are causing synchronous computation loops (it the user's responsibility to avoid these and keep any cycles async). [https://github.com/thi-ng/umbrella/tree/develop/packages/rstream-graph github]"
      },
      "date": 1713360160413
    },
    {
      "type": "edit",
      "id": "668fd02fb49c7175",
      "item": {
        "type": "pagefold",
        "id": "668fd02fb49c7175",
        "text": "~"
      },
      "date": 1713360397868
    },
    {
      "item": {
        "type": "factory",
        "id": "f70bfd98c472145d"
      },
      "id": "f70bfd98c472145d",
      "type": "add",
      "after": "d4368c654320e095",
      "date": 1713360419225
    },
    {
      "type": "edit",
      "id": "f70bfd98c472145d",
      "item": {
        "type": "paragraph",
        "id": "f70bfd98c472145d",
        "text": "⇒ [[Visual Code Widgets for Marker-Based Interaction]]"
      },
      "date": 1713360431426
    },
    {
      "type": "edit",
      "id": "d1793717e918549c",
      "item": {
        "type": "paragraph",
        "id": "d1793717e918549c",
        "text": "Stream subscription types act as graph nodes and attached transducers as graph edges, transforming data for downstream consumers / nodes. Theoretically, allows cycles and is not restricted to DAG topologies, but care must be taken to avoid CPU hogging if those cycles are causing synchronous computation loops (it the user's responsibility to avoid these and keep any cycles async). [https://github.com/thi-ng/umbrella/tree/develop/packages/rstream-graph github] ⇒ [[rstream-graph]]"
      },
      "date": 1713360720873
    },
    {
      "item": {
        "type": "factory",
        "id": "4b5d2008db4d1348"
      },
      "id": "4b5d2008db4d1348",
      "type": "add",
      "after": "f70bfd98c472145d",
      "date": 1713373735484
    },
    {
      "type": "edit",
      "id": "4b5d2008db4d1348",
      "item": {
        "type": "pagefold",
        "id": "4b5d2008db4d1348",
        "text": "~"
      },
      "date": 1713373740078
    },
    {
      "item": {
        "type": "factory",
        "id": "86b80ea7ee446aee"
      },
      "id": "86b80ea7ee446aee",
      "type": "add",
      "after": "4b5d2008db4d1348",
      "date": 1713373741975
    },
    {
      "type": "edit",
      "id": "86b80ea7ee446aee",
      "item": {
        "type": "paragraph",
        "id": "86b80ea7ee446aee",
        "text": "Reproducible Research II: Practices and tools for managing computations and data"
      },
      "date": 1713373744746
    },
    {
      "type": "edit",
      "id": "86b80ea7ee446aee",
      "item": {
        "type": "paragraph",
        "id": "86b80ea7ee446aee",
        "text": "Reproducible Research II: Practices and tools for managing computations and data [https://fosstodon.org/notifications mastodon]"
      },
      "date": 1713373787725
    },
    {
      "type": "edit",
      "id": "86b80ea7ee446aee",
      "item": {
        "type": "paragraph",
        "id": "86b80ea7ee446aee",
        "text": "Reproducible Research II: Practices and tools for managing computations and data [https://scholar.social/@khinsen/112239880593000830 mastodon]"
      },
      "date": 1713373834539
    },
    {
      "type": "edit",
      "id": "86b80ea7ee446aee",
      "item": {
        "type": "paragraph",
        "id": "86b80ea7ee446aee",
        "text": "Reproducible Research II: Practices and tools for managing computations and data. [https://scholar.social/@khinsen/112239880593000830 mastodon], []https://www.fun-mooc.fr/en/courses/reproducible-research-ii-practices-and-tools-for-managing-comput/ moc]"
      },
      "date": 1713373865327
    },
    {
      "type": "edit",
      "id": "86b80ea7ee446aee",
      "item": {
        "type": "paragraph",
        "id": "86b80ea7ee446aee",
        "text": "Reproducible Research II: Practices and tools for managing computations and data. [https://scholar.social/@khinsen/112239880593000830 mastodon], [https://www.fun-mooc.fr/en/courses/reproducible-research-ii-practices-and-tools-for-managing-comput/ moc]"
      },
      "date": 1713373871872
    },
    {
      "item": {
        "type": "factory",
        "id": "fda6561241ee43b0"
      },
      "id": "fda6561241ee43b0",
      "type": "add",
      "after": "86b80ea7ee446aee",
      "date": 1713374049719
    },
    {
      "type": "edit",
      "id": "fda6561241ee43b0",
      "item": {
        "type": "paragraph",
        "id": "fda6561241ee43b0",
        "text": "LibreQoS"
      },
      "date": 1713374052425
    },
    {
      "type": "edit",
      "id": "fda6561241ee43b0",
      "item": {
        "type": "paragraph",
        "id": "fda6561241ee43b0",
        "text": "LibreQoS [https://libreqos.io/ site]"
      },
      "date": 1713374063660
    },
    {
      "type": "add",
      "id": "7b10330eb35db547",
      "item": {
        "type": "paragraph",
        "id": "7b10330eb35db547",
        "text": "[[#HowToThing #001]]"
      },
      "after": "fda6561241ee43b0",
      "date": 1713374477363
    },
    {
      "item": {
        "type": "factory",
        "id": "28e4ba78b97ca180"
      },
      "id": "28e4ba78b97ca180",
      "type": "add",
      "after": "7b10330eb35db547",
      "date": 1713378732228
    },
    {
      "type": "edit",
      "id": "28e4ba78b97ca180",
      "item": {
        "type": "paragraph",
        "id": "28e4ba78b97ca180",
        "text": "[[rstream-system-bus]]"
      },
      "date": 1713378737167
    },
    {
      "item": {
        "type": "factory",
        "id": "1f619dada86de559"
      },
      "id": "1f619dada86de559",
      "type": "add",
      "after": "28e4ba78b97ca180",
      "date": 1713380505592
    },
    {
      "type": "edit",
      "id": "1f619dada86de559",
      "item": {
        "type": "paragraph",
        "id": "1f619dada86de559",
        "text": "https://bun.sh/"
      },
      "date": 1713380511227
    },
    {
      "item": {
        "type": "factory",
        "id": "47f429dc80380899"
      },
      "id": "47f429dc80380899",
      "type": "add",
      "after": "1f619dada86de559",
      "date": 1713380527712
    },
    {
      "type": "edit",
      "id": "47f429dc80380899",
      "item": {
        "type": "code",
        "id": "47f429dc80380899",
        "text": "curl -fsSL https://bun.sh/install | bash"
      },
      "date": 1713380531431
    },
    {
      "item": {
        "type": "factory",
        "id": "8a0e352f9399d955"
      },
      "id": "8a0e352f9399d955",
      "type": "add",
      "after": "47f429dc80380899",
      "date": 1713380586632
    },
    {
      "type": "edit",
      "id": "8a0e352f9399d955",
      "item": {
        "type": "code",
        "id": "8a0e352f9399d955",
        "text": "…\n(more flags in bun install --help, bun test --help, and bun build --help)\n\nLearn more about Bun:            https://bun.sh/docs\nJoin our Discord community:      https://bun.sh/discord\n➜  rstream-system-bus git:(develop) ✗ yarn start                                                  ~/Projects/RalfBarkow/umbrella/examples/rstream-system-bus\nerror: Module not found \"/Users/rgb/Projects/RalfBarkow/umbrella/packages/meta-css/bin/../index.js\"\n➜  rstream-system-bus git:(develop) ✗"
      },
      "date": 1713380594053
    },
    {
      "item": {
        "type": "factory",
        "id": "b823e6841e8c3bd2"
      },
      "id": "b823e6841e8c3bd2",
      "type": "add",
      "after": "8a0e352f9399d955",
      "date": 1713380617262
    },
    {
      "type": "edit",
      "id": "b823e6841e8c3bd2",
      "item": {
        "type": "paragraph",
        "id": "b823e6841e8c3bd2",
        "text": "Example build instructions"
      },
      "date": 1713380619977
    },
    {
      "type": "edit",
      "id": "b823e6841e8c3bd2",
      "item": {
        "type": "paragraph",
        "id": "b823e6841e8c3bd2",
        "text": "Example build instructions [https://github.com/thi-ng/umbrella/wiki/Example-build-instructions github]"
      },
      "date": 1713380629255
    },
    {
      "item": {
        "type": "factory",
        "id": "b440584d6b685c3b"
      },
      "id": "b440584d6b685c3b",
      "type": "add",
      "after": "b823e6841e8c3bd2",
      "date": 1713380647682
    },
    {
      "type": "edit",
      "id": "b440584d6b685c3b",
      "item": {
        "type": "paragraph",
        "id": "b440584d6b685c3b",
        "text": "Development mode for examples using thi.ng meta‐css"
      },
      "date": 1713380650158
    },
    {
      "type": "edit",
      "id": "b440584d6b685c3b",
      "item": {
        "type": "paragraph",
        "id": "b440584d6b685c3b",
        "text": "Development mode for examples using thi.ng meta‐css [https://github.com/thi-ng/umbrella/wiki/Development-mode-for-examples-using-thi.ng-meta%E2%80%90css github]"
      },
      "date": 1713380660897
    },
    {
      "item": {
        "type": "factory",
        "id": "5b539e8f21006cb4"
      },
      "id": "5b539e8f21006cb4",
      "type": "add",
      "after": "b440584d6b685c3b",
      "date": 1713380791236
    },
    {
      "type": "edit",
      "id": "5b539e8f21006cb4",
      "item": {
        "type": "code",
        "id": "5b539e8f21006cb4",
        "text": "error: Module not found \"/Users/rgb/Projects/RalfBarkow/umbrella/packages/meta-css/bin/../index.js\""
      },
      "date": 1713380797735
    },
    {
      "item": {
        "type": "factory",
        "id": "f26e6aedba8d96af"
      },
      "id": "f26e6aedba8d96af",
      "type": "add",
      "after": "5b539e8f21006cb4",
      "date": 1713380805845
    },
    {
      "type": "edit",
      "id": "f26e6aedba8d96af",
      "item": {
        "type": "code",
        "id": "f26e6aedba8d96af",
        "text": " cd packages/meta-css                                                                              ~/Projects/RalfBarkow/umbrella\n➜  meta-css git:(develop) ✗ ls"
      },
      "date": 1713380808001
    },
    {
      "item": {
        "type": "factory",
        "id": "0f83cdfee9cb76cb"
      },
      "id": "0f83cdfee9cb76cb",
      "type": "add",
      "after": "f26e6aedba8d96af",
      "date": 1713380818431
    },
    {
      "type": "edit",
      "id": "0f83cdfee9cb76cb",
      "item": {
        "type": "code",
        "id": "0f83cdfee9cb76cb",
        "text": "yarn install"
      },
      "date": 1713380820722
    },
    {
      "item": {
        "type": "factory",
        "id": "808262b7cf14ca91"
      },
      "id": "808262b7cf14ca91",
      "type": "add",
      "after": "0f83cdfee9cb76cb",
      "date": 1713380829799
    },
    {
      "type": "edit",
      "id": "808262b7cf14ca91",
      "item": {
        "type": "code",
        "id": "808262b7cf14ca91",
        "text": "yarn build                                                                      ~/Projects/RalfBarkow/umbrella/packages/meta-css\n\n  index.js  39.40 KB\n\n[111ms] bundle 501 modules"
      },
      "date": 1713380831608
    },
    {
      "type": "edit",
      "id": "1f619dada86de559",
      "item": {
        "type": "paragraph",
        "id": "1f619dada86de559",
        "text": "Bun is a fast JavaScript runtime, package manager, bundler, and test runner. [https://bun.sh/ site]"
      },
      "date": 1713381109572
    },
    {
      "type": "edit",
      "id": "f26e6aedba8d96af",
      "item": {
        "type": "code",
        "id": "f26e6aedba8d96af",
        "text": " cd packages/meta-css                                                                              ~/Projects/RalfBarkow/umbrella\n➜  meta-css git:(develop) ✗ "
      },
      "date": 1713381162916
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "paragraph",
        "id": "050361931e8e36b4",
        "text": "# Create a perfect honeycomb shape"
      },
      "date": 1713418406414
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "markdown",
        "id": "050361931e8e36b4",
        "text": "# Create a perfect honeycomb shape"
      },
      "date": 1713418407705
    },
    {
      "type": "edit",
      "id": "050361931e8e36b4",
      "item": {
        "type": "markdown",
        "id": "050361931e8e36b4",
        "text": "# Create a Perfect Honeycomb Shape"
      },
      "date": 1713418420670
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713418850029
    }
  ]
}