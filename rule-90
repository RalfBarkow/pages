{
  "title": "Rule 90",
  "story": [
    {
      "type": "paragraph",
      "id": "a9705c942d062dd9",
      "text": "In the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. [https://en.wikipedia.org/wiki/Rule_90 wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "ade39f66363b9015",
      "text": "It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values. [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "600b600c66e506cb",
      "text": "Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\", and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science. "
    },
    {
      "type": "paragraph",
      "id": "dad18639cceb2aab",
      "text": "WOLFRAM, Stephen, 1983. Statistical mechanics of cellular automata. Reviews of Modern Physics. 1 July 1983. Vol. 55, no. 3, p. 601–644. DOI 10.1103/RevModPhys.55.601. [[Cellular Automata]] are used as simple mathematical models to investigate self-organization in statistical mechanics. A detailed analysis is given of “elementary” cellular automata consisting of a sequence of sites with values 0 or 1 on a line, with each site evolving deterministically in discrete time steps according to definite rules involving the values of its nearest neighbors. With simple initial configurations, the cellular automata either tend to homogeneous states, or generate self-similar patterns with fractal dimensions ≃ 1.59 or ≃ 1.69. With “random” initial configurations, the irreversible character of the cellular automaton evolution leads to several self-organization phenomena. Statistical properties of the structures generated are found to lie in two universality classes, independent of the details of the initial state or the cellular automaton rules. More complicated cellular automata are briefly considered, and connections with dynamical systems theory and the formal theory of computation are discussed.\n"
    },
    {
      "type": "image",
      "id": "ee54f9a6140b796c",
      "text": "FIG. 1. Example of a set of local rules for the time evolution of a one-dimensional elementary cellular automaton. (Wolfram, Statistical mechanics of cellular automata, p. 604)",
      "size": "wide",
      "width": 416,
      "height": 66,
      "url": "/assets/plugins/image/ded1001361df44c7251cb0376d11ad50.jpg"
    },
    {
      "type": "paragraph",
      "id": "9322c7a2eefb1952",
      "text": "The variables at each site may take values 0 or 1. The eight possible states of three adjacent sites are given on the upper line. The lower line then specifies a rule for the time evolution of the cellular automaton by giving the value to be taken by the central site of the three on the next time step. The time evolution of the complete cellular automaton is obtained by simultaneous application of these rules at each site for each time step. The rule given is the modulo-two rule: the value of a site at a particular time step is simply the sum modulo two of the values of its two neighbors at the previous time step. Any possible sequence of eight binary digits specifies a cellular automaton."
    },
    {
      "type": "code",
      "id": "fe7b36f0b577c480",
      "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"0\",\n  \"011\": \"1\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"1\",\n  \"111\": \"0\",\n};"
    },
    {
      "type": "code",
      "id": "80285af20c7e4684",
      "text": "// Create an initial state\nlet state = \"01011010\";"
    },
    {
      "type": "code",
      "id": "c8fa44240a00362c",
      "text": "// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}"
    },
    {
      "type": "code",
      "id": "fe22d97f5625a375",
      "text": "// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
    },
    {
      "type": "paragraph",
      "id": "113e37cb78a4ee36",
      "text": "⇒ [[ESM Snippet Template]]"
    },
    {
      "type": "frame",
      "id": "9c919469ae87a520",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "0cf39cf16580638e",
      "text": "We modified the esm.html file to include a <canvas> element in the body section. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Rule 90",
        "story": []
      },
      "date": 1678010757086
    },
    {
      "item": {
        "type": "factory",
        "id": "a9705c942d062dd9"
      },
      "id": "a9705c942d062dd9",
      "type": "add",
      "date": 1678010758735
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "– [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678010768443
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "n the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values.[1] Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\",[2] and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science.[3] – [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678013069459
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "In the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values.[1] Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\",[2] and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science.[3] – [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678013080161
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "In the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. "
      },
      "date": 1678013090958
    },
    {
      "type": "add",
      "id": "ade39f66363b9015",
      "item": {
        "type": "paragraph",
        "id": "ade39f66363b9015",
        "text": "It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values.[1] Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\",[2] and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science.[3] – [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "after": "a9705c942d062dd9",
      "date": 1678013091639
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "In the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678013106469
    },
    {
      "type": "edit",
      "id": "a9705c942d062dd9",
      "item": {
        "type": "paragraph",
        "id": "a9705c942d062dd9",
        "text": "In the mathematical study of cellular automata, Rule 90 is an elementary cellular automaton based on the exclusive or function. [https://en.wikipedia.org/wiki/Rule_90 wikipedia]"
      },
      "date": 1678013124291
    },
    {
      "type": "edit",
      "id": "ade39f66363b9015",
      "item": {
        "type": "paragraph",
        "id": "ade39f66363b9015",
        "text": "It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values. Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\", and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science. [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678013224275
    },
    {
      "type": "edit",
      "id": "ade39f66363b9015",
      "item": {
        "type": "paragraph",
        "id": "ade39f66363b9015",
        "text": "It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values. "
      },
      "date": 1678013263641
    },
    {
      "type": "add",
      "id": "600b600c66e506cb",
      "item": {
        "type": "paragraph",
        "id": "600b600c66e506cb",
        "text": "Martin, Odlyzko & Wolfram (1984) call it \"the simplest non-trivial cellular automaton\", and it is described extensively in Stephen Wolfram's 2002 book A New Kind of Science. "
      },
      "after": "ade39f66363b9015",
      "date": 1678013268513
    },
    {
      "type": "edit",
      "id": "ade39f66363b9015",
      "item": {
        "type": "paragraph",
        "id": "ade39f66363b9015",
        "text": "It consists of a one-dimensional array of cells, each of which can hold either a 0 or a 1 value. In each time step all values are simultaneously replaced by the exclusive or of their two neighboring values. [https://en.wikipedia.org/wiki/Rule_90#cite_note-w83-1 wikipedia]"
      },
      "date": 1678013269747
    },
    {
      "id": "dad18639cceb2aab",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dad18639cceb2aab",
        "text": "WOLFRAM, Stephen, 1983. Statistical mechanics of cellular automata. Reviews of Modern Physics. 1 July 1983. Vol. 55, no. 3, p. 601–644. DOI 10.1103/RevModPhys.55.601. [[Cellular Automata]] are used as simple mathematical models to investigate self-organization in statistical mechanics. A detailed analysis is given of “elementary” cellular automata consisting of a sequence of sites with values 0 or 1 on a line, with each site evolving deterministically in discrete time steps according to definite rules involving the values of its nearest neighbors. With simple initial configurations, the cellular automata either tend to homogeneous states, or generate self-similar patterns with fractal dimensions ≃ 1.59 or ≃ 1.69. With “random” initial configurations, the irreversible character of the cellular automaton evolution leads to several self-organization phenomena. Statistical properties of the structures generated are found to lie in two universality classes, independent of the details of the initial state or the cellular automaton rules. More complicated cellular automata are briefly considered, and connections with dynamical systems theory and the formal theory of computation are discussed.\n"
      },
      "after": "600b600c66e506cb",
      "attribution": {
        "page": "2023-03-05"
      },
      "date": 1678013309159
    },
    {
      "id": "ee54f9a6140b796c",
      "type": "add",
      "item": {
        "type": "image",
        "id": "ee54f9a6140b796c",
        "text": "FIG. 1. Example of a set of local rules for the time evolution of a one-dimensional elementary cellular automaton. ",
        "size": "wide",
        "width": 416,
        "height": 66,
        "url": "/assets/plugins/image/ded1001361df44c7251cb0376d11ad50.jpg"
      },
      "after": "dad18639cceb2aab",
      "attribution": {
        "page": "2023-03-05"
      },
      "date": 1678013325625
    },
    {
      "id": "9322c7a2eefb1952",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9322c7a2eefb1952",
        "text": "The variables at each site may take values 0 or 1. The eight possible states of three adjacent sites are given on the upper line. The lower line then specifies a rule for the time evolution of the cellular automaton by giving the value to be taken by the central site of the three on the next time step. The time evolution of the complete cellular automaton is obtained by simultaneous application of these rules at each site for each time step. The rule given is the modulo-two rule: the value of a site at a particular time step is simply the sum modulo two of the values of its two neighbors at the previous time step. Any possible sequence of eight binary digits specifies a cellular automaton."
      },
      "after": "ee54f9a6140b796c",
      "attribution": {
        "page": "2023-03-05"
      },
      "date": 1678013328708
    },
    {
      "id": "fe7b36f0b577c480",
      "type": "add",
      "item": {
        "type": "code",
        "id": "fe7b36f0b577c480",
        "text": "// Define the rules\nconst rules = {\n  \"000\": \"0\",\n  \"001\": \"1\",\n  \"010\": \"0\",\n  \"011\": \"1\",\n  \"100\": \"1\",\n  \"101\": \"0\",\n  \"110\": \"1\",\n  \"111\": \"0\",\n};"
      },
      "after": "9322c7a2eefb1952",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013365981
    },
    {
      "id": "80285af20c7e4684",
      "type": "add",
      "item": {
        "type": "code",
        "id": "80285af20c7e4684",
        "text": "// Create an initial state\nlet state = \"01011010\";"
      },
      "after": "fe7b36f0b577c480",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013368814
    },
    {
      "id": "c8fa44240a00362c",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c8fa44240a00362c",
        "text": "// Apply the rules to generate the next state\nfunction next(state) {\n  let next = \"\";\n  for (let i = 0; i < state.length - 2; i++) {\n    let pattern = state.slice(i, i + 3);\n    next += rules[pattern];\n  }\n  return next;\n}"
      },
      "after": "80285af20c7e4684",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013372199
    },
    {
      "id": "fe22d97f5625a375",
      "type": "add",
      "item": {
        "type": "code",
        "id": "fe22d97f5625a375",
        "text": "// Create a canvas and draw the states\nconst canvas = document.getElementById(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\nctx.fillStyle = \"black\";\nctx.fillRect(0, 0, canvas.width, canvas.height);\nctx.fillStyle = \"white\";\nctx.font = \"16px monospace\";\nfor (let i = 0; i < 100; i++) {\n  ctx.fillText(state, 10, (i + 1) * 20);\n  state = next(state);\n}\n"
      },
      "after": "c8fa44240a00362c",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013376587
    },
    {
      "id": "113e37cb78a4ee36",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "113e37cb78a4ee36",
        "text": "⇒ [[ESM Snippet Template]]"
      },
      "after": "fe22d97f5625a375",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013381154
    },
    {
      "id": "9c919469ae87a520",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "9c919469ae87a520",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "113e37cb78a4ee36",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013384262
    },
    {
      "id": "0cf39cf16580638e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0cf39cf16580638e",
        "text": "We modified the esm.html file to include a <canvas> element in the body section. See \"Basic usage of canvas\"  [https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Basic_usage?retiredLocale=de mdn]"
      },
      "after": "9c919469ae87a520",
      "attribution": {
        "page": "2023-03-04"
      },
      "date": 1678013388839
    },
    {
      "type": "edit",
      "id": "ee54f9a6140b796c",
      "item": {
        "type": "image",
        "id": "ee54f9a6140b796c",
        "text": "FIG. 1. Example of a set of local rules for the time evolution of a one-dimensional elementary cellular automaton. (Wolfram, Statistical mechanics of cellular automata, p. 604)",
        "size": "wide",
        "width": 416,
        "height": 66,
        "url": "/assets/plugins/image/ded1001361df44c7251cb0376d11ad50.jpg"
      },
      "date": 1678013538480
    }
  ]
}