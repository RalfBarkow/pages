{
  "title": "Vicuna",
  "story": [
    {
      "type": "paragraph",
      "id": "8da2fa5fd208f87f",
      "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github], [https://vicuna.lmsys.org/ site], [https://chat.lmsys.org/ page], [https://news.ycombinator.com/item?id=35430089 hn], [https://news.ycombinator.com/item?id=35378683 hn]"
    },
    {
      "type": "paragraph",
      "id": "d5b3bfdc11075c23",
      "text": "ViperGPT: Visual Inference via Python Execution for Reasoning [https://viper.cs.columbia.edu/static/viper_paper.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "a5b460c7b1f26200",
      "text": "> Answering visual queries is a complex task that requires both visual processing and reasoning. End-to-end models, the dominant approach for this task, do not explicitly differentiate between the two, limiting interpretability and generalization. Learning modular programs presents a promising alternative, but has proven challenging due to the difficulty of learning both the programs and modules simultaneously. We introduce ViperGPT, a framework that leverages code-generation models to compose vision-and-language models into subroutines to produce a result for any query. ViperGPT utilizes a provided API to access the available modules, and composes them by generating Python code that is later executed. This simple approach requires no further training, and achieves state-of-the-art results across various complex visual tasks."
    },
    {
      "type": "paragraph",
      "id": "8f0756a3440af53c",
      "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning [https://salsa.debian.org/deeplearning-team/ml-policy/#ml-policy-unofficial-policy-for-debian-machine-learning page], [https://salsa.debian.org/deeplearning-team/ml-policy/-/blob/master/ML-Policy.pdf pdf] >> reproducibility"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Vicuna",
        "story": []
      },
      "date": 1680593362363
    },
    {
      "item": {
        "type": "factory",
        "id": "8da2fa5fd208f87f"
      },
      "id": "8da2fa5fd208f87f",
      "type": "add",
      "date": 1680593373099
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots."
      },
      "date": 1680593375180
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github]"
      },
      "date": 1680593388134
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github], [https://vicuna.lmsys.org/ site]"
      },
      "date": 1680593400380
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github], [https://vicuna.lmsys.org/ site], [https://chat.lmsys.org/ page]"
      },
      "date": 1680593561991
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github], [https://vicuna.lmsys.org/ site], [https://chat.lmsys.org/ page], [https://news.ycombinator.com/item?id=35430089 hn]"
      },
      "date": 1680593801187
    },
    {
      "type": "edit",
      "id": "8da2fa5fd208f87f",
      "item": {
        "type": "paragraph",
        "id": "8da2fa5fd208f87f",
        "text": "An open platform for training, serving, and evaluating large language model based chatbots. [https://github.com/lm-sys/FastChat github], [https://vicuna.lmsys.org/ site], [https://chat.lmsys.org/ page], [https://news.ycombinator.com/item?id=35430089 hn], [https://news.ycombinator.com/item?id=35378683 hn]"
      },
      "date": 1680593833053
    },
    {
      "item": {
        "type": "factory",
        "id": "d5b3bfdc11075c23"
      },
      "id": "d5b3bfdc11075c23",
      "type": "add",
      "after": "8da2fa5fd208f87f",
      "date": 1680593854973
    },
    {
      "type": "edit",
      "id": "d5b3bfdc11075c23",
      "item": {
        "type": "paragraph",
        "id": "d5b3bfdc11075c23",
        "text": "ViperGPT: Visual Inference via Python Execution for Reasoning"
      },
      "date": 1680593857540
    },
    {
      "type": "edit",
      "id": "d5b3bfdc11075c23",
      "item": {
        "type": "paragraph",
        "id": "d5b3bfdc11075c23",
        "text": "ViperGPT: Visual Inference via Python Execution for Reasoning [https://viper.cs.columbia.edu/static/viper_paper.pdf pdf]"
      },
      "date": 1680593865587
    },
    {
      "item": {
        "type": "factory",
        "id": "a5b460c7b1f26200"
      },
      "id": "a5b460c7b1f26200",
      "type": "add",
      "after": "d5b3bfdc11075c23",
      "date": 1680593949287
    },
    {
      "type": "edit",
      "id": "a5b460c7b1f26200",
      "item": {
        "type": "paragraph",
        "id": "a5b460c7b1f26200",
        "text": "Answering visual queries is a complex task that requires\nboth visual processing and reasoning. End-to-end models,\nthe dominant approach for this task, do not explicitly differ-\nentiate between the two, limiting interpretability and gener-\nalization. Learning modular programs presents a promising\nalternative, but has proven challenging due to the difficulty\nof learning both the programs and modules simultaneously.\nWe introduce ViperGPT, a framework that leverages code-\ngeneration models to compose vision-and-language models\ninto subroutines to produce a result for any query. ViperGPT\nutilizes a provided API to access the available modules, and\ncomposes them by generating Python code that is later ex-\necuted. This simple approach requires no further training,\nand achieves state-of-the-art results across various complex\nvisual tasks."
      },
      "date": 1680593951103
    },
    {
      "type": "edit",
      "id": "a5b460c7b1f26200",
      "item": {
        "type": "paragraph",
        "id": "a5b460c7b1f26200",
        "text": "Answering visual queries is a complex task that requires both visual processing and reasoning. End-to-end models, the dominant approach for this task, do not explicitly differentiate between the two, limiting interpretability and generalization. Learning modular programs presents a promising alternative, but has proven challenging due to the difficulty\nof learning both the programs and modules simultaneously.\nWe introduce ViperGPT, a framework that leverages code-\ngeneration models to compose vision-and-language models\ninto subroutines to produce a result for any query. ViperGPT\nutilizes a provided API to access the available modules, and\ncomposes them by generating Python code that is later ex-\necuted. This simple approach requires no further training,\nand achieves state-of-the-art results across various complex\nvisual tasks."
      },
      "date": 1680593975302
    },
    {
      "type": "edit",
      "id": "a5b460c7b1f26200",
      "item": {
        "type": "paragraph",
        "id": "a5b460c7b1f26200",
        "text": "Answering visual queries is a complex task that requires both visual processing and reasoning. End-to-end models, the dominant approach for this task, do not explicitly differentiate between the two, limiting interpretability and generalization. Learning modular programs presents a promising alternative, but has proven challenging due to the difficulty\nof learning both the programs and modules simultaneously.\nWe introduce ViperGPT, a framework that leverages code-generation models to compose vision-and-language models\ninto subroutines to produce a result for any query. ViperGPT\nutilizes a provided API to access the available modules, and\ncomposes them by generating Python code that is later executed. This simple approach requires no further training,\nand achieves state-of-the-art results across various complex\nvisual tasks."
      },
      "date": 1680594021001
    },
    {
      "item": {
        "type": "factory",
        "id": "8f0756a3440af53c"
      },
      "id": "8f0756a3440af53c",
      "type": "add",
      "after": "a5b460c7b1f26200",
      "date": 1680594350571
    },
    {
      "type": "edit",
      "id": "8f0756a3440af53c",
      "item": {
        "type": "paragraph",
        "id": "8f0756a3440af53c",
        "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning"
      },
      "date": 1680594353217
    },
    {
      "type": "edit",
      "id": "8f0756a3440af53c",
      "item": {
        "type": "paragraph",
        "id": "8f0756a3440af53c",
        "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning [https://salsa.debian.org/deeplearning-team/ml-policy/#ml-policy-unofficial-policy-for-debian-machine-learning page]"
      },
      "date": 1680594367421
    },
    {
      "type": "edit",
      "id": "8f0756a3440af53c",
      "item": {
        "type": "paragraph",
        "id": "8f0756a3440af53c",
        "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning [https://salsa.debian.org/deeplearning-team/ml-policy/#ml-policy-unofficial-policy-for-debian-machine-learning page], "
      },
      "date": 1680594386480
    },
    {
      "type": "edit",
      "id": "8f0756a3440af53c",
      "item": {
        "type": "paragraph",
        "id": "8f0756a3440af53c",
        "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning [https://salsa.debian.org/deeplearning-team/ml-policy/#ml-policy-unofficial-policy-for-debian-machine-learning page], [https://salsa.debian.org/deeplearning-team/ml-policy/-/blob/master/ML-Policy.pdf pdf]"
      },
      "date": 1680594401214
    },
    {
      "type": "edit",
      "id": "8f0756a3440af53c",
      "item": {
        "type": "paragraph",
        "id": "8f0756a3440af53c",
        "text": "ML-Policy: Unofficial Policy for Debian & Machine Learning [https://salsa.debian.org/deeplearning-team/ml-policy/#ml-policy-unofficial-policy-for-debian-machine-learning page], [https://salsa.debian.org/deeplearning-team/ml-policy/-/blob/master/ML-Policy.pdf pdf] >> reproducibility"
      },
      "date": 1680594470510
    },
    {
      "type": "edit",
      "id": "a5b460c7b1f26200",
      "item": {
        "type": "paragraph",
        "id": "a5b460c7b1f26200",
        "text": "> Answering visual queries is a complex task that requires both visual processing and reasoning. End-to-end models, the dominant approach for this task, do not explicitly differentiate between the two, limiting interpretability and generalization. Learning modular programs presents a promising alternative, but has proven challenging due to the difficulty of learning both the programs and modules simultaneously. We introduce ViperGPT, a framework that leverages code-generation models to compose vision-and-language models into subroutines to produce a result for any query. ViperGPT utilizes a provided API to access the available modules, and composes them by generating Python code that is later executed. This simple approach requires no further training, and achieves state-of-the-art results across various complex visual tasks."
      },
      "date": 1680594795785
    },
    {
      "type": "edit",
      "id": "a5b460c7b1f26200",
      "item": {
        "type": "markdown",
        "id": "a5b460c7b1f26200",
        "text": "> Answering visual queries is a complex task that requires both visual processing and reasoning. End-to-end models, the dominant approach for this task, do not explicitly differentiate between the two, limiting interpretability and generalization. Learning modular programs presents a promising alternative, but has proven challenging due to the difficulty of learning both the programs and modules simultaneously. We introduce ViperGPT, a framework that leverages code-generation models to compose vision-and-language models into subroutines to produce a result for any query. ViperGPT utilizes a provided API to access the available modules, and composes them by generating Python code that is later executed. This simple approach requires no further training, and achieves state-of-the-art results across various complex visual tasks."
      },
      "date": 1680594796771
    }
  ]
}