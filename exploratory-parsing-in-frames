{
  "title": "Exploratory Parsing in Frames",
  "story": [
    {
      "id": "2ece0000",
      "type": "paragraph",
      "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with 1 hour and a local wiki with the Frame Plugin and our esm.html script."
    },
    {
      "type": "reference",
      "id": "9a705bd5702d3a28",
      "text": "This was a web based experiment manager that could prepare, monitor, and refine task specific grammars turned into engines with a slightly enhanced version of Ian Piumarta's pegleg.",
      "site": "code.fed.wiki.org",
      "slug": "exploratory-parsing",
      "title": "Exploratory Parsing"
    },
    {
      "type": "paragraph",
      "id": "4f6c683d1c26ea1d",
      "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#grammar-syntax-and-semantics docs]"
    },
    {
      "type": "paragraph",
      "id": "caa626ac93aa7d4c",
      "text": "Here's our raw text:"
    },
    {
      "type": "code",
      "id": "540a64f800d7fd6f",
      "text": "const rawtext = 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';"
    },
    {
      "type": "paragraph",
      "id": "766adc6791c49478",
      "text": "Here's our grammar:"
    },
    {
      "type": "code",
      "id": "ed4ccce931f4cd95",
      "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = .\n\n`;"
    },
    {
      "type": "paragraph",
      "id": "692155b7ccfc8c36",
      "text": "In the frame below we can view the results."
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "98d91e89382d47e7",
      "text": "We trace each match the parser makes."
    },
    {
      "type": "code",
      "id": "67726317be30143c",
      "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Exploratory Parsing in Frames",
        "story": [
          {
            "id": "2ece0000",
            "type": "paragraph",
            "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with 1 hour and a local wiki with the Frame Plugin and our esm.html script."
          }
        ]
      },
      "date": 1709180799201
    },
    {
      "type": "fork",
      "date": 1709180802089
    },
    {
      "type": "add",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "factory",
        "id": "9a705bd5702d3a28",
        "text": "..."
      },
      "after": "2ece0000",
      "date": 1709180808750
    },
    {
      "type": "edit",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "reference",
        "id": "9a705bd5702d3a28",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing"
      },
      "date": 1709180823437
    },
    {
      "type": "edit",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "reference",
        "id": "9a705bd5702d3a28",
        "text": "This was a web based experiment manager that could prepare, monitor, and refine task specific grammars turned into engines with a slightly enhanced version of Ian Piumarta's pegleg.",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing"
      },
      "date": 1709181464219
    },
    {
      "item": {
        "type": "factory",
        "id": "4f6c683d1c26ea1d"
      },
      "id": "4f6c683d1c26ea1d",
      "type": "add",
      "after": "9a705bd5702d3a28",
      "date": 1709181734437
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame."
      },
      "date": 1709181754453
    },
    {
      "type": "add",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "paragraph",
        "id": "ed4ccce931f4cd95",
        "text": "..."
      },
      "after": "4f6c683d1c26ea1d",
      "date": 1709181756664
    },
    {
      "id": "6cf52409eec3988c",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//localhost/assets/pages/js-snippet-template/esm.html"
      },
      "after": "ed4ccce931f4cd95",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181812905
    },
    {
      "id": "caa626ac93aa7d4c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "In the frame below we can view the results."
      },
      "after": "ed4ccce931f4cd95",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181852655
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`\n}\n\n"
      },
      "after": "4f6c683d1c26ea1d",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181868157
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#installation-browser docs]"
      },
      "date": 1709181921927
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709181982683
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182000413
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182314584
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  const parser = peggy.generate(\n    \"start = ('a' / 'b')+\");\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182339880
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(\n    \"start = ('a' / 'b')+\");\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182474862
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar());\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709182667028
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "paragraph",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {"
      },
      "date": 1709182729871
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "factory",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {}"
      },
      "date": 1709182731975
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {\n  return `\nstart = ('a' / 'b')+\n`;\n}"
      },
      "date": 1709182771760
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {\n  return `\nstart = ('a' / 'b')+\n`;\n}"
      },
      "date": 1709183850997
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar());\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709183881793
    },
    {
      "type": "fork",
      "date": 1709183896945
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389115830
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ('a' / 'b')+\n\n`;"
      },
      "date": 1709389139716
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389273273
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389430543
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709395974120
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbdaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396000725
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396632544
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html"
      },
      "date": 1709396698798,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Page not found"
      }
    },
    {
      "type": "fork",
      "date": 1709396705383
    },
    {
      "type": "edit",
      "id": "caa626ac93aa7d4c",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "..."
      },
      "date": 1709396758549
    },
    {
      "type": "add",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "paragraph",
        "id": "540a64f800d7fd6f",
        "text": "..."
      },
      "after": "caa626ac93aa7d4c",
      "date": 1709396760331
    },
    {
      "type": "add",
      "id": "692155b7ccfc8c36",
      "item": {
        "type": "paragraph",
        "id": "692155b7ccfc8c36",
        "text": "In the frame below we can view the results."
      },
      "after": "540a64f800d7fd6f",
      "date": 1709396762388
    },
    {
      "type": "edit",
      "id": "caa626ac93aa7d4c",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "Here's our raw text:"
      },
      "date": 1709396769936
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709396784835
    },
    {
      "type": "add",
      "id": "766adc6791c49478",
      "item": {
        "type": "paragraph",
        "id": "766adc6791c49478",
        "text": "Here's our grammar;"
      },
      "after": "ed4ccce931f4cd95",
      "date": 1709396794194
    },
    {
      "type": "edit",
      "id": "766adc6791c49478",
      "item": {
        "type": "paragraph",
        "id": "766adc6791c49478",
        "text": "Here's our grammar:"
      },
      "date": 1709396797607
    },
    {
      "id": "766adc6791c49478",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396800675
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396825730
    },
    {
      "id": "540a64f800d7fd6f",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "caa626ac93aa7d4c",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396847099
    },
    {
      "id": "caa626ac93aa7d4c",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396850107
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "5eb6b67568179aa3"
      ],
      "date": 1709396887355
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbadbabb`;"
      },
      "date": 1709396895955
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709396953776
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "let rawtext = `aabbababb`;"
      },
      "date": 1709397006147
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709397021419
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#grammar-syntax-and-semantics docs]"
      },
      "date": 1709397175318
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709398343871
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709398359124
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1709400219052
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';"
      },
      "date": 1709400315787
    },
    {
      "type": "fork",
      "date": 1709400761495
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ('e' / .)+\n\n`;"
      },
      "date": 1709400801949
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ([a-z]+ / .)+\n\n`;"
      },
      "date": 1709400832831
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (\"tt\" / .)+\n\n`;"
      },
      "date": 1709400891630
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (\"t\"+ / .)+\n\n`;"
      },
      "date": 1709400919667
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / .)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / esm\n\n`;"
      },
      "date": 1709401051231
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / .)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\n\n`;"
      },
      "date": 1709401064113
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / type / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\ntype = \"js\" / \"peg\"\nother = .\n\n`;"
      },
      "date": 1709401187480
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h3>Hello, World!</h3><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709401334565
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h3>Result:</h3><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709401351255
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \"}</p>`;\n}\n\n"
      },
      "date": 1709401747115
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401812363
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\", \")}</p>`;\n}\n\n"
      },
      "date": 1709401840854
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401851561
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401896461
    },
    {
      "type": "fork",
      "date": 1709401986215
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nother = .\n\n`;"
      },
      "date": 1709402031301
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402220088
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402303249
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = num \".\" num \".\" num\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709402454145
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402584926
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408130898
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x.name,x.type)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408373216
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408406145
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer:{trace});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408505266
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer:{trace}});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408567445
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408710198
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408917769
    },
    {
      "item": {
        "type": "factory",
        "id": "98d91e89382d47e7"
      },
      "id": "98d91e89382d47e7",
      "type": "add",
      "after": "5eb6b67568179aa3",
      "date": 1709409769237
    },
    {
      "type": "edit",
      "id": "98d91e89382d47e7",
      "item": {
        "type": "paragraph",
        "id": "98d91e89382d47e7",
        "text": "We trace each match the parser makes."
      },
      "date": 1709409861549
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709409890344
    },
    {
      "item": {
        "type": "factory",
        "id": "67726317be30143c"
      },
      "id": "67726317be30143c",
      "type": "add",
      "after": "98d91e89382d47e7",
      "date": 1709409901036
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "function trace(event) {\n  console.log(event)\n}"
      },
      "date": 1709409985969
    },
    {
      "id": "98d91e89382d47e7",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "98d91e89382d47e7",
        "5eb6b67568179aa3",
        "67726317be30143c"
      ],
      "date": 1709410008749
    },
    {
      "id": "67726317be30143c",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "98d91e89382d47e7",
        "67726317be30143c",
        "5eb6b67568179aa3"
      ],
      "date": 1709410011270
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "function trace(event) {\n  console.log('yo',event)\n}"
      },
      "date": 1709410303571
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410369717
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410427789
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410678702
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = (num \".\" num \".\" num)\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410855858
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num) {return tuple}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410908305
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num) {console.log(tuple);return tuple}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410934587
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709411024857
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709417276461
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,{trace:true);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418543241
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,{trace:true});\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418577429
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418646037
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace(event) {\n  console.log('yo',event)\n}"
      },
      "date": 1709418813165
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(rule)\n}"
      },
      "date": 1709418849418
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  switch(type) {\n  \n  }\n\n  console.log(rule)\n}"
      },
      "date": 1709418944867
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    \n  }\n}"
      },
      "date": 1709419049098
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    case 'rule.enter': console.log('>>>')\n  }\n}"
      },
      "date": 1709419105779
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop()\n    case 'rule.\n  }\n}"
      },
      "date": 1709419186129
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} => ${rule}`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop() break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709419424122
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} => ${rule}`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709419456375
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} ✔︎`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709420105189
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} ✔︎`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420124265
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () => console.log(stack.join(\" -> \")\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420209650
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () => console.log(stack.join(\" -> \"))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420233436
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  const show = () => console.log(stack.join(\" -> \"))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420374774
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(stack.join(\" -> \"),result)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709430864894
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(stack.join(\" -> \"),JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709430994753
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(\nstack.join(\" -> \"),JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709431632850
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(\n    stack.join(\" -> \"),\n    JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709431658937
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1709443727634
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.id.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n}\n\n"
      },
      "date": 1709445576067
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    stack.join(\" -> \"),\n    JSON.stringify(result))\n  );\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445690818
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")},${\n      JSON.stringify(result))\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445756402
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")},${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445788563
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n}\n\n"
      },
      "date": 1709445813798
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445839954
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.sendMessage({\n    action: \"resize\",\n    height: window.offsetHeight\n  });\n}\n\n"
      },
      "date": 1709445919576
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709445991874
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1709463862595
    }
  ]
}