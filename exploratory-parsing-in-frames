{
  "title": "Exploratory Parsing in Frames",
  "story": [
    {
      "id": "2ece0000",
      "type": "paragraph",
      "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with 1 hour and a local wiki with the Frame Plugin and our esm.html script."
    },
    {
      "type": "reference",
      "id": "9a705bd5702d3a28",
      "text": "This was a web based experiment manager that could prepare, monitor, and refine task specific grammars turned into engines with a slightly enhanced version of Ian Piumarta's pegleg.",
      "site": "code.fed.wiki.org",
      "slug": "exploratory-parsing",
      "title": "Exploratory Parsing"
    },
    {
      "type": "paragraph",
      "id": "4f6c683d1c26ea1d",
      "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#grammar-syntax-and-semantics docs]"
    },
    {
      "type": "paragraph",
      "id": "caa626ac93aa7d4c",
      "text": "We will parse raw text, a comma-separated list of url."
    },
    {
      "type": "paragraph",
      "id": "08a7f25959cac94f",
      "text": "Trouble: I wanted newline as separator but couldn't get that to parse."
    },
    {
      "type": "code",
      "id": "540a64f800d7fd6f",
      "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/find.cgi?search=explore&start=3&list=7`"
    },
    {
      "type": "paragraph",
      "id": "766adc6791c49478",
      "text": "Here's our grammar:"
    },
    {
      "type": "paragraph",
      "id": "96bab6d9db18ac82",
      "text": "Trouble: the other rule works when called directly but doesn't take over when url fails to match."
    },
    {
      "type": "code",
      "id": "ed4ccce931f4cd95",
      "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\nversion = \"@\" capture:(num \".\" num \".\" num)\n  {return capture.flat().join(\"\")}\nword = capture:([a-z] [a-z0-9]*)\n  {return capture.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`"
    },
    {
      "type": "paragraph",
      "id": "692155b7ccfc8c36",
      "text": "We pretty-print the parse result and follow that with the trace generated dot and log."
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html\nHEIGHT 400"
    },
    {
      "type": "paragraph",
      "id": "7bb21663b9d51e36",
      "text": "For now we copy/paste the dot diagram here."
    },
    {
      "type": "graphviz",
      "id": "dbedc91473de3ea9",
      "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=6]\nurl->path [label=6]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nparam->word [label=3]\nvalue->word [label=1]\nparam->value [label=3]\nquery->param [label=3]\nvalue->num [label=2]\nurl->query [label=1]\n\n}",
      "dot": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=6]\nurl->path [label=6]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nparam->word [label=3]\nvalue->word [label=1]\nparam->value [label=3]\nquery->param [label=3]\nvalue->num [label=2]\nurl->query [label=1]\n\n}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"461pt\" height=\"507pt\"\n viewBox=\"0.00 0.00 460.68 507.20\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 503.2)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-503.2 456.68,-503.2 456.68,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"137.22\" cy=\"-392.4\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.22\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"43.22\" cy=\"-303.6\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"43.22\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M117.44,-380.04C107.28,-373.73 95.01,-365.36 85.22,-356.4 76.51,-348.43 68.07,-338.59 61.07,-329.63\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"63.42,-327.93 54.59,-322.07 57.84,-332.16 63.42,-327.93\"/>\n<text text-anchor=\"middle\" x=\"88.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"112.22\" cy=\"-249.6\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"112.22\" y=\"-245.4\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M134.15,-374.14C129.92,-350.28 122.23,-306.96 117.17,-278.48\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"120.5,-278.24 115.31,-269.01 113.61,-279.46 120.5,-278.24\"/>\n<text text-anchor=\"middle\" x=\"134.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"328.22\" cy=\"-195.6\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"328.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M154.01,-377.82C170.58,-364.16 196.4,-342.23 217.22,-321.6 251.14,-287.97 287.33,-245.91 308.85,-220.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"312.12,-222.71 315.82,-212.78 306.73,-218.23 312.12,-222.71\"/>\n<text text-anchor=\"middle\" x=\"253.72\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">6</text>\n</g>\n<!-- query -->\n<g id=\"node12\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"175.22\" cy=\"-303.6\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"175.22\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge16\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.55,-374.66C149.93,-362.38 157.34,-345.43 163.54,-331.28\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.98,-333.14 167.78,-322.58 160.57,-330.34 166.98,-333.14\"/>\n<text text-anchor=\"middle\" x=\"163.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"195.22\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"195.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M111.53,-231.31C110.93,-195.14 114.03,-110.2 152.22,-54 156.12,-48.25 161.25,-42.96 166.59,-38.33\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"168.37,-40.59 174.02,-31.62 164.02,-35.11 168.37,-40.59\"/>\n<text text-anchor=\"middle\" x=\"122.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M331.8,-177.46C335.46,-155.31 338.56,-116.33 322.22,-88.8 303.21,-56.77 263.71,-38.44 233.78,-28.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.23,-25.16 224.64,-25.58 233.18,-31.85 235.23,-25.16\"/>\n<text text-anchor=\"middle\" x=\"336.72\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">6</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"413.22\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"413.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M342.92,-180.01C349.2,-173.75 356.59,-166.34 363.22,-159.6 372.21,-150.45 382.02,-140.32 390.55,-131.46\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"392.56,-134.37 396.97,-124.74 387.52,-129.52 392.56,-134.37\"/>\n<text text-anchor=\"middle\" x=\"381.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"279.22\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"279.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M319,-178.27C311.93,-165.74 302.03,-148.2 293.87,-133.76\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"296.52,-132.34 288.56,-125.35 290.43,-135.78 296.52,-132.34\"/>\n<text text-anchor=\"middle\" x=\"310.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"334.22\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"334.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M398.73,-89.88C386.48,-76.42 368.77,-56.96 355.01,-41.84\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"358.14,-39.99 348.82,-34.95 352.97,-44.7 358.14,-39.99\"/>\n<text text-anchor=\"middle\" x=\"383.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"137.22\" cy=\"-481.2\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.22\" y=\"-477\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M137.22,-463.05C137.22,-451.24 137.22,-435.27 137.22,-421.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"140.72,-421.81 137.22,-411.81 133.72,-421.81 140.72,-421.81\"/>\n<text text-anchor=\"middle\" x=\"140.72\" y=\"-432.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M269.39,-89.4C262.53,-78.68 252.74,-64.73 242.22,-54 236.86,-48.53 230.59,-43.26 224.41,-38.53\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"226.67,-35.12 216.53,-32.04 222.54,-40.77 226.67,-35.12\"/>\n<text text-anchor=\"middle\" x=\"258.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- param -->\n<g id=\"node10\" class=\"node\">\n<title>param</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"175.22\" cy=\"-195.6\" rx=\"35.16\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"175.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">param</text>\n</g>\n<!-- param&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>param&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M165.02,-177.98C153.5,-157.04 137.52,-120.01 147.22,-88.8 152.54,-71.68 163.67,-55.04 173.88,-42.31\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"176.97,-45.07 180.71,-35.16 171.6,-40.57 176.97,-45.07\"/>\n<text text-anchor=\"middle\" x=\"150.72\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- value -->\n<g id=\"node11\" class=\"node\">\n<title>value</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"195.22\" cy=\"-106.8\" rx=\"31.95\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"195.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">value</text>\n</g>\n<!-- param&#45;&gt;value -->\n<g id=\"edge13\" class=\"edge\">\n<title>param&#45;&gt;value</title>\n<path fill=\"none\" stroke=\"black\" d=\"M179.17,-177.45C181.94,-165.44 185.69,-149.14 188.88,-135.33\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"192.44,-136.44 191.28,-125.91 185.62,-134.87 192.44,-136.44\"/>\n<text text-anchor=\"middle\" x=\"190.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- value&#45;&gt;word -->\n<g id=\"edge12\" class=\"edge\">\n<title>value&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.22,-88.65C195.22,-76.84 195.22,-60.87 195.22,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"198.72,-47.41 195.22,-37.41 191.72,-47.41 198.72,-47.41\"/>\n<text text-anchor=\"middle\" x=\"198.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- value&#45;&gt;num -->\n<g id=\"edge15\" class=\"edge\">\n<title>value&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M204.15,-89.26C211.02,-77.92 221.49,-63.3 234.22,-54 252.64,-40.54 276.68,-31.91 296.58,-26.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"297.28,-29.77 306.14,-23.96 295.59,-22.97 297.28,-29.77\"/>\n<text text-anchor=\"middle\" x=\"237.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- query&#45;&gt;param -->\n<g id=\"edge14\" class=\"edge\">\n<title>query&#45;&gt;param</title>\n<path fill=\"none\" stroke=\"black\" d=\"M175.22,-285.57C175.22,-269.21 175.22,-244.19 175.22,-224.84\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"178.72,-224.94 175.22,-214.94 171.72,-224.94 178.72,-224.94\"/>\n<text text-anchor=\"middle\" x=\"178.72\" y=\"-245.4\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n</g>\n</svg>\n"
    },
    {
      "type": "paragraph",
      "id": "98d91e89382d47e7",
      "text": "First our trace handler then the parser run and print."
    },
    {
      "type": "code",
      "id": "67726317be30143c",
      "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"->\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"->\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n  }\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "import peggy from \n  'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option);\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Exploratory Parsing in Frames",
        "story": [
          {
            "id": "2ece0000",
            "type": "paragraph",
            "text": "A brief charter. We explore Ward's technique of Exploratory Parsing with 1 hour and a local wiki with the Frame Plugin and our esm.html script."
          }
        ]
      },
      "date": 1709180799201
    },
    {
      "type": "fork",
      "date": 1709180802089
    },
    {
      "type": "add",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "factory",
        "id": "9a705bd5702d3a28",
        "text": "..."
      },
      "after": "2ece0000",
      "date": 1709180808750
    },
    {
      "type": "edit",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "reference",
        "id": "9a705bd5702d3a28",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing"
      },
      "date": 1709180823437
    },
    {
      "type": "edit",
      "id": "9a705bd5702d3a28",
      "item": {
        "type": "reference",
        "id": "9a705bd5702d3a28",
        "text": "This was a web based experiment manager that could prepare, monitor, and refine task specific grammars turned into engines with a slightly enhanced version of Ian Piumarta's pegleg.",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing"
      },
      "date": 1709181464219
    },
    {
      "item": {
        "type": "factory",
        "id": "4f6c683d1c26ea1d"
      },
      "id": "4f6c683d1c26ea1d",
      "type": "add",
      "after": "9a705bd5702d3a28",
      "date": 1709181734437
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame."
      },
      "date": 1709181754453
    },
    {
      "type": "add",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "paragraph",
        "id": "ed4ccce931f4cd95",
        "text": "..."
      },
      "after": "4f6c683d1c26ea1d",
      "date": 1709181756664
    },
    {
      "id": "6cf52409eec3988c",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//localhost/assets/pages/js-snippet-template/esm.html"
      },
      "after": "ed4ccce931f4cd95",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181812905
    },
    {
      "id": "caa626ac93aa7d4c",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "In the frame below we can view the results."
      },
      "after": "ed4ccce931f4cd95",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181852655
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`\n}\n\n"
      },
      "after": "4f6c683d1c26ea1d",
      "attribution": {
        "page": "JS Snippet Template"
      },
      "date": 1709181868157
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#installation-browser docs]"
      },
      "date": 1709181921927
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709181982683
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182000413
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182314584
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\n\nexport async function emit(el) {\n  const parser = peggy.generate(\n    \"start = ('a' / 'b')+\");\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182339880
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(\n    \"start = ('a' / 'b')+\");\n  el.innerHTML = `<h1>Hello, World!</h1>`;\n}\n\n"
      },
      "date": 1709182474862
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar());\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709182667028
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "paragraph",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {"
      },
      "date": 1709182729871
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "factory",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {}"
      },
      "date": 1709182731975
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {\n  return `\nstart = ('a' / 'b')+\n`;\n}"
      },
      "date": 1709182771760
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "function grammar() {\n  return `\nstart = ('a' / 'b')+\n`;\n}"
      },
      "date": 1709183850997
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar());\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709183881793
    },
    {
      "type": "fork",
      "date": 1709183896945
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nexport async function emit(el) {\n  await import(\"https://cdn.jsdelivr.net/npm/peggy\");\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389115830
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ('a' / 'b')+\n\n`;"
      },
      "date": 1709389139716
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "// Code that does it.\nimport * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389273273
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abba\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709389430543
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709395974120
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbdaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396000725
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(\"abbabbaa\");\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396632544
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html"
      },
      "date": 1709396698798,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Page not found"
      }
    },
    {
      "type": "fork",
      "date": 1709396705383
    },
    {
      "type": "edit",
      "id": "caa626ac93aa7d4c",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "..."
      },
      "date": 1709396758549
    },
    {
      "type": "add",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "paragraph",
        "id": "540a64f800d7fd6f",
        "text": "..."
      },
      "after": "caa626ac93aa7d4c",
      "date": 1709396760331
    },
    {
      "type": "add",
      "id": "692155b7ccfc8c36",
      "item": {
        "type": "paragraph",
        "id": "692155b7ccfc8c36",
        "text": "In the frame below we can view the results."
      },
      "after": "540a64f800d7fd6f",
      "date": 1709396762388
    },
    {
      "type": "edit",
      "id": "caa626ac93aa7d4c",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "Here's our raw text:"
      },
      "date": 1709396769936
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709396784835
    },
    {
      "type": "add",
      "id": "766adc6791c49478",
      "item": {
        "type": "paragraph",
        "id": "766adc6791c49478",
        "text": "Here's our grammar;"
      },
      "after": "ed4ccce931f4cd95",
      "date": 1709396794194
    },
    {
      "type": "edit",
      "id": "766adc6791c49478",
      "item": {
        "type": "paragraph",
        "id": "766adc6791c49478",
        "text": "Here's our grammar:"
      },
      "date": 1709396797607
    },
    {
      "id": "766adc6791c49478",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396800675
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import * as peggy from \"https://cdn.jsdelivr.net/npm/peggy\";\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709396825730
    },
    {
      "id": "540a64f800d7fd6f",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "caa626ac93aa7d4c",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396847099
    },
    {
      "id": "caa626ac93aa7d4c",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "5eb6b67568179aa3",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c"
      ],
      "date": 1709396850107
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "5eb6b67568179aa3"
      ],
      "date": 1709396887355
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbadbabb`;"
      },
      "date": 1709396895955
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709396953776
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "let rawtext = `aabbababb`;"
      },
      "date": 1709397006147
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `aabbababb`;"
      },
      "date": 1709397021419
    },
    {
      "type": "edit",
      "id": "4f6c683d1c26ea1d",
      "item": {
        "type": "paragraph",
        "id": "4f6c683d1c26ea1d",
        "text": "We begin with our esm frame and a javascript peg parser. [https://peggyjs.org/documentation.html#grammar-syntax-and-semantics docs]"
      },
      "date": 1709397175318
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = window.peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709398343871
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h1>Hello, World!</h1><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709398359124
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1709400219052
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';"
      },
      "date": 1709400315787
    },
    {
      "type": "fork",
      "date": 1709400761495
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ('e' / .)+\n\n`;"
      },
      "date": 1709400801949
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = ([a-z]+ / .)+\n\n`;"
      },
      "date": 1709400832831
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (\"tt\" / .)+\n\n`;"
      },
      "date": 1709400891630
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (\"t\"+ / .)+\n\n`;"
      },
      "date": 1709400919667
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / .)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / esm\n\n`;"
      },
      "date": 1709401051231
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / .)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\n\n`;"
      },
      "date": 1709401064113
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / type / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\ntype = \"js\" / \"peg\"\nother = .\n\n`;"
      },
      "date": 1709401187480
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h3>Hello, World!</h3><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709401334565
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  el.innerHTML = `<h3>Result:</h3><p><code>${result}</code></p>`;\n}\n\n"
      },
      "date": 1709401351255
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \"}</p>`;\n}\n\n"
      },
      "date": 1709401747115
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401812363
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\", \")}</p>`;\n}\n\n"
      },
      "date": 1709401840854
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:pink\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401851561
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = `<h3>Result:</h3>\n    <p>${result.map(token).join(\" \")}</p>`;\n}\n\n"
      },
      "date": 1709401896461
    },
    {
      "type": "fork",
      "date": 1709401986215
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nother = .\n\n`;"
      },
      "date": 1709402031301
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = s => `<code ${style}>${s}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402220088
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext);\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402303249
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = num \".\" num \".\" num\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709402454145
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709402584926
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408130898
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x.name,x.type)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408373216
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const tracer = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408406145
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer:{trace});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408505266
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const parser = peggy.generate(grammar,{tracer:{trace}});\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408567445
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408710198
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const trace = x => console.log(x.rule,x.type)\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709408917769
    },
    {
      "item": {
        "type": "factory",
        "id": "98d91e89382d47e7"
      },
      "id": "98d91e89382d47e7",
      "type": "add",
      "after": "5eb6b67568179aa3",
      "date": 1709409769237
    },
    {
      "type": "edit",
      "id": "98d91e89382d47e7",
      "item": {
        "type": "paragraph",
        "id": "98d91e89382d47e7",
        "text": "We trace each match the parser makes."
      },
      "date": 1709409861549
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709409890344
    },
    {
      "item": {
        "type": "factory",
        "id": "67726317be30143c"
      },
      "id": "67726317be30143c",
      "type": "add",
      "after": "98d91e89382d47e7",
      "date": 1709409901036
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "function trace(event) {\n  console.log(event)\n}"
      },
      "date": 1709409985969
    },
    {
      "id": "98d91e89382d47e7",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "98d91e89382d47e7",
        "5eb6b67568179aa3",
        "67726317be30143c"
      ],
      "date": 1709410008749
    },
    {
      "id": "67726317be30143c",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "98d91e89382d47e7",
        "67726317be30143c",
        "5eb6b67568179aa3"
      ],
      "date": 1709410011270
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "function trace(event) {\n  console.log('yo',event)\n}"
      },
      "date": 1709410303571
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410369717
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410427789
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace},trace:true}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709410678702
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = (num \".\" num \".\" num)\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410855858
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num) {return tuple}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410908305
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num) {console.log(tuple);return tuple}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709410934587
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709411024857
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709417276461
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,{trace:true);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418543241
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {tracer:{trace}}\n  const parser = peggy.generate(grammar,{trace:true});\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418577429
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}}\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`\n  const token = t => `<code ${style}>${t}</code>`\n  el.innerHTML = result.map(token).join(\" \");\n}\n\n"
      },
      "date": 1709418646037
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace(event) {\n  console.log('yo',event)\n}"
      },
      "date": 1709418813165
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(rule)\n}"
      },
      "date": 1709418849418
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  switch(type) {\n  \n  }\n\n  console.log(rule)\n}"
      },
      "date": 1709418944867
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    \n  }\n}"
      },
      "date": 1709419049098
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    case 'rule.enter': console.log('>>>')\n  }\n}"
      },
      "date": 1709419105779
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop()\n    case 'rule.\n  }\n}"
      },
      "date": 1709419186129
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} => ${rule}`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop() break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709419424122
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} => ${rule}`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709419456375
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} ✔︎`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': stack.pop(); show(); break\n  }\n}"
      },
      "date": 1709420105189
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () =>\n    console.log(`${stack} ✔︎`)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420124265
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () => console.log(stack.join(\" -> \")\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420209650
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  console.log(type,rule)\n  const show = () => console.log(stack.join(\" -> \"))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420233436
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule}) {\n  const show = () => console.log(stack.join(\" -> \"))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709420374774
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(stack.join(\" -> \"),result)\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709430864894
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(stack.join(\" -> \"),JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709430994753
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(\nstack.join(\" -> \"),JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709431632850
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = []\nfunction trace({type,rule,result}) {\n  const show = () => console.log(\n    stack.join(\" -> \"),\n    JSON.stringify(result))\n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709431658937
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1709443727634
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.id.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n}\n\n"
      },
      "date": 1709445576067
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    stack.join(\" -> \"),\n    JSON.stringify(result))\n  );\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445690818
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")},${\n      JSON.stringify(result))\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445756402
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")},${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445788563
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n}\n\n"
      },
      "date": 1709445813798
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709445839954
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.sendMessage({\n    action: \"resize\",\n    height: window.offsetHeight\n  });\n}\n\n"
      },
      "date": 1709445919576
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709445991874
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709477325594
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n  const count = (source, target) => {\n    \n  };\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match': show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709477468163
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n  const count = (stack) => {\n    const [source, target] = stack.slice(-2);\n    const edge = `${source} -> ${target}`;\n    if (tally[edge] == undefined) {\n      tally[edge] = {source, target, count:1};\n    } else {\n      tally[edge].count++;\n    }\n  };\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); count(stack); stack.pop(); break\n  }\n}"
      },
      "date": 1709477915500
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  window.log.push(JSON.stringify(tally, null, 2));\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709477991837
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  log.push(JSON.stringify(tally, null, 2));\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709478018408
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n  const count = (stack) => {\n    stack.reduce((acc, item, all, idx) => {\n      //todo\n    }, []);\n    const [source, target] = stack.slice(-2);\n    const edge = `${source} -> ${target}`;\n    if (tally[edge] == undefined) {\n      tally[edge] = {source, target, count:1};\n    } else {\n      tally[edge].count++;\n    }\n  };\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); count(stack); stack.pop(); break\n  }\n}"
      },
      "date": 1709479588417
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n  const count = (stack) => {\n    const pairs = Array.from(\n      {length: stack.length - 1},\n      i => stack.slice(i, 2)\n    );\n    for (let [source, target] of pairs) {\n      const edge = `${source} -> ${target}`;\n      if (tally[edge] == undefined) {\n        tally[edge] = {source, target, count:1};\n      } else {\n        tally[edge].count++;\n      }      \n    }\n  };\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); count(stack); stack.pop(); break\n  }\n}"
      },
      "date": 1709479952863
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1709482673742
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  log.push(...Object.entries(tally).map(t =>\n    `${t[0]} x ${t[1].count}`));\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709482673743
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  log.push('<br>',...Object.entries(tally)\n    .map(t =>`${t[1].count} x ${t[0]}`));\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709482816283
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  log.push(\"\",...Object.entries(tally)\n    .map(t =>`${t[1].count} x ${t[0]}`));\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709482886221
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.map(token).join(\" \");\n  log.unshift(...Object.entries(tally)\n    .map(t =>`${t[1].count} x ${t[0]}`),'');\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709483013498
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm\nhttps://c2.com/ward/inventory/find.cgi?search=explore';"
      },
      "date": 1709514987829
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm\nhttps://c2.com/ward/inventory/find.cgi?search=explore`;"
      },
      "date": 1709515012528
    },
    {
      "type": "fork",
      "date": 1709515540980
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709515591789
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = !'\\n' .\n\n`;"
      },
      "date": 1709515746997
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = !\"\\n\" .\n\n`;"
      },
      "date": 1709515763951
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = !\"\\\\n\" .\n\n`;"
      },
      "date": 1709515773284
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = .\n\n`;"
      },
      "date": 1709515800589
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = !\"\\n\" .\n\n`;"
      },
      "date": 1709516575523
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = ! \"\\n\" .\n\n`;"
      },
      "date": 1709516593418
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^\\n]\n\n`;"
      },
      "date": 1709516684665
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^X]\n\n`;"
      },
      "date": 1709516725406
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^d]\n\n`;"
      },
      "date": 1709516746098
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^X]\n\n`;"
      },
      "date": 1709516759104
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^\\n]\n\n`;"
      },
      "date": 1709516776370
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url\nurl = (word / kind / vers / other)+\nword = \"https\" / \"cdn\" / \"net\" / \"npm\" / \"esm\"\nkind = \"js\" / \"peg\"\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]\n\n`;"
      },
      "date": 1709516822089
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url / other\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = (word \".\")* word\nquery = \"?\" word = word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]\n\n`;"
      },
      "date": 1709517911202
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm,https://c2.com/ward/inventory/find.cgi?search=explore`;"
      },
      "date": 1709517932143
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other) (\",\" (url / other)*\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = (word \".\")* word\nquery = \"?\" word = word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709518049835
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other) (\",\" (url / other)*\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = (word \".\")* word\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709518078510
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm`;"
      },
      "date": 1709518144196
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = (word \".\")* word\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709518166493
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709518260384
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" \nx = domain path* query?\nprotocol = \"http\" \"s\"?\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523458028
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" \nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523536900
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol\nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523625714
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" domain\nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523661355
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"/\" \"/\" domain\nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nword = [a-z] [a-z0-9]* \nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523751461
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"/\" \"/\" domain\nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523971870
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol\nx = domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709523997584
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol\nmore = \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709524109461
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol more\nmore = \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709524119787
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" more\nmore =  domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709524183197
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" more domain\nmore = path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709524201635
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" domain more\nmore = path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709524239276
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n  const show = () => log.push(\n    `${stack.join(\" -> \")}, ${\n      JSON.stringify(result)\n    }`);\n  const count = () => {\n    const edge = stack.slice(-2).join(\" -> \")\n\n    for (let [source, target] of pairs) {\n      const edge = `${source} -> ${target}`;\n      if (tally[edge] == undefined) {\n        tally[edge] = {source, target, count:1};\n      } else {\n        tally[edge].count++;\n      }      \n    }\n  };\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); count(); stack.pop(); break\n  }\n}"
      },
      "date": 1709524642619
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"-\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"-\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709525009172
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"-\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"-\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n  }\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709525179668
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"->\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"->\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n  }\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709525229322
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.flat().map(token).join(\" \");\n  log.unshift(...Object.entries(tally)\n    .map(t =>`${t[1].count} x ${t[0]}`),'');\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709525326048
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.flat(9).map(token).join(\" \");\n  log.unshift(...Object.entries(tally)\n    .map(t =>`${t[1].count} x ${t[0]}`),'');\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709525381526
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other)\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709525481623
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result.flat(9).map(token).join(\" \");\n  log.unshift(...Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`),'');\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709525579622
    },
    {
      "item": {
        "type": "factory",
        "id": "dbedc91473de3ea9"
      },
      "id": "dbedc91473de3ea9",
      "type": "add",
      "after": "5eb6b67568179aa3",
      "date": 1709525634627
    },
    {
      "item": {
        "type": "factory",
        "id": "a492aeec9a80b489"
      },
      "id": "a492aeec9a80b489",
      "type": "add",
      "after": "dbedc91473de3ea9",
      "date": 1709525636404
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {\nurl->protocol [label=1]\ndomain->word [label=3]\nurl->domain [label=1]\npath->word [label=3]\nurl->path [label=3]\nvers->num [label=3]\npath->vers [label=1]\nstart->url [label=1]\n}"
      },
      "date": 1709525663487
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,http://c2.com`;"
      },
      "date": 1709526028705
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other) (\",\" url other)*\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709526122548
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other) (\",\" url / other)*\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word (\".\" word)? (\"@\" vers)?\nvers = tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709526149200
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=3]\nurl->path [label=3]\nvers->num [label=3]\npath->vers [label=1]\nstart->url [label=2]}",
        "dot": "digraph {\nurl->protocol [label=1]\ndomain->word [label=3]\nurl->domain [label=1]\npath->word [label=3]\nurl->path [label=3]\nvers->num [label=3]\npath->vers [label=1]\nstart->url [label=1]\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"266pt\" height=\"399pt\"\n viewBox=\"0.00 0.00 266.42 399.20\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 395.2)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-395.2 262.42,-395.2 262.42,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-284.4\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-280.2\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"43.22\" cy=\"-195.6\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"43.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M128.44,-269.84C112.66,-256.28 88.11,-235.18 69.41,-219.1\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"72.14,-215.98 62.28,-212.12 67.58,-221.29 72.14,-215.98\"/>\n<text text-anchor=\"middle\" x=\"106.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-195.6\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.22,-266.25C144.22,-254.44 144.22,-238.47 144.22,-224.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"147.72,-225.01 144.22,-215.01 140.72,-225.01 147.72,-225.01\"/>\n<text text-anchor=\"middle\" x=\"147.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-195.6\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M158.42,-269.07C171.91,-255.45 192.39,-234.78 208.03,-218.99\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"210.16,-221.81 214.71,-212.24 205.18,-216.89 210.16,-221.81\"/>\n<text text-anchor=\"middle\" x=\"198.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"152.22\" cy=\"-106.8\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M145.8,-177.45C146.89,-165.64 148.36,-149.67 149.62,-136.01\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"153.18,-136.49 150.61,-126.21 146.21,-135.85 153.18,-136.49\"/>\n<text text-anchor=\"middle\" x=\"152.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M216.63,-179.48C204.7,-166.2 187.15,-146.67 173.38,-131.34\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"176.46,-129.43 167.17,-124.33 171.26,-134.11 176.46,-129.43\"/>\n<text text-anchor=\"middle\" x=\"201.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- vers -->\n<g id=\"node6\" class=\"node\">\n<title>vers</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-106.8\" rx=\"27.13\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">vers</text>\n</g>\n<!-- path&#45;&gt;vers -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;vers</title>\n<path fill=\"none\" stroke=\"black\" d=\"M230.22,-177.45C230.22,-165.64 230.22,-149.67 230.22,-136.01\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"233.72,-136.21 230.22,-126.21 226.72,-136.21 233.72,-136.21\"/>\n<text text-anchor=\"middle\" x=\"233.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- vers&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>vers&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M230.22,-88.65C230.22,-76.84 230.22,-60.87 230.22,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"233.72,-47.41 230.22,-37.41 226.72,-47.41 233.72,-47.41\"/>\n<text text-anchor=\"middle\" x=\"233.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-373.2\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-369\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.22,-355.05C144.22,-343.24 144.22,-327.27 144.22,-313.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"147.72,-313.81 144.22,-303.81 140.72,-313.81 147.72,-313.81\"/>\n<text text-anchor=\"middle\" x=\"147.72\" y=\"-324.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709526188762
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = (url / other) (\",\" url / other)*\nurl = protocol \"//\" domain path* query?\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709526444407
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,http://c2.com/`;"
      },
      "date": 1709526763177
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/inventory/find.cgi?search=explore`;"
      },
      "date": 1709526804618
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = protocol \"//\" domain path* query? / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709526930110
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {style=filled fillcolor=palegreen\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "dot": "digraph {\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=3]\nurl->path [label=3]\nvers->num [label=3]\npath->vers [label=1]\nstart->url [label=2]}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"266pt\" height=\"399pt\"\n viewBox=\"0.00 0.00 266.42 399.20\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 395.2)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-395.2 262.42,-395.2 262.42,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-284.4\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-280.2\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"43.22\" cy=\"-195.6\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"43.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M128.44,-269.84C112.66,-256.28 88.11,-235.18 69.41,-219.1\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"72.14,-215.98 62.28,-212.12 67.58,-221.29 72.14,-215.98\"/>\n<text text-anchor=\"middle\" x=\"106.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-195.6\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.22,-266.25C144.22,-254.44 144.22,-238.47 144.22,-224.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"147.72,-225.01 144.22,-215.01 140.72,-225.01 147.72,-225.01\"/>\n<text text-anchor=\"middle\" x=\"147.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-195.6\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M158.42,-269.07C171.91,-255.45 192.39,-234.78 208.03,-218.99\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"210.16,-221.81 214.71,-212.24 205.18,-216.89 210.16,-221.81\"/>\n<text text-anchor=\"middle\" x=\"198.72\" y=\"-235.8\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"152.22\" cy=\"-106.8\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M145.8,-177.45C146.89,-165.64 148.36,-149.67 149.62,-136.01\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"153.18,-136.49 150.61,-126.21 146.21,-135.85 153.18,-136.49\"/>\n<text text-anchor=\"middle\" x=\"152.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M216.63,-179.48C204.7,-166.2 187.15,-146.67 173.38,-131.34\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"176.46,-129.43 167.17,-124.33 171.26,-134.11 176.46,-129.43\"/>\n<text text-anchor=\"middle\" x=\"201.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- vers -->\n<g id=\"node6\" class=\"node\">\n<title>vers</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-106.8\" rx=\"27.13\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">vers</text>\n</g>\n<!-- path&#45;&gt;vers -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;vers</title>\n<path fill=\"none\" stroke=\"black\" d=\"M230.22,-177.45C230.22,-165.64 230.22,-149.67 230.22,-136.01\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"233.72,-136.21 230.22,-126.21 226.72,-136.21 233.72,-136.21\"/>\n<text text-anchor=\"middle\" x=\"233.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"230.22\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"230.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- vers&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>vers&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M230.22,-88.65C230.22,-76.84 230.22,-60.87 230.22,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"233.72,-47.41 230.22,-37.41 226.72,-47.41 233.72,-47.41\"/>\n<text text-anchor=\"middle\" x=\"233.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"144.22\" cy=\"-373.2\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"144.22\" y=\"-369\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.22,-355.05C144.22,-343.24 144.22,-327.27 144.22,-313.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"147.72,-313.81 144.22,-303.81 140.72,-313.81 147.72,-313.81\"/>\n<text text-anchor=\"middle\" x=\"147.72\" y=\"-324.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709526997748
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "dot": "digraph {style=filled fillcolor=palegreen\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"334pt\" height=\"418pt\"\n viewBox=\"0.00 0.00 334.47 418.40\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 414.4)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-414.4 330.47,-414.4 330.47,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"193.47\" cy=\"-303.6\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"63.47\" cy=\"-214.8\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M174.84,-290.16C153.92,-276.2 119.64,-253.3 94.62,-236.6\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"96.8,-233.18 86.54,-230.54 92.91,-239 96.8,-233.18\"/>\n<text text-anchor=\"middle\" x=\"143.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"286.47\" cy=\"-160.8\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"286.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M203.95,-286.72C219.91,-262.56 250.46,-216.3 269.58,-187.37\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.99,-189.54 275.59,-179.27 267.15,-185.69 272.99,-189.54\"/>\n<text text-anchor=\"middle\" x=\"229.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"152.47\" cy=\"-214.8\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M185.75,-286.27C179.89,-273.87 171.71,-256.54 164.92,-242.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"167.72,-240.9 160.28,-233.35 161.39,-243.89 167.72,-240.9\"/>\n<text text-anchor=\"middle\" x=\"180.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- query -->\n<g id=\"node10\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"208.47\" cy=\"-160.8\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"208.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge12\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.3,-285.34C197.83,-261.58 202.42,-218.54 205.45,-190.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.03,-190.52 206.61,-180.21 202.07,-189.78 209.03,-190.52\"/>\n<text text-anchor=\"middle\" x=\"202.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"220.47\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"220.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M278.5,-142.82C267.14,-118.58 246.18,-73.87 232.8,-45.32\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.66,-44.18 228.25,-36.61 229.32,-47.15 235.66,-44.18\"/>\n<text text-anchor=\"middle\" x=\"272.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M142.2,-197.95C127.68,-173.37 104.87,-125.08 123.47,-88.8 136.43,-63.5 163.3,-45.29 185.48,-33.82\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"186.83,-36.57 194.28,-29.03 183.76,-30.28 186.83,-36.57\"/>\n<text text-anchor=\"middle\" x=\"126.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"39.47\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M130.66,-203.47C118.91,-197.28 104.58,-188.71 93.47,-178.8 78.67,-165.61 65.17,-147.87 55.37,-133.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"57.91,-131.91 49.49,-125.48 52.06,-135.76 57.91,-131.91\"/>\n<text text-anchor=\"middle\" x=\"96.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"173.47\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"173.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.24,-196.38C154.17,-181.88 156.18,-160.78 160.47,-142.8 161.1,-140.15 161.87,-137.43 162.72,-134.73\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.26,-136.23 166.27,-125.63 159.65,-133.91 166.26,-136.23\"/>\n<text text-anchor=\"middle\" x=\"163.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"39.47\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M39.47,-88.65C39.47,-76.84 39.47,-60.87 39.47,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"42.97,-47.41 39.47,-37.41 35.97,-47.41 42.97,-47.41\"/>\n<text text-anchor=\"middle\" x=\"42.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"none\" stroke=\"black\" cx=\"193.47\" cy=\"-392.4\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M193.47,-374.25C193.47,-362.44 193.47,-346.47 193.47,-332.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"196.97,-333.01 193.47,-323.01 189.97,-333.01 196.97,-333.01\"/>\n<text text-anchor=\"middle\" x=\"196.97\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M182.53,-89.06C189.29,-76.58 198.66,-59.28 206.39,-45\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.75,-47.14 211.43,-36.68 203.59,-43.81 209.75,-47.14\"/>\n<text text-anchor=\"middle\" x=\"204.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- query&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>query&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M213.02,-142.83C214.36,-137.14 215.68,-130.73 216.47,-124.8 219.92,-98.66 220.76,-68.6 220.83,-47.22\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"224.32,-47.3 220.8,-37.31 217.32,-47.32 224.32,-47.3\"/>\n<text text-anchor=\"middle\" x=\"223.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709527012166
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/inventory/find.cgi?search=eXplore`;"
      },
      "date": 1709527162609
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/inventory/find.cgi?search=explore`;"
      },
      "date": 1709527186610
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709527224724
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/inventory/find.cgi?search=eXplore`;"
      },
      "date": 1709527238451
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" other)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709527308698
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = [a-z] [a-z0-9]* \nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709527356484
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/inventory/find.cgi?search=explore`;"
      },
      "date": 1709527364057
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\nquery = \"?\" word \"=\" word\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\n\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709527547159
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  el.innerHTML = `<div id=pretty></div><pre id=log></pre>`;\n  window.pretty.innerHTML = result\n    .flat(9)\n    .filter(token => token)\n    .map(token)\n    .join(\" \");\n  log.unshift(...Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`),'');\n  window.log.innerText = log.join(\"\\n\");\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709527676698
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n}",
        "dot": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"334pt\" height=\"418pt\"\n viewBox=\"0.00 0.00 334.47 418.40\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 414.4)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-414.4 330.47,-414.4 330.47,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-303.6\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"63.47\" cy=\"-214.8\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M174.84,-290.16C153.92,-276.2 119.64,-253.3 94.62,-236.6\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"96.8,-233.18 86.54,-230.54 92.91,-239 96.8,-233.18\"/>\n<text text-anchor=\"middle\" x=\"143.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"286.47\" cy=\"-160.8\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"286.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M203.95,-286.72C219.91,-262.56 250.46,-216.3 269.58,-187.37\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.99,-189.54 275.59,-179.27 267.15,-185.69 272.99,-189.54\"/>\n<text text-anchor=\"middle\" x=\"229.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"152.47\" cy=\"-214.8\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M185.75,-286.27C179.89,-273.87 171.71,-256.54 164.92,-242.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"167.72,-240.9 160.28,-233.35 161.39,-243.89 167.72,-240.9\"/>\n<text text-anchor=\"middle\" x=\"180.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- query -->\n<g id=\"node10\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"208.47\" cy=\"-160.8\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"208.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge12\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.3,-285.34C197.83,-261.58 202.42,-218.54 205.45,-190.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.03,-190.52 206.61,-180.21 202.07,-189.78 209.03,-190.52\"/>\n<text text-anchor=\"middle\" x=\"202.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"220.47\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"220.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M278.5,-142.82C267.14,-118.58 246.18,-73.87 232.8,-45.32\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.66,-44.18 228.25,-36.61 229.32,-47.15 235.66,-44.18\"/>\n<text text-anchor=\"middle\" x=\"272.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M142.2,-197.95C127.68,-173.37 104.87,-125.08 123.47,-88.8 136.43,-63.5 163.3,-45.29 185.48,-33.82\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"186.83,-36.57 194.28,-29.03 183.76,-30.28 186.83,-36.57\"/>\n<text text-anchor=\"middle\" x=\"126.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M130.66,-203.47C118.91,-197.28 104.58,-188.71 93.47,-178.8 78.67,-165.61 65.17,-147.87 55.37,-133.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"57.91,-131.91 49.49,-125.48 52.06,-135.76 57.91,-131.91\"/>\n<text text-anchor=\"middle\" x=\"96.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"173.47\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"173.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.24,-196.38C154.17,-181.88 156.18,-160.78 160.47,-142.8 161.1,-140.15 161.87,-137.43 162.72,-134.73\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.26,-136.23 166.27,-125.63 159.65,-133.91 166.26,-136.23\"/>\n<text text-anchor=\"middle\" x=\"163.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M39.47,-88.65C39.47,-76.84 39.47,-60.87 39.47,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"42.97,-47.41 39.47,-37.41 35.97,-47.41 42.97,-47.41\"/>\n<text text-anchor=\"middle\" x=\"42.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-392.4\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M193.47,-374.25C193.47,-362.44 193.47,-346.47 193.47,-332.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"196.97,-333.01 193.47,-323.01 189.97,-333.01 196.97,-333.01\"/>\n<text text-anchor=\"middle\" x=\"196.97\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M182.53,-89.06C189.29,-76.58 198.66,-59.28 206.39,-45\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.75,-47.14 211.43,-36.68 203.59,-43.81 209.75,-47.14\"/>\n<text text-anchor=\"middle\" x=\"204.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- query&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>query&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M213.02,-142.83C214.36,-137.14 215.68,-130.73 216.47,-124.8 219.92,-98.66 220.76,-68.6 220.83,-47.22\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"224.32,-47.3 220.8,-37.31 217.32,-47.32 224.32,-47.3\"/>\n<text text-anchor=\"middle\" x=\"223.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709527760309
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" key (\"=\" value)?\nkey = word\nvalue = word\n\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709527899555
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "dot": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"334pt\" height=\"418pt\"\n viewBox=\"0.00 0.00 334.47 418.40\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 414.4)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-414.4 330.47,-414.4 330.47,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-303.6\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"63.47\" cy=\"-214.8\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M174.84,-290.16C153.92,-276.2 119.64,-253.3 94.62,-236.6\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"96.8,-233.18 86.54,-230.54 92.91,-239 96.8,-233.18\"/>\n<text text-anchor=\"middle\" x=\"143.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"286.47\" cy=\"-160.8\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"286.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M203.95,-286.72C219.91,-262.56 250.46,-216.3 269.58,-187.37\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.99,-189.54 275.59,-179.27 267.15,-185.69 272.99,-189.54\"/>\n<text text-anchor=\"middle\" x=\"229.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"152.47\" cy=\"-214.8\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M185.75,-286.27C179.89,-273.87 171.71,-256.54 164.92,-242.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"167.72,-240.9 160.28,-233.35 161.39,-243.89 167.72,-240.9\"/>\n<text text-anchor=\"middle\" x=\"180.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- query -->\n<g id=\"node10\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"208.47\" cy=\"-160.8\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"208.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge12\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.3,-285.34C197.83,-261.58 202.42,-218.54 205.45,-190.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.03,-190.52 206.61,-180.21 202.07,-189.78 209.03,-190.52\"/>\n<text text-anchor=\"middle\" x=\"202.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"220.47\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"220.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M278.5,-142.82C267.14,-118.58 246.18,-73.87 232.8,-45.32\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.66,-44.18 228.25,-36.61 229.32,-47.15 235.66,-44.18\"/>\n<text text-anchor=\"middle\" x=\"272.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M142.2,-197.95C127.68,-173.37 104.87,-125.08 123.47,-88.8 136.43,-63.5 163.3,-45.29 185.48,-33.82\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"186.83,-36.57 194.28,-29.03 183.76,-30.28 186.83,-36.57\"/>\n<text text-anchor=\"middle\" x=\"126.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M130.66,-203.47C118.91,-197.28 104.58,-188.71 93.47,-178.8 78.67,-165.61 65.17,-147.87 55.37,-133.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"57.91,-131.91 49.49,-125.48 52.06,-135.76 57.91,-131.91\"/>\n<text text-anchor=\"middle\" x=\"96.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"173.47\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"173.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.24,-196.38C154.17,-181.88 156.18,-160.78 160.47,-142.8 161.1,-140.15 161.87,-137.43 162.72,-134.73\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.26,-136.23 166.27,-125.63 159.65,-133.91 166.26,-136.23\"/>\n<text text-anchor=\"middle\" x=\"163.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M39.47,-88.65C39.47,-76.84 39.47,-60.87 39.47,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"42.97,-47.41 39.47,-37.41 35.97,-47.41 42.97,-47.41\"/>\n<text text-anchor=\"middle\" x=\"42.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-392.4\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M193.47,-374.25C193.47,-362.44 193.47,-346.47 193.47,-332.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"196.97,-333.01 193.47,-323.01 189.97,-333.01 196.97,-333.01\"/>\n<text text-anchor=\"middle\" x=\"196.97\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M182.53,-89.06C189.29,-76.58 198.66,-59.28 206.39,-45\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.75,-47.14 211.43,-36.68 203.59,-43.81 209.75,-47.14\"/>\n<text text-anchor=\"middle\" x=\"204.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- query&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>query&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M213.02,-142.83C214.36,-137.14 215.68,-130.73 216.47,-124.8 219.92,-98.66 220.76,-68.6 220.83,-47.22\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"224.32,-47.3 220.8,-37.31 217.32,-47.32 224.32,-47.3\"/>\n<text text-anchor=\"middle\" x=\"223.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709527972744
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" key (\"=\" value)?\nkey = word\nvalue = word / num\n\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709528056312
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709528425023
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nparam->word [label=1]\nvalue->word [label=1]\nparam->value [label=1]\nquery->param [label=1]\nurl->query [label=1]\n\n}",
        "dot": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=7]\nurl->path [label=7]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nquery->word [label=2]\nurl->query [label=1]\n\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"334pt\" height=\"418pt\"\n viewBox=\"0.00 0.00 334.47 418.40\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 414.4)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-414.4 330.47,-414.4 330.47,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-303.6\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"63.47\" cy=\"-214.8\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"63.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M174.84,-290.16C153.92,-276.2 119.64,-253.3 94.62,-236.6\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"96.8,-233.18 86.54,-230.54 92.91,-239 96.8,-233.18\"/>\n<text text-anchor=\"middle\" x=\"143.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"286.47\" cy=\"-160.8\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"286.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M203.95,-286.72C219.91,-262.56 250.46,-216.3 269.58,-187.37\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"272.99,-189.54 275.59,-179.27 267.15,-185.69 272.99,-189.54\"/>\n<text text-anchor=\"middle\" x=\"229.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"152.47\" cy=\"-214.8\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"152.47\" y=\"-210.6\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M185.75,-286.27C179.89,-273.87 171.71,-256.54 164.92,-242.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"167.72,-240.9 160.28,-233.35 161.39,-243.89 167.72,-240.9\"/>\n<text text-anchor=\"middle\" x=\"180.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- query -->\n<g id=\"node10\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"208.47\" cy=\"-160.8\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"208.47\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge12\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.3,-285.34C197.83,-261.58 202.42,-218.54 205.45,-190.06\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.03,-190.52 206.61,-180.21 202.07,-189.78 209.03,-190.52\"/>\n<text text-anchor=\"middle\" x=\"202.97\" y=\"-255\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"220.47\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"220.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M278.5,-142.82C267.14,-118.58 246.18,-73.87 232.8,-45.32\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.66,-44.18 228.25,-36.61 229.32,-47.15 235.66,-44.18\"/>\n<text text-anchor=\"middle\" x=\"272.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M142.2,-197.95C127.68,-173.37 104.87,-125.08 123.47,-88.8 136.43,-63.5 163.3,-45.29 185.48,-33.82\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"186.83,-36.57 194.28,-29.03 183.76,-30.28 186.83,-36.57\"/>\n<text text-anchor=\"middle\" x=\"126.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">7</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M130.66,-203.47C118.91,-197.28 104.58,-188.71 93.47,-178.8 78.67,-165.61 65.17,-147.87 55.37,-133.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"57.91,-131.91 49.49,-125.48 52.06,-135.76 57.91,-131.91\"/>\n<text text-anchor=\"middle\" x=\"96.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"173.47\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"173.47\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M153.24,-196.38C154.17,-181.88 156.18,-160.78 160.47,-142.8 161.1,-140.15 161.87,-137.43 162.72,-134.73\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.26,-136.23 166.27,-125.63 159.65,-133.91 166.26,-136.23\"/>\n<text text-anchor=\"middle\" x=\"163.97\" y=\"-156.6\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"39.47\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"39.47\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M39.47,-88.65C39.47,-76.84 39.47,-60.87 39.47,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"42.97,-47.41 39.47,-37.41 35.97,-47.41 42.97,-47.41\"/>\n<text text-anchor=\"middle\" x=\"42.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"193.47\" cy=\"-392.4\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"193.47\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M193.47,-374.25C193.47,-362.44 193.47,-346.47 193.47,-332.81\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"196.97,-333.01 193.47,-323.01 189.97,-333.01 196.97,-333.01\"/>\n<text text-anchor=\"middle\" x=\"196.97\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M182.53,-89.06C189.29,-76.58 198.66,-59.28 206.39,-45\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"209.75,-47.14 211.43,-36.68 203.59,-43.81 209.75,-47.14\"/>\n<text text-anchor=\"middle\" x=\"204.97\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- query&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>query&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M213.02,-142.83C214.36,-137.14 215.68,-130.73 216.47,-124.8 219.92,-98.66 220.76,-68.6 220.83,-47.22\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"224.32,-47.3 220.8,-37.31 217.32,-47.32 224.32,-47.3\"/>\n<text text-anchor=\"middle\" x=\"223.97\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709528453787
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url ([\\n] url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^\\n]+\n\n`;"
      },
      "date": 1709528610893
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm\nhttps://c2.com/ward/sys/find.cgi?search=explore`"
      },
      "date": 1709528663943
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/find.cgi?search=explore`"
      },
      "date": 1709528711329
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709528733774
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/find.cgi?search=explore&list=7`"
      },
      "date": 1709528803194
    },
    {
      "type": "edit",
      "id": "540a64f800d7fd6f",
      "item": {
        "type": "code",
        "id": "540a64f800d7fd6f",
        "text": "const rawtext = `https://cdn.jsdelivr.net/npm/peggy@4.0.2/esm,https://c2.com/ward/sys/find.cgi?search=explore&start=3&list=7`"
      },
      "date": 1709528836012
    },
    {
      "type": "edit",
      "id": "dbedc91473de3ea9",
      "item": {
        "type": "graphviz",
        "id": "dbedc91473de3ea9",
        "text": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=6]\nurl->path [label=6]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nparam->word [label=3]\nvalue->word [label=1]\nparam->value [label=3]\nquery->param [label=3]\nvalue->num [label=2]\nurl->query [label=1]\n\n}",
        "dot": "digraph {node[style=filled fillcolor=palegreen]\n\nurl->protocol [label=2]\ndomain->word [label=5]\nurl->domain [label=2]\npath->word [label=6]\nurl->path [label=6]\nversion->num [label=3]\npath->version [label=1]\nstart->url [label=2]\nsuffix->word [label=1]\npath->suffix [label=1]\nparam->word [label=3]\nvalue->word [label=1]\nparam->value [label=3]\nquery->param [label=3]\nvalue->num [label=2]\nurl->query [label=1]\n\n}",
        "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"461pt\" height=\"507pt\"\n viewBox=\"0.00 0.00 460.68 507.20\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 503.2)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-503.2 456.68,-503.2 456.68,4 -4,4\"/>\n<!-- url -->\n<g id=\"node1\" class=\"node\">\n<title>url</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"137.22\" cy=\"-392.4\" rx=\"27\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.22\" y=\"-388.2\" font-family=\"Times,serif\" font-size=\"14.00\">url</text>\n</g>\n<!-- protocol -->\n<g id=\"node2\" class=\"node\">\n<title>protocol</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"43.22\" cy=\"-303.6\" rx=\"43.22\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"43.22\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">protocol</text>\n</g>\n<!-- url&#45;&gt;protocol -->\n<g id=\"edge1\" class=\"edge\">\n<title>url&#45;&gt;protocol</title>\n<path fill=\"none\" stroke=\"black\" d=\"M117.44,-380.04C107.28,-373.73 95.01,-365.36 85.22,-356.4 76.51,-348.43 68.07,-338.59 61.07,-329.63\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"63.42,-327.93 54.59,-322.07 57.84,-332.16 63.42,-327.93\"/>\n<text text-anchor=\"middle\" x=\"88.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- domain -->\n<g id=\"node3\" class=\"node\">\n<title>domain</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"112.22\" cy=\"-249.6\" rx=\"40\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"112.22\" y=\"-245.4\" font-family=\"Times,serif\" font-size=\"14.00\">domain</text>\n</g>\n<!-- url&#45;&gt;domain -->\n<g id=\"edge3\" class=\"edge\">\n<title>url&#45;&gt;domain</title>\n<path fill=\"none\" stroke=\"black\" d=\"M134.15,-374.14C129.92,-350.28 122.23,-306.96 117.17,-278.48\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"120.5,-278.24 115.31,-269.01 113.61,-279.46 120.5,-278.24\"/>\n<text text-anchor=\"middle\" x=\"134.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- path -->\n<g id=\"node5\" class=\"node\">\n<title>path</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"328.22\" cy=\"-195.6\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"328.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">path</text>\n</g>\n<!-- url&#45;&gt;path -->\n<g id=\"edge5\" class=\"edge\">\n<title>url&#45;&gt;path</title>\n<path fill=\"none\" stroke=\"black\" d=\"M154.01,-377.82C170.58,-364.16 196.4,-342.23 217.22,-321.6 251.14,-287.97 287.33,-245.91 308.85,-220.17\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"312.12,-222.71 315.82,-212.78 306.73,-218.23 312.12,-222.71\"/>\n<text text-anchor=\"middle\" x=\"253.72\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">6</text>\n</g>\n<!-- query -->\n<g id=\"node12\" class=\"node\">\n<title>query</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"175.22\" cy=\"-303.6\" rx=\"33.02\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"175.22\" y=\"-299.4\" font-family=\"Times,serif\" font-size=\"14.00\">query</text>\n</g>\n<!-- url&#45;&gt;query -->\n<g id=\"edge16\" class=\"edge\">\n<title>url&#45;&gt;query</title>\n<path fill=\"none\" stroke=\"black\" d=\"M144.55,-374.66C149.93,-362.38 157.34,-345.43 163.54,-331.28\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"166.98,-333.14 167.78,-322.58 160.57,-330.34 166.98,-333.14\"/>\n<text text-anchor=\"middle\" x=\"163.72\" y=\"-343.8\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- word -->\n<g id=\"node4\" class=\"node\">\n<title>word</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"195.22\" cy=\"-18\" rx=\"30.88\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"195.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">word</text>\n</g>\n<!-- domain&#45;&gt;word -->\n<g id=\"edge2\" class=\"edge\">\n<title>domain&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M111.53,-231.31C110.93,-195.14 114.03,-110.2 152.22,-54 156.12,-48.25 161.25,-42.96 166.59,-38.33\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"168.37,-40.59 174.02,-31.62 164.02,-35.11 168.37,-40.59\"/>\n<text text-anchor=\"middle\" x=\"122.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">5</text>\n</g>\n<!-- path&#45;&gt;word -->\n<g id=\"edge4\" class=\"edge\">\n<title>path&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M331.8,-177.46C335.46,-155.31 338.56,-116.33 322.22,-88.8 303.21,-56.77 263.71,-38.44 233.78,-28.68\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"235.23,-25.16 224.64,-25.58 233.18,-31.85 235.23,-25.16\"/>\n<text text-anchor=\"middle\" x=\"336.72\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">6</text>\n</g>\n<!-- version -->\n<g id=\"node6\" class=\"node\">\n<title>version</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"413.22\" cy=\"-106.8\" rx=\"39.47\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"413.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">version</text>\n</g>\n<!-- path&#45;&gt;version -->\n<g id=\"edge7\" class=\"edge\">\n<title>path&#45;&gt;version</title>\n<path fill=\"none\" stroke=\"black\" d=\"M342.92,-180.01C349.2,-173.75 356.59,-166.34 363.22,-159.6 372.21,-150.45 382.02,-140.32 390.55,-131.46\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"392.56,-134.37 396.97,-124.74 387.52,-129.52 392.56,-134.37\"/>\n<text text-anchor=\"middle\" x=\"381.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- suffix -->\n<g id=\"node9\" class=\"node\">\n<title>suffix</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"279.22\" cy=\"-106.8\" rx=\"33.57\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"279.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">suffix</text>\n</g>\n<!-- path&#45;&gt;suffix -->\n<g id=\"edge10\" class=\"edge\">\n<title>path&#45;&gt;suffix</title>\n<path fill=\"none\" stroke=\"black\" d=\"M319,-178.27C311.93,-165.74 302.03,-148.2 293.87,-133.76\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"296.52,-132.34 288.56,-125.35 290.43,-135.78 296.52,-132.34\"/>\n<text text-anchor=\"middle\" x=\"310.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- num -->\n<g id=\"node7\" class=\"node\">\n<title>num</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"334.22\" cy=\"-18\" rx=\"28.2\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"334.22\" y=\"-13.8\" font-family=\"Times,serif\" font-size=\"14.00\">num</text>\n</g>\n<!-- version&#45;&gt;num -->\n<g id=\"edge6\" class=\"edge\">\n<title>version&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M398.73,-89.88C386.48,-76.42 368.77,-56.96 355.01,-41.84\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"358.14,-39.99 348.82,-34.95 352.97,-44.7 358.14,-39.99\"/>\n<text text-anchor=\"middle\" x=\"383.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- start -->\n<g id=\"node8\" class=\"node\">\n<title>start</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"137.22\" cy=\"-481.2\" rx=\"27.66\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"137.22\" y=\"-477\" font-family=\"Times,serif\" font-size=\"14.00\">start</text>\n</g>\n<!-- start&#45;&gt;url -->\n<g id=\"edge8\" class=\"edge\">\n<title>start&#45;&gt;url</title>\n<path fill=\"none\" stroke=\"black\" d=\"M137.22,-463.05C137.22,-451.24 137.22,-435.27 137.22,-421.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"140.72,-421.81 137.22,-411.81 133.72,-421.81 140.72,-421.81\"/>\n<text text-anchor=\"middle\" x=\"140.72\" y=\"-432.6\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- suffix&#45;&gt;word -->\n<g id=\"edge9\" class=\"edge\">\n<title>suffix&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M269.39,-89.4C262.53,-78.68 252.74,-64.73 242.22,-54 236.86,-48.53 230.59,-43.26 224.41,-38.53\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"226.67,-35.12 216.53,-32.04 222.54,-40.77 226.67,-35.12\"/>\n<text text-anchor=\"middle\" x=\"258.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- param -->\n<g id=\"node10\" class=\"node\">\n<title>param</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"175.22\" cy=\"-195.6\" rx=\"35.16\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"175.22\" y=\"-191.4\" font-family=\"Times,serif\" font-size=\"14.00\">param</text>\n</g>\n<!-- param&#45;&gt;word -->\n<g id=\"edge11\" class=\"edge\">\n<title>param&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M165.02,-177.98C153.5,-157.04 137.52,-120.01 147.22,-88.8 152.54,-71.68 163.67,-55.04 173.88,-42.31\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"176.97,-45.07 180.71,-35.16 171.6,-40.57 176.97,-45.07\"/>\n<text text-anchor=\"middle\" x=\"150.72\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- value -->\n<g id=\"node11\" class=\"node\">\n<title>value</title>\n<ellipse fill=\"palegreen\" stroke=\"black\" cx=\"195.22\" cy=\"-106.8\" rx=\"31.95\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"195.22\" y=\"-102.6\" font-family=\"Times,serif\" font-size=\"14.00\">value</text>\n</g>\n<!-- param&#45;&gt;value -->\n<g id=\"edge13\" class=\"edge\">\n<title>param&#45;&gt;value</title>\n<path fill=\"none\" stroke=\"black\" d=\"M179.17,-177.45C181.94,-165.44 185.69,-149.14 188.88,-135.33\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"192.44,-136.44 191.28,-125.91 185.62,-134.87 192.44,-136.44\"/>\n<text text-anchor=\"middle\" x=\"190.72\" y=\"-147\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n<!-- value&#45;&gt;word -->\n<g id=\"edge12\" class=\"edge\">\n<title>value&#45;&gt;word</title>\n<path fill=\"none\" stroke=\"black\" d=\"M195.22,-88.65C195.22,-76.84 195.22,-60.87 195.22,-47.21\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"198.72,-47.41 195.22,-37.41 191.72,-47.41 198.72,-47.41\"/>\n<text text-anchor=\"middle\" x=\"198.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">1</text>\n</g>\n<!-- value&#45;&gt;num -->\n<g id=\"edge15\" class=\"edge\">\n<title>value&#45;&gt;num</title>\n<path fill=\"none\" stroke=\"black\" d=\"M204.15,-89.26C211.02,-77.92 221.49,-63.3 234.22,-54 252.64,-40.54 276.68,-31.91 296.58,-26.58\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"297.28,-29.77 306.14,-23.96 295.59,-22.97 297.28,-29.77\"/>\n<text text-anchor=\"middle\" x=\"237.72\" y=\"-58.2\" font-family=\"Times,serif\" font-size=\"14.00\">2</text>\n</g>\n<!-- query&#45;&gt;param -->\n<g id=\"edge14\" class=\"edge\">\n<title>query&#45;&gt;param</title>\n<path fill=\"none\" stroke=\"black\" d=\"M175.22,-285.57C175.22,-269.21 175.22,-244.19 175.22,-224.84\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"178.72,-224.94 175.22,-214.94 171.72,-224.94 178.72,-224.94\"/>\n<text text-anchor=\"middle\" x=\"178.72\" y=\"-245.4\" font-family=\"Times,serif\" font-size=\"14.00\">3</text>\n</g>\n</g>\n</svg>\n"
      },
      "date": 1709528875831
    },
    {
      "id": "dbedc91473de3ea9",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "dbedc91473de3ea9",
        "98d91e89382d47e7",
        "67726317be30143c",
        "5eb6b67568179aa3",
        "a492aeec9a80b489"
      ],
      "date": 1709528897011
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"->\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"->\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n  }\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}\n\nfunction report() {\n}"
      },
      "date": 1709529023680
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(token => token)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\");\n}\n\n"
      },
      "date": 1709529495722
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html\nHEIGHT 500"
      },
      "date": 1709529529364
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(token => token)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1709529547724
    },
    {
      "type": "remove",
      "id": "a492aeec9a80b489",
      "date": 1709529552796
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html\nHEIGHT 300"
      },
      "date": 1709529570438
    },
    {
      "type": "edit",
      "id": "6cf52409eec3988c",
      "item": {
        "type": "frame",
        "id": "6cf52409eec3988c",
        "text": "//wiki.dbbs.co/assets/pages/js-snippet-template/esm.html\nHEIGHT 400"
      },
      "date": 1709529587935
    },
    {
      "type": "add",
      "id": "7bb21663b9d51e36",
      "item": {
        "type": "paragraph",
        "id": "7bb21663b9d51e36",
        "text": "For now we copy/paste the dot diagram here."
      },
      "after": "692155b7ccfc8c36",
      "date": 1709529644781
    },
    {
      "id": "7bb21663b9d51e36",
      "type": "move",
      "order": [
        "2ece0000",
        "9a705bd5702d3a28",
        "4f6c683d1c26ea1d",
        "caa626ac93aa7d4c",
        "540a64f800d7fd6f",
        "766adc6791c49478",
        "ed4ccce931f4cd95",
        "692155b7ccfc8c36",
        "6cf52409eec3988c",
        "7bb21663b9d51e36",
        "dbedc91473de3ea9",
        "98d91e89382d47e7",
        "67726317be30143c",
        "5eb6b67568179aa3"
      ],
      "date": 1709529649784
    },
    {
      "type": "edit",
      "id": "caa626ac93aa7d4c",
      "item": {
        "type": "paragraph",
        "id": "caa626ac93aa7d4c",
        "text": "We will parse raw text, a comma-separated list of url."
      },
      "date": 1709529709977
    },
    {
      "type": "edit",
      "id": "692155b7ccfc8c36",
      "item": {
        "type": "paragraph",
        "id": "692155b7ccfc8c36",
        "text": "We pretty-print the parse result and follow that with trace generated dot diagram and a match by match log."
      },
      "date": 1709529903270
    },
    {
      "type": "edit",
      "id": "692155b7ccfc8c36",
      "item": {
        "type": "paragraph",
        "id": "692155b7ccfc8c36",
        "text": "We pretty-print the parse result and follow that with the trace generated dot and log."
      },
      "date": 1709529980473
    },
    {
      "type": "edit",
      "id": "98d91e89382d47e7",
      "item": {
        "type": "paragraph",
        "id": "98d91e89382d47e7",
        "text": "First our trace handler then the parser run and print."
      },
      "date": 1709530234262
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option).flat();\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1709530407948
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`;"
      },
      "date": 1709530615099
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\nversion = \"@\" tuple:(num \".\" num \".\" num)\n  {return tuple.flat().join(\"\")}\nword = vec:([a-z] [a-z0-9]*)\n  {return vec.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`"
      },
      "date": 1709530638136
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option)`;\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1709530811663
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from 'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option);\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1709530866518
    },
    {
      "type": "fork",
      "date": 1709531932037
    },
    {
      "type": "fork",
      "date": 1709531933957
    },
    {
      "type": "edit",
      "id": "67726317be30143c",
      "item": {
        "type": "code",
        "id": "67726317be30143c",
        "text": "const stack = [];\nconst log = [];\nconst tally = {};\nfunction trace({type,rule,result}) {\n\n  const show = () => {\n    log.push(\n      `${stack.join(\"->\")}, ${\n        JSON.stringify(result)}`);\n    const edge = stack.slice(-2).join(\"->\")\n    if(edge in tally) tally[edge].count++\n    else tally[edge]={count:1}\n  }\n    \n  switch(type) {\n    case 'rule.enter': stack.push(rule); break\n    case 'rule.fail': stack.pop(); break;\n    case 'rule.match':\n      show(); stack.pop(); break\n  }\n}"
      },
      "date": 1709531948618
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "import peggy from \n  'https://cdn.jsdelivr.net/npm/peggy@4.0.2/+esm';\nexport async function emit(el) {\n  const option = {trace:true,tracer:{trace}};\n  const parser = peggy.generate(grammar,option);\n  const result = parser.parse(rawtext,option);\n  const style = `style=\"background-color:white\"`;\n  const token = t => `<code ${style}>${t}</code>`;\n  const pretty = result\n    .flat(9)\n    .filter(t => t)\n    .map(token)\n    .join(\" \");\n  const dot = Object.entries(tally)\n    .map(t =>`${t[0]} [label=${t[1].count}]`)\n    .join(\"\\n\")\n  el.innerHTML = `\n    <div>${pretty}</div>\n    <pre>${dot}</pre>\n    <pre>${log.join(\"\\n\")}</pre>`;\n}\n\n"
      },
      "date": 1709531992412
    },
    {
      "type": "edit",
      "id": "ed4ccce931f4cd95",
      "item": {
        "type": "code",
        "id": "ed4ccce931f4cd95",
        "text": "const grammar = `\n\nstart = url (\",\" url)*\nurl = (protocol \"//\" domain path* query?) / other\nprotocol = \"http\" \"s\"? \":\"\ndomain = word (\".\" word)*\npath = \"/\" word suffix? version?\nsuffix = \".\" word\nquery = \"?\" param (\"&\" param)*\nparam = key (\"=\" value)?\nkey = word\nvalue = word / num\n\nversion = \"@\" capture:(num \".\" num \".\" num)\n  {return capture.flat().join(\"\")}\nword = capture:([a-z] [a-z0-9]*)\n  {return capture.flat().join(\"\")}\nnum = [0-9]+\nother = [^,]+\n\n`"
      },
      "date": 1709532251766
    },
    {
      "type": "add",
      "id": "08a7f25959cac94f",
      "item": {
        "type": "paragraph",
        "id": "08a7f25959cac94f",
        "text": "Trouble: I wanted newline as separator but couldn't get that to parse."
      },
      "after": "caa626ac93aa7d4c",
      "date": 1709533005592
    },
    {
      "type": "add",
      "id": "96bab6d9db18ac82",
      "item": {
        "type": "paragraph",
        "id": "96bab6d9db18ac82",
        "text": "Trouble: the other rule works when called directly but doesn't take over when url fails to match."
      },
      "after": "766adc6791c49478",
      "date": 1709533207813
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1709539558785
    }
  ]
}