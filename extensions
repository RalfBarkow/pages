{
  "title": "Extensions",
  "story": [
    {
      "type": "paragraph",
      "id": "bbf06271559022b9",
      "text": "Add behavior (but not state) to existing objects in Pharo. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Extensions.md github]"
    },
    {
      "type": "paragraph",
      "id": "cd3beb4f91599757",
      "text": "For example we might want to ask to a model object for information related to its display in a GUI, but to keep layers as cohesive as possible, we do not want display information stored in the code package of our application. In this case, we can add those methods to the model object but package those methods in a GUI package."
    },
    {
      "type": "paragraph",
      "id": "ca66dd881bad5a7f",
      "text": "Another case might be when you want to enhance the behavior of a package that is simply not your own. You could add the methods to the class in the different package, but committing those changes to source control is not practical (i.e., you don't want to make a branch of the package, and doing a pull request would take a long time, etc.). With extension methods, the changes you make to the foreign package are stored in your own package, so they belong to you."
    },
    {
      "type": "markdown",
      "id": "4671ef628865650f",
      "text": "Internally, an extension method is a method whose protocol has a pattern `*MyPackageExtendingMyClass`. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Extensions",
        "story": []
      },
      "date": 1667978859318
    },
    {
      "item": {
        "type": "factory",
        "id": "bbf06271559022b9"
      },
      "id": "bbf06271559022b9",
      "type": "add",
      "date": 1667978860924
    },
    {
      "type": "edit",
      "id": "bbf06271559022b9",
      "item": {
        "type": "paragraph",
        "id": "bbf06271559022b9",
        "text": "Add behavior (but not state) to existing objects in Pharo."
      },
      "date": 1667978866948
    },
    {
      "type": "edit",
      "id": "bbf06271559022b9",
      "item": {
        "type": "paragraph",
        "id": "bbf06271559022b9",
        "text": "Add behavior (but not state) to existing objects in Pharo. [https://github.com/pharo-open-documentation/pharo-wiki/blob/master/General/Extensions.md github]"
      },
      "date": 1667978881002
    },
    {
      "item": {
        "type": "factory",
        "id": "cd3beb4f91599757"
      },
      "id": "cd3beb4f91599757",
      "type": "add",
      "after": "bbf06271559022b9",
      "date": 1667978930505
    },
    {
      "type": "edit",
      "id": "cd3beb4f91599757",
      "item": {
        "type": "paragraph",
        "id": "cd3beb4f91599757",
        "text": "For example we might want to ask to a model object for information related to its display in a GUI, but to keep layers as cohesive as possible, we do not want display information stored in the code package of our application. In this case, we can add those methods to the model object but package those methods in a GUI package."
      },
      "date": 1667978931647
    },
    {
      "item": {
        "type": "factory",
        "id": "ca66dd881bad5a7f"
      },
      "id": "ca66dd881bad5a7f",
      "type": "add",
      "after": "cd3beb4f91599757",
      "date": 1667978980537
    },
    {
      "type": "edit",
      "id": "ca66dd881bad5a7f",
      "item": {
        "type": "paragraph",
        "id": "ca66dd881bad5a7f",
        "text": "Another case might be when you want to enhance the behavior of a package that is simply not your own. You could add the methods to the class in the different package, but committing those changes to source control is not practical (i.e., you don't want to make a branch of the package, and doing a pull request would take a long time, etc.). With extension methods, the changes you make to the foreign package are stored in your own package, so they belong to you."
      },
      "date": 1667978981707
    },
    {
      "item": {
        "type": "factory",
        "id": "4671ef628865650f"
      },
      "id": "4671ef628865650f",
      "type": "add",
      "after": "ca66dd881bad5a7f",
      "date": 1667979063120
    },
    {
      "type": "edit",
      "id": "4671ef628865650f",
      "item": {
        "type": "paragraph",
        "id": "4671ef628865650f",
        "text": "Internally, an extension method is a method whose protocol has a pattern `*MyPackageExtendingMyClass`. "
      },
      "date": 1667979064257
    },
    {
      "type": "edit",
      "id": "4671ef628865650f",
      "item": {
        "type": "markdown",
        "id": "4671ef628865650f",
        "text": "Internally, an extension method is a method whose protocol has a pattern `*MyPackageExtendingMyClass`. "
      },
      "date": 1667979065663
    }
  ]
}