{
  "title": "Zoom Grouping",
  "story": [
    {
      "type": "paragraph",
      "id": "5aaa4d18663887c5",
      "text": "When looking at [[Site Link Map]] in the Super Collaborator Thompson sees clusters of nodes that are themselves meaningful. Can we bundle these and add just them to a choice for merging with other graphs?"
    },
    {
      "type": "paragraph",
      "id": "ea7df069166bbff6",
      "text": "Print the nodes in the zoom view."
    },
    {
      "type": "code",
      "id": "47c870dac6292be4",
      "text": "[...target.getElementsByClassName('node')]\n  .forEach(node=>{\n    const s=target.getBoundingClientRect();\n    const r=node.getBoundingClientRect();\n    if(r.x>s.x && r.x+r.width<s.x+s.width &&\n       r.y>s.y && r.y+r.height<s.y+s.height)\n         {console.log(node)}})"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Zoom Grouping",
        "story": []
      },
      "date": 1703381636122
    },
    {
      "item": {
        "type": "factory",
        "id": "5aaa4d18663887c5"
      },
      "id": "5aaa4d18663887c5",
      "type": "add",
      "date": 1703381638248
    },
    {
      "type": "edit",
      "id": "5aaa4d18663887c5",
      "item": {
        "type": "paragraph",
        "id": "5aaa4d18663887c5",
        "text": "When looking at [[Site Link Map]] in the Super Collaborator Thompson sees clusters of nodes that are themselves meaningful. Can we bundle these and add just them to a choice for merging with other graphs?"
      },
      "date": 1703381751639
    },
    {
      "item": {
        "type": "factory",
        "id": "47c870dac6292be4"
      },
      "id": "47c870dac6292be4",
      "type": "add",
      "after": "5aaa4d18663887c5",
      "date": 1703381758666
    },
    {
      "type": "edit",
      "id": "47c870dac6292be4",
      "item": {
        "type": "code",
        "id": "47c870dac6292be4",
        "text": "[...target.getElementsByClassName('node')].forEach(node=>{const s=target.getBoundingClientRect(); const r = node.getBoundingClientRect(); if(r.x>s.x && r.x+r.width<s.x+s.width && r.y > s.y && r.y+r.height<s.y+s.height){console.log(node)}})`"
      },
      "date": 1703381771899
    },
    {
      "type": "edit",
      "id": "47c870dac6292be4",
      "item": {
        "type": "code",
        "id": "47c870dac6292be4",
        "text": "[...target.getElementsByClassName('node')]\n.forEach(node=>{const s=target.getBoundingClientRect(); const r = node.getBoundingClientRect(); if(r.x>s.x && r.x+r.width<s.x+s.width && r.y > s.y && r.y+r.height<s.y+s.height){console.log(node)}})`"
      },
      "date": 1703381781685
    },
    {
      "type": "edit",
      "id": "47c870dac6292be4",
      "item": {
        "type": "code",
        "id": "47c870dac6292be4",
        "text": "[...target.getElementsByClassName('node')]\n  .forEach(node=>{\n    const s=target.getBoundingClientRect();\n    const r = node.getBoundingClientRect();\n    if(r.x>s.x && r.x+r.width<s.x+s.width &&\n       r.y>s.y && r.y+r.height<s.y+s.height)\n         {console.log(node)}})"
      },
      "date": 1703381889184
    },
    {
      "type": "add",
      "id": "ea7df069166bbff6",
      "item": {
        "type": "paragraph",
        "id": "ea7df069166bbff6",
        "text": "Try this in the javascript debugger to see what is in the zoom view."
      },
      "after": "5aaa4d18663887c5",
      "date": 1703381939664
    },
    {
      "type": "edit",
      "id": "ea7df069166bbff6",
      "item": {
        "type": "paragraph",
        "id": "ea7df069166bbff6",
        "text": "Print the nodes in the zoom view."
      },
      "date": 1703381962248
    },
    {
      "type": "edit",
      "id": "47c870dac6292be4",
      "item": {
        "type": "code",
        "id": "47c870dac6292be4",
        "text": "[...target.getElementsByClassName('node')]\n  .forEach(node=>{\n    const s=target.getBoundingClientRect();\n    const r=node.getBoundingClientRect();\n    if(r.x>s.x && r.x+r.width<s.x+s.width &&\n       r.y>s.y && r.y+r.height<s.y+s.height)\n         {console.log(node)}})"
      },
      "date": 1703382969390
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1703391915181
    }
  ]
}