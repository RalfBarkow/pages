{
  "title": "2023-10-05",
  "story": [
    {
      "type": "paragraph",
      "id": "d6ca682c8332030f",
      "text": "[⇐ [[Smoothly Unfolding Sequences]]] as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
    },
    {
      "type": "paragraph",
      "id": "1bd686d8f07fc0bd",
      "text": "⇒ [[Wikifunctions]]"
    },
    {
      "type": "paragraph",
      "id": "3b4fb97c32d9a15f",
      "text": "[…] to achieve the goal of sharing a comprehensive library of natural language generation functions for hundreds of languages"
    },
    {
      "type": "paragraph",
      "id": "8e0c1e2554ae8cee",
      "text": "Abstract Wikipedia/Updates/2023-10-04 [https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Updates/2023-10-04#cite_note-1 page]"
    },
    {
      "type": "paragraph",
      "id": "842368fdc29a7344",
      "text": "Every function has arguments. It is possible to have functions with no arguments in Wikifunctions, e.g. nullary true [https://www.wikifunctions.org/wiki/Z10210 page], but such functions are of limited practical use."
    },
    {
      "type": "paragraph",
      "id": "ee55c7fa5ef2f715",
      "text": "When creating a composition to implement a function, you need to be able to reference the arguments of the function."
    },
    {
      "type": "paragraph",
      "id": "0038e1d59692e7a7",
      "text": "For example, let's look at the function that generates the regular German verb form for the second person plural: it takes one argument, the infinitive form of the verb, e.g. “denken” (to think), reduces it to the stem of the word, e.g. “denk”, and adds the letter “t” to get e.g. “denkt” (as in “ihr denkt”, “you think”)."
    },
    {
      "type": "image",
      "id": "9d32d14f28e07626",
      "text": "Function: regular German verb in the second person plural present (Z11272) [https://www.wikifunctions.org/wiki/Z11272 wikifunctions]",
      "size": "wide",
      "width": 418,
      "height": 363,
      "url": "/assets/plugins/image/939a27594bf8a85b607ae792b64f9ff0.jpg"
    },
    {
      "type": "paragraph",
      "id": "208d648b373944b4",
      "text": "I obviously entered something different than what is expected. denkt is not an infinitive."
    },
    {
      "type": "paragraph",
      "id": "b095d74071c6b51d",
      "text": "So the [[Composition]] looks as follows: "
    },
    {
      "type": "code",
      "id": "4e1dacaf56c259a7",
      "text": "join strings( stem German verb( Argument reference( infinitive ) ), “t” ) "
    },
    {
      "type": "paragraph",
      "id": "b91b760fa54b8ee8",
      "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]] ⇒ [[Parallel Poetry]] ⇒ [[Data Can Live Next to Text]] ⇒ [[Practice of Taking Away]]"
    },
    {
      "type": "markdown",
      "id": "794728c53eca97e9",
      "text": "We’re used to [[Minimal Viable Product]]s, we’re unused to [[Maximally Viable Model]]s. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page], [https://www.linkedin.com/posts/ralfbarkow_federatedwiki-activity-7115587188456611840-2TwX?utm_source=share&utm_medium=member_desktop post]\n"
    },
    {
      "type": "pagefold",
      "id": "1f5f6e767d85548a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "53a66d9499e8d2d1",
      "text": "User:WardCunningham [https://en.wikipedia.org/wiki/User:WardCunningham wikipedia]"
    },
    {
      "type": "pagefold",
      "id": "c9ce2c474eb6869f",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3347fa61ddd2a681",
      "text": "⇒ [[Stage Manager]] – Another way to provide distraction in the corner of the eye."
    },
    {
      "type": "reference",
      "id": "8bc0adb8a896228d",
      "site": "david.dojo.fed.wiki",
      "slug": "rule-of-nobody",
      "title": "Rule of Nobody",
      "text": "Another great piece of rhetoric from the queen of political rhetoric:"
    },
    {
      "type": "paragraph",
      "id": "036c7679252cb8fa",
      "text": "Open Systems Theory [https://opensystemstheory.org site], [https://www.linkedin.com/feed/update/urn:li:activity:7115231439121522688 post] – How could wiki and such websites interact?"
    },
    {
      "type": "paragraph",
      "id": "2bbfe9e03fd7de24",
      "text": "⇒ [[Croquet]] for Unity [https://croquet.io/unity/index.html page], [[Saad Sahawneh]]"
    },
    {
      "type": "paragraph",
      "id": "f8994c14aed49653",
      "text": "CauseVerse, Croquet Demo: Factory [https://causeverse.io/demo-1-croquet/ page], Croquet Demo: Gallery [https://causeverse.io/demo-2-croquet/ page]"
    },
    {
      "type": "paragraph",
      "id": "ad521a13c3cebedc",
      "text": "⇒ [[Smalltalk]] Meetup in Zurich [https://zurich.smalltalk.world/ site], [[Peter Ursprung]]"
    },
    {
      "type": "reference",
      "id": "3d17f8ac40ca737d",
      "site": "jeff.dojo.fed.wiki",
      "slug": "typescript-2023-10-04",
      "title": "Typescript 2023-10-04",
      "text": "Text extraction. See [[Typescript Archive]]"
    },
    {
      "type": "markdown",
      "text": "10:24:34 From Jeff Miller\n(Ward demonstrates Federation Search and mentions where sites might be retired or when a site might be re-tried because it's referred to by other indexed sites)\n",
      "id": "68373574181545558016"
    },
    {
      "type": "reference",
      "id": "7f32f401e5d0be0b",
      "site": "ward.dojo.fed.wiki",
      "slug": "search-index-logs",
      "title": "Search Index Logs",
      "text": "We'll mine the search index logs for insight as to what is happening in the federation."
    },
    {
      "type": "reference",
      "id": "1a46d3548f9bb213",
      "site": "search.dojo.fed.wiki",
      "slug": "federation-search-explained",
      "title": "Federation Search Explained",
      "text": "We return again to the collection of mostly Ruby scripts that implement federation search motivated by fending off slow decay based on growth and evolution in the federation itself. [https://github.com/WardCunningham/search github]"
    },
    {
      "type": "markdown",
      "text": "10:35:39 From Jeff Miller\nWard describes a design principle in wiki where a reference which can't be interpreted is returned as a simple rendering (e.g. a roster site that can't be found shows up as a gray flag with the name of the site)\nso Paul's suggestion is \"here's a site being scraped, which is not responding; but there are no other sites pointing to that site name, maybe time to forget that site?\"\n",
      "id": "23722069673314295808"
    },
    {
      "type": "markdown",
      "text": "10:41:15 From Jeff Miller\nWard's return to the design principle about echoing and continuing in the code: the \"New York\" error being logged in the federation scrape search -- a human-readable surprise in the log format.\n",
      "id": "46501367720669306880"
    },
    {
      "type": "pagefold",
      "id": "dd0c36e9967d6ca8",
      "text": "ChatGPT September 25 Version"
    },
    {
      "type": "markdown",
      "id": "3342d89fd547468c",
      "text": "The design principle you're referring to, commonly known as \"echoing and continuing,\" is a pattern used in error handling and recovery strategies in parsers and compilers. This pattern aims to gracefully handle errors without immediately aborting the parsing process. Instead, it tries to recover from the error and continue parsing as much as possible.\n\nHere's how \"echoing and continuing\" typically works:\n\n1. **Error Detection**:\n   - When an error is detected during parsing (such as a syntax error or an unexpected token), instead of throwing an immediate error or stopping the parsing process, the parser enters a recovery mode.\n\n2. **Echoing**:\n   - The parser may \"echo\" the error by emitting an error message or taking some specific action (e.g., logging the error, displaying a message to the user).\n   - This helps provide feedback about the error to the user or developer.\n\n3. **Continuing**:\n   - Instead of abruptly stopping, the parser tries to continue parsing from the point of error. It may skip or discard tokens until it finds a known, recoverable state.\n   - The goal is to find a point where parsing can resume.\n\n4. **Recovery Actions**:\n   - The parser may perform specific actions to recover from the error. These actions can include skipping tokens, inserting missing tokens, or adjusting the parse tree structure.\n\n5. **Error Reporting**:\n   - After attempting recovery, the parser may emit additional error messages or notes to provide context about the recovery process.\n\n6. **Continue Parsing**:\n   - Once recovery is attempted, the parser continues parsing the input, hoping to find a valid structure.\n   - The goal is to provide as much useful output as possible, even if there are errors in the source code.\n\nThe benefits of echoing and continuing include:\n\n- **Robustness**: It makes parsers more robust and forgiving, allowing them to handle imperfect or erroneous input without completely failing.\n\n- **Better User Experience**: It provides better feedback to users about the nature and location of errors, helping them correct the code more effectively.\n\n- **Incremental Development**: It allows developers to identify multiple errors in a single pass, rather than stopping at the first error.\n\n- **Partial Results**: It can produce partial results even in the presence of errors, which can be useful for development environments that want to show live feedback.\n\nHowever, it's worth noting that echoing and continuing can be complex to implement, especially in the context of more complex grammars or languages with intricate syntactical rules. The balance between error recovery and producing accurate results depends on the specific requirements of the parser and the language it's parsing. (ChatGPT September 25 Version)"
    },
    {
      "type": "pagefold",
      "id": "122f29f88f8aef33",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "06c19290ebd0f38e",
      "site": "checks.fed.wiki.org",
      "slug": "deferred-validation",
      "title": "Deferred Validation",
      "text": "The [[Whole Value]] that quantify a domain model have been checked to ensure that they are recognizable values, may have been further edited for suitability by the domain model and have been [[Echo Back]] to the user. All of these checks are immediate on entry. There is, however, a class of checking that should be deferred until the last possible moment."
    },
    {
      "type": "reference",
      "id": "a88832f745e97cf9",
      "site": "checks.fed.wiki.org",
      "slug": "echo-back",
      "title": "Echo Back",
      "text": "Field and cell widgits will be able to construct and deliver [[WholeValue]] to the domain model. As is normal practice in object-oriented programming, the domain model is free to extract, interpret or reject any information it is presented. This pattern considers the domain model's modest obligation to explain such selection."
    },
    {
      "type": "markdown",
      "text": "11:08:33 From Jeff Miller\nhttps://www.lunduniversity.lu.se/lup/publication/f8c76481-a422-445d-9c38-f0174b853f70\n([[Resilience Engineering]] at Lund; you would want a tablet which allows you to annotate your reading)\n",
      "id": "22209367926944079872"
    },
    {
      "type": "paragraph",
      "id": "743ffbce9155f04f",
      "text": "PATRIARCA, Riccardo, BERGSTRÖM, Johan, DI GRAVIO, Giulio and COSTANTINO, Francesco, 2018. Resilience engineering: Current status of the research and future challenges. Safety Science. Online. February 2018. Vol. 102, p. 79–100. [Accessed 5 October 2023]. DOI 10.1016/j.ssci.2017.10.005. \n"
    },
    {
      "type": "pagefold",
      "id": "713b82e0d9ccc912",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "db34010d671d6cb2",
      "text": "[…] not in the sudoers file ⇒ [[Edit the Sudoers File]]"
    },
    {
      "type": "pagefold",
      "id": "2088fc17d6dadc00",
      "text": "~"
    },
    {
      "type": "markdown",
      "text": "11:10:01 From Paul Rodwell\nhttps://blog.jonudell.net/\n",
      "id": "13367265232635527168"
    },
    {
      "type": "paragraph",
      "id": "1b1f064d5ff3e8ed",
      "text": "UDELL, Jon, 2023. How [[LLM]]s teach you things you didn’t know you didn’t know. 7 September 2023. [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]\n"
    },
    {
      "type": "markdown",
      "text": "11:44:47 From Jeff Miller\nsmall format virtual machine enthusiasts, the Hundred Rabbits Collective https://100r.co/site/home.html\n",
      "id": "4233629663657123328"
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "hundred-rabbits",
      "title": "Hundred Rabbits",
      "text": "is a small artist collective. Together, we explore the planned failability of modern technology at the bounds of the hyper-connected world. We research and test low-tech solutions and document our findings with the hope of building a more resilient future. [https://100r.co/site/about_us.html site]"
    },
    {
      "type": "markdown",
      "text": "11:46:03 From Jeff Miller\n(They are game and art developers, but their VM spec is something one could use presumably for sensor reading, for bitsy little things)\n",
      "id": "40994901871498100736"
    },
    {
      "type": "markdown",
      "text": "11:48:36 From Jeff Miller\nWard describes Raspberry Pi's approach with long-term relationships with its chip vendors; by being extra specific in how they ask for the chips, it's easier to have boards compatible with multiple generations of chips, or have other happy re-use.\n",
      "id": "91949160245061386240"
    },
    {
      "type": "paragraph",
      "id": "c49457c44c9339f6",
      "text": "[[James Adams]] and [[Eben Upton]] on designing [[Raspberry Pi]] 5 [https://www.raspberrypi.com/news/james-adams-and-eben-upton-on-designing-raspberry-pi-5/ page]"
    },
    {
      "type": "markdown",
      "text": "11:50:16 From Jeff Miller\nhttps://en.wikipedia.org/wiki/Eben_Upton\n",
      "id": "83846312778282090496"
    },
    {
      "type": "markdown",
      "text": "11:52:51 From Brian\nVictoria, I've seen your activity on https://fedwikiriver.com/ looks interesting\n",
      "id": "68819154492601704448"
    },
    {
      "type": "paragraph",
      "id": "ffd27d9d0fe71e43",
      "text": "⇒ [[Federated Wiki River]], Federated Wiki Feeds [https://feeds.fedwikiriver.com/ site]"
    },
    {
      "type": "reference",
      "id": "369ca77cb8f30a83",
      "site": "wiki.dbbs.co",
      "slug": "original-voice",
      "title": "Original Voice",
      "text": "From a decade ago, Trey Gunn talking about Original Voice."
    },
    {
      "type": "markdown",
      "text": "11:56:33 From Robert Sterbal\nhttps://books.leannebrown.com/good-and-cheap.pdf\n",
      "id": "96398676112092200960"
    },
    {
      "type": "paragraph",
      "id": "063cdea84f9fc2a3",
      "text": "BROWN, Leanne, 2014. Good Enough: Eat Well on $4/Day. ISBN 978-0-9938448-2-9. [https://books.leannebrown.com/good-and-cheap.pdf pdf]\n"
    },
    {
      "type": "pagefold",
      "id": "e64a1ef13344f78e",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4e8440f9db0db653",
      "text": "Quit [[EasyRes]]"
    },
    {
      "type": "paragraph",
      "id": "69235c51dd92be5d",
      "text": "Die Mehrwertsteuersätze in der Schweiz werden ab dem 1. Januar 2024 erhöht. Davon betroffen ist auch der Normalsatz, der von 7,7 % auf 8,1 % steigen wird."
    },
    {
      "type": "paragraph",
      "id": "6e04a4164b6e8798",
      "text": "⇒ [[Guido Baselgia]] - The Dark Light [https://www.srf.ch/play/tv/sternstunde-kunst/video/guido-baselgia---the-dark-light?urn=urn:srf:video:9d5b9799-126a-4142-bc27-01bcd730263b page]"
    },
    {
      "type": "reference",
      "id": "360681689535b0a2",
      "site": "ward.dojo.fed.wiki",
      "slug": "typescript-locator",
      "title": "Typescript Locator",
      "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. Here we setup a test case and then try automating it with an html script."
    },
    {
      "type": "image",
      "id": "fd2160f47948529c",
      "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
      "punt": {
        "name": "Screenshot 2023-10-05 at 12-36-14 Test Elm Applications.pdf",
        "type": "application/pdf",
        "size": 176685,
        "lastModified": 1696504088356,
        "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
      },
      "text": "⇒ [[Parse a String with the Grammar]] [https://www.linkedin.com/posts/ralfbarkow_tdd-elm-federatedwiki-activity-7115655109312696323-UTtV post]",
      "size": "wide",
      "width": 418,
      "height": 454,
      "url": "/assets/plugins/image/55d83f258735aecc20f79b93130fb91c.jpg"
    },
    {
      "type": "paragraph",
      "id": "5660933a7e915b80",
      "text": "LSP Mode - LSP support for Emacs [https://emacs-lsp.github.io/lsp-mode/page/installation/ page], [https://emacs-lsp.github.io/lsp-mode/page/installation/#spacemacs page]"
    },
    {
      "type": "markdown",
      "id": "541aee01340fb479",
      "text": "> lsp-mode is included in spacemacs develop branch. Add lsp to dotspacemacs-configuration-layers and configure the language that you want to use to be backed by lsp backend."
    },
    {
      "type": "paragraph",
      "id": "3a2313975aef14a9",
      "text": "mbp-rgb has a working configuration"
    },
    {
      "type": "pagefold",
      "id": "e4adaed903ca7d3d",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "c64f1c69f5d11cd8",
      "site": "found.ward.fed.wiki",
      "slug": "designing-the-pi-5",
      "title": "Designing the Pi 5",
      "text": "Raspberry Pi 5 is here, and it has been years in the making. CTO James Adams sat down with founder Eben Upton to talk about the long process and the many decisions that led to Raspberry Pi 5 coming into being."
    },
    {
      "type": "reference",
      "id": "b8d2843e4fb0371d",
      "site": "code.fed.wiki.org",
      "slug": "exploratory-parsing",
      "title": "Exploratory Parsing",
      "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
    },
    {
      "type": "image",
      "id": "932d5d09c21b9f89",
      "text": "Revise the description [https://youtu.be/HCmrVp8WR6c?t=123 video]",
      "size": "wide",
      "width": 418,
      "height": 322,
      "url": "/assets/plugins/image/a8c574e151fa589f8d8575ca64ed86ca.jpg"
    },
    {
      "type": "paragraph",
      "id": "6f6b68f716787b2f",
      "text": "⇒ [[Define a PEG Grammar]] ⇒ [[Write the Grammar That Fits]]"
    },
    {
      "type": "paragraph",
      "id": "f3ff74be83cee020",
      "text": "The description is our grammarString:"
    },
    {
      "type": "code",
      "id": "5a696e64cd863ed7",
      "text": "grammarString : String\ngrammarString =\n    \"\"\"\n    start <- <char+> {action}\n    char <- [a-z]    \n    \"\"\"\n\n"
    }
  ],
  "journal": [
    {
      "type": "edit",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "date": 1696527030395
    },
    {
      "type": "create",
      "item": {
        "title": "2023-10-05",
        "story": []
      },
      "date": 1696478969666
    },
    {
      "id": "12e8d73b1bc07f51",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "12e8d73b1bc07f51",
        "text": "We can describe the [[Sequence]] as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696478994327
    },
    {
      "id": "d6ca682c8332030f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d6ca682c8332030f",
        "text": "So where are we now within which [[Sequence]]? [⇐ [[Smoothly Unfolding Sequences]]]"
      },
      "attribution": {
        "page": "2023-10-04"
      },
      "date": 1696479001005
    },
    {
      "type": "edit",
      "id": "d6ca682c8332030f",
      "item": {
        "type": "paragraph",
        "id": "d6ca682c8332030f",
        "text": "[⇐ [[Smoothly Unfolding Sequences]]]"
      },
      "date": 1696479016280
    },
    {
      "type": "remove",
      "id": "12e8d73b1bc07f51",
      "date": 1696479031204
    },
    {
      "type": "edit",
      "id": "d6ca682c8332030f",
      "item": {
        "type": "paragraph",
        "id": "d6ca682c8332030f",
        "text": "[⇐ [[Smoothly Unfolding Sequences]]] as a [[Lineup]]: ⇒ [[Exploratory Parsing]] ⇒ [[Write the Grammar That Fits]] ⇒ [[Define a PEG Grammar]] ⇒ [[Parse a String with the Grammar]] ⇒ [[Parse Wiki-Style Links]] ⇒ [[multiComment]]"
      },
      "date": 1696479032604
    },
    {
      "item": {
        "type": "factory",
        "id": "a7229dcc28cc26ee"
      },
      "id": "a7229dcc28cc26ee",
      "type": "add",
      "after": "d6ca682c8332030f",
      "date": 1696479035591
    },
    {
      "type": "edit",
      "id": "a7229dcc28cc26ee",
      "item": {
        "type": "graphviz",
        "id": "a7229dcc28cc26ee",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1696479045932
    },
    {
      "item": {
        "type": "factory",
        "id": "1bd686d8f07fc0bd"
      },
      "id": "1bd686d8f07fc0bd",
      "type": "add",
      "after": "a7229dcc28cc26ee",
      "date": 1696479532844
    },
    {
      "type": "edit",
      "id": "1bd686d8f07fc0bd",
      "item": {
        "type": "paragraph",
        "id": "1bd686d8f07fc0bd",
        "text": "⇒ [[Wikifunctions]]"
      },
      "date": 1696479559111
    },
    {
      "item": {
        "type": "factory",
        "id": "8e0c1e2554ae8cee"
      },
      "id": "8e0c1e2554ae8cee",
      "type": "add",
      "after": "1bd686d8f07fc0bd",
      "date": 1696479579963
    },
    {
      "type": "edit",
      "id": "8e0c1e2554ae8cee",
      "item": {
        "type": "paragraph",
        "id": "8e0c1e2554ae8cee",
        "text": "Abstract Wikipedia/Updates/2023-10-04"
      },
      "date": 1696479583819
    },
    {
      "type": "edit",
      "id": "8e0c1e2554ae8cee",
      "item": {
        "type": "paragraph",
        "id": "8e0c1e2554ae8cee",
        "text": "Abstract Wikipedia/Updates/2023-10-04 [https://meta.wikimedia.org/wiki/Abstract_Wikipedia/Updates/2023-10-04#cite_note-1 page]"
      },
      "date": 1696479592486
    },
    {
      "item": {
        "type": "factory",
        "id": "842368fdc29a7344"
      },
      "id": "842368fdc29a7344",
      "type": "add",
      "after": "8e0c1e2554ae8cee",
      "date": 1696479607277
    },
    {
      "type": "edit",
      "id": "842368fdc29a7344",
      "item": {
        "type": "paragraph",
        "id": "842368fdc29a7344",
        "text": "Every function has arguments."
      },
      "date": 1696479611118
    },
    {
      "type": "edit",
      "id": "842368fdc29a7344",
      "item": {
        "type": "paragraph",
        "id": "842368fdc29a7344",
        "text": "Every function has arguments. It is possible to have functions with no arguments in Wikifunctions, e.g. nullary true, but such functions are of limited practical use."
      },
      "date": 1696479628993
    },
    {
      "type": "edit",
      "id": "842368fdc29a7344",
      "item": {
        "type": "paragraph",
        "id": "842368fdc29a7344",
        "text": "Every function has arguments. It is possible to have functions with no arguments in Wikifunctions, e.g. nullary true [https://www.wikifunctions.org/wiki/Z10210 page], but such functions are of limited practical use."
      },
      "date": 1696479646836
    },
    {
      "item": {
        "type": "factory",
        "id": "3b4fb97c32d9a15f"
      },
      "id": "3b4fb97c32d9a15f",
      "type": "add",
      "after": "842368fdc29a7344",
      "date": 1696479752749
    },
    {
      "type": "edit",
      "id": "3b4fb97c32d9a15f",
      "item": {
        "type": "paragraph",
        "id": "3b4fb97c32d9a15f",
        "text": "[…] to achieve the goal of sharing a comprehensive library of natural language generation functions for hundreds of languages"
      },
      "date": 1696479756846
    },
    {
      "type": "add",
      "id": "ee55c7fa5ef2f715",
      "item": {
        "type": "paragraph",
        "id": "ee55c7fa5ef2f715",
        "text": "When creating a composition to implement a function, you need to be able to reference the arguments of the function. "
      },
      "after": "842368fdc29a7344",
      "date": 1696479833284
    },
    {
      "item": {
        "type": "factory",
        "id": "9d32d14f28e07626"
      },
      "id": "9d32d14f28e07626",
      "type": "add",
      "after": "3b4fb97c32d9a15f",
      "date": 1696482582669
    },
    {
      "type": "edit",
      "id": "9d32d14f28e07626",
      "item": {
        "type": "image",
        "id": "9d32d14f28e07626",
        "text": "Function: regular German verb in the second person plural present (Z11272)",
        "size": "wide",
        "width": 418,
        "height": 363,
        "url": "/assets/plugins/image/939a27594bf8a85b607ae792b64f9ff0.jpg"
      },
      "date": 1696482619056
    },
    {
      "type": "edit",
      "id": "9d32d14f28e07626",
      "item": {
        "type": "image",
        "id": "9d32d14f28e07626",
        "text": "Function: regular German verb in the second person plural present (Z11272) [https://www.wikifunctions.org/wiki/Z11272 wikifunctions]",
        "size": "wide",
        "width": 418,
        "height": 363,
        "url": "/assets/plugins/image/939a27594bf8a85b607ae792b64f9ff0.jpg"
      },
      "date": 1696482665950
    },
    {
      "item": {
        "type": "factory",
        "id": "53a66d9499e8d2d1"
      },
      "id": "53a66d9499e8d2d1",
      "type": "add",
      "after": "9d32d14f28e07626",
      "date": 1696482884048
    },
    {
      "type": "edit",
      "id": "53a66d9499e8d2d1",
      "item": {
        "type": "paragraph",
        "id": "53a66d9499e8d2d1",
        "text": "https://en.wikipedia.org/wiki/User:WardCunningham"
      },
      "date": 1696482891286
    },
    {
      "type": "edit",
      "id": "53a66d9499e8d2d1",
      "item": {
        "type": "paragraph",
        "id": "53a66d9499e8d2d1",
        "text": "User:WardCunningham [https://en.wikipedia.org/wiki/User:WardCunningham wikipedia]"
      },
      "date": 1696482916544
    },
    {
      "item": {
        "type": "factory",
        "id": "1f5f6e767d85548a"
      },
      "id": "1f5f6e767d85548a",
      "type": "add",
      "after": "53a66d9499e8d2d1",
      "date": 1696483478980
    },
    {
      "id": "1f5f6e767d85548a",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "3b4fb97c32d9a15f",
        "9d32d14f28e07626",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1"
      ],
      "date": 1696483481785
    },
    {
      "type": "edit",
      "id": "1f5f6e767d85548a",
      "item": {
        "type": "pagefold",
        "id": "1f5f6e767d85548a",
        "text": "~"
      },
      "date": 1696483484960
    },
    {
      "item": {
        "type": "factory",
        "id": "208d648b373944b4"
      },
      "id": "208d648b373944b4",
      "type": "add",
      "after": "53a66d9499e8d2d1",
      "date": 1696483574928
    },
    {
      "id": "208d648b373944b4",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "3b4fb97c32d9a15f",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1"
      ],
      "date": 1696483577835
    },
    {
      "type": "edit",
      "id": "208d648b373944b4",
      "item": {
        "type": "paragraph",
        "id": "208d648b373944b4",
        "text": "I obviously entered something different than what is expected."
      },
      "date": 1696483578998
    },
    {
      "type": "edit",
      "id": "208d648b373944b4",
      "item": {
        "type": "paragraph",
        "id": "208d648b373944b4",
        "text": "I obviously entered something different than what is expected. denkt is not an infinitiv."
      },
      "date": 1696483611879
    },
    {
      "item": {
        "type": "factory",
        "id": "c9ce2c474eb6869f"
      },
      "id": "c9ce2c474eb6869f",
      "type": "add",
      "after": "53a66d9499e8d2d1",
      "date": 1696483622132
    },
    {
      "type": "edit",
      "id": "c9ce2c474eb6869f",
      "item": {
        "type": "pagefold",
        "id": "c9ce2c474eb6869f",
        "text": "~"
      },
      "date": 1696483624968
    },
    {
      "item": {
        "type": "factory",
        "id": "3347fa61ddd2a681"
      },
      "id": "3347fa61ddd2a681",
      "type": "add",
      "after": "c9ce2c474eb6869f",
      "date": 1696483626498
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "Stage Manager"
      },
      "date": 1696483629044
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "Stage Manager [https://support.apple.com/de-de/HT213315 page]"
      },
      "date": 1696483639388
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "Stage Manager [https://support.apple.com/de-de/HT213315 page], [https://support.apple.com/de-de/guide/mac-help/mchl534ba392/mac page]"
      },
      "date": 1696484617894
    },
    {
      "item": {
        "type": "factory",
        "id": "8bc0adb8a896228d"
      },
      "id": "8bc0adb8a896228d",
      "type": "add",
      "after": "3347fa61ddd2a681",
      "date": 1696484975202
    },
    {
      "type": "edit",
      "id": "8bc0adb8a896228d",
      "item": {
        "type": "reference",
        "id": "8bc0adb8a896228d",
        "site": "david.dojo.fed.wiki",
        "slug": "rule-of-nobody",
        "title": "Rule of Nobody",
        "text": "Another great piece of rhetoric from the queen of political rhetoric:"
      },
      "date": 1696484977916
    },
    {
      "type": "edit",
      "id": "ee55c7fa5ef2f715",
      "item": {
        "type": "paragraph",
        "id": "ee55c7fa5ef2f715",
        "text": "When creating a composition to implement a function, you need to be able to reference the arguments of the function."
      },
      "date": 1696485565545
    },
    {
      "type": "add",
      "id": "0038e1d59692e7a7",
      "item": {
        "type": "paragraph",
        "id": "0038e1d59692e7a7",
        "text": " For example, let's look at the function that generates the regular German verb form for the second person plural: it takes one argument, the infinitive form of the verb, e.g. “denken” (to think), reduces it to the stem of the word, e.g. “denk”, and adds the letter “t” to get e.g. “denkt” (as in “ihr denkt”, “you think”)."
      },
      "after": "ee55c7fa5ef2f715",
      "date": 1696485566425
    },
    {
      "type": "edit",
      "id": "0038e1d59692e7a7",
      "item": {
        "type": "paragraph",
        "id": "0038e1d59692e7a7",
        "text": "For example, let's look at the function that generates the regular German verb form for the second person plural: it takes one argument, the infinitive form of the verb, e.g. “denken” (to think), reduces it to the stem of the word, e.g. “denk”, and adds the letter “t” to get e.g. “denkt” (as in “ihr denkt”, “you think”)."
      },
      "date": 1696485570436
    },
    {
      "id": "3b4fb97c32d9a15f",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "8e0c1e2554ae8cee",
        "3b4fb97c32d9a15f",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d"
      ],
      "date": 1696485577884
    },
    {
      "id": "3b4fb97c32d9a15f",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d"
      ],
      "date": 1696485582983
    },
    {
      "type": "add",
      "id": "b095d74071c6b51d",
      "item": {
        "type": "paragraph",
        "id": "b095d74071c6b51d",
        "text": "So the composition looks as follows: "
      },
      "after": "208d648b373944b4",
      "date": 1696485617197
    },
    {
      "item": {
        "type": "factory",
        "id": "4e1dacaf56c259a7"
      },
      "id": "4e1dacaf56c259a7",
      "type": "add",
      "after": "8bc0adb8a896228d",
      "date": 1696485623783
    },
    {
      "id": "4e1dacaf56c259a7",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d"
      ],
      "date": 1696485626383
    },
    {
      "type": "edit",
      "id": "4e1dacaf56c259a7",
      "item": {
        "type": "code",
        "id": "4e1dacaf56c259a7",
        "text": "join strings( stem German verb( Argument reference( infinitive ) ), “t” ) "
      },
      "date": 1696485628837
    },
    {
      "type": "edit",
      "id": "b095d74071c6b51d",
      "item": {
        "type": "paragraph",
        "id": "b095d74071c6b51d",
        "text": "So the [[Composition]] looks as follows: "
      },
      "date": 1696485680181
    },
    {
      "id": "b91b760fa54b8ee8",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]"
      },
      "after": "4e1dacaf56c259a7",
      "attribution": {
        "page": "Composition"
      },
      "date": 1696485711144
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "Stage Manager [https://support.apple.com/de-de/HT213315 page], [https://support.apple.com/de-de/guide/mac-help/mchl534ba392/mac page] – Another way to provide distraction in the corner of the eye."
      },
      "date": 1696485826065
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "⇒ [[Stage Manager]] [https://support.apple.com/de-de/HT213315 page], [https://support.apple.com/de-de/guide/mac-help/mchl534ba392/mac page] – Another way to provide distraction in the corner of the eye."
      },
      "date": 1696485865751
    },
    {
      "type": "edit",
      "id": "3347fa61ddd2a681",
      "item": {
        "type": "paragraph",
        "id": "3347fa61ddd2a681",
        "text": "⇒ [[Stage Manager]] – Another way to provide distraction in the corner of the eye."
      },
      "date": 1696486106698
    },
    {
      "item": {
        "type": "factory",
        "id": "5deb34c95c344e9b"
      },
      "id": "5deb34c95c344e9b",
      "type": "add",
      "after": "8bc0adb8a896228d",
      "date": 1696486321911
    },
    {
      "type": "edit",
      "id": "208d648b373944b4",
      "item": {
        "type": "paragraph",
        "id": "208d648b373944b4",
        "text": "I obviously entered something different than what is expected. denkt is not an infinitive."
      },
      "date": 1696486903311
    },
    {
      "type": "edit",
      "id": "b91b760fa54b8ee8",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]]"
      },
      "date": 1696486959477
    },
    {
      "type": "edit",
      "id": "b91b760fa54b8ee8",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]] Parallel Poetry"
      },
      "date": 1696486973126
    },
    {
      "type": "edit",
      "id": "b91b760fa54b8ee8",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]] ⇒ [[Parallel Poetry]]"
      },
      "date": 1696487002125
    },
    {
      "id": "1cbb401749a42d63",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "1cbb401749a42d63",
        "text": "> I have worked in educational materials reuse for ages, and looked at every tool imaginable — they all try to deal with reuse at the level of the page, and bad things happen. But the paragraph/item! Suddenly revision histories make sense, partial reuse is simple, data can live next to [[Text]] in harmony.\n"
      },
      "after": "b91b760fa54b8ee8",
      "attribution": {
        "page": "Paragraphs as Atomic Structure"
      },
      "date": 1696487290366
    },
    {
      "type": "edit",
      "id": "1cbb401749a42d63",
      "item": {
        "type": "markdown",
        "id": "1cbb401749a42d63",
        "text": "> […], data can live next to [[Text]] in harmony.\n"
      },
      "date": 1696487299728
    },
    {
      "type": "edit",
      "id": "1cbb401749a42d63",
      "item": {
        "type": "markdown",
        "id": "1cbb401749a42d63",
        "text": "> […], [[Data]] can live next to [[Text]] in harmony.\n"
      },
      "date": 1696487313039
    },
    {
      "id": "5deb34c95c344e9b",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "1cbb401749a42d63",
        "5deb34c95c344e9b",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d"
      ],
      "date": 1696487344740
    },
    {
      "type": "edit",
      "id": "5deb34c95c344e9b",
      "item": {
        "type": "paragraph",
        "id": "5deb34c95c344e9b",
        "text": "[[Data Can Live Next to Text]] "
      },
      "date": 1696487364016
    },
    {
      "type": "remove",
      "id": "1cbb401749a42d63",
      "date": 1696487398247
    },
    {
      "type": "remove",
      "id": "5deb34c95c344e9b",
      "date": 1696487402203
    },
    {
      "type": "edit",
      "id": "b91b760fa54b8ee8",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]] ⇒ [[Parallel Poetry]] ⇒ [[Data Can Live Next to Text]] "
      },
      "date": 1696487411631
    },
    {
      "id": "794728c53eca97e9",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "There’s maybe ten ideas in federated wiki like that — where Ward has (as [[Mike Caulfield]]  thinks) realized either that complexity was being generated by having the wrong underlying model or that generative potential was being quashed. And each one on its own could radically change things. But it’s hard for people to see that part until they start digging in. We’re used to minimal viable products, we’re unused to maximally viable models. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "after": "b91b760fa54b8ee8",
      "attribution": {
        "page": "Paragraphs as Atomic Structure"
      },
      "date": 1696487527301
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to minimal viable products, we’re unused to maximally viable models. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "date": 1696487535461
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to [[minimal viable product]]s, we’re unused to maximally viable models. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "date": 1696487619466
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to [[Minimal Viable Product]]s, we’re unused to maximally viable models. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "date": 1696487672917
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to [[Minimal Viable Product]]s, we’re unused to [[maximally viable model]]s. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "date": 1696487685850
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to [[Minimal Viable Product]]s, we’re unused to [[Maximally Viable Model]]s. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page]\n"
      },
      "date": 1696487699957
    },
    {
      "type": "edit",
      "id": "5deb34c95c344e9b",
      "item": {
        "type": "paragraph",
        "id": "5deb34c95c344e9b",
        "text": "Wie Wissenstransfer beim Wechsel von Beschäftigten funktionieren kann –ein Praxisbeispiel aus einer Berliner Behörde und allgemeine Empfehlungen"
      },
      "date": 1696487925175
    },
    {
      "type": "edit",
      "id": "5deb34c95c344e9b",
      "item": {
        "type": "paragraph",
        "id": "5deb34c95c344e9b",
        "text": "Wie Wissenstransfer beim Wechsel von Beschäftigten funktionieren kann –ein Praxisbeispiel aus einer Berliner Behörde und allgemeine Empfehlungen [https://agile-verwaltung.org/2023/10/05/wie-wissenstransfer-beim-wechsel-von-beschaftigten-funktionieren-kann-ein-praxisbeispiel-aus-einer-berliner-behorde-und-allgemeine-empfehlungen/ page]"
      },
      "date": 1696487932382
    },
    {
      "type": "edit",
      "id": "794728c53eca97e9",
      "item": {
        "type": "markdown",
        "id": "794728c53eca97e9",
        "text": "We’re used to [[Minimal Viable Product]]s, we’re unused to [[Maximally Viable Model]]s. [https://blog.jonudell.net/2014/12/30/federated-wiki-for-teaching-and-learning-basic-composition/ page], [https://www.linkedin.com/posts/ralfbarkow_federatedwiki-activity-7115587188456611840-2TwX?utm_source=share&utm_medium=member_desktop post]\n"
      },
      "date": 1696488360789
    },
    {
      "item": {
        "type": "factory",
        "id": "036c7679252cb8fa"
      },
      "id": "036c7679252cb8fa",
      "type": "add",
      "after": "8bc0adb8a896228d",
      "date": 1696488665997
    },
    {
      "type": "edit",
      "id": "036c7679252cb8fa",
      "item": {
        "type": "paragraph",
        "id": "036c7679252cb8fa",
        "text": "Open Systems Theory"
      },
      "date": 1696488669213
    },
    {
      "type": "edit",
      "id": "036c7679252cb8fa",
      "item": {
        "type": "paragraph",
        "id": "036c7679252cb8fa",
        "text": "Open Systems Theory [https://opensystemstheory.org site]"
      },
      "date": 1696488679568
    },
    {
      "type": "edit",
      "id": "036c7679252cb8fa",
      "item": {
        "type": "paragraph",
        "id": "036c7679252cb8fa",
        "text": "Open Systems Theory [https://opensystemstheory.org site], [https://www.linkedin.com/feed/update/urn:li:activity:7115231439121522688 post]"
      },
      "date": 1696488705506
    },
    {
      "type": "edit",
      "id": "036c7679252cb8fa",
      "item": {
        "type": "paragraph",
        "id": "036c7679252cb8fa",
        "text": "Open Systems Theory [https://opensystemstheory.org site], [https://www.linkedin.com/feed/update/urn:li:activity:7115231439121522688 post] – How could wiki and such websites interact?"
      },
      "date": 1696488791758
    },
    {
      "type": "edit",
      "id": "b91b760fa54b8ee8",
      "item": {
        "type": "paragraph",
        "id": "b91b760fa54b8ee8",
        "text": "⇒ [[Paragraphs as Atomic Structure]]  ⇒ [[poetic]] ⇒ [[Parallel Poetry]] ⇒ [[Data Can Live Next to Text]] ⇒ [[Practice of Taking Away]]"
      },
      "date": 1696489213356
    },
    {
      "item": {
        "type": "factory",
        "id": "2bbfe9e03fd7de24"
      },
      "id": "2bbfe9e03fd7de24",
      "type": "add",
      "after": "036c7679252cb8fa",
      "date": 1696490087036
    },
    {
      "type": "edit",
      "id": "2bbfe9e03fd7de24",
      "item": {
        "type": "paragraph",
        "id": "2bbfe9e03fd7de24",
        "text": "Croquet for Unity"
      },
      "date": 1696490103468
    },
    {
      "type": "edit",
      "id": "2bbfe9e03fd7de24",
      "item": {
        "type": "paragraph",
        "id": "2bbfe9e03fd7de24",
        "text": "Croquet for Unity [https://croquet.io/unity/index.html page]"
      },
      "date": 1696490146057
    },
    {
      "type": "edit",
      "id": "2bbfe9e03fd7de24",
      "item": {
        "type": "paragraph",
        "id": "2bbfe9e03fd7de24",
        "text": "⇒ [[Croquet]] for Unity [https://croquet.io/unity/index.html page]"
      },
      "date": 1696490161570
    },
    {
      "type": "add",
      "id": "f8994c14aed49653",
      "item": {
        "type": "paragraph",
        "id": "f8994c14aed49653",
        "text": "CauseVerse"
      },
      "after": "2bbfe9e03fd7de24",
      "date": 1696490195377
    },
    {
      "type": "edit",
      "id": "f8994c14aed49653",
      "item": {
        "type": "paragraph",
        "id": "f8994c14aed49653",
        "text": "CauseVerse, Croquet Demo: Factory"
      },
      "date": 1696490245344
    },
    {
      "type": "edit",
      "id": "f8994c14aed49653",
      "item": {
        "type": "paragraph",
        "id": "f8994c14aed49653",
        "text": "CauseVerse, Croquet Demo: Factory [https://causeverse.io/demo-1-croquet/ page]"
      },
      "date": 1696490255431
    },
    {
      "type": "edit",
      "id": "f8994c14aed49653",
      "item": {
        "type": "paragraph",
        "id": "f8994c14aed49653",
        "text": "CauseVerse, Croquet Demo: Factory [https://causeverse.io/demo-1-croquet/ page], [https://causeverse.io/demo-2-croquet/ page]"
      },
      "date": 1696490328010
    },
    {
      "type": "edit",
      "id": "f8994c14aed49653",
      "item": {
        "type": "paragraph",
        "id": "f8994c14aed49653",
        "text": "CauseVerse, Croquet Demo: Factory [https://causeverse.io/demo-1-croquet/ page], Croquet Demo: Gallery [https://causeverse.io/demo-2-croquet/ page]"
      },
      "date": 1696490340866
    },
    {
      "type": "add",
      "id": "67794209fcefb86f",
      "item": {
        "type": "paragraph",
        "id": "67794209fcefb86f",
        "text": "[[Saad Sahawneh]]"
      },
      "after": "f8994c14aed49653",
      "date": 1696490490271
    },
    {
      "type": "add",
      "id": "ad521a13c3cebedc",
      "item": {
        "type": "paragraph",
        "id": "ad521a13c3cebedc",
        "text": "[https://zurich.smalltalk.world/ site]"
      },
      "after": "67794209fcefb86f",
      "date": 1696490681982
    },
    {
      "type": "edit",
      "id": "ad521a13c3cebedc",
      "item": {
        "type": "paragraph",
        "id": "ad521a13c3cebedc",
        "text": "⇒ [[Smalltalk]] Meetup in Zurich [https://zurich.smalltalk.world/ site]"
      },
      "date": 1696490720661
    },
    {
      "type": "edit",
      "id": "ad521a13c3cebedc",
      "item": {
        "type": "paragraph",
        "id": "ad521a13c3cebedc",
        "text": "⇒ [[Smalltalk]] Meetup in Zurich [https://zurich.smalltalk.world/ site], [Peter Ursprung]"
      },
      "date": 1696490892121
    },
    {
      "type": "edit",
      "id": "ad521a13c3cebedc",
      "item": {
        "type": "paragraph",
        "id": "ad521a13c3cebedc",
        "text": "⇒ [[Smalltalk]] Meetup in Zurich [https://zurich.smalltalk.world/ site], [[Peter Ursprung]]"
      },
      "date": 1696490899996
    },
    {
      "id": "67794209fcefb86f",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "67794209fcefb86f",
        "f8994c14aed49653",
        "ad521a13c3cebedc"
      ],
      "date": 1696491472683
    },
    {
      "type": "remove",
      "id": "67794209fcefb86f",
      "date": 1696491477583
    },
    {
      "type": "edit",
      "id": "2bbfe9e03fd7de24",
      "item": {
        "type": "paragraph",
        "id": "2bbfe9e03fd7de24",
        "text": "⇒ [[Croquet]] for Unity [https://croquet.io/unity/index.html page], [[Saad Sahawneh]]"
      },
      "date": 1696491478953
    },
    {
      "item": {
        "type": "factory",
        "id": "7f32f401e5d0be0b"
      },
      "id": "7f32f401e5d0be0b",
      "type": "add",
      "after": "ad521a13c3cebedc",
      "date": 1696491678360
    },
    {
      "type": "edit",
      "id": "7f32f401e5d0be0b",
      "item": {
        "type": "reference",
        "id": "7f32f401e5d0be0b",
        "site": "ward.dojo.fed.wiki",
        "slug": "search-index-logs",
        "title": "Search Index Logs",
        "text": "We'll mine the search index logs for insight as to what is happening in the federation."
      },
      "date": 1696491709928
    },
    {
      "item": {
        "type": "factory",
        "id": "1a46d3548f9bb213"
      },
      "id": "1a46d3548f9bb213",
      "type": "add",
      "after": "7f32f401e5d0be0b",
      "date": 1696491766332
    },
    {
      "type": "edit",
      "id": "1a46d3548f9bb213",
      "item": {
        "type": "reference",
        "id": "1a46d3548f9bb213",
        "site": "search.dojo.fed.wiki",
        "slug": "federation-search-explained",
        "title": "Federation Search Explained",
        "text": "We return again to the collection of mostly Ruby scripts that implement federation search motivated by fending off slow decay based on growth and evolution in the federation itself. [https://github.com/WardCunningham/search github]"
      },
      "date": 1696491770154
    },
    {
      "item": {
        "type": "factory",
        "id": "3d17f8ac40ca737d"
      },
      "id": "3d17f8ac40ca737d",
      "type": "add",
      "after": "1a46d3548f9bb213",
      "date": 1696491870012
    },
    {
      "type": "edit",
      "id": "3d17f8ac40ca737d",
      "item": {
        "type": "reference",
        "id": "3d17f8ac40ca737d",
        "site": "jeff.dojo.fed.wiki",
        "slug": "typescript-2023-10-04",
        "title": "Typescript 2023-10-04",
        "text": "Text extraction. See [[Typescript Archive]]"
      },
      "date": 1696491876715
    },
    {
      "id": "3d17f8ac40ca737d",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "f8994c14aed49653",
        "ad521a13c3cebedc",
        "3d17f8ac40ca737d",
        "7f32f401e5d0be0b",
        "1a46d3548f9bb213"
      ],
      "date": 1696491882051
    },
    {
      "id": "68373574181545558016",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "10:24:34 From Jeff Miller\n(Ward demonstrates Federation Search and mentions where sites might be retired or when a site might be re-tried because it's referred to by other indexed sites)\n",
        "id": "68373574181545558016"
      },
      "after": "3d17f8ac40ca737d",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696491896018
    },
    {
      "id": "23722069673314295808",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "10:35:39 From Jeff Miller\nWard describes a design principle in wiki where a reference which can't be interpreted is returned as a simple rendering (e.g. a roster site that can't be found shows up as a gray flag with the name of the site)\nso Paul's suggestion is \"here's a site being scraped, which is not responding; but there are no other sites pointing to that site name, maybe time to forget that site?\"\n",
        "id": "23722069673314295808"
      },
      "after": "1a46d3548f9bb213",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696491968383
    },
    {
      "id": "46501367720669306880",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "10:41:15 From Jeff Miller\nWard's return to the design principle about echoing and continuing in the code: the \"New York\" error being logged in the federation scrape search -- a human-readable surprise in the log format.\n",
        "id": "46501367720669306880"
      },
      "after": "23722069673314295808",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696491984476
    },
    {
      "item": {
        "type": "factory",
        "id": "3342d89fd547468c"
      },
      "id": "3342d89fd547468c",
      "type": "add",
      "after": "46501367720669306880",
      "date": 1696492089870
    },
    {
      "type": "edit",
      "id": "3342d89fd547468c",
      "item": {
        "type": "markdown",
        "id": "3342d89fd547468c",
        "text": "The design principle you're referring to, commonly known as \"echoing and continuing,\" is a pattern used in error handling and recovery strategies in parsers and compilers. This pattern aims to gracefully handle errors without immediately aborting the parsing process. Instead, it tries to recover from the error and continue parsing as much as possible.\n\nHere's how \"echoing and continuing\" typically works:\n\n1. **Error Detection**:\n   - When an error is detected during parsing (such as a syntax error or an unexpected token), instead of throwing an immediate error or stopping the parsing process, the parser enters a recovery mode.\n\n2. **Echoing**:\n   - The parser may \"echo\" the error by emitting an error message or taking some specific action (e.g., logging the error, displaying a message to the user).\n   - This helps provide feedback about the error to the user or developer.\n\n3. **Continuing**:\n   - Instead of abruptly stopping, the parser tries to continue parsing from the point of error. It may skip or discard tokens until it finds a known, recoverable state.\n   - The goal is to find a point where parsing can resume.\n\n4. **Recovery Actions**:\n   - The parser may perform specific actions to recover from the error. These actions can include skipping tokens, inserting missing tokens, or adjusting the parse tree structure.\n\n5. **Error Reporting**:\n   - After attempting recovery, the parser may emit additional error messages or notes to provide context about the recovery process.\n\n6. **Continue Parsing**:\n   - Once recovery is attempted, the parser continues parsing the input, hoping to find a valid structure.\n   - The goal is to provide as much useful output as possible, even if there are errors in the source code.\n\nThe benefits of echoing and continuing include:\n\n- **Robustness**: It makes parsers more robust and forgiving, allowing them to handle imperfect or erroneous input without completely failing.\n\n- **Better User Experience**: It provides better feedback to users about the nature and location of errors, helping them correct the code more effectively.\n\n- **Incremental Development**: It allows developers to identify multiple errors in a single pass, rather than stopping at the first error.\n\n- **Partial Results**: It can produce partial results even in the presence of errors, which can be useful for development environments that want to show live feedback.\n\nHowever, it's worth noting that echoing and continuing can be complex to implement, especially in the context of more complex grammars or languages with intricate syntactical rules. The balance between error recovery and producing accurate results depends on the specific requirements of the parser and the language it's parsing."
      },
      "date": 1696492093027
    },
    {
      "type": "edit",
      "id": "3342d89fd547468c",
      "item": {
        "type": "markdown",
        "id": "3342d89fd547468c",
        "text": "The design principle you're referring to, commonly known as \"echoing and continuing,\" is a pattern used in error handling and recovery strategies in parsers and compilers. This pattern aims to gracefully handle errors without immediately aborting the parsing process. Instead, it tries to recover from the error and continue parsing as much as possible.\n\nHere's how \"echoing and continuing\" typically works:\n\n1. **Error Detection**:\n   - When an error is detected during parsing (such as a syntax error or an unexpected token), instead of throwing an immediate error or stopping the parsing process, the parser enters a recovery mode.\n\n2. **Echoing**:\n   - The parser may \"echo\" the error by emitting an error message or taking some specific action (e.g., logging the error, displaying a message to the user).\n   - This helps provide feedback about the error to the user or developer.\n\n3. **Continuing**:\n   - Instead of abruptly stopping, the parser tries to continue parsing from the point of error. It may skip or discard tokens until it finds a known, recoverable state.\n   - The goal is to find a point where parsing can resume.\n\n4. **Recovery Actions**:\n   - The parser may perform specific actions to recover from the error. These actions can include skipping tokens, inserting missing tokens, or adjusting the parse tree structure.\n\n5. **Error Reporting**:\n   - After attempting recovery, the parser may emit additional error messages or notes to provide context about the recovery process.\n\n6. **Continue Parsing**:\n   - Once recovery is attempted, the parser continues parsing the input, hoping to find a valid structure.\n   - The goal is to provide as much useful output as possible, even if there are errors in the source code.\n\nThe benefits of echoing and continuing include:\n\n- **Robustness**: It makes parsers more robust and forgiving, allowing them to handle imperfect or erroneous input without completely failing.\n\n- **Better User Experience**: It provides better feedback to users about the nature and location of errors, helping them correct the code more effectively.\n\n- **Incremental Development**: It allows developers to identify multiple errors in a single pass, rather than stopping at the first error.\n\n- **Partial Results**: It can produce partial results even in the presence of errors, which can be useful for development environments that want to show live feedback.\n\nHowever, it's worth noting that echoing and continuing can be complex to implement, especially in the context of more complex grammars or languages with intricate syntactical rules. The balance between error recovery and producing accurate results depends on the specific requirements of the parser and the language it's parsing. (ChatGPT September 25 Version)"
      },
      "date": 1696492202107
    },
    {
      "item": {
        "type": "factory",
        "id": "dd0c36e9967d6ca8"
      },
      "id": "dd0c36e9967d6ca8",
      "type": "add",
      "after": "3342d89fd547468c",
      "date": 1696492204961
    },
    {
      "type": "edit",
      "id": "dd0c36e9967d6ca8",
      "item": {
        "type": "pagefold",
        "id": "dd0c36e9967d6ca8",
        "text": " ChatGPT September 25 Version"
      },
      "date": 1696492207511
    },
    {
      "type": "edit",
      "id": "dd0c36e9967d6ca8",
      "item": {
        "type": "pagefold",
        "id": "dd0c36e9967d6ca8",
        "text": "ChatGPT September 25 Version"
      },
      "date": 1696492213043
    },
    {
      "id": "dd0c36e9967d6ca8",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "f8994c14aed49653",
        "ad521a13c3cebedc",
        "3d17f8ac40ca737d",
        "68373574181545558016",
        "7f32f401e5d0be0b",
        "1a46d3548f9bb213",
        "23722069673314295808",
        "46501367720669306880",
        "dd0c36e9967d6ca8",
        "3342d89fd547468c"
      ],
      "date": 1696492220171
    },
    {
      "item": {
        "type": "factory",
        "id": "122f29f88f8aef33"
      },
      "id": "122f29f88f8aef33",
      "type": "add",
      "after": "3342d89fd547468c",
      "date": 1696492336803
    },
    {
      "type": "edit",
      "id": "122f29f88f8aef33",
      "item": {
        "type": "pagefold",
        "id": "122f29f88f8aef33",
        "text": "~"
      },
      "date": 1696492339860
    },
    {
      "item": {
        "type": "factory",
        "id": "06c19290ebd0f38e"
      },
      "id": "06c19290ebd0f38e",
      "type": "add",
      "after": "122f29f88f8aef33",
      "date": 1696492341919
    },
    {
      "type": "edit",
      "id": "06c19290ebd0f38e",
      "item": {
        "type": "reference",
        "id": "06c19290ebd0f38e",
        "site": "checks.fed.wiki.org",
        "slug": "deferred-validation",
        "title": "Deferred Validation",
        "text": "The [[Whole Value]] that quantify a domain model have been checked to ensure that they are recognizable values, may have been further edited for suitability by the domain model and have been [[Echo Back]] to the user. All of these checks are immediate on entry. There is, however, a class of checking that should be deferred until the last possible moment."
      },
      "date": 1696492354688
    },
    {
      "item": {
        "type": "factory",
        "id": "a88832f745e97cf9"
      },
      "id": "a88832f745e97cf9",
      "type": "add",
      "after": "06c19290ebd0f38e",
      "date": 1696492376315
    },
    {
      "type": "edit",
      "id": "a88832f745e97cf9",
      "item": {
        "type": "reference",
        "id": "a88832f745e97cf9",
        "site": "checks.fed.wiki.org",
        "slug": "echo-back",
        "title": "Echo Back",
        "text": "Field and cell widgits will be able to construct and deliver [[WholeValue]] to the domain model. As is normal practice in object-oriented programming, the domain model is free to extract, interpret or reject any information it is presented. This pattern considers the domain model's modest obligation to explain such selection."
      },
      "date": 1696492379584
    },
    {
      "item": {
        "type": "factory",
        "id": "0182f9aa0b84809a"
      },
      "id": "0182f9aa0b84809a",
      "type": "add",
      "after": "a88832f745e97cf9",
      "date": 1696493224899
    },
    {
      "type": "edit",
      "id": "0182f9aa0b84809a",
      "item": {
        "type": "graphviz",
        "id": "0182f9aa0b84809a",
        "text": "\nPATRIARCA, Riccardo, BERGSTRÖM, Johan, DI GRAVIO, Giulio and COSTANTINO, Francesco, 2018. Resilience engineering: Current status of the research and future challenges. Safety Science. Online. February 2018. Vol. 102, p. 79–100. [Accessed 5 October 2023]. DOI 10.1016/j.ssci.2017.10.005. \n"
      },
      "date": 1696493231383
    },
    {
      "type": "remove",
      "id": "0182f9aa0b84809a",
      "date": 1696493235140
    },
    {
      "item": {
        "type": "factory",
        "id": "743ffbce9155f04f"
      },
      "id": "743ffbce9155f04f",
      "type": "add",
      "after": "a88832f745e97cf9",
      "date": 1696493236074
    },
    {
      "type": "edit",
      "id": "743ffbce9155f04f",
      "item": {
        "type": "paragraph",
        "id": "743ffbce9155f04f",
        "text": "PATRIARCA, Riccardo, BERGSTRÖM, Johan, DI GRAVIO, Giulio and COSTANTINO, Francesco, 2018. Resilience engineering: Current status of the research and future challenges. Safety Science. Online. February 2018. Vol. 102, p. 79–100. [Accessed 5 October 2023]. DOI 10.1016/j.ssci.2017.10.005. \n"
      },
      "date": 1696493238037
    },
    {
      "id": "22209367926944079872",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:08:33 From Jeff Miller\nhttps://www.lunduniversity.lu.se/lup/publication/f8c76481-a422-445d-9c38-f0174b853f70\n(Resilience Engineering at Lund; you would want a tablet which allows you to annotate your reading)\n",
        "id": "22209367926944079872"
      },
      "after": "a88832f745e97cf9",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696493245489
    },
    {
      "type": "edit",
      "id": "22209367926944079872",
      "item": {
        "type": "markdown",
        "text": "11:08:33 From Jeff Miller\nhttps://www.lunduniversity.lu.se/lup/publication/f8c76481-a422-445d-9c38-f0174b853f70\n([[Resilience Engineering]] at Lund; you would want a tablet which allows you to annotate your reading)\n",
        "id": "22209367926944079872"
      },
      "date": 1696493274959
    },
    {
      "item": {
        "type": "factory",
        "id": "713b82e0d9ccc912"
      },
      "id": "713b82e0d9ccc912",
      "type": "add",
      "after": "743ffbce9155f04f",
      "date": 1696493344917
    },
    {
      "type": "edit",
      "id": "713b82e0d9ccc912",
      "item": {
        "type": "pagefold",
        "id": "713b82e0d9ccc912",
        "text": "~"
      },
      "date": 1696493348406
    },
    {
      "item": {
        "type": "factory",
        "id": "db34010d671d6cb2"
      },
      "id": "db34010d671d6cb2",
      "type": "add",
      "after": "713b82e0d9ccc912",
      "date": 1696493350402
    },
    {
      "type": "edit",
      "id": "db34010d671d6cb2",
      "item": {
        "type": "paragraph",
        "id": "db34010d671d6cb2",
        "text": "[…] not in the sudoers file"
      },
      "date": 1696493358266
    },
    {
      "type": "add",
      "id": "c6273c0693f2bb61",
      "item": {
        "type": "paragraph",
        "id": "c6273c0693f2bb61",
        "text": "How to solve \"User is not in sudoers file, incident reported\""
      },
      "after": "db34010d671d6cb2",
      "date": 1696493401469
    },
    {
      "type": "edit",
      "id": "c6273c0693f2bb61",
      "item": {
        "type": "paragraph",
        "id": "c6273c0693f2bb61",
        "text": "How to solve \"User is not in sudoers file, incident reported\" [https://apple.stackexchange.com/questions/190883/how-to-solve-user-is-not-in-sudoers-file-incident-reported stackexchange]"
      },
      "date": 1696493412283
    },
    {
      "type": "edit",
      "id": "db34010d671d6cb2",
      "item": {
        "type": "paragraph",
        "id": "db34010d671d6cb2",
        "text": "[…] not in the sudoers file ⇒ [[Edit the Sudoers File]]"
      },
      "date": 1696493481028
    },
    {
      "id": "c6273c0693f2bb61",
      "type": "remove",
      "removedTo": {
        "page": "Edit the Sudoers File"
      },
      "date": 1696493490347
    },
    {
      "item": {
        "type": "factory",
        "id": "2088fc17d6dadc00"
      },
      "id": "2088fc17d6dadc00",
      "type": "add",
      "after": "db34010d671d6cb2",
      "date": 1696494160786
    },
    {
      "type": "edit",
      "id": "2088fc17d6dadc00",
      "item": {
        "type": "pagefold",
        "id": "2088fc17d6dadc00",
        "text": "~"
      },
      "date": 1696494163117
    },
    {
      "id": "13367265232635527168",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:10:01 From Paul Rodwell\nhttps://blog.jonudell.net/\n",
        "id": "13367265232635527168"
      },
      "after": "2088fc17d6dadc00",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696494169708
    },
    {
      "item": {
        "type": "factory",
        "id": "1b1f064d5ff3e8ed"
      },
      "id": "1b1f064d5ff3e8ed",
      "type": "add",
      "after": "13367265232635527168",
      "date": 1696494178098
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "How LLMs teach you things you didn’t know you didn’t know"
      },
      "date": 1696494181876
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "UDELL, Jon, 2023. How LLMs teach you things you didn’t know you didn’t know. Jon Udell. Online. 7 September 2023. [Accessed 5 October 2023]. Available from: https://blog.jonudell.net/Strategies for Internet citizens\n"
      },
      "date": 1696494342004
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "UDELL, Jon, 2023. How LLMs teach you things you didn’t know you didn’t know. Jon Udell. Online. 7 September 2023. [Accessed 5 October 2023]. Available from: https://blog.jonudell.net/\n"
      },
      "date": 1696494356019
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "UDELL, Jon, 2023. How LLMs teach you things you didn’t know you didn’t know. 7 September 2023. [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ blog.jonudell.net]\n"
      },
      "date": 1696494395776
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "UDELL, Jon, 2023. How LLMs teach you things you didn’t know you didn’t know. 7 September 2023. [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]\n"
      },
      "date": 1696494406788
    },
    {
      "type": "edit",
      "id": "1b1f064d5ff3e8ed",
      "item": {
        "type": "paragraph",
        "id": "1b1f064d5ff3e8ed",
        "text": "UDELL, Jon, 2023. How [[LLM]]s teach you things you didn’t know you didn’t know. 7 September 2023. [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]\n"
      },
      "date": 1696494472782
    },
    {
      "id": "4233629663657123328",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:44:47 From Jeff Miller\nsmall format virtual machine enthusiasts, the Hundred Rabbits Collective https://100r.co/site/home.html\n",
        "id": "4233629663657123328"
      },
      "after": "1b1f064d5ff3e8ed",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696494725621
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "hundred-rabbits",
        "title": "Hundred Rabbits",
        "text": "is a small artist collective. Together, we explore the planned failability of modern technology at the bounds of the hyper-connected world. We research and test low-tech solutions and document our findings with the hope of building a more resilient future. [https://100r.co/site/about_us.html site]"
      },
      "after": "4233629663657123328",
      "date": 1696494750820
    },
    {
      "id": "40994901871498100736",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:46:03 From Jeff Miller\n(They are game and art developers, but their VM spec is something one could use presumably for sensor reading, for bitsy little things)\n",
        "id": "40994901871498100736"
      },
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696494767959
    },
    {
      "id": "91949160245061386240",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:48:36 From Jeff Miller\nWard describes Raspberry Pi's approach with long-term relationships with its chip vendors; by being extra specific in how they ask for the chips, it's easier to have boards compatible with multiple generations of chips, or have other happy re-use.\n",
        "id": "91949160245061386240"
      },
      "after": "40994901871498100736",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696494783275
    },
    {
      "item": {
        "type": "factory",
        "id": "c49457c44c9339f6"
      },
      "id": "c49457c44c9339f6",
      "type": "add",
      "after": "91949160245061386240",
      "date": 1696494806121
    },
    {
      "type": "edit",
      "id": "c49457c44c9339f6",
      "item": {
        "type": "paragraph",
        "id": "c49457c44c9339f6",
        "text": "James Adams and Eben Upton on designing Raspberry Pi 5"
      },
      "date": 1696494808958
    },
    {
      "type": "edit",
      "id": "c49457c44c9339f6",
      "item": {
        "type": "paragraph",
        "id": "c49457c44c9339f6",
        "text": "James Adams and Eben Upton on designing Raspberry Pi 5 [https://www.raspberrypi.com/news/james-adams-and-eben-upton-on-designing-raspberry-pi-5/ page]"
      },
      "date": 1696494816049
    },
    {
      "type": "edit",
      "id": "c49457c44c9339f6",
      "item": {
        "type": "paragraph",
        "id": "c49457c44c9339f6",
        "text": "[[James Adams]] and [[Eben Upton]] on designing [[Raspberry Pi]] 5 [https://www.raspberrypi.com/news/james-adams-and-eben-upton-on-designing-raspberry-pi-5/ page]"
      },
      "date": 1696494839286
    },
    {
      "id": "83846312778282090496",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:50:16 From Jeff Miller\nhttps://en.wikipedia.org/wiki/Eben_Upton\n",
        "id": "83846312778282090496"
      },
      "after": "c49457c44c9339f6",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696494859747
    },
    {
      "id": "68819154492601704448",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:52:51 From Brian\nVictoria, I've seen your activity on https://fedwikiriver.com/ looks interesting\n",
        "id": "68819154492601704448"
      },
      "after": "83846312778282090496",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696495030350
    },
    {
      "item": {
        "type": "factory",
        "id": "6897c0bd6aa9d2e1"
      },
      "id": "6897c0bd6aa9d2e1",
      "type": "add",
      "after": "68819154492601704448",
      "date": 1696495038767
    },
    {
      "type": "remove",
      "id": "6897c0bd6aa9d2e1",
      "date": 1696495044970
    },
    {
      "item": {
        "type": "factory",
        "id": "ffd27d9d0fe71e43"
      },
      "id": "ffd27d9d0fe71e43",
      "type": "add",
      "after": "68819154492601704448",
      "date": 1696495051858
    },
    {
      "type": "edit",
      "id": "ffd27d9d0fe71e43",
      "item": {
        "type": "paragraph",
        "id": "ffd27d9d0fe71e43",
        "text": "[[Federated Wiki River]]"
      },
      "date": 1696495061920
    },
    {
      "type": "edit",
      "id": "ffd27d9d0fe71e43",
      "item": {
        "type": "paragraph",
        "id": "ffd27d9d0fe71e43",
        "text": "⇒ [[Federated Wiki River]], Federated Wiki Feeds"
      },
      "date": 1696495315155
    },
    {
      "type": "edit",
      "id": "ffd27d9d0fe71e43",
      "item": {
        "type": "paragraph",
        "id": "ffd27d9d0fe71e43",
        "text": "⇒ [[Federated Wiki River]], Federated Wiki Feeds [https://feeds.fedwikiriver.com/ site]"
      },
      "date": 1696495362433
    },
    {
      "item": {
        "type": "factory",
        "id": "369ca77cb8f30a83"
      },
      "id": "369ca77cb8f30a83",
      "type": "add",
      "after": "ffd27d9d0fe71e43",
      "date": 1696495489039
    },
    {
      "type": "edit",
      "id": "369ca77cb8f30a83",
      "item": {
        "type": "reference",
        "id": "369ca77cb8f30a83",
        "site": "wiki.dbbs.co",
        "slug": "original-voice",
        "title": "Original Voice",
        "text": "From a decade ago, Trey Gunn talking about Original Voice."
      },
      "date": 1696495544636
    },
    {
      "item": {
        "type": "factory",
        "id": "e64a1ef13344f78e"
      },
      "id": "e64a1ef13344f78e",
      "type": "add",
      "after": "369ca77cb8f30a83",
      "date": 1696497644945
    },
    {
      "type": "edit",
      "id": "e64a1ef13344f78e",
      "item": {
        "type": "pagefold",
        "id": "e64a1ef13344f78e",
        "text": "~"
      },
      "date": 1696497648249
    },
    {
      "item": {
        "type": "factory",
        "id": "4e8440f9db0db653"
      },
      "id": "4e8440f9db0db653",
      "type": "add",
      "after": "e64a1ef13344f78e",
      "date": 1696497653828
    },
    {
      "type": "edit",
      "id": "4e8440f9db0db653",
      "item": {
        "type": "paragraph",
        "id": "4e8440f9db0db653",
        "text": "Quit [[EasyRes]]"
      },
      "date": 1696497665243
    },
    {
      "id": "96398676112092200960",
      "type": "add",
      "item": {
        "type": "markdown",
        "text": "11:56:33 From Robert Sterbal\nhttps://books.leannebrown.com/good-and-cheap.pdf\n",
        "id": "96398676112092200960"
      },
      "after": "369ca77cb8f30a83",
      "attribution": {
        "page": "Typescript 2023-10-04",
        "site": "jeff.dojo.fed.wiki"
      },
      "date": 1696497915210
    },
    {
      "item": {
        "type": "factory",
        "id": "063cdea84f9fc2a3"
      },
      "id": "063cdea84f9fc2a3",
      "type": "add",
      "after": "4e8440f9db0db653",
      "date": 1696498118181
    },
    {
      "type": "edit",
      "id": "063cdea84f9fc2a3",
      "item": {
        "type": "paragraph",
        "id": "063cdea84f9fc2a3",
        "text": "\nBROWN, Leanne, 2014. Good Enough: Eat Well on $4/Day.  Online. [Accessed 5 October 2023]. ISBN 978-0-9938448-2-9. Available from: https://books.leannebrown.com/good-and-cheap.pdf\n"
      },
      "date": 1696498122869
    },
    {
      "id": "063cdea84f9fc2a3",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "f8994c14aed49653",
        "ad521a13c3cebedc",
        "3d17f8ac40ca737d",
        "68373574181545558016",
        "7f32f401e5d0be0b",
        "1a46d3548f9bb213",
        "23722069673314295808",
        "46501367720669306880",
        "dd0c36e9967d6ca8",
        "3342d89fd547468c",
        "122f29f88f8aef33",
        "06c19290ebd0f38e",
        "a88832f745e97cf9",
        "22209367926944079872",
        "743ffbce9155f04f",
        "713b82e0d9ccc912",
        "db34010d671d6cb2",
        "2088fc17d6dadc00",
        "13367265232635527168",
        "1b1f064d5ff3e8ed",
        "4233629663657123328",
        "undefined",
        "40994901871498100736",
        "91949160245061386240",
        "c49457c44c9339f6",
        "83846312778282090496",
        "68819154492601704448",
        "ffd27d9d0fe71e43",
        "369ca77cb8f30a83",
        "96398676112092200960",
        "063cdea84f9fc2a3",
        "e64a1ef13344f78e",
        "4e8440f9db0db653"
      ],
      "date": 1696498241489,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696498246187
    },
    {
      "type": "edit",
      "id": "063cdea84f9fc2a3",
      "item": {
        "type": "paragraph",
        "id": "063cdea84f9fc2a3",
        "text": "BROWN, Leanne, 2014. Good Enough: Eat Well on $4/Day.  Online. [Accessed 5 October 2023]. ISBN 978-0-9938448-2-9. [https://books.leannebrown.com/good-and-cheap.pdf pdf]\n"
      },
      "date": 1696498294673
    },
    {
      "type": "edit",
      "id": "063cdea84f9fc2a3",
      "item": {
        "type": "paragraph",
        "id": "063cdea84f9fc2a3",
        "text": "BROWN, Leanne, 2014. Good Enough: Eat Well on $4/Day. ISBN 978-0-9938448-2-9. [https://books.leannebrown.com/good-and-cheap.pdf pdf]\n"
      },
      "date": 1696498311493
    },
    {
      "item": {
        "type": "factory",
        "id": "69235c51dd92be5d"
      },
      "id": "69235c51dd92be5d",
      "type": "add",
      "after": "4e8440f9db0db653",
      "date": 1696498389461
    },
    {
      "type": "edit",
      "id": "69235c51dd92be5d",
      "item": {
        "type": "paragraph",
        "id": "69235c51dd92be5d",
        "text": "Die Mehrwertsteuersätze in der Schweiz werden ab dem 1. Januar 2024 erhöht. Davon betroffen ist auch der Normalsatz, der von 7,7 % auf 8,1 % steigen wird. "
      },
      "date": 1696498401782
    },
    {
      "type": "edit",
      "id": "69235c51dd92be5d",
      "item": {
        "type": "paragraph",
        "id": "69235c51dd92be5d",
        "text": "Die Mehrwertsteuersätze in der Schweiz werden ab dem 1. Januar 2024 erhöht. Davon betroffen ist auch der Normalsatz, der von 7,7 % auf 8,1 % steigen wird."
      },
      "date": 1696499270714
    },
    {
      "type": "add",
      "id": "6e04a4164b6e8798",
      "item": {
        "type": "paragraph",
        "id": "6e04a4164b6e8798",
        "text": "Guido Baselgia - The Dark Light"
      },
      "after": "69235c51dd92be5d",
      "date": 1696499275992
    },
    {
      "type": "edit",
      "id": "6e04a4164b6e8798",
      "item": {
        "type": "paragraph",
        "id": "6e04a4164b6e8798",
        "text": "Guido Baselgia - The Dark Light [https://www.srf.ch/play/tv/sternstunde-kunst/video/guido-baselgia---the-dark-light?urn=urn:srf:video:9d5b9799-126a-4142-bc27-01bcd730263b page]"
      },
      "date": 1696499411888
    },
    {
      "type": "add",
      "id": "cfacc05c8a6c1633",
      "item": {
        "type": "paragraph",
        "id": "cfacc05c8a6c1633",
        "text": "Der Fotograf Guido Baselgia reist bei seiner Suche nach dem letzten gültigen Bild paradoxerweise dorthin, wo kaum noch Licht ist, zum Beispiel nach Feuerland oder den nördlichsten Punkt Europas. Der Film begleitet ihn und zeigt, wie dabei Bilder entstehen, die hinter die Oberfläche blicken.\n\nDer in Pontresina GR aufgewachsene Fotokünstler Guido Baselgia gehört zu den wichtigsten Fotokünstlern der Schweiz. In aufwändigen Recherchen untersucht er Landschaften der Extreme und reist dafür bis ans Ende der Welt, zum Beispiel an die südlichste Spitze Feuerlands, in den Amazonas oder nach Norwegen an den nördlichsten Punkt Europas. Mit seiner analogen Grossbildkamera und unter immer wieder extremen Wetterbedingungen verharrt er nächtelang allein an Orten, wo kaum noch Licht ist. Dabei entstehen Bilder, die gerade durch ihre grösstmögliche Präzision in eine Abstraktion kippen, wo nicht mehr klar ist, ob das Dargestellte Sand oder Schnee ist oder ob es ein Tag- oder ein Nachtbild ist. Seine Bilder zeigen das Archaische und Unberührte der Erde, dringen tief ein in die Natur und lassen sie uns mit neuen Augen sehen.\n\n\n\nDer Filmemacher Casper Nicca hat Baselgia während drei Jahren auf dieser Suche begleitet. Entstanden ist ein ruhiges Filmporträt, das unmittelbar dabei ist bei Guido Baselgias künstlerischem Schaffen, das ihn und uns mit der Urkraft der Natur konfrontiert."
      },
      "after": "6e04a4164b6e8798",
      "date": 1696499431903
    },
    {
      "type": "edit",
      "id": "6e04a4164b6e8798",
      "item": {
        "type": "paragraph",
        "id": "6e04a4164b6e8798",
        "text": "⇒ [[Guido Baselgia]] - The Dark Light [https://www.srf.ch/play/tv/sternstunde-kunst/video/guido-baselgia---the-dark-light?urn=urn:srf:video:9d5b9799-126a-4142-bc27-01bcd730263b page]"
      },
      "date": 1696499465812
    },
    {
      "id": "cfacc05c8a6c1633",
      "type": "remove",
      "removedTo": {
        "page": "Guido Baselgia"
      },
      "date": 1696499484172
    },
    {
      "item": {
        "type": "factory",
        "id": "360681689535b0a2"
      },
      "id": "360681689535b0a2",
      "type": "add",
      "after": "6e04a4164b6e8798",
      "date": 1696506755164
    },
    {
      "type": "edit",
      "id": "360681689535b0a2",
      "item": {
        "type": "reference",
        "id": "360681689535b0a2",
        "site": "ward.dojo.fed.wiki",
        "slug": "typescript-locator",
        "title": "Typescript Locator",
        "text": "We'd like to locate conversations based on information extracted into indexes of various kinds. Here we setup a test case and then try automating it with an html script."
      },
      "date": 1696506845534
    },
    {
      "item": {
        "type": "factory",
        "id": "fd2160f47948529c"
      },
      "id": "fd2160f47948529c",
      "type": "add",
      "after": "360681689535b0a2",
      "date": 1696510316677
    },
    {
      "type": "edit",
      "id": "fd2160f47948529c",
      "item": {
        "type": "factory",
        "id": "fd2160f47948529c",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "name": "Screenshot 2023-10-05 at 12-36-14 Test Elm Applications.pdf",
          "type": "application/pdf",
          "size": 176685,
          "lastModified": 1696504088356,
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
        }
      },
      "date": 1696510371027
    },
    {
      "type": "edit",
      "id": "fd2160f47948529c",
      "item": {
        "type": "image",
        "id": "fd2160f47948529c",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "name": "Screenshot 2023-10-05 at 12-36-14 Test Elm Applications.pdf",
          "type": "application/pdf",
          "size": 176685,
          "lastModified": 1696504088356,
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
        },
        "text": "Uploaded image",
        "size": "wide",
        "width": 418,
        "height": 454,
        "url": "/assets/plugins/image/55d83f258735aecc20f79b93130fb91c.jpg"
      },
      "date": 1696510394177
    },
    {
      "type": "edit",
      "id": "fd2160f47948529c",
      "item": {
        "type": "image",
        "id": "fd2160f47948529c",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "name": "Screenshot 2023-10-05 at 12-36-14 Test Elm Applications.pdf",
          "type": "application/pdf",
          "size": 176685,
          "lastModified": 1696504088356,
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
        },
        "text": "[https://www.linkedin.com/posts/ralfbarkow_tdd-elm-federatedwiki-activity-7115655109312696323-UTtV post]",
        "size": "wide",
        "width": 418,
        "height": 454,
        "url": "/assets/plugins/image/55d83f258735aecc20f79b93130fb91c.jpg"
      },
      "date": 1696510403763
    },
    {
      "item": {
        "type": "factory",
        "id": "5660933a7e915b80"
      },
      "id": "5660933a7e915b80",
      "type": "add",
      "after": "fd2160f47948529c",
      "date": 1696515696984
    },
    {
      "type": "edit",
      "id": "5660933a7e915b80",
      "item": {
        "type": "paragraph",
        "id": "5660933a7e915b80",
        "text": "\nLSP Mode - LSP support for Emacs "
      },
      "date": 1696515701197
    },
    {
      "type": "edit",
      "id": "5660933a7e915b80",
      "item": {
        "type": "paragraph",
        "id": "5660933a7e915b80",
        "text": "LSP Mode - LSP support for Emacs [https://emacs-lsp.github.io/lsp-mode/page/installation/ page]"
      },
      "date": 1696515707676
    },
    {
      "type": "edit",
      "id": "5660933a7e915b80",
      "item": {
        "type": "paragraph",
        "id": "5660933a7e915b80",
        "text": "LSP Mode - LSP support for Emacs [https://emacs-lsp.github.io/lsp-mode/page/installation/ page], [https://emacs-lsp.github.io/lsp-mode/page/installation/#spacemacs page]"
      },
      "date": 1696515734660
    },
    {
      "item": {
        "type": "factory",
        "id": "541aee01340fb479"
      },
      "id": "541aee01340fb479",
      "type": "add",
      "after": "5660933a7e915b80",
      "date": 1696515741477
    },
    {
      "type": "edit",
      "id": "541aee01340fb479",
      "item": {
        "type": "markdown",
        "id": "541aee01340fb479",
        "text": "> lsp-mode is included in spacemacs develop branch. Add lsp to dotspacemacs-configuration-layers and configure the language that you want to use to be backed by lsp backend."
      },
      "date": 1696515744733
    },
    {
      "item": {
        "type": "factory",
        "id": "3a2313975aef14a9"
      },
      "id": "3a2313975aef14a9",
      "type": "add",
      "after": "541aee01340fb479",
      "date": 1696515835609
    },
    {
      "type": "edit",
      "id": "3a2313975aef14a9",
      "item": {
        "type": "paragraph",
        "id": "3a2313975aef14a9",
        "text": "mbp-rgb has working configuration"
      },
      "date": 1696515865857
    },
    {
      "type": "edit",
      "id": "3a2313975aef14a9",
      "item": {
        "type": "paragraph",
        "id": "3a2313975aef14a9",
        "text": "mbp-rgb has a working configuration"
      },
      "date": 1696515889173
    },
    {
      "type": "edit",
      "id": "fd2160f47948529c",
      "item": {
        "type": "image",
        "id": "fd2160f47948529c",
        "prompt": "Unexpected Item\nWe can't make sense of the drop.\nTry something else or see [[About Factory Plugin]].",
        "punt": {
          "name": "Screenshot 2023-10-05 at 12-36-14 Test Elm Applications.pdf",
          "type": "application/pdf",
          "size": 176685,
          "lastModified": 1696504088356,
          "userAgent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0"
        },
        "text": "⇒ [[Parse a String with the Grammar]] [https://www.linkedin.com/posts/ralfbarkow_tdd-elm-federatedwiki-activity-7115655109312696323-UTtV post]",
        "size": "wide",
        "width": 418,
        "height": 454,
        "url": "/assets/plugins/image/55d83f258735aecc20f79b93130fb91c.jpg"
      },
      "date": 1696517460678
    },
    {
      "item": {
        "type": "factory",
        "id": "e4adaed903ca7d3d"
      },
      "id": "e4adaed903ca7d3d",
      "type": "add",
      "after": "3a2313975aef14a9",
      "date": 1696524720306
    },
    {
      "type": "edit",
      "id": "e4adaed903ca7d3d",
      "item": {
        "type": "pagefold",
        "id": "e4adaed903ca7d3d",
        "text": "~"
      },
      "date": 1696524723616
    },
    {
      "item": {
        "type": "factory",
        "id": "c64f1c69f5d11cd8"
      },
      "id": "c64f1c69f5d11cd8",
      "type": "add",
      "after": "e4adaed903ca7d3d",
      "date": 1696524725657
    },
    {
      "type": "edit",
      "id": "c64f1c69f5d11cd8",
      "item": {
        "type": "reference",
        "id": "c64f1c69f5d11cd8",
        "site": "found.ward.fed.wiki",
        "slug": "designing-the-pi-5",
        "title": "Designing the Pi 5",
        "text": "Raspberry Pi 5 is here, and it has been years in the making. CTO James Adams sat down with founder Eben Upton to talk about the long process and the many decisions that led to Raspberry Pi 5 coming into being."
      },
      "date": 1696524729935
    },
    {
      "item": {
        "type": "reference",
        "id": "b8d2843e4fb0371d",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "id": "b8d2843e4fb0371d",
      "type": "add",
      "after": "c64f1c69f5d11cd8",
      "date": 1696526157229
    },
    {
      "type": "edit",
      "id": "b8d2843e4fb0371d",
      "item": {
        "type": "reference",
        "id": "b8d2843e4fb0371d",
        "site": "code.fed.wiki.org",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "date": 1696526160291
    },
    {
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "id": "e1566d6ab4ca6060",
      "type": "add",
      "after": "b8d2843e4fb0371d",
      "date": 1696526164616
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526166459
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526194097
    },
    {
      "type": "add",
      "id": "4e26bfda2b13f40d",
      "item": {
        "type": "paragraph",
        "id": "4e26bfda2b13f40d",
        "text": "I'm serious i don't see anybody working on that so i want tonight to describe to you an open source project that you can use today to parse it's a tool to [[parse]] to extract data from and a methodology for extracting data from semi-structured text so semi-structured text is the stuff with patterns in it but you don't know the patterns people make this stuff they try to make it regular but they only do so well. It's not quite natural language or it's not anything overly specified."
      },
      "after": "e1566d6ab4ca6060",
      "date": 1696526195164
    },
    {
      "type": "edit",
      "id": "4e26bfda2b13f40d",
      "item": {
        "type": "paragraph",
        "id": "4e26bfda2b13f40d",
        "text": "I'm serious i don't see anybody working on that so i want tonight to describe to you an open source project that you can use today to parse it's a tool to [[parse]] to extract data from and a methodology for extracting data from semi-structured text so semi-structured text is the stuff with patterns in it but you don't know the patterns people make this stuff they try to make it regular but they only do so well. It's not quite natural language or it's not anything overly specified."
      },
      "date": 1696526211506
    },
    {
      "type": "edit",
      "id": "4e26bfda2b13f40d",
      "item": {
        "type": "paragraph",
        "id": "4e26bfda2b13f40d",
        "text": "I'm serious i don't see anybody working on that so i want tonight to describe to you an open source project that you can use today to parse it's a tool to [[parse]] to extract data from and a methodology for extracting data from semi-structured text so semi-structured text is the stuff with patterns in it but you don't know the patterns people make this stuff they try to make it regular but they only do so well. It's not quite natural language or it's not anything overly specified."
      },
      "date": 1696526240614
    },
    {
      "type": "add",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "after": "4e26bfda2b13f40d",
      "date": 1696526241394
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696526327154
    },
    {
      "type": "add",
      "id": "7433c45907b9da48",
      "item": {
        "type": "paragraph",
        "id": "7433c45907b9da48",
        "text": "Let me just walk through this to give you an idea what it's like to develop. Here I start with a saying well i'm looking for characters and dot means any character so let's look for some i see when i find some characters that there's keys and values so i revise my description to say there's keys and values and i find that some keys are uppercase and some keys are lowercase so i get interested in the lowercase so then i revise my description again and say there is lowercase and i find that the lowercase keys have just a couple of different values except when they don't so then i revise my description again to say there are familiar values for the lower case and there are some unfamiliar ones and when i do that i find that all but 77 of the keys in this whole data set are these uh unfamiliar lowercase keys so this one probably isn't even really a key."
      },
      "after": "a0ea1e7b56715640",
      "date": 1696526352304
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526370441
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526376874
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526412944
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526424591
    },
    {
      "type": "edit",
      "id": "e1566d6ab4ca6060",
      "item": {
        "type": "paragraph",
        "id": "e1566d6ab4ca6060",
        "text": "Okay take out your phone. I ([[Ward Cunningham]]) got a [[QRCode]] at the end of my talk and you'll want to take a shot of it."
      },
      "date": 1696526432039
    },
    {
      "type": "edit",
      "id": "4e26bfda2b13f40d",
      "item": {
        "type": "paragraph",
        "id": "4e26bfda2b13f40d",
        "text": "I'm serious i don't see anybody working on that so i want tonight to describe to you an open source project that you can use today to parse it's a tool to [[parse]] to extract data from and a methodology for extracting data from semi-structured text so semi-structured text is the stuff with patterns in it but you don't know the patterns people make this stuff they try to make it regular but they only do so well. It's not quite natural language or it's not anything overly specified."
      },
      "date": 1696526439116
    },
    {
      "type": "edit",
      "id": "7433c45907b9da48",
      "item": {
        "type": "paragraph",
        "id": "7433c45907b9da48",
        "text": "Let me just walk through this to give you an idea what it's like to develop. Here I start with a saying well i'm looking for characters and dot means any character so let's look for some i see when i find some characters that there's keys and values so i revise my description to say there's keys and values and i find that some keys are uppercase and some keys are lowercase so i get interested in the lowercase so then i revise my description again and say there is lowercase and i find that the lowercase keys have just a couple of different values except when they don't so then i revise my description again to say there are familiar values for the lower case and there are some unfamiliar ones and when i do that i find that all but 77 of the keys in this whole data set are these uh unfamiliar lowercase keys so this one probably isn't even really a key."
      },
      "date": 1696526563506
    },
    {
      "type": "add",
      "id": "0be67e99e7fc1f2e",
      "item": {
        "type": "paragraph",
        "id": "0be67e99e7fc1f2e",
        "text": "But you know this is uh this is how quickly i can find out what's in a file i'm following my own interest driven by the actual text in these files the files can be huge i have this tool which manages my experiments because i'm going to follow my nose i might have to back up i might have to explore elsewhere."
      },
      "after": "7433c45907b9da48",
      "date": 1696526564167
    },
    {
      "type": "edit",
      "id": "0be67e99e7fc1f2e",
      "item": {
        "type": "paragraph",
        "id": "0be67e99e7fc1f2e",
        "text": "But you know this is uh this is how quickly i can find out what's in a file i'm following my own interest driven by the actual text in these files the files can be huge i have this tool which manages my experiments because i'm going to follow my nose i might have to back up i might have to explore elsewhere."
      },
      "date": 1696526621651
    },
    {
      "type": "add",
      "id": "68097aeb17bfd081",
      "item": {
        "type": "paragraph",
        "id": "68097aeb17bfd081",
        "text": "This is why it's so fast this is the actual parsing machine does it all with pointers it never moves around a string i can parse as fast as cat can copy files so another thing that makes it fast is this iterative methodology where i can get to useful results very quickly i can parse all of wikipedia in under an hour but more importantly i can parse a useful subset of wikipedia for making these kind of decisions in five seconds."
      },
      "after": "0be67e99e7fc1f2e",
      "date": 1696526629377
    },
    {
      "type": "edit",
      "id": "68097aeb17bfd081",
      "item": {
        "type": "paragraph",
        "id": "68097aeb17bfd081",
        "text": "This is why it's so fast this is the actual parsing machine does it all with pointers it never moves around a string i can parse as fast as cat can copy files so another thing that makes it fast is this iterative methodology where i can get to useful results very quickly i can parse all of wikipedia in under an hour but more importantly i can parse a useful subset of wikipedia for making these kind of decisions in five seconds."
      },
      "date": 1696526671051
    },
    {
      "type": "add",
      "id": "25f2bc698bd570c7",
      "item": {
        "type": "paragraph",
        "id": "25f2bc698bd570c7",
        "text": "Now this isn't the ordinary kind of computer science that you might have taken in a compiler class because it's backwards you have the text first and then you write the grammar to match the text not the other way around this is new because it used to be in compilers we'd use regular expressions for recognizing things and then a parser for organizing the result here this is the original wiki code it has a bunch of regular expressions and then it's got pearl coat around it to manage the nesting this is what i can do today i can have the look ahead the regular expression sort of thing and the nesting the parser generator sort of thing all mixed together."
      },
      "after": "68097aeb17bfd081",
      "date": 1696526673794
    },
    {
      "type": "edit",
      "id": "25f2bc698bd570c7",
      "item": {
        "type": "paragraph",
        "id": "25f2bc698bd570c7",
        "text": "Now this isn't the ordinary kind of computer science that you might have taken in a compiler class because it's backwards you have the text first and then you write the grammar to match the text not the other way around this is new because it used to be in compilers we'd use regular expressions for recognizing things and then a parser for organizing the result here this is the original wiki code it has a bunch of regular expressions and then it's got pearl coat around it to manage the nesting this is what i can do today i can have the look ahead the regular expression sort of thing and the nesting the parser generator sort of thing all mixed together."
      },
      "date": 1696526762595
    },
    {
      "type": "add",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "after": "25f2bc698bd570c7",
      "date": 1696526799351
    },
    {
      "type": "edit",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "date": 1696526820404
    },
    {
      "type": "edit",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "date": 1696526889954
    },
    {
      "type": "edit",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "date": 1696526924844
    },
    {
      "type": "add",
      "id": "9ea7f7f0856d8364",
      "item": {
        "type": "paragraph",
        "id": "9ea7f7f0856d8364",
        "text": "Just to make it easy i attacked on this qr code you should all take a picture you know this also has an address there for people who use pencils and i want to thank you for your attention."
      },
      "after": "ccc3cdd490b4c384",
      "date": 1696526927560
    },
    {
      "type": "edit",
      "id": "9ea7f7f0856d8364",
      "item": {
        "type": "paragraph",
        "id": "9ea7f7f0856d8364",
        "text": "Just to make it easy i attacked on this qr code you should all take a picture you know this also has an address there for people who use pencils and i want to thank you for your attention."
      },
      "date": 1696526943077
    },
    {
      "type": "add",
      "id": "0a4efbd218054668",
      "item": {
        "type": "paragraph",
        "id": "0a4efbd218054668",
        "text": "I do have a little time left so i thought i'd give you some coming attractions this isn't the only open source work i do here a couple other projects that i hope to show you in future tech ignites i think i'll this will be remembered as my vertical period and uh these are also up there in github. So thank you very much."
      },
      "after": "9ea7f7f0856d8364",
      "date": 1696526945434
    },
    {
      "type": "edit",
      "id": "ccc3cdd490b4c384",
      "item": {
        "type": "paragraph",
        "id": "ccc3cdd490b4c384",
        "text": "This is called a [[PEG]]: [[Parsing Expression Grammars]]. It was developed by [[Bryan Ford]] and uh at mit and i'm using the implementation called the peg leg done by ian pimarda uh 2004 2007. this is recent stuff this is a blog post i wrote about this when we released this into the open source this year i'm Ward Cunningham by the way and i think you ought to read this post."
      },
      "date": 1696526995884
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696527200265
    },
    {
      "type": "edit",
      "id": "4e26bfda2b13f40d",
      "item": {
        "type": "paragraph",
        "id": "4e26bfda2b13f40d",
        "text": "I'm serious i don't see anybody working on that so i want tonight to describe to you an open source project that you can use today to parse it's a tool to [[parse]] to extract data from and a methodology for extracting data from semi-structured text so semi-structured text is the stuff with patterns in it but you don't know the patterns people make this stuff they try to make it regular but they only do so well. It's not quite natural language or it's not anything overly specified."
      },
      "date": 1696527408244
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696527445305
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696527468246
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696527518222
    },
    {
      "type": "edit",
      "id": "a0ea1e7b56715640",
      "item": {
        "type": "paragraph",
        "id": "a0ea1e7b56715640",
        "text": "The methodology is simple [https://youtu.be/HCmrVp8WR6c?t=55 video]. It says parse what you expect to find and look and see what else you miss so you get from your own expectations you get to find stuff around it then you iterate through that as fast as you can here's an example of parsing this as a [[Fact]] is a key and a value or some other characters."
      },
      "date": 1696527586879
    },
    {
      "type": "add",
      "id": "6542c3b4e67559bf",
      "item": {
        "type": "paragraph",
        "id": "6542c3b4e67559bf",
        "text": "So this is a using compiler tools but they're special compiler tools i also support it with some visualization where i show you what you got if i ran that through a file and found nineteen thousand keys i might wonder what they look like so i have samples here's the tool this is a web application i can run it off of a ec2 or something if that's where my data is and i run huge jobs 87 gigabytes in this case it's fast for a variety of reasons"
      },
      "after": "a0ea1e7b56715640",
      "date": 1696527587730
    },
    {
      "item": {
        "type": "reference",
        "id": "ce96deb348b85125",
        "site": "wiki.ralfbarkow.ch",
        "slug": "fact",
        "title": "Fact",
        "text": "We are [[represent]]ing [[physical]] [[Container]]s by [[delimit]]ing [[Boundaries]] and basic facts by [[empty]] [[Container]]s."
      },
      "id": "ce96deb348b85125",
      "type": "add",
      "after": "0a4efbd218054668",
      "date": 1696527590604
    },
    {
      "type": "edit",
      "id": "ce96deb348b85125",
      "item": {
        "type": "reference",
        "id": "ce96deb348b85125",
        "site": "wiki.ralfbarkow.ch",
        "slug": "fact",
        "title": "Fact",
        "text": "We are [[represent]]ing [[physical]] [[Container]]s by [[delimit]]ing [[Boundaries]] and basic facts by [[empty]] [[Container]]s."
      },
      "date": 1696527594789
    },
    {
      "id": "ce96deb348b85125",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "f8994c14aed49653",
        "ad521a13c3cebedc",
        "3d17f8ac40ca737d",
        "68373574181545558016",
        "7f32f401e5d0be0b",
        "1a46d3548f9bb213",
        "23722069673314295808",
        "46501367720669306880",
        "dd0c36e9967d6ca8",
        "3342d89fd547468c",
        "122f29f88f8aef33",
        "06c19290ebd0f38e",
        "a88832f745e97cf9",
        "22209367926944079872",
        "743ffbce9155f04f",
        "713b82e0d9ccc912",
        "db34010d671d6cb2",
        "2088fc17d6dadc00",
        "13367265232635527168",
        "1b1f064d5ff3e8ed",
        "4233629663657123328",
        "undefined",
        "40994901871498100736",
        "91949160245061386240",
        "c49457c44c9339f6",
        "83846312778282090496",
        "68819154492601704448",
        "ffd27d9d0fe71e43",
        "369ca77cb8f30a83",
        "96398676112092200960",
        "063cdea84f9fc2a3",
        "e64a1ef13344f78e",
        "4e8440f9db0db653",
        "69235c51dd92be5d",
        "6e04a4164b6e8798",
        "360681689535b0a2",
        "fd2160f47948529c",
        "5660933a7e915b80",
        "541aee01340fb479",
        "3a2313975aef14a9",
        "e4adaed903ca7d3d",
        "c64f1c69f5d11cd8",
        "b8d2843e4fb0371d",
        "e1566d6ab4ca6060",
        "4e26bfda2b13f40d",
        "a0ea1e7b56715640",
        "ce96deb348b85125",
        "6542c3b4e67559bf",
        "7433c45907b9da48",
        "0be67e99e7fc1f2e",
        "68097aeb17bfd081",
        "25f2bc698bd570c7",
        "ccc3cdd490b4c384",
        "9ea7f7f0856d8364",
        "0a4efbd218054668"
      ],
      "date": 1696527604131,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696527609130
    },
    {
      "type": "edit",
      "id": "ce96deb348b85125",
      "item": {
        "type": "reference",
        "id": "ce96deb348b85125",
        "site": "wiki.ralfbarkow.ch",
        "slug": "fact",
        "title": "Fact",
        "text": "We are [[represent]]ing [[physical]] [[Container]]s by [[delimit]]ing [[Boundaries]] and basic facts by [[empty]] [[Container]]s."
      },
      "date": 1696527665193
    },
    {
      "type": "edit",
      "id": "ce96deb348b85125",
      "item": {
        "type": "reference",
        "id": "ce96deb348b85125",
        "site": "wiki.ralfbarkow.ch",
        "slug": "fact",
        "title": "Fact",
        "text": "We are [[represent]]ing [[physical]] [[Container]]s by [[delimit]]ing [[Boundaries]] and basic facts by [[empty]] [[Container]]s."
      },
      "date": 1696527676926
    },
    {
      "item": {
        "type": "code",
        "id": "9a020dbdfad803ed",
        "text": "[[ ]]"
      },
      "id": "9a020dbdfad803ed",
      "type": "add",
      "after": "0a4efbd218054668",
      "date": 1696527679572
    },
    {
      "type": "edit",
      "id": "9a020dbdfad803ed",
      "item": {
        "type": "code",
        "id": "9a020dbdfad803ed",
        "text": "[[ ]]"
      },
      "date": 1696527682533
    },
    {
      "id": "9a020dbdfad803ed",
      "type": "move",
      "order": [
        "d6ca682c8332030f",
        "a7229dcc28cc26ee",
        "1bd686d8f07fc0bd",
        "3b4fb97c32d9a15f",
        "8e0c1e2554ae8cee",
        "842368fdc29a7344",
        "ee55c7fa5ef2f715",
        "0038e1d59692e7a7",
        "9d32d14f28e07626",
        "208d648b373944b4",
        "b095d74071c6b51d",
        "4e1dacaf56c259a7",
        "b91b760fa54b8ee8",
        "794728c53eca97e9",
        "1f5f6e767d85548a",
        "53a66d9499e8d2d1",
        "c9ce2c474eb6869f",
        "3347fa61ddd2a681",
        "8bc0adb8a896228d",
        "036c7679252cb8fa",
        "2bbfe9e03fd7de24",
        "f8994c14aed49653",
        "ad521a13c3cebedc",
        "3d17f8ac40ca737d",
        "68373574181545558016",
        "7f32f401e5d0be0b",
        "1a46d3548f9bb213",
        "23722069673314295808",
        "46501367720669306880",
        "dd0c36e9967d6ca8",
        "3342d89fd547468c",
        "122f29f88f8aef33",
        "06c19290ebd0f38e",
        "a88832f745e97cf9",
        "22209367926944079872",
        "743ffbce9155f04f",
        "713b82e0d9ccc912",
        "db34010d671d6cb2",
        "2088fc17d6dadc00",
        "13367265232635527168",
        "1b1f064d5ff3e8ed",
        "4233629663657123328",
        "undefined",
        "40994901871498100736",
        "91949160245061386240",
        "c49457c44c9339f6",
        "83846312778282090496",
        "68819154492601704448",
        "ffd27d9d0fe71e43",
        "369ca77cb8f30a83",
        "96398676112092200960",
        "063cdea84f9fc2a3",
        "e64a1ef13344f78e",
        "4e8440f9db0db653",
        "69235c51dd92be5d",
        "6e04a4164b6e8798",
        "360681689535b0a2",
        "fd2160f47948529c",
        "5660933a7e915b80",
        "541aee01340fb479",
        "3a2313975aef14a9",
        "e4adaed903ca7d3d",
        "c64f1c69f5d11cd8",
        "b8d2843e4fb0371d",
        "e1566d6ab4ca6060",
        "4e26bfda2b13f40d",
        "a0ea1e7b56715640",
        "ce96deb348b85125",
        "9a020dbdfad803ed",
        "6542c3b4e67559bf",
        "7433c45907b9da48",
        "0be67e99e7fc1f2e",
        "68097aeb17bfd081",
        "25f2bc698bd570c7",
        "ccc3cdd490b4c384",
        "9ea7f7f0856d8364",
        "0a4efbd218054668"
      ],
      "date": 1696527690969,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696527695366
    },
    {
      "id": "e1566d6ab4ca6060",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527854355
    },
    {
      "id": "4e26bfda2b13f40d",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527858822
    },
    {
      "id": "a0ea1e7b56715640",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527864537
    },
    {
      "id": "ce96deb348b85125",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527959782
    },
    {
      "id": "9a020dbdfad803ed",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527962408
    },
    {
      "id": "6542c3b4e67559bf",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527989722
    },
    {
      "id": "7433c45907b9da48",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696527997000
    },
    {
      "id": "0be67e99e7fc1f2e",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528001626
    },
    {
      "id": "68097aeb17bfd081",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528007208
    },
    {
      "id": "25f2bc698bd570c7",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528014958
    },
    {
      "id": "ccc3cdd490b4c384",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528020537
    },
    {
      "id": "9ea7f7f0856d8364",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528025306
    },
    {
      "id": "0a4efbd218054668",
      "type": "remove",
      "removedTo": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528028752
    },
    {
      "id": "932d5d09c21b9f89",
      "type": "add",
      "item": {
        "type": "image",
        "id": "932d5d09c21b9f89",
        "text": "Revise the description [https://youtu.be/HCmrVp8WR6c?t=123 video]",
        "size": "wide",
        "width": 418,
        "height": 322,
        "url": "/assets/plugins/image/a8c574e151fa589f8d8575ca64ed86ca.jpg"
      },
      "after": "b8d2843e4fb0371d",
      "attribution": {
        "page": "Exploratory Parsing"
      },
      "date": 1696528539608
    },
    {
      "item": {
        "type": "factory",
        "id": "6f6b68f716787b2f"
      },
      "id": "6f6b68f716787b2f",
      "type": "add",
      "after": "932d5d09c21b9f89",
      "date": 1696528560633
    },
    {
      "type": "edit",
      "id": "6f6b68f716787b2f",
      "item": {
        "type": "paragraph",
        "id": "6f6b68f716787b2f",
        "text": "⇒ [[Define a PEG Grammar]"
      },
      "date": 1696528562330
    },
    {
      "type": "edit",
      "id": "6f6b68f716787b2f",
      "item": {
        "type": "paragraph",
        "id": "6f6b68f716787b2f",
        "text": "⇒ [[Define a PEG Grammar]]"
      },
      "date": 1696528566289
    },
    {
      "type": "edit",
      "id": "6f6b68f716787b2f",
      "item": {
        "type": "paragraph",
        "id": "6f6b68f716787b2f",
        "text": "⇒ [[Define a PEG Grammar]] ⇒ [[Write the Grammar That Fits]]"
      },
      "date": 1696528652322
    },
    {
      "item": {
        "type": "factory",
        "id": "f3ff74be83cee020"
      },
      "id": "f3ff74be83cee020",
      "type": "add",
      "after": "6f6b68f716787b2f",
      "date": 1696528728972
    },
    {
      "type": "edit",
      "id": "f3ff74be83cee020",
      "item": {
        "type": "paragraph",
        "id": "f3ff74be83cee020",
        "text": "The description is our grammarString:"
      },
      "date": 1696528740135
    },
    {
      "id": "5a696e64cd863ed7",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5a696e64cd863ed7",
        "text": "grammarString : String\ngrammarString =\n    \"\"\"\n    start <- <char+> {action}\n    char <- [a-z]    \n    \"\"\"\n\n"
      },
      "after": "f3ff74be83cee020",
      "attribution": {
        "page": "Write the Grammar That Fits"
      },
      "date": 1696528743072
    },
    {
      "type": "remove",
      "id": "a7229dcc28cc26ee",
      "date": 1696544124809
    },
    {
      "item": {
        "type": "factory",
        "id": "3a6842a53eb74958"
      },
      "id": "3a6842a53eb74958",
      "type": "add",
      "after": "5a696e64cd863ed7",
      "date": 1696544641972
    },
    {
      "type": "edit",
      "id": "3a6842a53eb74958",
      "item": {
        "type": "graphviz",
        "id": "3a6842a53eb74958",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1696544651829
    },
    {
      "type": "edit",
      "id": "3a6842a53eb74958",
      "item": {
        "type": "graphviz",
        "id": "3a6842a53eb74958",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1696544666197
    },
    {
      "type": "remove",
      "id": "3a6842a53eb74958",
      "date": 1696544962227
    }
  ]
}