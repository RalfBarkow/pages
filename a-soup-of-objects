{
  "title": "A Soup of Objects",
  "story": [
    {
      "type": "paragraph",
      "id": "71a3fe2a912c4b3b",
      "text": "REIN, Patrick, 2018. A soup of objects: convenience interfaces for accessing domain objects in a global object graph. In: Conference Companion of the 2nd International Conference on Art, Science, and Engineering of Programming. Online. New York, NY, USA: Association for Computing Machinery. 9 April 2018. p. 236–238. [Accessed 19 May 2022]. Programming’18 Companion. ISBN 978-1-4503-5513-1. DOI 10.1145/3191697.3213799. "
    },
    {
      "type": "markdown",
      "id": "76a02473b37c6153",
      "text": "> Conventional desktop systems, such as Microsoft Windows or MacOS, are structured around applications. From a technical perspective the domain objects, such as emails or tasks, are contained within these applications. This separation of object graphs restricts interactions and integrations between applications to cases for which the original developers added support. Through the Home system we want to explore an alternative architecture for desktop systems supporting such ad-hoc integrations. This architecture is based on a single shared runtime object graph spanning all applications. We evolved and evaluated our architecture and the described mechanisms by using the resulting environment for over 13 months for everyday productivity tasks.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "A Soup of Objects",
        "story": []
      },
      "date": 1654080297198
    },
    {
      "item": {
        "type": "factory",
        "id": "71a3fe2a912c4b3b"
      },
      "id": "71a3fe2a912c4b3b",
      "type": "add",
      "date": 1654080308773
    },
    {
      "type": "edit",
      "id": "71a3fe2a912c4b3b",
      "item": {
        "type": "paragraph",
        "id": "71a3fe2a912c4b3b",
        "text": "REIN, Patrick, 2018. A soup of objects: convenience interfaces for accessing domain objects in a global object graph. In: Conference Companion of the 2nd International Conference on Art, Science, and Engineering of Programming. Online. New York, NY, USA: Association for Computing Machinery. 9 April 2018. p. 236–238. [Accessed 19 May 2022]. Programming’18 Companion. ISBN 978-1-4503-5513-1. DOI 10.1145/3191697.3213799. "
      },
      "date": 1654080321808
    },
    {
      "type": "add",
      "id": "76a02473b37c6153",
      "item": {
        "type": "paragraph",
        "id": "76a02473b37c6153",
        "text": "> Conventional desktop systems, such as Microsoft Windows or MacOS, are structured around applications. From a technical perspective the domain objects, such as emails or tasks, are contained within these applications. This separation of object graphs restricts interactions and integrations between applications to cases for which the original developers added support. Through the Home system we want to explore an alternative architecture for desktop systems supporting such ad-hoc integrations. This architecture is based on a single shared runtime object graph spanning all applications. We evolved and evaluated our architecture and the described mechanisms by using the resulting environment for over 13 months for everyday productivity tasks.\n"
      },
      "after": "71a3fe2a912c4b3b",
      "date": 1654080325523
    },
    {
      "type": "edit",
      "id": "76a02473b37c6153",
      "item": {
        "type": "markdown",
        "id": "76a02473b37c6153",
        "text": "> Conventional desktop systems, such as Microsoft Windows or MacOS, are structured around applications. From a technical perspective the domain objects, such as emails or tasks, are contained within these applications. This separation of object graphs restricts interactions and integrations between applications to cases for which the original developers added support. Through the Home system we want to explore an alternative architecture for desktop systems supporting such ad-hoc integrations. This architecture is based on a single shared runtime object graph spanning all applications. We evolved and evaluated our architecture and the described mechanisms by using the resulting environment for over 13 months for everyday productivity tasks.\n"
      },
      "date": 1654080326734
    }
  ]
}