{
  "title": "Computation",
  "story": [
    {
      "type": "paragraph",
      "id": "0d3e68036fecfe91",
      "text": "Computation is implemented by one-to-one [[Pattern-Matching]] and [[Substitution]]."
    },
    {
      "type": "markdown",
      "id": "7c4048b0312272ad",
      "text": "[[Croquet]]'s unique technology ensures bit-identical *Computation* in each participants' local browser, reducing network traffic and latency.\n\n"
    },
    {
      "type": "pagefold",
      "id": "3fe2df67e979dbd4",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "7aea3b4d09f7c739",
      "text": "⇒ [[Top-Level Logic]] ⇒ [[Computation]] page is intended to serve as an example of how a `Journal` class creates a `journal` instance with `title` and `story`,"
    },
    {
      "type": "code",
      "id": "0ee96c8a4b25e42a",
      "text": "{\n  \"title\": \"Computation\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"Computation\",\n        \"story\": []\n      },\n      \"date\": 1651225765617\n    }\n  ]\n}"
    },
    {
      "type": "markdown",
      "id": "45462dc9200ae13b",
      "text": "and the `title` and `story` are copied up one level so that they are stored before the `journal` and evolve at the same level as the `journal` instance. "
    },
    {
      "type": "paragraph",
      "id": "04e6b33ae08802a6",
      "text": "⇒ [[Multicomputation]] ⇒ [[Journal]]"
    },
    {
      "type": "pagefold",
      "id": "6e3ee8925614022e",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "f5760f43414e20c8",
      "text": "# Principle of Computational Equivalence"
    },
    {
      "type": "paragraph",
      "id": "7a38dae9be16081f",
      "text": "Almost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717). [https://mathworld.wolfram.com/PrincipleofComputationalEquivalence.html mathworld]\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. [[Computation]] is therefore simply a question of [[translating]] inputs and outputs from one [[System]] to another.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Computation",
        "story": []
      },
      "date": 1651225765617
    },
    {
      "item": {
        "type": "factory",
        "id": "04e6b33ae08802a6"
      },
      "id": "04e6b33ae08802a6",
      "type": "add",
      "date": 1652880930118
    },
    {
      "type": "edit",
      "id": "04e6b33ae08802a6",
      "item": {
        "type": "paragraph",
        "id": "04e6b33ae08802a6",
        "text": "Multicomputation"
      },
      "date": 1652880933989
    },
    {
      "type": "edit",
      "id": "04e6b33ae08802a6",
      "item": {
        "type": "paragraph",
        "id": "04e6b33ae08802a6",
        "text": "⇒ [[Multicomputation]]"
      },
      "date": 1652880943977
    },
    {
      "id": "7aea3b4d09f7c739",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7aea3b4d09f7c739",
        "text": "⇒ [[Top-Level Logic]] ⇒ [[Computation]] page is intended to serve as an example of how a `Journal` class creates a `journal` instance with `title` and `story`,"
      },
      "date": 1652881920415
    },
    {
      "id": "0ee96c8a4b25e42a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "0ee96c8a4b25e42a",
        "text": "{\n  \"title\": \"Computation\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"Computation\",\n        \"story\": []\n      },\n      \"date\": 1651225765617\n    }\n  ]\n}"
      },
      "after": "7aea3b4d09f7c739",
      "date": 1652881924346
    },
    {
      "id": "45462dc9200ae13b",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "45462dc9200ae13b",
        "text": "and the `title` and `story` are copied up one level so that they are stored before the `journal` and evolve at the same level as the `journal` instance. "
      },
      "after": "0ee96c8a4b25e42a",
      "date": 1652881927800
    },
    {
      "type": "fork",
      "date": 1652881936861
    },
    {
      "type": "fork",
      "date": 1652882018840
    },
    {
      "type": "edit",
      "id": "04e6b33ae08802a6",
      "item": {
        "type": "paragraph",
        "id": "04e6b33ae08802a6",
        "text": "⇒ [[Multicomputation]] ⇒ [[Journal]]"
      },
      "date": 1652882055573
    },
    {
      "item": {
        "type": "factory",
        "id": "6e3ee8925614022e"
      },
      "id": "6e3ee8925614022e",
      "type": "add",
      "after": "04e6b33ae08802a6",
      "date": 1654772829063
    },
    {
      "type": "edit",
      "id": "6e3ee8925614022e",
      "item": {
        "type": "pagefold",
        "id": "6e3ee8925614022e",
        "text": "~"
      },
      "date": 1654772836774
    },
    {
      "item": {
        "type": "factory",
        "id": "f5760f43414e20c8"
      },
      "id": "f5760f43414e20c8",
      "type": "add",
      "after": "6e3ee8925614022e",
      "date": 1654772838396
    },
    {
      "type": "edit",
      "id": "f5760f43414e20c8",
      "item": {
        "type": "paragraph",
        "id": "f5760f43414e20c8",
        "text": "# Principle of Computational Equivalence"
      },
      "date": 1654772850257
    },
    {
      "type": "edit",
      "id": "f5760f43414e20c8",
      "item": {
        "type": "markdown",
        "id": "f5760f43414e20c8",
        "text": "# Principle of Computational Equivalence"
      },
      "date": 1654772852240
    },
    {
      "item": {
        "type": "factory",
        "id": "7a38dae9be16081f"
      },
      "id": "7a38dae9be16081f",
      "type": "add",
      "after": "f5760f43414e20c8",
      "date": 1654772857654
    },
    {
      "type": "edit",
      "id": "7a38dae9be16081f",
      "item": {
        "type": "paragraph",
        "id": "7a38dae9be16081f",
        "text": "\n\nAlmost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717).\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. Computation is therefore simply a question of translating inputs and outputs from one system to another.\n"
      },
      "date": 1654772859113
    },
    {
      "type": "edit",
      "id": "7a38dae9be16081f",
      "item": {
        "type": "paragraph",
        "id": "7a38dae9be16081f",
        "text": "\nAlmost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717).\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. [[Computation]] is therefore simply a question of translating inputs and outputs from one system to another.\n"
      },
      "date": 1654772873161
    },
    {
      "type": "edit",
      "id": "7a38dae9be16081f",
      "item": {
        "type": "paragraph",
        "id": "7a38dae9be16081f",
        "text": "Almost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717). [https://mathworld.wolfram.com/PrincipleofComputationalEquivalence.html mathworld]\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. [[Computation]] is therefore simply a question of translating inputs and outputs from one system to another.\n"
      },
      "date": 1654772900385
    },
    {
      "type": "edit",
      "id": "7a38dae9be16081f",
      "item": {
        "type": "paragraph",
        "id": "7a38dae9be16081f",
        "text": "Almost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717). [https://mathworld.wolfram.com/PrincipleofComputationalEquivalence.html mathworld]\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. [[Computation]] is therefore simply a question of [[translating]] inputs and outputs from one system to another.\n"
      },
      "date": 1654772986032
    },
    {
      "id": "0d3e68036fecfe91",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0d3e68036fecfe91",
        "text": "Parens arithmetic explicitly separates the operations of arithmetic from the standardization of how a number is written or displayed. The primary change is to think of conventional arithmetic operations like addition or multiplication as extremely simple: one parallel put together for addition, one parallel put inside for multiplication. Separate from the operations of arithmetic is what we might normally call computation. Parens computation constructs a canonical form by alternating applications of parallel group and merge. [[Computation]] is implemented by one-to-one [[pattern-matching]] and [[substitution]]."
      },
      "date": 1659863651269
    },
    {
      "type": "edit",
      "id": "0d3e68036fecfe91",
      "item": {
        "type": "paragraph",
        "id": "0d3e68036fecfe91",
        "text": "[[Computation]] is implemented by one-to-one [[pattern-matching]] and [[substitution]]."
      },
      "date": 1659863666204
    },
    {
      "type": "edit",
      "id": "0d3e68036fecfe91",
      "item": {
        "type": "paragraph",
        "id": "0d3e68036fecfe91",
        "text": "Computation is implemented by one-to-one [[pattern-matching]] and [[substitution]]."
      },
      "date": 1659863674261
    },
    {
      "item": {
        "type": "factory",
        "id": "3fe2df67e979dbd4"
      },
      "id": "3fe2df67e979dbd4",
      "type": "add",
      "after": "7a38dae9be16081f",
      "date": 1659863683332
    },
    {
      "id": "3fe2df67e979dbd4",
      "type": "move",
      "order": [
        "0d3e68036fecfe91",
        "3fe2df67e979dbd4",
        "7aea3b4d09f7c739",
        "0ee96c8a4b25e42a",
        "45462dc9200ae13b",
        "04e6b33ae08802a6",
        "6e3ee8925614022e",
        "f5760f43414e20c8",
        "7a38dae9be16081f"
      ],
      "date": 1659863687451
    },
    {
      "type": "edit",
      "id": "3fe2df67e979dbd4",
      "item": {
        "type": "pagefold",
        "id": "3fe2df67e979dbd4",
        "text": "~"
      },
      "date": 1659863690199
    },
    {
      "type": "edit",
      "id": "0d3e68036fecfe91",
      "item": {
        "type": "paragraph",
        "id": "0d3e68036fecfe91",
        "text": "Computation is implemented by one-to-one [[Pattern-Matching]] and [[Substitution]]."
      },
      "date": 1663998698560
    },
    {
      "id": "7c4048b0312272ad",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "7c4048b0312272ad",
        "text": "> Its network layer is powered by [https://croquet.io Croquet]. Croquet's unique technology ensures bit-identical [[Computation]] in each participants' local browser, reducing network traffic and latency.\n\n"
      },
      "after": "0d3e68036fecfe91",
      "date": 1665400096607
    },
    {
      "type": "fork",
      "date": 1665400111948
    },
    {
      "type": "fork",
      "date": 1665400119055
    },
    {
      "type": "fork",
      "date": 1665400139355
    },
    {
      "type": "edit",
      "id": "7c4048b0312272ad",
      "item": {
        "type": "markdown",
        "id": "7c4048b0312272ad",
        "text": "[[Croquet]]'s unique technology ensures bit-identical *Computation* in each participants' local browser, reducing network traffic and latency.\n\n"
      },
      "date": 1665400163444
    },
    {
      "type": "edit",
      "id": "7a38dae9be16081f",
      "item": {
        "type": "paragraph",
        "id": "7a38dae9be16081f",
        "text": "Almost all processes that are not obviously simple can be viewed as computations of equivalent sophistication (Wolfram 2002, pp. 5 and 716-717). [https://mathworld.wolfram.com/PrincipleofComputationalEquivalence.html mathworld]\n\nMore specifically, the principle of computational equivalence says that systems found in the natural world can perform computations up to a maximal (\"universal\") level of computational power, and that most systems do in fact attain this maximal level of computational power. Consequently, most systems are computationally equivalent. For example, the workings of the human brain or the evolution of weather systems can, in principle, compute the same things as a computer. [[Computation]] is therefore simply a question of [[translating]] inputs and outputs from one [[System]] to another.\n"
      },
      "date": 1706134915293
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709461764663
    }
  ]
}