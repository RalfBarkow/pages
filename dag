{
  "title": "DAG",
  "story": [
    {
      "type": "reference",
      "id": "027530b121d3f62f",
      "site": "wiki.ralfbarkow.ch",
      "slug": "directed-acyclic-graph",
      "title": "Directed Acyclic Graph",
      "text": "In mathematics and computer science, a directed acyclic graph (DAG), is a finite directed graph with no directed cycles - [https://en.wikipedia.org/wiki/Directed_Acyclic_Graph wikipedia]"
    },
    {
      "type": "reference",
      "id": "00b3465594bacf52",
      "site": "wiki.ralfbarkow.ch",
      "slug": "getting-two-sides-of-wiki-together",
      "title": "Getting Two sides of wiki together",
      "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:"
    },
    {
      "type": "pagefold",
      "id": "09a7d4a9820c2233",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "51b73fb9919fe17f",
      "text": "HU, Kekun, ZENG, Guosun, DING, Shuang and JIANG, Huowen, 2019. Cluster-Scheduling Big Graph Traversal Task for Parallel Processing in Heterogeneous Cloud Based on DAG Transformation. IEEE Access. 2019. Vol. 7, p. 77070–77082. DOI 10.1109/ACCESS.2019.2921477. Task scheduling is the key to the full utilization of heterogeneous cloud capabilities for parallel processing of big graphs. Most graph processing systems adopt single-granularity scheduling mechanisms without considering the heterogeneity of the cloud, leading to poor performance. To alleviate it by learning from the excellent directed acyclic graph (DAG)-based scheduling techniques accumulated in traditional parallel computing, we first present a streaming DAG-construction heuristic. It transforms a big graph along with graph traversal algorithms to be carried out into a DAG. We then propose a three-phase heterogeneous-aware cluster-scheduling algorithm to schedule the DAG into a heterogeneous cloud for parallel processing. In the first phase, we design a parallel linear clustering algorithm to cluster the DAG into a series of linear clusters with different granularities. In the second phase, we design a heterogeneous-aware load balancing algorithm to map these clusters to different computational nodes of the cloud. In the last phase, we design a task ordering algorithm to assigns these clusters as-early-as-possible start times. The experimental results show that our scheme can generate high-quality schedules and improve the efficiency and performance of parallel processing of big graphs in the heterogeneous cloud.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "DAG",
        "story": []
      },
      "date": 1674806576318
    },
    {
      "item": {
        "type": "factory",
        "id": "027530b121d3f62f"
      },
      "id": "027530b121d3f62f",
      "type": "add",
      "date": 1674806580613
    },
    {
      "type": "edit",
      "id": "027530b121d3f62f",
      "item": {
        "type": "reference",
        "id": "027530b121d3f62f",
        "site": "wiki.ralfbarkow.ch",
        "slug": "directed-acyclic-graph",
        "title": "Directed Acyclic Graph",
        "text": "In mathematics and computer science, a directed acyclic graph (DAG), is a finite directed graph with no directed cycles - [https://en.wikipedia.org/wiki/Directed_Acyclic_Graph wikipedia]"
      },
      "date": 1674806582877
    },
    {
      "item": {
        "type": "factory",
        "id": "00b3465594bacf52"
      },
      "id": "00b3465594bacf52",
      "type": "add",
      "after": "027530b121d3f62f",
      "date": 1674806586791
    },
    {
      "type": "edit",
      "id": "00b3465594bacf52",
      "item": {
        "type": "reference",
        "id": "00b3465594bacf52",
        "site": "wiki.ralfbarkow.ch",
        "slug": "getting-two-sides-of-wiki-together",
        "title": "Getting Two sides of wiki together",
        "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of _Wikipedia_ and _Fedwiki_:"
      },
      "date": 1674806588567
    },
    {
      "item": {
        "type": "factory",
        "id": "09a7d4a9820c2233"
      },
      "id": "09a7d4a9820c2233",
      "type": "add",
      "after": "00b3465594bacf52",
      "date": 1674807055559
    },
    {
      "type": "edit",
      "id": "09a7d4a9820c2233",
      "item": {
        "type": "pagefold",
        "id": "09a7d4a9820c2233",
        "text": "~"
      },
      "date": 1684787311616
    },
    {
      "id": "51b73fb9919fe17f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "51b73fb9919fe17f",
        "text": "⇒ [[DAG]]: HU, Kekun, ZENG, Guosun, DING, Shuang and JIANG, Huowen, 2019. Cluster-Scheduling Big Graph Traversal Task for Parallel Processing in Heterogeneous Cloud Based on DAG Transformation. IEEE Access. 2019. Vol. 7, p. 77070–77082. DOI 10.1109/ACCESS.2019.2921477. Task scheduling is the key to the full utilization of heterogeneous cloud capabilities for parallel processing of big graphs. Most graph processing systems adopt single-granularity scheduling mechanisms without considering the heterogeneity of the cloud, leading to poor performance. To alleviate it by learning from the excellent directed acyclic graph (DAG)-based scheduling techniques accumulated in traditional parallel computing, we first present a streaming DAG-construction heuristic. It transforms a big graph along with graph traversal algorithms to be carried out into a DAG. We then propose a three-phase heterogeneous-aware cluster-scheduling algorithm to schedule the DAG into a heterogeneous cloud for parallel processing. In the first phase, we design a parallel linear clustering algorithm to cluster the DAG into a series of linear clusters with different granularities. In the second phase, we design a heterogeneous-aware load balancing algorithm to map these clusters to different computational nodes of the cloud. In the last phase, we design a task ordering algorithm to assigns these clusters as-early-as-possible start times. The experimental results show that our scheme can generate high-quality schedules and improve the efficiency and performance of parallel processing of big graphs in the heterogeneous cloud.\n"
      },
      "after": "09a7d4a9820c2233",
      "attribution": {
        "page": "2023-05-22"
      },
      "date": 1684787375341
    },
    {
      "type": "edit",
      "id": "51b73fb9919fe17f",
      "item": {
        "type": "paragraph",
        "id": "51b73fb9919fe17f",
        "text": "HU, Kekun, ZENG, Guosun, DING, Shuang and JIANG, Huowen, 2019. Cluster-Scheduling Big Graph Traversal Task for Parallel Processing in Heterogeneous Cloud Based on DAG Transformation. IEEE Access. 2019. Vol. 7, p. 77070–77082. DOI 10.1109/ACCESS.2019.2921477. Task scheduling is the key to the full utilization of heterogeneous cloud capabilities for parallel processing of big graphs. Most graph processing systems adopt single-granularity scheduling mechanisms without considering the heterogeneity of the cloud, leading to poor performance. To alleviate it by learning from the excellent directed acyclic graph (DAG)-based scheduling techniques accumulated in traditional parallel computing, we first present a streaming DAG-construction heuristic. It transforms a big graph along with graph traversal algorithms to be carried out into a DAG. We then propose a three-phase heterogeneous-aware cluster-scheduling algorithm to schedule the DAG into a heterogeneous cloud for parallel processing. In the first phase, we design a parallel linear clustering algorithm to cluster the DAG into a series of linear clusters with different granularities. In the second phase, we design a heterogeneous-aware load balancing algorithm to map these clusters to different computational nodes of the cloud. In the last phase, we design a task ordering algorithm to assigns these clusters as-early-as-possible start times. The experimental results show that our scheme can generate high-quality schedules and improve the efficiency and performance of parallel processing of big graphs in the heterogeneous cloud.\n"
      },
      "date": 1684787383691
    }
  ]
}