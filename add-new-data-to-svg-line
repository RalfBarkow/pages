{
  "title": "Add New Data to SVG Line",
  "story": [
    {
      "type": "paragraph",
      "id": "54a39b1ea079b8c4",
      "text": "We want to plot a timeseries where the data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
    },
    {
      "type": "code",
      "id": "8a09495376c628af",
      "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, Math.round(y+=rn()*5)]"
    },
    {
      "type": "paragraph",
      "id": "cf2a3a88b7ad7864",
      "text": "We collect data in a growing polyline."
    },
    {
      "type": "code",
      "id": "c8963fb39e7da82f",
      "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
    },
    {
      "type": "paragraph",
      "id": "297bf01896400221",
      "text": "When the line is full we start another."
    },
    {
      "type": "code",
      "id": "f9fe135208cae90e",
      "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nsetInterval(grow, 10)"
    },
    {
      "type": "paragraph",
      "id": "4afcf9bdd6c565a4",
      "text": "We clone and color lines as they complete. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
    },
    {
      "type": "code",
      "id": "d196f18294134309",
      "text": "function save () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}"
    },
    {
      "type": "code",
      "id": "71dffd447e822e0f",
      "text": "null"
    },
    {
      "type": "frame",
      "id": "777ff878d8f1cc7e",
      "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 400"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Add New Data to SVG Line",
        "story": [
          {
            "type": "paragraph",
            "id": "54a39b1ea079b8c4",
            "text": "Explain what this code does."
          },
          {
            "type": "code",
            "id": "c8963fb39e7da82f",
            "text": "2 + 3"
          },
          {
            "type": "frame",
            "id": "777ff878d8f1cc7e",
            "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
          }
        ]
      },
      "date": 1616284383205
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M 10,30\n           A 20,20 0,0,1 50,30\n           A 20,20 0,0,1 90,30\n           Q 90,60 50,90\n           Q 10,60 10,30 z\"/>\n</svg>`"
      },
      "date": 1616284680334
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where data shows up as it happens. [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path mdn]"
      },
      "date": 1616284882085
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where data shows up as it happens. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn]"
      },
      "date": 1616285385643
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where data shows up as it happens. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616285413058
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" />\n</svg>`"
      },
      "date": 1616285453612
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 200 200\">\n  <polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" />\n</svg>`"
      },
      "date": 1616285515794
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 200 200\">\n  <polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" />\n</svg>\n`"
      },
      "date": 1616285556839
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 200 200\">\n  <polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616285576110
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 200 200\">\n  <polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616285594187
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 200 200\"><polyline points=\"100,100 150,25 150,75 200,0\"\n            fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616285677427
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 200 200\"><polyline points=\"100,100 150,25 150,75 200,0\" fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616285710148
    },
    {
      "item": {
        "type": "factory",
        "id": "8a09495376c628af"
      },
      "id": "8a09495376c628af",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1616285907942
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = Array(20).map(()=>Math.round(Math.random()*20)"
      },
      "date": 1616286028530
    },
    {
      "id": "8a09495376c628af",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "c8963fb39e7da82f",
        "8a09495376c628af",
        "777ff878d8f1cc7e"
      ],
      "date": 1616286032113
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = Array(20).map(()=>Math.round(Math.random()*20))"
      },
      "date": 1616286039814
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = Array(20).map(()=>Math.round(Math.random()*20))\ndata"
      },
      "date": 1616286054604
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = []\nfor (let i = 0; i<10; i++) Array(20).map(()=>Math.round(Math.random()*20))\ndata"
      },
      "date": 1616286209224
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = []\nfor (let i = 0; i<10; i++) {\n  data.push(i)\n  data.push(Math.round(Math.random()*20))\n}\ndata"
      },
      "date": 1616286275632
    },
    {
      "id": "8a09495376c628af",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "c8963fb39e7da82f",
        "777ff878d8f1cc7e"
      ],
      "date": 1616286290043
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 200 200\"><polyline points=\"${data).join(\" \")}\" fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616286340092
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 200 200\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616286355131
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" /></svg>`"
      },
      "date": 1616286372077
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = []\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(Math.round(Math.random()*20))\n}\ndata"
      },
      "date": 1616286405320
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = []\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(Math.round(Math.random()*100))\n}\ndata"
      },
      "date": 1616286449722
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let data = []\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(Math.round(Math.random()*50))\n}\ndata"
      },
      "date": 1616286459055
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 0\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(sum += rn())\n}\ndata"
      },
      "date": 1616286633400
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 0\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}\ndata"
      },
      "date": 1616286655391
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 50\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}\ndata"
      },
      "date": 1616286683739
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 400"
      },
      "date": 1616286698946
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" stroke-width=1/></svg>`"
      },
      "date": 1616286826490
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" stroke-width=.1/></svg>`"
      },
      "date": 1616286958510
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" stroke-width=\".1\"/></svg>`"
      },
      "date": 1616286967212
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"black\" stroke-width=\".2\"/></svg>`"
      },
      "date": 1616286980973
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"#333\" stroke-width=\".2\"/></svg>`"
      },
      "date": 1616287023234
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"#888\" stroke-width=\".2\"/></svg>`"
      },
      "date": 1616287029987
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\".2\"/></svg>`"
      },
      "date": 1616287039806
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\"/></svg>`"
      },
      "date": 1616287073863
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\" line-join=round/></svg>`"
      },
      "date": 1616287189935
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\" line-join=\"round\"/></svg>`"
      },
      "date": 1616287202054
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\"2\" stroke-linejoin=\"round\"/></svg>`"
      },
      "date": 1616287289244
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `<svg viewBox=\"0 0 100 100\"><polyline points=\"${data.join(\" \")}\" fill=\"none\" stroke=\"gray\" stroke-width=\".5\" stroke-linejoin=\"round\"/></svg>`"
      },
      "date": 1616287313622
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 50\nfor (let i = 0; i<100; i++) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}"
      },
      "date": 1616287389289
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616287483077
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`\nundefined"
      },
      "date": 1616287522342
    },
    {
      "item": {
        "type": "factory",
        "id": "f9fe135208cae90e"
      },
      "id": "f9fe135208cae90e",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1616287590744
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "undefined"
      },
      "date": 1616287600051
    },
    {
      "id": "f9fe135208cae90e",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "c8963fb39e7da82f",
        "f9fe135208cae90e",
        "777ff878d8f1cc7e"
      ],
      "date": 1616287604633
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616287612298
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100, 100,0, 0,0\" />\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289526673
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100, 100,0, 0,0\"\n    fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289574490
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100, 100,0, 0,0\"\n    stroke=\"white\" fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289596639
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100, 100,0, 0,0\"\n    stroke=\"black\" fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289612477
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 50\nfor (let i = 1; i<100; i++) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}"
      },
      "date": 1616289635017
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"black\" fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289681302
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"gray\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616289728206
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 50\nfor (let i = 1; i<100; i+=0.5) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}"
      },
      "date": 1616289945800
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "const rn = () => Math.random()-Math.random()\n\nlet data = []\nlet sum = 50\nfor (let i = 1; i<100; i+=0.2) {\n  data.push(i)\n  data.push(sum += rn()*10)\n}"
      },
      "date": 1616289959798
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline \n    points=\"${data.join(\" \")}\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616290235994
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx () => [x+=1, y+=rn()]"
      },
      "date": 1616290683709
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, y+=rn()]"
      },
      "date": 1616290699739
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline \n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616290724275
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst dl = (ms) => new Promise((res) => setTimeout(res, ms))\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, y+=rn()]"
      },
      "date": 1616291006826
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, y+=rn()]\n\nconst dl = (ms) => \n  new Promise((res) => setTimeout(res, ms))"
      },
      "date": 1616291056640
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, y+=rn()]\nconst dl = (ms) => \n  new Promise((res) => setTimeout(res, ms))"
      },
      "date": 1616291064152
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, y+=rn()]"
      },
      "date": 1616291092364
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let line = null\n}"
      },
      "date": 1616291166368
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616291531608
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  poly\n}"
      },
      "date": 1616291644479
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  console.log(points)\n  poly.setAttribute('points', points + ' ' + nx()\n}\n\nsetInterval(more, 1000)"
      },
      "date": 1616291906476
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  console.log(points)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nsetInterval(more, 1000)"
      },
      "date": 1616291942687
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, Math.round(y+=rn())]"
      },
      "date": 1616292024098
    },
    {
      "type": "edit",
      "id": "8a09495376c628af",
      "item": {
        "type": "code",
        "id": "8a09495376c628af",
        "text": "let x = 0\nlet y = 50\n\nconst rn = () => Math.random()-Math.random()\nconst nx = () => [x+=1, Math.round(y+=rn()*5)]"
      },
      "date": 1616292067425
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  console.log(points)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nsetInterval(more, 500)"
      },
      "date": 1616292154441
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nsetInterval(more, 500)"
      },
      "date": 1616292175601
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0\n    y = 50\n    poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 500)"
      },
      "date": 1616292459046
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0\n    y = 50\n    poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 200)"
      },
      "date": 1616292484515
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0\n    y = 50\n    poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 100)"
      },
      "date": 1616295138559
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0; y = 50; poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 100)"
      },
      "date": 1616295187805
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0; y = 50; poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 20)"
      },
      "date": 1616295494245
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 110) {\n    x = 0; y = 50; poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 10)"
      },
      "date": 1616295616781
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 120) {\n    x = 0; y = 50; poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 10)"
      },
      "date": 1616295684528
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  poly.setAttribute('points', points + ' ' + nx())\n  if (x > 130) {\n    x = 0; y = 50; poly.setAttribute('points', '')\n  }\n}\n\nsetInterval(more, 10)"
      },
      "date": 1616295695726
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) { x = 0; y = 50; points='' }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nsetInterval(more, 10)"
      },
      "date": 1616295991421
    },
    {
      "type": "add",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We imagine collecting a series of lines where only the most recent is growing."
      },
      "after": "54a39b1ea079b8c4",
      "date": 1616296093152
    },
    {
      "id": "cf2a3a88b7ad7864",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "cf2a3a88b7ad7864",
        "c8963fb39e7da82f",
        "f9fe135208cae90e",
        "777ff878d8f1cc7e"
      ],
      "date": 1616296096111
    },
    {
      "type": "add",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate the history in the dom as a collections of points in each polyline."
      },
      "after": "cf2a3a88b7ad7864",
      "date": 1616296197610
    },
    {
      "id": "297bf01896400221",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "cf2a3a88b7ad7864",
        "c8963fb39e7da82f",
        "297bf01896400221",
        "f9fe135208cae90e",
        "777ff878d8f1cc7e"
      ],
      "date": 1616296201447
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate the history in the DOM as a collections of points in each polyline."
      },
      "date": 1616296207706
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next datapoints shows up as they happen. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296258734
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next data points shows up as they happen. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296275759
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next data points shows up as they happen. We'll make this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296333824
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296347675
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next data points shows up as they happen. We'll model this a random walk always beginning from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296370227
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the next data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616296384030
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate the history in the DOM as a collections of points in the polyline. "
      },
      "date": 1616296429068
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate the history in the DOM as a collections of points in the polyline. This completes in a few milliseconds."
      },
      "date": 1616296445909
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate the history in the DOM as a collections of points in the polyline. This completes in about 2 ms."
      },
      "date": 1616296456402
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) { x = 0; y = 50; points='' }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616296513831
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We imagine collecting a series of polylines where only the most recent is growing."
      },
      "date": 1616297462796
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) { x = 0; y = 50; points='' }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  x = 0; y = 50; points=''\n}\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454557219
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) { x = 0; y = 50; points='' }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454654090
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454700334
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  poly.after(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454755234
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  poly.before(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454846463
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  hist.before(poly)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454880966
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  poly.before(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454924985
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616454936010
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) reset(poly)\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n  x = 0; y = 50; points=''\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616454962048
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) {x = 0; y = 50; points=''; reset(poly) }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616455083837
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; reset(poly) }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = poly.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616455098820
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let poly = document.getElementById('growing')\n  let points = poly.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; reset(poly) }\n  poly.setAttribute('points', points + ' ' + nx())\n}\n\nfunction reset (poly) {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616455143411
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; reset() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nfunction reset () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616455220957
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function more () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; freeze() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nfunction freeze () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(more, 10)\nundefined"
      },
      "date": 1616455407887
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; freeze() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nfunction freeze () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(grow, 10)\nundefined"
      },
      "date": 1616455433117
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nfunction save () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}\n\nsetInterval(grow, 10)\nundefined"
      },
      "date": 1616455476290
    },
    {
      "type": "add",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We save each line as it completes. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "after": "297bf01896400221",
      "date": 1616457072124
    },
    {
      "id": "4afcf9bdd6c565a4",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "cf2a3a88b7ad7864",
        "c8963fb39e7da82f",
        "297bf01896400221",
        "f9fe135208cae90e",
        "4afcf9bdd6c565a4",
        "777ff878d8f1cc7e"
      ],
      "date": 1616457077760
    },
    {
      "type": "edit",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We save each line as it completes then start another. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "date": 1616457090787
    },
    {
      "type": "edit",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We save lines as they completes then start another. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "date": 1616457104039
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "We accumulate data in the DOM as a collections of points in the polyline. This completes in about 2 ms."
      },
      "date": 1616457225195
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to plot a timeseries where the data points shows up as they happen. We'll model this a random walk always from the same starting point. [https://developer.mozilla.org/en-US/docs/Web/SVG/Tutorial/Basic_Shapes mdn] [https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline mdn]"
      },
      "date": 1616457418738
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We collect a series of polylines where only the most recent is growing."
      },
      "date": 1616457448971
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We collect data in a polyline by adding more points."
      },
      "date": 1616457520723
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We collect data in a growing polyline."
      },
      "date": 1616457596640
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We collect data in a growing polyline. Updates take about 2 ms."
      },
      "date": 1616457677718
    },
    {
      "type": "edit",
      "id": "cf2a3a88b7ad7864",
      "item": {
        "type": "paragraph",
        "id": "cf2a3a88b7ad7864",
        "text": "We collect data in a growing polyline."
      },
      "date": 1616457694330
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "Updates take about 2 ms. When the line is full we start another."
      },
      "date": 1616457742839
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "Updates take 2 ms. When the line is full we start another."
      },
      "date": 1616457780630
    },
    {
      "type": "edit",
      "id": "297bf01896400221",
      "item": {
        "type": "paragraph",
        "id": "297bf01896400221",
        "text": "When the line is full we start another."
      },
      "date": 1616457805320
    },
    {
      "type": "edit",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We save lines as they completes by cloning them. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "date": 1616457832708
    },
    {
      "type": "edit",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We clone and color lines as they completes. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "date": 1616457893277
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nsetInterval(grow, 10)\nundefined"
      },
      "date": 1616457947589
    },
    {
      "item": {
        "type": "factory",
        "id": "d196f18294134309"
      },
      "id": "d196f18294134309",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1616457959095
    },
    {
      "type": "edit",
      "id": "d196f18294134309",
      "item": {
        "type": "code",
        "id": "d196f18294134309",
        "text": "function save () {\n  let hist = growing.cloneNode()\n  hist.setAttribute('id','')\n  hist.setAttribute('stroke','#ddd')\n  grid.before(hist)\n}"
      },
      "date": 1616457969139
    },
    {
      "id": "d196f18294134309",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "cf2a3a88b7ad7864",
        "c8963fb39e7da82f",
        "297bf01896400221",
        "f9fe135208cae90e",
        "4afcf9bdd6c565a4",
        "d196f18294134309",
        "777ff878d8f1cc7e"
      ],
      "date": 1616457971289
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nsetInterval(grow, 10)"
      },
      "date": 1616458027050
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`\nundefined"
      },
      "date": 1616458040840
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616458059022
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nsetInterval(grow, 10)\nundefined"
      },
      "date": 1616458072173
    },
    {
      "type": "edit",
      "id": "4afcf9bdd6c565a4",
      "item": {
        "type": "paragraph",
        "id": "4afcf9bdd6c565a4",
        "text": "We clone and color lines as they complete. [https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode mdn]"
      },
      "date": 1616458154385
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nlet timer = setInterval(grow, 10)"
      },
      "date": 1616458434199
    },
    {
      "type": "edit",
      "id": "f9fe135208cae90e",
      "item": {
        "type": "code",
        "id": "f9fe135208cae90e",
        "text": "function grow () {\n  let points = growing.getAttribute('points')\n  if (x > 130) {x=0; y=50; points=''; save() }\n  growing.setAttribute('points', points+' '+nx())\n}\n\nsetInterval(grow, 10)"
      },
      "date": 1616459438873
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "_ = output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616459493337
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "output.innerHTML = `\n<svg viewBox=\"0 0 100 100\">\n  <polyline\n    id=\"grid\"\n    points=\"0,0 0,100 100,100 100,0 0,0 0,50 100,50\"\n    stroke=\"#ccc\" fill=\"none\"/>\n  <polyline\n    id=\"growing\"\n    points=\"\"\n    fill=\"none\"\n    stroke=\"brown\"\n    stroke-width=\".5\"\n    stroke-linejoin=\"round\"/>\n</svg>`"
      },
      "date": 1616459516169
    },
    {
      "item": {
        "type": "factory",
        "id": "71dffd447e822e0f"
      },
      "id": "71dffd447e822e0f",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1616459574539
    },
    {
      "type": "edit",
      "id": "71dffd447e822e0f",
      "item": {
        "type": "code",
        "id": "71dffd447e822e0f",
        "text": "null"
      },
      "date": 1616459584696
    },
    {
      "id": "71dffd447e822e0f",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "8a09495376c628af",
        "cf2a3a88b7ad7864",
        "c8963fb39e7da82f",
        "297bf01896400221",
        "f9fe135208cae90e",
        "4afcf9bdd6c565a4",
        "d196f18294134309",
        "71dffd447e822e0f",
        "777ff878d8f1cc7e"
      ],
      "date": 1616459590797
    },
    {
      "type": "fork",
      "site": "js.ward.asia.wiki.org",
      "date": 1626867786161
    }
  ]
}