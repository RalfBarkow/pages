{
  "title": "UUID",
  "story": [
    {
      "type": "reference",
      "id": "7f00263f4a3d0351",
      "site": "wiki.ralfbarkow.ch",
      "slug": "universally-unique-identifier",
      "title": "Universally unique identifier",
      "text": "a 128-bit number used to identify information in computer systems. [https://en.wikipedia.org/wiki/Universally_unique_identifier wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "5017b7068702af07",
      "text": "I am UUID.\nI am a ByteArray.\n\nAn RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.\n\nThe intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\"."
    },
    {
      "type": "paragraph",
      "id": "1e1f7bcba33db9ea",
      "text": "Usage:"
    },
    {
      "type": "code",
      "id": "0e1abb7bfa0af391",
      "text": "UUID new."
    },
    {
      "type": "paragraph",
      "id": "3be9657d065c4e74",
      "text": "Whenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.\n\nSee [[UUIDGenerator]] for extensive documentation on how UUIDs are actually generated."
    },
    {
      "type": "paragraph",
      "id": "b58578e60f410d82",
      "text": "UUIDs have a standard string representation, like this:"
    },
    {
      "type": "code",
      "id": "d3bce0c2135bbded",
      "text": "3ccb64f1-aa04-0d00-bbbc-259a0f871399"
    },
    {
      "type": "paragraph",
      "id": "a92dfd44e39ab0e8",
      "text": "The representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).\n\nMy #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.\n\nAlternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.\n\nSee #asString36 and my class' #fromString36:\n\nUUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique."
    },
    {
      "type": "markdown",
      "id": "6a550bdf53ce2ad6",
      "text": "See also:\n\n* [http://en.wikipedia.org/wiki/UUID wikipedia]\n* [https://tools.ietf.org/html/rfc4122 rfc4122]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "UUID",
        "story": []
      },
      "date": 1702992729951
    },
    {
      "item": {
        "type": "factory",
        "id": "7f00263f4a3d0351"
      },
      "id": "7f00263f4a3d0351",
      "type": "add",
      "date": 1702992731029
    },
    {
      "type": "edit",
      "id": "7f00263f4a3d0351",
      "item": {
        "type": "reference",
        "id": "7f00263f4a3d0351",
        "site": "wiki.ralfbarkow.ch",
        "slug": "universally-unique-identifier",
        "title": "Universally unique identifier",
        "text": "A __universally unique identifier__ ([[UUID]]) is a [[128-bit]] number used to identify information in computer systems. The term __globally unique identifier__ ([[GUID]]) is also used - [https://en.wikipedia.org/wiki/Universally_unique_identifier wikipedia]"
      },
      "date": 1702992735907
    },
    {
      "type": "edit",
      "id": "7f00263f4a3d0351",
      "item": {
        "type": "reference",
        "id": "7f00263f4a3d0351",
        "site": "wiki.ralfbarkow.ch",
        "slug": "universally-unique-identifier",
        "title": "Universally unique identifier",
        "text": "a [[128-bit]] number used to identify information in computer systems. The term __globally unique identifier__ ([[GUID]]) is also used - [https://en.wikipedia.org/wiki/Universally_unique_identifier wikipedia]"
      },
      "date": 1702992751612
    },
    {
      "type": "edit",
      "id": "7f00263f4a3d0351",
      "item": {
        "type": "reference",
        "id": "7f00263f4a3d0351",
        "site": "wiki.ralfbarkow.ch",
        "slug": "universally-unique-identifier",
        "title": "Universally unique identifier",
        "text": "a [[128-bit]] number used to identify information in computer systems. [https://en.wikipedia.org/wiki/Universally_unique_identifier wikipedia]"
      },
      "date": 1702992770459
    },
    {
      "type": "edit",
      "id": "7f00263f4a3d0351",
      "item": {
        "type": "reference",
        "id": "7f00263f4a3d0351",
        "site": "wiki.ralfbarkow.ch",
        "slug": "universally-unique-identifier",
        "title": "Universally unique identifier",
        "text": "a 128-bit number used to identify information in computer systems. [https://en.wikipedia.org/wiki/Universally_unique_identifier wikipedia]"
      },
      "date": 1702992793039
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1703083617998
    },
    {
      "item": {
        "type": "factory",
        "id": "5017b7068702af07"
      },
      "id": "5017b7068702af07",
      "type": "add",
      "after": "7f00263f4a3d0351",
      "date": 1703849938622
    },
    {
      "type": "edit",
      "id": "5017b7068702af07",
      "item": {
        "type": "paragraph",
        "id": "5017b7068702af07",
        "text": "I am UUID.\nI am a ByteArray.\n\nAn RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.\n\nThe intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\".\n\nUsage:\n\n\tUUID new.\n\t\nWhenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.\n\nSee UUIDGenerator for extensive documentation on how UUIDs are actually generated.\n\nUUIDs have a standard string representation, like this:\n\n\t3ccb64f1-aa04-0d00-bbbc-259a0f871399\n\t\nThe representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).\n\nMy #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.\n\nAlternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.\n\nSee #asString36 and my class' #fromString36:\n\nUUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique.\n\nSee also:\n\n  http://en.wikipedia.org/wiki/UUID\n  https://tools.ietf.org/html/rfc4122"
      },
      "date": 1703849942004
    },
    {
      "type": "edit",
      "id": "5017b7068702af07",
      "item": {
        "type": "paragraph",
        "id": "5017b7068702af07",
        "text": "I am UUID.\nI am a ByteArray.\n\nAn RFC4122 Universally Unique Identifier (UUID) is an opaque 128-bit number that can be used for identification purposes. Concretely, a UUID is a 16 element byte array.\n\nThe intent of UUIDs is to enable distributed systems to uniquely identify information without significant central coordination. In this context the word unique should be taken to mean \"practically unique\" rather than \"guaranteed unique\"."
      },
      "date": 1703849983592
    },
    {
      "type": "add",
      "id": "1e1f7bcba33db9ea",
      "item": {
        "type": "paragraph",
        "id": "1e1f7bcba33db9ea",
        "text": "Usage:"
      },
      "after": "5017b7068702af07",
      "date": 1703849985546
    },
    {
      "type": "add",
      "id": "fd5602458bf5a752",
      "item": {
        "type": "paragraph",
        "id": "fd5602458bf5a752",
        "text": "UUID new."
      },
      "after": "1e1f7bcba33db9ea",
      "date": 1703849987618
    },
    {
      "type": "add",
      "id": "3be9657d065c4e74",
      "item": {
        "type": "paragraph",
        "id": "3be9657d065c4e74",
        "text": "Whenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.\n\nSee UUIDGenerator for extensive documentation on how UUIDs are actually generated.\n\nUUIDs have a standard string representation, like this:\n\n\t3ccb64f1-aa04-0d00-bbbc-259a0f871399\n\t\nThe representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).\n\nMy #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.\n\nAlternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.\n\nSee #asString36 and my class' #fromString36:\n\nUUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique.\n\nSee also:\n\n  http://en.wikipedia.org/wiki/UUID\n  https://tools.ietf.org/html/rfc4122"
      },
      "after": "fd5602458bf5a752",
      "date": 1703849989321
    },
    {
      "item": {
        "type": "factory",
        "id": "0e1abb7bfa0af391"
      },
      "id": "0e1abb7bfa0af391",
      "type": "add",
      "after": "3be9657d065c4e74",
      "date": 1703849992040
    },
    {
      "id": "0e1abb7bfa0af391",
      "type": "move",
      "order": [
        "7f00263f4a3d0351",
        "5017b7068702af07",
        "1e1f7bcba33db9ea",
        "fd5602458bf5a752",
        "0e1abb7bfa0af391",
        "3be9657d065c4e74"
      ],
      "date": 1703850001025
    },
    {
      "type": "remove",
      "id": "fd5602458bf5a752",
      "date": 1703850006187
    },
    {
      "type": "edit",
      "id": "0e1abb7bfa0af391",
      "item": {
        "type": "code",
        "id": "0e1abb7bfa0af391",
        "text": "UUID new."
      },
      "date": 1703850007924
    },
    {
      "type": "edit",
      "id": "3be9657d065c4e74",
      "item": {
        "type": "paragraph",
        "id": "3be9657d065c4e74",
        "text": "Whenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.\n\nSee UUIDGenerator for extensive documentation on how UUIDs are actually generated."
      },
      "date": 1703850036763
    },
    {
      "type": "add",
      "id": "b58578e60f410d82",
      "item": {
        "type": "paragraph",
        "id": "b58578e60f410d82",
        "text": "UUIDs have a standard string representation, like this:"
      },
      "after": "3be9657d065c4e74",
      "date": 1703850038643
    },
    {
      "type": "add",
      "id": "713f0cd1238eeefc",
      "item": {
        "type": "paragraph",
        "id": "713f0cd1238eeefc",
        "text": "3ccb64f1-aa04-0d00-bbbc-259a0f871399"
      },
      "after": "b58578e60f410d82",
      "date": 1703850042045
    },
    {
      "type": "add",
      "id": "a92dfd44e39ab0e8",
      "item": {
        "type": "paragraph",
        "id": "a92dfd44e39ab0e8",
        "text": "The representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).\n\nMy #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.\n\nAlternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.\n\nSee #asString36 and my class' #fromString36:\n\nUUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique.\n\nSee also:\n\n  http://en.wikipedia.org/wiki/UUID\n  https://tools.ietf.org/html/rfc4122"
      },
      "after": "713f0cd1238eeefc",
      "date": 1703850043236
    },
    {
      "item": {
        "type": "factory",
        "id": "9e213315ee5be943"
      },
      "id": "9e213315ee5be943",
      "type": "add",
      "after": "a92dfd44e39ab0e8",
      "date": 1703850045506
    },
    {
      "id": "9e213315ee5be943",
      "type": "move",
      "order": [
        "7f00263f4a3d0351",
        "5017b7068702af07",
        "1e1f7bcba33db9ea",
        "0e1abb7bfa0af391",
        "3be9657d065c4e74",
        "b58578e60f410d82",
        "713f0cd1238eeefc",
        "9e213315ee5be943",
        "a92dfd44e39ab0e8"
      ],
      "date": 1703850054074
    },
    {
      "type": "remove",
      "id": "713f0cd1238eeefc",
      "date": 1703850062649
    },
    {
      "type": "remove",
      "id": "9e213315ee5be943",
      "date": 1703850062666
    },
    {
      "item": {
        "type": "factory",
        "id": "d3bce0c2135bbded"
      },
      "id": "d3bce0c2135bbded",
      "type": "add",
      "after": "a92dfd44e39ab0e8",
      "date": 1703850068125
    },
    {
      "type": "edit",
      "id": "d3bce0c2135bbded",
      "item": {
        "type": "code",
        "id": "d3bce0c2135bbded",
        "text": "3ccb64f1-aa04-0d00-bbbc-259a0f871399"
      },
      "date": 1703850070661
    },
    {
      "id": "d3bce0c2135bbded",
      "type": "move",
      "order": [
        "7f00263f4a3d0351",
        "5017b7068702af07",
        "1e1f7bcba33db9ea",
        "0e1abb7bfa0af391",
        "3be9657d065c4e74",
        "b58578e60f410d82",
        "d3bce0c2135bbded",
        "a92dfd44e39ab0e8"
      ],
      "date": 1703850079035
    },
    {
      "type": "edit",
      "id": "a92dfd44e39ab0e8",
      "item": {
        "type": "paragraph",
        "id": "a92dfd44e39ab0e8",
        "text": "The representation consists of 32 lowercase hexadecimal digits, displayed in five groups separated by hyphens, in the form 8-4-4-4-12 for a total of 36 characters (32 alphanumeric characters and four hyphens).\n\nMy #printOn: #printString and #asString methods produce this representation.  My class' #fromString: or instance #readFrom: parse it.\n\nAlternatively, my base 36 number representation is  the shortest representation still being able to work as filenames etc since it does not depend on case nor characters that might cause problems, and it is reasonably short.\n\nSee #asString36 and my class' #fromString36:\n\nUUIDs are basically opaque (contain no interesting content) and should be treated as indivisable values. Do not use parts of them, since these will most probably no longer be unique."
      },
      "date": 1703850114846
    },
    {
      "type": "add",
      "id": "6a550bdf53ce2ad6",
      "item": {
        "type": "paragraph",
        "id": "6a550bdf53ce2ad6",
        "text": "See also:\n\n  [http://en.wikipedia.org/wiki/UUID wikipedia]\n  [https://tools.ietf.org/html/rfc4122 rfc4122]"
      },
      "after": "a92dfd44e39ab0e8",
      "date": 1703850145908
    },
    {
      "type": "edit",
      "id": "6a550bdf53ce2ad6",
      "item": {
        "type": "paragraph",
        "id": "6a550bdf53ce2ad6",
        "text": "See also:\n\n* [http://en.wikipedia.org/wiki/UUID wikipedia]\n* [https://tools.ietf.org/html/rfc4122 rfc4122]"
      },
      "date": 1703850165863
    },
    {
      "type": "edit",
      "id": "6a550bdf53ce2ad6",
      "item": {
        "type": "markdown",
        "id": "6a550bdf53ce2ad6",
        "text": "See also:\n\n* [http://en.wikipedia.org/wiki/UUID wikipedia]\n* [https://tools.ietf.org/html/rfc4122 rfc4122]"
      },
      "date": 1703850169583
    },
    {
      "type": "edit",
      "id": "3be9657d065c4e74",
      "item": {
        "type": "paragraph",
        "id": "3be9657d065c4e74",
        "text": "Whenever you create a new UUID, the shared, default UUIDGenerator will be used to generate a new, unique UUID.\n\nSee [[UUIDGenerator]] for extensive documentation on how UUIDs are actually generated."
      },
      "date": 1703851241416
    }
  ]
}