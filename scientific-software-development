{
  "title": "Scientific Software Development",
  "story": [
    {
      "type": "paragraph",
      "id": "555aba2e3b63b63e",
      "text": "This paper presents a model of software development based on [[Knowledge Acquisition]]. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. "
    },
    {
      "type": "paragraph",
      "id": "f16dd2a7eab3bf11",
      "text": "This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as “end-user programmers”. "
    },
    {
      "type": "paragraph",
      "id": "538673e43c0f4113",
      "text": "We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. "
    },
    {
      "type": "paragraph",
      "id": "e44d34e0c754f17d",
      "text": "We also observe that the scientist is an integral part of the software system and cannot be [[exclude]]d from its consideration. "
    },
    {
      "type": "paragraph",
      "id": "e051a1858068557f",
      "text": "We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
    },
    {
      "type": "pagefold",
      "id": "9a4711ba709ea051",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "c8bcb0188ad68837",
      "text": "KELLY, Diane, 2015. Scientific software development viewed as knowledge acquisition: Towards understanding the development of risk-averse scientific software. Journal of Systems and Software. 1 November 2015. Vol. 109, p. 50–61. DOI 10.1016/j.jss.2015.07.027."
    },
    {
      "type": "paragraph",
      "id": "1e6b22f50f038706",
      "text": "⇒ [[Lehman’s Second Law of Software Evolution]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Scientific Software Development",
        "story": []
      },
      "date": 1673710166265
    },
    {
      "id": "555aba2e3b63b63e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "555aba2e3b63b63e",
        "text": "KELLY, Diane, 2015. Scientific software development viewed as knowledge acquisition: Towards understanding the development of risk-averse scientific software. Journal of Systems and Software. 1 November 2015. Vol. 109, p. 50–61. DOI 10.1016/j.jss.2015.07.027. This paper presents a model of software development based on knowledge acquisition. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as “end-user programmers”. We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "date": 1673710169296
    },
    {
      "type": "edit",
      "id": "555aba2e3b63b63e",
      "item": {
        "type": "paragraph",
        "id": "555aba2e3b63b63e",
        "text": "This paper presents a model of software development based on knowledge acquisition. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as “end-user programmers”. We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "date": 1673710180872
    },
    {
      "item": {
        "type": "factory",
        "id": "9a4711ba709ea051"
      },
      "id": "9a4711ba709ea051",
      "type": "add",
      "after": "555aba2e3b63b63e",
      "date": 1673710182684
    },
    {
      "item": {
        "type": "factory",
        "id": "c8bcb0188ad68837"
      },
      "id": "c8bcb0188ad68837",
      "type": "add",
      "after": "9a4711ba709ea051",
      "date": 1673710184899
    },
    {
      "type": "edit",
      "id": "c8bcb0188ad68837",
      "item": {
        "type": "paragraph",
        "id": "c8bcb0188ad68837",
        "text": "KELLY, Diane, 2015. Scientific software development viewed as knowledge acquisition: Towards understanding the development of risk-averse scientific software. Journal of Systems and Software. 1 November 2015. Vol. 109, p. 50–61. DOI 10.1016/j.jss.2015.07.027."
      },
      "date": 1673710188198
    },
    {
      "type": "edit",
      "id": "9a4711ba709ea051",
      "item": {
        "type": "pagefold",
        "id": "9a4711ba709ea051",
        "text": "~"
      },
      "date": 1673710189834
    },
    {
      "type": "edit",
      "id": "555aba2e3b63b63e",
      "item": {
        "type": "paragraph",
        "id": "555aba2e3b63b63e",
        "text": "This paper presents a model of software development based on knowledge acquisition. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. "
      },
      "date": 1673710208346
    },
    {
      "type": "add",
      "id": "f16dd2a7eab3bf11",
      "item": {
        "type": "paragraph",
        "id": "f16dd2a7eab3bf11",
        "text": "This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as “end-user programmers”. We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "after": "555aba2e3b63b63e",
      "date": 1673710209006
    },
    {
      "type": "edit",
      "id": "f16dd2a7eab3bf11",
      "item": {
        "type": "paragraph",
        "id": "f16dd2a7eab3bf11",
        "text": "This paper also explains why a particular type of scientist, one who works in a highly risk-averse application domain, does not conform to the common characterization of all scientists as “end-user programmers”. "
      },
      "date": 1673710230484
    },
    {
      "type": "add",
      "id": "538673e43c0f4113",
      "item": {
        "type": "paragraph",
        "id": "538673e43c0f4113",
        "text": "We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "after": "f16dd2a7eab3bf11",
      "date": 1673710231742
    },
    {
      "type": "edit",
      "id": "538673e43c0f4113",
      "item": {
        "type": "paragraph",
        "id": "538673e43c0f4113",
        "text": "We offer observations of how this type of scientist develops trustworthy software. We observe that these scientists work outside the ubiquitous method-based software development paradigms, using instead a knowledge acquisition-based approach to software development. "
      },
      "date": 1673710248724
    },
    {
      "type": "add",
      "id": "e44d34e0c754f17d",
      "item": {
        "type": "paragraph",
        "id": "e44d34e0c754f17d",
        "text": "We also observe that the scientist is an integral part of the software system and cannot be excluded from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "after": "538673e43c0f4113",
      "date": 1673710249228
    },
    {
      "type": "edit",
      "id": "e44d34e0c754f17d",
      "item": {
        "type": "paragraph",
        "id": "e44d34e0c754f17d",
        "text": "We also observe that the scientist is an integral part of the software system and cannot be [[exclude]]d from its consideration. We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "date": 1673710312387
    },
    {
      "type": "edit",
      "id": "e44d34e0c754f17d",
      "item": {
        "type": "paragraph",
        "id": "e44d34e0c754f17d",
        "text": "We also observe that the scientist is an integral part of the software system and cannot be [[exclude]]d from its consideration. "
      },
      "date": 1673710786555
    },
    {
      "type": "add",
      "id": "e051a1858068557f",
      "item": {
        "type": "paragraph",
        "id": "e051a1858068557f",
        "text": "We suggest that use of the knowledge acquisition software development model requires research into how to support acquisition of knowledge while developing software, how to satisfy oversight in regulated application domains, and how to successfully manage a scientific group using this model.\n"
      },
      "after": "e44d34e0c754f17d",
      "date": 1673710788111
    },
    {
      "item": {
        "type": "factory",
        "id": "1e6b22f50f038706"
      },
      "id": "1e6b22f50f038706",
      "type": "add",
      "after": "c8bcb0188ad68837",
      "date": 1673712309470
    },
    {
      "type": "edit",
      "id": "1e6b22f50f038706",
      "item": {
        "type": "paragraph",
        "id": "1e6b22f50f038706",
        "text": "⇒ [[Lehman’s Second Law of Software Evolution]]"
      },
      "date": 1673712320750
    },
    {
      "type": "edit",
      "id": "555aba2e3b63b63e",
      "item": {
        "type": "paragraph",
        "id": "555aba2e3b63b63e",
        "text": "This paper presents a model of software development based on [[Knowledge Acquisition]]. The model was formulated from 10 years of studies of scientific software and scientists who develop software as part of their science. The model is used to examine assumptions behind software development models commonly described in software engineering literature, and compare these with the observed way scientists develop software. "
      },
      "date": 1674825703968
    }
  ]
}