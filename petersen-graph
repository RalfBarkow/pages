{
  "title": "Petersen Graph",
  "story": [
    {
      "type": "paragraph",
      "id": "22c060b7b78e96be",
      "text": "See [[Graveyard Ghost]] for instancing."
    },
    {
      "type": "paragraph",
      "id": "484e092159df2d01",
      "text": "the Petersen graph is an undirected graph with 10 vertices and 15 edges. It is a small graph that serves as a useful example and counterexample for many problems in graph theory. [https://en.wikipedia.org/wiki/Petersen_graph wikipedia]"
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}\n\nconst scl=(p,s)=>[p[0]*s, p[1]*s, p[2]*s]\nconst add=(p,q)=>[p[0]+q[0], p[1]+q[1], p[2]+q[2]]"
    },
    {
      "type": "code",
      "id": "0031e61d4fb98fdd",
      "text": "box([-1,1,1])\nbox([1,-1,1])\nbox([1,1,-1])\nbox([-1,-1,1])\nbox([1,-1,-1])\nbox([-1,1,-1])\n\n"
    },
    {
      "type": "code",
      "id": "d788856cdbe73431",
      "text": "controls.autoRotate = true"
    },
    {
      "type": "frame",
      "id": "6cf52409eec3988c",
      "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Petersen Graph",
        "story": [
          {
            "type": "paragraph",
            "id": "484e092159df2d01",
            "text": "Explain what this does."
          },
          {
            "type": "code",
            "id": "5eb6b67568179aa3",
            "text": "// Code that does it.\n\nconst geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)\nscene.add(box)"
          },
          {
            "type": "code",
            "id": "d788856cdbe73431",
            "text": "tick = () => box.rotation.x += 0.02\ncontrols.autoRotate = true"
          },
          {
            "type": "frame",
            "id": "6cf52409eec3988c",
            "text": "http://three.ward.asia.wiki.org/assets/pages/snippet-template/basic.html?snippet-template\nHEIGHT 400"
          }
        ]
      },
      "date": 1637980917956
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "the Petersen graph is an undirected graph with 10 vertices and 15 edges. It is a small graph that serves as a useful example and counterexample for many problems in graph theory."
      },
      "date": 1637980951205
    },
    {
      "type": "edit",
      "id": "484e092159df2d01",
      "item": {
        "type": "paragraph",
        "id": "484e092159df2d01",
        "text": "the Petersen graph is an undirected graph with 10 vertices and 15 edges. It is a small graph that serves as a useful example and counterexample for many problems in graph theory. [https://en.wikipedia.org/wiki/Petersen_graph wikipedia]"
      },
      "date": 1637980970927
    },
    {
      "type": "edit",
      "id": "d788856cdbe73431",
      "item": {
        "type": "code",
        "id": "d788856cdbe73431",
        "text": "controls.autoRotate = true"
      },
      "date": 1637981008534
    },
    {
      "item": {
        "type": "factory",
        "id": "0031e61d4fb98fdd"
      },
      "id": "0031e61d4fb98fdd",
      "type": "add",
      "after": "6cf52409eec3988c",
      "date": 1637981277044
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "scene.add(box)\nscene.add(box)"
      },
      "date": 1637981349283
    },
    {
      "id": "0031e61d4fb98fdd",
      "type": "move",
      "order": [
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "0031e61d4fb98fdd",
        "d788856cdbe73431",
        "6cf52409eec3988c"
      ],
      "date": 1637981355831
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = new THREE.Mesh(geo, mat)"
      },
      "date": 1637981366504
    },
    {
      "type": "add",
      "id": "22c060b7b78e96be",
      "item": {
        "type": "paragraph",
        "id": "22c060b7b78e96be",
        "text": "See [[Graveyard Ghost]] for instancing."
      },
      "after": "484e092159df2d01",
      "date": 1637981467981
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()"
      },
      "date": 1637981523920
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "const box = new THREE.Mesh(geo, mat)\nscene.add(box)\n\nconst box = new THREE.Mesh(geo, mat)\nscene.add(box)"
      },
      "date": 1637981541801
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "var box = new THREE.Mesh(geo, mat)\nscene.add(box)\n\nvar box = new THREE.Mesh(geo, mat)\nscene.add(box)"
      },
      "date": 1637981567127
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "{\nlet box = new THREE.Mesh(geo, mat)\nbox.position.set(1,1,1)\nscene.add(box)\n}\n\n{\nlet box = new THREE.Mesh(geo, mat)\nbox.position.set(-1,1,1)\nscene.add(box)\n}"
      },
      "date": 1637981650709
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}"
      },
      "date": 1637981846094
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "box([1,1,1])"
      },
      "date": 1637981872505
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "box([-1,1,1])\nbox([1,-1,1])\nbox([1,1,-1])\n"
      },
      "date": 1637981916356
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n  return box\n}"
      },
      "date": 1637981988782
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "let b1 = box([-1,1,1])\nlet b2 = box([1,-1,1])\nlet b3 = box([1,1,-1])\n"
      },
      "date": 1637982030706
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}\n\nconst times = (p,s) => [p[0]*s, p[1]*s, p[2]*s]\nconst plus (p,q) => [p[0]+q[0], p[1]+q[1], p[2]+q[2]]"
      },
      "date": 1637983198427
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}\n\nconst scl = (p,s) => [p[0]*s, p[1]*s, p[2]*s]\nconst add = (p,q) => [p[0]+q[0], p[1]+q[1], p[2]+q[2]]"
      },
      "date": 1637983253847
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "const geo = new THREE.BoxGeometry(1, 1, 1)\nconst mat = new THREE.MeshNormalMaterial()\nconst box = point => {\n  let box = new THREE.Mesh(geo, mat)\n  box.position.set(...point)\n  scene.add(box)\n}\n\nconst scl=(p,s)=>[p[0]*s, p[1]*s, p[2]*s]\nconst add=(p,q)=>[p[0]+q[0], p[1]+q[1], p[2]+q[2]]"
      },
      "date": 1637983291617
    },
    {
      "type": "edit",
      "id": "0031e61d4fb98fdd",
      "item": {
        "type": "code",
        "id": "0031e61d4fb98fdd",
        "text": "box([-1,1,1])\nbox([1,-1,1])\nbox([1,1,-1])\nbox([-1,-1,1])\nbox([1,-1,-1])\nbox([-1,1,-1])\n\n"
      },
      "date": 1637988730548
    },
    {
      "type": "fork",
      "date": 1638074259323
    },
    {
      "id": "22c060b7b78e96be",
      "type": "move",
      "order": [
        "22c060b7b78e96be",
        "484e092159df2d01",
        "5eb6b67568179aa3",
        "0031e61d4fb98fdd",
        "d788856cdbe73431",
        "6cf52409eec3988c"
      ],
      "date": 1639883780091
    },
    {
      "type": "fork",
      "site": "three.ward.asia.wiki.org",
      "date": 1675233547754
    }
  ]
}