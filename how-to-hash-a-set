{
  "title": "How to Hash a Set",
  "story": [
    {
      "type": "paragraph",
      "id": "3c955a4c9bf4e9bb",
      "text": "Hash tables are widely used. They rely on good quality hash functions. Popular data structure libraries either provide no hash functions or weak hash functions for sets or maps, making it impossible or impractical to use them as keys in other tables. This article presents three algorithms for hashing a set, two of which are simple to implement, practically fast, and can be combined. The quality evaluations follow the method of [1, chapter 2]. The insight that we are looking for commutative semigroups suggests that even better methods than symmetric polynomials may be found. [https://www.preprints.org/manuscript/201710.0192/v1 page]"
    },
    {
      "type": "pagefold",
      "id": "72e22370d46da26e",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "906200c3e1a7cb40",
      "text": "O'Keefe, R. How to Hash a Set. Preprints 2017, 2017100192 (doi: 10.20944/preprints201710.0192.v1)."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "How to Hash a Set",
        "story": []
      },
      "date": 1661260008455
    },
    {
      "item": {
        "type": "factory",
        "id": "3c955a4c9bf4e9bb"
      },
      "id": "3c955a4c9bf4e9bb",
      "type": "add",
      "date": 1661260023397
    },
    {
      "type": "edit",
      "id": "3c955a4c9bf4e9bb",
      "item": {
        "type": "paragraph",
        "id": "3c955a4c9bf4e9bb",
        "text": "Hash tables are widely used. They rely on good quality hash functions. Popular data structure libraries either provide no hash functions or weak hash functions for sets or maps, making it impossible or impractical to use them as keys in other tables. This article presents three algorithms for hashing a set, two of which are simple to implement, practically fast, and can be combined. The quality evaluations follow the method of [1, chapter 2]. The insight that we are looking for commutative semigroups suggests that even better methods than symmetric polynomials may be found. "
      },
      "date": 1661260025358
    },
    {
      "type": "edit",
      "id": "3c955a4c9bf4e9bb",
      "item": {
        "type": "paragraph",
        "id": "3c955a4c9bf4e9bb",
        "text": "Hash tables are widely used. They rely on good quality hash functions. Popular data structure libraries either provide no hash functions or weak hash functions for sets or maps, making it impossible or impractical to use them as keys in other tables. This article presents three algorithms for hashing a set, two of which are simple to implement, practically fast, and can be combined. The quality evaluations follow the method of [1, chapter 2]. The insight that we are looking for commutative semigroups suggests that even better methods than symmetric polynomials may be found. [https://www.preprints.org/manuscript/201710.0192/v1 page]"
      },
      "date": 1661260099988
    },
    {
      "item": {
        "type": "factory",
        "id": "72e22370d46da26e"
      },
      "id": "72e22370d46da26e",
      "type": "add",
      "after": "3c955a4c9bf4e9bb",
      "date": 1661260109941
    },
    {
      "type": "edit",
      "id": "72e22370d46da26e",
      "item": {
        "type": "pagefold",
        "id": "72e22370d46da26e",
        "text": "~"
      },
      "date": 1661260112787
    },
    {
      "item": {
        "type": "factory",
        "id": "906200c3e1a7cb40"
      },
      "id": "906200c3e1a7cb40",
      "type": "add",
      "after": "72e22370d46da26e",
      "date": 1661260114296
    },
    {
      "type": "edit",
      "id": "906200c3e1a7cb40",
      "item": {
        "type": "paragraph",
        "id": "906200c3e1a7cb40",
        "text": "O'Keefe, R. How to Hash a Set. Preprints 2017, 2017100192 (doi: 10.20944/preprints201710.0192.v1)."
      },
      "date": 1661260115796
    }
  ]
}