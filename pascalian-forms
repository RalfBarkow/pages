{
  "title": "Pascalian Forms",
  "story": [
    {
      "type": "markdown",
      "id": "3cbfd4679f6e9316",
      "text": "This from [[Alain Marty]], Nov 18, 2020, translated from French via google. \n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book] [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F english]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Pascalian Forms",
        "story": []
      },
      "date": 1605736050256
    },
    {
      "item": {
        "type": "factory",
        "id": "3cbfd4679f6e9316"
      },
      "id": "3cbfd4679f6e9316",
      "type": "add",
      "date": 1605736096650
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "paragraph",
        "id": "3cbfd4679f6e9316",
        "text": "Hello friends,\n\nI have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\nI am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\nIt is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\nI wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time.\n\nKindly"
      },
      "date": 1605736100077
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "factory",
        "id": "3cbfd4679f6e9316",
        "text": "> Hello friends,\n\nI have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\nI am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\nIt is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\nI wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time.\n\nKindly"
      },
      "date": 1605736133033
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "> Hello friends\n\nI have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\nI am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\nIt is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\nI wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time.\n\nKindly"
      },
      "date": 1605736141699
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from translated from French\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605736243347
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marti translated from French\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605736297375
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google.\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605736337222
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- http://lambdaway.free.fr/workshop/data/pFbook_HTML/\n- http://b2b3.free.fr/confs/?view=angles_2\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605736958789
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2]\nin RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737058084
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY (the language of Sketchup3D, a superb tool),\n- http://ensam.wiki.free.fr/S9/morpharchi_2011-12/\nin JAVASCRIPT (on web browser with lambdatalk as interface)\n- http://lambdaway.free.fr/workshop/?view=pforms\n- http://lambdaway.free.fr/workshop/?view=SVG_3D\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737084091
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms),\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY (the language of Sketchup3D, a superb tool),\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT (on web browser with lambdatalk as interface)\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737211239
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737310248
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F book]\n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737357654
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. \n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book] [[https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F english]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737418376
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from Alain Marty, Nov 18, 2020, translated from French via google. \n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book] [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F english]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1605737433639
    },
    {
      "type": "fork",
      "date": 1605737778453
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1644997340432
    },
    {
      "type": "edit",
      "id": "3cbfd4679f6e9316",
      "item": {
        "type": "markdown",
        "id": "3cbfd4679f6e9316",
        "text": "This from [[Alain Marty]], Nov 18, 2020, translated from French via google. \n\n> I have been interested in CAD and computer graphics since the 80s and have coded lots of 3D modeling and rendering algorithms in different languages. In C ++ (Powerplant environment), in JAVA (on web browser), in HYPERTALK (on Hypercard), in the POVRAY environment (free, recursive macros, Pascalian forms)\n- [http://lambdaway.free.fr/workshop/data/pFbook_HTML/ book] [https://translate.google.com/translate?sl=fr&tl=en&u=http%3A%2F%2Flambdaway.free.fr%2Fworkshop%2Fdata%2FpFbook_HTML%2F english]\n- [http://b2b3.free.fr/confs/?view=angles_2 angles 2] in RUBY\n- [http://ensam.wiki.free.fr/S9/morpharchi_2011-12/ morpharchi] in JAVASCRIPT\n- [http://lambdaway.free.fr/workshop/?view=pforms pforms]\n- [http://lambdaway.free.fr/workshop/?view=SVG_3D svg_3d]\n\n> I am trying these days to bring back to the lambdatalk level which can be done without losing efficiency, the goal being to create and manipulate 3D shapes while forgetting the JavaScript syntax. To date I have come to this:\n- [http://lambdaway.free.fr/lambdawalks/index.php?view=pforms4 pforms4]\n\n> It is very small compared to past explorations but it is for me the obligatory passage towards a full integration with lambdatalk, that is to say write, calculate, draw in 2D and 3D using a single syntax that can be sum up to this:\n{first rest}\n\n> I wonder what you might think of it, if the confinement, which I wish you as gentle as possible, gives you time."
      },
      "date": 1644997596725
    }
  ]
}