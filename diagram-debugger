{
  "title": "Diagram Debugger",
  "story": [
    {
      "type": "markdown",
      "id": "5cc90e7946ae083d",
      "text": "> Similarly, we have extended the debugger to make program traces available for inclusion in a document (see below). An additional pane in the debugger lets the programmer selectively include message sends in a diagrammatic representation we have created specifically for object-oriented programs [Cunn86]. These diagrams can be copied from the debugger and pasted into a literate program.\n\nhttps://c2.com/doc/case87.html"
    },
    {
      "type": "image",
      "id": "1a757e44bc47c4cc",
      "text": "Diagram Debugger",
      "size": "wide",
      "width": 418,
      "height": 281,
      "url": "/assets/plugins/image/d6daf2c1b45cbe7088ac4b87853dd60f.jpg"
    },
    {
      "type": "paragraph",
      "id": "ada5fc9427dbb08a",
      "text": "⇒ [[coerce]] Cf. [[coax]] ⇒ [[generality]]"
    },
    {
      "type": "paragraph",
      "id": "402ca422b220db16",
      "text": "Ward had a way he liked to draw program traces. We were thinking that we'd like to get [[Smalltalk]] to draw these diagrams. But neither the Workspace that ran programs or the Inspector that examined object that held them had all of the trace information. So we looked at the source code for the Debugger and it include the method:"
    },
    {
      "type": "code",
      "id": "a849a60f35f2821a",
      "text": "aCompiledMethod interpretNextInstructionFor: aContext"
    },
    {
      "type": "paragraph",
      "id": "e4ca30f193a5a7ae",
      "text": "Then it was obvious, our drawing editor was just another [[Context]] and the Debugger would send us everything we needed."
    },
    {
      "type": "markdown",
      "id": "ffc066b36c443998",
      "text": "> I can only imagine that that message was handy for Dan when doing the explorations he was inclined to do."
    },
    {
      "type": "image",
      "id": "03566d6fa9caed34",
      "text": "InstructionStream>>#interpretNextInstructionFor:\n",
      "size": "wide",
      "width": 419,
      "height": 112,
      "url": "/assets/plugins/image/b67bfee6b3f537b708dafe84e5dbf129.jpg"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Diagram Debugger",
        "story": []
      },
      "date": 1707906176916
    },
    {
      "id": "5cc90e7946ae083d",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "5cc90e7946ae083d",
        "text": "> Similarly, we have extended the debugger to make program traces available for inclusion in a document (see below). An additional pane in the debugger lets the programmer selectively include message sends in a diagrammatic representation we have created specifically for object-oriented programs [Cunn86]. These diagrams can be copied from the debugger and pasted into a literate program.\n\nhttps://c2.com/doc/case87.html"
      },
      "after": "5496471338bf4096",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906182894
    },
    {
      "id": "1a757e44bc47c4cc",
      "type": "add",
      "item": {
        "type": "image",
        "id": "1a757e44bc47c4cc",
        "text": "Diagram Debugger",
        "size": "wide",
        "width": 418,
        "height": 281,
        "url": "/assets/plugins/image/d6daf2c1b45cbe7088ac4b87853dd60f.jpg"
      },
      "after": "5cc90e7946ae083d",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906187115
    },
    {
      "id": "ada5fc9427dbb08a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ada5fc9427dbb08a",
        "text": "⇒ [[coerce]] Cf. [[coax]] ⇒ [[generality]]"
      },
      "after": "1a757e44bc47c4cc",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906196573
    },
    {
      "id": "402ca422b220db16",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "402ca422b220db16",
        "text": "Ward had a way he liked to draw program traces. We were thinking that we'd like to get [[Smalltalk]] to draw these diagrams. But neither the Workspace that ran programs or the Inspector that examined object that held them had all of the trace information. So we looked at the source code for the Debugger and it include the method:"
      },
      "after": "ada5fc9427dbb08a",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906201478
    },
    {
      "id": "a849a60f35f2821a",
      "type": "add",
      "item": {
        "type": "code",
        "id": "a849a60f35f2821a",
        "text": "aCompiledMethod interpretNextInstructionFor: aContext"
      },
      "after": "402ca422b220db16",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906206466
    },
    {
      "id": "e4ca30f193a5a7ae",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e4ca30f193a5a7ae",
        "text": "Then it was obvious, our drawing editor was just another [[Context]] and the Debugger would send us everything we needed."
      },
      "after": "a849a60f35f2821a",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906212445
    },
    {
      "id": "ffc066b36c443998",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ffc066b36c443998",
        "text": "> I can only imagine that that message was handy for Dan when doing the explorations he was inclined to do."
      },
      "after": "e4ca30f193a5a7ae",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906215593
    },
    {
      "id": "03566d6fa9caed34",
      "type": "add",
      "item": {
        "type": "image",
        "id": "03566d6fa9caed34",
        "text": "InstructionStream>>#interpretNextInstructionFor:\n",
        "size": "wide",
        "width": 419,
        "height": 112,
        "url": "/assets/plugins/image/b67bfee6b3f537b708dafe84e5dbf129.jpg"
      },
      "after": "ffc066b36c443998",
      "attribution": {
        "page": "2024-02-13"
      },
      "date": 1707906220574
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1707906278481
    }
  ]
}