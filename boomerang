{
  "title": "Boomerang",
  "story": [
    {
      "type": "paragraph",
      "id": "2b7b505d311a8519",
      "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input. [https://www.seas.upenn.edu/~harmony/ site] [https://github.com/boomerang-lang/boomerang github]"
    },
    {
      "type": "paragraph",
      "id": "3c19232014e22260",
      "text": "\nLenses have been used to solve problems across a wide range of areas in computing including: in data converters and synchronizers, in parsers and pretty printers, in picklers and unpicklers, in structure editors, in constraint maintainers for user interfaces, in software model transformations, in schema evolution, in tools for managing system configuration files, and in databases where they provide updatable views."
    },
    {
      "type": "paragraph",
      "id": "b34cdcfda777ee08",
      "text": "\nThe best way to get started with Boomerang is to download our system and work through the examples in the first few chapters of the manual. Many more details can be found in our research papers."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Boomerang",
        "story": []
      },
      "date": 1641222549724
    },
    {
      "item": {
        "type": "factory",
        "id": "5558ebbea41bf044"
      },
      "id": "5558ebbea41bf044",
      "type": "add",
      "date": 1641222551480
    },
    {
      "type": "edit",
      "id": "5558ebbea41bf044",
      "item": {
        "type": "paragraph",
        "id": "5558ebbea41bf044",
        "text": "["
      },
      "date": 1641222559593
    },
    {
      "type": "edit",
      "id": "5558ebbea41bf044",
      "item": {
        "type": "paragraph",
        "id": "5558ebbea41bf044",
        "text": "[https://www.seas.upenn.edu/~harmony/ site]"
      },
      "date": 1641222570434
    },
    {
      "item": {
        "type": "factory",
        "id": "2b7b505d311a8519"
      },
      "id": "2b7b505d311a8519",
      "type": "add",
      "after": "5558ebbea41bf044",
      "date": 1641222584244
    },
    {
      "type": "edit",
      "id": "2b7b505d311a8519",
      "item": {
        "type": "paragraph",
        "id": "2b7b505d311a8519",
        "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input.\n\nLenses have been used to solve problems across a wide range of areas in computing including: in data converters and synchronizers, in parsers and pretty printers, in picklers and unpicklers, in structure editors, in constraint maintainers for user interfaces, in software model transformations, in schema evolution, in tools for managing system configuration files, and in databases where they provide updatable views.\n\nThe best way to get started with Boomerang is to download our system and work through the examples in the first few chapters of the manual. Many more details can be found in our research papers."
      },
      "date": 1641222586270
    },
    {
      "type": "edit",
      "id": "2b7b505d311a8519",
      "item": {
        "type": "paragraph",
        "id": "2b7b505d311a8519",
        "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input.\n\nLenses have been used to solve problems across a wide range of areas in computing including: in data converters and synchronizers, in parsers and pretty printers, in picklers and unpicklers, in structure editors, in constraint maintainers for user interfaces, in software model transformations, in schema evolution, in tools for managing system configuration files, and in databases where they provide updatable views."
      },
      "date": 1641222589034
    },
    {
      "type": "add",
      "id": "b34cdcfda777ee08",
      "item": {
        "type": "paragraph",
        "id": "b34cdcfda777ee08",
        "text": "\nThe best way to get started with Boomerang is to download our system and work through the examples in the first few chapters of the manual. Many more details can be found in our research papers."
      },
      "after": "2b7b505d311a8519",
      "date": 1641222591397
    },
    {
      "type": "edit",
      "id": "2b7b505d311a8519",
      "item": {
        "type": "paragraph",
        "id": "2b7b505d311a8519",
        "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input."
      },
      "date": 1641222593834
    },
    {
      "type": "add",
      "id": "3c19232014e22260",
      "item": {
        "type": "paragraph",
        "id": "3c19232014e22260",
        "text": "\nLenses have been used to solve problems across a wide range of areas in computing including: in data converters and synchronizers, in parsers and pretty printers, in picklers and unpicklers, in structure editors, in constraint maintainers for user interfaces, in software model transformations, in schema evolution, in tools for managing system configuration files, and in databases where they provide updatable views."
      },
      "after": "2b7b505d311a8519",
      "date": 1641222596499
    },
    {
      "type": "remove",
      "id": "5558ebbea41bf044",
      "date": 1641222599025
    },
    {
      "type": "edit",
      "id": "2b7b505d311a8519",
      "item": {
        "type": "paragraph",
        "id": "2b7b505d311a8519",
        "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input. [https://www.seas.upenn.edu/~harmony/ site]"
      },
      "date": 1641222600970
    },
    {
      "type": "edit",
      "id": "2b7b505d311a8519",
      "item": {
        "type": "paragraph",
        "id": "2b7b505d311a8519",
        "text": "Boomerang is a programming language for writing lenses—well-behaved bidirectional transformations—that operate on ad-hoc, textual data formats. Every lens program, when read from left to right, describes a function that maps an input to an output; when read from right to left, the very same program describes a \"backwards\" function that maps a modified output, together with the original input, back to a modified input. [https://www.seas.upenn.edu/~harmony/ site] [https://github.com/boomerang-lang/boomerang github]"
      },
      "date": 1641222670574
    }
  ]
}