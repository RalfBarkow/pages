{
  "title": "Quantum Circuit Compilation",
  "story": [
    {
      "type": "paragraph",
      "id": "87540e642f650207",
      "text": "Computationally expensive applications, including machine learning, chemical simulations, and financial modeling, are promising candidates for noisy intermediate scale quantum (NISQ) computers."
    },
    {
      "type": "paragraph",
      "id": "d07f39db4d5ab737",
      "text": "In these problems, one important challenge is mapping a quantum circuit onto NISQ hardware while satisfying physical constraints of an underlying quantum architecture."
    },
    {
      "type": "paragraph",
      "id": "786d93a2b8a8501d",
      "text": "Quantum circuit compilation (QCC) aims to generate feasible mappings such that a quantum circuit can be executed in a given hardware platform with acceptable confidence in outcomes. Physical constraints of a NISQ computer change frequently, requiring QCC process to be repeated often. When a circuit cannot directly be executed on a quantum hardware due to its physical limitations, it is necessary to modify the circuit by adding new quantum gates and auxiliary qubits, increasing its space and time complexity. An inefficient QCC may significantly increase error rate and circuit latency for even the simplest algorithms."
    },
    {
      "type": "paragraph",
      "id": "720db7a975ef7b45",
      "text": "In this article, we present artificial intelligence (AI)-based and heuristic-based methods recently reported in the literature that attempt to address these QCC challenges. We group them based on underlying techniques that they implement, such as AI algorithms including genetic algorithms, genetic programming, ant colony optimization and AI planning, and heuristics methods employing greedy algorithms, satisfiability problem solvers, dynamic, and graph optimization techniques. We discuss performance of each QCC technique and evaluate its potential limitations."
    },
    {
      "type": "image",
      "id": "ac175cb32d800109",
      "text": "FIGURE 1. Basic quantum gates and operations used for building a quantum circuit.",
      "size": "wide",
      "width": 419,
      "height": 168,
      "url": "/assets/plugins/image/96718f4cf88852c86bb7e2a68546ae6a.jpg"
    },
    {
      "type": "paragraph",
      "id": "db648615e959574e",
      "text": "There are a large number of mappings to be considered for [[Implementing the Circuit]] shown in Fig. 4(a)."
    },
    {
      "type": "image",
      "id": "7e42d551499e3d2d",
      "text": "FIGURE 4. Grover search: (a) IR format, (b) NISQ circuit [blue boxes are cnot(p0, p1)], (c) circuit satisfying IBM Q16 constraints for M1 (swap is in red box), (d) combining consecutive single-qubits (orange boxes), (e) final circuit.",
      "size": "wide",
      "width": 419,
      "height": 437,
      "url": "/assets/plugins/image/efef6298e99c96da18c1ab2f92525065.jpg"
    },
    {
      "type": "pagefold",
      "id": "ae58aef6fe971850",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "cd39bf2d0462e388",
      "text": "KUSYK, Janusz, SAEED, Samah M. and UYAR, Muharrem Umit, 2021. Survey on quantum circuit compilation for noisy intermediate-scale quantum computers: Artificial intelligence to heuristics. IEEE Transactions on Quantum Engineering. 2021. Vol. 2, p. 1–16. Available from: https://ieeexplore.ieee.org/abstract/document/9384317/ [Accessed 4 January 2024]. \n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Quantum Circuit Compilation",
        "story": []
      },
      "date": 1704380869218
    },
    {
      "item": {
        "type": "factory",
        "id": "ac175cb32d800109"
      },
      "id": "ac175cb32d800109",
      "type": "add",
      "date": 1704380871631
    },
    {
      "type": "edit",
      "id": "ac175cb32d800109",
      "item": {
        "type": "image",
        "id": "ac175cb32d800109",
        "text": "FIGURE 1. Basic quantum gates and operations used for building a quantum circuit.",
        "size": "wide",
        "width": 419,
        "height": 168,
        "url": "/assets/plugins/image/96718f4cf88852c86bb7e2a68546ae6a.jpg"
      },
      "date": 1704380893634
    },
    {
      "item": {
        "type": "factory",
        "id": "87540e642f650207"
      },
      "id": "87540e642f650207",
      "type": "add",
      "after": "ac175cb32d800109",
      "date": 1704380928088
    },
    {
      "id": "87540e642f650207",
      "type": "move",
      "order": [
        "87540e642f650207",
        "ac175cb32d800109"
      ],
      "date": 1704380929740
    },
    {
      "type": "edit",
      "id": "87540e642f650207",
      "item": {
        "type": "paragraph",
        "id": "87540e642f650207",
        "text": "Computationally expensive applications, including machine learning, chemical simulations, and financial modeling, are promising candidates for noisy intermediate scale quantum (NISQ) computers. In these problems, one important challenge is mapping a quantum circuit onto NISQ hardware while satisfying physical constraints of an underlying quantum architecture. Quantum circuit compilation (QCC) aims to generate feasible mappings such that a quantum circuit can be executed in a given hardware platform with acceptable confidence in outcomes. Physical constraints of a NISQ computer change frequently, requiring QCC process to be repeated often. When a circuit cannot directly be executed on a quantum hardware due to its physical limitations, it is necessary to modify the circuit by adding new quantum gates and auxiliary qubits, increasing its space and time complexity. An inefficient QCC may significantly increase error rate and circuit latency for even the simplest algorithms. In this article, we present artificial intelligence (AI)-based and heuristic-based methods recently reported in the literature that attempt to address these QCC challenges. We group them based on underlying techniques that they implement, such as AI algorithms including genetic algorithms, genetic programming, ant colony optimization and AI planning, and heuristics methods employing greedy algorithms, satisfiability problem solvers, dynamic, and graph optimization techniques. We discuss performance of each QCC technique and evaluate its potential limitations."
      },
      "date": 1704380931072
    },
    {
      "item": {
        "type": "factory",
        "id": "ae58aef6fe971850"
      },
      "id": "ae58aef6fe971850",
      "type": "add",
      "after": "ac175cb32d800109",
      "date": 1704380945334
    },
    {
      "type": "edit",
      "id": "ae58aef6fe971850",
      "item": {
        "type": "pagefold",
        "id": "ae58aef6fe971850",
        "text": "~"
      },
      "date": 1704380949413
    },
    {
      "item": {
        "type": "factory",
        "id": "cd39bf2d0462e388"
      },
      "id": "cd39bf2d0462e388",
      "type": "add",
      "after": "ae58aef6fe971850",
      "date": 1704380950732
    },
    {
      "type": "edit",
      "id": "cd39bf2d0462e388",
      "item": {
        "type": "paragraph",
        "id": "cd39bf2d0462e388",
        "text": "KUSYK, Janusz, SAEED, Samah M. and UYAR, Muharrem Umit, 2021. Survey on quantum circuit compilation for noisy intermediate-scale quantum computers: Artificial intelligence to heuristics. IEEE Transactions on Quantum Engineering. 2021. Vol. 2, p. 1–16. Available from: https://ieeexplore.ieee.org/abstract/document/9384317/ [Accessed 4 January 2024]. \n"
      },
      "date": 1704380960564
    },
    {
      "type": "edit",
      "id": "87540e642f650207",
      "item": {
        "type": "paragraph",
        "id": "87540e642f650207",
        "text": "Computationally expensive applications, including machine learning, chemical simulations, and financial modeling, are promising candidates for noisy intermediate scale quantum (NISQ) computers."
      },
      "date": 1704380978542
    },
    {
      "type": "add",
      "id": "d07f39db4d5ab737",
      "item": {
        "type": "paragraph",
        "id": "d07f39db4d5ab737",
        "text": "In these problems, one important challenge is mapping a quantum circuit onto NISQ hardware while satisfying physical constraints of an underlying quantum architecture. Quantum circuit compilation (QCC) aims to generate feasible mappings such that a quantum circuit can be executed in a given hardware platform with acceptable confidence in outcomes. Physical constraints of a NISQ computer change frequently, requiring QCC process to be repeated often. When a circuit cannot directly be executed on a quantum hardware due to its physical limitations, it is necessary to modify the circuit by adding new quantum gates and auxiliary qubits, increasing its space and time complexity. An inefficient QCC may significantly increase error rate and circuit latency for even the simplest algorithms. In this article, we present artificial intelligence (AI)-based and heuristic-based methods recently reported in the literature that attempt to address these QCC challenges. We group them based on underlying techniques that they implement, such as AI algorithms including genetic algorithms, genetic programming, ant colony optimization and AI planning, and heuristics methods employing greedy algorithms, satisfiability problem solvers, dynamic, and graph optimization techniques. We discuss performance of each QCC technique and evaluate its potential limitations."
      },
      "after": "87540e642f650207",
      "date": 1704380979078
    },
    {
      "type": "edit",
      "id": "d07f39db4d5ab737",
      "item": {
        "type": "paragraph",
        "id": "d07f39db4d5ab737",
        "text": "In these problems, one important challenge is mapping a quantum circuit onto NISQ hardware while satisfying physical constraints of an underlying quantum architecture."
      },
      "date": 1704380995036
    },
    {
      "type": "add",
      "id": "786d93a2b8a8501d",
      "item": {
        "type": "paragraph",
        "id": "786d93a2b8a8501d",
        "text": "Quantum circuit compilation (QCC) aims to generate feasible mappings such that a quantum circuit can be executed in a given hardware platform with acceptable confidence in outcomes. Physical constraints of a NISQ computer change frequently, requiring QCC process to be repeated often. When a circuit cannot directly be executed on a quantum hardware due to its physical limitations, it is necessary to modify the circuit by adding new quantum gates and auxiliary qubits, increasing its space and time complexity. An inefficient QCC may significantly increase error rate and circuit latency for even the simplest algorithms. In this article, we present artificial intelligence (AI)-based and heuristic-based methods recently reported in the literature that attempt to address these QCC challenges. We group them based on underlying techniques that they implement, such as AI algorithms including genetic algorithms, genetic programming, ant colony optimization and AI planning, and heuristics methods employing greedy algorithms, satisfiability problem solvers, dynamic, and graph optimization techniques. We discuss performance of each QCC technique and evaluate its potential limitations."
      },
      "after": "d07f39db4d5ab737",
      "date": 1704380995468
    },
    {
      "type": "edit",
      "id": "786d93a2b8a8501d",
      "item": {
        "type": "paragraph",
        "id": "786d93a2b8a8501d",
        "text": "Quantum circuit compilation (QCC) aims to generate feasible mappings such that a quantum circuit can be executed in a given hardware platform with acceptable confidence in outcomes. Physical constraints of a NISQ computer change frequently, requiring QCC process to be repeated often. When a circuit cannot directly be executed on a quantum hardware due to its physical limitations, it is necessary to modify the circuit by adding new quantum gates and auxiliary qubits, increasing its space and time complexity. An inefficient QCC may significantly increase error rate and circuit latency for even the simplest algorithms."
      },
      "date": 1704381037023
    },
    {
      "type": "add",
      "id": "720db7a975ef7b45",
      "item": {
        "type": "paragraph",
        "id": "720db7a975ef7b45",
        "text": "In this article, we present artificial intelligence (AI)-based and heuristic-based methods recently reported in the literature that attempt to address these QCC challenges. We group them based on underlying techniques that they implement, such as AI algorithms including genetic algorithms, genetic programming, ant colony optimization and AI planning, and heuristics methods employing greedy algorithms, satisfiability problem solvers, dynamic, and graph optimization techniques. We discuss performance of each QCC technique and evaluate its potential limitations."
      },
      "after": "786d93a2b8a8501d",
      "date": 1704381037717
    },
    {
      "item": {
        "type": "factory",
        "id": "db648615e959574e"
      },
      "id": "db648615e959574e",
      "type": "add",
      "after": "cd39bf2d0462e388",
      "date": 1704381092098
    },
    {
      "id": "db648615e959574e",
      "type": "move",
      "order": [
        "87540e642f650207",
        "d07f39db4d5ab737",
        "786d93a2b8a8501d",
        "720db7a975ef7b45",
        "ac175cb32d800109",
        "db648615e959574e",
        "ae58aef6fe971850",
        "cd39bf2d0462e388"
      ],
      "date": 1704381096852
    },
    {
      "type": "edit",
      "id": "db648615e959574e",
      "item": {
        "type": "paragraph",
        "id": "db648615e959574e",
        "text": "There are a large number of mappings to be considered for implementing the circuit shown in Fig. 4(a)."
      },
      "date": 1704381098834
    },
    {
      "item": {
        "type": "factory",
        "id": "7e42d551499e3d2d"
      },
      "id": "7e42d551499e3d2d",
      "type": "add",
      "after": "cd39bf2d0462e388",
      "date": 1704381193248
    },
    {
      "id": "7e42d551499e3d2d",
      "type": "move",
      "order": [
        "87540e642f650207",
        "d07f39db4d5ab737",
        "786d93a2b8a8501d",
        "720db7a975ef7b45",
        "ac175cb32d800109",
        "db648615e959574e",
        "7e42d551499e3d2d",
        "ae58aef6fe971850",
        "cd39bf2d0462e388"
      ],
      "date": 1704381195001
    },
    {
      "type": "edit",
      "id": "7e42d551499e3d2d",
      "item": {
        "type": "image",
        "id": "7e42d551499e3d2d",
        "text": "FIGURE 4. Grover search: (a) IR format, (b) NISQ circuit [blue boxes are cnot(p0, p1)], (c) circuit satisfying IBM Q16 constraints for M1 (swap is in red box), (d) combining consecutive single-qubits (orange boxes), (e)finalcircuit.",
        "size": "wide",
        "width": 419,
        "height": 437,
        "url": "/assets/plugins/image/efef6298e99c96da18c1ab2f92525065.jpg"
      },
      "date": 1704381201868
    },
    {
      "type": "edit",
      "id": "7e42d551499e3d2d",
      "item": {
        "type": "image",
        "id": "7e42d551499e3d2d",
        "text": "FIGURE 4. Grover search: (a) IR format, (b) NISQ circuit [blue boxes are cnot(p0, p1)], (c) circuit satisfying IBM Q16 constraints for M1 (swap is in red box), (d) combining consecutive single-qubits (orange boxes), (e) final circuit.",
        "size": "wide",
        "width": 419,
        "height": 437,
        "url": "/assets/plugins/image/efef6298e99c96da18c1ab2f92525065.jpg"
      },
      "date": 1704381239664
    },
    {
      "type": "edit",
      "id": "db648615e959574e",
      "item": {
        "type": "paragraph",
        "id": "db648615e959574e",
        "text": "There are a large number of mappings to be considered for [[Implementing the Circuit]] shown in Fig. 4(a)."
      },
      "date": 1704381296939
    }
  ]
}