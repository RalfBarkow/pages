{
  "title": "2023-04-26",
  "story": [
    {
      "type": "paragraph",
      "id": "e0d115999f27aa96",
      "text": "⇒ [[elm-pages]]-v3-beta\n [https://discourse.elm-lang.org/t/realworld-app-elm-spa-example-in-elm-pages-v3/8992/5 discourse]"
    },
    {
      "type": "markdown",
      "id": "0e3d674d81e60539",
      "text": "> You can try a hosted version of elm-pages v3 TodoMVC app at https://elm-pages-todos.netlify.app/."
    },
    {
      "type": "paragraph",
      "id": "0c33e81bebc57ba6",
      "text": "view-source:https://[[elm-pages]]-todos.netlify.app/login"
    },
    {
      "type": "code",
      "id": "66db100b075008d3",
      "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Login</title>\n    <link rel=\"modulepreload\" crossorigin href=\"/elm.42b62f02.js\"><link rel=\"preload\" href=\"/assets/index-eae3d542.css\" as=\"style\"><link rel=\"modulepreload\" crossorigin href=\"/assets/index-bad0f17a.js\">\n    <script defer src=\"/elm.42b62f02.js\" type=\"text/javascript\"></script>\n    \n        \n    \n    <meta name=\"generator\" content=\"elm-pages v3.0.0-beta.28\" />\n    \n        <link rel=\"canonical\" href=\"https://elm-pages.com/login\" />    <meta … />\n                  <script id=\"__ELM_PAGES_BYTES_DATA__\" type=\"application/octet-stream\">AQIAAA==</script>\n    <script type=\"module\" crossorigin src=\"/assets/index-bad0f17a.js\"></script>\n    <link rel=\"stylesheet\" href=\"/assets/index-eae3d542.css\">\n  </head>\n  <body>\n    <div data-url=\"\" display=\"none\"></div>\n    <div><nav style=\"display:flex;justify-content:space-evenly;\"></nav><div style=\"padding:40px;\"><div><p>You aren&#039;t logged in yet.</p><form action=\"/login\" id=\"login\" method=\"POST\" noValidate><input name=\"kind\" type=\"hidden\" value=\"login\"><div><label>Email <input name=\"email\" type=\"email\" value=\"\"></label><ul style=\"color:red;\"></ul></div><ul style=\"color:red;\"></ul><button>Login</button></form></div></div></div>\n  </body>\n</html>"
    },
    {
      "type": "paragraph",
      "id": "1ee21cc7ea480b0e",
      "text": "⇒ [[Netlify]]"
    },
    {
      "type": "paragraph",
      "id": "d2bf74f6e0ce1c3c",
      "text": "docs/FAQ.md"
    },
    {
      "type": "paragraph",
      "id": "3adba4fc93e4a86c",
      "text": "Why does [[elm-pages]] use [[Lamdera]]? Is it free?"
    },
    {
      "type": "paragraph",
      "id": "717af21ce097453e",
      "text": "⇒ [[Elm Runtime]]"
    },
    {
      "type": "pagefold",
      "id": "b6baa467aa64409a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "edc09bf275ce8de2",
      "text": "Mail from Ward, Re: Wonder Room tweaks"
    },
    {
      "type": "paragraph",
      "id": "1a6376e0cc10ffa7",
      "text": "⇒ [[Kavita Tanna]]"
    },
    {
      "type": "pagefold",
      "id": "0fb77cb44a60ee99",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "5ee93c93f6ec6ad5",
      "site": "ward.asia.wiki.org",
      "slug": "register-plugin",
      "title": "Register Plugin",
      "text": "We consider adding incrementally more control over the creation of subdomains within a wiki farm. A Register plugin would be offered on a claimed site that would manufacture and possibly pre-claim subdomain sites."
    },
    {
      "type": "paragraph",
      "id": "0a87947d3e1123c6",
      "text": "Is [[elm-pages]] full-stack? Can I use it for pure static sites without a server? Can I use it for server-rendered pages with dynamic user content? ([https://github.com/dillonkearns/elm-pages-v3-beta/blob/8e816297380c7154333aa6577f207430fccc2bd7/docs/FAQ.md#is-elm-pages-full-stack-can-i-use-it-for-pure-static-sites-without-a-server-can-i-use-it-for-server-rendered-pages-with-dynamic-user-content docs/FAQ.md])"
    },
    {
      "type": "markdown",
      "id": "82d407d72af066ac",
      "text": "With this lifecycle, you're able to respond dynamically\nto a request, which means that you can do things like\n\n- Check for a [[Session Cookie]]\n- If the session cookie is present, use a BackendTask to lookup the user using an API call and server-render a page with user-specific page content\n- If the session cookie is absent, redirect to the login page using an HTTP 301 response code\n- Load data dynmically at request-time, so every time the page is loaded you have the latest data (compared to statically built sites that have data from the time when the site was last built)"
    },
    {
      "type": "paragraph",
      "id": "c046cfa83f1e2293",
      "text": "paul90:\n[…] [[Passport]] has effectively broken support for cookie based session management, and don't seem to intend fixing it. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$166479031582596guoVy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
    },
    {
      "type": "paragraph",
      "id": "355be983cf749972",
      "text": "Todo app login [https://elm-pages-todos.netlify.app/ site], [https://todomvc.com/ site], [https://todomvc.com/examples/elm/ page]"
    },
    {
      "type": "paragraph",
      "id": "69c4f18a47dc5d21",
      "text": "evancz/elm-todomvc [https://github.com/evancz/elm-todomvc github]"
    },
    {
      "type": "paragraph",
      "id": "2bd28add49d23277",
      "text": "⇒ [[Life-Cycle]]"
    },
    {
      "type": "paragraph",
      "id": "66b1548e7d6b316d",
      "text": "➜  elm-pages-v3-beta git:(master) ✗ sh ./test.sh "
    },
    {
      "type": "paragraph",
      "id": "9726db13a813a653",
      "text": "Prerequisite: globby [https://www.npmjs.com/package/globby npm]"
    },
    {
      "type": "code",
      "id": "aae6d601c73b30dc",
      "text": "npm i globby"
    },
    {
      "type": "code",
      "id": "8bcc983ce6b5cbd3",
      "text": "[…]\n> elm-pages build --debug --keep-cache\n\nError [ERR_MODULE_NOT_FOUND]: Cannot find module '/Users/rgb/Projects/dreyeck/elm-pages-v3-beta/codegen/elm-pages-codegen.cjs' imported from /Users/rgb/Projects/dreyeck/elm-pages-v3-beta/generator/src/generate-template-module-connector.js"
    },
    {
      "type": "paragraph",
      "id": "fc621f77c9f54b33",
      "text": "elm-codegen [https://github.com/mdgriffith/elm-codegen github], [https://www.npmjs.com/package/elm-codegen npm]"
    },
    {
      "type": "code",
      "id": "ef498fee0ab8e1a4",
      "text": "npm i elm-codegen"
    },
    {
      "type": "paragraph",
      "id": "d2979be738afce7f",
      "text": "[…]"
    },
    {
      "type": "paragraph",
      "id": "a5a467460beb6a5d",
      "text": "How do you handle responsive layouts when you don't know the browser dimensions at build time? [https://github.com/dillonkearns/elm-pages-v3-beta/blob/8e816297380c7154333aa6577f207430fccc2bd7/docs/FAQ.md#how-do-you-handle-responsive-layouts-when-you-dont-know-the-browser-dimensions-at-build-time page]"
    },
    {
      "type": "paragraph",
      "id": "d09faefafe7a7fce",
      "text": "A lot of users are building their [[elm-pages]] views with [[elm-ui]], so this is a common question because elm-ui is designed to do responsive layouts by storing the browser dimensions in the Model and doing conditionals based on that state."
    },
    {
      "type": "paragraph",
      "id": "5ecb144da38dc8ac",
      "text": "With elm-pages, and static sites in general, we are building pre-rendered HTML so we can serve it up really quickly through a CDN, rather than serving it up with a traditional server framework. That means that to have responsive pages that don't have a page flash, we need to use media queries to make our pages responsive. That way, the view is the same no matter what the dimensions are, so it will pre-render and look right on whatever device the user is on because the media queries will take care of making it responsive."
    },
    {
      "type": "paragraph",
      "id": "cdeb061b261c03ea",
      "text": "Since elm-ui isn't currently built with media queries in mind, it isn't a first-class experience to use them with elm-ui. One workaround you can use is to define some responsive classes that simply show or hide an element based on a media query, and apply those classes. For example, you could show the mobile or desktop version of the navbar by having a mobile-responsive and desktop-responsive class and rendering one element with each respsective class. But the media query will only show one at a time based on the dimensions."
    },
    {
      "type": "pagefold",
      "id": "407122970f92822e",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "66af6ca0e27e4190",
      "text": "⇒ [[Dillon Kearns]]\n  via [https://elmlang.slack.com/archives/CNSNETV37/p1681928149693739 slack]\nHey folks, I just released a new version of the elm-pages v3 beta that integrates my new elm-form package (https://package.elm-lang.org/packages/dillonkearns/elm-form/latest/). I extracted that package from the elm-pages v3 API, but it's now usable as a standalone package as well. I'm quite pleased with how the integration worked out, it feels quite clean! And nice to be able to use the same API in vanilla projects - it just gets some superpowers when you use it in an elm-pages app, but you can use the same API to build your forms!\nSince the scope of elm-pages is so large, it's also nice to have it as a separate package as it's a bit more digestable as a separate package. We can also share Ellie snippets for examples of Forms.\nHere are the latest v3 package docs: https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/\nAnd the starter repo is up-to-date as well: https://github.com/dillonkearns/elm-pages-3-alpha-starter\nThe scaffold commands work with the latest Form API, too. Hope you enjoy!"
    },
    {
      "type": "markdown",
      "id": "795a26fd919b6d81",
      "text": "Getting Started Resources [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/ page]\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n* Introducing elm-pages blog [https://elm-pages.com/blog/introducing-elm-pages/ post]\n* examples folder [https://github.com/dillonkearns/elm-pages/tree/master/examples github] (includes https://elm-pages.com site source)\n"
    },
    {
      "type": "paragraph",
      "id": "3b4a75ab27170ad4",
      "text": "⇒ [[Conduit]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-04-26",
        "story": []
      },
      "date": 1682487959286
    },
    {
      "item": {
        "type": "factory",
        "id": "0c33e81bebc57ba6"
      },
      "id": "0c33e81bebc57ba6",
      "type": "add",
      "date": 1682487961970
    },
    {
      "type": "edit",
      "id": "0c33e81bebc57ba6",
      "item": {
        "type": "paragraph",
        "id": "0c33e81bebc57ba6",
        "text": "view-source:https://elm-pages-todos.netlify.app/login"
      },
      "date": 1682487963975
    },
    {
      "item": {
        "type": "factory",
        "id": "66db100b075008d3"
      },
      "id": "66db100b075008d3",
      "type": "add",
      "after": "0c33e81bebc57ba6",
      "date": 1682487968894
    },
    {
      "type": "edit",
      "id": "66db100b075008d3",
      "item": {
        "type": "code",
        "id": "66db100b075008d3",
        "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Login</title>\n    <link rel=\"modulepreload\" crossorigin href=\"/elm.42b62f02.js\"><link rel=\"preload\" href=\"/assets/index-eae3d542.css\" as=\"style\"><link rel=\"modulepreload\" crossorigin href=\"/assets/index-bad0f17a.js\">\n    <script defer src=\"/elm.42b62f02.js\" type=\"text/javascript\"></script>\n    \n        \n    \n    <meta name=\"generator\" content=\"elm-pages v3.0.0-beta.28\" />\n    \n        <link rel=\"canonical\" href=\"https://elm-pages.com/login\" />    <meta name=\"description\" content=\"Login to manage your todo list in full-stack Elm!\" />    <meta property=\"og:image\" content=\"https://images.unsplash.com/photo-1499750310107-5fef28a66643?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=600&amp;q=80\" />    <meta property=\"og:image:secure_url\" content=\"https://images.unsplash.com/photo-1499750310107-5fef28a66643?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=600&amp;q=80\" />    <meta property=\"og:image:alt\" content=\"Desk with a Todo List\" />    <meta property=\"og:title\" content=\"Login | elm-pages Todo List\" />    <meta property=\"og:url\" content=\"https://elm-pages.com/login\" />    <meta property=\"og:description\" content=\"Login to manage your todo list in full-stack Elm!\" />    <meta property=\"og:site_name\" content=\"Login | elm-pages Todo List\" />    <meta property=\"twitter:card\" content=\"summary\" />    <meta property=\"twitter:title\" content=\"Login | elm-pages Todo List\" />    <meta property=\"twitter:description\" content=\"Login to manage your todo list in full-stack Elm!\" />    <meta property=\"twitter:image\" content=\"https://images.unsplash.com/photo-1499750310107-5fef28a66643?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=600&amp;q=80\" />    <meta property=\"twitter:image:alt\" content=\"Desk with a Todo List\" />    <meta property=\"og:type\" content=\"website\" />    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />    <meta name=\"mobile-web-app-capable\" content=\"yes\" />    <meta name=\"theme-color\" content=\"#ffffff\" />    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\" />    <link rel=\"sitemap\" type=\"application/xml\" href=\"/sitemap.xml\" />    <link rel=\"manifest\" href=\"/manifest.json\" />\n                  <script id=\"__ELM_PAGES_BYTES_DATA__\" type=\"application/octet-stream\">AQIAAA==</script>\n    <script type=\"module\" crossorigin src=\"/assets/index-bad0f17a.js\"></script>\n    <link rel=\"stylesheet\" href=\"/assets/index-eae3d542.css\">\n  </head>\n  <body>\n    <div data-url=\"\" display=\"none\"></div>\n    <div><nav style=\"display:flex;justify-content:space-evenly;\"></nav><div style=\"padding:40px;\"><div><p>You aren&#039;t logged in yet.</p><form action=\"/login\" id=\"login\" method=\"POST\" noValidate><input name=\"kind\" type=\"hidden\" value=\"login\"><div><label>Email <input name=\"email\" type=\"email\" value=\"\"></label><ul style=\"color:red;\"></ul></div><ul style=\"color:red;\"></ul><button>Login</button></form></div></div></div>\n  </body>\n</html>"
      },
      "date": 1682487971059
    },
    {
      "type": "edit",
      "id": "0c33e81bebc57ba6",
      "item": {
        "type": "paragraph",
        "id": "0c33e81bebc57ba6",
        "text": "view-source:https://[[elm-pages]]-todos.netlify.app/login"
      },
      "date": 1682487979887
    },
    {
      "item": {
        "type": "factory",
        "id": "1ee21cc7ea480b0e"
      },
      "id": "1ee21cc7ea480b0e",
      "type": "add",
      "after": "66db100b075008d3",
      "date": 1682488036728
    },
    {
      "type": "edit",
      "id": "1ee21cc7ea480b0e",
      "item": {
        "type": "paragraph",
        "id": "1ee21cc7ea480b0e",
        "text": "⇒ [[Netlify]]"
      },
      "date": 1682488045583
    },
    {
      "id": "e0d115999f27aa96",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e0d115999f27aa96",
        "text": "elm-pages-v3-beta\n [https://discourse.elm-lang.org/t/realworld-app-elm-spa-example-in-elm-pages-v3/8992/5 discourse]"
      },
      "attribution": {
        "page": "2023-04-25"
      },
      "date": 1682488283153
    },
    {
      "type": "edit",
      "id": "e0d115999f27aa96",
      "item": {
        "type": "paragraph",
        "id": "e0d115999f27aa96",
        "text": "⇒ [[elm-pages]]-v3-beta\n [https://discourse.elm-lang.org/t/realworld-app-elm-spa-example-in-elm-pages-v3/8992/5 discourse]"
      },
      "date": 1682488294509
    },
    {
      "type": "add",
      "id": "0e3d674d81e60539",
      "item": {
        "type": "paragraph",
        "id": "0e3d674d81e60539",
        "text": "> You can try a hosted version of elm-pages v3 TodoMVC app at https://elm-pages-todos.netlify.app/ 4."
      },
      "after": "e0d115999f27aa96",
      "date": 1682488349309
    },
    {
      "type": "edit",
      "id": "0e3d674d81e60539",
      "item": {
        "type": "markdown",
        "id": "0e3d674d81e60539",
        "text": "> You can try a hosted version of elm-pages v3 TodoMVC app at https://elm-pages-todos.netlify.app/ 4."
      },
      "date": 1682488350826
    },
    {
      "type": "edit",
      "id": "0e3d674d81e60539",
      "item": {
        "type": "markdown",
        "id": "0e3d674d81e60539",
        "text": "> You can try a hosted version of elm-pages v3 TodoMVC app at https://elm-pages-todos.netlify.app/."
      },
      "date": 1682488359597
    },
    {
      "type": "edit",
      "id": "66db100b075008d3",
      "item": {
        "type": "code",
        "id": "66db100b075008d3",
        "text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Login</title>\n    <link rel=\"modulepreload\" crossorigin href=\"/elm.42b62f02.js\"><link rel=\"preload\" href=\"/assets/index-eae3d542.css\" as=\"style\"><link rel=\"modulepreload\" crossorigin href=\"/assets/index-bad0f17a.js\">\n    <script defer src=\"/elm.42b62f02.js\" type=\"text/javascript\"></script>\n    \n        \n    \n    <meta name=\"generator\" content=\"elm-pages v3.0.0-beta.28\" />\n    \n        <link rel=\"canonical\" href=\"https://elm-pages.com/login\" />    <meta … />\n                  <script id=\"__ELM_PAGES_BYTES_DATA__\" type=\"application/octet-stream\">AQIAAA==</script>\n    <script type=\"module\" crossorigin src=\"/assets/index-bad0f17a.js\"></script>\n    <link rel=\"stylesheet\" href=\"/assets/index-eae3d542.css\">\n  </head>\n  <body>\n    <div data-url=\"\" display=\"none\"></div>\n    <div><nav style=\"display:flex;justify-content:space-evenly;\"></nav><div style=\"padding:40px;\"><div><p>You aren&#039;t logged in yet.</p><form action=\"/login\" id=\"login\" method=\"POST\" noValidate><input name=\"kind\" type=\"hidden\" value=\"login\"><div><label>Email <input name=\"email\" type=\"email\" value=\"\"></label><ul style=\"color:red;\"></ul></div><ul style=\"color:red;\"></ul><button>Login</button></form></div></div></div>\n  </body>\n</html>"
      },
      "date": 1682488475307
    },
    {
      "item": {
        "type": "factory",
        "id": "aab993ad8154cb94"
      },
      "id": "aab993ad8154cb94",
      "type": "add",
      "after": "1ee21cc7ea480b0e",
      "date": 1682489416148
    },
    {
      "type": "remove",
      "id": "aab993ad8154cb94",
      "date": 1682489421088
    },
    {
      "item": {
        "type": "factory",
        "id": "d2bf74f6e0ce1c3c"
      },
      "id": "d2bf74f6e0ce1c3c",
      "type": "add",
      "after": "1ee21cc7ea480b0e",
      "date": 1682489444088
    },
    {
      "type": "edit",
      "id": "d2bf74f6e0ce1c3c",
      "item": {
        "type": "paragraph",
        "id": "d2bf74f6e0ce1c3c",
        "text": "docs/FAQ.md"
      },
      "date": 1682489446866
    },
    {
      "item": {
        "type": "factory",
        "id": "717af21ce097453e"
      },
      "id": "717af21ce097453e",
      "type": "add",
      "after": "d2bf74f6e0ce1c3c",
      "date": 1682489724462
    },
    {
      "type": "edit",
      "id": "717af21ce097453e",
      "item": {
        "type": "paragraph",
        "id": "717af21ce097453e",
        "text": "⇒ [[Elm Runtime]]"
      },
      "date": 1682489741777
    },
    {
      "item": {
        "type": "factory",
        "id": "b6baa467aa64409a"
      },
      "id": "b6baa467aa64409a",
      "type": "add",
      "after": "717af21ce097453e",
      "date": 1682489936114
    },
    {
      "type": "edit",
      "id": "b6baa467aa64409a",
      "item": {
        "type": "pagefold",
        "id": "b6baa467aa64409a",
        "text": "~"
      },
      "date": 1682489939154
    },
    {
      "item": {
        "type": "factory",
        "id": "edc09bf275ce8de2"
      },
      "id": "edc09bf275ce8de2",
      "type": "add",
      "after": "b6baa467aa64409a",
      "date": 1682489940232
    },
    {
      "type": "edit",
      "id": "edc09bf275ce8de2",
      "item": {
        "type": "paragraph",
        "id": "edc09bf275ce8de2",
        "text": "Mail from Ward, Re: Wonder Room tweaks"
      },
      "date": 1682489955749
    },
    {
      "type": "add",
      "id": "1a6376e0cc10ffa7",
      "item": {
        "type": "paragraph",
        "id": "1a6376e0cc10ffa7",
        "text": "⇒ [[Kavita Tanna]]"
      },
      "after": "edc09bf275ce8de2",
      "date": 1682490001499
    },
    {
      "type": "add",
      "id": "3adba4fc93e4a86c",
      "item": {
        "type": "paragraph",
        "id": "3adba4fc93e4a86c",
        "text": "Why does elm-pages use Lamdera? Is it free?"
      },
      "after": "d2bf74f6e0ce1c3c",
      "date": 1682490065206
    },
    {
      "type": "edit",
      "id": "3adba4fc93e4a86c",
      "item": {
        "type": "paragraph",
        "id": "3adba4fc93e4a86c",
        "text": "Why does [[elm-pages]] use [[Lamdera]]? Is it free?"
      },
      "date": 1682490077234
    },
    {
      "item": {
        "type": "factory",
        "id": "0fb77cb44a60ee99"
      },
      "id": "0fb77cb44a60ee99",
      "type": "add",
      "after": "1a6376e0cc10ffa7",
      "date": 1682492535430
    },
    {
      "type": "edit",
      "id": "0fb77cb44a60ee99",
      "item": {
        "type": "pagefold",
        "id": "0fb77cb44a60ee99",
        "text": "~"
      },
      "date": 1682492538564
    },
    {
      "item": {
        "type": "factory",
        "id": "5ee93c93f6ec6ad5"
      },
      "id": "5ee93c93f6ec6ad5",
      "type": "add",
      "after": "0fb77cb44a60ee99",
      "date": 1682492540811
    },
    {
      "type": "edit",
      "id": "5ee93c93f6ec6ad5",
      "item": {
        "type": "reference",
        "id": "5ee93c93f6ec6ad5",
        "site": "ward.asia.wiki.org",
        "slug": "register-plugin",
        "title": "Register Plugin",
        "text": "We consider adding incrementally more control over the creation of subdomains within a wiki farm. A Register plugin would be offered on a claimed site that would manufacture and possibly pre-claim subdomain sites."
      },
      "date": 1682492544474
    },
    {
      "item": {
        "type": "factory",
        "id": "0a87947d3e1123c6"
      },
      "id": "0a87947d3e1123c6",
      "type": "add",
      "after": "5ee93c93f6ec6ad5",
      "date": 1682492578958
    },
    {
      "type": "edit",
      "id": "0a87947d3e1123c6",
      "item": {
        "type": "paragraph",
        "id": "0a87947d3e1123c6",
        "text": "Is elm-pages full-stack? Can I use it for pure static sites without a server? Can I use it for server-rendered pages with dynamic user content?"
      },
      "date": 1682492580718
    },
    {
      "type": "edit",
      "id": "0a87947d3e1123c6",
      "item": {
        "type": "paragraph",
        "id": "0a87947d3e1123c6",
        "text": "Is [[elm-pages]] full-stack? Can I use it for pure static sites without a server? Can I use it for server-rendered pages with dynamic user content? ([https://github.com/dillonkearns/elm-pages-v3-beta/blob/8e816297380c7154333aa6577f207430fccc2bd7/docs/FAQ.md docs/FAQ.md])"
      },
      "date": 1682492603433
    },
    {
      "type": "edit",
      "id": "0a87947d3e1123c6",
      "item": {
        "type": "paragraph",
        "id": "0a87947d3e1123c6",
        "text": "Is [[elm-pages]] full-stack? Can I use it for pure static sites without a server? Can I use it for server-rendered pages with dynamic user content? ([https://github.com/dillonkearns/elm-pages-v3-beta/blob/8e816297380c7154333aa6577f207430fccc2bd7/docs/FAQ.md#is-elm-pages-full-stack-can-i-use-it-for-pure-static-sites-without-a-server-can-i-use-it-for-server-rendered-pages-with-dynamic-user-content docs/FAQ.md])"
      },
      "date": 1682492629539
    },
    {
      "item": {
        "type": "factory",
        "id": "82d407d72af066ac"
      },
      "id": "82d407d72af066ac",
      "type": "add",
      "after": "0a87947d3e1123c6",
      "date": 1682492660537
    },
    {
      "type": "edit",
      "id": "82d407d72af066ac",
      "item": {
        "type": "markdown",
        "id": "82d407d72af066ac",
        "text": "With this lifecycle, you're able to respond dynamically\nto a request, which means that you can do things like\n\n- Check for a session cookie\n- If the session cookie is present, use a BackendTask to lookup the user using an API call and server-render a page with user-specific page content\n- If the session cookie is absent, redirect to the login page using an HTTP 301 response code\n- Load data dynmically at request-time, so every time the page is loaded you have the latest data (compared to statically built sites that have data from the time when the site was last built)"
      },
      "date": 1682492662519
    },
    {
      "item": {
        "type": "factory",
        "id": "c046cfa83f1e2293"
      },
      "id": "c046cfa83f1e2293",
      "type": "add",
      "after": "82d407d72af066ac",
      "date": 1682492854755
    },
    {
      "type": "edit",
      "id": "c046cfa83f1e2293",
      "item": {
        "type": "paragraph",
        "id": "c046cfa83f1e2293",
        "text": "https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$166479031582596guoVy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st"
      },
      "date": 1682492857333
    },
    {
      "type": "edit",
      "id": "c046cfa83f1e2293",
      "item": {
        "type": "paragraph",
        "id": "c046cfa83f1e2293",
        "text": "paul90:\n[…] Passport has effectively broken support for cookie based session management, and don't seem to intend fixing it. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$166479031582596guoVy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1682492888509
    },
    {
      "type": "edit",
      "id": "c046cfa83f1e2293",
      "item": {
        "type": "paragraph",
        "id": "c046cfa83f1e2293",
        "text": "paul90:\n[…] [[Passport]] has effectively broken support for cookie based session management, and don't seem to intend fixing it. [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$166479031582596guoVy:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]"
      },
      "date": 1682492910894
    },
    {
      "item": {
        "type": "factory",
        "id": "2bd28add49d23277"
      },
      "id": "2bd28add49d23277",
      "type": "add",
      "after": "c046cfa83f1e2293",
      "date": 1682493069039
    },
    {
      "type": "edit",
      "id": "2bd28add49d23277",
      "item": {
        "type": "paragraph",
        "id": "2bd28add49d23277",
        "text": "⇒ [[Life-Cycle]]"
      },
      "date": 1682493077824
    },
    {
      "item": {
        "type": "factory",
        "id": "fc621f77c9f54b33"
      },
      "id": "fc621f77c9f54b33",
      "type": "add",
      "after": "2bd28add49d23277",
      "date": 1682493624064
    },
    {
      "type": "edit",
      "id": "fc621f77c9f54b33",
      "item": {
        "type": "paragraph",
        "id": "fc621f77c9f54b33",
        "text": "https://github.com/mdgriffith/elm-codegen"
      },
      "date": 1682493626941
    },
    {
      "item": {
        "type": "factory",
        "id": "66b1548e7d6b316d"
      },
      "id": "66b1548e7d6b316d",
      "type": "add",
      "after": "fc621f77c9f54b33",
      "date": 1682493643225
    },
    {
      "id": "66b1548e7d6b316d",
      "type": "move",
      "order": [
        "e0d115999f27aa96",
        "0e3d674d81e60539",
        "0c33e81bebc57ba6",
        "66db100b075008d3",
        "1ee21cc7ea480b0e",
        "d2bf74f6e0ce1c3c",
        "3adba4fc93e4a86c",
        "717af21ce097453e",
        "b6baa467aa64409a",
        "edc09bf275ce8de2",
        "1a6376e0cc10ffa7",
        "0fb77cb44a60ee99",
        "5ee93c93f6ec6ad5",
        "0a87947d3e1123c6",
        "82d407d72af066ac",
        "c046cfa83f1e2293",
        "2bd28add49d23277",
        "66b1548e7d6b316d",
        "fc621f77c9f54b33"
      ],
      "date": 1682493645035
    },
    {
      "type": "edit",
      "id": "66b1548e7d6b316d",
      "item": {
        "type": "paragraph",
        "id": "66b1548e7d6b316d",
        "text": "➜  elm-pages-v3-beta git:(master) ✗ sh ./test.sh "
      },
      "date": 1682493646357
    },
    {
      "item": {
        "type": "factory",
        "id": "aae6d601c73b30dc"
      },
      "id": "aae6d601c73b30dc",
      "type": "add",
      "after": "fc621f77c9f54b33",
      "date": 1682493711432
    },
    {
      "id": "aae6d601c73b30dc",
      "type": "move",
      "order": [
        "e0d115999f27aa96",
        "0e3d674d81e60539",
        "0c33e81bebc57ba6",
        "66db100b075008d3",
        "1ee21cc7ea480b0e",
        "d2bf74f6e0ce1c3c",
        "3adba4fc93e4a86c",
        "717af21ce097453e",
        "b6baa467aa64409a",
        "edc09bf275ce8de2",
        "1a6376e0cc10ffa7",
        "0fb77cb44a60ee99",
        "5ee93c93f6ec6ad5",
        "0a87947d3e1123c6",
        "82d407d72af066ac",
        "c046cfa83f1e2293",
        "2bd28add49d23277",
        "66b1548e7d6b316d",
        "aae6d601c73b30dc",
        "fc621f77c9f54b33"
      ],
      "date": 1682493713601
    },
    {
      "type": "edit",
      "id": "aae6d601c73b30dc",
      "item": {
        "type": "code",
        "id": "aae6d601c73b30dc",
        "text": "npm i globby"
      },
      "date": 1682493715646
    },
    {
      "type": "add",
      "id": "9726db13a813a653",
      "item": {
        "type": "paragraph",
        "id": "9726db13a813a653",
        "text": "Prerequisite: https://www.npmjs.com/package/globby"
      },
      "after": "66b1548e7d6b316d",
      "date": 1682493763547
    },
    {
      "type": "edit",
      "id": "9726db13a813a653",
      "item": {
        "type": "paragraph",
        "id": "9726db13a813a653",
        "text": "Prerequisite: globby [https://www.npmjs.com/package/globby npm]"
      },
      "date": 1682493792453
    },
    {
      "item": {
        "type": "factory",
        "id": "8bcc983ce6b5cbd3"
      },
      "id": "8bcc983ce6b5cbd3",
      "type": "add",
      "after": "fc621f77c9f54b33",
      "date": 1682493863238
    },
    {
      "type": "edit",
      "id": "8bcc983ce6b5cbd3",
      "item": {
        "type": "code",
        "id": "8bcc983ce6b5cbd3",
        "text": "> elm-pages build --debug --keep-cache\n\nError [ERR_MODULE_NOT_FOUND]: Cannot find module '/Users/rgb/Projects/dreyeck/elm-pages-v3-beta/codegen/elm-pages-codegen.cjs' imported from /Users/rgb/Projects/dreyeck/elm-pages-v3-beta/generator/src/generate-template-module-connector.js"
      },
      "date": 1682493865188
    },
    {
      "id": "8bcc983ce6b5cbd3",
      "type": "move",
      "order": [
        "e0d115999f27aa96",
        "0e3d674d81e60539",
        "0c33e81bebc57ba6",
        "66db100b075008d3",
        "1ee21cc7ea480b0e",
        "d2bf74f6e0ce1c3c",
        "3adba4fc93e4a86c",
        "717af21ce097453e",
        "b6baa467aa64409a",
        "edc09bf275ce8de2",
        "1a6376e0cc10ffa7",
        "0fb77cb44a60ee99",
        "5ee93c93f6ec6ad5",
        "0a87947d3e1123c6",
        "82d407d72af066ac",
        "c046cfa83f1e2293",
        "2bd28add49d23277",
        "66b1548e7d6b316d",
        "9726db13a813a653",
        "aae6d601c73b30dc",
        "8bcc983ce6b5cbd3",
        "fc621f77c9f54b33"
      ],
      "date": 1682493867571
    },
    {
      "type": "edit",
      "id": "8bcc983ce6b5cbd3",
      "item": {
        "type": "code",
        "id": "8bcc983ce6b5cbd3",
        "text": "[…]\n> elm-pages build --debug --keep-cache\n\nError [ERR_MODULE_NOT_FOUND]: Cannot find module '/Users/rgb/Projects/dreyeck/elm-pages-v3-beta/codegen/elm-pages-codegen.cjs' imported from /Users/rgb/Projects/dreyeck/elm-pages-v3-beta/generator/src/generate-template-module-connector.js"
      },
      "date": 1682493881016
    },
    {
      "item": {
        "type": "factory",
        "id": "ef498fee0ab8e1a4"
      },
      "id": "ef498fee0ab8e1a4",
      "type": "add",
      "after": "fc621f77c9f54b33",
      "date": 1682494014278
    },
    {
      "type": "edit",
      "id": "ef498fee0ab8e1a4",
      "item": {
        "type": "code",
        "id": "ef498fee0ab8e1a4",
        "text": "npm i elm-codegen"
      },
      "date": 1682494016357
    },
    {
      "type": "edit",
      "id": "fc621f77c9f54b33",
      "item": {
        "type": "paragraph",
        "id": "fc621f77c9f54b33",
        "text": "elm-codegen [https://github.com/mdgriffith/elm-codegen github], "
      },
      "date": 1682494107155
    },
    {
      "type": "edit",
      "id": "fc621f77c9f54b33",
      "item": {
        "type": "paragraph",
        "id": "fc621f77c9f54b33",
        "text": "elm-codegen [https://github.com/mdgriffith/elm-codegen github], [https://www.npmjs.com/package/elm-codegen npm]"
      },
      "date": 1682494120672
    },
    {
      "item": {
        "type": "factory",
        "id": "d2979be738afce7f"
      },
      "id": "d2979be738afce7f",
      "type": "add",
      "after": "ef498fee0ab8e1a4",
      "date": 1682494305155
    },
    {
      "type": "edit",
      "id": "d2979be738afce7f",
      "item": {
        "type": "paragraph",
        "id": "d2979be738afce7f",
        "text": "[…]"
      },
      "date": 1682494308110
    },
    {
      "type": "add",
      "id": "a5a467460beb6a5d",
      "item": {
        "type": "paragraph",
        "id": "a5a467460beb6a5d",
        "text": "How do you handle responsive layouts when you don't know the browser dimensions at build time?"
      },
      "after": "d2979be738afce7f",
      "date": 1682494309094
    },
    {
      "type": "edit",
      "id": "a5a467460beb6a5d",
      "item": {
        "type": "paragraph",
        "id": "a5a467460beb6a5d",
        "text": "How do you handle responsive layouts when you don't know the browser dimensions at build time? [https://github.com/dillonkearns/elm-pages-v3-beta/blob/8e816297380c7154333aa6577f207430fccc2bd7/docs/FAQ.md#how-do-you-handle-responsive-layouts-when-you-dont-know-the-browser-dimensions-at-build-time page]"
      },
      "date": 1682494327206
    },
    {
      "item": {
        "type": "factory",
        "id": "d09faefafe7a7fce"
      },
      "id": "d09faefafe7a7fce",
      "type": "add",
      "after": "a5a467460beb6a5d",
      "date": 1682494335049
    },
    {
      "type": "edit",
      "id": "d09faefafe7a7fce",
      "item": {
        "type": "paragraph",
        "id": "d09faefafe7a7fce",
        "text": "A lot of users are building their [[elm-pages]] views with [[elm-ui]], so this is a common question because elm-ui is designed to do responsive layouts by storing the browser dimensions in the Model and doing conditionals based on that state."
      },
      "date": 1682494350107
    },
    {
      "item": {
        "type": "factory",
        "id": "5ecb144da38dc8ac"
      },
      "id": "5ecb144da38dc8ac",
      "type": "add",
      "after": "d09faefafe7a7fce",
      "date": 1682494371699
    },
    {
      "type": "edit",
      "id": "5ecb144da38dc8ac",
      "item": {
        "type": "paragraph",
        "id": "5ecb144da38dc8ac",
        "text": "With elm-pages, and static sites in general, we are building pre-rendered HTML so we can serve it up really quickly through a CDN, rather than serving it up with a traditional server framework. That means that to have responsive pages that don't have a page flash, we need to use media queries to make our pages responsive. That way, the view is the same no matter what the dimensions are, so it will pre-render and look right on whatever device the user is on because the media queries will take care of making it responsive."
      },
      "date": 1682494373750
    },
    {
      "item": {
        "type": "factory",
        "id": "cdeb061b261c03ea"
      },
      "id": "cdeb061b261c03ea",
      "type": "add",
      "after": "5ecb144da38dc8ac",
      "date": 1682494381961
    },
    {
      "type": "edit",
      "id": "cdeb061b261c03ea",
      "item": {
        "type": "paragraph",
        "id": "cdeb061b261c03ea",
        "text": "ince elm-ui isn't currently built with media queries in mind, it isn't a first-class experience to use them with elm-ui. One workaround you can use is to define some responsive classes that simply show or hide an element based on a media query, and apply those classes. For example, you could show the mobile or desktop version of the navbar by having a mobile-responsive and desktop-responsive class and rendering one element with each respsective class. But the media query will only show one at a time based on the dimensions."
      },
      "date": 1682494383243
    },
    {
      "type": "edit",
      "id": "cdeb061b261c03ea",
      "item": {
        "type": "paragraph",
        "id": "cdeb061b261c03ea",
        "text": "Since elm-ui isn't currently built with media queries in mind, it isn't a first-class experience to use them with elm-ui. One workaround you can use is to define some responsive classes that simply show or hide an element based on a media query, and apply those classes. For example, you could show the mobile or desktop version of the navbar by having a mobile-responsive and desktop-responsive class and rendering one element with each respsective class. But the media query will only show one at a time based on the dimensions."
      },
      "date": 1682494389957
    },
    {
      "type": "edit",
      "id": "82d407d72af066ac",
      "item": {
        "type": "markdown",
        "id": "82d407d72af066ac",
        "text": "With this lifecycle, you're able to respond dynamically\nto a request, which means that you can do things like\n\n- Check for a [[Session Cookie]]\n- If the session cookie is present, use a BackendTask to lookup the user using an API call and server-render a page with user-specific page content\n- If the session cookie is absent, redirect to the login page using an HTTP 301 response code\n- Load data dynmically at request-time, so every time the page is loaded you have the latest data (compared to statically built sites that have data from the time when the site was last built)"
      },
      "date": 1682494508467
    },
    {
      "item": {
        "type": "factory",
        "id": "355be983cf749972"
      },
      "id": "355be983cf749972",
      "type": "add",
      "after": "c046cfa83f1e2293",
      "date": 1682494833545
    },
    {
      "type": "edit",
      "id": "355be983cf749972",
      "item": {
        "type": "paragraph",
        "id": "355be983cf749972",
        "text": "Todo app login"
      },
      "date": 1682494835409
    },
    {
      "type": "add",
      "id": "69c4f18a47dc5d21",
      "item": {
        "type": "paragraph",
        "id": "69c4f18a47dc5d21",
        "text": "evancz/elm-todomvc [https://github.com/evancz/elm-todomvc github]"
      },
      "after": "355be983cf749972",
      "date": 1682494918748
    },
    {
      "type": "edit",
      "id": "355be983cf749972",
      "item": {
        "type": "paragraph",
        "id": "355be983cf749972",
        "text": "Todo app login [https://elm-pages-todos.netlify.app/ site]"
      },
      "date": 1682495021243
    },
    {
      "type": "edit",
      "id": "355be983cf749972",
      "item": {
        "type": "paragraph",
        "id": "355be983cf749972",
        "text": "Todo app login [https://elm-pages-todos.netlify.app/ site], [https://todomvc.com/ site]"
      },
      "date": 1682495080296
    },
    {
      "type": "edit",
      "id": "355be983cf749972",
      "item": {
        "type": "paragraph",
        "id": "355be983cf749972",
        "text": "Todo app login [https://elm-pages-todos.netlify.app/ site], [https://todomvc.com/ site], [https://todomvc.com/examples/elm/ page]"
      },
      "date": 1682495102925
    },
    {
      "item": {
        "type": "factory",
        "id": "407122970f92822e"
      },
      "id": "407122970f92822e",
      "type": "add",
      "after": "cdeb061b261c03ea",
      "date": 1682496031758
    },
    {
      "type": "edit",
      "id": "407122970f92822e",
      "item": {
        "type": "pagefold",
        "id": "407122970f92822e",
        "text": "~"
      },
      "date": 1682496034930
    },
    {
      "item": {
        "type": "factory",
        "id": "66af6ca0e27e4190"
      },
      "id": "66af6ca0e27e4190",
      "type": "add",
      "after": "407122970f92822e",
      "date": 1682496036683
    },
    {
      "type": "edit",
      "id": "66af6ca0e27e4190",
      "item": {
        "type": "paragraph",
        "id": "66af6ca0e27e4190",
        "text": "dillonkearns\n  8:15 PM\nHey folks, I just released a new version of the elm-pages v3 beta that integrates my new elm-form package (https://package.elm-lang.org/packages/dillonkearns/elm-form/latest/). I extracted that package from the elm-pages v3 API, but it's now usable as a standalone package as well. I'm quite pleased with how the integration worked out, it feels quite clean! And nice to be able to use the same API in vanilla projects - it just gets some superpowers when you use it in an elm-pages app, but you can use the same API to build your forms!\nSince the scope of elm-pages is so large, it's also nice to have it as a separate package as it's a bit more digestable as a separate package. We can also share Ellie snippets for examples of Forms.\nHere are the latest v3 package docs: https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/\nAnd the starter repo is up-to-date as well: https://github.com/dillonkearns/elm-pages-3-alpha-starter\nThe scaffold commands work with the latest Form API, too. Hope you enjoy!"
      },
      "date": 1682496038723
    },
    {
      "type": "edit",
      "id": "66af6ca0e27e4190",
      "item": {
        "type": "paragraph",
        "id": "66af6ca0e27e4190",
        "text": "dillonkearns\n  via [https://elmlang.slack.com/archives/CNSNETV37/p1681928149693739 slack]\nHey folks, I just released a new version of the elm-pages v3 beta that integrates my new elm-form package (https://package.elm-lang.org/packages/dillonkearns/elm-form/latest/). I extracted that package from the elm-pages v3 API, but it's now usable as a standalone package as well. I'm quite pleased with how the integration worked out, it feels quite clean! And nice to be able to use the same API in vanilla projects - it just gets some superpowers when you use it in an elm-pages app, but you can use the same API to build your forms!\nSince the scope of elm-pages is so large, it's also nice to have it as a separate package as it's a bit more digestable as a separate package. We can also share Ellie snippets for examples of Forms.\nHere are the latest v3 package docs: https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/\nAnd the starter repo is up-to-date as well: https://github.com/dillonkearns/elm-pages-3-alpha-starter\nThe scaffold commands work with the latest Form API, too. Hope you enjoy!"
      },
      "date": 1682496064887
    },
    {
      "type": "edit",
      "id": "66af6ca0e27e4190",
      "item": {
        "type": "markdown",
        "id": "66af6ca0e27e4190",
        "text": "dillonkearns\n  via [https://elmlang.slack.com/archives/CNSNETV37/p1681928149693739 slack]\nHey folks, I just released a new version of the elm-pages v3 beta that integrates my new elm-form package (https://package.elm-lang.org/packages/dillonkearns/elm-form/latest/). I extracted that package from the elm-pages v3 API, but it's now usable as a standalone package as well. I'm quite pleased with how the integration worked out, it feels quite clean! And nice to be able to use the same API in vanilla projects - it just gets some superpowers when you use it in an elm-pages app, but you can use the same API to build your forms!\nSince the scope of elm-pages is so large, it's also nice to have it as a separate package as it's a bit more digestable as a separate package. We can also share Ellie snippets for examples of Forms.\nHere are the latest v3 package docs: https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/\nAnd the starter repo is up-to-date as well: https://github.com/dillonkearns/elm-pages-3-alpha-starter\nThe scaffold commands work with the latest Form API, too. Hope you enjoy!"
      },
      "date": 1682496727080
    },
    {
      "type": "edit",
      "id": "66af6ca0e27e4190",
      "item": {
        "type": "markdown",
        "id": "66af6ca0e27e4190",
        "text": "⇒ [[Dillon Kearns]]\n  via [https://elmlang.slack.com/archives/CNSNETV37/p1681928149693739 slack]\nHey folks, I just released a new version of the elm-pages v3 beta that integrates my new elm-form package (https://package.elm-lang.org/packages/dillonkearns/elm-form/latest/). I extracted that package from the elm-pages v3 API, but it's now usable as a standalone package as well. I'm quite pleased with how the integration worked out, it feels quite clean! And nice to be able to use the same API in vanilla projects - it just gets some superpowers when you use it in an elm-pages app, but you can use the same API to build your forms!\nSince the scope of elm-pages is so large, it's also nice to have it as a separate package as it's a bit more digestable as a separate package. We can also share Ellie snippets for examples of Forms.\nHere are the latest v3 package docs: https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/\nAnd the starter repo is up-to-date as well: https://github.com/dillonkearns/elm-pages-3-alpha-starter\nThe scaffold commands work with the latest Form API, too. Hope you enjoy!"
      },
      "date": 1682497838060
    },
    {
      "item": {
        "type": "factory",
        "id": "795a26fd919b6d81"
      },
      "id": "795a26fd919b6d81",
      "type": "add",
      "after": "66af6ca0e27e4190",
      "date": 1682497889612
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "paragraph",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n    elm-pages Docs Site\n    elm-pages Elm API Docs\n    Quick start repo (live site hosted here)\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682497890799
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "paragraph",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n    elm-pages Elm API Docs\n    Quick start repo (live site hosted here)\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682497915709
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n    elm-pages Elm API Docs\n    Quick start repo (live site hosted here)\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682497916900
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n    Quick start repo (live site hosted here)\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682497951926
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted here)\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682497989730
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682498013365
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/ page]\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n    Introducing elm-pages blog post\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682498065985
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/ page]\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n* Introducing elm-pages blog [https://elm-pages.com/blog/introducing-elm-pages/ post]]\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682498089622
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/ page]\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n* Introducing elm-pages blog [https://elm-pages.com/blog/introducing-elm-pages/ post]\n    examples folder (includes https://elm-pages.com site source)\n"
      },
      "date": 1682498095975
    },
    {
      "type": "edit",
      "id": "795a26fd919b6d81",
      "item": {
        "type": "markdown",
        "id": "795a26fd919b6d81",
        "text": "Getting Started Resources [https://package.elm-lang.org/packages/dillonkearns/elm-pages-v3-beta/latest/ page]\n\n* elm-pages Docs [https://elm-pages.com/docs/ site]\n* elm-pages Elm API [https://package.elm-lang.org/packages/dillonkearns/elm-pages/latest/ docs]\n* Quick start [https://github.com/dillonkearns/elm-pages-starter repo] (live site hosted [https://elm-pages-starter.netlify.app/ here])\n* Introducing elm-pages blog [https://elm-pages.com/blog/introducing-elm-pages/ post]\n* examples folder [https://github.com/dillonkearns/elm-pages/tree/master/examples github] (includes https://elm-pages.com site source)\n"
      },
      "date": 1682498127367
    },
    {
      "item": {
        "type": "factory",
        "id": "3b4a75ab27170ad4"
      },
      "id": "3b4a75ab27170ad4",
      "type": "add",
      "after": "795a26fd919b6d81",
      "date": 1682499322500
    },
    {
      "type": "edit",
      "id": "3b4a75ab27170ad4",
      "item": {
        "type": "paragraph",
        "id": "3b4a75ab27170ad4",
        "text": "⇒"
      },
      "date": 1682499329173
    },
    {
      "type": "edit",
      "id": "3b4a75ab27170ad4",
      "item": {
        "type": "paragraph",
        "id": "3b4a75ab27170ad4",
        "text": "⇒ [[Conduit]]"
      },
      "date": 1682499339241
    }
  ]
}