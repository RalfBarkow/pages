{
  "title": "PN Modeling Guidelines",
  "story": [
    {
      "type": "paragraph",
      "id": "678a0f7359584fc2",
      "text": "As a performance modeling and analysis approach, PN modeling includes three parts: using the visual notation to model the application running as a DRE system, measuring the environment overheads and calculating the performance metrics using the prediction algorithms."
    },
    {
      "type": "paragraph",
      "id": "d21bd1c77c24c478",
      "text": "The visual notation is used by application developers to build a PN model of a DRE application. The notation provides icons to represent the application and network structure and the environment overheads. The application and network structure are […]"
    },
    {
      "type": "paragraph",
      "id": "66f7139ae4f4a896",
      "text": "[[Visual Notation]]"
    },
    {
      "type": "paragraph",
      "id": "a61efc56ba2ac62d",
      "text": "The visual notation of PN modeling helps application developers obtain a graphic view of the performance of a DRE system. The visual notation captures the relevant aspects of the GeoSurv II UAV application, its network architecture and deployments that are needed for the GeoSurv II UAV application performance analysis. […]"
    },
    {
      "type": "image",
      "id": "62292fc06e1dc805",
      "text": "Figure 11: An example of an application diagram, p. 55.",
      "size": "wide",
      "width": 419,
      "height": 101,
      "url": "/assets/plugins/image/af26669df19e28085b671b30c86388e7.jpg"
    },
    {
      "type": "paragraph",
      "id": "7af3ea5e57e2c4f8",
      "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
    },
    {
      "type": "image",
      "id": "8945ebc7a60c6af9",
      "text": "Figure 13: An example of a scenario diagram, p. 57.",
      "size": "wide",
      "width": 418,
      "height": 202,
      "url": "/assets/plugins/image/fe71793bda23d2f1e95213e594fba527.jpg"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "PN Modeling Guidelines",
        "story": []
      },
      "date": 1709228666936
    },
    {
      "item": {
        "type": "paragraph",
        "id": "64da4884f5a81c9f",
        "text": "The on-board computer system of the GeoSurv II Unmanned Aerial Vehicle (UAV) is a small-scale loosely coupled distributed real-time and embedded (DRE) system. Ideally, a loosely coupled DRE system is combined with applications, a publish/subscribe middleware, a real-time operating system and time deterministic network hardware. Even though many performance modeling and analysis approaches are available, there is still a need of a simple model to help application developers predict the performance of the GeoSurv II UAV computer system."
      },
      "id": "64da4884f5a81c9f",
      "type": "add",
      "date": 1709228668427
    },
    {
      "type": "edit",
      "id": "64da4884f5a81c9f",
      "item": {
        "type": "paragraph",
        "id": "64da4884f5a81c9f",
        "text": "The on-board computer system of the GeoSurv II Unmanned Aerial Vehicle (UAV) is a small-scale loosely coupled distributed real-time and embedded (DRE) system. Ideally, a loosely coupled DRE system is combined with applications, a publish/subscribe middleware, a real-time operating system and time deterministic network hardware. Even though many performance modeling and analysis approaches are available, there is still a need of a simple model to help application developers predict the performance of the GeoSurv II UAV computer system."
      },
      "date": 1709228669952
    },
    {
      "item": {
        "type": "image",
        "id": "8945ebc7a60c6af9",
        "text": "Figure 13: An example of a scenario diagram, p. 57.",
        "size": "wide",
        "width": 418,
        "height": 202,
        "url": "/assets/plugins/image/fe71793bda23d2f1e95213e594fba527.jpg"
      },
      "id": "8945ebc7a60c6af9",
      "type": "add",
      "after": "64da4884f5a81c9f",
      "date": 1709228795826
    },
    {
      "type": "edit",
      "id": "8945ebc7a60c6af9",
      "item": {
        "type": "image",
        "id": "8945ebc7a60c6af9",
        "text": "Figure 13: An example of a scenario diagram, p. 57.",
        "size": "wide",
        "width": 418,
        "height": 202,
        "url": "/assets/plugins/image/fe71793bda23d2f1e95213e594fba527.jpg"
      },
      "date": 1709228821242
    },
    {
      "type": "edit",
      "id": "64da4884f5a81c9f",
      "item": {
        "type": "paragraph",
        "id": "64da4884f5a81c9f",
        "text": "The on-board computer system of the GeoSurv II Unmanned Aerial Vehicle (UAV) is a small-scale loosely coupled distributed real-time and embedded (DRE) system. Ideally, a loosely coupled DRE system is combined with applications, a publish/subscribe middleware, a real-time operating system and time deterministic network hardware. Even though many performance modeling and analysis approaches are available, there is still a need of a simple model to help application developers predict the performance of the GeoSurv II UAV computer system."
      },
      "date": 1709228902574
    },
    {
      "type": "add",
      "id": "678a0f7359584fc2",
      "item": {
        "type": "paragraph",
        "id": "678a0f7359584fc2",
        "text": "As a performance modeling and analysis approach, PN modeling includes three parts: using the visual notation to model the application running as a DRE system, measuring the environment overheads and calculating the performance metrics using the prediction algorithms."
      },
      "after": "64da4884f5a81c9f",
      "date": 1709228903922
    },
    {
      "type": "add",
      "id": "9f199a53f54fa1f3",
      "item": {
        "type": "paragraph",
        "id": "9f199a53f54fa1f3",
        "text": ""
      },
      "after": "64da4884f5a81c9f",
      "date": 1709228975215
    },
    {
      "type": "edit",
      "id": "9f199a53f54fa1f3",
      "item": {
        "type": "paragraph",
        "id": "9f199a53f54fa1f3",
        "text": ""
      },
      "date": 1709228989555
    },
    {
      "type": "edit",
      "id": "9f199a53f54fa1f3",
      "item": {
        "type": "paragraph",
        "id": "9f199a53f54fa1f3",
        "text": ""
      },
      "date": 1709229012376
    },
    {
      "type": "add",
      "id": "371ad51865ed37d5",
      "item": {
        "type": "paragraph",
        "id": "371ad51865ed37d5",
        "text": "This dissertation addresses the need for the development of an analytic modeling approach named Path Network (PN) modeling, which can be used to predict whether a loosely coupled DRE environment is appropriate for the GeoSurv II UAV applications. The visual notation of the PN model is designed, and the temporal parameters of the PN model are characterized. The environment overheads are broken down into several pieces for performance prediction. The algorithm for calculating the performance is described in detail. The prediction results are compared with the measurement results of a UAV experimental system to validate PN modeling. Even though the test-bed is not an ideal loosely coupled DRE environment, the results of the case study still indicate that PN modeling provides a simple and easy way for application developers to predict the performance of the on-board, loosely coupled DRE system of the GeoSurv II UAV."
      },
      "after": "64da4884f5a81c9f",
      "date": 1709229031038
    },
    {
      "id": "792e825e6fd5a43f",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "792e825e6fd5a43f",
        "text": "~"
      },
      "after": "371ad51865ed37d5",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709229061906
    },
    {
      "id": "792e825e6fd5a43f",
      "type": "remove",
      "removedTo": {
        "page": "Path Network Modeling"
      },
      "date": 1709229111858
    },
    {
      "id": "64da4884f5a81c9f",
      "type": "remove",
      "removedTo": {
        "page": "Path Network Modeling"
      },
      "date": 1709229118403
    },
    {
      "id": "371ad51865ed37d5",
      "type": "remove",
      "removedTo": {
        "page": "Path Network Modeling"
      },
      "date": 1709229120621
    },
    {
      "id": "9f199a53f54fa1f3",
      "type": "move",
      "order": [
        "678a0f7359584fc2",
        "9f199a53f54fa1f3",
        "8945ebc7a60c6af9"
      ],
      "date": 1709229133687
    },
    {
      "type": "remove",
      "id": "9f199a53f54fa1f3",
      "date": 1709229137615
    },
    {
      "type": "add",
      "id": "d21bd1c77c24c478",
      "item": {
        "type": "paragraph",
        "id": "d21bd1c77c24c478",
        "text": "The visual notation is used by application developers to build a PN model of a DRE application. The notation provides icons to represent the application and network structure and the environment overheads. The application and network structure are […]"
      },
      "after": "678a0f7359584fc2",
      "date": 1709229163164
    },
    {
      "type": "add",
      "id": "66f7139ae4f4a896",
      "item": {
        "type": "paragraph",
        "id": "66f7139ae4f4a896",
        "text": "[[Visual Notation]]"
      },
      "after": "d21bd1c77c24c478",
      "date": 1709229179584
    },
    {
      "type": "add",
      "id": "a61efc56ba2ac62d",
      "item": {
        "type": "paragraph",
        "id": "a61efc56ba2ac62d",
        "text": "The visual notation of PN modeling helps application developers obtain a graphic view of the performance of a DRE system. The visual notation captures the relevant aspects of the GeoSurv II UAV application, its network architecture and deployments that are needed for the GeoSurv II UAV application performance analysis. […]"
      },
      "after": "66f7139ae4f4a896",
      "date": 1709229203719
    },
    {
      "item": {
        "type": "image",
        "id": "62292fc06e1dc805",
        "text": "Figure 11: An example of an application diagram, p. 55.",
        "size": "wide",
        "width": 419,
        "height": 101,
        "url": "/assets/plugins/image/af26669df19e28085b671b30c86388e7.jpg"
      },
      "id": "62292fc06e1dc805",
      "type": "add",
      "after": "8945ebc7a60c6af9",
      "date": 1709229284557
    },
    {
      "type": "edit",
      "id": "62292fc06e1dc805",
      "item": {
        "type": "image",
        "id": "62292fc06e1dc805",
        "text": "Figure 11: An example of an application diagram, p. 55.",
        "size": "wide",
        "width": 419,
        "height": 101,
        "url": "/assets/plugins/image/af26669df19e28085b671b30c86388e7.jpg"
      },
      "date": 1709229301353
    },
    {
      "type": "edit",
      "id": "62292fc06e1dc805",
      "item": {
        "type": "image",
        "id": "62292fc06e1dc805",
        "text": "Figure 11: An example of an application diagram, p. 55.",
        "size": "wide",
        "width": 419,
        "height": 101,
        "url": "/assets/plugins/image/af26669df19e28085b671b30c86388e7.jpg"
      },
      "date": 1709229312961
    },
    {
      "id": "62292fc06e1dc805",
      "type": "move",
      "order": [
        "678a0f7359584fc2",
        "d21bd1c77c24c478",
        "66f7139ae4f4a896",
        "a61efc56ba2ac62d",
        "62292fc06e1dc805",
        "8945ebc7a60c6af9"
      ],
      "date": 1709229324859
    },
    {
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "id": "7af3ea5e57e2c4f8",
      "type": "add",
      "after": "8945ebc7a60c6af9",
      "date": 1709229357880
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229362187
    },
    {
      "id": "7af3ea5e57e2c4f8",
      "type": "move",
      "order": [
        "678a0f7359584fc2",
        "d21bd1c77c24c478",
        "66f7139ae4f4a896",
        "a61efc56ba2ac62d",
        "62292fc06e1dc805",
        "7af3ea5e57e2c4f8",
        "8945ebc7a60c6af9"
      ],
      "date": 1709229371703
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229424808
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229464645
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229498763
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229521555
    },
    {
      "type": "edit",
      "id": "7af3ea5e57e2c4f8",
      "item": {
        "type": "paragraph",
        "id": "7af3ea5e57e2c4f8",
        "text": "Application diagrams for each mode of the application are drawn first to show the publish/subscribe relationships between processes and messages to help application developers abstract the application structure in a graphical way. Figure 11 shows an example of an application diagram with two processes named P_6, and P_7 and one [[Message]] named M_1O. The processes are represented by parallelograms with their process IDs and priorities, and the message is shown as a directed line with its message ID and its priority. P_6 publishes M_10 that is subscribed by P_7. The priority of P_6 is marked as 51, and the priority of P_7 is marked as 52. The message M_10's priority is 20. […]"
      },
      "date": 1709229621632,
      "error": {
        "type": "error",
        "msg": ""
      }
    },
    {
      "type": "fork",
      "date": 1709296610281
    }
  ]
}