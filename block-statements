{
  "title": "Block statements",
  "story": [
    {
      "type": "paragraph",
      "id": "14d8a78ad6949594",
      "text": "Block statements are a series of statements surrounded by curly braces to group them together. A block statement is itself a single statement. When we have more than one statement we want to make conditional with an if, or repeat with a loop, it's simple, we have to use a block statement. But what if we write it first just one statement then refactor it to have two?"
    },
    {
      "type": "code",
      "id": "0859af4a0df2138c",
      "text": "var debugMode = false\n\n// safe, but ill-advised\nif (debugMode)\n  console.log('Doing some debugging')\n"
    },
    {
      "type": "paragraph",
      "id": "295efcffe50ed7e6",
      "text": "'Doing some debugging' never gets logged, because we aren't in debug mode. But we need some more debugging info."
    },
    {
      "type": "code",
      "id": "c6ce52488a5492cd",
      "text": "var debugMode = false\n\n// broken\nif (debugMode)\n  console.log('Doing some debugging')\n  console.log('Wtf this is useless')\n"
    },
    {
      "type": "paragraph",
      "id": "1ffc66cd0236ef9d",
      "text": "Now we always log 'Wtf this is useless', which is probably not what we meant to do, but is very hard to tell as we read the code."
    },
    {
      "type": "code",
      "id": "cda9384c877dd56e",
      "text": "var debugMode = false\n\n// much better\nif (debugMode) {\n  console.log('Doing some debugging')\n  console.log('Wtf this is useless')\n}\n"
    },
    {
      "type": "paragraph",
      "id": "118c4d2e8a947805",
      "text": "Having the block there to begin with makes it much more likely that it will be refactored correctly later."
    },
    {
      "type": "paragraph",
      "id": "14a736b9038f67b6",
      "text": "I do make an exception for myself in cases where the entire 'if' statement is on a single line. It is nice and concise, though I'm not entirely sure it isn't better to always make it multi line with a block statement."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Block statements",
        "story": []
      },
      "date": 1431459714003
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "14d8a78ad6949594",
        "text": "Statement blocks are a series of statements surrounded by curly braces to group them together. A statement block is itself a single statement. When we have more than one statement we want to make conditional with an if, or repeat with a loop, it's simple, we have to use a statement block. But what if we write it first just one statement then refactor it to have two?"
      },
      "id": "14d8a78ad6949594",
      "date": 1431459721110
    },
    {
      "type": "edit",
      "id": "14d8a78ad6949594",
      "item": {
        "type": "paragraph",
        "id": "14d8a78ad6949594",
        "text": "Block statements are a series of statements surrounded by curly braces to group them together. A block statement is itself a single statement. When we have more than one statement we want to make conditional with an if, or repeat with a loop, it's simple, we have to use a block statement. But what if we write it first just one statement then refactor it to have two?"
      },
      "date": 1431459765690
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "0859af4a0df2138c",
        "text": "var debugMode = false\n\n// safe, but ill-advised\nif (debugMode)\n  console.log('Doing some debugging')\n"
      },
      "after": "14d8a78ad6949594",
      "id": "0859af4a0df2138c",
      "date": 1431459770354
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "295efcffe50ed7e6",
        "text": "'Doing some debugging' never gets logged, because we aren't in debug mode. But we need some more debugging info."
      },
      "after": "0859af4a0df2138c",
      "id": "295efcffe50ed7e6",
      "date": 1431459788009
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "c6ce52488a5492cd",
        "text": "var debugMode = false\n\n// broken\nif (debugMode)\n  console.log('Doing some debugging')\n  console.log('Wtf this is useless')\n"
      },
      "after": "295efcffe50ed7e6",
      "id": "c6ce52488a5492cd",
      "date": 1431459791581
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1ffc66cd0236ef9d",
        "text": "Now we always log 'Wtf this is useless', which is probably not what we meant to do, but is very hard to tell as we read the code."
      },
      "after": "c6ce52488a5492cd",
      "id": "1ffc66cd0236ef9d",
      "date": 1431459797338
    },
    {
      "type": "add",
      "item": {
        "type": "code",
        "id": "cda9384c877dd56e",
        "text": "var debugMode = false\n\n// much better\nif (debugMode) {\n  console.log('Doing some debugging')\n  console.log('Wtf this is useless')\n}\n"
      },
      "after": "1ffc66cd0236ef9d",
      "id": "cda9384c877dd56e",
      "date": 1431459806086
    },
    {
      "item": {
        "type": "factory",
        "id": "118c4d2e8a947805"
      },
      "id": "118c4d2e8a947805",
      "type": "add",
      "after": "cda9384c877dd56e",
      "date": 1431459853902
    },
    {
      "type": "edit",
      "id": "118c4d2e8a947805",
      "item": {
        "type": "paragraph",
        "id": "118c4d2e8a947805",
        "text": "Having the block there to begin with makes it much more likely that it will be refactored correctly later."
      },
      "date": 1431459900525
    },
    {
      "type": "add",
      "id": "14a736b9038f67b6",
      "item": {
        "type": "paragraph",
        "id": "14a736b9038f67b6",
        "text": "I do make an exception for myself in cases where the entire 'if' statement is on a single line. It is nice and concise, though I'm not entirely sure it isn't better to always make it multi line with a block statement."
      },
      "after": "118c4d2e8a947805",
      "date": 1431460076834
    },
    {
      "type": "fork",
      "site": "nrn.io",
      "date": 1652868401694
    }
  ]
}