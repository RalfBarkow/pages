{
  "title": "History of Parsing",
  "story": [
    {
      "type": "paragraph",
      "id": "f759973b5c9f1bf7",
      "text": "A compiler has roughly two parts, a parser and a code generator. The technology for parsing improved dramatically during the time I studied at Purdue. I came to understand refactoring when writing the parser generator with which I would write a parser in graduate school. Yacc and then PEG remain tools close at hand after graduation."
    },
    {
      "type": "paragraph",
      "id": "8cf52e35ed4e879d",
      "text": "See Parsing: a Timeline by Jeffrey Kegler. [https://jeffreykegler.github.io/personal/timeline_v3 post]"
    },
    {
      "type": "paragraph",
      "id": "36ca7c96ba399d2b",
      "text": "Perl Weekly - Everything by Jeffrey Kegler. [https://perlweekly.com/a/jeffrey-kegler.html post]"
    },
    {
      "type": "pagefold",
      "id": "378048bad0e235a8",
      "text": "quotes"
    },
    {
      "type": "paragraph",
      "id": "883b1d504c9f6b68",
      "text": "1987: Perl 1 is released. Perl embraces complexity like no previous language. Larry uses yacc and LALR very aggressively -- to my knowledge more aggressively than anyone before or since."
    },
    {
      "type": "paragraph",
      "id": "a7eb2073e73b9470",
      "text": "2004: PEG. As it is usually used, PEG is the nitroglycerin of LL parsing -- slightly more powerful than LL(1), but too dangerous to be worth it."
    },
    {
      "type": "pagefold",
      "id": "323546c582265116",
      "text": "."
    },
    {
      "type": "markdown",
      "id": "c050ec9a97c5e6d9",
      "text": "- 4th century BCE: Panini's description of Sanskrit\n- 1854: Ada discovers computer \"language\"\n- 1906: Markov's chains\n- 1913: Markov and Eugene Onegin\n- 1929: Bloomfield's \"Postulates\"\n- \"Language\" as of 1929\n- 1943: Post's rewriting system\n- 1945: Turing discovers stacks\n- 1948: Shannon repurposes Markov's chains\n- 1949: Rutishauser's compiler\n- The Operator Issue as of 1949\n- 1950: Boehm's compiler\n- 1952: Grace Hopper uses the term compiler\n- \"Compiler\" as of 1952\n- 1951: Kleene's regular languages\n- 1952: Glennie's AUTOCODE\n- 1954: The FORTRAN project begins\n- \"Compiler\" as of 1954\n- 1955: Noam Chomsky graduates\n- 1955: Work begins on the IT compiler\n- 1956: The IT compiler is released\n- \"Compiler\" as of 1956\n- 1956: The Chomsky hierarchy\n- Term: \"Language\" as of 1956\n- Term: \"Parser\"\n- Term: \"Recognizer\"\n- 1957: Chomsky publishes Syntactic Structures\n- Term: \"Chomskyan parsing\"\n- 1957: FORTRAN released\n- 1958: LISP released\n- 1959: Backus's notation\n- 1959: Operator precedence and stacks\n- The Operator Issue as of 1959\n- \"Language\" as of 1959\n- April 1960: Oettinger discovers pushdown automata\n- Term: \"State-driven\"\n- Term: \"Stack-driven\"\n- May 1960: The ALGOL report\n- The Parsing Problem\n- May 1960: BNF\n- Term: \"declarative\"\n- Term: \"procedural\"\n- Term: \"general\"\n- July 1960: Glennie's compiler-compiler\n- January 1961: The first parsing paper\n- Term: \"Top-down\"\n- Term: \"Bottom-up\"\n- Term: \"Synthesized attribute\"\n- September 1961: Sakai discovers table parsing\n- Term: \"Table-driven\"\n- November 1961: Dijkstra's shunting yard algorithm\n- December 1961: Lucas discovers recursive descent\n- The Operator Issue as of 1961\n- 1964: The Meta II compiler\n- Term: \"linear\"\n- 1965: Knuth discovers LR\n- \"Language\" as of 1965\n- The Parsing Problem as of 1965\n- The Operator Issue as of 1965\n- 1968: Lewis and Stearns discover LL\n- Terms: \"LL\" and \"LR\"\n- The Operator Issue as of 1968\n- 1968: Earley's algorithm\n- 1968: Attribute grammars\n- Term: \"Inherited attributes\"\n- Term: \"Attribute grammar\"\n- 1969: LALR\n- 1969: the ed editor\n- 1972: Aho and Ullman is published\n- 1973: LRR\n- 1973: Pratt parsing\n- 1975: The C compiler is converted to LALR\n- 1977: The first dragon book is published\n- 1979: Yacc is released\n- The Parsing Problem as of 1979\n- 1987: Perl 1 is released\n- 1990: Monads\n- 1991: Leo's speed-up of Earley's algorithm\n- The Parsing Problem as of 1991\n- The Operator Issue as of 1991\n- 1992: Combinator parsing\n- 1995: Wadler's monads\n- 1996: Hutton and Meijer on combinator parsing\n- The Operator Issue as of 1996\n- 2000: The Perl 6 effort begins\n- 2002: Aycock and Horspool solve Earley's zero-length rule problem\n- 2004: PEG\n- 2006: GNU C reverts to recursive descent\n- 2010: Leo 1991 is implemented\n- 2012: General precedence parsing\n- The Operator Issue as of 2012\n- The Parsing Problem as of 2012\n- Bibliography\n- Footnotes"
    },
    {
      "type": "code",
      "id": "f141b3d7277e31ff",
      "text": "copy([...document.querySelectorAll('h1')]\n  .map(e=>e.innerText).join(\"\\n- \"))"
    },
    {
      "type": "paragraph",
      "id": "d122eeee87be1bcf",
      "text": "[[Parse a Page with Pest]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "History of Parsing",
        "story": []
      },
      "date": 1696021737010
    },
    {
      "item": {
        "type": "factory",
        "id": "f759973b5c9f1bf7"
      },
      "id": "f759973b5c9f1bf7",
      "type": "add",
      "date": 1696021775441
    },
    {
      "type": "edit",
      "id": "f759973b5c9f1bf7",
      "item": {
        "type": "paragraph",
        "id": "f759973b5c9f1bf7",
        "text": "A compiler has roughly two parts, a parser and a code generator. The technology for parsing improved dramatically during the time I studied at Purdue. I came to understand refactoring when writing the parser generator with which I would write a parser in graduate school. Yacc and then PEG remain tools close at hand after graduation."
      },
      "date": 1696022136056
    },
    {
      "item": {
        "type": "factory",
        "id": "8cf52e35ed4e879d"
      },
      "id": "8cf52e35ed4e879d",
      "type": "add",
      "after": "f759973b5c9f1bf7",
      "date": 1696022171721
    },
    {
      "type": "edit",
      "id": "8cf52e35ed4e879d",
      "item": {
        "type": "paragraph",
        "id": "8cf52e35ed4e879d",
        "text": "See Parsing: a Timeline by Jeffrey Kegler."
      },
      "date": 1696022198579
    },
    {
      "type": "edit",
      "id": "8cf52e35ed4e879d",
      "item": {
        "type": "paragraph",
        "id": "8cf52e35ed4e879d",
        "text": "See Parsing: a Timeline by Jeffrey Kegler. [https://jeffreykegler.github.io/personal/timeline_v3 post]"
      },
      "date": 1696022211771
    },
    {
      "type": "add",
      "id": "36ca7c96ba399d2b",
      "item": {
        "type": "paragraph",
        "id": "36ca7c96ba399d2b",
        "text": "Perl Weekly - Everything by Jeffrey Kegler. "
      },
      "after": "8cf52e35ed4e879d",
      "date": 1696023376883
    },
    {
      "type": "edit",
      "id": "36ca7c96ba399d2b",
      "item": {
        "type": "paragraph",
        "id": "36ca7c96ba399d2b",
        "text": "Perl Weekly - Everything by Jeffrey Kegler. [https://perlweekly.com/a/jeffrey-kegler.html post]"
      },
      "date": 1696023392939
    },
    {
      "item": {
        "type": "factory",
        "id": "323546c582265116"
      },
      "id": "323546c582265116",
      "type": "add",
      "after": "36ca7c96ba399d2b",
      "date": 1696023480713
    },
    {
      "type": "edit",
      "id": "323546c582265116",
      "item": {
        "type": "pagefold",
        "id": "323546c582265116",
        "text": "."
      },
      "date": 1696023484559
    },
    {
      "item": {
        "type": "factory",
        "id": "d122eeee87be1bcf"
      },
      "id": "d122eeee87be1bcf",
      "type": "add",
      "after": "323546c582265116",
      "date": 1696023486941
    },
    {
      "type": "edit",
      "id": "d122eeee87be1bcf",
      "item": {
        "type": "paragraph",
        "id": "d122eeee87be1bcf",
        "text": "[[Parse a Page with Pest]]"
      },
      "date": 1696023502549
    },
    {
      "item": {
        "type": "factory",
        "id": "c050ec9a97c5e6d9"
      },
      "id": "c050ec9a97c5e6d9",
      "type": "add",
      "after": "d122eeee87be1bcf",
      "date": 1702487405728
    },
    {
      "type": "edit",
      "id": "c050ec9a97c5e6d9",
      "item": {
        "type": "markdown",
        "id": "c050ec9a97c5e6d9",
        "text": "copy([...document.querySelectorAll('h1')].map(e=>e.innerText).join(\"\\n- \"))"
      },
      "date": 1702487414178
    },
    {
      "type": "edit",
      "id": "c050ec9a97c5e6d9",
      "item": {
        "type": "markdown",
        "id": "c050ec9a97c5e6d9",
        "text": "- 4th century BCE: Panini's description of Sanskrit\n- 1854: Ada discovers computer \"language\"\n- 1906: Markov's chains\n- 1913: Markov and Eugene Onegin\n- 1929: Bloomfield's \"Postulates\"\n- \"Language\" as of 1929\n- 1943: Post's rewriting system\n- 1945: Turing discovers stacks\n- 1948: Shannon repurposes Markov's chains\n- 1949: Rutishauser's compiler\n- The Operator Issue as of 1949\n- 1950: Boehm's compiler\n- 1952: Grace Hopper uses the term compiler\n- \"Compiler\" as of 1952\n- 1951: Kleene's regular languages\n- 1952: Glennie's AUTOCODE\n- 1954: The FORTRAN project begins\n- \"Compiler\" as of 1954\n- 1955: Noam Chomsky graduates\n- 1955: Work begins on the IT compiler\n- 1956: The IT compiler is released\n- \"Compiler\" as of 1956\n- 1956: The Chomsky hierarchy\n- Term: \"Language\" as of 1956\n- Term: \"Parser\"\n- Term: \"Recognizer\"\n- 1957: Chomsky publishes Syntactic Structures\n- Term: \"Chomskyan parsing\"\n- 1957: FORTRAN released\n- 1958: LISP released\n- 1959: Backus's notation\n- 1959: Operator precedence and stacks\n- The Operator Issue as of 1959\n- \"Language\" as of 1959\n- April 1960: Oettinger discovers pushdown automata\n- Term: \"State-driven\"\n- Term: \"Stack-driven\"\n- May 1960: The ALGOL report\n- The Parsing Problem\n- May 1960: BNF\n- Term: \"declarative\"\n- Term: \"procedural\"\n- Term: \"general\"\n- July 1960: Glennie's compiler-compiler\n- January 1961: The first parsing paper\n- Term: \"Top-down\"\n- Term: \"Bottom-up\"\n- Term: \"Synthesized attribute\"\n- September 1961: Sakai discovers table parsing\n- Term: \"Table-driven\"\n- November 1961: Dijkstra's shunting yard algorithm\n- December 1961: Lucas discovers recursive descent\n- The Operator Issue as of 1961\n- 1964: The Meta II compiler\n- Term: \"linear\"\n- 1965: Knuth discovers LR\n- \"Language\" as of 1965\n- The Parsing Problem as of 1965\n- The Operator Issue as of 1965\n- 1968: Lewis and Stearns discover LL\n- Terms: \"LL\" and \"LR\"\n- The Operator Issue as of 1968\n- 1968: Earley's algorithm\n- 1968: Attribute grammars\n- Term: \"Inherited attributes\"\n- Term: \"Attribute grammar\"\n- 1969: LALR\n- 1969: the ed editor\n- 1972: Aho and Ullman is published\n- 1973: LRR\n- 1973: Pratt parsing\n- 1975: The C compiler is converted to LALR\n- 1977: The first dragon book is published\n- 1979: Yacc is released\n- The Parsing Problem as of 1979\n- 1987: Perl 1 is released\n- 1990: Monads\n- 1991: Leo's speed-up of Earley's algorithm\n- The Parsing Problem as of 1991\n- The Operator Issue as of 1991\n- 1992: Combinator parsing\n- 1995: Wadler's monads\n- 1996: Hutton and Meijer on combinator parsing\n- The Operator Issue as of 1996\n- 2000: The Perl 6 effort begins\n- 2002: Aycock and Horspool solve Earley's zero-length rule problem\n- 2004: PEG\n- 2006: GNU C reverts to recursive descent\n- 2010: Leo 1991 is implemented\n- 2012: General precedence parsing\n- The Operator Issue as of 2012\n- The Parsing Problem as of 2012\n- Bibliography\n- Footnotes"
      },
      "date": 1702487446815
    },
    {
      "id": "c050ec9a97c5e6d9",
      "type": "move",
      "order": [
        "f759973b5c9f1bf7",
        "8cf52e35ed4e879d",
        "36ca7c96ba399d2b",
        "c050ec9a97c5e6d9",
        "323546c582265116",
        "d122eeee87be1bcf"
      ],
      "date": 1702487479011
    },
    {
      "item": {
        "type": "factory",
        "id": "f141b3d7277e31ff"
      },
      "id": "f141b3d7277e31ff",
      "type": "add",
      "after": "d122eeee87be1bcf",
      "date": 1702487701020
    },
    {
      "type": "edit",
      "id": "f141b3d7277e31ff",
      "item": {
        "type": "code",
        "id": "f141b3d7277e31ff",
        "text": "copy([...document.querySelectorAll('h1')]\n  .map(e=>e.innerText).join(\"\\n- \"))"
      },
      "date": 1702487713417
    },
    {
      "id": "f141b3d7277e31ff",
      "type": "move",
      "order": [
        "f759973b5c9f1bf7",
        "8cf52e35ed4e879d",
        "36ca7c96ba399d2b",
        "f141b3d7277e31ff",
        "c050ec9a97c5e6d9",
        "323546c582265116",
        "d122eeee87be1bcf"
      ],
      "date": 1702487728102
    },
    {
      "type": "add",
      "id": "883b1d504c9f6b68",
      "item": {
        "type": "paragraph",
        "id": "883b1d504c9f6b68",
        "text": "1987: Perl 1 is released. Perl embraces complexity like no previous language. Larry uses yacc and LALR very aggressively -- to my knowledge more aggressively than anyone before or since."
      },
      "after": "36ca7c96ba399d2b",
      "date": 1702522986724
    },
    {
      "type": "add",
      "id": "a7eb2073e73b9470",
      "item": {
        "type": "paragraph",
        "id": "a7eb2073e73b9470",
        "text": "As it is usually used, PEG is the nitroglycerin of LL parsing -- slightly more powerful than LL(1), but too dangerous to be worth it."
      },
      "after": "883b1d504c9f6b68",
      "date": 1702523158511
    },
    {
      "type": "edit",
      "id": "a7eb2073e73b9470",
      "item": {
        "type": "paragraph",
        "id": "a7eb2073e73b9470",
        "text": "2004: PEG. As it is usually used, PEG is the nitroglycerin of LL parsing -- slightly more powerful than LL(1), but too dangerous to be worth it."
      },
      "date": 1702523179379
    },
    {
      "item": {
        "type": "factory",
        "id": "378048bad0e235a8"
      },
      "id": "378048bad0e235a8",
      "type": "add",
      "after": "d122eeee87be1bcf",
      "date": 1702523203081
    },
    {
      "type": "edit",
      "id": "378048bad0e235a8",
      "item": {
        "type": "pagefold",
        "id": "378048bad0e235a8",
        "text": "quotes"
      },
      "date": 1702523212539
    },
    {
      "id": "378048bad0e235a8",
      "type": "move",
      "order": [
        "f759973b5c9f1bf7",
        "8cf52e35ed4e879d",
        "36ca7c96ba399d2b",
        "378048bad0e235a8",
        "883b1d504c9f6b68",
        "a7eb2073e73b9470",
        "f141b3d7277e31ff",
        "c050ec9a97c5e6d9",
        "323546c582265116",
        "d122eeee87be1bcf"
      ],
      "date": 1702523220864
    },
    {
      "id": "323546c582265116",
      "type": "move",
      "order": [
        "f759973b5c9f1bf7",
        "8cf52e35ed4e879d",
        "36ca7c96ba399d2b",
        "378048bad0e235a8",
        "883b1d504c9f6b68",
        "a7eb2073e73b9470",
        "323546c582265116",
        "f141b3d7277e31ff",
        "c050ec9a97c5e6d9",
        "d122eeee87be1bcf"
      ],
      "date": 1702523238345
    },
    {
      "id": "f141b3d7277e31ff",
      "type": "move",
      "order": [
        "f759973b5c9f1bf7",
        "8cf52e35ed4e879d",
        "36ca7c96ba399d2b",
        "378048bad0e235a8",
        "883b1d504c9f6b68",
        "a7eb2073e73b9470",
        "323546c582265116",
        "c050ec9a97c5e6d9",
        "f141b3d7277e31ff",
        "d122eeee87be1bcf"
      ],
      "date": 1702523247263
    },
    {
      "type": "fork",
      "site": "found.ward.fed.wiki",
      "date": 1702554685764
    }
  ]
}