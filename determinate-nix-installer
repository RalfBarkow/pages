{
  "title": "Determinate Nix Installer",
  "story": [
    {
      "type": "paragraph",
      "id": "42180cd31ba5950a",
      "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes and the unified CLI enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition. [https://discourse.nixos.org/t/introducing-the-determinate-nix-installer/25848 discourse] [https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
    },
    {
      "type": "paragraph",
      "id": "d96d04ed2d48999f",
      "text": "Nix flakes [https://zero-to-nix.com/concepts/flakes page]"
    },
    {
      "type": "paragraph",
      "id": "bdc5906aa7cfa2d5",
      "text": "The unified CLI [https://zero-to-nix.com/concepts/nix#unified-cli page]"
    },
    {
      "type": "paragraph",
      "id": "a9a2b5436d618de8",
      "text": "The Determinate Nix Installer also stores an installation receipt (for uninstalling) at /nix/receipt.json and a copy of the install binary at /nix/nix-installer."
    },
    {
      "type": "paragraph",
      "id": "82a37addd414b84d",
      "text": "You can give it a try by running the following in a terminal:"
    },
    {
      "type": "code",
      "id": "32d424059122b292",
      "text": "curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install"
    },
    {
      "type": "code",
      "id": "a21658f5c70547c4",
      "text": "info: downloading installer https://install.determinate.systems/nix/tag/v0.13.1/nix-installer-x86_64-darwin\n`nix-installer` needs to run as `root`, attempting to escalate now via `sudo`...\nPassword:\nNix install plan (v0.13.1)\nPlanner: macos (with default settings)\n\nPlanned actions:\n* Create an encrypted APFS volume `Nix Store` for Nix on `disk1` and add it to `/etc/fstab` mounting on `/nix`\n* Fetch `https://releases.nixos.org/nix/nix-2.18.1/nix-2.18.1-x86_64-darwin.tar.xz` to `/nix/temp-install-dir`\n* Create a directory tree in `/nix`\n* Move the downloaded Nix into `/nix`\n* Create build users (UID 300-332) and group (GID 30000)\n* Configure Time Machine exclusions\n* Setup the default Nix profile\n* Place the Nix configuration in `/etc/nix/nix.conf`\n* Configure the shell profiles\n* Configure Nix daemon related settings with launchctl\n* Remove directory `/nix/temp-install-dir`\n\n\nProceed? ([Y]es/[n]o/[e]xplain):"
    },
    {
      "type": "code",
      "id": "caa3ce09a9bab75e",
      "text": " INFO Step: Create an encrypted APFS volume `Nix Store` for Nix on `disk1` and add it to `/etc/fstab` mounting on `/nix`\n INFO Step: Provision Nix\n INFO Step: Create build users (UID 300-332) and group (GID 30000)\n INFO Step: Configure Time Machine exclusions\n INFO Step: Configure Nix\n INFO Step: Configure Nix daemon related settings with launchctl\n INFO Step: Remove directory `/nix/temp-install-dir`\nNix was installed successfully!\nTo get started using Nix, open a new shell or run `. /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh`"
    },
    {
      "type": "pagefold",
      "id": "35bb05587aba952f",
      "text": "~"
    },
    {
      "type": "code",
      "id": "d9673728673c1c7c",
      "text": "Error:\n   0: Planner error\n   1: Error executing action\n   2: Action `encrypt_apfs_volume` errored\n   3: The keychain has an existing password for a non-existing \"Nix Store\" volume on disk `disk1`, consider removing the password with `sudo security delete-generic-password  -a \"Nix Store\" -s \"Nix Store\" -l \"disk1 encryption password\" -D \"Encrypted volume password\"`. Note that it's possible to have several passwords stored, so you may need to run this command several times until receiving the message `The specified item could not be found in the keychain."
    },
    {
      "type": "code",
      "id": "ae5231d01310e278",
      "text": "sudo security delete-generic-password  -a \"Nix Store\" -s \"Nix Store\" -l \"disk1 encryption password\" -D \"Encrypted volume password\""
    },
    {
      "type": "paragraph",
      "id": "82d70a4be8687f62",
      "text": "To get started using Nix, open a new shell or run "
    },
    {
      "type": "code",
      "id": "6fc722b08360a958",
      "text": ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
    },
    {
      "type": "code",
      "id": "02dd80690d17e292",
      "text": "nix --version\nnix (Nix) 2.18.1"
    },
    {
      "type": "code",
      "id": "520bde6b7299e9a6",
      "text": "/nix/nix-installer uninstall\n`nix-installer` needs to run as `root`, attempting to escalate now via `sudo`...\nPassword:\n`nix-darwin` installation detected, it must be removed before uninstalling Nix. Please refer to https://github.com/LnL7/nix-darwin#uninstalling for instructions how to uninstall `nix-darwin`."
    },
    {
      "type": "reference",
      "id": "92bc48316d28a97b",
      "site": "wiki.ralfbarkow.ch",
      "slug": "nix-darwin",
      "title": "nix-darwin",
      "text": "Nix modules for darwin, /etc/nixos/configuration.nix for macOS. [https://daiderd.com/nix-darwin/ page]"
    },
    {
      "type": "paragraph",
      "id": "91087c49108fca1a",
      "text": "nix-darwin#uninstalling [https://github.com/LnL7/nix-darwin#uninstalling  page]"
    },
    {
      "type": "code",
      "id": "3258b96d23ec643e",
      "text": "nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A uninstaller\n"
    },
    {
      "type": "code",
      "id": "ae0b4121d9113946",
      "text": "./result/bin/darwin-uninstaller"
    },
    {
      "type": "paragraph",
      "id": "9e00722a5909882f",
      "text": "Can't uninstall on darwin, fail to remove nix-darwin [https://github.com/DeterminateSystems/nix-installer/issues/607 github]"
    },
    {
      "type": "paragraph",
      "id": "1cc9e9e2ca4bc3fb",
      "text": "Nix modules for darwin (re-)installed on mbp-bs."
    },
    {
      "type": "code",
      "id": "a3b85e0f270e37d8",
      "text": "nix --version\nnix (Nix) 2.17.0"
    },
    {
      "type": "pagefold",
      "id": "97646bdc3f3f1df2",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "13943df3d4c252cf",
      "site": "wiki.ralfbarkow.ch",
      "slug": "binary-cache",
      "title": "Binary Cache",
      "text": "You will want to use the nix-community binary cache. [https://github.com/nix-community/emacs-overlay#binary-cache github] [https://app.cachix.org/cache/nix-community cachix]"
    },
    {
      "type": "code",
      "id": "f74d89f4cd56b39e",
      "text": "error: unable to download 'https://cache.nixos.org/37xgmkxdp1qmzfq0xj3s4bchsdg616hg.narinfo': Problem with the SSL CA cert (path? access rights?) (77)"
    },
    {
      "type": "paragraph",
      "id": "204fc00467ea7e9a",
      "text": "Multi-user installation on OSX - SSL cert problem for user, not for root [https://github.com/NixOS/nix/issues/2899# github] [https://nixos.org/manual/nix/stable/#sec-nix-ssl-cert-file-with-nix-daemon-and-macos page]"
    },
    {
      "type": "paragraph",
      "id": "7a98d028591b59ce",
      "text": "SSL CA cert error on MacOS [https://discourse.nixos.org/t/ssl-ca-cert-error-on-macos/31171 discourse]"
    },
    {
      "type": "code",
      "id": "715efb8422c126a7",
      "text": "sudo launchctl setenv NIX_SSL_CERT_FILE $NIX_SSL_CERT_FILE"
    },
    {
      "type": "paragraph",
      "id": "a83eee3748c7b24a",
      "text": "Could not set environment: 150: Operation not permitted while System Integrity Protection is engaged"
    },
    {
      "type": "paragraph",
      "id": "129382da1f17a889",
      "text": "How to Disable System Integrity Protection on a Mac (and Why You Shouldn't) [https://www.howtogeek.com/230424/how-to-disable-system-integrity-protection-on-a-mac-and-why-you-shouldnt/ page]"
    },
    {
      "type": "code",
      "id": "ad3aabf366026ec5",
      "text": "csrutil"
    },
    {
      "type": "markdown",
      "id": "93fa3f7d2bdb45da",
      "text": "- [x] csrutil enable"
    },
    {
      "type": "code",
      "id": "bd6d0e03f51ba60f",
      "text": "nix-shell -p nix-info --run \"nix-info -m\"                                                                       /nix/var/nix/profiles/per-user\nwarning: Nix search path entry '/nix/var/nix/profiles/per-user/root/channels' does not exist, ignoring\n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.17.0`\n - nixpkgs: `/Users/rgb_admin/.nix-defexpr/channels/nixpkgs`"
    },
    {
      "type": "paragraph",
      "id": "9938a4ed31a66275",
      "text": "So we got a working nix-darwin on mbp-bs. We uninstalled Nix and reinstalled it with Determinate Nix Installer."
    },
    {
      "type": "paragraph",
      "id": "a2fb20b4952dd476",
      "text": "Since uninstalling with Determinate Nix did not work – it detected an installation of nix-darwin even after uninstalling it – we reinstalled nix-darwin. So unfortunately we could not test the uninstall function of Determinate Nix Installer, but we have a working nix-darwin."
    },
    {
      "type": "paragraph",
      "id": "fedf56e55a524179",
      "text": "Note: Configured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf @mbp-bs"
    },
    {
      "type": "paragraph",
      "id": "950de8dfa6d15d19",
      "text": "@mbp-rgb  multi-user installation [https://nixos.org/download#nix-install-macos page] without using the Determinate Nix Installer"
    },
    {
      "type": "code",
      "id": "987e1c33555628b7",
      "text": "nix-shell -p nix-info --run \"nix-info -m\"                                                 \n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.8.1`\n - channels(rgb_admin): `\"darwin, home-manager\"`\n - channels(rgb): `\"\"`\n - channels(root): `\"nixpkgs-22.05pre379834.41cc1d5d958, darwin, home-manager\"`\n - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixpkgs`"
    },
    {
      "type": "code",
      "id": "02022103ff34a48c",
      "text": "nix --version                                                                             \nnix (Nix) 2.8.1"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Determinate Nix Installer",
        "story": []
      },
      "date": 1697200132335
    },
    {
      "id": "42180cd31ba5950a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "42180cd31ba5950a",
        "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes 2 and the unified CLI 32 enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition."
      },
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200138019
    },
    {
      "id": "03ba9c4b2b62fd2f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "03ba9c4b2b62fd2f",
        "text": "The [[Determinate Nix Installer]] [https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
      },
      "after": "42180cd31ba5950a",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200170419
    },
    {
      "type": "remove",
      "id": "03ba9c4b2b62fd2f",
      "date": 1697200176404
    },
    {
      "type": "edit",
      "id": "42180cd31ba5950a",
      "item": {
        "type": "paragraph",
        "id": "42180cd31ba5950a",
        "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes 2 and the unified CLI 32 enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition. [https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
      },
      "date": 1697200177375
    },
    {
      "type": "edit",
      "id": "42180cd31ba5950a",
      "item": {
        "type": "paragraph",
        "id": "42180cd31ba5950a",
        "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes 2 and the unified CLI 32 enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition. [https://discourse.nixos.org/t/introducing-the-determinate-nix-installer/25848 discourse][https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
      },
      "date": 1697200196811
    },
    {
      "type": "edit",
      "id": "42180cd31ba5950a",
      "item": {
        "type": "paragraph",
        "id": "42180cd31ba5950a",
        "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes 2 and the unified CLI 32 enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition. [https://discourse.nixos.org/t/introducing-the-determinate-nix-installer/25848 discourse] [https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
      },
      "date": 1697200203181
    },
    {
      "item": {
        "type": "factory",
        "id": "a9a2b5436d618de8"
      },
      "id": "a9a2b5436d618de8",
      "type": "add",
      "after": "42180cd31ba5950a",
      "date": 1697200223862
    },
    {
      "type": "edit",
      "id": "a9a2b5436d618de8",
      "item": {
        "type": "paragraph",
        "id": "a9a2b5436d618de8",
        "text": "The Determinate Nix Installer also stores an installation receipt (for uninstalling) at/nix/receipt.json and a copy of the install binary at /nix/nix-installer."
      },
      "date": 1697200225311
    },
    {
      "item": {
        "type": "factory",
        "id": "82a37addd414b84d"
      },
      "id": "82a37addd414b84d",
      "type": "add",
      "after": "a9a2b5436d618de8",
      "date": 1697200283313
    },
    {
      "type": "edit",
      "id": "82a37addd414b84d",
      "item": {
        "type": "paragraph",
        "id": "82a37addd414b84d",
        "text": "You can give it a try by running the following in a terminal:"
      },
      "date": 1697200285292
    },
    {
      "id": "32d424059122b292",
      "type": "add",
      "item": {
        "type": "code",
        "id": "32d424059122b292",
        "text": "curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install"
      },
      "after": "82a37addd414b84d",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200288096
    },
    {
      "id": "a21658f5c70547c4",
      "type": "add",
      "item": {
        "type": "code",
        "id": "a21658f5c70547c4",
        "text": "info: downloading installer https://install.determinate.systems/nix/tag/v0.13.1/nix-installer-x86_64-darwin\n`nix-installer` needs to run as `root`, attempting to escalate now via `sudo`...\nPassword:\nNix install plan (v0.13.1)\nPlanner: macos (with default settings)\n\nPlanned actions:\n* Create an encrypted APFS volume `Nix Store` for Nix on `disk1` and add it to `/etc/fstab` mounting on `/nix`\n* Fetch `https://releases.nixos.org/nix/nix-2.18.1/nix-2.18.1-x86_64-darwin.tar.xz` to `/nix/temp-install-dir`\n* Create a directory tree in `/nix`\n* Move the downloaded Nix into `/nix`\n* Create build users (UID 300-332) and group (GID 30000)\n* Configure Time Machine exclusions\n* Setup the default Nix profile\n* Place the Nix configuration in `/etc/nix/nix.conf`\n* Configure the shell profiles\n* Configure Nix daemon related settings with launchctl\n* Remove directory `/nix/temp-install-dir`\n\n\nProceed? ([Y]es/[n]o/[e]xplain):"
      },
      "after": "32d424059122b292",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200294984
    },
    {
      "id": "caa3ce09a9bab75e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "caa3ce09a9bab75e",
        "text": " INFO Step: Create an encrypted APFS volume `Nix Store` for Nix on `disk1` and add it to `/etc/fstab` mounting on `/nix`\n INFO Step: Provision Nix\n INFO Step: Create build users (UID 300-332) and group (GID 30000)\n INFO Step: Configure Time Machine exclusions\n INFO Step: Configure Nix\n INFO Step: Configure Nix daemon related settings with launchctl\n INFO Step: Remove directory `/nix/temp-install-dir`\nNix was installed successfully!\nTo get started using Nix, open a new shell or run `. /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh`"
      },
      "after": "a21658f5c70547c4",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200298939
    },
    {
      "id": "35bb05587aba952f",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "35bb05587aba952f",
        "text": "~"
      },
      "after": "caa3ce09a9bab75e",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200304829
    },
    {
      "id": "d9673728673c1c7c",
      "type": "add",
      "item": {
        "type": "code",
        "id": "d9673728673c1c7c",
        "text": "Error:\n   0: Planner error\n   1: Error executing action\n   2: Action `encrypt_apfs_volume` errored\n   3: The keychain has an existing password for a non-existing \"Nix Store\" volume on disk `disk1`, consider removing the password with `sudo security delete-generic-password  -a \"Nix Store\" -s \"Nix Store\" -l \"disk1 encryption password\" -D \"Encrypted volume password\"`. Note that it's possible to have several passwords stored, so you may need to run this command several times until receiving the message `The specified item could not be found in the keychain."
      },
      "after": "35bb05587aba952f",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200310136
    },
    {
      "id": "ae5231d01310e278",
      "type": "add",
      "item": {
        "type": "code",
        "id": "ae5231d01310e278",
        "text": "sudo security delete-generic-password  -a \"Nix Store\" -s \"Nix Store\" -l \"disk1 encryption password\" -D \"Encrypted volume password\""
      },
      "after": "d9673728673c1c7c",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200321323
    },
    {
      "id": "82d70a4be8687f62",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "82d70a4be8687f62",
        "text": "To get started using Nix, open a new shell or run "
      },
      "after": "ae5231d01310e278",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200339604
    },
    {
      "id": "6fc722b08360a958",
      "type": "add",
      "item": {
        "type": "code",
        "id": "6fc722b08360a958",
        "text": ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh"
      },
      "after": "82d70a4be8687f62",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200342586
    },
    {
      "id": "02dd80690d17e292",
      "type": "add",
      "item": {
        "type": "code",
        "id": "02dd80690d17e292",
        "text": "nix --version\nnix (Nix) 2.18.1"
      },
      "after": "6fc722b08360a958",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200345170
    },
    {
      "id": "d96d04ed2d48999f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d96d04ed2d48999f",
        "text": "Nix flakes [https://zero-to-nix.com/concepts/flakes page]"
      },
      "after": "02dd80690d17e292",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200350339
    },
    {
      "id": "520bde6b7299e9a6",
      "type": "add",
      "item": {
        "type": "code",
        "id": "520bde6b7299e9a6",
        "text": "/nix/nix-installer uninstall\n`nix-installer` needs to run as `root`, attempting to escalate now via `sudo`...\nPassword:\n`nix-darwin` installation detected, it must be removed before uninstalling Nix. Please refer to https://github.com/LnL7/nix-darwin#uninstalling for instructions how to uninstall `nix-darwin`."
      },
      "after": "d96d04ed2d48999f",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200355157
    },
    {
      "id": "91087c49108fca1a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "91087c49108fca1a",
        "text": "nix-darwin#uninstalling [https://github.com/LnL7/nix-darwin#uninstalling  page]"
      },
      "after": "520bde6b7299e9a6",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200359719
    },
    {
      "id": "3258b96d23ec643e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "3258b96d23ec643e",
        "text": "nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A uninstaller\n"
      },
      "after": "91087c49108fca1a",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200363605
    },
    {
      "id": "ae0b4121d9113946",
      "type": "add",
      "item": {
        "type": "code",
        "id": "ae0b4121d9113946",
        "text": "./result/bin/darwin-uninstaller"
      },
      "after": "3258b96d23ec643e",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200367943
    },
    {
      "id": "9e00722a5909882f",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9e00722a5909882f",
        "text": "Can't uninstall on darwin, fail to remove nix-darwin [https://github.com/DeterminateSystems/nix-installer/issues/607 github]"
      },
      "after": "ae0b4121d9113946",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200374279
    },
    {
      "id": "d96d04ed2d48999f",
      "type": "move",
      "order": [
        "42180cd31ba5950a",
        "d96d04ed2d48999f",
        "a9a2b5436d618de8",
        "82a37addd414b84d",
        "32d424059122b292",
        "a21658f5c70547c4",
        "caa3ce09a9bab75e",
        "35bb05587aba952f",
        "d9673728673c1c7c",
        "ae5231d01310e278",
        "82d70a4be8687f62",
        "6fc722b08360a958",
        "02dd80690d17e292",
        "520bde6b7299e9a6",
        "91087c49108fca1a",
        "3258b96d23ec643e",
        "ae0b4121d9113946",
        "9e00722a5909882f"
      ],
      "date": 1697200387657
    },
    {
      "id": "bdc5906aa7cfa2d5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "bdc5906aa7cfa2d5",
        "text": "The unified CLI [https://zero-to-nix.com/concepts/nix#unified-cli page]"
      },
      "after": "d96d04ed2d48999f",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200390848
    },
    {
      "item": {
        "type": "factory",
        "id": "c0f1782ba163a8f8"
      },
      "id": "c0f1782ba163a8f8",
      "type": "add",
      "after": "9e00722a5909882f",
      "date": 1697200422319
    },
    {
      "type": "remove",
      "id": "c0f1782ba163a8f8",
      "date": 1697200425860
    },
    {
      "item": {
        "type": "factory",
        "id": "97646bdc3f3f1df2"
      },
      "id": "97646bdc3f3f1df2",
      "type": "add",
      "after": "9e00722a5909882f",
      "date": 1697200426879
    },
    {
      "type": "edit",
      "id": "97646bdc3f3f1df2",
      "item": {
        "type": "pagefold",
        "id": "97646bdc3f3f1df2",
        "text": "~"
      },
      "date": 1697200429734
    },
    {
      "id": "f74d89f4cd56b39e",
      "type": "add",
      "item": {
        "type": "code",
        "id": "f74d89f4cd56b39e",
        "text": "error: unable to download 'https://cache.nixos.org/37xgmkxdp1qmzfq0xj3s4bchsdg616hg.narinfo': Problem with the SSL CA cert (path? access rights?) (77)"
      },
      "after": "97646bdc3f3f1df2",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200433171
    },
    {
      "id": "204fc00467ea7e9a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "204fc00467ea7e9a",
        "text": "Multi-user installation on OSX - SSL cert problem for user, not for root [https://github.com/NixOS/nix/issues/2899# github] [https://nixos.org/manual/nix/stable/#sec-nix-ssl-cert-file-with-nix-daemon-and-macos page]"
      },
      "after": "f74d89f4cd56b39e",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200437176
    },
    {
      "id": "7a98d028591b59ce",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7a98d028591b59ce",
        "text": "SSL CA cert error on MacOS [https://discourse.nixos.org/t/ssl-ca-cert-error-on-macos/31171 discourse]"
      },
      "after": "204fc00467ea7e9a",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200438851
    },
    {
      "id": "715efb8422c126a7",
      "type": "add",
      "item": {
        "type": "code",
        "id": "715efb8422c126a7",
        "text": "sudo launchctl setenv NIX_SSL_CERT_FILE $NIX_SSL_CERT_FILE"
      },
      "after": "7a98d028591b59ce",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200442671
    },
    {
      "id": "a83eee3748c7b24a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a83eee3748c7b24a",
        "text": "Could not set environment: 150: Operation not permitted while System Integrity Protection is engaged"
      },
      "after": "715efb8422c126a7",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200447887
    },
    {
      "id": "129382da1f17a889",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "129382da1f17a889",
        "text": "How to Disable System Integrity Protection on a Mac (and Why You Shouldn't) [https://www.howtogeek.com/230424/how-to-disable-system-integrity-protection-on-a-mac-and-why-you-shouldnt/ page]"
      },
      "after": "a83eee3748c7b24a",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200453433
    },
    {
      "id": "92bc48316d28a97b",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "92bc48316d28a97b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "nix-darwin",
        "title": "nix-darwin",
        "text": "Nix modules for darwin, /etc/nixos/configuration.nix for macOS. [https://daiderd.com/nix-darwin/ page]"
      },
      "after": "520bde6b7299e9a6",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200460825
    },
    {
      "id": "1cc9e9e2ca4bc3fb",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1cc9e9e2ca4bc3fb",
        "text": "Nix modules for darwin installed on mbp-bs."
      },
      "after": "9e00722a5909882f",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200494386
    },
    {
      "id": "a3b85e0f270e37d8",
      "type": "add",
      "item": {
        "type": "code",
        "id": "a3b85e0f270e37d8",
        "text": "nix --version"
      },
      "after": "1cc9e9e2ca4bc3fb",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200497613
    },
    {
      "id": "7f344eec951c9b36",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7f344eec951c9b36",
        "text": "nix (Nix) 2.17.0"
      },
      "after": "a3b85e0f270e37d8",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200501301
    },
    {
      "id": "ad3aabf366026ec5",
      "type": "add",
      "item": {
        "type": "code",
        "id": "ad3aabf366026ec5",
        "text": "csrutil"
      },
      "after": "129382da1f17a889",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200507027
    },
    {
      "id": "bd6d0e03f51ba60f",
      "type": "add",
      "item": {
        "type": "code",
        "id": "bd6d0e03f51ba60f",
        "text": "nix-shell -p nix-info --run \"nix-info -m\"\n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.18.1`\n - nixpkgs: `/Users/rgb_admin/.nix-defexpr/channels/nixpkgs`"
      },
      "after": "ad3aabf366026ec5",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200513671
    },
    {
      "id": "9938a4ed31a66275",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9938a4ed31a66275",
        "text": "So we got a working nix-darwin on mbp-bs. We uninstalled Nix and reinstalled it with Determinate Nix Installer."
      },
      "after": "bd6d0e03f51ba60f",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200521308
    },
    {
      "id": "a2fb20b4952dd476",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a2fb20b4952dd476",
        "text": "Since uninstalling with Determinate Nix did not work – it detected an installation of nix-darwin even after uninstalling it – we reinstalled nix-darwin. So unfortunately we could not test the uninstall function of Determinate Nix Installer, but we have a working nix-darwin."
      },
      "after": "9938a4ed31a66275",
      "attribution": {
        "page": "2023-10-13"
      },
      "date": 1697200543584
    },
    {
      "item": {
        "type": "factory",
        "id": "93fa3f7d2bdb45da"
      },
      "id": "93fa3f7d2bdb45da",
      "type": "add",
      "after": "a2fb20b4952dd476",
      "date": 1697200572552
    },
    {
      "id": "93fa3f7d2bdb45da",
      "type": "move",
      "order": [
        "42180cd31ba5950a",
        "d96d04ed2d48999f",
        "bdc5906aa7cfa2d5",
        "a9a2b5436d618de8",
        "82a37addd414b84d",
        "32d424059122b292",
        "a21658f5c70547c4",
        "caa3ce09a9bab75e",
        "35bb05587aba952f",
        "d9673728673c1c7c",
        "ae5231d01310e278",
        "82d70a4be8687f62",
        "6fc722b08360a958",
        "02dd80690d17e292",
        "520bde6b7299e9a6",
        "92bc48316d28a97b",
        "91087c49108fca1a",
        "3258b96d23ec643e",
        "ae0b4121d9113946",
        "9e00722a5909882f",
        "1cc9e9e2ca4bc3fb",
        "a3b85e0f270e37d8",
        "7f344eec951c9b36",
        "97646bdc3f3f1df2",
        "f74d89f4cd56b39e",
        "204fc00467ea7e9a",
        "7a98d028591b59ce",
        "715efb8422c126a7",
        "a83eee3748c7b24a",
        "129382da1f17a889",
        "ad3aabf366026ec5",
        "93fa3f7d2bdb45da",
        "bd6d0e03f51ba60f",
        "9938a4ed31a66275",
        "a2fb20b4952dd476"
      ],
      "date": 1697200574577
    },
    {
      "type": "edit",
      "id": "93fa3f7d2bdb45da",
      "item": {
        "type": "markdown",
        "id": "93fa3f7d2bdb45da",
        "text": "- [ ] csrutil enable"
      },
      "date": 1697200580522
    },
    {
      "item": {
        "type": "factory",
        "id": "950de8dfa6d15d19"
      },
      "id": "950de8dfa6d15d19",
      "type": "add",
      "after": "a2fb20b4952dd476",
      "date": 1697206299185
    },
    {
      "type": "edit",
      "id": "950de8dfa6d15d19",
      "item": {
        "type": "paragraph",
        "id": "950de8dfa6d15d19",
        "text": "@mbp-rgb"
      },
      "date": 1697206307850
    },
    {
      "item": {
        "type": "factory",
        "id": "987e1c33555628b7"
      },
      "id": "987e1c33555628b7",
      "type": "add",
      "after": "950de8dfa6d15d19",
      "date": 1697206311296
    },
    {
      "type": "edit",
      "id": "987e1c33555628b7",
      "item": {
        "type": "code",
        "id": "987e1c33555628b7",
        "text": "nix-shell -p nix-info --run \"nix-info -m\"                                                 ~/workspace\n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.8.1`\n - channels(rgb_admin): `\"darwin, home-manager\"`\n - channels(rgb): `\"\"`\n - channels(root): `\"nixpkgs-22.05pre379834.41cc1d5d958, darwin, home-manager\"`\n - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixpkgs`"
      },
      "date": 1697206314338
    },
    {
      "type": "edit",
      "id": "987e1c33555628b7",
      "item": {
        "type": "code",
        "id": "987e1c33555628b7",
        "text": "nix-shell -p nix-info --run \"nix-info -m\"                                                 \n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.8.1`\n - channels(rgb_admin): `\"darwin, home-manager\"`\n - channels(rgb): `\"\"`\n - channels(root): `\"nixpkgs-22.05pre379834.41cc1d5d958, darwin, home-manager\"`\n - nixpkgs: `/nix/var/nix/profiles/per-user/root/channels/nixpkgs`"
      },
      "date": 1697206320224
    },
    {
      "item": {
        "type": "factory",
        "id": "02022103ff34a48c"
      },
      "id": "02022103ff34a48c",
      "type": "add",
      "after": "987e1c33555628b7",
      "date": 1697206395915
    },
    {
      "type": "edit",
      "id": "02022103ff34a48c",
      "item": {
        "type": "code",
        "id": "02022103ff34a48c",
        "text": "nix --version                                                                             \nnix (Nix) 2.8.1"
      },
      "date": 1697206400734
    },
    {
      "type": "remove",
      "id": "7f344eec951c9b36",
      "date": 1697206410428
    },
    {
      "type": "edit",
      "id": "a3b85e0f270e37d8",
      "item": {
        "type": "code",
        "id": "a3b85e0f270e37d8",
        "text": "nix --version\nnix (Nix) 2.17.0"
      },
      "date": 1697206413599
    },
    {
      "type": "edit",
      "id": "bd6d0e03f51ba60f",
      "item": {
        "type": "code",
        "id": "bd6d0e03f51ba60f",
        "text": "nix-shell -p nix-info --run \"nix-info -m\"                                                                       /nix/var/nix/profiles/per-user\nwarning: Nix search path entry '/nix/var/nix/profiles/per-user/root/channels' does not exist, ignoring\n - system: `\"x86_64-darwin\"`\n - host os: `Darwin 23.0.0, macOS 10.16`\n - multi-user?: `yes`\n - sandbox: `no`\n - version: `nix-env (Nix) 2.17.0`\n - nixpkgs: `/Users/rgb_admin/.nix-defexpr/channels/nixpkgs`"
      },
      "date": 1697206605177
    },
    {
      "type": "edit",
      "id": "42180cd31ba5950a",
      "item": {
        "type": "paragraph",
        "id": "42180cd31ba5950a",
        "text": "The opinionated part is that the Determinate Nix Installer installs Nix with Nix flakes and the unified CLI enabled in nix.conf. Although flakes and the unified CLI remain experimental features of Nix, we’re confident that new users should adopt them now and that more seasoned Nix users should start making the transition. [https://discourse.nixos.org/t/introducing-the-determinate-nix-installer/25848 discourse] [https://zero-to-nix.com/concepts/nix-installer page] [https://github.com/DeterminateSystems/nix-installer github]"
      },
      "date": 1697206694641
    },
    {
      "type": "edit",
      "id": "1cc9e9e2ca4bc3fb",
      "item": {
        "type": "paragraph",
        "id": "1cc9e9e2ca4bc3fb",
        "text": "Nix modules for darwin (re-)installed on mbp-bs."
      },
      "date": 1697206931076
    },
    {
      "item": {
        "type": "factory",
        "id": "13943df3d4c252cf"
      },
      "id": "13943df3d4c252cf",
      "type": "add",
      "after": "02022103ff34a48c",
      "date": 1697207406909
    },
    {
      "id": "13943df3d4c252cf",
      "type": "move",
      "order": [
        "42180cd31ba5950a",
        "d96d04ed2d48999f",
        "bdc5906aa7cfa2d5",
        "a9a2b5436d618de8",
        "82a37addd414b84d",
        "32d424059122b292",
        "a21658f5c70547c4",
        "caa3ce09a9bab75e",
        "35bb05587aba952f",
        "d9673728673c1c7c",
        "ae5231d01310e278",
        "82d70a4be8687f62",
        "6fc722b08360a958",
        "02dd80690d17e292",
        "520bde6b7299e9a6",
        "92bc48316d28a97b",
        "91087c49108fca1a",
        "3258b96d23ec643e",
        "ae0b4121d9113946",
        "9e00722a5909882f",
        "1cc9e9e2ca4bc3fb",
        "a3b85e0f270e37d8",
        "97646bdc3f3f1df2",
        "13943df3d4c252cf",
        "f74d89f4cd56b39e",
        "204fc00467ea7e9a",
        "7a98d028591b59ce",
        "715efb8422c126a7",
        "a83eee3748c7b24a",
        "129382da1f17a889",
        "ad3aabf366026ec5",
        "93fa3f7d2bdb45da",
        "bd6d0e03f51ba60f",
        "9938a4ed31a66275",
        "a2fb20b4952dd476",
        "950de8dfa6d15d19",
        "987e1c33555628b7",
        "02022103ff34a48c"
      ],
      "date": 1697207425670
    },
    {
      "type": "edit",
      "id": "13943df3d4c252cf",
      "item": {
        "type": "reference",
        "id": "13943df3d4c252cf",
        "site": "wiki.ralfbarkow.ch",
        "slug": "binary-cache",
        "title": "Binary Cache",
        "text": "You will want to use the nix-community binary cache. [https://github.com/nix-community/emacs-overlay#binary-cache github] [https://app.cachix.org/cache/nix-community cachix]"
      },
      "date": 1697207429022
    },
    {
      "type": "add",
      "id": "fedf56e55a524179",
      "item": {
        "type": "paragraph",
        "id": "fedf56e55a524179",
        "text": "Note: Configured https://nix-community.cachix.org binary cache in /etc/nix/nix.conf @mbp-bs"
      },
      "after": "a2fb20b4952dd476",
      "date": 1697207505356
    },
    {
      "type": "edit",
      "id": "950de8dfa6d15d19",
      "item": {
        "type": "paragraph",
        "id": "950de8dfa6d15d19",
        "text": "@mbp-rgb  multi-user installation: "
      },
      "date": 1697207592231
    },
    {
      "type": "edit",
      "id": "950de8dfa6d15d19",
      "item": {
        "type": "paragraph",
        "id": "950de8dfa6d15d19",
        "text": "@mbp-rgb  multi-user installation [https://nixos.org/download#nix-install-macos page] not using the"
      },
      "date": 1697207616499
    },
    {
      "type": "edit",
      "id": "950de8dfa6d15d19",
      "item": {
        "type": "paragraph",
        "id": "950de8dfa6d15d19",
        "text": "@mbp-rgb  multi-user installation [https://nixos.org/download#nix-install-macos page] not using the Determinate Nix Installer"
      },
      "date": 1697207633170
    },
    {
      "type": "edit",
      "id": "950de8dfa6d15d19",
      "item": {
        "type": "paragraph",
        "id": "950de8dfa6d15d19",
        "text": "@mbp-rgb  multi-user installation [https://nixos.org/download#nix-install-macos page] without using the Determinate Nix Installer"
      },
      "date": 1697207660789
    },
    {
      "type": "edit",
      "id": "a9a2b5436d618de8",
      "item": {
        "type": "paragraph",
        "id": "a9a2b5436d618de8",
        "text": "The Determinate Nix Installer also stores an installation receipt (for uninstalling) at /nix/receipt.json and a copy of the install binary at /nix/nix-installer."
      },
      "date": 1697207765074
    },
    {
      "type": "edit",
      "id": "93fa3f7d2bdb45da",
      "item": {
        "type": "markdown",
        "id": "93fa3f7d2bdb45da",
        "text": "- [x] csrutil enable"
      },
      "date": 1697213020243
    }
  ]
}