{
  "title": "Sharing Graphs",
  "story": [
    {
      "type": "markdown",
      "id": "58ccc22f11293fad",
      "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi] (Stefano Guerrini), [https://dl.acm.org/doi/10.1145/96709.96711 doi] (John Lamping)\n"
    },
    {
      "type": "markdown",
      "id": "f96e36c28d031440",
      "text": "Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we define a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the *sharing graph machine*, that seems to be the most natural low-level computational model for functional languages. Moreover, Lévy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, confluence, and unique normal form) and algebraic properties definable via the techniques of Geometry of Interaction."
    },
    {
      "type": "pagefold",
      "id": "6a9a80f14fd0d339",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3eb2776564b8eafb",
      "text": "\nGUERRINI, Stefano, 1999. A general theory of sharing graphs. Theoretical Computer Science. 28 September 1999. Vol. 227, no. 1, p. 99–151. DOI 10.1016/S0304-3975(99)00050-X. \n"
    },
    {
      "type": "paragraph",
      "id": "91621b7312ee200c",
      "text": "LAMPING, John. An algorithm for optimal lambda calculus reduction. In: Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages. 1989. p. 16-30."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Sharing Graphs",
        "story": []
      },
      "date": 1663279662330
    },
    {
      "item": {
        "type": "factory",
        "id": "58ccc22f11293fad"
      },
      "id": "58ccc22f11293fad",
      "type": "add",
      "date": 1663279675948
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "paragraph",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we de\fne a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the sharing graph machine, that seems to be the most natural low-level computational model for functional languages. Moreover, L\u0013 evy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, con\nuence, and unique normal form) and algebraic properties de\fnable via the techniques of Geometry of Interaction."
      },
      "date": 1663279677546
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "paragraph",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we define a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the sharing graph machine, that seems to be the most natural low-level computational model for functional languages. Moreover, Lévy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, confluence, and unique normal form) and algebraic properties definable via the techniques of Geometry of Interaction."
      },
      "date": 1663279719636
    },
    {
      "item": {
        "type": "factory",
        "id": "6a9a80f14fd0d339"
      },
      "id": "6a9a80f14fd0d339",
      "type": "add",
      "after": "58ccc22f11293fad",
      "date": 1663279760740
    },
    {
      "type": "edit",
      "id": "6a9a80f14fd0d339",
      "item": {
        "type": "pagefold",
        "id": "6a9a80f14fd0d339",
        "text": "~"
      },
      "date": 1663279764311
    },
    {
      "item": {
        "type": "factory",
        "id": "3eb2776564b8eafb"
      },
      "id": "3eb2776564b8eafb",
      "type": "add",
      "after": "6a9a80f14fd0d339",
      "date": 1663279766131
    },
    {
      "type": "edit",
      "id": "3eb2776564b8eafb",
      "item": {
        "type": "paragraph",
        "id": "3eb2776564b8eafb",
        "text": "\nGUERRINI, Stefano, 1999. A general theory of sharing graphs. Theoretical Computer Science. 28 September 1999. Vol. 227, no. 1, p. 99–151. DOI 10.1016/S0304-3975(99)00050-X. \n"
      },
      "date": 1663279775384
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "paragraph",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we define a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the *sharing graph machine*, that seems to be the most natural low-level computational model for functional languages. Moreover, Lévy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, confluence, and unique normal form) and algebraic properties definable via the techniques of Geometry of Interaction."
      },
      "date": 1663279871978
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we define a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the *sharing graph machine*, that seems to be the most natural low-level computational model for functional languages. Moreover, Lévy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, confluence, and unique normal form) and algebraic properties definable via the techniques of Geometry of Interaction."
      },
      "date": 1663279875516
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi]\n"
      },
      "date": 1663280089698
    },
    {
      "type": "add",
      "id": "f96e36c28d031440",
      "item": {
        "type": "markdown",
        "id": "f96e36c28d031440",
        "text": "Gonthier's reformulation of Lamping's technique inside Geometry of Interaction and Asperti and Laneve's work on Interaction Systems have shown that sharing graphs implement a wide class of calculi. We give a semantical characterization of sharing graphs independent of the calculus to be implemented. By means of an algebraic interpretation of sharing graphs, we define a subclass of them, the so-called proper sharing graphs, on which the usual notion of graph unfolding gives a lower semi-lattice. The least-shared-instance of a proper sharing graph is its maximal proper unfolding, that is, the unique proper unshared graph that the unfolding partial order associates to it. Exploiting a simulation property between the reductions of a proper sharing graph and the reductions of its least-shared-instance, we prove that the read-back of a proper sharing graph can be computed via an unfolding or read-back reduction. Proper sharing graphs implement in a distributed and local way any graph calculus with a global reduction in the style of the beta-rule of lambda-calculus. In fact, correctness of the sharing implementation requires the so-called box nesting property only, or equivalently, it is proved under the only assumption that two redexes never partially overlap. Thus, sharing graphs constitute an abstract machine, say the *sharing graph machine*, that seems to be the most natural low-level computational model for functional languages. Moreover, Lévy's optimal reductions correspond to lazy reductions of that sharing machine. We stress on the proof strategy followed in the paper: it rests on an amazing interplay between standard rewriting system properties (strong normalization, confluence, and unique normal form) and algebraic properties definable via the techniques of Geometry of Interaction."
      },
      "after": "58ccc22f11293fad",
      "date": 1663280090025
    },
    {
      "item": {
        "type": "factory",
        "id": "91621b7312ee200c"
      },
      "id": "91621b7312ee200c",
      "type": "add",
      "after": "3eb2776564b8eafb",
      "date": 1663280164117
    },
    {
      "type": "edit",
      "id": "91621b7312ee200c",
      "item": {
        "type": "paragraph",
        "id": "91621b7312ee200c",
        "text": "LAMPING, John. An algorithm for optimal lambda calculus reduction. In: Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages. 1989. S. 16-30."
      },
      "date": 1663280165684
    },
    {
      "type": "edit",
      "id": "91621b7312ee200c",
      "item": {
        "type": "paragraph",
        "id": "91621b7312ee200c",
        "text": "LAMPING, John. An algorithm for optimal lambda calculus reduction. In: Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages. 1989. p. 16-30."
      },
      "date": 1663280175344
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi], [https://dl.acm.org/doi/10.1145/96709.96711]\n"
      },
      "date": 1663280953342
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi], [https://dl.acm.org/doi/10.1145/96709.96711 doi]\n"
      },
      "date": 1663280960966
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi] (Stefano Guerrini), [https://dl.acm.org/doi/10.1145/96709.96711 doi]\n"
      },
      "date": 1663280991006
    },
    {
      "type": "edit",
      "id": "58ccc22f11293fad",
      "item": {
        "type": "markdown",
        "id": "58ccc22f11293fad",
        "text": "Sharing graphs are the structures introduced by Lamping for the implementation of optimal reductions of lambda-calculus. [https://doi.org/10.1016/S0304-3975(99)00050-X doi] (Stefano Guerrini), [https://dl.acm.org/doi/10.1145/96709.96711 doi] (John Lamping)\n"
      },
      "date": 1663281008999
    }
  ]
}