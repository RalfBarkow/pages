{
  "title": "Compromise",
  "story": [
    {
      "type": "paragraph",
      "id": "e78992012cb3657a",
      "text": "is a [[JavaScript]] library that can parse, transform, and help use text. [https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
    },
    {
      "type": "paragraph",
      "id": "ec8e3e6e95212637",
      "text": "To run Compromise client-side, we uploaded an HTML document named importCompromise.html to an Assets section:"
    },
    {
      "type": "assets",
      "id": "c04091b33451f714",
      "text": "pages/compromise"
    },
    {
      "type": "paragraph",
      "id": "242702c0ffb50618",
      "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]. "
    },
    {
      "type": "paragraph",
      "id": "ac76bd7de2b61174",
      "text": "In the HTML document above, we load the Compromise library from the CDN (content delivery network) of unpkg.com. The latest version of the library is used, and the file is loaded in a minimized version from the builds directory."
    },
    {
      "type": "paragraph",
      "id": "684071300b4d789b",
      "text": "We create a new variable t and assign it the result of calling the nouns and toPlural methods on the window.nlp('dinosaur') object:"
    },
    {
      "type": "code",
      "id": "61ddf8893ee27895",
      "text": "var t = nlp('dinosaur').nouns().toPlural();"
    },
    {
      "type": "paragraph",
      "id": "b09674c1e7355821",
      "text": "This object is created by calling the nlp function loaded from the Compromise library via the importCompromise.html file."
    },
    {
      "type": "paragraph",
      "id": "6eb92b22715910b1",
      "text": "We add an ECMAScript module import statement that uses the import keyword to import the $compile function from the \"[[@thi.ng/rdom]]\" package:"
    },
    {
      "type": "code",
      "id": "10893239e255c334",
      "text": "import { $compile } from \"https://cdn.skypack.dev/@thi.ng/rdom\";"
    },
    {
      "type": "paragraph",
      "id": "68f9dd9ba02b4b73",
      "text": "The import statement specifies the source of the package as \"https://cdn.skypack.dev/@thi.ng/rdom\", which is a CDN that hosts the package files."
    },
    {
      "type": "paragraph",
      "id": "d417d590341da753",
      "text": "We create the output frame [⇒ [[Static Import Snippet]]] using our importCompromise.html file based on importjs.html:"
    },
    {
      "type": "frame",
      "id": "ddedbbab48a1c800",
      "text": "//wiki.ralfbarkow.ch/assets/pages/compromise/importCompromise.html\nHEIGHT 75"
    },
    {
      "type": "pagefold",
      "id": "7eb223f54b0bc094",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "6e7adca8a4947ee9",
      "site": "wiki.ralfbarkow.ch",
      "slug": "read-context-of-frame",
      "title": "Read Context of Frame",
      "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
    },
    {
      "type": "code",
      "id": "c8963fb39e7da82f",
      "text": "window.addEventListener(\"message\", handler)\nlet message = { action:\"sendFrameContext\" }\nwindow.parent.postMessage(message, \"*\")"
    },
    {
      "type": "paragraph",
      "id": "433e0069aa2ef6ee",
      "text": "We stop listening then process the data we got."
    },
    {
      "type": "code",
      "id": "00e55c113558b626",
      "text": "function handler ({data}) {\n  if (data.action == \"frameContext\") {\n    window.removeEventListener(\"message\", handler)\n    const {slug, item, page} = data\n\n"
    },
    {
      "type": "code",
      "id": "068623e58cb67434",
      "text": "  $compile(\n      [\"pre\", {}, t.out('text')]\n    ).mount(document.getElementById(\"output\"));"
    },
    {
      "type": "paragraph",
      "id": "435057a9f74aaeec",
      "text": "We show the result by calling the out method on the t object, passing in the argument 'text' to indicate that we want the result as a plain text string, that we send to the output frame where \"dinosaurs\" is displayed."
    },
    {
      "type": "code",
      "id": "8859f8ab344d4f31",
      "text": "  } // end if\n"
    },
    {
      "type": "code",
      "id": "4f012f477cadcea9",
      "text": "} // end of function handler"
    },
    {
      "type": "pagefold",
      "id": "b1eb0ee86df8b76f",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "3b4aac9cc142e21f",
      "text": "For a compromise-version of Joseph Weizenbaum's amazing [[ELIZA]] bot, see [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page], [https://youtu.be/c_hmwFwvO0U?t=730 video]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Compromise",
        "story": []
      },
      "date": 1680785534270
    },
    {
      "id": "10893239e255c334",
      "type": "add",
      "item": {
        "type": "code",
        "id": "10893239e255c334",
        "text": "import { $compile } from \"https://cdn.skypack.dev/@thi.ng/rdom\";"
      },
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785548017
    },
    {
      "id": "d417d590341da753",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "Output frame: [⇒ [[Static Import Snippet]], importjs.html]"
      },
      "after": "10893239e255c334",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785551674
    },
    {
      "id": "ddedbbab48a1c800",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//wiki.ralfbarkow.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
      },
      "after": "d417d590341da753",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785565491
    },
    {
      "id": "6e7adca8a4947ee9",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "6e7adca8a4947ee9",
        "site": "wiki.ralfbarkow.ch",
        "slug": "read-context-of-frame",
        "title": "Read Context of Frame",
        "text": "We send a message to the Frame asking it to send us info about the page surrounding it. [https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage mdn]"
      },
      "after": "ddedbbab48a1c800",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785567863
    },
    {
      "id": "c8963fb39e7da82f",
      "type": "add",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "window.addEventListener(\"message\", handler)\nlet message = { action:\"sendFrameContext\" }\nwindow.parent.postMessage(message, \"*\")"
      },
      "after": "6e7adca8a4947ee9",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785570054
    },
    {
      "id": "433e0069aa2ef6ee",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "433e0069aa2ef6ee",
        "text": "We stop listening then process the data we got."
      },
      "after": "c8963fb39e7da82f",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785573203
    },
    {
      "id": "00e55c113558b626",
      "type": "add",
      "item": {
        "type": "code",
        "id": "00e55c113558b626",
        "text": "function handler ({data}) {\n  if (data.action == \"frameContext\") {\n    window.removeEventListener(\"message\", handler)\n    const {slug, item, page} = data\n\n"
      },
      "after": "433e0069aa2ef6ee",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785576153
    },
    {
      "id": "42a0c8ee559476f6",
      "type": "add",
      "item": {
        "type": "code",
        "id": "42a0c8ee559476f6",
        "text": "// let doc = nlp('she sells seashells by the seashore.')\nlet doc = \"she sells seashells by the seashore.\";"
      },
      "after": "00e55c113558b626",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785579908
    },
    {
      "id": "068623e58cb67434",
      "type": "add",
      "item": {
        "type": "code",
        "id": "068623e58cb67434",
        "text": "  $compile(\n      [\"pre\", {}, doc]\n    ).mount(document.getElementById(\"output\"));"
      },
      "after": "42a0c8ee559476f6",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785584579
    },
    {
      "id": "8859f8ab344d4f31",
      "type": "add",
      "item": {
        "type": "code",
        "id": "8859f8ab344d4f31",
        "text": "  } // end if\n"
      },
      "after": "068623e58cb67434",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785589383
    },
    {
      "id": "4f012f477cadcea9",
      "type": "add",
      "item": {
        "type": "code",
        "id": "4f012f477cadcea9",
        "text": "} // end of function handler"
      },
      "after": "8859f8ab344d4f31",
      "attribution": {
        "page": "NLP.js",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785592365
    },
    {
      "id": "e78992012cb3657a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "⇒ [[Compromise]] [https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "attribution": {
        "page": "2023-04-06",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1680785643345
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "Modest natural-language processing  [https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680785667649
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "s a javascript library that can parse, transform, and help use text in a handy and uncomplicated way.[https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680785691487
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "is a JavaScript library that can parse, transform, and help use text in a handy and uncomplicated way.[https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680785700534
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "is a [[JavaScript]] library that can parse, transform, and help use text in a handy and uncomplicated way.[https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680785708698
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "is a [[JavaScript]] library that can parse, transform, and help use text in a handy and uncomplicated way. [https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680785720767
    },
    {
      "item": {
        "type": "factory",
        "id": "ce52a819127be859"
      },
      "id": "ce52a819127be859",
      "type": "add",
      "after": "4f012f477cadcea9",
      "date": 1680785739142
    },
    {
      "id": "ce52a819127be859",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "42a0c8ee559476f6",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "ce52a819127be859",
        "4f012f477cadcea9"
      ],
      "date": 1680785741108
    },
    {
      "id": "ce52a819127be859",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ce52a819127be859",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "42a0c8ee559476f6",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680785746219
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "import compromise from 'https://unpkg.com/compromise';\n\n// Use the compromise library\nconst doc = compromise('This is a sample sentence.');\nconst nouns = doc.nouns().out('array');\n\nconsole.log(nouns); // ['sample', 'sentence']\n"
      },
      "date": 1680785749217
    },
    {
      "type": "edit",
      "id": "ddedbbab48a1c800",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//code.dreyeck.ch/assets/pages/js-snippet-template/importjs.html\nHEIGHT 75"
      },
      "date": 1680785832622
    },
    {
      "item": {
        "type": "factory",
        "id": "c04091b33451f714"
      },
      "id": "c04091b33451f714",
      "type": "add",
      "after": "4f012f477cadcea9",
      "date": 1680785908632
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "let nlp;\n\nimport(\"https://unpkg.com/compromise\")\n  .then(module => {\n    nlp = module.default();\n  })\n  .catch(err => console.error(err));\n"
      },
      "date": 1680785960987
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "let nlp;\n\nimport(\"https://unpkg.com/compromise\")\n  .then(module => {\n    nlp = module.nlp();\n  })\n  .catch(err => console.error(err));\n"
      },
      "date": 1680786088858
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "let nlp;\n\nimport(\"https://unpkg.com/compromise\")\n  .then(module => {\n    nlp = nlp();\n  })\n  .catch(err => console.error(err));\n"
      },
      "date": 1680786100317
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "import { nlp } from 'https://unpkg.com/compromise';\nconsole.log(\"nlp: \", nlp);"
      },
      "date": 1680786125446
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "import compromise from 'https://unpkg.com/compromise';\n\nconsole.log(\"compromise: \", compromise);"
      },
      "date": 1680786216954
    },
    {
      "type": "edit",
      "id": "ce52a819127be859",
      "item": {
        "type": "code",
        "id": "ce52a819127be859",
        "text": "import compromiseModule from 'https://unpkg.com/compromise';\nconst compromise = compromiseModule.default;\nconsole.log(\"compromise: \", compromise);\n"
      },
      "date": 1680786297632
    },
    {
      "item": {
        "type": "factory",
        "id": "61ddf8893ee27895"
      },
      "id": "61ddf8893ee27895",
      "type": "add",
      "after": "c04091b33451f714",
      "date": 1680786421409
    },
    {
      "id": "c04091b33451f714",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ce52a819127be859",
        "c04091b33451f714",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "42a0c8ee559476f6",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9",
        "61ddf8893ee27895"
      ],
      "date": 1680786430420
    },
    {
      "type": "edit",
      "id": "c04091b33451f714",
      "item": {
        "type": "assets",
        "id": "c04091b33451f714",
        "text": "pages/compromise"
      },
      "date": 1680786439151
    },
    {
      "type": "edit",
      "id": "ddedbbab48a1c800",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//code.dreyeck.ch/assets/pages/compromise/importCompromise.html\nHEIGHT 75"
      },
      "date": 1680786763982
    },
    {
      "type": "remove",
      "id": "ce52a819127be859",
      "date": 1680786777370
    },
    {
      "id": "61ddf8893ee27895",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "c04091b33451f714",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "42a0c8ee559476f6",
        "61ddf8893ee27895",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680787693495
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "    var t = window.nlp('dinosaur').nouns().toPlural()\n    alert(t.out('text')), "
      },
      "date": 1680787709351
    },
    {
      "type": "edit",
      "id": "068623e58cb67434",
      "item": {
        "type": "code",
        "id": "068623e58cb67434",
        "text": "  $compile(\n      [\"pre\", {}, doc, t]\n    ).mount(document.getElementById(\"output\"));"
      },
      "date": 1680787713753
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "    var t = nlp('dinosaur').nouns().toPlural()\n    alert(t.out('text')), "
      },
      "date": 1680787761690
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "    var t = window.nlp('dinosaur').nouns().toPlural()\n    alert(t.out('text'))"
      },
      "date": 1680787956105
    },
    {
      "type": "fork",
      "date": 1680788167715
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "    var t = window.nlp('dinosaur').nouns().toPlural()\n    alert()"
      },
      "date": 1680788262843
    },
    {
      "type": "edit",
      "id": "068623e58cb67434",
      "item": {
        "type": "code",
        "id": "068623e58cb67434",
        "text": "  $compile(\n      [\"pre\", {}, doc, t.out('text')]\n    ).mount(document.getElementById(\"output\"));"
      },
      "date": 1680788268472
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "var t = window.nlp('dinosaur').nouns().toPlural()\n"
      },
      "date": 1680788276784
    },
    {
      "type": "remove",
      "id": "42a0c8ee559476f6",
      "date": 1680788296420
    },
    {
      "type": "edit",
      "id": "068623e58cb67434",
      "item": {
        "type": "code",
        "id": "068623e58cb67434",
        "text": "  $compile(\n      [\"pre\", {}, t.out('text')]\n    ).mount(document.getElementById(\"output\"));"
      },
      "date": 1680788302748
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "  var t = window.nlp('dinosaur').nouns().toPlural();"
      },
      "date": 1680788398232
    },
    {
      "id": "61ddf8893ee27895",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "c04091b33451f714",
        "61ddf8893ee27895",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680788420981
    },
    {
      "item": {
        "type": "factory",
        "id": "242702c0ffb50618"
      },
      "id": "242702c0ffb50618",
      "type": "add",
      "after": "4f012f477cadcea9",
      "date": 1680788446881
    },
    {
      "id": "242702c0ffb50618",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "c04091b33451f714",
        "242702c0ffb50618",
        "61ddf8893ee27895",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680788453970
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart"
      },
      "date": 1680788458582
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]"
      },
      "date": 1680788468203
    },
    {
      "type": "add",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "We uploaded an HTML document called "
      },
      "after": "e78992012cb3657a",
      "date": 1680788576727
    },
    {
      "item": {
        "type": "factory",
        "id": "11584e49964a511b"
      },
      "id": "11584e49964a511b",
      "type": "add",
      "after": "4f012f477cadcea9",
      "date": 1680788606678
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "We uploaded an HTML document called importCompromise.html into a"
      },
      "date": 1680788611363
    },
    {
      "type": "remove",
      "id": "11584e49964a511b",
      "date": 1680788612977
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "We uploaded an HTML document called importCompromise.html into an Assets paragraph:"
      },
      "date": 1680788624129
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "We uploaded an HTML document called importCompromise.html into an Assets section:"
      },
      "date": 1680788641756
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]. We load the Compromise library from the unpkg.com CDN. The latest version of the library is used, and the file is loaded from the builds directory in a minified version."
      },
      "date": 1680788745873
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]. In the above HTML document, we load the Compromise library from the CDN of unpkg.com. The latest version of the library is used, and the file is loaded in a minimized version from the builds directory."
      },
      "date": 1680788786249
    },
    {
      "type": "add",
      "id": "684071300b4d789b",
      "item": {
        "type": "paragraph",
        "id": "684071300b4d789b",
        "text": "We create a new variable t and assigns it the result of calling the nouns and toPlural methods on the window.nlp('dinosaur') object. This object is created by calling the nlp function that was loaded from the Compromise library in the previous script tag."
      },
      "after": "242702c0ffb50618",
      "date": 1680788909286
    },
    {
      "type": "edit",
      "id": "684071300b4d789b",
      "item": {
        "type": "paragraph",
        "id": "684071300b4d789b",
        "text": "We create a new variable t and assigns it the result of calling the nouns and toPlural methods on the window.nlp('dinosaur') object. "
      },
      "date": 1680788920499
    },
    {
      "type": "add",
      "id": "b09674c1e7355821",
      "item": {
        "type": "paragraph",
        "id": "b09674c1e7355821",
        "text": "This object is created by calling the nlp function that was loaded from the Compromise library in the previous script tag."
      },
      "after": "684071300b4d789b",
      "date": 1680788921313
    },
    {
      "id": "61ddf8893ee27895",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ec8e3e6e95212637",
        "c04091b33451f714",
        "242702c0ffb50618",
        "684071300b4d789b",
        "61ddf8893ee27895",
        "b09674c1e7355821",
        "10893239e255c334",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680788923208
    },
    {
      "type": "add",
      "id": "6eb92b22715910b1",
      "item": {
        "type": "paragraph",
        "id": "6eb92b22715910b1",
        "text": "We add an ECMAScript module import statement that uses the import keyword to import the $compile function from the \"[[@thi.ng/rdom]]\" package. The import statement specifies the source of the package as \"https://cdn.skypack.dev/@thi.ng/rdom\", which is a CDN (content delivery network) that hosts the package files."
      },
      "after": "b09674c1e7355821",
      "date": 1680789030242
    },
    {
      "type": "edit",
      "id": "6eb92b22715910b1",
      "item": {
        "type": "paragraph",
        "id": "6eb92b22715910b1",
        "text": "We add an ECMAScript module import statement that uses the import keyword to import the $compile function from the \"[[@thi.ng/rdom]]\" package. "
      },
      "date": 1680789037445
    },
    {
      "type": "add",
      "id": "68f9dd9ba02b4b73",
      "item": {
        "type": "paragraph",
        "id": "68f9dd9ba02b4b73",
        "text": "The import statement specifies the source of the package as \"https://cdn.skypack.dev/@thi.ng/rdom\", which is a CDN (content delivery network) that hosts the package files."
      },
      "after": "6eb92b22715910b1",
      "date": 1680789038247
    },
    {
      "id": "10893239e255c334",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ec8e3e6e95212637",
        "c04091b33451f714",
        "242702c0ffb50618",
        "684071300b4d789b",
        "61ddf8893ee27895",
        "b09674c1e7355821",
        "6eb92b22715910b1",
        "10893239e255c334",
        "68f9dd9ba02b4b73",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680789040037
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]], importjs.html]"
      },
      "date": 1680789089308
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] with our modified importjs.html, i.e., the "
      },
      "date": 1680789135459
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] with our modified importjs.html, i.e., the importCompromise.html:"
      },
      "date": 1680789144018
    },
    {
      "type": "edit",
      "id": "684071300b4d789b",
      "item": {
        "type": "paragraph",
        "id": "684071300b4d789b",
        "text": "We create a new variable t and assign it the result of calling the nouns and toPlural methods on the window.nlp('dinosaur') object. "
      },
      "date": 1680789207498
    },
    {
      "type": "edit",
      "id": "b09674c1e7355821",
      "item": {
        "type": "paragraph",
        "id": "b09674c1e7355821",
        "text": "This object is created by calling the nlp function that was loaded from the Compromise library in the previous script tag in the importCompromise.html file."
      },
      "date": 1680789285632
    },
    {
      "type": "edit",
      "id": "b09674c1e7355821",
      "item": {
        "type": "paragraph",
        "id": "b09674c1e7355821",
        "text": "This object is created by calling the nlp function that was loaded from the Compromise library via the importCompromise.html file."
      },
      "date": 1680789346127
    },
    {
      "type": "edit",
      "id": "b09674c1e7355821",
      "item": {
        "type": "paragraph",
        "id": "b09674c1e7355821",
        "text": "This object is created by calling the nlp function loaded from the Compromise library via the importCompromise.html file."
      },
      "date": 1680789414610
    },
    {
      "type": "edit",
      "id": "6eb92b22715910b1",
      "item": {
        "type": "paragraph",
        "id": "6eb92b22715910b1",
        "text": "We add an ECMAScript module import statement that uses the import keyword to import the $compile function from the \"[[@thi.ng/rdom]]\" package:"
      },
      "date": 1680789440684
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]. In the HTML document above, we load the Compromise library from the CDN of unpkg.com. The latest version of the library is used, and the file is loaded in a minimized version from the builds directory."
      },
      "date": 1680789522043
    },
    {
      "type": "edit",
      "id": "684071300b4d789b",
      "item": {
        "type": "paragraph",
        "id": "684071300b4d789b",
        "text": "We create a new variable t and assign it the result of calling the nouns and toPlural methods on the window.nlp('dinosaur') object:"
      },
      "date": 1680789550125
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] based on a modified importjs.html, i.e., the importCompromise.html:"
      },
      "date": 1680789619546
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] based on a modified importjs.html, i.e., the importCompromise.html file:"
      },
      "date": 1680789640695
    },
    {
      "type": "add",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We display the result of calling the out method on the t object, passing in the argument 'text' to indicate that we want the result as a plain text string."
      },
      "after": "433e0069aa2ef6ee",
      "date": 1680789682955
    },
    {
      "id": "435057a9f74aaeec",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ec8e3e6e95212637",
        "c04091b33451f714",
        "242702c0ffb50618",
        "684071300b4d789b",
        "61ddf8893ee27895",
        "b09674c1e7355821",
        "6eb92b22715910b1",
        "10893239e255c334",
        "68f9dd9ba02b4b73",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "435057a9f74aaeec",
        "8859f8ab344d4f31",
        "4f012f477cadcea9"
      ],
      "date": 1680789685843
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We display the result of calling the out method for the t object, passing the 'text' argument to indicate that we want the result to be a plain text string that is finally displayed in the output frame."
      },
      "date": 1680789795201
    },
    {
      "type": "edit",
      "id": "242702c0ffb50618",
      "item": {
        "type": "paragraph",
        "id": "242702c0ffb50618",
        "text": "See Compromise-quickstart [https://observablehq.com/@spencermountain/compromise-quickstart page]. "
      },
      "date": 1680789862552
    },
    {
      "type": "add",
      "id": "ac76bd7de2b61174",
      "item": {
        "type": "paragraph",
        "id": "ac76bd7de2b61174",
        "text": "In the HTML document above, we load the Compromise library from the CDN of unpkg.com. The latest version of the library is used, and the file is loaded in a minimized version from the builds directory."
      },
      "after": "242702c0ffb50618",
      "date": 1680789863508
    },
    {
      "type": "edit",
      "id": "ac76bd7de2b61174",
      "item": {
        "type": "paragraph",
        "id": "ac76bd7de2b61174",
        "text": "In the HTML document above, we load the Compromise library from the CDN (content delivery network) of unpkg.com. The latest version of the library is used, and the file is loaded in a minimized version from the builds directory."
      },
      "date": 1680789890629
    },
    {
      "type": "edit",
      "id": "68f9dd9ba02b4b73",
      "item": {
        "type": "paragraph",
        "id": "68f9dd9ba02b4b73",
        "text": "The import statement specifies the source of the package as \"https://cdn.skypack.dev/@thi.ng/rdom\", which is a CDN that hosts the package files."
      },
      "date": 1680789910527
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] based on importjs.html, i.e., the modified importCompromise.html file:"
      },
      "date": 1680789987595
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]] based on importjs.html, i.e. the modified importCompromise.html file:"
      },
      "date": 1680790010362
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We display the result of calling the out method for the t object, passing the 'text' argument to indicate that we want the result to be a plain text string that is finally displayed in the output frame as \"dinosaurs\"."
      },
      "date": 1680790397473
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We display the result of calling the out method for the t object, passing the \"text\" argument to indicate that the result should be a simple text string that will eventually be displayed in the output frame as \"dinosaurs\"."
      },
      "date": 1680790430815
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We display the result by calling the out method for the t object, passing the \"text\" argument to indicate that the result should be a simple text string that we send to the output frame where \"dinosaurs\" is displayed."
      },
      "date": 1680790611648
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We show the result by calling the out method for the t object and passing the \"text\" argument to indicate that the result should be a simple text string that we send to the output frame where \"dinosaurs\" is displayed."
      },
      "date": 1680790637830
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We show the result by calling the out method on the t object and passing the \"text\" argument to indicate that the result should be a simple text string that we send to the output frame where \"dinosaurs\" is displayed."
      },
      "date": 1680790671657
    },
    {
      "type": "edit",
      "id": "435057a9f74aaeec",
      "item": {
        "type": "paragraph",
        "id": "435057a9f74aaeec",
        "text": "We show the result by calling the out method on the t object, passing in the argument 'text' to indicate that we want the result as a plain text string, that we send to the output frame where \"dinosaurs\" is displayed."
      },
      "date": 1680790711873
    },
    {
      "type": "fork",
      "site": "code.dreyeck.ch",
      "date": 1680794936036
    },
    {
      "type": "edit",
      "id": "ddedbbab48a1c800",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//wiki.ralfbarkow.ch/assets/pages/compromise/importCompromise.html\nHEIGHT 75"
      },
      "date": 1680795003773
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "  var t = nlp('dinosaur').nouns().toPlural();"
      },
      "date": 1680795215661
    },
    {
      "type": "edit",
      "id": "61ddf8893ee27895",
      "item": {
        "type": "code",
        "id": "61ddf8893ee27895",
        "text": "var t = nlp('dinosaur').nouns().toPlural();"
      },
      "date": 1680795316086
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "To run We uploaded an HTML document called importCompromise.html into an Assets section:"
      },
      "date": 1680795755421
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "To run compromise client-side, we uploaded an HTML document called importCompromise.html into an Assets section:"
      },
      "date": 1680795774254
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "To run compromise client-side, we uploaded an HTML document named importCompromise.html into an Assets section:"
      },
      "date": 1680795818488
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "To run compromise client-side, we uploaded an HTML document named importCompromise.html to an Assets section:"
      },
      "date": 1680795829379
    },
    {
      "type": "edit",
      "id": "ec8e3e6e95212637",
      "item": {
        "type": "paragraph",
        "id": "ec8e3e6e95212637",
        "text": "To run Compromise client-side, we uploaded an HTML document named importCompromise.html to an Assets section:"
      },
      "date": 1680795882819
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame: [⇒ [[Static Import Snippet]]] based on importjs.html, i.e. the modified importCompromise.html file:"
      },
      "date": 1680796167435
    },
    {
      "item": {
        "type": "factory",
        "id": "b1eb0ee86df8b76f"
      },
      "id": "b1eb0ee86df8b76f",
      "type": "add",
      "after": "4f012f477cadcea9",
      "date": 1680796711405
    },
    {
      "type": "edit",
      "id": "b1eb0ee86df8b76f",
      "item": {
        "type": "pagefold",
        "id": "b1eb0ee86df8b76f",
        "text": "~"
      },
      "date": 1680796714769
    },
    {
      "item": {
        "type": "factory",
        "id": "3b4aac9cc142e21f"
      },
      "id": "3b4aac9cc142e21f",
      "type": "add",
      "after": "b1eb0ee86df8b76f",
      "date": 1680796716321
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "See a compromise-version of the amazing ELIZA bot, by Joseph Weizenbaum:"
      },
      "date": 1680796730419
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "See a compromise-version of the amazing ELIZA bot, by Joseph Weizenbaum [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page]"
      },
      "date": 1680796754944
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "See a compromise-version of the amazing [[ELIZA]] bot, by Joseph Weizenbaum [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page]"
      },
      "date": 1680796776103
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "For a compromise-version of the amazing [[ELIZA]] bot, by Joseph Weizenbaum see [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page]"
      },
      "date": 1680796920038
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "For a compromise-version of Joseph Weizenbaum's amazing [[ELIZA]] bot, see [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page]"
      },
      "date": 1680797094435
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "For a compromise-version of Joseph Weizenbaum's amazing [[ELIZA]] bot, see [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page]."
      },
      "date": 1680797197681
    },
    {
      "type": "edit",
      "id": "3b4aac9cc142e21f",
      "item": {
        "type": "paragraph",
        "id": "3b4aac9cc142e21f",
        "text": "For a compromise-version of Joseph Weizenbaum's amazing [[ELIZA]] bot, see [https://observablehq.com/@spencermountain/compromise-making-a-bot#cell-119 page], [https://youtu.be/c_hmwFwvO0U?t=730 video]."
      },
      "date": 1680797649021
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1680797781986
    },
    {
      "type": "edit",
      "id": "ddedbbab48a1c800",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//code.dreyeck.ch/assets/pages/compromise/importCompromise.html\nHEIGHT 75"
      },
      "date": 1680797788736
    },
    {
      "type": "edit",
      "id": "e78992012cb3657a",
      "item": {
        "type": "paragraph",
        "id": "e78992012cb3657a",
        "text": "is a [[JavaScript]] library that can parse, transform, and help use text. [https://github.com/spencermountain/compromise github], [https://compromise.cool/ site], [https://observablehq.com/@spencermountain/nlp-compromise docs]"
      },
      "date": 1680797809552
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame using our importCompromise.html file based on importjs.html [⇒ [[Static Import Snippet]]] :"
      },
      "date": 1680798310176
    },
    {
      "type": "edit",
      "id": "d417d590341da753",
      "item": {
        "type": "paragraph",
        "id": "d417d590341da753",
        "text": "We create the output frame [⇒ [[Static Import Snippet]]] using our importCompromise.html file based on importjs.html:"
      },
      "date": 1680798342667
    },
    {
      "item": {
        "type": "factory",
        "id": "7eb223f54b0bc094"
      },
      "id": "7eb223f54b0bc094",
      "type": "add",
      "after": "3b4aac9cc142e21f",
      "date": 1680798396809
    },
    {
      "id": "7eb223f54b0bc094",
      "type": "move",
      "order": [
        "e78992012cb3657a",
        "ec8e3e6e95212637",
        "c04091b33451f714",
        "242702c0ffb50618",
        "ac76bd7de2b61174",
        "684071300b4d789b",
        "61ddf8893ee27895",
        "b09674c1e7355821",
        "6eb92b22715910b1",
        "10893239e255c334",
        "68f9dd9ba02b4b73",
        "d417d590341da753",
        "ddedbbab48a1c800",
        "7eb223f54b0bc094",
        "6e7adca8a4947ee9",
        "c8963fb39e7da82f",
        "433e0069aa2ef6ee",
        "00e55c113558b626",
        "068623e58cb67434",
        "435057a9f74aaeec",
        "8859f8ab344d4f31",
        "4f012f477cadcea9",
        "b1eb0ee86df8b76f",
        "3b4aac9cc142e21f"
      ],
      "date": 1680798402667
    },
    {
      "type": "edit",
      "id": "7eb223f54b0bc094",
      "item": {
        "type": "pagefold",
        "id": "7eb223f54b0bc094",
        "text": "~"
      },
      "date": 1680798405737
    },
    {
      "type": "fork",
      "site": "code.dreyeck.ch",
      "date": 1680798490226
    },
    {
      "type": "edit",
      "id": "ddedbbab48a1c800",
      "item": {
        "type": "frame",
        "id": "ddedbbab48a1c800",
        "text": "//wiki.ralfbarkow.ch/assets/pages/compromise/importCompromise.html\nHEIGHT 75"
      },
      "date": 1680798494992
    }
  ]
}