{
  "title": "Traversals",
  "story": [
    {
      "type": "paragraph",
      "id": "ef5a6d2716ed0ab3",
      "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
    },
    {
      "type": "markdown",
      "id": "ee820f5cf69d515d",
      "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?\n"
    },
    {
      "type": "markdown",
      "id": "57616245b30617d2",
      "text": "We can try to guess the space by looking at the static context of matches:. In our non-inlined version, the static context was represented by the instance names of the match tracker. These names kept the positions up to which the pattern had matched the string, and the positions up to which the string had been examined according to the pattern. In other words, the static context of matches: seemed to be as follows."
    },
    {
      "type": "paragraph",
      "id": "4319cd7bb297340b",
      "text": "[…]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Traversals",
        "story": []
      },
      "date": 1660801973527
    },
    {
      "item": {
        "type": "factory",
        "id": "ef5a6d2716ed0ab3"
      },
      "id": "ef5a6d2716ed0ab3",
      "type": "add",
      "date": 1660801983725
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming selectors properly and using polymorphism to cross distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660801987065
    },
    {
      "type": "add",
      "id": "4319cd7bb297340b",
      "item": {
        "type": "paragraph",
        "id": "4319cd7bb297340b",
        "text": "[…]"
      },
      "after": "ef5a6d2716ed0ab3",
      "date": 1660801988947
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming selectors properly and using polymorphism to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660802003868
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660802029137
    },
    {
      "item": {
        "type": "factory",
        "id": "ee820f5cf69d515d"
      },
      "id": "ee820f5cf69d515d",
      "type": "add",
      "after": "4319cd7bb297340b",
      "date": 1660810100244
    },
    {
      "id": "ee820f5cf69d515d",
      "type": "move",
      "order": [
        "ef5a6d2716ed0ab3",
        "ee820f5cf69d515d",
        "4319cd7bb297340b"
      ],
      "date": 1660810104762
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "paragraph",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question aPattern matches: aString, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810106276
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "paragraph",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810135043
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810136771
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?"
      },
      "date": 1660810153736
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?\n"
      },
      "date": 1660810307202
    },
    {
      "type": "add",
      "id": "57616245b30617d2",
      "item": {
        "type": "markdown",
        "id": "57616245b30617d2",
        "text": "We can try to guess the space by looking at the static context of matches:. In our non-inlined version, the static context was represented by the instance names of the match tracker. These names kept the positions up to which the pattern had matched the string, and the positions up to which the string had been examined according to the pattern. In other words, the static context of matches: seemed to be as follows."
      },
      "after": "ee820f5cf69d515d",
      "date": 1660810308906
    }
  ]
}