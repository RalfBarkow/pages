{
  "title": "Traversals",
  "story": [
    {
      "type": "markdown",
      "id": "ef5a6d2716ed0ab3",
      "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement `matches:` in a completely new way."
    },
    {
      "type": "markdown",
      "id": "ee820f5cf69d515d",
      "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?\n"
    },
    {
      "type": "markdown",
      "id": "57616245b30617d2",
      "text": "We can try to guess the space by looking at the static context of matches:. In our non-inlined version, the static context was represented by the instance names of the match tracker. These names kept the positions up to which the pattern had matched the string, and the positions up to which the string had been examined according to the pattern. In other words, the static context of matches: seemed to be as follows."
    },
    {
      "type": "paragraph",
      "id": "4319cd7bb297340b",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "5fe367993ec334f4",
      "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!\n\n> Or the direction in which mice traverse a [[maze]]."
    },
    {
      "type": "markdown",
      "id": "c1365be87d62f30a",
      "text": "This suggests that in reality the static context is just the pair of intervals, that the space is one of interval pairs connected in the orientation specified by `aPattern matches: aString`, that we distinguish interesting accumulation points by drawing distinctions regarding the interval sizes, that we are able do so because we can perceive a difference between their possible values, and that the answer we are after is whether the particular traversal ends at an interesting accumulation point or not.\n"
    },
    {
      "type": "markdown",
      "id": "9f61f1c32d3cd097",
      "text": "> You can also see `matches:` as discrete vector integration of a trajectory in the space of interval pairs."
    },
    {
      "type": "paragraph",
      "id": "cf6c9b5dc147eec3",
      "text": "⇒ [[Contexts]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Traversals",
        "story": []
      },
      "date": 1660801973527
    },
    {
      "item": {
        "type": "factory",
        "id": "ef5a6d2716ed0ab3"
      },
      "id": "ef5a6d2716ed0ab3",
      "type": "add",
      "date": 1660801983725
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming selectors properly and using polymorphism to cross distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660801987065
    },
    {
      "type": "add",
      "id": "4319cd7bb297340b",
      "item": {
        "type": "paragraph",
        "id": "4319cd7bb297340b",
        "text": "[…]"
      },
      "after": "ef5a6d2716ed0ab3",
      "date": 1660801988947
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming selectors properly and using polymorphism to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660802003868
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement matches: in a completely new way."
      },
      "date": 1660802029137
    },
    {
      "item": {
        "type": "factory",
        "id": "ee820f5cf69d515d"
      },
      "id": "ee820f5cf69d515d",
      "type": "add",
      "after": "4319cd7bb297340b",
      "date": 1660810100244
    },
    {
      "id": "ee820f5cf69d515d",
      "type": "move",
      "order": [
        "ef5a6d2716ed0ab3",
        "ee820f5cf69d515d",
        "4319cd7bb297340b"
      ],
      "date": 1660810104762
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "paragraph",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question aPattern matches: aString, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810106276
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "paragraph",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810135043
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking matches: represent?"
      },
      "date": 1660810136771
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?"
      },
      "date": 1660810153736
    },
    {
      "type": "edit",
      "id": "ee820f5cf69d515d",
      "item": {
        "type": "markdown",
        "id": "ee820f5cf69d515d",
        "text": "First of all, if we are going to let a behavior traverse an information space to answer the question `aPattern matches: aString`, what is the space we are talking about? And given the space, what does asking `matches:` represent?\n"
      },
      "date": 1660810307202
    },
    {
      "type": "add",
      "id": "57616245b30617d2",
      "item": {
        "type": "markdown",
        "id": "57616245b30617d2",
        "text": "We can try to guess the space by looking at the static context of matches:. In our non-inlined version, the static context was represented by the instance names of the match tracker. These names kept the positions up to which the pattern had matched the string, and the positions up to which the string had been examined according to the pattern. In other words, the static context of matches: seemed to be as follows."
      },
      "after": "ee820f5cf69d515d",
      "date": 1660810308906
    },
    {
      "item": {
        "type": "factory",
        "id": "5fe367993ec334f4"
      },
      "id": "5fe367993ec334f4",
      "type": "add",
      "after": "4319cd7bb297340b",
      "date": 1660822862272
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "paragraph",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, matches: translates the pattern and the string into a direction vector at each step of the trip!"
      },
      "date": 1660822866866
    },
    {
      "type": "add",
      "id": "cf6c9b5dc147eec3",
      "item": {
        "type": "paragraph",
        "id": "cf6c9b5dc147eec3",
        "text": "[…]"
      },
      "after": "5fe367993ec334f4",
      "date": 1660822869173
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "paragraph",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!"
      },
      "date": 1660822879244
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "markdown",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!"
      },
      "date": 1660822880914
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "markdown",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!\n"
      },
      "date": 1660822929832
    },
    {
      "type": "add",
      "id": "c1365be87d62f30a",
      "item": {
        "type": "markdown",
        "id": "c1365be87d62f30a",
        "text": "This suggests that in reality the static context is just the pair of intervals, that the space is one of interval pairs connected in the orientation specified"
      },
      "after": "5fe367993ec334f4",
      "date": 1660822930795
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "markdown",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!\n\n> Or the direction in which mice traverse a maze."
      },
      "date": 1660822964161
    },
    {
      "type": "edit",
      "id": "5fe367993ec334f4",
      "item": {
        "type": "markdown",
        "id": "5fe367993ec334f4",
        "text": "[…] In other words, `matches:` translates the pattern and the string into a direction vector at each step of the trip!\n\n> Or the direction in which mice traverse a [[maze]]."
      },
      "date": 1660822973470
    },
    {
      "type": "edit",
      "id": "c1365be87d62f30a",
      "item": {
        "type": "markdown",
        "id": "c1365be87d62f30a",
        "text": "This suggests that in reality the static context is just the pair of intervals, that the space is one of interval pairs connected in the orientation specified by aPattern matches: aString, that we distinguish interesting accumulation points by drawing distinctions regarding the interval sizes, that we are able do so because we can perceive a difference between their possible values, and that the answer we are after is whether the particular traversal ends at an interesting accumulation point or not."
      },
      "date": 1660823068941
    },
    {
      "type": "edit",
      "id": "c1365be87d62f30a",
      "item": {
        "type": "markdown",
        "id": "c1365be87d62f30a",
        "text": "This suggests that in reality the static context is just the pair of intervals, that the space is one of interval pairs connected in the orientation specified by `aPattern matches: aString`, that we distinguish interesting accumulation points by drawing distinctions regarding the interval sizes, that we are able do so because we can perceive a difference between their possible values, and that the answer we are after is whether the particular traversal ends at an interesting accumulation point or not."
      },
      "date": 1660823086703
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "paragraph",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement `matches:` in a completely new way."
      },
      "date": 1660823172499
    },
    {
      "type": "edit",
      "id": "ef5a6d2716ed0ab3",
      "item": {
        "type": "markdown",
        "id": "ef5a6d2716ed0ab3",
        "text": "Now that we know the basics of messaging, such as naming [[selectors]] properly and using [[polymorphism]] to [[cross]] distinctions drawn by means of classes, it is time to use what we have just discussed to implement `matches:` in a completely new way."
      },
      "date": 1660823174254
    },
    {
      "type": "edit",
      "id": "c1365be87d62f30a",
      "item": {
        "type": "markdown",
        "id": "c1365be87d62f30a",
        "text": "This suggests that in reality the static context is just the pair of intervals, that the space is one of interval pairs connected in the orientation specified by `aPattern matches: aString`, that we distinguish interesting accumulation points by drawing distinctions regarding the interval sizes, that we are able do so because we can perceive a difference between their possible values, and that the answer we are after is whether the particular traversal ends at an interesting accumulation point or not.\n"
      },
      "date": 1660823248191
    },
    {
      "type": "add",
      "id": "9f61f1c32d3cd097",
      "item": {
        "type": "markdown",
        "id": "9f61f1c32d3cd097",
        "text": "> You can also see matches: as discrete vector integration of a trajectory in the space of interval pairs."
      },
      "after": "c1365be87d62f30a",
      "date": 1660823250152
    },
    {
      "type": "edit",
      "id": "9f61f1c32d3cd097",
      "item": {
        "type": "markdown",
        "id": "9f61f1c32d3cd097",
        "text": "> You can also see `matches:` as discrete vector integration of a trajectory in the space of interval pairs."
      },
      "date": 1660823267180
    },
    {
      "type": "edit",
      "id": "cf6c9b5dc147eec3",
      "item": {
        "type": "paragraph",
        "id": "cf6c9b5dc147eec3",
        "text": "[[Contexts]]"
      },
      "date": 1660823288900
    },
    {
      "type": "edit",
      "id": "cf6c9b5dc147eec3",
      "item": {
        "type": "paragraph",
        "id": "cf6c9b5dc147eec3",
        "text": "⇒ [[Contexts]]"
      },
      "date": 1660823294799
    }
  ]
}