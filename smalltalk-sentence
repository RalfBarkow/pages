{
  "title": "Smalltalk Sentence",
  "story": [
    {
      "type": "paragraph",
      "id": "e5b7b07ea7de4628",
      "text": "Smalltalk sentences are no more than invocations of bits of behavior, where the specific behaviors in question are distinguished and called upon by means of their selectors."
    },
    {
      "type": "markdown",
      "id": "482128beeba0fef1",
      "text": "Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named `instVarAt:` must be a message."
    },
    {
      "type": "markdown",
      "id": "8ca38823fcd18412",
      "text": "For those not familiar with the message `instVarAt:`, what sending it does is to answer the object referenced by the nth instance name of the receiver. This works because all instance variables are stored in the order given by the [[Class]] and superclass definitions. Feel free to check out the implementation in your Smalltalk of choice."
    },
    {
      "type": "factory",
      "id": "c47e4d4a437c4b06"
    },
    {
      "type": "paragraph",
      "id": "6cd947311e4a7798",
      "text": "⇐ [[Distinctions, Labels, and Smalltalk]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Smalltalk Sentence",
        "story": []
      },
      "date": 1704440187185
    },
    {
      "id": "e5b7b07ea7de4628",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "e5b7b07ea7de4628",
        "text": "[…] Smalltalk sentences are no more than invocations of bits of behavior, where the specific behaviors in question are distinguished and called upon by means of their selectors. Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named instVarAt:3 must be a message."
      },
      "attribution": {
        "page": "2024-01-05"
      },
      "date": 1704440190247
    },
    {
      "type": "edit",
      "id": "e5b7b07ea7de4628",
      "item": {
        "type": "paragraph",
        "id": "e5b7b07ea7de4628",
        "text": "[…] Smalltalk sentences are no more than invocations of bits of behavior, where the specific behaviors in question are distinguished and called upon by means of their selectors."
      },
      "date": 1704440213736
    },
    {
      "type": "add",
      "id": "24cc489b2497eea7",
      "item": {
        "type": "paragraph",
        "id": "24cc489b2497eea7",
        "text": "Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named instVarAt:3 must be a message."
      },
      "after": "e5b7b07ea7de4628",
      "date": 1704440214535
    },
    {
      "type": "add",
      "id": "06e391ee57f74081",
      "item": {
        "type": "paragraph",
        "id": "06e391ee57f74081",
        "text": "For those not familiar with the message instVarAt:, what sending it does is to answer the object referenced by the nth instance name of the receiver. This works because all instance variables are stored in the order given by the class and superclass definitions. Feel free to check out the implementation in your Smalltalk of choice."
      },
      "after": "24cc489b2497eea7",
      "date": 1704440227426
    },
    {
      "type": "edit",
      "id": "24cc489b2497eea7",
      "item": {
        "type": "paragraph",
        "id": "24cc489b2497eea7",
        "text": "Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named `instVarAt:` must be a message."
      },
      "date": 1704440238262
    },
    {
      "type": "edit",
      "id": "24cc489b2497eea7",
      "item": {
        "type": "markdown",
        "id": "24cc489b2497eea7",
        "text": "Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named `instVarAt:` must be a message."
      },
      "date": 1704440240002
    },
    {
      "type": "edit",
      "id": "06e391ee57f74081",
      "item": {
        "type": "paragraph",
        "id": "06e391ee57f74081",
        "text": "For those not familiar with the message `instVarAt:`, what sending it does is to answer the object referenced by the nth instance name of the receiver. This works because all instance variables are stored in the order given by the class and superclass definitions. Feel free to check out the implementation in your Smalltalk of choice."
      },
      "date": 1704440251126
    },
    {
      "type": "edit",
      "id": "06e391ee57f74081",
      "item": {
        "type": "markdown",
        "id": "06e391ee57f74081",
        "text": "For those not familiar with the message `instVarAt:`, what sending it does is to answer the object referenced by the nth instance name of the receiver. This works because all instance variables are stored in the order given by the class and superclass definitions. Feel free to check out the implementation in your Smalltalk of choice."
      },
      "date": 1704440253636
    },
    {
      "item": {
        "type": "factory",
        "id": "c47e4d4a437c4b06"
      },
      "id": "c47e4d4a437c4b06",
      "type": "add",
      "after": "06e391ee57f74081",
      "date": 1704440282099
    },
    {
      "item": {
        "type": "factory",
        "id": "6cd947311e4a7798"
      },
      "id": "6cd947311e4a7798",
      "type": "add",
      "after": "c47e4d4a437c4b06",
      "date": 1704440286793
    },
    {
      "type": "edit",
      "id": "6cd947311e4a7798",
      "item": {
        "type": "paragraph",
        "id": "6cd947311e4a7798",
        "text": "⇐ [[Distinctions, Labels, and Smalltalk]]"
      },
      "date": 1704440297099
    },
    {
      "type": "edit",
      "id": "e5b7b07ea7de4628",
      "item": {
        "type": "paragraph",
        "id": "e5b7b07ea7de4628",
        "text": "Smalltalk sentences are no more than invocations of bits of behavior, where the specific behaviors in question are distinguished and called upon by means of their selectors."
      },
      "date": 1704440396730
    },
    {
      "type": "remove",
      "id": "24cc489b2497eea7",
      "date": 1704440404718
    },
    {
      "type": "remove",
      "id": "06e391ee57f74081",
      "date": 1704440406183
    },
    {
      "id": "482128beeba0fef1",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "482128beeba0fef1",
        "text": "Since messages provide the only mechanism to cross into a distinction, it obviously follows that even the behavior named `instVarAt:` must be a message."
      },
      "after": "e5b7b07ea7de4628",
      "attribution": {
        "page": "Distinctions, Labels, and Smalltalk"
      },
      "date": 1704440410723
    },
    {
      "id": "8ca38823fcd18412",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "8ca38823fcd18412",
        "text": "For those not familiar with the message `instVarAt:`, what sending it does is to answer the object referenced by the nth instance name of the receiver. This works because all instance variables are stored in the order given by the [[Class]] and superclass definitions. Feel free to check out the implementation in your Smalltalk of choice."
      },
      "after": "482128beeba0fef1",
      "attribution": {
        "page": "Distinctions, Labels, and Smalltalk"
      },
      "date": 1704440414064
    }
  ]
}