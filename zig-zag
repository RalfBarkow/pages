{
  "title": "Zig Zag",
  "story": [
    {
      "type": "html",
      "text": "The XANADU(R) ZIGZAG(TM) Hyperstructure Kit is available as shareware for $25. The download for the PC will write a Linux boot floppy disk that contains the software.",
      "id": "5080d7c17e51d7575e68ba2543a69804"
    },
    {
      "type": "html",
      "text": " [http://www.xanadu.net/zigzag/ www.xanadu.net] <i>- Check out the tutorial!</i>",
      "id": "2fc89988fa143e66ab4959304b7e6acf"
    },
    {
      "type": "html",
      "text": "<b>[[Zig Zag]] has been playing on my mind lately. It is a excellent and elegant solution to a number of problems. I recommend checking it out.</b>",
      "id": "620fac89230651fcd622ef074ce21ad0"
    },
    {
      "type": "html",
      "text": "<i>From their website ...</i>",
      "id": "303187022271489b8fb85e79d3eaea47"
    },
    {
      "type": "html",
      "text": "\nZigzag 0.53 is a very early version of a very unusual piece of software by [[Ted Nelson]]. ",
      "id": "b0d2cbe8a85063426955b8a09197a0bb"
    },
    {
      "type": "html",
      "text": "<b>...VERY SIMPLE and yet VERY HARD TO EXPLAIN. (These two properties are signs of a new paradigm.)</b>",
      "id": "ae1e0697369b769a82a97c9250b77fbf"
    },
    {
      "type": "html",
      "text": "\nThough perhaps also of poor communication skills.",
      "id": "51e181ebbf4718c5be4e043763eb08b5"
    },
    {
      "type": "html",
      "text": "<i>MIT's Technology Review asks ...</i>",
      "id": "59581f7a16223b3a6763ba325ca6439e"
    },
    {
      "type": "html",
      "text": "\nThe visionary who dreamed up hypertext has never delivered\nany software... until now. Will [[Zig Zag]] pass the test? ",
      "id": "a0fae48508587f94606e78276a7d5c82"
    },
    {
      "type": "html",
      "text": " [http://www.technologyreview.com/articles/ditlea0998.asp www.technologyreview.com]",
      "id": "bb113f53f1ec0b708a4d9246edd223e6"
    },
    {
      "type": "html",
      "text": "<i>Article now requires subscription</i>",
      "id": "3ef94c53796cfbf8f356818396fda862"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "Hmm, is this really so difficult to explain? It seems that a particular \"rank\" of connected cells behaves exactly like a doubly-linked list.  But a given cell may form a part of many such ranks. Cells distinguish the ranks that they are in using a classifier called \"dimension\". ",
      "id": "93079642d4923feb987a5f4c649e8d44"
    },
    {
      "type": "html",
      "text": "\nThe conventions for producing human-readable views onto this very general structure work by mapping the three dimensions currently chosen by the user onto three orthogonal directions in space. That's quite cute. And it's nice that the model doesn't need to appeal to anything else to be useful: the idea of representing the currently selected cells by linking each one of them to a cell in a rank joined along the selection dimension is nice.",
      "id": "27bbc6571beb1bca2ded5d3b66bd0047"
    },
    {
      "type": "html",
      "text": "\nThe explanations given in the tutorial seem obfuscated by the continual claims that ZZspace is not like this, not like that, and in fact not like anything else whatsoever in the world. Ironically, the claimed \"paradoxical\" properties of ZZspace, particularly that two or more ranks can share more than one cell, seem to be an artifact of trying to present ranks as if traversing them corresponded to movement in a direction (which we're explicitly told it doesn't).",
      "id": "a22605116ffd2d76e3beb26317d98288"
    },
    {
      "type": "html",
      "text": "\nIt would be interesting to know where the Zig Zag idea came from. It seems as if one could possibly get there by starting with the idea of a doubly-linked list, then relaxing the implicit constraint that a cell has only the one pair of pointers. That kind of thing is very very hard, exactly because the constraint is so well hidden.",
      "id": "5c0eb523269103427ace794b76183a90"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "<i>The following deals with the current prototype. If you are interested in the underlying principle - of course you are! - first read the tutorial at the website mentioned above.</i>",
      "id": "4755d51d680be5d389b3eb11676659c3"
    },
    {
      "type": "html",
      "text": "\nI have tried to understand what this zigzag thing is all about.\nI think I understand the concept somehow, but its very hard to describe... ",
      "id": "d0c2971513039bfa87fdc663a9984dc6"
    },
    {
      "type": "html",
      "text": "Starting zigzag, you will see two roughly equeal Windows, the left is called \"Action Window\", the one on the right \"Data Window\"",
      "id": "6e9673c9714a03d820257634b125afdd"
    },
    {
      "type": "html",
      "text": "\nHey, its textmode, so here you see it:",
      "id": "9992e47197d5fffe0255c42f7055089e"
    },
    {
      "type": "code",
      "text": " +---------- Action Window (I) --------+------------- Data Window (I) --------+\n |+---> +d.1                           |+---> +d.1                            |\n ||\\                                   ||\\                                    |\n || \\| +d.3                            || \\| +d.3                             |\n |V -+                                 |V -+                                  |\n |+d.2                                 |+d.2                                  |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n | d.1- Midden - Home                  |  d.1 - Midden - Home                 |\n |                  |                  |                   |                  |\n |               #Edit - #Clone        |                #Edit q#Clone         |\n |                  |                  |                   |                  |\n |               #L-insq#R-insq#U-ins  |                #L-insq#R-insq#U-ins  |\n |                  |                  |                   |                  |\n |               #Deletq#L-breq#R-bre  |                #Deletq#L-breq#R-bre  |\n |                  |                  |                   |                  |\n |               #Mark                 |                #Mark                 |\n |                  |                  |                   |                  |\n |               #L-Hopq#R-Hopq#U-Hop  |                #L-Hopq#R-Hopq#U-Hop  |\n +-----------------------------------0-+-------------------------------------0+",
      "id": "9f2a1e4d2c9aa771e9d2a2447579c072"
    },
    {
      "type": "html",
      "text": "\nThere are two cursors, an \"action cursor\" associated with the left \nWindow, and a Data-cursor, for the right.\nYou can move the action-courser on the right with keys esfc, the\nData-courser on the left simply with the arrow-keys.",
      "id": "eb889c349860c4ac1b19f3482c739ea2"
    },
    {
      "type": "html",
      "text": "\nZigzag is about single pieces of Information called \"cells\". These\ncells can be created, edited and deleted.",
      "id": "905b2af34b0c6c7235297a1bc421fb21"
    },
    {
      "type": "html",
      "text": "\nPressing \"Enter\" will evaluate the content of the Cell the\nAction-cursor points at. (If its a command-cell, which start with \"#\")",
      "id": "be51f054c75fbfe837161cfb1791f3a3"
    },
    {
      "type": "html",
      "text": "\nPressing <CTRL>-k fires up vi, so you can edit the Cell, (big K for\nleft Window). q/Q will show a small rectangle with the content of\nthe cell.",
      "id": "cd555926cdb85aa895d9014d426719f4"
    },
    {
      "type": "html",
      "text": "\nLinks can be made between Cells. The interesting thing is, that\nthese Links are categorized using \"Dimensions\".",
      "id": "339bbda18cd749c6a89e163cdd22aa2f"
    },
    {
      "type": "html",
      "text": "\nQuote: STRUCTURE DIMENSIONS",
      "id": "414405136736abb6f0621073cd6b4977"
    },
    {
      "type": "html",
      "text": "The cell structure may have any number of dimensions, though the system begins with only seven (d.1, d.2, d.3, d.cursor, d.clone, d.mark, d.contain, d.contain2). (The functions of these are explained at the end.)",
      "id": "1b4312fda28550f42c7f7ab8a35dd329"
    },
    {
      "type": "html",
      "text": "\nTwo off these Dimensions are visualised by displaying a two-demensional\ngraph of the cell-structure on the screen.",
      "id": "984ff786f727a466acceb0b69081cf56"
    },
    {
      "type": "html",
      "text": "\nQuote: VIEWING AXES",
      "id": "e1317afd3e38c8e05079f7bfaa3b4aa6"
    },
    {
      "type": "html",
      "text": "There are three viewing axes: x, y and z. The current view in each window maps the cell structure to the viewing axes, assigning these three axes to whatever structure dimensions you specify.",
      "id": "c4b5d08b4facc086f773c21221492171"
    },
    {
      "type": "html",
      "text": "\nVIEWING THE STRUCTURE DIMENSIONS",
      "id": "69c816a8287a2209466325d1cc9eebd6"
    },
    {
      "type": "html",
      "text": "You may quickly change the mapping of the [[Zig Zag]] world's dimensions to the window's viewing axes.",
      "id": "ed5312cc4082b515f477ccd681c92f51"
    },
    {
      "type": "html",
      "text": "Typing x, y or z in lower case causes the view in the right window to step by one dimension on the specified viewing axis (x, y or z).  Typing X, Y or Z in upper case causes the view in the left window to step by one dimension in the specified viewing axis (X, Y or Z)",
      "id": "e5d2d0d206ced54bf351be15a3e2cc4b"
    },
    {
      "type": "html",
      "text": "\nDIMENSION FUNCTIONS.",
      "id": "9e68a88ec37cc82d2db240a385ba8912"
    },
    {
      "type": "html",
      "text": "Structure dimensions d.1, d.2 and d.3 have no assigned functions.  Think of d.1 as useful for headings, d.2 as useful for virtual lists, d.1 and d.2 together for ordinary tables and very interesting basket-weave structures, and d.3 as a third dimension.",
      "id": "c988b0b63ec62d48eb198466ed308bad"
    },
    {
      "type": "html",
      "text": "The \"Cursor\" dimension, d.cursor, is the dimension on which a cursor (actually a cell) is connected to the cell it's on (the accursed cell); the user cannot change connections on the cursor dimension, except by explicitly moving the cursor, but the cursor dimension can be viewed like any other dimension.",
      "id": "a472ce9942381018895160d64b422416"
    },
    {
      "type": "html",
      "text": "The \"Clone\" dimension, d.clone, is the dimension on which a cloned cell is always connected to its original; this connection is enforced by the system, so you cannot disconnect a clone from its master, though you can rearrange clones on the clone dimension.  <i>Note that editing any clone or its master changes all the others of outs chain</i> -- i.e., any clones of that same master, and the master itself, all are changed identically if any is changed.",
      "id": "82754192bd64a4d52847b6db3538b85d"
    },
    {
      "type": "html",
      "text": "Making Links to existing pages require that you clone the cell.\nSo the viewing the Clone-Dimension you see the  \"Backlinks\" of that\nCell.",
      "id": "d494d7009c9fb90d23c04d2b7abeb32d"
    },
    {
      "type": "html",
      "text": "The \"Mark\" dimension (not implemented) will be for marking cells, especially strips and groups of cells, in preparation for some operation.  The marked cells will have other cells (marking cells) connected to them on the Mark dimension.",
      "id": "9899f1832dc625ca8c5a4cb1d5b18090"
    },
    {
      "type": "html",
      "text": "The \"Contain\" dimension, d.contain, is the dimension representing containment: we represent cell A as being inside cell B by connecting it posward from B on the Contain dimension.  (In the next version it will be called d.inside.)",
      "id": "64a996ba157b844e71c24539a39f6a7a"
    },
    {
      "type": "html",
      "text": "The \"Contain2\" dimension (which willl be called \"d.contents\" in tne next version) allows a given cell to contain more than one thing. Anything contained after the first cell contained is posward on d.contain2 from the first cell contained.",
      "id": "75b8d198ba939dc758f41753588a023b"
    },
    {
      "type": "html",
      "text": "By looking at these specific connections, the system quickly determines what a cell contains or is contained by.",
      "id": "2c0621e3e3dca7ce81430ac323eadb41"
    },
    {
      "type": "html",
      "text": "\nThis looks very interesting... but I have to really use the system\nto actually understand it. -- [[Marcus Denker]]",
      "id": "c521d23b00701556156281b73d4452f4"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "See also [http://gzigzag.sourceforge.net gzigzag.sourceforge.net]. There are several informative postscript documents as well as an early (as of 3/13) version implemented in Java (available from the CVS repository). -- [[Brian Theado]]",
      "id": "d78ebb9198d7fa4deba6286fd35ff53b"
    },
    {
      "type": "html",
      "text": "\nNote that gzigzag is now known as gzz, see [http://www.nongnu.org/gzz/ www.nongnu.org] (due to a trademark conflict with [[Ted Nelson]]). 0.8alpha should be out soon (tm); besides a jar bundle, there's a high-end graphical version based on opengl, and underlying Xanadu coming up as a p2p network hopefully.. -- [[Toni Alatalo]]",
      "id": "a40be9987ea781e211d83aa00f4287f5"
    },
    {
      "type": "html",
      "text": "\nIt appears that gzz development has ceased. The reason given is that the data structure underlying [[Zig Zag]] is patented, and not available for use under a licence that would enable open source development. Seems like a pity.",
      "id": "ebb4626d59cb381ac97a0d2a91c35169"
    },
    {
      "type": "html",
      "text": "(2005) gzz has been superseded by Fenfire. [http://www.fenfire.org/ www.fenfire.org]",
      "id": "4a11b389633a9b99fcd868775615a121"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "\nTry out [[Zig Zag]] online - a dynamic [[Java Script]]/XML implementation of [[Ted Nelson]]'s [[Zig Zag]] data navigation scheme, at [http://www.ecs.soton.ac.uk/~lac/zigzag/ www.ecs.soton.ac.uk].",
      "id": "9f6e718d7349b06d554c39ff8b0065cc"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "\nAnd my response to all the people above so desperately peddling zigzag is a big fat YAWN. How stupid do these people think we are, that we'd invest time in some product based on a hyped up description of <i>what</i> it is, which we really don't care about, when we don't even know what the hell it's <i>for</i>? Oh wait, they were stupid enough to do that. They don't provide one single reason why anyone should go to the trouble of trying out zigzag, and given Ted Nelson's penchant for grossly overhyped crap, I'm not giving him any benefit of the doubt.",
      "id": "dceebd5a061b4cbddc2131b765292d94"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "722fbb5f50d48c6f67c48956da706b2d"
    },
    {
      "type": "html",
      "text": "[[Category Creativity]]",
      "id": "ff897bf14c929717102dc79bf4e028da"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ZigZag c2.com]",
      "id": "1bc13f2281678c0ce0f5e7c4ed02aa1d"
    }
  ],
  "journal": [
    {
      "date": 1122221451000,
      "id": "8754b5dd1faa866b5cebfb9ba4261012",
      "type": "create",
      "item": {
        "title": "Zig Zag",
        "story": [
          {
            "type": "html",
            "text": "The XANADU(R) ZIGZAG(TM) Hyperstructure Kit is available as shareware for $25. The download for the PC will write a Linux boot floppy disk that contains the software.",
            "id": "5080d7c17e51d7575e68ba2543a69804"
          },
          {
            "type": "html",
            "text": " [http://www.xanadu.net/zigzag/ www.xanadu.net] <i>- Check out the tutorial!</i>",
            "id": "2fc89988fa143e66ab4959304b7e6acf"
          },
          {
            "type": "html",
            "text": "<b>[[Zig Zag]] has been playing on my mind lately. It is a excellent and elegant solution to a number of problems. I recommend checking it out.</b>",
            "id": "620fac89230651fcd622ef074ce21ad0"
          },
          {
            "type": "html",
            "text": "<i>From their website ...</i>",
            "id": "303187022271489b8fb85e79d3eaea47"
          },
          {
            "type": "html",
            "text": "\nZigzag 0.53 is a very early version of a very unusual piece of software by [[Ted Nelson]]. ",
            "id": "b0d2cbe8a85063426955b8a09197a0bb"
          },
          {
            "type": "html",
            "text": "<b>...VERY SIMPLE and yet VERY HARD TO EXPLAIN. (These two properties are signs of a new paradigm.)</b>",
            "id": "ae1e0697369b769a82a97c9250b77fbf"
          },
          {
            "type": "html",
            "text": "\nThough perhaps also of poor communication skills.",
            "id": "51e181ebbf4718c5be4e043763eb08b5"
          },
          {
            "type": "html",
            "text": "<i>MIT's Technology Review asks ...</i>",
            "id": "59581f7a16223b3a6763ba325ca6439e"
          },
          {
            "type": "html",
            "text": "\nThe visionary who dreamed up hypertext has never delivered\nany software... until now. Will [[Zig Zag]] pass the test? ",
            "id": "a0fae48508587f94606e78276a7d5c82"
          },
          {
            "type": "html",
            "text": " [http://www.technologyreview.com/articles/ditlea0998.asp www.technologyreview.com]",
            "id": "bb113f53f1ec0b708a4d9246edd223e6"
          },
          {
            "type": "html",
            "text": "<i>Article now requires subscription</i>",
            "id": "3ef94c53796cfbf8f356818396fda862"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "Hmm, is this really so difficult to explain? It seems that a particular \"rank\" of connected cells behaves exactly like a doubly-linked list.  But a given cell may form a part of many such ranks. Cells distinguish the ranks that they are in using a classifier called \"dimension\". ",
            "id": "93079642d4923feb987a5f4c649e8d44"
          },
          {
            "type": "html",
            "text": "\nThe conventions for producing human-readable views onto this very general structure work by mapping the three dimensions currently chosen by the user onto three orthogonal directions in space. That's quite cute. And it's nice that the model doesn't need to appeal to anything else to be useful: the idea of representing the currently selected cells by linking each one of them to a cell in a rank joined along the selection dimension is nice.",
            "id": "27bbc6571beb1bca2ded5d3b66bd0047"
          },
          {
            "type": "html",
            "text": "\nThe explanations given in the tutorial seem obfuscated by the continual claims that ZZspace is not like this, not like that, and in fact not like anything else whatsoever in the world. Ironically, the claimed \"paradoxical\" properties of ZZspace, particularly that two or more ranks can share more than one cell, seem to be an artifact of trying to present ranks as if traversing them corresponded to movement in a direction (which we're explicitly told it doesn't).",
            "id": "a22605116ffd2d76e3beb26317d98288"
          },
          {
            "type": "html",
            "text": "\nIt would be interesting to know where the Zig Zag idea came from. It seems as if one could possibly get there by starting with the idea of a doubly-linked list, then relaxing the implicit constraint that a cell has only the one pair of pointers. That kind of thing is very very hard, exactly because the constraint is so well hidden.",
            "id": "5c0eb523269103427ace794b76183a90"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "<i>The following deals with the current prototype. If you are interested in the underlying principle - of course you are! - first read the tutorial at the website mentioned above.</i>",
            "id": "4755d51d680be5d389b3eb11676659c3"
          },
          {
            "type": "html",
            "text": "\nI have tried to understand what this zigzag thing is all about.\nI think I understand the concept somehow, but its very hard to describe... ",
            "id": "d0c2971513039bfa87fdc663a9984dc6"
          },
          {
            "type": "html",
            "text": "Starting zigzag, you will see two roughly equeal Windows, the left is called \"Action Window\", the one on the right \"Data Window\"",
            "id": "6e9673c9714a03d820257634b125afdd"
          },
          {
            "type": "html",
            "text": "\nHey, its textmode, so here you see it:",
            "id": "9992e47197d5fffe0255c42f7055089e"
          },
          {
            "type": "code",
            "text": " +---------- Action Window (I) --------+------------- Data Window (I) --------+\n |+---> +d.1                           |+---> +d.1                            |\n ||\\                                   ||\\                                    |\n || \\| +d.3                            || \\| +d.3                             |\n |V -+                                 |V -+                                  |\n |+d.2                                 |+d.2                                  |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n |                                     |                                      |\n | d.1- Midden - Home                  |  d.1 - Midden - Home                 |\n |                  |                  |                   |                  |\n |               #Edit - #Clone        |                #Edit q#Clone         |\n |                  |                  |                   |                  |\n |               #L-insq#R-insq#U-ins  |                #L-insq#R-insq#U-ins  |\n |                  |                  |                   |                  |\n |               #Deletq#L-breq#R-bre  |                #Deletq#L-breq#R-bre  |\n |                  |                  |                   |                  |\n |               #Mark                 |                #Mark                 |\n |                  |                  |                   |                  |\n |               #L-Hopq#R-Hopq#U-Hop  |                #L-Hopq#R-Hopq#U-Hop  |\n +-----------------------------------0-+-------------------------------------0+",
            "id": "9f2a1e4d2c9aa771e9d2a2447579c072"
          },
          {
            "type": "html",
            "text": "\nThere are two cursors, an \"action cursor\" associated with the left \nWindow, and a Data-cursor, for the right.\nYou can move the action-courser on the right with keys esfc, the\nData-courser on the left simply with the arrow-keys.",
            "id": "eb889c349860c4ac1b19f3482c739ea2"
          },
          {
            "type": "html",
            "text": "\nZigzag is about single pieces of Information called \"cells\". These\ncells can be created, edited and deleted.",
            "id": "905b2af34b0c6c7235297a1bc421fb21"
          },
          {
            "type": "html",
            "text": "\nPressing \"Enter\" will evaluate the content of the Cell the\nAction-cursor points at. (If its a command-cell, which start with \"#\")",
            "id": "be51f054c75fbfe837161cfb1791f3a3"
          },
          {
            "type": "html",
            "text": "\nPressing <CTRL>-k fires up vi, so you can edit the Cell, (big K for\nleft Window). q/Q will show a small rectangle with the content of\nthe cell.",
            "id": "cd555926cdb85aa895d9014d426719f4"
          },
          {
            "type": "html",
            "text": "\nLinks can be made between Cells. The interesting thing is, that\nthese Links are categorized using \"Dimensions\".",
            "id": "339bbda18cd749c6a89e163cdd22aa2f"
          },
          {
            "type": "html",
            "text": "\nQuote: STRUCTURE DIMENSIONS",
            "id": "414405136736abb6f0621073cd6b4977"
          },
          {
            "type": "html",
            "text": "The cell structure may have any number of dimensions, though the system begins with only seven (d.1, d.2, d.3, d.cursor, d.clone, d.mark, d.contain, d.contain2). (The functions of these are explained at the end.)",
            "id": "1b4312fda28550f42c7f7ab8a35dd329"
          },
          {
            "type": "html",
            "text": "\nTwo off these Dimensions are visualised by displaying a two-demensional\ngraph of the cell-structure on the screen.",
            "id": "984ff786f727a466acceb0b69081cf56"
          },
          {
            "type": "html",
            "text": "\nQuote: VIEWING AXES",
            "id": "e1317afd3e38c8e05079f7bfaa3b4aa6"
          },
          {
            "type": "html",
            "text": "There are three viewing axes: x, y and z. The current view in each window maps the cell structure to the viewing axes, assigning these three axes to whatever structure dimensions you specify.",
            "id": "c4b5d08b4facc086f773c21221492171"
          },
          {
            "type": "html",
            "text": "\nVIEWING THE STRUCTURE DIMENSIONS",
            "id": "69c816a8287a2209466325d1cc9eebd6"
          },
          {
            "type": "html",
            "text": "You may quickly change the mapping of the [[Zig Zag]] world's dimensions to the window's viewing axes.",
            "id": "ed5312cc4082b515f477ccd681c92f51"
          },
          {
            "type": "html",
            "text": "Typing x, y or z in lower case causes the view in the right window to step by one dimension on the specified viewing axis (x, y or z).  Typing X, Y or Z in upper case causes the view in the left window to step by one dimension in the specified viewing axis (X, Y or Z)",
            "id": "e5d2d0d206ced54bf351be15a3e2cc4b"
          },
          {
            "type": "html",
            "text": "\nDIMENSION FUNCTIONS.",
            "id": "9e68a88ec37cc82d2db240a385ba8912"
          },
          {
            "type": "html",
            "text": "Structure dimensions d.1, d.2 and d.3 have no assigned functions.  Think of d.1 as useful for headings, d.2 as useful for virtual lists, d.1 and d.2 together for ordinary tables and very interesting basket-weave structures, and d.3 as a third dimension.",
            "id": "c988b0b63ec62d48eb198466ed308bad"
          },
          {
            "type": "html",
            "text": "The \"Cursor\" dimension, d.cursor, is the dimension on which a cursor (actually a cell) is connected to the cell it's on (the accursed cell); the user cannot change connections on the cursor dimension, except by explicitly moving the cursor, but the cursor dimension can be viewed like any other dimension.",
            "id": "a472ce9942381018895160d64b422416"
          },
          {
            "type": "html",
            "text": "The \"Clone\" dimension, d.clone, is the dimension on which a cloned cell is always connected to its original; this connection is enforced by the system, so you cannot disconnect a clone from its master, though you can rearrange clones on the clone dimension.  <i>Note that editing any clone or its master changes all the others of outs chain</i> -- i.e., any clones of that same master, and the master itself, all are changed identically if any is changed.",
            "id": "82754192bd64a4d52847b6db3538b85d"
          },
          {
            "type": "html",
            "text": "Making Links to existing pages require that you clone the cell.\nSo the viewing the Clone-Dimension you see the  \"Backlinks\" of that\nCell.",
            "id": "d494d7009c9fb90d23c04d2b7abeb32d"
          },
          {
            "type": "html",
            "text": "The \"Mark\" dimension (not implemented) will be for marking cells, especially strips and groups of cells, in preparation for some operation.  The marked cells will have other cells (marking cells) connected to them on the Mark dimension.",
            "id": "9899f1832dc625ca8c5a4cb1d5b18090"
          },
          {
            "type": "html",
            "text": "The \"Contain\" dimension, d.contain, is the dimension representing containment: we represent cell A as being inside cell B by connecting it posward from B on the Contain dimension.  (In the next version it will be called d.inside.)",
            "id": "64a996ba157b844e71c24539a39f6a7a"
          },
          {
            "type": "html",
            "text": "The \"Contain2\" dimension (which willl be called \"d.contents\" in tne next version) allows a given cell to contain more than one thing. Anything contained after the first cell contained is posward on d.contain2 from the first cell contained.",
            "id": "75b8d198ba939dc758f41753588a023b"
          },
          {
            "type": "html",
            "text": "By looking at these specific connections, the system quickly determines what a cell contains or is contained by.",
            "id": "2c0621e3e3dca7ce81430ac323eadb41"
          },
          {
            "type": "html",
            "text": "\nThis looks very interesting... but I have to really use the system\nto actually understand it. -- [[Marcus Denker]]",
            "id": "c521d23b00701556156281b73d4452f4"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "See also [http://gzigzag.sourceforge.net gzigzag.sourceforge.net]. There are several informative postscript documents as well as an early (as of 3/13) version implemented in Java (available from the CVS repository). -- [[Brian Theado]]",
            "id": "d78ebb9198d7fa4deba6286fd35ff53b"
          },
          {
            "type": "html",
            "text": "\nNote that gzigzag is now known as gzz, see [http://www.nongnu.org/gzz/ www.nongnu.org] (due to a trademark conflict with [[Ted Nelson]]). 0.8alpha should be out soon (tm); besides a jar bundle, there's a high-end graphical version based on opengl, and underlying Xanadu coming up as a p2p network hopefully.. -- [[Toni Alatalo]]",
            "id": "a40be9987ea781e211d83aa00f4287f5"
          },
          {
            "type": "html",
            "text": "\nIt appears that gzz development has ceased. The reason given is that the data structure underlying [[Zig Zag]] is patented, and not available for use under a licence that would enable open source development. Seems like a pity.",
            "id": "ebb4626d59cb381ac97a0d2a91c35169"
          },
          {
            "type": "html",
            "text": "(2005) gzz has been superseded by Fenfire. [http://www.fenfire.org/ www.fenfire.org]",
            "id": "4a11b389633a9b99fcd868775615a121"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "\nTry out [[Zig Zag]] online - a dynamic [[Java Script]]/XML implementation of [[Ted Nelson]]'s [[Zig Zag]] data navigation scheme, at [http://www.ecs.soton.ac.uk/~lac/zigzag/ www.ecs.soton.ac.uk].",
            "id": "9f6e718d7349b06d554c39ff8b0065cc"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "\nAnd my response to all the people above so desperately peddling zigzag is a big fat YAWN. How stupid do these people think we are, that we'd invest time in some product based on a hyped up description of <i>what</i> it is, which we really don't care about, when we don't even know what the hell it's <i>for</i>? Oh wait, they were stupid enough to do that. They don't provide one single reason why anyone should go to the trouble of trying out zigzag, and given Ted Nelson's penchant for grossly overhyped crap, I'm not giving him any benefit of the doubt.",
            "id": "dceebd5a061b4cbddc2131b765292d94"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "722fbb5f50d48c6f67c48956da706b2d"
          },
          {
            "type": "html",
            "text": "[[Category Creativity]]",
            "id": "ff897bf14c929717102dc79bf4e028da"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ZigZag c2.com]",
            "id": "1bc13f2281678c0ce0f5e7c4ed02aa1d"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "project.sfw.c2.com",
      "date": 1627423847034
    }
  ]
}