{
  "title": "Model-View-Update-Communicate",
  "story": [
    {
      "type": "paragraph",
      "id": "2bc1002c8e9c50cc",
      "text": "Session types are a type discipline for communication channel endpoints which allow conformance to protocols to be checked statically. Safely implementing session types requires linearity, usually in the form of a linear type system. Unfortunately, linear typing is difficult to integrate with graphical user interfaces (GUIs), and to date most programs using session types are command line applications."
    },
    {
      "type": "paragraph",
      "id": "c487d7b060618c0c",
      "text": "In this paper, we propose the first principled integration of session typing and GUI development by building upon the [[Model-View-Update]] (MVU) architecture, pioneered by the [[Elm]] programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server. arXiv:1910.11108 [cs]"
    },
    {
      "type": "pagefold",
      "id": "6f23ae5a08f58e86",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "62928012c4d3da24",
      "text": "FOWLER, Simon, 2020. Model-View-Update-Communicate: Session Types meet the Elm Architecture. Online. 29 May 2020. arXiv. arXiv:1910.11108. [Accessed 10 October 2023]."
    },
    {
      "type": "paragraph",
      "id": "050f21bebe0b368a",
      "text": "The lack of a principled integration of GUI applications and session types is a significant barrier to their adoption. In this paper, we bridge this gap by extending the [[Model-View-Update]] (MVU) architecture, pioneered by the [[Elm]] programming language, to support linear resources."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Model-View-Update-Communicate",
        "story": []
      },
      "date": 1696946830354
    },
    {
      "id": "62928012c4d3da24",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "62928012c4d3da24",
        "text": "FOWLER, Simon, 2020. [[Model-View-Update-Communicate]]: Session Types meet the Elm Architecture. Online. 29 May 2020. arXiv. arXiv:1910.11108. [Accessed 10 October 2023]. Session types are a type discipline for communication channel endpoints which allow conformance to protocols to be checked statically. Safely implementing session types requires linearity, usually in the form of a linear type system. Unfortunately, linear typing is difficult to integrate with graphical user interfaces (GUIs), and to date most programs using session types are command line applications. In this paper, we propose the first principled integration of session typing and GUI development by building upon the Model-View-Update (MVU) architecture, pioneered by the Elm programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.arXiv:1910.11108 [cs]\n"
      },
      "attribution": {
        "page": "2023-10-10"
      },
      "date": 1696946835475
    },
    {
      "type": "edit",
      "id": "62928012c4d3da24",
      "item": {
        "type": "paragraph",
        "id": "62928012c4d3da24",
        "text": "FOWLER, Simon, 2020. [[Model-View-Update-Communicate]]: Session Types meet the Elm Architecture. Online. 29 May 2020. arXiv. arXiv:1910.11108. [Accessed 10 October 2023]."
      },
      "date": 1696946843647
    },
    {
      "type": "add",
      "id": "2bc1002c8e9c50cc",
      "item": {
        "type": "paragraph",
        "id": "2bc1002c8e9c50cc",
        "text": "Session types are a type discipline for communication channel endpoints which allow conformance to protocols to be checked statically. Safely implementing session types requires linearity, usually in the form of a linear type system. Unfortunately, linear typing is difficult to integrate with graphical user interfaces (GUIs), and to date most programs using session types are command line applications. In this paper, we propose the first principled integration of session typing and GUI development by building upon the Model-View-Update (MVU) architecture, pioneered by the Elm programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.arXiv:1910.11108 [cs]"
      },
      "after": "62928012c4d3da24",
      "date": 1696946843998
    },
    {
      "id": "2bc1002c8e9c50cc",
      "type": "move",
      "order": [
        "2bc1002c8e9c50cc",
        "62928012c4d3da24"
      ],
      "date": 1696946845493
    },
    {
      "item": {
        "type": "factory",
        "id": "6f23ae5a08f58e86"
      },
      "id": "6f23ae5a08f58e86",
      "type": "add",
      "after": "62928012c4d3da24",
      "date": 1696946847476
    },
    {
      "id": "6f23ae5a08f58e86",
      "type": "move",
      "order": [
        "2bc1002c8e9c50cc",
        "6f23ae5a08f58e86",
        "62928012c4d3da24"
      ],
      "date": 1696946849341
    },
    {
      "type": "edit",
      "id": "6f23ae5a08f58e86",
      "item": {
        "type": "pagefold",
        "id": "6f23ae5a08f58e86",
        "text": "~"
      },
      "date": 1696946852761
    },
    {
      "type": "edit",
      "id": "62928012c4d3da24",
      "item": {
        "type": "paragraph",
        "id": "62928012c4d3da24",
        "text": "FOWLER, Simon, 2020. Model-View-Update-Communicate: Session Types meet the Elm Architecture. Online. 29 May 2020. arXiv. arXiv:1910.11108. [Accessed 10 October 2023]."
      },
      "date": 1696946863458
    },
    {
      "type": "edit",
      "id": "2bc1002c8e9c50cc",
      "item": {
        "type": "paragraph",
        "id": "2bc1002c8e9c50cc",
        "text": "Session types are a type discipline for communication channel endpoints which allow conformance to protocols to be checked statically. Safely implementing session types requires linearity, usually in the form of a linear type system. Unfortunately, linear typing is difficult to integrate with graphical user interfaces (GUIs), and to date most programs using session types are command line applications."
      },
      "date": 1696946889140
    },
    {
      "type": "add",
      "id": "c487d7b060618c0c",
      "item": {
        "type": "paragraph",
        "id": "c487d7b060618c0c",
        "text": "In this paper, we propose the first principled integration of session typing and GUI development by building upon the Model-View-Update (MVU) architecture, pioneered by the Elm programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.arXiv:1910.11108 [cs]"
      },
      "after": "2bc1002c8e9c50cc",
      "date": 1696946889765
    },
    {
      "type": "edit",
      "id": "c487d7b060618c0c",
      "item": {
        "type": "paragraph",
        "id": "c487d7b060618c0c",
        "text": "In this paper, we propose the first principled integration of session typing and GUI development by building upon the [[Model-View-Update]] (MVU) architecture, pioneered by the Elm programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.arXiv:1910.11108 [cs]"
      },
      "date": 1696946910003
    },
    {
      "type": "edit",
      "id": "c487d7b060618c0c",
      "item": {
        "type": "paragraph",
        "id": "c487d7b060618c0c",
        "text": "In this paper, we propose the first principled integration of session typing and GUI development by building upon the [[Model-View-Update]] (MVU) architecture, pioneered by the [[Elm]] programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server.arXiv:1910.11108 [cs]"
      },
      "date": 1696946920290
    },
    {
      "type": "edit",
      "id": "c487d7b060618c0c",
      "item": {
        "type": "paragraph",
        "id": "c487d7b060618c0c",
        "text": "In this paper, we propose the first principled integration of session typing and GUI development by building upon the [[Model-View-Update]] (MVU) architecture, pioneered by the [[Elm]] programming language. We introduce $lambda_{textsf{MVU}}$, the first formal model of the MVU architecture, and prove it sound. By extending $lambda_{textsf{MVU}}$ with emph{commands} as found in Elm, along with emph{linearity} and emph{model transitions}, we show the first formal integration of session typing and GUI programming. We implement our approach in the Links web programming language, and show examples including a two-factor authentication workflow and multi-room chat server. arXiv:1910.11108 [cs]"
      },
      "date": 1696946940563
    },
    {
      "item": {
        "type": "factory",
        "id": "050f21bebe0b368a"
      },
      "id": "050f21bebe0b368a",
      "type": "add",
      "after": "62928012c4d3da24",
      "date": 1696946970404
    },
    {
      "type": "edit",
      "id": "050f21bebe0b368a",
      "item": {
        "type": "paragraph",
        "id": "050f21bebe0b368a",
        "text": "In this paper, we bridge this gap by extending the Model-ViewUpdate (MVU) architecture, pioneered by the Elm programming language, to support linear resources."
      },
      "date": 1696946972162
    },
    {
      "type": "edit",
      "id": "050f21bebe0b368a",
      "item": {
        "type": "paragraph",
        "id": "050f21bebe0b368a",
        "text": "The lack of a principled integration of GUI applications and session types is a significant barrier to their adoption. In this paper, we bridge this gap by extending the Model-ViewUpdate (MVU) architecture, pioneered by the Elm programming language, to support linear resources."
      },
      "date": 1696946989824
    },
    {
      "type": "edit",
      "id": "050f21bebe0b368a",
      "item": {
        "type": "paragraph",
        "id": "050f21bebe0b368a",
        "text": "The lack of a principled integration of GUI applications and session types is a significant barrier to their adoption. In this paper, we bridge this gap by extending the [[Model-View-Update][ (MVU) architecture, pioneered by the Elm programming language, to support linear resources."
      },
      "date": 1696947012891
    },
    {
      "type": "edit",
      "id": "050f21bebe0b368a",
      "item": {
        "type": "paragraph",
        "id": "050f21bebe0b368a",
        "text": "The lack of a principled integration of GUI applications and session types is a significant barrier to their adoption. In this paper, we bridge this gap by extending the [[Model-View-Update]] (MVU) architecture, pioneered by the Elm programming language, to support linear resources."
      },
      "date": 1696947018030
    },
    {
      "type": "edit",
      "id": "050f21bebe0b368a",
      "item": {
        "type": "paragraph",
        "id": "050f21bebe0b368a",
        "text": "The lack of a principled integration of GUI applications and session types is a significant barrier to their adoption. In this paper, we bridge this gap by extending the [[Model-View-Update]] (MVU) architecture, pioneered by the [[Elm]] programming language, to support linear resources."
      },
      "date": 1696947036259
    }
  ]
}