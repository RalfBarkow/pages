{
  "title": "Boundary Logic",
  "story": [
    {
      "type": "markdown",
      "id": "c34ff7ff2a129b94",
      "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, [[Karnaugh Map]]s, and circuit schematics. BL is an iconic depiction of the mathematical concept of [[Enclosure]], interpreted as the logical operation IMPLIES. See:\n"
    },
    {
      "type": "reference",
      "id": "5b6ebd58e6033d28",
      "site": "wiki.ralfbarkow.ch",
      "slug": "boundary-logic-from-the-beginning",
      "title": "Boundary Logic from the Beginning",
      "text": "BRICKEN, William, 2001. Boundary Logic from the Beginning. September 2001, updated October 2002. [https://www.wbricken.com/pdfs/01bm/01math/01bl-about/01bl-from-begin-sbin.pdf pdf]"
    },
    {
      "type": "pagefold",
      "id": "115e561298fab66e",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "0a83418bf1a92d90",
      "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two [[Operator]]s as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation."
    },
    {
      "type": "code",
      "id": "2f04d93fd1855762",
      "text": "a OR b is ab \nNOT a is (a)"
    },
    {
      "type": "markdown",
      "id": "131cf03a09560b65",
      "text": "As space, *OR* implicitly has commutative and associative properties. \n"
    },
    {
      "type": "markdown",
      "id": "7fa9a8e199a6b0e8",
      "text": "Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the [[void]], represents the logical *FALSE*. Thus, a boundary around [[Nothing]] represents *NOT FALSE*, which is *TRUE*. \n"
    },
    {
      "type": "markdown",
      "id": "f7a9ce53899eade4",
      "text": "Other propositional connectives can be constructed from this basis:"
    },
    {
      "type": "code",
      "id": "5669d712b0a93948",
      "text": "IF a THEN b is (a) b"
    },
    {
      "type": "paragraph",
      "id": "cb319e9a3b3cae7c",
      "text": "With the semantics of boundary logic understood, manipulating logic is simple. The axioms for boundary logic are shown in Figure 1 using parenthesis to draw boundaries [3]. These axioms were chosen for visual clarity; each requires only erasure to simplify."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Boundary Logic",
        "story": []
      },
      "date": 1659265919036
    },
    {
      "item": {
        "type": "factory",
        "id": "c34ff7ff2a129b94"
      },
      "id": "c34ff7ff2a129b94",
      "type": "add",
      "date": 1659265921871
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "paragraph",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: space provides the OR operation;boundaries provide the NOT operation"
      },
      "date": 1659265923865
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "paragraph",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: space provides the *OR* operation;boundaries provide the *NOT* operation"
      },
      "date": 1659265947670
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: space provides the *OR* operation;boundaries provide the *NOT* operation"
      },
      "date": 1659265949063
    },
    {
      "item": {
        "type": "factory",
        "id": "2f04d93fd1855762"
      },
      "id": "2f04d93fd1855762",
      "type": "add",
      "after": "c34ff7ff2a129b94",
      "date": 1659266087048
    },
    {
      "type": "edit",
      "id": "2f04d93fd1855762",
      "item": {
        "type": "code",
        "id": "2f04d93fd1855762",
        "text": "aORb is ab NOTa is (a)"
      },
      "date": 1659266091889
    },
    {
      "type": "edit",
      "id": "2f04d93fd1855762",
      "item": {
        "type": "code",
        "id": "2f04d93fd1855762",
        "text": "aORb is ab \nNOTa is (a)"
      },
      "date": 1659266099994
    },
    {
      "type": "edit",
      "id": "2f04d93fd1855762",
      "item": {
        "type": "code",
        "id": "2f04d93fd1855762",
        "text": "a *OR* b is ab \nNOTa is (a)"
      },
      "date": 1659266118467
    },
    {
      "type": "edit",
      "id": "2f04d93fd1855762",
      "item": {
        "type": "code",
        "id": "2f04d93fd1855762",
        "text": "a OR b is ab \nNOT a is (a)"
      },
      "date": 1659266127987
    },
    {
      "item": {
        "type": "factory",
        "id": "131cf03a09560b65"
      },
      "id": "131cf03a09560b65",
      "type": "add",
      "after": "2f04d93fd1855762",
      "date": 1659266155037
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "paragraph",
        "id": "131cf03a09560b65",
        "text": " As space, OR implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical FALSE. Thus, a boundary around nothing represents NOT FALSE, which is TRUE. Other propositional connectives can be constructed from this basis"
      },
      "date": 1659266157407
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "paragraph",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical FALSE. Thus, a boundary around nothing represents NOT FALSE, which is TRUE. Other propositional connectives can be constructed from this basis"
      },
      "date": 1659266168823
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "paragraph",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical *FALSE*. Thus, a boundary around nothing represents NOT FALSE, which is TRUE. Other propositional connectives can be constructed from this basis"
      },
      "date": 1659266191271
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "paragraph",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical *FALSE*. Thus, a boundary around nothing represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis"
      },
      "date": 1659266213683
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "markdown",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical *FALSE*. Thus, a boundary around nothing represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis"
      },
      "date": 1659266215080
    },
    {
      "item": {
        "type": "factory",
        "id": "5669d712b0a93948"
      },
      "id": "5669d712b0a93948",
      "type": "add",
      "after": "131cf03a09560b65",
      "date": 1659266225480
    },
    {
      "type": "edit",
      "id": "5669d712b0a93948",
      "item": {
        "type": "code",
        "id": "5669d712b0a93948",
        "text": "IF a THEN b is (a)b"
      },
      "date": 1659266236096
    },
    {
      "type": "edit",
      "id": "5669d712b0a93948",
      "item": {
        "type": "code",
        "id": "5669d712b0a93948",
        "text": "IF a THEN b is (a) b"
      },
      "date": 1659266242572
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "markdown",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical *FALSE*. Thus, a boundary around nothing represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis:"
      },
      "date": 1659266246061
    },
    {
      "item": {
        "type": "factory",
        "id": "cb319e9a3b3cae7c"
      },
      "id": "cb319e9a3b3cae7c",
      "type": "add",
      "after": "5669d712b0a93948",
      "date": 1659266267104
    },
    {
      "type": "edit",
      "id": "cb319e9a3b3cae7c",
      "item": {
        "type": "paragraph",
        "id": "cb319e9a3b3cae7c",
        "text": "With the semantics of boundary logic understood, manipulating logic is simple. The axioms for boundary logic are shown in Figure 1 using parenthesis to draw boundaries [3]. These axioms were c-hosen for visual "
      },
      "date": 1659266269913
    },
    {
      "type": "edit",
      "id": "cb319e9a3b3cae7c",
      "item": {
        "type": "paragraph",
        "id": "cb319e9a3b3cae7c",
        "text": "With the semantics of boundary logic understood, manipulating logic is simple. The axioms for boundary logic are shown in Figure 1 using parenthesis to draw boundaries [3]. These axioms were chosen for visual clarity."
      },
      "date": 1659266291791
    },
    {
      "type": "edit",
      "id": "cb319e9a3b3cae7c",
      "item": {
        "type": "paragraph",
        "id": "cb319e9a3b3cae7c",
        "text": "With the semantics of boundary logic understood, manipulating logic is simple. The axioms for boundary logic are shown in Figure 1 using parenthesis to draw boundaries [3]. These axioms were chosen for visual clarity; each requires only erasure to simplify."
      },
      "date": 1659266316230
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: space provides the *OR* operation; boundaries provide the *NOT* operation"
      },
      "date": 1673348896201
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. \n"
      },
      "date": 1673531429969
    },
    {
      "type": "add",
      "id": "1787af8ba06ed69e",
      "item": {
        "type": "markdown",
        "id": "1787af8ba06ed69e",
        "text": "It uses two operators as a minimal basis for elementary logic: space provides the *OR* operation; boundaries provide the *NOT* operation"
      },
      "after": "c34ff7ff2a129b94",
      "date": 1673531431133
    },
    {
      "type": "remove",
      "id": "1787af8ba06ed69e",
      "date": 1673531447471
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: space provides the *OR* operation; boundaries provide the *NOT* operation"
      },
      "date": 1673531450437
    },
    {
      "type": "edit",
      "id": "131cf03a09560b65",
      "item": {
        "type": "markdown",
        "id": "131cf03a09560b65",
        "text": "As space, *OR* implicitly has commutative and associative properties. \n"
      },
      "date": 1673531481933
    },
    {
      "type": "add",
      "id": "7fa9a8e199a6b0e8",
      "item": {
        "type": "markdown",
        "id": "7fa9a8e199a6b0e8",
        "text": "Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the void, represents the logical *FALSE*. Thus, a boundary around nothing represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis:"
      },
      "after": "131cf03a09560b65",
      "date": 1673531483145
    },
    {
      "type": "edit",
      "id": "7fa9a8e199a6b0e8",
      "item": {
        "type": "markdown",
        "id": "7fa9a8e199a6b0e8",
        "text": "Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the [[void]], represents the logical *FALSE*. Thus, a boundary around nothing represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis:"
      },
      "date": 1673531509056
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary notation. It uses two operators as a minimal basis for elementary logic: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation"
      },
      "date": 1673531569396
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two operators as a minimal basis for elementary logic: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation"
      },
      "date": 1673531743865
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two operators as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation"
      },
      "date": 1673531779690
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two [[operators]] as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation"
      },
      "date": 1673531819505
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two [[Operator]]s as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation"
      },
      "date": 1673531831428
    },
    {
      "type": "edit",
      "id": "7fa9a8e199a6b0e8",
      "item": {
        "type": "markdown",
        "id": "7fa9a8e199a6b0e8",
        "text": "Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the [[void]], represents the logical *FALSE*. Thus, a boundary around [[Nothing]] represents *NOT FALSE*, which is *TRUE*. Other propositional connectives can be constructed from this basis:"
      },
      "date": 1673532017605
    },
    {
      "type": "edit",
      "id": "7fa9a8e199a6b0e8",
      "item": {
        "type": "markdown",
        "id": "7fa9a8e199a6b0e8",
        "text": "Boundaries denote a space whose contents are logically inverted, the demarcation between what is and what is not. A space without contents, the [[void]], represents the logical *FALSE*. Thus, a boundary around [[Nothing]] represents *NOT FALSE*, which is *TRUE*. \n"
      },
      "date": 1673532355328
    },
    {
      "type": "add",
      "id": "f7a9ce53899eade4",
      "item": {
        "type": "markdown",
        "id": "f7a9ce53899eade4",
        "text": "Other propositional connectives can be constructed from this basis:"
      },
      "after": "7fa9a8e199a6b0e8",
      "date": 1673532356270
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two [[Operator]]s as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation."
      },
      "date": 1673532715296
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, Karnaugh maps, and circuit schematics. BL is an iconic depiction of the mathematical concept of enclosure, interpreted as the logical operation IMPLIES.\n"
      },
      "date": 1674991715828
    },
    {
      "type": "add",
      "id": "0a83418bf1a92d90",
      "item": {
        "type": "markdown",
        "id": "0a83418bf1a92d90",
        "text": "Boundary logic is propositional logic interpreted using boundary [[Notation]]. It uses two [[Operator]]s as a minimal basis for elementary [[Logic]]: [[Space]] provides the *OR* operation; [[Boundaries]] provide the *NOT* operation."
      },
      "after": "c34ff7ff2a129b94",
      "date": 1674991717953
    },
    {
      "item": {
        "type": "factory",
        "id": "5b6ebd58e6033d28"
      },
      "id": "5b6ebd58e6033d28",
      "type": "add",
      "after": "cb319e9a3b3cae7c",
      "date": 1674991723710
    },
    {
      "type": "edit",
      "id": "5b6ebd58e6033d28",
      "item": {
        "type": "reference",
        "id": "5b6ebd58e6033d28",
        "site": "wiki.ralfbarkow.ch",
        "slug": "boundary-logic-from-the-beginning",
        "title": "Boundary Logic from the Beginning",
        "text": "BRICKEN, William, 2001. Boundary Logic from the Beginning. September 2001, updated October 2002. [https://www.wbricken.com/pdfs/01bm/01math/01bl-about/01bl-from-begin-sbin.pdf pdf]"
      },
      "date": 1674991726192
    },
    {
      "id": "5b6ebd58e6033d28",
      "type": "move",
      "order": [
        "c34ff7ff2a129b94",
        "5b6ebd58e6033d28",
        "0a83418bf1a92d90",
        "2f04d93fd1855762",
        "131cf03a09560b65",
        "7fa9a8e199a6b0e8",
        "f7a9ce53899eade4",
        "5669d712b0a93948",
        "cb319e9a3b3cae7c"
      ],
      "date": 1674991729901
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, Karnaugh maps, and circuit schematics. BL is an iconic depiction of the mathematical concept of enclosure, interpreted as the logical operation IMPLIES. See:\n"
      },
      "date": 1674991734192
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, [[Karnaugh map]]s, and circuit schematics. BL is an iconic depiction of the mathematical concept of enclosure, interpreted as the logical operation IMPLIES. See:\n"
      },
      "date": 1674991749454
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, [[Karnaugh Map]]s, and circuit schematics. BL is an iconic depiction of the mathematical concept of enclosure, interpreted as the logical operation IMPLIES. See:\n"
      },
      "date": 1674991756272
    },
    {
      "item": {
        "type": "factory",
        "id": "115e561298fab66e"
      },
      "id": "115e561298fab66e",
      "type": "add",
      "after": "cb319e9a3b3cae7c",
      "date": 1674991784788
    },
    {
      "type": "edit",
      "id": "115e561298fab66e",
      "item": {
        "type": "pagefold",
        "id": "115e561298fab66e",
        "text": "~"
      },
      "date": 1674991788037
    },
    {
      "id": "115e561298fab66e",
      "type": "move",
      "order": [
        "c34ff7ff2a129b94",
        "5b6ebd58e6033d28",
        "115e561298fab66e",
        "0a83418bf1a92d90",
        "2f04d93fd1855762",
        "131cf03a09560b65",
        "7fa9a8e199a6b0e8",
        "f7a9ce53899eade4",
        "5669d712b0a93948",
        "cb319e9a3b3cae7c"
      ],
      "date": 1674991793135
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, [[Karnaugh Map]]s, and circuit schematics. BL is an iconic depiction of the mathematical concept of [[Enclosure], interpreted as the logical operation IMPLIES. See:\n"
      },
      "date": 1674991830817
    },
    {
      "type": "edit",
      "id": "c34ff7ff2a129b94",
      "item": {
        "type": "markdown",
        "id": "c34ff7ff2a129b94",
        "text": "Boundary logic (BL) is one type of iconic logic. Others are Venn diagrams, [[Karnaugh Map]]s, and circuit schematics. BL is an iconic depiction of the mathematical concept of [[Enclosure]], interpreted as the logical operation IMPLIES. See:\n"
      },
      "date": 1674991837293
    }
  ]
}