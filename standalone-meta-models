{
  "title": "Standalone Meta-Models",
  "story": [
    {
      "type": "markdown",
      "id": "81f859c29bc30b83",
      "text": "The [[Famix]] in [[Moose]] version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was `FAMIXNamedEntity`). Now we need `JavaNamedEntity`, `CNamedEntity`, `SmalltalkNamedEntity` and so on. [https://pavel-krivanek.github.io/famix/ page]"
    },
    {
      "type": "paragraph",
      "id": "1ccf0bc3f7605ea9",
      "text": "Next: [[Trait Groups]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Standalone Meta-Models",
        "story": []
      },
      "date": 1640586010724
    },
    {
      "item": {
        "type": "factory",
        "id": "81f859c29bc30b83"
      },
      "id": "81f859c29bc30b83",
      "type": "add",
      "date": 1640586025581
    },
    {
      "type": "edit",
      "id": "81f859c29bc30b83",
      "item": {
        "type": "paragraph",
        "id": "81f859c29bc30b83",
        "text": " The Famix in Moose version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was FAMIXNamedEntity). Now we need JavaNamedEntity, CNamedEntity, SmalltalkNamedEntity and so on. "
      },
      "date": 1640586026687
    },
    {
      "type": "edit",
      "id": "81f859c29bc30b83",
      "item": {
        "type": "paragraph",
        "id": "81f859c29bc30b83",
        "text": "The [[Famix]] in [[Moose]] version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was FAMIXNamedEntity). Now we need JavaNamedEntity, CNamedEntity, SmalltalkNamedEntity and so on. "
      },
      "date": 1640586069444
    },
    {
      "type": "edit",
      "id": "81f859c29bc30b83",
      "item": {
        "type": "paragraph",
        "id": "81f859c29bc30b83",
        "text": "The [[Famix]] in [[Moose]] version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was FAMIXNamedEntity). Now we need JavaNamedEntity, CNamedEntity, SmalltalkNamedEntity and so on. [https://pavel-krivanek.github.io/famix/ page]"
      },
      "date": 1640586115562
    },
    {
      "type": "edit",
      "id": "81f859c29bc30b83",
      "item": {
        "type": "paragraph",
        "id": "81f859c29bc30b83",
        "text": "The [[Famix]] in [[Moose]] version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was `FAMIXNamedEntity`). Now we need `JavaNamedEntity`, `CNamedEntity`, `SmalltalkNamedEntity` and so on. [https://pavel-krivanek.github.io/famix/ page]"
      },
      "date": 1640586157085
    },
    {
      "type": "edit",
      "id": "81f859c29bc30b83",
      "item": {
        "type": "markdown",
        "id": "81f859c29bc30b83",
        "text": "The [[Famix]] in [[Moose]] version 7 was significantly changed. Now the Famix is not one unifying meta-model that tries to cover everything, but it is a set of building blocks, small fragments of the meta-models. A user creates own meta-models of these fragments and can easily add custom elements that cannot be described by anything that Famix provides by default. That is especially important for modelling of custom domain-specific languages or structured data.\n\nNow every modeled language has its own standalone meta-model. Particular meta-models do not share entities, so every language has custom classes even for the very general meta-model entities like named entities (was `FAMIXNamedEntity`). Now we need `JavaNamedEntity`, `CNamedEntity`, `SmalltalkNamedEntity` and so on. [https://pavel-krivanek.github.io/famix/ page]"
      },
      "date": 1640586159087
    },
    {
      "item": {
        "type": "factory",
        "id": "1ccf0bc3f7605ea9"
      },
      "id": "1ccf0bc3f7605ea9",
      "type": "add",
      "after": "81f859c29bc30b83",
      "date": 1640586192677
    },
    {
      "type": "edit",
      "id": "1ccf0bc3f7605ea9",
      "item": {
        "type": "paragraph",
        "id": "1ccf0bc3f7605ea9",
        "text": "Next: [[Trait Groups]]"
      },
      "date": 1640586198838
    }
  ]
}