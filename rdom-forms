{
  "title": "rdom-forms",
  "story": [
    {
      "type": "paragraph",
      "id": "a57f05252bc3e2ed",
      "text": "Data-driven declarative & extensible HTML form generation. [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom-forms github] This is a support package for [[@thi.ng/rdom]]. "
    },
    {
      "type": "html",
      "id": "ae01e4b2799eeefe",
      "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"294.680\" height=\"61.313\" viewBox=\"0 3.715312500000003 294.6796875 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M105.750 30.012L112.781 30.012C113.612 27.046 114.479 24.116 115.383 21.223L99.211 21.223C96.543 29.922 94.013 38.760 91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M109.688 47.520L125.859 47.520C130.136 32.883 134.489 18.322 138.797 3.715L131.766 3.715L120.094 43.161L117.984 43.161L124.523 21.223L117.492 21.223C114.894 29.992 112.245 38.710 109.688 47.520Z\"/><path d=\"M127.969 47.520L144.141 47.520C146.266 40.176 148.455 32.896 150.609 25.583L151.945 21.223L135.773 21.223C133.537 28.479 131.416 35.851 129.234 43.161ZM143.578 25.583L138.375 43.161L136.266 43.161L141.469 25.583Z\"/><path d=\"M164.531 47.520L171.563 47.520C174.169 38.759 176.699 29.922 179.367 21.223L154.055 21.223C151.386 29.922 148.857 38.760 146.250 47.520L153.281 47.520L159.750 25.583L161.859 25.583L155.391 47.520L162.422 47.520L168.891 25.583L171 25.583Z\"/><path d=\"M177.539 34.372L193.711 34.372L195.047 30.012L178.875 30.012Z\"/><path d=\"M191.953 47.520L198.984 47.520L205.453 25.583L211.078 25.583L212.414 21.223L206.789 21.223L221.063 3.715L214.031 3.715L199.758 21.223C197.089 29.922 194.560 38.760 191.953 47.520Z\"/><path d=\"M206.719 47.520L222.891 47.520C225.016 40.176 227.205 32.896 229.359 25.583L230.695 21.223L214.523 21.223C212.287 28.479 210.166 35.851 207.984 43.161ZM222.328 25.583L217.125 43.161L215.016 43.161L220.219 25.583Z\"/><path d=\"M239.344 30.012L246.375 30.012C247.206 27.046 248.072 24.116 248.977 21.223L232.805 21.223C230.136 29.922 227.607 38.760 225 47.520L232.031 47.520L238.500 25.583L240.609 25.583Z\"/><path d=\"M261.563 47.520L268.594 47.520C271.200 38.759 273.730 29.922 276.398 21.223L251.086 21.223C248.418 29.922 245.888 38.760 243.281 47.520L250.313 47.520L256.781 25.583L258.891 25.583L252.422 47.520L259.453 47.520L265.922 25.583L268.031 25.583Z\"/><path d=\"M285.047 30.012L292.078 30.012C292.909 27.046 293.776 24.116 294.680 21.223L278.508 21.223C277.604 24.116 276.736 27.046 275.906 30.012L282.445 38.731L281.109 43.161L279 43.161L280.336 38.731L273.305 38.731C272.418 41.641 271.550 44.570 270.703 47.520L286.875 47.520C287.722 44.570 288.590 41.641 289.477 38.731L282.938 30.012L284.203 25.583L286.313 25.583Z\"/></svg>"
    },
    {
      "type": "paragraph",
      "id": "0daa85c7d923ffe0",
      "text": "This package uses vanilla JS objects to define component specs for various types of form elements (various factory functions are provided). These specs can then be passed to the polymorphic & dynamically extensible compileForm() function to generate the actual form elements/components in hiccup format, which can then be used with thi.ng/rdom or for static (or SSR) HTML generation via thi.ng/hiccup.\n\nAll generated form elements are unstyled by default, but can be fully customized (in various stages) via user-provided options."
    },
    {
      "type": "code",
      "id": "06e7efe6bc70bbaf",
      "text": "import {\n    compileForm, form, hidden, password, str, submit\n} from 'https://esm.run/@thi.ng/rdom-forms';\n\n// compile form from given field descriptions\nconst loginForm = compileForm(\n    form({ action: \"/login\", method: \"post\" },\n        // string input\n        str({ id: \"user\", label: \"Username \", desc: \"or email address\" }),\n        // password\n        password({ id: \"pass\", label: \"Password \", desc: \"min. 8 characters\", min: 8 }),\n        // hidden form value\n        hidden({ name: \"target\", value: \"user-home\" }),\n        submit({ title: \"Login\", label: \"\" })\n    ),\n    {\n        // disable reactive value subscriptions\n        behaviors: { values: false },\n        // customize attribs for label descriptions\n        descAttribs: { class: \"desc\" }\n    }\n);\n\n// use thi.ng/hiccup to serialize as HTML\nimport { serialize } from 'https://esm.run/@thi.ng/hiccup';\n\nconsole.log(serialize(loginForm));"
    },
    {
      "type": "paragraph",
      "id": "313907154e6512d9",
      "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our form element on the page"
    },
    {
      "type": "code",
      "id": "bcc7bad03c1ca422",
      "text": "export async function emit(el) {\n  el.innerHTML =  serialize(loginForm);\n};\n"
    },
    {
      "type": "paragraph",
      "id": "f50d8bf303fcced5",
      "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
    },
    {
      "type": "code",
      "id": "5eb6b67568179aa3",
      "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n};"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame"
    },
    {
      "type": "frame",
      "id": "e5d1521a0e541810",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "paragraph",
      "id": "21650c4477955b01",
      "text": "See [[Create New Page]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "rdom-forms",
        "story": []
      },
      "date": 1713737902178
    },
    {
      "item": {
        "type": "code",
        "id": "06e7efe6bc70bbaf",
        "text": "import {\n    compileForm, form, hidden, password, str, submit\n} from \"@thi.ng/rdom-forms\";\n\n// compile form from given field descriptions\nconst loginForm = compileForm(\n    form({ action: \"/login\", method: \"post\" },\n        // string input\n        str({ id: \"user\", label: \"Username\", desc: \"or email address\" }),\n        // password\n        password({ id: \"pass\", label: \"Password\", desc: \"min. 8 characters\", min: 8 }),\n        // hidden form value\n        hidden({ name: \"target\", value: \"user-home\" }),\n        submit({ title: \"Login\", label: \"\" })\n    ),\n    {\n        // disable reactive value subscriptions\n        behaviors: { values: false },\n        // customize attribs for label descriptions\n        descAttribs: { class: \"desc\" }\n    }\n);\n\n// use thi.ng/hiccup to serialize as HTML\nimport { serialize } from \"@thi.ng/hiccup\";\n\nconsole.log(serialize(loginForm));"
      },
      "id": "06e7efe6bc70bbaf",
      "type": "add",
      "date": 1713737903612
    },
    {
      "type": "fork",
      "date": 1713737918181
    },
    {
      "id": "e5d1521a0e541810",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "e5d1521a0e541810",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "06e7efe6bc70bbaf",
      "attribution": {
        "page": "Function trampoline"
      },
      "date": 1713737926693
    },
    {
      "type": "edit",
      "id": "06e7efe6bc70bbaf",
      "item": {
        "type": "code",
        "id": "06e7efe6bc70bbaf",
        "text": "import {\n    compileForm, form, hidden, password, str, submit\n} from 'https://esm.run/@thi.ng/rdom-forms';\n\n// compile form from given field descriptions\nconst loginForm = compileForm(\n    form({ action: \"/login\", method: \"post\" },\n        // string input\n        str({ id: \"user\", label: \"Username\", desc: \"or email address\" }),\n        // password\n        password({ id: \"pass\", label: \"Password\", desc: \"min. 8 characters\", min: 8 }),\n        // hidden form value\n        hidden({ name: \"target\", value: \"user-home\" }),\n        submit({ title: \"Login\", label: \"\" })\n    ),\n    {\n        // disable reactive value subscriptions\n        behaviors: { values: false },\n        // customize attribs for label descriptions\n        descAttribs: { class: \"desc\" }\n    }\n);\n\n// use thi.ng/hiccup to serialize as HTML\nimport { serialize } from \"@thi.ng/hiccup\";\n\nconsole.log(serialize(loginForm));"
      },
      "date": 1713737943535
    },
    {
      "type": "edit",
      "id": "06e7efe6bc70bbaf",
      "item": {
        "type": "code",
        "id": "06e7efe6bc70bbaf",
        "text": "import {\n    compileForm, form, hidden, password, str, submit\n} from 'https://esm.run/@thi.ng/rdom-forms';\n\n// compile form from given field descriptions\nconst loginForm = compileForm(\n    form({ action: \"/login\", method: \"post\" },\n        // string input\n        str({ id: \"user\", label: \"Username\", desc: \"or email address\" }),\n        // password\n        password({ id: \"pass\", label: \"Password\", desc: \"min. 8 characters\", min: 8 }),\n        // hidden form value\n        hidden({ name: \"target\", value: \"user-home\" }),\n        submit({ title: \"Login\", label: \"\" })\n    ),\n    {\n        // disable reactive value subscriptions\n        behaviors: { values: false },\n        // customize attribs for label descriptions\n        descAttribs: { class: \"desc\" }\n    }\n);\n\n// use thi.ng/hiccup to serialize as HTML\nimport { serialize } from 'https://esm.run/@thi.ng/hiccup';\n\nconsole.log(serialize(loginForm));"
      },
      "date": 1713737973184
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713738021794
    },
    {
      "id": "a57f05252bc3e2ed",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a57f05252bc3e2ed",
        "text": "Data-driven declarative & extensible HTML form generation. This is a support package for @thi.ng/rdom."
      },
      "attribution": {
        "page": "scratch"
      },
      "date": 1713738070554
    },
    {
      "type": "edit",
      "id": "a57f05252bc3e2ed",
      "item": {
        "type": "paragraph",
        "id": "a57f05252bc3e2ed",
        "text": "Data-driven declarative & extensible HTML form generation. This is a support package for @thi.ng/rdom. [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom-forms github]"
      },
      "date": 1713738081858
    },
    {
      "id": "ae01e4b2799eeefe",
      "type": "add",
      "item": {
        "type": "html",
        "id": "ae01e4b2799eeefe",
        "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"294.680\" height=\"61.313\" viewBox=\"0 3.715312500000003 294.6796875 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M105.750 30.012L112.781 30.012C113.612 27.046 114.479 24.116 115.383 21.223L99.211 21.223C96.543 29.922 94.013 38.760 91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M109.688 47.520L125.859 47.520C130.136 32.883 134.489 18.322 138.797 3.715L131.766 3.715L120.094 43.161L117.984 43.161L124.523 21.223L117.492 21.223C114.894 29.992 112.245 38.710 109.688 47.520Z\"/><path d=\"M127.969 47.520L144.141 47.520C146.266 40.176 148.455 32.896 150.609 25.583L151.945 21.223L135.773 21.223C133.537 28.479 131.416 35.851 129.234 43.161ZM143.578 25.583L138.375 43.161L136.266 43.161L141.469 25.583Z\"/><path d=\"M164.531 47.520L171.563 47.520C174.169 38.759 176.699 29.922 179.367 21.223L154.055 21.223C151.386 29.922 148.857 38.760 146.250 47.520L153.281 47.520L159.750 25.583L161.859 25.583L155.391 47.520L162.422 47.520L168.891 25.583L171 25.583Z\"/><path d=\"M177.539 34.372L193.711 34.372L195.047 30.012L178.875 30.012Z\"/><path d=\"M191.953 47.520L198.984 47.520L205.453 25.583L211.078 25.583L212.414 21.223L206.789 21.223L221.063 3.715L214.031 3.715L199.758 21.223C197.089 29.922 194.560 38.760 191.953 47.520Z\"/><path d=\"M206.719 47.520L222.891 47.520C225.016 40.176 227.205 32.896 229.359 25.583L230.695 21.223L214.523 21.223C212.287 28.479 210.166 35.851 207.984 43.161ZM222.328 25.583L217.125 43.161L215.016 43.161L220.219 25.583Z\"/><path d=\"M239.344 30.012L246.375 30.012C247.206 27.046 248.072 24.116 248.977 21.223L232.805 21.223C230.136 29.922 227.607 38.760 225 47.520L232.031 47.520L238.500 25.583L240.609 25.583Z\"/><path d=\"M261.563 47.520L268.594 47.520C271.200 38.759 273.730 29.922 276.398 21.223L251.086 21.223C248.418 29.922 245.888 38.760 243.281 47.520L250.313 47.520L256.781 25.583L258.891 25.583L252.422 47.520L259.453 47.520L265.922 25.583L268.031 25.583Z\"/><path d=\"M285.047 30.012L292.078 30.012C292.909 27.046 293.776 24.116 294.680 21.223L278.508 21.223C277.604 24.116 276.736 27.046 275.906 30.012L282.445 38.731L281.109 43.161L279 43.161L280.336 38.731L273.305 38.731C272.418 41.641 271.550 44.570 270.703 47.520L286.875 47.520C287.722 44.570 288.590 41.641 289.477 38.731L282.938 30.012L284.203 25.583L286.313 25.583Z\"/></svg>"
      },
      "after": "a57f05252bc3e2ed",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713738250555
    },
    {
      "id": "0daa85c7d923ffe0",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0daa85c7d923ffe0",
        "text": "This package uses vanilla JS objects to define component specs for various types of form elements (various factory functions are provided). These specs can then be passed to the polymorphic & dynamically extensible compileForm() function to generate the actual form elements/components in hiccup format, which can then be used with thi.ng/rdom or for static (or SSR) HTML generation via thi.ng/hiccup.\n\nAll generated form elements are unstyled by default, but can be fully customized (in various stages) via user-provided options."
      },
      "after": "ae01e4b2799eeefe",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713738277386
    },
    {
      "type": "fork",
      "date": 1713738354852
    },
    {
      "type": "edit",
      "id": "a57f05252bc3e2ed",
      "item": {
        "type": "paragraph",
        "id": "a57f05252bc3e2ed",
        "text": "Data-driven declarative & extensible HTML form generation. This is a support package for [[@thi.ng/rdom.]] [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom-forms github]"
      },
      "date": 1713738408782
    },
    {
      "type": "edit",
      "id": "a57f05252bc3e2ed",
      "item": {
        "type": "paragraph",
        "id": "a57f05252bc3e2ed",
        "text": "Data-driven declarative & extensible HTML form generation. This is a support package for [[@thi.ng/rdom]]. [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom-forms github]"
      },
      "date": 1713738416501
    },
    {
      "type": "edit",
      "id": "a57f05252bc3e2ed",
      "item": {
        "type": "paragraph",
        "id": "a57f05252bc3e2ed",
        "text": "Data-driven declarative & extensible HTML form generation. [https://github.com/thi-ng/umbrella/tree/develop/packages/rdom-forms github] This is a support package for [[@thi.ng/rdom]]. "
      },
      "date": 1713738432367
    },
    {
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "// Get a reference to the <div class=\"item-frame\"> element\nconst itemFrame = document.querySelector('.item-frame');\n\n// Manipulate the HTML content inside the <div class=\"item-frame\">\nitemFrame.innerHTML = `\n    <form action=\"/login\" method=\"post\">\n        <div>\n            <label for=\"user\">Username<span class=\"desc\">or email address</span></label>\n            <input type=\"text\" id=\"user\" name=\"user\"/>\n        </div>\n        <div>\n            <label for=\"pass\">Password<span class=\"desc\">min. 8 characters</span></label>\n            <input type=\"password\" autocomplete minlength=\"8\" id=\"pass\" name=\"pass\"/>\n        </div>\n        <input type=\"hidden\" id=\"target\" name=\"target\" value=\"user-home\"/>\n        <div>\n            <label for=\"submit-0\"></label>\n            <input type=\"submit\" value=\"Login\" id=\"submit-0\" name=\"submit-0\"/>\n        </div>\n    </form>\n`;\n"
      },
      "id": "bcc7bad03c1ca422",
      "type": "add",
      "after": "e5d1521a0e541810",
      "date": 1713738848348
    },
    {
      "id": "bcc7bad03c1ca422",
      "type": "move",
      "order": [
        "a57f05252bc3e2ed",
        "ae01e4b2799eeefe",
        "0daa85c7d923ffe0",
        "06e7efe6bc70bbaf",
        "bcc7bad03c1ca422",
        "e5d1521a0e541810"
      ],
      "date": 1713738853009
    },
    {
      "type": "fork",
      "date": 1713738890998
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "document.addEventListener('DOMContentLoaded', function() {\n    // Get a reference to the <div class=\"item-frame\"> element\n    const itemFrame = document.querySelector('.item-frame');\n\n    // Manipulate the HTML content inside the <div class=\"item-frame\">\n    itemFrame.innerHTML = `\n        <form action=\"/login\" method=\"post\">\n            <div>\n                <label for=\"user\">Username<span class=\"desc\">or email address</span></label>\n                <input type=\"text\" id=\"user\" name=\"user\"/>\n            </div>\n            <div>\n                <label for=\"pass\">Password<span class=\"desc\">min. 8 characters</span></label>\n                <input type=\"password\" autocomplete minlength=\"8\" id=\"pass\" name=\"pass\"/>\n            </div>\n            <input type=\"hidden\" id=\"target\" name=\"target\" value=\"user-home\"/>\n            <div>\n                <label for=\"submit-0\"></label>\n                <input type=\"submit\" value=\"Login\" id=\"submit-0\" name=\"submit-0\"/>\n            </div>\n        </form>\n    `;\n});\n"
      },
      "date": 1713738930149
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "document.addEventListener('DOMContentLoaded', function() {\n    // Get a reference to the <div class=\"item-frame\"> element\n    const itemFrame = document.querySelector('.item-frame');\n\n    // Manipulate the HTML content inside the <div class=\"item-frame\">\n    itemFrame.innerHTML = serialize(loginForm);\n});\n"
      },
      "date": 1713738986981
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  el.innerHTML =  serialize(loginForm);\n});\n"
      },
      "date": 1713739091721
    },
    {
      "type": "edit",
      "id": "bcc7bad03c1ca422",
      "item": {
        "type": "code",
        "id": "bcc7bad03c1ca422",
        "text": "export async function emit(el) {\n  el.innerHTML =  serialize(loginForm);\n};\n"
      },
      "date": 1713739116705
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame"
      },
      "after": "bcc7bad03c1ca422",
      "attribution": {
        "page": "Channel Messaging and BroadcastChannel APIs",
        "site": "localhost:3000"
      },
      "date": 1713739253221
    },
    {
      "id": "313907154e6512d9",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our simple-greeting element on the page"
      },
      "after": "06e7efe6bc70bbaf",
      "attribution": {
        "page": "Channel Messaging and BroadcastChannel APIs",
        "site": "localhost:3000"
      },
      "date": 1713739264871
    },
    {
      "id": "f50d8bf303fcced5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f50d8bf303fcced5",
        "text": "and the bind() function, which in this case only sends a resize message to the parent window and provides information about the height of the current document body. "
      },
      "after": "bcc7bad03c1ca422",
      "attribution": {
        "page": "Channel Messaging and BroadcastChannel APIs",
        "site": "localhost:3000"
      },
      "date": 1713739270642
    },
    {
      "id": "d260d2641ba0cb99",
      "type": "add",
      "item": {
        "type": "code",
        "id": "d260d2641ba0cb99",
        "text": "}"
      },
      "after": "5eb6b67568179aa3",
      "attribution": {
        "page": "Channel Messaging and BroadcastChannel APIs",
        "site": "localhost:3000"
      },
      "date": 1713739289238
    },
    {
      "type": "remove",
      "id": "d260d2641ba0cb99",
      "date": 1713739343702
    },
    {
      "type": "edit",
      "id": "5eb6b67568179aa3",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n};"
      },
      "date": 1713739352190
    },
    {
      "type": "edit",
      "id": "313907154e6512d9",
      "item": {
        "type": "paragraph",
        "id": "313907154e6512d9",
        "text": "The following async functions are how we participate in the expectations of our [[ESM Snippet Template]]. The emit() function puts our form element on the page"
      },
      "date": 1713739441400
    },
    {
      "type": "edit",
      "id": "06e7efe6bc70bbaf",
      "item": {
        "type": "code",
        "id": "06e7efe6bc70bbaf",
        "text": "import {\n    compileForm, form, hidden, password, str, submit\n} from 'https://esm.run/@thi.ng/rdom-forms';\n\n// compile form from given field descriptions\nconst loginForm = compileForm(\n    form({ action: \"/login\", method: \"post\" },\n        // string input\n        str({ id: \"user\", label: \"Username \", desc: \"or email address\" }),\n        // password\n        password({ id: \"pass\", label: \"Password \", desc: \"min. 8 characters\", min: 8 }),\n        // hidden form value\n        hidden({ name: \"target\", value: \"user-home\" }),\n        submit({ title: \"Login\", label: \"\" })\n    ),\n    {\n        // disable reactive value subscriptions\n        behaviors: { values: false },\n        // customize attribs for label descriptions\n        descAttribs: { class: \"desc\" }\n    }\n);\n\n// use thi.ng/hiccup to serialize as HTML\nimport { serialize } from 'https://esm.run/@thi.ng/hiccup';\n\nconsole.log(serialize(loginForm));"
      },
      "date": 1713740027508
    },
    {
      "item": {
        "type": "factory",
        "id": "21650c4477955b01"
      },
      "id": "21650c4477955b01",
      "type": "add",
      "after": "e5d1521a0e541810",
      "date": 1713740145717
    },
    {
      "type": "edit",
      "id": "21650c4477955b01",
      "item": {
        "type": "paragraph",
        "id": "21650c4477955b01",
        "text": "See [[Create New Page]]"
      },
      "date": 1713740152042
    },
    {
      "id": "5eb6b67568179aa3",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5eb6b67568179aa3",
        "text": "export async function bind(el) {\n  window.parent.postMessage({\n    action: \"resize\",\n    height: document.body.offsetHeight\n  }, \"*\")\n};"
      },
      "after": "f50d8bf303fcced5",
      "attribution": {
        "page": "scratch"
      },
      "date": 1713740333826
    }
  ]
}