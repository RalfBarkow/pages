{
  "title": "Custom Elements And Elm",
  "story": [
    {
      "type": "paragraph",
      "id": "d8cb25dbc7071bc5",
      "text": "[https://github.com/elm-community/js-integration-examples/tree/master/more/webcomponents#custom-elements-and-elm github]"
    },
    {
      "type": "paragraph",
      "id": "a51f1c37e7e2f182",
      "text": "Note that if at this point you skipped the earlier requests to have a look at the interop section of the Elm guide it's a good idea to do so now.\n\nSo we've looked at the specs and the most relevant one to Elm is arguably Custom Elements. Looking at the examples on that page, defining a custom element is easy enough."
    },
    {
      "type": "code",
      "id": "51d91150cf84422c",
      "text": "class MyElement extends HTMLElement {}\ncustomElements.define(\"my-element\", MyElement);\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Custom Elements And Elm",
        "story": []
      },
      "date": 1638203802060
    },
    {
      "item": {
        "type": "factory",
        "id": "d8cb25dbc7071bc5"
      },
      "id": "d8cb25dbc7071bc5",
      "type": "add",
      "date": 1638203809970
    },
    {
      "type": "edit",
      "id": "d8cb25dbc7071bc5",
      "item": {
        "type": "paragraph",
        "id": "d8cb25dbc7071bc5",
        "text": "[https://github.com/elm-community/js-integration-examples/tree/master/more/webcomponents#custom-elements-and-elm github]"
      },
      "date": 1638203818353
    },
    {
      "item": {
        "type": "factory",
        "id": "a51f1c37e7e2f182"
      },
      "id": "a51f1c37e7e2f182",
      "type": "add",
      "after": "d8cb25dbc7071bc5",
      "date": 1638203823829
    },
    {
      "type": "edit",
      "id": "a51f1c37e7e2f182",
      "item": {
        "type": "paragraph",
        "id": "a51f1c37e7e2f182",
        "text": "Note that if at this point you skipped the earlier requests to have a look at the interop section of the Elm guide it's a good idea to do so now.\n\nSo we've looked at the specs and the most relevant one to Elm is arguably Custom Elements. Looking at the examples on that page, defining a custom element is easy enough."
      },
      "date": 1638203825269
    },
    {
      "item": {
        "type": "factory",
        "id": "51d91150cf84422c"
      },
      "id": "51d91150cf84422c",
      "type": "add",
      "after": "a51f1c37e7e2f182",
      "date": 1638203843393
    },
    {
      "type": "edit",
      "id": "51d91150cf84422c",
      "item": {
        "type": "code",
        "id": "51d91150cf84422c",
        "text": "class MyElement extends HTMLElement {}\ncustomElements.define(\"my-element\", MyElement);\n"
      },
      "date": 1638203845414
    }
  ]
}