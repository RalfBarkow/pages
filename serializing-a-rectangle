{
  "title": "Serializing a Rectangle",
  "story": [
    {
      "type": "paragraph",
      "id": "de74377e54eec00a",
      "text": "To present the pickling format and algorithm in an intuitive way, we show below an example of how Fuel stores a rectangle. "
    },
    {
      "type": "paragraph",
      "id": "182e7ac64b995bf5",
      "text": "In the following snippet, we create a rectangle with two points that define the origin and the corner. A rectangle is created and then passed to the serializer as an argument. In this case, the rectangle is the root of the graph which also includes the points that the rectangle references. The first step analyzes the graph starting from the root. Objects are mapped to clusters following some criteria. For this example we only use the criterium by class. In reality Fuel defines a set of other clusters such as global objects (it is at Smalltalk dictionary) or small integer range (i.e., an integer is between 0 and 232 − 1) or key literals (nil true or false), etc."
    },
    {
      "type": "code",
      "id": "41d56648fe058991",
      "text": "fuelFile := '/Users/rgb/workspace/test.fuel' asFileReference fullName.\naFileStream := (File named: fuelFile) writeStream binary"
    },
    {
      "type": "code",
      "id": "7f7517b8772e173e",
      "text": "anOrigin := Point x: 10 y: 20.\naCorner := Point x: 30 y: 40.\naRectangle := Rectangle origin: anOrigin corner: aCorner.\n(FLSerializer on: aFileStream) serialize: aRectangle"
    },
    {
      "type": "code",
      "id": "b5bf197f9b87a653",
      "text": "'/Users/rgb/workspace/test.fuel' asFileReference"
    },
    {
      "type": "code",
      "id": "1053513c088177b5",
      "text": "loadedRectangle := FLMaterializer materializeFromFileNamed: fuelFile"
    },
    {
      "type": "code",
      "id": "50d6d84498d61fda",
      "text": "[ loadedRectangle = aRectangle ] value "
    },
    {
      "type": "paragraph",
      "id": "4ee7559f6f313906",
      "text": "[](https://eng.libretexts.org/Bookshelves/Computer_Science/Programming_Languages/Book%3A_Pharo_by_Example_5.0_(Ducasse_Zagidulin_Hess_and_Chloupis)/10%3A_Basic_Classes/10.01%3A_Object)"
    },
    {
      "type": "code",
      "id": "186759f9cae87e8a",
      "text": "loadedRectangle class == aRectangle class "
    },
    {
      "type": "code",
      "id": "97ce55cdf91c84ae",
      "text": "MyFirstFLTest"
    },
    {
      "type": "paragraph",
      "id": "fdf9185ad79b2460",
      "text": "Cf. Serializing Complex Objects with Fuel, Ch. 10 of  Cassou et. al., Enterprise Pharo a Web Perspective."
    },
    {
      "type": "paragraph",
      "id": "b3fba53e1cb11c6e",
      "text": "Duplication of Custom Globals"
    },
    {
      "type": "paragraph",
      "id": "9d8b64271f700c58",
      "text": "With this following code snippet, we show that by default a Smalltalk global value is not serialized as a global. In such a case it is duplicated on materialization."
    },
    {
      "type": "code",
      "id": "b5bb58297e16a7a0",
      "text": "\"Define a global variable named SomeGlobal.\"\t\nSomeGlobal := Set new.\t"
    },
    {
      "type": "code",
      "id": "856cc90d9e067afb",
      "text": "\"Serialize and materialize the value of SomeGlobal.\"\nFLSerializer serialize: SomeGlobal toFileNamed: 'g.fuel'.\t"
    },
    {
      "type": "code",
      "id": "3c2117d5aefe08f4",
      "text": "\"The materialized object *is not* the same as the global instance.\"\n[ (FLMaterializer materializeFromFileNamed: 'g.fuel') ~~ SomeGlobal ] assert"
    },
    {
      "type": "code",
      "id": "e88a72c9b1f38ce3",
      "text": "[ loadedRectangle ~~ aRectangle ] assert. "
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Serializing a Rectangle",
        "story": []
      },
      "date": 1667199647169
    },
    {
      "item": {
        "type": "factory",
        "id": "de74377e54eec00a"
      },
      "id": "de74377e54eec00a",
      "type": "add",
      "date": 1667199648688
    },
    {
      "type": "edit",
      "id": "de74377e54eec00a",
      "item": {
        "type": "paragraph",
        "id": "de74377e54eec00a",
        "text": "To present the pickling format and algorithm in an intuitive way, we show below an example of how Fuel stores a rectangle. "
      },
      "date": 1667199650576
    },
    {
      "item": {
        "type": "factory",
        "id": "182e7ac64b995bf5"
      },
      "id": "182e7ac64b995bf5",
      "type": "add",
      "after": "de74377e54eec00a",
      "date": 1667199656745
    },
    {
      "type": "edit",
      "id": "182e7ac64b995bf5",
      "item": {
        "type": "paragraph",
        "id": "182e7ac64b995bf5",
        "text": "In the following snippet, we create a rectangle with two points that define the origin and the corner. A rectangle is created and then passed to the serializer as an argument. In this case, the rectangle is the root of the graph which also includes the points that the rectangle references. The first step analyzes the graph starting from the root. Objects are mapped to clusters following some criteria. For this example we only use the criterium by class. In reality Fuel defines a set of other clusters such as global objects (it is at Smalltalk dictionary) or small integer range (i.e., an integer is between 0 and 232 − 1) or key literals (nil true or false), etc."
      },
      "date": 1667199658750
    },
    {
      "item": {
        "type": "factory",
        "id": "41d56648fe058991"
      },
      "id": "41d56648fe058991",
      "type": "add",
      "after": "182e7ac64b995bf5",
      "date": 1667199664530
    },
    {
      "type": "edit",
      "id": "41d56648fe058991",
      "item": {
        "type": "code",
        "id": "41d56648fe058991",
        "text": "fuelFile := '/Users/rgb/workspace/test.fuel' asFileReference fullName.\naFileStream := (File named: fuelFile) writeStream binary"
      },
      "date": 1667199666430
    },
    {
      "item": {
        "type": "factory",
        "id": "7f7517b8772e173e"
      },
      "id": "7f7517b8772e173e",
      "type": "add",
      "after": "41d56648fe058991",
      "date": 1667199695175
    },
    {
      "type": "edit",
      "id": "7f7517b8772e173e",
      "item": {
        "type": "code",
        "id": "7f7517b8772e173e",
        "text": "anOrigin := Point x: 10 y: 20.\naCorner := Point x: 30 y: 40.\naRectangle := Rectangle origin: anOrigin corner: aCorner.\n(FLSerializer on: aFileStream) serialize: aRectangle"
      },
      "date": 1667199697590
    },
    {
      "item": {
        "type": "factory",
        "id": "b5bf197f9b87a653"
      },
      "id": "b5bf197f9b87a653",
      "type": "add",
      "after": "7f7517b8772e173e",
      "date": 1667199703850
    },
    {
      "type": "edit",
      "id": "b5bf197f9b87a653",
      "item": {
        "type": "code",
        "id": "b5bf197f9b87a653",
        "text": "'/Users/rgb/workspace/test.fuel' asFileReference"
      },
      "date": 1667199706097
    },
    {
      "item": {
        "type": "factory",
        "id": "1053513c088177b5"
      },
      "id": "1053513c088177b5",
      "type": "add",
      "after": "b5bf197f9b87a653",
      "date": 1667199713659
    },
    {
      "type": "edit",
      "id": "1053513c088177b5",
      "item": {
        "type": "code",
        "id": "1053513c088177b5",
        "text": "loadedRectangle := FLMaterializer materializeFromFileNamed: fuelFile"
      },
      "date": 1667199715956
    },
    {
      "item": {
        "type": "factory",
        "id": "50d6d84498d61fda"
      },
      "id": "50d6d84498d61fda",
      "type": "add",
      "after": "1053513c088177b5",
      "date": 1667199727239
    },
    {
      "type": "edit",
      "id": "50d6d84498d61fda",
      "item": {
        "type": "code",
        "id": "50d6d84498d61fda",
        "text": "[ loadedRectangle = aRectangle ] value "
      },
      "date": 1667199730330
    },
    {
      "item": {
        "type": "factory",
        "id": "4ee7559f6f313906"
      },
      "id": "4ee7559f6f313906",
      "type": "add",
      "after": "50d6d84498d61fda",
      "date": 1667199743324
    },
    {
      "type": "edit",
      "id": "4ee7559f6f313906",
      "item": {
        "type": "paragraph",
        "id": "4ee7559f6f313906",
        "text": "[](https://eng.libretexts.org/Bookshelves/Computer_Science/Programming_Languages/Book%3A_Pharo_by_Example_5.0_(Ducasse_Zagidulin_Hess_and_Chloupis)/10%3A_Basic_Classes/10.01%3A_Object)"
      },
      "date": 1667199744936
    },
    {
      "item": {
        "type": "factory",
        "id": "186759f9cae87e8a"
      },
      "id": "186759f9cae87e8a",
      "type": "add",
      "after": "4ee7559f6f313906",
      "date": 1667199755723
    },
    {
      "type": "edit",
      "id": "186759f9cae87e8a",
      "item": {
        "type": "code",
        "id": "186759f9cae87e8a",
        "text": "loadedRectangle class == aRectangle class "
      },
      "date": 1667199757899
    },
    {
      "item": {
        "type": "factory",
        "id": "97ce55cdf91c84ae"
      },
      "id": "97ce55cdf91c84ae",
      "type": "add",
      "after": "186759f9cae87e8a",
      "date": 1667199763249
    },
    {
      "type": "edit",
      "id": "97ce55cdf91c84ae",
      "item": {
        "type": "code",
        "id": "97ce55cdf91c84ae",
        "text": "MyFirstFLTest"
      },
      "date": 1667199765573
    },
    {
      "item": {
        "type": "factory",
        "id": "fdf9185ad79b2460"
      },
      "id": "fdf9185ad79b2460",
      "type": "add",
      "after": "97ce55cdf91c84ae",
      "date": 1667199771584
    },
    {
      "type": "edit",
      "id": "fdf9185ad79b2460",
      "item": {
        "type": "paragraph",
        "id": "fdf9185ad79b2460",
        "text": "Cf. Serializing Complex Objects with Fuel, Ch. 10 of  Cassou et. al., Enterprise Pharo a Web Perspective."
      },
      "date": 1667199773178
    },
    {
      "item": {
        "type": "factory",
        "id": "b3fba53e1cb11c6e"
      },
      "id": "b3fba53e1cb11c6e",
      "type": "add",
      "after": "fdf9185ad79b2460",
      "date": 1667199778703
    },
    {
      "type": "edit",
      "id": "b3fba53e1cb11c6e",
      "item": {
        "type": "paragraph",
        "id": "b3fba53e1cb11c6e",
        "text": "Duplication of Custom Globals"
      },
      "date": 1667199780331
    },
    {
      "item": {
        "type": "factory",
        "id": "9d8b64271f700c58"
      },
      "id": "9d8b64271f700c58",
      "type": "add",
      "after": "b3fba53e1cb11c6e",
      "date": 1667199785332
    },
    {
      "type": "edit",
      "id": "9d8b64271f700c58",
      "item": {
        "type": "paragraph",
        "id": "9d8b64271f700c58",
        "text": "With this following code snippet, we show that by default a Smalltalk global value is not serialized as a global. In such a case it is duplicated on materialization."
      },
      "date": 1667199787254
    },
    {
      "item": {
        "type": "factory",
        "id": "b5bb58297e16a7a0"
      },
      "id": "b5bb58297e16a7a0",
      "type": "add",
      "after": "9d8b64271f700c58",
      "date": 1667199793509
    },
    {
      "type": "edit",
      "id": "b5bb58297e16a7a0",
      "item": {
        "type": "code",
        "id": "b5bb58297e16a7a0",
        "text": "\"Define a global variable named SomeGlobal.\"\t\nSomeGlobal := Set new.\t"
      },
      "date": 1667199795340
    },
    {
      "item": {
        "type": "factory",
        "id": "856cc90d9e067afb"
      },
      "id": "856cc90d9e067afb",
      "type": "add",
      "after": "b5bb58297e16a7a0",
      "date": 1667199804097
    },
    {
      "type": "edit",
      "id": "856cc90d9e067afb",
      "item": {
        "type": "code",
        "id": "856cc90d9e067afb",
        "text": "\n\"Serialize and materialize the value of SomeGlobal.\"\nFLSerializer serialize: SomeGlobal toFileNamed: 'g.fuel'.\t"
      },
      "date": 1667199805854
    },
    {
      "type": "edit",
      "id": "856cc90d9e067afb",
      "item": {
        "type": "code",
        "id": "856cc90d9e067afb",
        "text": "\"Serialize and materialize the value of SomeGlobal.\"\nFLSerializer serialize: SomeGlobal toFileNamed: 'g.fuel'.\t"
      },
      "date": 1667199810116
    },
    {
      "item": {
        "type": "factory",
        "id": "3c2117d5aefe08f4"
      },
      "id": "3c2117d5aefe08f4",
      "type": "add",
      "after": "856cc90d9e067afb",
      "date": 1667199817731
    },
    {
      "type": "edit",
      "id": "3c2117d5aefe08f4",
      "item": {
        "type": "code",
        "id": "3c2117d5aefe08f4",
        "text": "\"The materialized object *is not* the same as the global instance.\"\n[ (FLMaterializer materializeFromFileNamed: 'g.fuel') ~~ SomeGlobal ] assert"
      },
      "date": 1667199819836
    },
    {
      "item": {
        "type": "factory",
        "id": "e88a72c9b1f38ce3"
      },
      "id": "e88a72c9b1f38ce3",
      "type": "add",
      "after": "3c2117d5aefe08f4",
      "date": 1667199829386
    },
    {
      "type": "edit",
      "id": "e88a72c9b1f38ce3",
      "item": {
        "type": "code",
        "id": "e88a72c9b1f38ce3",
        "text": "[ loadedRectangle ~~ aRectangle ] assert. "
      },
      "date": 1667199832306
    }
  ]
}