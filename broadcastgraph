{
  "title": "broadcastGraph",
  "story": [
    {
      "type": "paragraph",
      "id": "4c953502bb1df705",
      "text": "This function, broadcastParagraph [https://github.com/RalfBarkow/assets/blob/2a6474fef4b628267c91af7b15d0fc9a6cb9f9ad/pages/parse-page-paragraphs/speed-bot.html#L362-L379 code], is responsible for sending a message to the parent window using the postMessage method."
    },
    {
      "type": "code",
      "id": "b00d413377813688",
      "text": "function broadcastGraph(jsonl) {\n\n    const targetOrigin = \"*\" // \"*\" indicates that the message can be received from any origin\n\n    // Post a message to the parent window\n    window.parent.postMessage(\n        // message\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        {\n            action: \"publishSourceData\",\n            name: \"graph\", // graphStream\n            sourceData: { jsonl }\n        },\n        targetOrigin // optional\n    );\n\n    graphStream(jsonl); // outgoing broadcast\n}"
    },
    {
      "type": "paragraph",
      "id": "ab52f6456fea8be3",
      "text": "See [[broadcast]] and [[graphStreamIncoming]]"
    },
    {
      "type": "paragraph",
      "id": "a56fb9f033733b2d",
      "text": "I wanted to know if the [[Speed Bot]] app can also [[contain]] a function that reads the graphStream."
    },
    {
      "type": "reference",
      "id": "2b798058ef681848",
      "site": "wiki.ralfbarkow.ch",
      "slug": "broadcastgraph",
      "title": "broadcastGraph",
      "text": "?"
    },
    {
      "type": "reference",
      "id": "9c951ea172df3515",
      "site": "localhost:3000",
      "slug": "broadcastgraph",
      "title": "broadcastGraph",
      "text": "@ localhost"
    },
    {
      "type": "frame",
      "id": "3740343908300b7c",
      "text": "//wiki.ralfbarkow.ch/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 222\nSOURCE graph\nSOURCE paragraph"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "broadcastGraph",
        "story": []
      },
      "date": 1709748000166
    },
    {
      "item": {
        "type": "code",
        "id": "b00d413377813688",
        "text": "function broadcastParagraph(paragraph) {\n    console.log(\"broadcastParagraph reached\")\n\n    const targetOrigin = \"*\" // \"*\" indicates that the message can be received from any origin\n\n    // Post a message to the parent window\n    window.parent.postMessage(\n        // message\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        {\n            action: \"publishSourceData\",\n            name: \"paragraph\", // paragraphStream\n            sourceData: { paragraph }\n        },\n        targetOrigin // optional\n    );\n    }"
      },
      "id": "b00d413377813688",
      "type": "add",
      "date": 1709748002132
    },
    {
      "type": "fork",
      "date": 1709748041239
    },
    {
      "item": {
        "type": "factory",
        "id": "4c953502bb1df705"
      },
      "id": "4c953502bb1df705",
      "type": "add",
      "after": "b00d413377813688",
      "date": 1709748074462
    },
    {
      "type": "edit",
      "id": "4c953502bb1df705",
      "item": {
        "type": "paragraph",
        "id": "4c953502bb1df705",
        "text": "This function, broadcastParagraph, is responsible for sending a message to the parent window using the postMessage method. Here's an explanation of each part of the function:"
      },
      "date": 1709748082512
    },
    {
      "id": "4c953502bb1df705",
      "type": "move",
      "order": [
        "4c953502bb1df705",
        "b00d413377813688"
      ],
      "date": 1709748084772
    },
    {
      "type": "edit",
      "id": "4c953502bb1df705",
      "item": {
        "type": "paragraph",
        "id": "4c953502bb1df705",
        "text": "This function, broadcastParagraph, is responsible for sending a message to the parent window using the postMessage method."
      },
      "date": 1709748122852
    },
    {
      "item": {
        "type": "factory",
        "id": "ab52f6456fea8be3"
      },
      "id": "ab52f6456fea8be3",
      "type": "add",
      "after": "b00d413377813688",
      "date": 1709748175956
    },
    {
      "type": "edit",
      "id": "ab52f6456fea8be3",
      "item": {
        "type": "paragraph",
        "id": "ab52f6456fea8be3",
        "text": "See [[broadcast]]"
      },
      "date": 1709748183795
    },
    {
      "item": {
        "type": "factory",
        "id": "a56fb9f033733b2d"
      },
      "id": "a56fb9f033733b2d",
      "type": "add",
      "after": "ab52f6456fea8be3",
      "date": 1709748420432
    },
    {
      "type": "edit",
      "id": "a56fb9f033733b2d",
      "item": {
        "type": "paragraph",
        "id": "a56fb9f033733b2d",
        "text": "I wanted to know if the Speed Bot app can also include a receiver function that reads the graphStream."
      },
      "date": 1709748422791
    },
    {
      "type": "edit",
      "id": "ab52f6456fea8be3",
      "item": {
        "type": "paragraph",
        "id": "ab52f6456fea8be3",
        "text": "See [[broadcast]] and [[graphStreamIncoming]]"
      },
      "date": 1709748466921
    },
    {
      "type": "edit",
      "id": "b00d413377813688",
      "item": {
        "type": "code",
        "id": "b00d413377813688",
        "text": "function broadcastParagraph(paragraph) {\n    console.log(\"broadcastParagraph reached\")\n\n    const targetOrigin = \"*\" // \"*\" indicates that the message can be received from any origin\n\n    // Post a message to the parent window\n    window.parent.postMessage(\n        // message\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        {\n            action: \"publishSourceData\",\n            name: \"paragraph\", // paragraphStream\n            sourceData: { paragraph }\n        },\n        targetOrigin // optional\n    );\n}"
      },
      "date": 1709748514811
    },
    {
      "type": "edit",
      "id": "a56fb9f033733b2d",
      "item": {
        "type": "paragraph",
        "id": "a56fb9f033733b2d",
        "text": "I wanted to know if the [[Speed Bot]] app can also include a receiver function that reads the graphStream."
      },
      "date": 1709748610566
    },
    {
      "id": "9c951ea172df3515",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "9c951ea172df3515",
        "site": "localhost:3000",
        "slug": "broadcastgraph",
        "title": "broadcastGraph",
        "text": "?"
      },
      "after": "a56fb9f033733b2d",
      "attribution": {
        "page": "scratch",
        "site": "localhost:3000"
      },
      "date": 1709813116470
    },
    {
      "id": "3740343908300b7c",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "3740343908300b7c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 222\nSOURCE graph\nSOURCE paragraph"
      },
      "after": "9c951ea172df3515",
      "attribution": {
        "page": "scratch",
        "site": "localhost:3000"
      },
      "date": 1709813122755
    },
    {
      "type": "edit",
      "id": "3740343908300b7c",
      "item": {
        "type": "frame",
        "id": "3740343908300b7c",
        "text": "//localhost:3000/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 222\nSOURCE graph\nSOURCE paragraph"
      },
      "date": 1709813505174
    },
    {
      "type": "edit",
      "id": "b00d413377813688",
      "item": {
        "type": "code",
        "id": "b00d413377813688",
        "text": "function broadcastGraph(jsonl) {\n    const targetOrigin = \"*\" // \"*\" indicates that the message can be received from any origin\n\n    // Post a message to the parent window\n    window.parent.postMessage(\n        // message\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        {\n            action: \"publishSourceData\",\n            name: \"graph\", // graphStream\n            sourceData: { jsonl }\n        },\n        targetOrigin // optional\n    );\n\n    graphStream(jsonl); // outgoing broadcast\n}"
      },
      "date": 1709821080495
    },
    {
      "type": "edit",
      "id": "b00d413377813688",
      "item": {
        "type": "code",
        "id": "b00d413377813688",
        "text": "function broadcastGraph(jsonl) {\n\n    const targetOrigin = \"*\" // \"*\" indicates that the message can be received from any origin\n\n    // Post a message to the parent window\n    window.parent.postMessage(\n        // message\n        // See https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage\n        {\n            action: \"publishSourceData\",\n            name: \"graph\", // graphStream\n            sourceData: { jsonl }\n        },\n        targetOrigin // optional\n    );\n\n    graphStream(jsonl); // outgoing broadcast\n}"
      },
      "date": 1709821095307
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1709821308837
    },
    {
      "type": "edit",
      "id": "3740343908300b7c",
      "item": {
        "type": "frame",
        "id": "3740343908300b7c",
        "text": "//wiki.ralfbarkow.ch/assets/pages/parse-page-paragraphs/speed-bot.html\nHEIGHT 222\nSOURCE graph\nSOURCE paragraph"
      },
      "date": 1709821324720
    },
    {
      "type": "edit",
      "id": "a56fb9f033733b2d",
      "item": {
        "type": "paragraph",
        "id": "a56fb9f033733b2d",
        "text": "I wanted to know if the [[Speed Bot]] app can also [[contain]] a receiver function that reads the graphStream."
      },
      "date": 1709821348737
    },
    {
      "id": "2b798058ef681848",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "2b798058ef681848",
        "site": "wiki.ralfbarkow.ch",
        "slug": "broadcastgraph",
        "title": "broadcastGraph",
        "text": "?"
      },
      "after": "a56fb9f033733b2d",
      "attribution": {
        "page": "scratch"
      },
      "date": 1709821400618
    },
    {
      "type": "edit",
      "id": "9c951ea172df3515",
      "item": {
        "type": "reference",
        "id": "9c951ea172df3515",
        "site": "localhost:3000",
        "slug": "broadcastgraph",
        "title": "broadcastGraph",
        "text": "@ localhost"
      },
      "date": 1709821407086
    },
    {
      "type": "edit",
      "id": "4c953502bb1df705",
      "item": {
        "type": "paragraph",
        "id": "4c953502bb1df705",
        "text": "This function, broadcastParagraph [https://github.com/RalfBarkow/assets/blob/2a6474fef4b628267c91af7b15d0fc9a6cb9f9ad/pages/parse-page-paragraphs/speed-bot.html#L362-L379 code], is responsible for sending a message to the parent window using the postMessage method."
      },
      "date": 1709828615665
    },
    {
      "type": "edit",
      "id": "a56fb9f033733b2d",
      "item": {
        "type": "paragraph",
        "id": "a56fb9f033733b2d",
        "text": "I wanted to know if the [[Speed Bot]] app can also [[contain]] a function that reads the graphStream."
      },
      "date": 1709828645225
    }
  ]
}