{
  "title": "Page Model",
  "story": [
    {
      "type": "markdown",
      "id": "babd8b7d402e8baf",
      "text": "The *page model* (also known as the *read/write model*) is a simple model that can be nicely motivated from looking at the way data pages are accessed (i.e., read or written) at the storage layer of a database system. As will be seen shortly, this model is simple enough to capture the essence of the concurrency control and recovery problem in a concise and elegant way, yet it is general enough to describe many ( but not all) important system implementation issues. The major limitation of the page model is that it captures no semantics of the data access operations, given the simple low-level nature of page reads and writes."
    },
    {
      "type": "paragraph",
      "id": "5a042e134d32114b",
      "text": "[…] In summary, the two computational models we are about to introduce differ in their definitions of data objects. For the page model, these are pages with read and write operations; for the object model, these are general objects with an encapsulated set of operations applicable to them."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Page Model",
        "story": []
      },
      "date": 1667203235975
    },
    {
      "item": {
        "type": "factory",
        "id": "babd8b7d402e8baf"
      },
      "id": "babd8b7d402e8baf",
      "type": "add",
      "date": 1667203242513
    },
    {
      "type": "edit",
      "id": "babd8b7d402e8baf",
      "item": {
        "type": "paragraph",
        "id": "babd8b7d402e8baf",
        "text": "The *page model* (also known as the read/write model ) is a simple model that can be nicely motivated from looking at the way data pages are accessed (i.e., read or written) at the storage layer of a database system. As will be seen shortly, this model is simple enough to capture the essence of the concurrency control and recovery problem in a concise and elegant way, yet it is general enough to describe many ( but not all) important system implementation issues. The major limitation of the page model is that it captures no semantics of the data access operations, given the simple low-level nature of page reads and writes."
      },
      "date": 1667203250538
    },
    {
      "type": "edit",
      "id": "babd8b7d402e8baf",
      "item": {
        "type": "markdown",
        "id": "babd8b7d402e8baf",
        "text": "The *page model* (also known as the read/write model ) is a simple model that can be nicely motivated from looking at the way data pages are accessed (i.e., read or written) at the storage layer of a database system. As will be seen shortly, this model is simple enough to capture the essence of the concurrency control and recovery problem in a concise and elegant way, yet it is general enough to describe many ( but not all) important system implementation issues. The major limitation of the page model is that it captures no semantics of the data access operations, given the simple low-level nature of page reads and writes."
      },
      "date": 1667203251889
    },
    {
      "type": "edit",
      "id": "babd8b7d402e8baf",
      "item": {
        "type": "markdown",
        "id": "babd8b7d402e8baf",
        "text": "The *page model* (also known as the *read/write model*) is a simple model that can be nicely motivated from looking at the way data pages are accessed (i.e., read or written) at the storage layer of a database system. As will be seen shortly, this model is simple enough to capture the essence of the concurrency control and recovery problem in a concise and elegant way, yet it is general enough to describe many ( but not all) important system implementation issues. The major limitation of the page model is that it captures no semantics of the data access operations, given the simple low-level nature of page reads and writes."
      },
      "date": 1667203261285
    },
    {
      "item": {
        "type": "factory",
        "id": "5a042e134d32114b"
      },
      "id": "5a042e134d32114b",
      "type": "add",
      "after": "babd8b7d402e8baf",
      "date": 1667203311328
    },
    {
      "type": "edit",
      "id": "5a042e134d32114b",
      "item": {
        "type": "paragraph",
        "id": "5a042e134d32114b",
        "text": "[…] In summary, the two computational models we are about to introduce differ in their definitions of data objects. For the page model, these are pages with read and write operations; for the object model, these are general objects with an encapsulated set of operations applicable to them."
      },
      "date": 1667203314886
    }
  ]
}