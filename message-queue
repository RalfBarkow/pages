{
  "title": "Message Queue",
  "story": [
    {
      "type": "paragraph",
      "id": "f71498dd682d61b6",
      "text": "In computer science, message queues and mailboxes are software-engineering components typically used for inter-process communication (IPC), or for inter-thread communication within the same process. They use a queue for messaging – the passing of control or of content. Group communication systems provide similar kinds of functionality. [https://en.wikipedia.org/wiki/Message_queue wikipedia]"
    },
    {
      "type": "paragraph",
      "id": "b9f1e0cd5a01e646",
      "text": "The message queue paradigm is a sibling of the publisher/subscriber pattern, and is typically one part of a larger message-oriented middleware system. Most messaging systems support both the publisher/subscriber and message queue models in their API, e.g. Java Message Service (JMS). "
    },
    {
      "type": "paragraph",
      "id": "db3d1bac1aaf4f1a",
      "text": "[…] Other implementations allow the passing of messages between different computer systems, potentially connecting multiple applications and multiple operating systems.[5] These message queuing systems typically provide [[Resilience]] functionality to ensure that messages do not get \"lost\" in the event of a system failure. […]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Message Queue",
        "story": []
      },
      "date": 1711405273930
    },
    {
      "item": {
        "type": "factory",
        "id": "f71498dd682d61b6"
      },
      "id": "f71498dd682d61b6",
      "type": "add",
      "date": 1711405297021
    },
    {
      "type": "edit",
      "id": "f71498dd682d61b6",
      "item": {
        "type": "paragraph",
        "id": "f71498dd682d61b6",
        "text": "In computer science, message queues and mailboxes are software-engineering components typically used for inter-process communication (IPC), or for inter-thread communication within the same process. They use a queue for messaging – the passing of control or of content. Group communication systems provide similar kinds of functionality. "
      },
      "date": 1711405304371
    },
    {
      "type": "edit",
      "id": "f71498dd682d61b6",
      "item": {
        "type": "paragraph",
        "id": "f71498dd682d61b6",
        "text": "In computer science, message queues and mailboxes are software-engineering components typically used for inter-process communication (IPC), or for inter-thread communication within the same process. They use a queue for messaging – the passing of control or of content. Group communication systems provide similar kinds of functionality. [https://en.wikipedia.org/wiki/Message_queue wikipedia]"
      },
      "date": 1711405319116
    },
    {
      "item": {
        "type": "factory",
        "id": "b9f1e0cd5a01e646"
      },
      "id": "b9f1e0cd5a01e646",
      "type": "add",
      "after": "f71498dd682d61b6",
      "date": 1711405381712
    },
    {
      "type": "edit",
      "id": "b9f1e0cd5a01e646",
      "item": {
        "type": "paragraph",
        "id": "b9f1e0cd5a01e646",
        "text": "The message queue paradigm is a sibling of the publisher/subscriber pattern, and is typically one part of a larger message-oriented middleware system. Most messaging systems support both the publisher/subscriber and message queue models in their API, e.g. Java Message Service (JMS). "
      },
      "date": 1711405389592
    },
    {
      "item": {
        "type": "factory",
        "id": "db3d1bac1aaf4f1a"
      },
      "id": "db3d1bac1aaf4f1a",
      "type": "add",
      "after": "b9f1e0cd5a01e646",
      "date": 1711405407413
    },
    {
      "type": "edit",
      "id": "db3d1bac1aaf4f1a",
      "item": {
        "type": "paragraph",
        "id": "db3d1bac1aaf4f1a",
        "text": "[…] Other implementations allow the passing of messages between different computer systems, potentially connecting multiple applications and multiple operating systems.[5] These message queuing systems typically provide [[Resilience]] functionality to ensure that messages do not get \"lost\" in the event of a system failure. "
      },
      "date": 1711405433117
    },
    {
      "type": "edit",
      "id": "db3d1bac1aaf4f1a",
      "item": {
        "type": "paragraph",
        "id": "db3d1bac1aaf4f1a",
        "text": "[…] Other implementations allow the passing of messages between different computer systems, potentially connecting multiple applications and multiple operating systems.[5] These message queuing systems typically provide [[Resilience]] functionality to ensure that messages do not get \"lost\" in the event of a system failure. […]"
      },
      "date": 1711405445468
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1711468951907
    }
  ]
}