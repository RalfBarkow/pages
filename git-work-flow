{
  "title": "Git Work Flow",
  "story": [
    {
      "type": "html",
      "text": "The nice thing about git is that it allow all kinds of different work flow. Let's write down ours and Let's talk",
      "id": "b7824da2b01a0073ff955ed8580bf8a3"
    },
    {
      "type": "html",
      "text": "\nADD A NEW FEATHER TO YOUR PROGRAM",
      "id": "cb8e04d81b12cd08480aaa7042fa970d"
    },
    {
      "type": "html",
      "text": "\nwhen I try to add a new feather to my code, I first create a new branch in a git repo, adding a small logical patch and then do commits on this new experimental branch, because I can not create the perfect code for the first time, I end up doing a lot of reverts, and still making a lot of patches that does not look logical. The good thing about git is that you can interactively merge your code back into your master branch, squashing small pieces patches into one to let it look logical, abandoning these junk patches...",
      "id": "00415abb94ed77769d6c74d358625766"
    },
    {
      "type": "html",
      "text": "--[[Peter Wang]]",
      "id": "b4c9bbc5ac646a3ccdfac39b44aea255"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e92027021d0e514ba1ca735394ed4432"
    },
    {
      "type": "html",
      "text": "I have recently begun to use git and I am still evolving different ways of doing the workflow.  I had previously been using [[Sub Version]] and find this much easier to work with. I find that gitg helps me a lot to visualise where I have reached. I am also doing code development on an experiments branch and can see patching back into the main branch later.  -- [[John Fletcher]]",
      "id": "7ea6193c8fb9dce738344584d2090195"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e92027021d0e514ba1ca735394ed4432"
    },
    {
      "type": "html",
      "text": "It is the first time I heard the name gitg, tried it, and it looks much nicer than gitk. But as a git front, the only one I am currently using and loving is <b>tig</b>, it is text-based, when I use git, I basically still with command line, thus a GUI front end(I used to use gitk a lot) takes much longer to start, and my eyes suffers from the flashes during its launching, that for me is a big distraction.",
      "id": "bf69c5cdb11bc4f22b71cd1431681cc3"
    },
    {
      "type": "html",
      "text": "\ngitg is now trying implementing some advanced git operation(like cherry-pick), I do not like that, I mean if people really want to be powerful with git, they should turn to command line, I've tried front ends like <b>qgit</b>, all I got is frustration and confusion.--[[Peter Wang]]",
      "id": "7c3c988ceb7fd75f153f72aebe19e044"
    },
    {
      "type": "html",
      "text": "<i>Not all the git front ends support submodules; gitg is one which does.</i>",
      "id": "9d5d2e3cc7e39a2c6950fb69ff9d705b"
    },
    {
      "type": "html",
      "text": "---- \nResources:  [http://www.gitcasts.com/ www.gitcasts.com]",
      "id": "b413f3ee8f7f80e05e14416c5d38bc62"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e92027021d0e514ba1ca735394ed4432"
    },
    {
      "type": "html",
      "text": "Branching model for library maintainance: [http://nvie.com/posts/a-successful-git-branching-model/ nvie.com]",
      "id": "ee4cc17fb6249a310ed7e8005054fdac"
    },
    {
      "type": "html",
      "text": " This is recommended for the maintenance of modules within the [[Boost Libraries]].",
      "id": "9eadccfe42beb4e9ea460011b7bade3a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e92027021d0e514ba1ca735394ed4432"
    },
    {
      "type": "html",
      "text": "see also: [[Git Version Control]]",
      "id": "91d757ce74aa69be4a8a057c67301dbb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "e92027021d0e514ba1ca735394ed4432"
    },
    {
      "type": "html",
      "text": "[[Category Configuration Management]]",
      "id": "dbcf0cce0885060a315280f589df932a"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?GitWorkFlow c2.com]",
      "id": "cfc1a77f6ca9089737df8eeae669f385"
    }
  ],
  "journal": [
    {
      "date": 1419346112000,
      "id": "f31c9770ddb68a2df119f20c3098b3fa",
      "type": "create",
      "item": {
        "title": "Git Work Flow",
        "story": [
          {
            "type": "html",
            "text": "The nice thing about git is that it allow all kinds of different work flow. Let's write down ours and Let's talk",
            "id": "b7824da2b01a0073ff955ed8580bf8a3"
          },
          {
            "type": "html",
            "text": "\nADD A NEW FEATHER TO YOUR PROGRAM",
            "id": "cb8e04d81b12cd08480aaa7042fa970d"
          },
          {
            "type": "html",
            "text": "\nwhen I try to add a new feather to my code, I first create a new branch in a git repo, adding a small logical patch and then do commits on this new experimental branch, because I can not create the perfect code for the first time, I end up doing a lot of reverts, and still making a lot of patches that does not look logical. The good thing about git is that you can interactively merge your code back into your master branch, squashing small pieces patches into one to let it look logical, abandoning these junk patches...",
            "id": "00415abb94ed77769d6c74d358625766"
          },
          {
            "type": "html",
            "text": "--[[Peter Wang]]",
            "id": "b4c9bbc5ac646a3ccdfac39b44aea255"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e92027021d0e514ba1ca735394ed4432"
          },
          {
            "type": "html",
            "text": "I have recently begun to use git and I am still evolving different ways of doing the workflow.  I had previously been using [[Sub Version]] and find this much easier to work with. I find that gitg helps me a lot to visualise where I have reached. I am also doing code development on an experiments branch and can see patching back into the main branch later.  -- [[John Fletcher]]",
            "id": "7ea6193c8fb9dce738344584d2090195"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e92027021d0e514ba1ca735394ed4432"
          },
          {
            "type": "html",
            "text": "It is the first time I heard the name gitg, tried it, and it looks much nicer than gitk. But as a git front, the only one I am currently using and loving is <b>tig</b>, it is text-based, when I use git, I basically still with command line, thus a GUI front end(I used to use gitk a lot) takes much longer to start, and my eyes suffers from the flashes during its launching, that for me is a big distraction.",
            "id": "bf69c5cdb11bc4f22b71cd1431681cc3"
          },
          {
            "type": "html",
            "text": "\ngitg is now trying implementing some advanced git operation(like cherry-pick), I do not like that, I mean if people really want to be powerful with git, they should turn to command line, I've tried front ends like <b>qgit</b>, all I got is frustration and confusion.--[[Peter Wang]]",
            "id": "7c3c988ceb7fd75f153f72aebe19e044"
          },
          {
            "type": "html",
            "text": "<i>Not all the git front ends support submodules; gitg is one which does.</i>",
            "id": "9d5d2e3cc7e39a2c6950fb69ff9d705b"
          },
          {
            "type": "html",
            "text": "---- \nResources:  [http://www.gitcasts.com/ www.gitcasts.com]",
            "id": "b413f3ee8f7f80e05e14416c5d38bc62"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e92027021d0e514ba1ca735394ed4432"
          },
          {
            "type": "html",
            "text": "Branching model for library maintainance: [http://nvie.com/posts/a-successful-git-branching-model/ nvie.com]",
            "id": "ee4cc17fb6249a310ed7e8005054fdac"
          },
          {
            "type": "html",
            "text": " This is recommended for the maintenance of modules within the [[Boost Libraries]].",
            "id": "9eadccfe42beb4e9ea460011b7bade3a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e92027021d0e514ba1ca735394ed4432"
          },
          {
            "type": "html",
            "text": "see also: [[Git Version Control]]",
            "id": "91d757ce74aa69be4a8a057c67301dbb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "e92027021d0e514ba1ca735394ed4432"
          },
          {
            "type": "html",
            "text": "[[Category Configuration Management]]",
            "id": "dbcf0cce0885060a315280f589df932a"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?GitWorkFlow c2.com]",
            "id": "cfc1a77f6ca9089737df8eeae669f385"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1707736097748
    }
  ]
}