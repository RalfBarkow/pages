{
  "title": "Moldable Development",
  "story": [
    {
      "type": "markdown",
      "id": "bede0f70a1cbe4ea",
      "text": "is a way of programming through which you construct custom tools for each problem\n\nSoftware is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n"
    },
    {
      "type": "video",
      "id": "b6be16139d0e1a49",
      "text": "YOUTUBE Pot9GnHFOVU\n[[Tudor Gîrba]] - Moldable development"
    },
    {
      "type": "markdown",
      "id": "a56c8803eade64dd",
      "text": " See also [https://tube.switch.ch/videos/326a1304  Moldable Development (Tudor Girba guest lecture)], 5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
    },
    {
      "type": "markdown",
      "id": "5148336a1b0bfcb6",
      "text": "Software is highly contextual. Context has many forms. Simply choosing one framework over the other will change your constraints, the code will be organized differently, and the debugging problems will be different. All these pose different needs, and tools have to acommodate them. For tools to be effective, they need to take that context into account.\n"
    },
    {
      "type": "markdown",
      "id": "4d3b9af804ee9e64",
      "text": "A tool that gives you a button encodes in that button an assumption about your specific question and bakes the solution in the response. However, when context is king, we cannot predict specific problems. We can only predict classes of problems. That is why the environment should focus less on hardcoded buttons and more on providing you ways to build your own buttons.\n"
    },
    {
      "type": "markdown",
      "id": "587547587303ff88",
      "text": "# McLuhan's law, or why tools are essential in software engineering\n\n"
    },
    {
      "type": "markdown",
      "id": "3cc7d2370ea9d0cc",
      "text": "In a summary of Marshall McLuhan's work, John Culkin warned us that ''We shape our tools, and thereafter our tools shape us''. This is a remarkable statement that deserves closer scrutiny. If it is correct, we should explicitly choose the tools we use because they will determine the way we are going to think.\n"
    },
    {
      "type": "markdown",
      "id": "715ba3337bf9a560",
      "text": "If we are like most people, we have checked our smartphone within 10 minutes of waking up this morning. This need did not exist before the introduction of the smartphone. The correlation indicates that is not unreasonable to view the tool as having manufactured the need.\n"
    },
    {
      "type": "markdown",
      "id": "203f2d2b95085970",
      "text": "Software is  data.  Data does not have a shape. Yet, we need shape to reason about it. The shape of software is provided by the tool. That makes the tool essential. So, what characteristics should the tool have?"
    },
    {
      "type": "pagefold",
      "id": "f0aa39abcb22638c",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "a9f48cc5cb58aed1",
      "site": "wiki.ralfbarkow.ch",
      "slug": "moldable-development-patterns",
      "title": "Moldable Development Patterns",
      "text": "When we think of software development, we typically think about the active part. Of constructing. Of building new worlds that never existed. It's an empowering view."
    },
    {
      "type": "reference",
      "id": "ae4652ef889059fc",
      "site": "wiki.ralfbarkow.ch",
      "slug": "moldable-development-learnable-patterns",
      "title": "Moldable Development Learnable Patterns",
      "text": "Write a couple of sentences that describe the solution captured by this pattern. Drag flags to make connections."
    },
    {
      "type": "reference",
      "id": "e1da5db9e88305a6",
      "site": "recurse.pixiereport.com",
      "slug": "moldable-development",
      "title": "Moldable Development",
      "text": "[[Recurse Center Topics]] with Alberto Torres."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Moldable Development",
        "story": []
      },
      "date": 1627387933584
    },
    {
      "item": {
        "type": "factory",
        "id": "bede0f70a1cbe4ea"
      },
      "id": "bede0f70a1cbe4ea",
      "type": "add",
      "date": 1627387942261
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "[https://tube.switch.ch/videos/326a1304 page]"
      },
      "date": 1627387949472
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "[https://tube.switch.ch/videos/326a1304 page] Moldable Development (Tudor Girba guest lecture)\n5, SMA — Software Modeling and Analysis"
      },
      "date": 1627387960113
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "[https://tube.switch.ch/videos/326a1304 page] Moldable Development ([[Tudor Girba]] guest lecture)\n5, SMA — Software Modeling and Analysis"
      },
      "date": 1627388000496
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "[https://tube.switch.ch/videos/326a1304 page] Moldable Development ([[Tudor Girba]] guest lecture)\n5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "date": 1627388071686
    },
    {
      "item": {
        "type": "factory",
        "id": "55966d9ff36a19d9"
      },
      "id": "55966d9ff36a19d9",
      "type": "add",
      "after": "bede0f70a1cbe4ea",
      "date": 1627503695218
    },
    {
      "type": "edit",
      "id": "55966d9ff36a19d9",
      "item": {
        "type": "markdown",
        "id": "55966d9ff36a19d9",
        "text": "Moldable Development is a way of programming through which you construct custom tools for each problem."
      },
      "date": 1627503698047
    },
    {
      "item": {
        "type": "factory",
        "id": "e80acb935ef680ba"
      },
      "id": "e80acb935ef680ba",
      "type": "add",
      "after": "55966d9ff36a19d9",
      "date": 1627503702819
    },
    {
      "type": "remove",
      "id": "e80acb935ef680ba",
      "date": 1627503705982
    },
    {
      "type": "edit",
      "id": "55966d9ff36a19d9",
      "item": {
        "type": "markdown",
        "id": "55966d9ff36a19d9",
        "text": "Moldable Development is a way of programming through which you construct custom tools for each problem.\n"
      },
      "date": 1627503715030
    },
    {
      "type": "add",
      "id": "807e963b0627be49",
      "item": {
        "type": "markdown",
        "id": "807e963b0627be49",
        "text": "Software is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n"
      },
      "after": "55966d9ff36a19d9",
      "date": 1627503716370
    },
    {
      "type": "edit",
      "id": "807e963b0627be49",
      "item": {
        "type": "markdown",
        "id": "807e963b0627be49",
        "text": "Software is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n\n"
      },
      "date": 1627503729567
    },
    {
      "type": "add",
      "id": "5148336a1b0bfcb6",
      "item": {
        "type": "markdown",
        "id": "5148336a1b0bfcb6",
        "text": "Software is highly contextual. Context has many forms. Simply choosing one framework over the other will change your constraints, the code will be organized differently, and the debugging problems will be different. All these pose different needs, and tools have to acommodate them. For tools to be effective, they need to take that context into account."
      },
      "after": "807e963b0627be49",
      "date": 1627503730771
    },
    {
      "type": "edit",
      "id": "5148336a1b0bfcb6",
      "item": {
        "type": "markdown",
        "id": "5148336a1b0bfcb6",
        "text": "Software is highly contextual. Context has many forms. Simply choosing one framework over the other will change your constraints, the code will be organized differently, and the debugging problems will be different. All these pose different needs, and tools have to acommodate them. For tools to be effective, they need to take that context into account.\n"
      },
      "date": 1627503740040
    },
    {
      "type": "add",
      "id": "4d3b9af804ee9e64",
      "item": {
        "type": "markdown",
        "id": "4d3b9af804ee9e64",
        "text": "A tool that gives you a button encodes in that button an assumption about your specific question and bakes the solution in the response. However, when context is king, we cannot predict specific problems. We can only predict classes of problems. That is why the environment should focus less on hardcoded buttons and more on providing you ways to build your own buttons."
      },
      "after": "5148336a1b0bfcb6",
      "date": 1627503743248
    },
    {
      "type": "edit",
      "id": "55966d9ff36a19d9",
      "item": {
        "type": "markdown",
        "id": "55966d9ff36a19d9",
        "text": "Moldable Development is a way of programming through which we construct custom tools for each problem.\n"
      },
      "date": 1627503769692
    },
    {
      "type": "edit",
      "id": "4d3b9af804ee9e64",
      "item": {
        "type": "markdown",
        "id": "4d3b9af804ee9e64",
        "text": "A tool that gives you a button encodes in that button an assumption about your specific question and bakes the solution in the response. However, when context is king, we cannot predict specific problems. We can only predict classes of problems. That is why the environment should focus less on hardcoded buttons and more on providing you ways to build your own buttons.\n"
      },
      "date": 1627503808867
    },
    {
      "type": "add",
      "id": "587547587303ff88",
      "item": {
        "type": "markdown",
        "id": "587547587303ff88",
        "text": "#McLuhan's law, or why tools are essential in software engineering\n"
      },
      "after": "4d3b9af804ee9e64",
      "date": 1627503816565
    },
    {
      "type": "edit",
      "id": "587547587303ff88",
      "item": {
        "type": "markdown",
        "id": "587547587303ff88",
        "text": "# McLuhan's law, or why tools are essential in software engineering\n\n"
      },
      "date": 1627503824373
    },
    {
      "type": "add",
      "id": "3cc7d2370ea9d0cc",
      "item": {
        "type": "markdown",
        "id": "3cc7d2370ea9d0cc",
        "text": "In a summary of Marshall McLuhan's work, John Culkin warned us that ''We shape our tools, and thereafter our tools shape us''. This is a remarkable statement that deserves closer scrutiny. If it is correct, we should explicitly choose the tools we use because they will determine the way we are going to think."
      },
      "after": "587547587303ff88",
      "date": 1627503855447
    },
    {
      "type": "edit",
      "id": "3cc7d2370ea9d0cc",
      "item": {
        "type": "markdown",
        "id": "3cc7d2370ea9d0cc",
        "text": "In a summary of Marshall McLuhan's work, John Culkin warned us that ''We shape our tools, and thereafter our tools shape us''. This is a remarkable statement that deserves closer scrutiny. If it is correct, we should explicitly choose the tools we use because they will determine the way we are going to think.\n"
      },
      "date": 1627503862573
    },
    {
      "type": "add",
      "id": "715ba3337bf9a560",
      "item": {
        "type": "markdown",
        "id": "715ba3337bf9a560",
        "text": "If we are like most people, we have checked our smartphone within 10 minutes of waking up this morning. This need did not exist before the introduction of the smartphone. The correlation indicates that is not unreasonable to view the tool as having manufactured the need.\n"
      },
      "after": "3cc7d2370ea9d0cc",
      "date": 1627503886133
    },
    {
      "type": "add",
      "id": "203f2d2b95085970",
      "item": {
        "type": "markdown",
        "id": "203f2d2b95085970",
        "text": "Software is  data.  Data does not have a shape. Yet, we need shape to reason about it. The shape of software is provided by the tool. That makes the tool essential. So, what characteristics should the tool have?"
      },
      "after": "715ba3337bf9a560",
      "date": 1627503897701
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "Moldable development is a way of programming through which you construct custom tools for each problem.\n\nSoftware is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n"
      },
      "date": 1635931048239
    },
    {
      "type": "add",
      "id": "a56c8803eade64dd",
      "item": {
        "type": "markdown",
        "id": "a56c8803eade64dd",
        "text": "[https://tube.switch.ch/videos/326a1304 page] Moldable Development ([[Tudor Girba]] guest lecture)\n5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "after": "bede0f70a1cbe4ea",
      "date": 1635931049672
    },
    {
      "item": {
        "type": "factory",
        "id": "b6be16139d0e1a49"
      },
      "id": "b6be16139d0e1a49",
      "type": "add",
      "after": "203f2d2b95085970",
      "date": 1635931058862
    },
    {
      "type": "edit",
      "id": "b6be16139d0e1a49",
      "item": {
        "type": "video",
        "id": "b6be16139d0e1a49",
        "text": "YOUTUBE Pot9GnHFOVU"
      },
      "date": 1635931069008
    },
    {
      "id": "b6be16139d0e1a49",
      "type": "move",
      "order": [
        "bede0f70a1cbe4ea",
        "b6be16139d0e1a49",
        "a56c8803eade64dd",
        "55966d9ff36a19d9",
        "807e963b0627be49",
        "5148336a1b0bfcb6",
        "4d3b9af804ee9e64",
        "587547587303ff88",
        "3cc7d2370ea9d0cc",
        "715ba3337bf9a560",
        "203f2d2b95085970"
      ],
      "date": 1635931078093
    },
    {
      "type": "edit",
      "id": "b6be16139d0e1a49",
      "item": {
        "type": "video",
        "id": "b6be16139d0e1a49",
        "text": "YOUTUBE Pot9GnHFOVU\n[[Tudor Gîrba]] - Moldable development"
      },
      "date": 1635931109771
    },
    {
      "type": "edit",
      "id": "a56c8803eade64dd",
      "item": {
        "type": "markdown",
        "id": "a56c8803eade64dd",
        "text": " See also [https://tube.switch.ch/videos/326a1304 page] Moldable Development ([[Tudor Girba]] guest lecture)\n5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "date": 1635931153874
    },
    {
      "type": "edit",
      "id": "a56c8803eade64dd",
      "item": {
        "type": "markdown",
        "id": "a56c8803eade64dd",
        "text": " See also [https://tube.switch.ch/videos/326a1304  Moldable Development ([[Tudor Girba]] guest lecture)]\n5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "date": 1635931177439
    },
    {
      "type": "edit",
      "id": "a56c8803eade64dd",
      "item": {
        "type": "markdown",
        "id": "a56c8803eade64dd",
        "text": " See also [https://tube.switch.ch/videos/326a1304  Moldable Development (Tudor Girba guest lecture)]\n5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "date": 1635931189819
    },
    {
      "type": "edit",
      "id": "a56c8803eade64dd",
      "item": {
        "type": "markdown",
        "id": "a56c8803eade64dd",
        "text": " See also [https://tube.switch.ch/videos/326a1304  Moldable Development (Tudor Girba guest lecture)], 5, SMA — Software Modeling and Analysis, Published by [[Oscar Nierstrasz]], Universität Bern on 14 October 2020"
      },
      "date": 1635931202770
    },
    {
      "type": "remove",
      "id": "55966d9ff36a19d9",
      "date": 1635931221344
    },
    {
      "type": "remove",
      "id": "807e963b0627be49",
      "date": 1635931223628
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "is a way of programming through which you construct custom tools for each problem.\n\nSoftware is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n"
      },
      "date": 1694256190502
    },
    {
      "type": "edit",
      "id": "bede0f70a1cbe4ea",
      "item": {
        "type": "markdown",
        "id": "bede0f70a1cbe4ea",
        "text": "is a way of programming through which you construct custom tools for each problem\n\nSoftware is shapeless. We, humans, need a shape to reason about anything. Tools provide the shape of software. By molding our tools to match the context of our systems, every problem in software can be exhibited in a way that a human can relate to and reason about.\n"
      },
      "date": 1694256206724
    },
    {
      "item": {
        "type": "factory",
        "id": "f0aa39abcb22638c"
      },
      "id": "f0aa39abcb22638c",
      "type": "add",
      "after": "203f2d2b95085970",
      "date": 1699438698371
    },
    {
      "type": "edit",
      "id": "f0aa39abcb22638c",
      "item": {
        "type": "pagefold",
        "id": "f0aa39abcb22638c",
        "text": "~"
      },
      "date": 1699438700941
    },
    {
      "item": {
        "type": "factory",
        "id": "a9f48cc5cb58aed1"
      },
      "id": "a9f48cc5cb58aed1",
      "type": "add",
      "after": "f0aa39abcb22638c",
      "date": 1699438702273
    },
    {
      "type": "edit",
      "id": "a9f48cc5cb58aed1",
      "item": {
        "type": "reference",
        "id": "a9f48cc5cb58aed1",
        "site": "wiki.ralfbarkow.ch",
        "slug": "moldable-development-patterns",
        "title": "Moldable Development Patterns",
        "text": "When we think of software development, we typically think about the active part. Of constructing. Of building new worlds that never existed. It's an empowering view."
      },
      "date": 1699438704208
    },
    {
      "item": {
        "type": "factory",
        "id": "ae4652ef889059fc"
      },
      "id": "ae4652ef889059fc",
      "type": "add",
      "after": "a9f48cc5cb58aed1",
      "date": 1699438817882
    },
    {
      "type": "edit",
      "id": "ae4652ef889059fc",
      "item": {
        "type": "reference",
        "id": "ae4652ef889059fc",
        "site": "wiki.ralfbarkow.ch",
        "slug": "moldable-development-learnable-patterns",
        "title": "Moldable Development Learnable Patterns",
        "text": "Write a couple of sentences that describe the solution captured by this pattern. Drag flags to make connections."
      },
      "date": 1699438820779
    },
    {
      "id": "e1da5db9e88305a6",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "e1da5db9e88305a6",
        "site": "recurse.pixiereport.com",
        "slug": "moldable-development",
        "title": "Moldable Development",
        "text": "Moldable Development patterns."
      },
      "after": "ae4652ef889059fc",
      "attribution": {
        "page": "2023-12-17"
      },
      "date": 1702830828746
    },
    {
      "type": "edit",
      "id": "e1da5db9e88305a6",
      "item": {
        "type": "reference",
        "id": "e1da5db9e88305a6",
        "site": "recurse.pixiereport.com",
        "slug": "moldable-development",
        "title": "Moldable Development",
        "text": "[[Recurse Center Topics]]: Moldable Development and patterns with Alberto Torres."
      },
      "date": 1702830923071
    },
    {
      "type": "edit",
      "id": "e1da5db9e88305a6",
      "item": {
        "type": "reference",
        "id": "e1da5db9e88305a6",
        "site": "recurse.pixiereport.com",
        "slug": "moldable-development",
        "title": "Moldable Development",
        "text": "[[Recurse Center Topics]]: Moldable Development and Patterns with Alberto Torres."
      },
      "date": 1702830938417
    },
    {
      "type": "edit",
      "id": "e1da5db9e88305a6",
      "item": {
        "type": "reference",
        "id": "e1da5db9e88305a6",
        "site": "recurse.pixiereport.com",
        "slug": "moldable-development",
        "title": "Moldable Development",
        "text": "[[Recurse Center Topics]] with Alberto Torres."
      },
      "date": 1702830955871
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1704997480564
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1709844854736
    }
  ]
}