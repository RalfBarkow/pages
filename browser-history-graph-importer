{
  "title": "Browser History Graph Importer",
  "story": [
    {
      "type": "paragraph",
      "id": "b5ee79c2ab6e0270",
      "text": "Describe here the diagramming tool to be translated and how one can get a json formatted description out of it."
    },
    {
      "type": "frame",
      "id": "d28867297e3b4f1f",
      "text": "http://hsc.fed.wiki/assets/scripts/import-foreign-json.html\nHEIGHT 240"
    },
    {
      "type": "markdown",
      "id": "dcf63055151a61af",
      "text": "Add code here to extract nodes and relations from _json_ and add them to _graph_. Remember node ids in _nids_."
    },
    {
      "type": "code",
      "id": "c552922cec666ac0",
      "text": "json = json.reverse()\nconsole.log(json)\n"
    },
    {
      "type": "code",
      "id": "b251bcc1fc51062a",
      "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  obj.forEach(item =>{\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  })\n})"
    },
    {
      "type": "code",
      "id": "ece8d123496a45c7",
      "text": "/*\njson.forEach(item => {\n  if(!(item.id in nids)){\n    console.log(item.id)\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)\n*/"
    },
    {
      "type": "code",
      "id": "5f1424e04ea57f84",
      "text": "/*\njson.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n  else{\n    if(!(ref in nids)){\n      nids[ref] = graph.addNode(\"mystery\",{name:ref})\n    }\n    graph.addRel(\"miss\",nids[item.visitId],nids[ref],{})\n  }\n})\n*/"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Browser History Graph Importer",
        "story": [
          {
            "type": "paragraph",
            "id": "b5ee79c2ab6e0270",
            "text": "Describe here the diagramming tool to be translated and how one can get a json formatted description out of it."
          },
          {
            "type": "frame",
            "id": "d28867297e3b4f1f",
            "text": "http://hsc.fed.wiki/assets/scripts/import-foreign-json.html\nHEIGHT 240"
          },
          {
            "type": "markdown",
            "id": "dcf63055151a61af",
            "text": "Add code here to extract nodes and relations from _json_ and add them to _graph_. Remember node ids in _nids_."
          },
          {
            "type": "code",
            "id": "c552922cec666ac0",
            "text": "console.log(json)\njson.forEach(item => {\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
          },
          {
            "type": "code",
            "id": "5f1424e04ea57f84",
            "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (ref in nids)){\n    //graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
          }
        ]
      },
      "date": 1671572233376
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson.forEach(item => {\n  debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671572658839
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson.reverse\njson.forEach(item => {\n  debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671572731586
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson.reverse\nconsole.log(json)\njson.forEach(item => {\n  //debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671572774452
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  //debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671572801401
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\ndebugger\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  //debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671572871566
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\n//debugger\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  //debugger\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573147161
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573166604
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  if(!nids[item.id]){\n    console.log(nids[item.id])\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573261414
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log\n  if(!nids[item.id]){\n    console.log(nids[item.id])\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573322981
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!nids[item.id]){\n    console.log(nids[item.id])\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573340096
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!nids[item.id]){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n}\n})"
      },
      "date": 1671573402675
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "console.log(json)\njson = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n  }\n})"
      },
      "date": 1671573467284
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n  }\n})"
      },
      "date": 1671573499743
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n  }\nconsole.log(nids)\n})"
      },
      "date": 1671573545268
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.id] = graph.addNode(item.id,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671573570936
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (ref in nids)){\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671573716097
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = json[item.referringVisitId]\n  if(ref != 0 && (ref in nids)){\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671573801952
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = json[item.referringVisitId - 1].id\n  if(ref != 0 && (ref in nids)){\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671573893458
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (ref in nids)){\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671573919221
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    debugger\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671574083256
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(\"Ref\",nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671592441166
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(json[ref-1].transition,nids[item.id],nids[ref],{})\n  }\n})"
      },
      "date": 1671594250033
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(json[ref-1].transition,nids[item.id],json[ref-1].id,{})\n  }\n})"
      },
      "date": 1671594267079
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(json[ref-1].transition,json[ref-1].id,nids[item.id],,{})\n  }\n})"
      },
      "date": 1671594430597
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(json[ref-1].transition,json[ref-1].id,nids[item.id],{})\n  }\n})"
      },
      "date": 1671594778724
    },
    {
      "type": "fork",
      "date": 1671595270601
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    debugger\n    graph.addRel(json[ref-1].transition,json[ref-1].id,nids[item.id],{})\n  }\n})"
      },
      "date": 1671595893412
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    graph.addRel(json[ref-1].transition,json[ref-1].id,item.id,{})\n  }\n})"
      },
      "date": 1671595947694
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    const visitID = \n    graph.addRel(json[ref-1].transition,json[ref-1].id,item.id,{})\n  }\n})"
      },
      "date": 1671596391310
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.visitId] = graph.addNode(item.id,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671596919282
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.visitId] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671597077299
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.visitId in nids)){\n    nids[item.visitId] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671597179577
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.idn nids)){\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671598436878
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  console.log(item.id)\n  if(!(item.id in nids)){\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671598491480
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  if(!(item.id in nids)){\n    console.log(item.id)\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671598687546
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    //const visitID = \n    graph.addRel(json[ref-1].transition,json[ref-1].id,item.id,{})\n  }\n})"
      },
      "date": 1671598770948
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    debugger\n    graph.addRel(json[ref-1].transition,json[ref-1].id,item.id,{})\n  }\n})"
      },
      "date": 1671598835232
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    debugger\n    graph.addRel(json[ref-1].transition,nids[json[ref-1].id],nids[item.id],{})\n  }\n})"
      },
      "date": 1671598993144
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    //debugger\n    graph.addRel(json[ref-1].transition,nids[json[ref-1].id],nids[item.id],{})\n  }\n})"
      },
      "date": 1671599020161
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  if(!(item.visitId in nids)){\n    console.log(item.visitId)\n    nids[item.visitId] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671599610310
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.id in nids)){\n    console.log(item.id)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n})"
      },
      "date": 1671600829904
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids)){\n    console.log(item.id)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n})"
      },
      "date": 1671600896559
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n})"
      },
      "date": 1671600990205
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n})"
      },
      "date": 1671601112190
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n  else{\n\n}\n})"
      },
      "date": 1671601395340
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n  else{\n    graph.addRel(\"miss\",nids[item.visitId],graph.addNode(\"mystery\",{name:ref}),{})\n  }\n})"
      },
      "date": 1671601657505
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n  else{\n    if(!(ref in nids)){\n      nids[ref] = graph.addNode(\"mystery\",{name:ref})\n    }\n    graph.addRel(\"miss\",nids[item.visitId],nids[ref],{})\n  }\n})"
      },
      "date": 1671602062072
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\njson.forEach(item => {\n  if(!(item.id in nids)){\n    console.log(item.id)\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671603144802
    },
    {
      "type": "edit",
      "id": "5f1424e04ea57f84",
      "item": {
        "type": "code",
        "id": "5f1424e04ea57f84",
        "text": "/*\njson.forEach(item => {\n  const ref = item.referringVisitId\n  if(ref != 0 && (item.visitId in nids) && (ref in nids)){\n    console.log(item.visitId)\n    //debugger\n    graph.addRel(\"link\",nids[ref],nids[item.visitId],{})\n  }\n  else{\n    if(!(ref in nids)){\n      nids[ref] = graph.addNode(\"mystery\",{name:ref})\n    }\n    graph.addRel(\"miss\",nids[item.visitId],nids[ref],{})\n  }\n})\n*/"
      },
      "date": 1671603901185
    },
    {
      "type": "edit",
      "id": "c552922cec666ac0",
      "item": {
        "type": "code",
        "id": "c552922cec666ac0",
        "text": "json = json.reverse()\nconsole.log(json)\n"
      },
      "date": 1671603942162
    },
    {
      "item": {
        "type": "factory",
        "id": "ece8d123496a45c7"
      },
      "id": "ece8d123496a45c7",
      "type": "add",
      "after": "5f1424e04ea57f84",
      "date": 1671603946643
    },
    {
      "type": "edit",
      "id": "ece8d123496a45c7",
      "item": {
        "type": "code",
        "id": "ece8d123496a45c7",
        "text": "json.forEach(item => {\n  if(!(item.id in nids)){\n    console.log(item.id)\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)"
      },
      "date": 1671603951346
    },
    {
      "item": {
        "type": "factory",
        "id": "b251bcc1fc51062a"
      },
      "id": "b251bcc1fc51062a",
      "type": "add",
      "after": "ece8d123496a45c7",
      "date": 1671603955503
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  \n})"
      },
      "date": 1671603997472
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  console.log(json.filter(e => e.visitId === ref))\n})"
      },
      "date": 1671604093280
    },
    {
      "id": "b251bcc1fc51062a",
      "type": "move",
      "order": [
        "b5ee79c2ab6e0270",
        "d28867297e3b4f1f",
        "dcf63055151a61af",
        "c552922cec666ac0",
        "b251bcc1fc51062a",
        "5f1424e04ea57f84",
        "ece8d123496a45c7"
      ],
      "date": 1671604095643
    },
    {
      "id": "ece8d123496a45c7",
      "type": "move",
      "order": [
        "b5ee79c2ab6e0270",
        "d28867297e3b4f1f",
        "dcf63055151a61af",
        "c552922cec666ac0",
        "b251bcc1fc51062a",
        "ece8d123496a45c7",
        "5f1424e04ea57f84"
      ],
      "date": 1671604099312
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  console.log(json.filter(e => {e.visitId === ref}))\n})"
      },
      "date": 1671604206798
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n\n  console.log(json.filter(e => {e.visitId === ref}))\n})"
      },
      "date": 1671604291208
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = \n  console.log(json.filter(e => {e.visitId === ref}))\n})"
      },
      "date": 1671604323780
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n})"
      },
      "date": 1671604424511
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  nids[]\n})"
      },
      "date": 1671604600829
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  nids[obj.id] = graph.addNode(item.transition,{name:item.title})})"
      },
      "date": 1671604650898
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  obj.forEach(item =>{\n  nids[obj.id] = graph.addNode(item.transition,{name:item.title})\n\n})"
      },
      "date": 1671604783893
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  obj.forEach(item =>{\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  })\n}"
      },
      "date": 1671604868369
    },
    {
      "type": "edit",
      "id": "b251bcc1fc51062a",
      "item": {
        "type": "code",
        "id": "b251bcc1fc51062a",
        "text": "json.forEach(item => {\n  const ref = item.referringVisitId\n  const obj = json.filter(function (entry){return entry.visitId === ref})\n  console.log(obj)\n  obj.forEach(item =>{\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  })\n})"
      },
      "date": 1671604903976
    },
    {
      "type": "edit",
      "id": "ece8d123496a45c7",
      "item": {
        "type": "code",
        "id": "ece8d123496a45c7",
        "text": "/*\njson.forEach(item => {\n  if(!(item.id in nids)){\n    console.log(item.id)\n    nids[item.id] = graph.addNode(item.transition,{name:item.title})\n  }\n})\nconsole.log(nids)\n*/"
      },
      "date": 1671690710338
    },
    {
      "type": "fork",
      "site": "robert.wiki.openlearning.cc",
      "date": 1671690908360
    }
  ]
}