{
  "title": "Boost Phoenix Library",
  "story": [
    {
      "type": "html",
      "text": "The [[Boost Phoenix Library]] is one of the [[Boost Libraries]]. The main author is Joel de Guzman. It provides a different route to [[Functional Programming In Cpp]].  It claims to be influenced both by FC++ ([[Functoids In Cpp]]) and the [[Boost Lambda Library]].",
      "id": "1832477f27b78432b9a19c79fc5b0ad4"
    },
    {
      "type": "html",
      "text": "\nIt also implements closures.",
      "id": "895332a61be2c69ae3b8cd309c0be0d9"
    },
    {
      "type": "html",
      "text": " [http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/index.html www.boost.org] (Phoenix V3.0)",
      "id": "6930e211124130c2c9a25738d9e9eea9"
    },
    {
      "type": "html",
      "text": " [http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/phoenix/what_s_new/phoenix_3_0.html www.boost.org] notes a breaking change from earlier code.",
      "id": "bedd8ee1c59d54320a9587c29a990b1d"
    },
    {
      "type": "html",
      "text": "\nQuote from [http://www.boost.org/doc/libs/1_39_0/libs/spirit/classic/phoenix/doc/preface.html www.boost.org] (not the latest version).",
      "id": "79a25d0696373a0ad0f580a31ec5e60f"
    },
    {
      "type": "html",
      "text": "<i>What really motivated the author to write Phoenix is the lack of access to a true stack-frame with local variables (closures) in all C++ FP libraries in existence so far. When emulating functions in the form of functors, the most basic ingredient is missing: local variables and a stack. Current FP libraries emulate closures using state variables in functors. In more evolved FP applications, this \"poor man's closure\" is simply inadequate.</i>",
      "id": "a3eee5ad909b163872a19ba77c620ca8"
    },
    {
      "type": "html",
      "text": "\nIt is used in the [[Boost Spirit Library]]. It uses the [[Boost Proto Library]] and [[Boost Fusion]]. It is compatible with [[Boost Bind]].",
      "id": "792b2e631fd3bc23c525900c96aea1ad"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "3633ad0c59b276beb65cc8cc9c9c7a57"
    },
    {
      "type": "html",
      "text": "[[Category Boost]] [[Category Cpp]] [[Category Cpp Templates]]",
      "id": "dda74d2f00ead80dc7fb9768f93148f9"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?BoostPhoenixLibrary c2.com]",
      "id": "f88315a7cdc42a5ea15a010f60337e3a"
    }
  ],
  "journal": [
    {
      "date": 1419345535000,
      "id": "65606ee3878399960b3648f3a98c5564",
      "type": "create",
      "item": {
        "title": "Boost Phoenix Library",
        "story": [
          {
            "type": "html",
            "text": "The [[Boost Phoenix Library]] is one of the [[Boost Libraries]]. The main author is Joel de Guzman. It provides a different route to [[Functional Programming In Cpp]].  It claims to be influenced both by FC++ ([[Functoids In Cpp]]) and the [[Boost Lambda Library]].",
            "id": "1832477f27b78432b9a19c79fc5b0ad4"
          },
          {
            "type": "html",
            "text": "\nIt also implements closures.",
            "id": "895332a61be2c69ae3b8cd309c0be0d9"
          },
          {
            "type": "html",
            "text": " [http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/index.html www.boost.org] (Phoenix V3.0)",
            "id": "6930e211124130c2c9a25738d9e9eea9"
          },
          {
            "type": "html",
            "text": " [http://www.boost.org/doc/libs/1_50_0/libs/phoenix/doc/html/phoenix/what_s_new/phoenix_3_0.html www.boost.org] notes a breaking change from earlier code.",
            "id": "bedd8ee1c59d54320a9587c29a990b1d"
          },
          {
            "type": "html",
            "text": "\nQuote from [http://www.boost.org/doc/libs/1_39_0/libs/spirit/classic/phoenix/doc/preface.html www.boost.org] (not the latest version).",
            "id": "79a25d0696373a0ad0f580a31ec5e60f"
          },
          {
            "type": "html",
            "text": "<i>What really motivated the author to write Phoenix is the lack of access to a true stack-frame with local variables (closures) in all C++ FP libraries in existence so far. When emulating functions in the form of functors, the most basic ingredient is missing: local variables and a stack. Current FP libraries emulate closures using state variables in functors. In more evolved FP applications, this \"poor man's closure\" is simply inadequate.</i>",
            "id": "a3eee5ad909b163872a19ba77c620ca8"
          },
          {
            "type": "html",
            "text": "\nIt is used in the [[Boost Spirit Library]]. It uses the [[Boost Proto Library]] and [[Boost Fusion]]. It is compatible with [[Boost Bind]].",
            "id": "792b2e631fd3bc23c525900c96aea1ad"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "3633ad0c59b276beb65cc8cc9c9c7a57"
          },
          {
            "type": "html",
            "text": "[[Category Boost]] [[Category Cpp]] [[Category Cpp Templates]]",
            "id": "dda74d2f00ead80dc7fb9768f93148f9"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?BoostPhoenixLibrary c2.com]",
            "id": "f88315a7cdc42a5ea15a010f60337e3a"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1707736010601
    }
  ]
}