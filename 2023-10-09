{
  "title": "2023-10-09",
  "story": [
    {
      "type": "paragraph",
      "id": "41f26ccbcd548b45",
      "text": "⇒ [[Rente]] [⇐ [[Economics]]] ⇒ [[Landlord Instead of an Advertiser]] ⇒ [[Internet Landlord]] ⇒ [[Invest in Infrastructure]]"
    },
    {
      "type": "paragraph",
      "id": "d204add219c3bcab",
      "text": "The [[dreyeck gmbh]] company has invested heavily in infrastructure and will continue to do so in order to serve its customers."
    },
    {
      "type": "paragraph",
      "id": "7ed421a360d9dced",
      "text": "⇒ [[Invest in Infrastructure]] ⇒ [[Subadditivity]]"
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "economics",
      "title": "Economics",
      "text": "A basic way to imagine “microscopically” modeling an economic system is to have a [[Token-Event Graph]] in which the tokens are something like “configurations of agents”, and the events are possible transactions between them.",
      "id": "84ea89ad4b093684"
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "economics-of-programming-languages",
      "title": "Economics of Programming Languages",
      "text": "Thank you for coming everyone. I'm Evan. I designed this programming language [[Elm]] and I've been working on it over 10 years now and I wanted to share what I learned that I would want to have heard when I started out as a student."
    },
    {
      "type": "reference",
      "id": "9a20bb6e1f0fd473",
      "site": "wiki.ralfbarkow.ch",
      "slug": "economics-of-developer-tooling",
      "title": "Economics of Developer Tooling",
      "text": "One of the common failure modes for the 2011-2014 crop of Backend-as-a-Service offerings was their inability to technically support large customers. The economics of developer tooling are a super-power-law. So, if you hope to pay your employees you'll need to grow with your biggest customers. [https://news.ycombinator.com/item?id=33215770 hn]"
    },
    {
      "type": "reference",
      "id": "c95d42514fe6a5bc",
      "site": "marc.tries.fed.wiki",
      "slug": "5-economics-of-change-and-change-of-economics",
      "title": "5. Economics of Change and Change of Economics",
      "text": "Changing for John Waters to see effect."
    },
    {
      "type": "reference",
      "id": "2bb27a0d77bf3c1a",
      "site": "e2o.federated.wiki",
      "slug": "from-economics-to-organising",
      "title": "From economics to organising",
      "text": "This wiki contains the text of a draft chapter for a book in honour of economist Robin Murray. The draft is 30k+ words, in five main sections with a short intro and coda. It includes thinking on the structure and principles of a 'college of conviviality' and a pattern language of activist practice."
    },
    {
      "type": "reference",
      "id": "d157be81fc7f1f13",
      "site": "marc.tries.fed.wiki",
      "slug": "doughnut-economics",
      "title": "Doughnut Economics",
      "text": "Necessary. Sufficient. Excessive and destructive."
    },
    {
      "type": "reference",
      "id": "8235f5a9decdc3ba",
      "site": "wh.daviding.wiki.openlearning.cc",
      "slug": "world-hypotheses-and-economics",
      "title": "World Hypotheses and Economics",
      "text": "In investigating questions of plurality in economic theory, [Michael C. Daley](https://www.une.edu/people/michael-c-daley) wrote a [doctoral dissertation at the University of New Hampshire in 2000](https://scholars.unh.edu/dissertation/2118)."
    },
    {
      "type": "pagefold",
      "id": "a8c21f7138cec7d4",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "c351182825157189",
      "site": "jeff.dojo.fed.wiki",
      "slug": "transcriber-notes-2023-10-08",
      "title": "Transcriber Notes 2023-10-08",
      "text": "See [[Typescript 2023-10-08]], [[Typescript Index 2023-10-08]], also [[Typescript Transcripts]]."
    },
    {
      "type": "paragraph",
      "id": "26f5f134b396f863",
      "text": "⇒ [[Pattern Theory]]"
    },
    {
      "type": "paragraph",
      "id": "0612754c312239f3",
      "text": "⇒ [[SQLite]]"
    },
    {
      "type": "code",
      "id": "51b11af12795343f",
      "text": "$ which emacsclient\nwhich: no emacsclient in (/run/wrappers/bin:/home/rgb/.nix-profile/bin:/etc/profiles/per-user/rgb/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin)"
    },
    {
      "type": "paragraph",
      "id": "a9e772e301b61391",
      "text": "Warning (with-editor): Cannot determine a suitable [[Emacsclient]]\n\nDetermining an Emacsclient executable suitable for the\ncurrent Emacs instance failed.  For more information\nplease see https://github.com/magit/magit/wiki/Emacsclient. Disable showing Disable logging\nWarning (emacsql): Since your Emacs does not come with\nbuilt-in SQLite support [1], but does support C modules, the best\nEmacSQL backend is provided by the third-party `sqlite3' package\n[2].\n\nPlease install the `sqlite3' Elisp package using your preferred\nEmacs package manager, and install the SQLite shared library\nusing your distribution's package manager.  That package should\nbe named something like `libsqlite3' [3] and NOT just `sqlite3'.\n\nIn the current Emacs instance the legacy backend is used, which\nuses a custom SQLite executable.  Using an external process like\nthat is less reliable and less performant, and in a few releases\nsupport for that might be removed.\n\n[1]: Supported since Emacs 29.1, provided it was not disabled\n     with `--without-sqlite3'.\n[2]: https://github.com/pekingduck/emacs-sqlite3-api\n[3]: On Debian https://packages.debian.org/buster/libsqlite3-0 Disable showing Disable logging"
    },
    {
      "type": "paragraph",
      "id": "3a80f217c56eda1c",
      "text": "⇒ [[Elm]]"
    },
    {
      "type": "image",
      "id": "a30bc82680982490",
      "text": "A commit after a year's break [https://github.com/elm/compiler/commits/master github]",
      "size": "wide",
      "width": 430,
      "height": 184,
      "url": "/assets/plugins/image/60fa0e130fdc827dc96e97cf48885ddb.jpg"
    },
    {
      "type": "paragraph",
      "id": "5be1804be40d40b2",
      "text": "New macOS ARM binary available! No more segfaults [https://discourse.elm-lang.org/t/new-macos-arm-binary-available-no-more-segfaults/9362 discourse]"
    },
    {
      "type": "paragraph",
      "id": "d1bbfa7ca9465e2d",
      "text": "Update [[elm-tooling]] to 1.15.0 and follow the instructions in the elm-tooling 1.15.0 changelog [https://github.com/elm-tooling/elm-tooling-cli/blob/main/CHANGELOG.md#version-1150-2023-09-30 github]."
    },
    {
      "type": "pagefold",
      "id": "40eadc78ce4a7d12",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "585438b6ae3303ec",
      "text": "⇒ [[DMX]]"
    },
    {
      "type": "paragraph",
      "id": "2d6a1e6804a3b2cb",
      "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
    },
    {
      "type": "paragraph",
      "id": "e476e670e9822f83",
      "text": "See, e.g. How LLMs teach you things you didn’t know you didn’t know [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]"
    },
    {
      "type": "paragraph",
      "id": "a8d1dbccc592a753",
      "text": "⇒ [[Wiki Spike CSS]]"
    },
    {
      "type": "paragraph",
      "id": "4abeb6916015ae3f",
      "text": "Python SimpleHTTPServer - Python HTTP Server [https://www.digitalocean.com/community/tutorials/python-simplehttpserver-http-server page] [https://www.pythonforbeginners.com/modules-in-python/how-to-use-simplehttpserver page]"
    },
    {
      "type": "markdown",
      "id": "042d31e35cbbbd50",
      "text": "> You can use Python SimpleHTTPServer to turn any directory into a simple HTTP web server."
    },
    {
      "type": "paragraph",
      "id": "ce313df7d43477a3",
      "text": "SimpleHTTPServer not found python3 [https://stackoverflow.com/questions/60306156/simplehttpserver-not-found-python3 stackoverflow]"
    },
    {
      "type": "code",
      "id": "cf0b9fafa4a0a07b",
      "text": "cd ~/Projects/RalfBarkow/wiki-spike-css/hello.fed.wiki"
    },
    {
      "type": "code",
      "id": "af63cb679c7f213e",
      "text": "python3 -m http.server                                        ~/Projects/RalfBarkow/wiki-spike-css/hello.fed.wiki\n\nServing HTTP on :: port 8000 (http://[::]:8000/) ...\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET / HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /style.css HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /pages.json HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] code 404, message File not found\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /favicon.ico HTTP/1.1\" 404 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:57] \"GET / HTTP/1.1\" 304 -"
    },
    {
      "type": "paragraph",
      "id": "96534b6cbdbdc8e3",
      "text": "⇒ [[Render Story]]"
    },
    {
      "type": "paragraph",
      "id": "56a8edec850538c1",
      "text": "case paragraph.text of"
    },
    {
      "type": "markdown",
      "id": "9427df4ec5a42f4e",
      "text": "* [[Text without Link]] ([[Unification]] asserts that there is only one empty [[Square-Bracket]])\n* [[Internal Link]]\n* [[External Link]]"
    },
    {
      "type": "paragraph",
      "id": "51fe23a4c1d60beb",
      "text": "If no other wiki style links are found, paragraph.text is the only container. (… completely fills its container)"
    },
    {
      "type": "paragraph",
      "id": "8b7544c8c5917d4b",
      "text": "[[Square-brackets]] are blind to multiplicity, making them clearly non-numeric. Strictly speaking, [ ] does not absorb the forms within its environment (no forms in the same space interact). More accurately, [ ] completely fills its container, so that the outer container can support no other contents. From the perspective of the outer container, [[Unification]] asserts that there is only one empty square-bracket whereas [[Accumulation]] asserts that every round-bracket makes a difference."
    },
    {
      "type": "paragraph",
      "id": "032ddbb0ca793316",
      "text": "⇒ [[Typescript Locator]] ⇒ [[Conversation as Search]] ⇒ [[Title]] ⇒ [[Square-Brackets]]  ⇒ [[Accumulation]]"
    },
    {
      "type": "markdown",
      "id": "65497f0624c08ce5",
      "text": "> A markup convention is to [[enclose]] a [[Title]] in double [[Square-Brackets]] to make a link."
    },
    {
      "type": "paragraph",
      "id": "96115c307d5e0d7c",
      "text": "⇒ [[email-parser]] [https://github.com/panthershark/email-parser/blob/513ffa7be655d3e165cda734fdcc8eea91dc7f0b/src/Email.elm#L92-L96 code]"
    },
    {
      "type": "code",
      "id": "0d830bbbb3b91f86",
      "text": "localPart : Parser String\nlocalPart =\n    chompUntil \"@\"\n        |> getChompedString\n        |> andThen checkLocal\n"
    },
    {
      "type": "paragraph",
      "id": "4f54c2a23b5b0ee5",
      "text": "⇒ textWithoutLink [https://github.com/RalfBarkow/vite-elm-dojo/blob/2ecba357ce7927936358fc75559b5c32d642d69d/src/Main.elm#L7 code]"
    },
    {
      "type": "paragraph",
      "id": "ab0408b4efab0dd1",
      "text": "oneOf"
    },
    {
      "type": "code",
      "id": "017856a9e5f190e3",
      "text": "        { oneOf =\n            [ textWithoutLink\n            , char"
    },
    {
      "type": "paragraph",
      "id": "99f9253ba92aa6ae",
      "text": "[[Elm Radio]] Episode #6 [[elm/parser]] [https://elm-radio.com/episode/elm-parser/ podcast]"
    },
    {
      "type": "reference",
      "id": "e14959f760aebf4a",
      "site": "wiki.ralfbarkow.ch",
      "slug": "demystifying-parsers",
      "title": "Demystifying Parsers",
      "text": "I ([[Tereza Sokol]]) usually take a look at the API first and that looks like this."
    },
    {
      "type": "image",
      "id": "931062fa5f50f167",
      "text": "Take a look at the API first. [https://youtu.be/M9ulswr1z0E?t=255 video]",
      "size": "wide",
      "width": 418,
      "height": 235,
      "url": "/assets/plugins/image/819a09630835a925ad9146b0f2da003f.jpg"
    },
    {
      "type": "paragraph",
      "id": "a838e6f95bbdb14f",
      "text": "[[elm/parser]] section in the \"Walking Though the Elm Woods\" Elm cookbook [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
    },
    {
      "type": "paragraph",
      "id": "9f7fb31ed8c1f874",
      "text": "Elm compiler written in Elm [https://github.com/elm-in-elm/compiler github] [https://elm-in-elm.github.io/compiler/ page]"
    },
    {
      "type": "video",
      "id": "49e65c3929c284bf",
      "text": "YOUTUBE 62khGXfh8zg\n[[Martin Janiczek]], Elm compiler in Elm! Elm Europe 2019 "
    },
    {
      "type": "reference",
      "id": "03179922229d9f89",
      "site": "wiki.ralfbarkow.ch",
      "slug": "test-elm-applications",
      "title": "Test Elm Applications",
      "text": "Until now, you have focused on building [[Elm]] applications."
    },
    {
      "type": "reference",
      "id": "2fbd69f7e44b75e5",
      "site": "wiki.ralfbarkow.ch",
      "slug": "parse-a-string-with-the-grammar",
      "title": "Parse a String with the Grammar",
      "text": "MainSpec.elm test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/tests/MainSpec.elm#L8-L22 code] [⇐ [[Test Elm Applications]]] [https://www.linkedin.com/posts/ralfbarkow_tdd-elm-federatedwiki-activity-7115655109312696323-UTtV post]"
    },
    {
      "type": "reference",
      "id": "edec94ddfa533425",
      "site": "wiki.ralfbarkow.ch",
      "slug": "result",
      "title": "Result",
      "text": "is the result of a computation that may fail. [https://package.elm-lang.org/packages/elm/core/latest/Result package]"
    },
    {
      "type": "code",
      "id": "24372c469aff6db0",
      "text": "result : Result Error String\nresult =\n    let\n        actions _ found _ =\n            Ok (String.toUpper found)\n\n        predicate _ _ state =\n            ( True, state )\n    in\n    grammarString\n        |> fromString\n        |> Result.andThen (\\grammar -> parse grammar \"\" actions predicate \"abc\")\n\n"
    }
  ],
  "journal": [
    {
      "id": "017856a9e5f190e3",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "fdf3e3c262643848",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "4f54c2a23b5b0ee5",
        "70e5cc3ad816ca16",
        "ab0408b4efab0dd1",
        "017856a9e5f190e3",
        "99f9253ba92aa6ae",
        "e14959f760aebf4a",
        "931062fa5f50f167",
        "49e65c3929c284bf"
      ],
      "date": 1696868126111,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "id": "ab0408b4efab0dd1",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "fdf3e3c262643848",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "4f54c2a23b5b0ee5",
        "70e5cc3ad816ca16",
        "ab0408b4efab0dd1",
        "99f9253ba92aa6ae",
        "e14959f760aebf4a",
        "931062fa5f50f167",
        "49e65c3929c284bf",
        "017856a9e5f190e3"
      ],
      "date": 1696868112540,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links, i.e., only one empty [[Square-Bracket]]\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696866238493
    },
    {
      "type": "edit",
      "id": "482d0a05e321d0a0",
      "item": {
        "type": "paragraph",
        "id": "482d0a05e321d0a0",
        "text": "⇒ [[How to Build Interesting Parsers]]"
      },
      "date": 1696865037571
    },
    {
      "item": {
        "type": "paragraph",
        "id": "482d0a05e321d0a0",
        "text": "⇒ [[How to Build Interesting Parsers]]"
      },
      "id": "482d0a05e321d0a0",
      "type": "add",
      "after": "65497f0624c08ce5",
      "date": 1696865028589
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696864791114
    },
    {
      "type": "remove",
      "id": "be7ee47e41a44354",
      "date": 1696864782445
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696864774743
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links"
      },
      "date": 1696864772432
    },
    {
      "type": "edit",
      "id": "be7ee47e41a44354",
      "item": {
        "type": "paragraph",
        "id": "be7ee47e41a44354",
        "text": ""
      },
      "date": 1696864758277
    },
    {
      "type": "create",
      "item": {
        "title": "2023-10-09",
        "story": []
      },
      "date": 1696828760289
    },
    {
      "item": {
        "type": "factory",
        "id": "41f26ccbcd548b45"
      },
      "id": "41f26ccbcd548b45",
      "type": "add",
      "date": 1696828762238
    },
    {
      "type": "edit",
      "id": "41f26ccbcd548b45",
      "item": {
        "type": "paragraph",
        "id": "41f26ccbcd548b45",
        "text": "⇒ [[Rente]]"
      },
      "date": 1696828773740
    },
    {
      "item": {
        "type": "factory",
        "id": "c351182825157189"
      },
      "id": "c351182825157189",
      "type": "add",
      "after": "41f26ccbcd548b45",
      "date": 1696831420984
    },
    {
      "type": "edit",
      "id": "c351182825157189",
      "item": {
        "type": "reference",
        "id": "c351182825157189",
        "site": "jeff.dojo.fed.wiki",
        "slug": "transcriber-notes-2023-10-08",
        "title": "Transcriber Notes 2023-10-08",
        "text": "See [[Typescript 2023-10-08]], [[Typescript Index 2023-10-08]], also [[Typescript Transcripts]]."
      },
      "date": 1696831431753
    },
    {
      "type": "edit",
      "id": "41f26ccbcd548b45",
      "item": {
        "type": "paragraph",
        "id": "41f26ccbcd548b45",
        "text": "⇒ [[Rente]] [⇐ [[Economics]]]"
      },
      "date": 1696832981191
    },
    {
      "item": {
        "type": "factory",
        "id": "c95d42514fe6a5bc"
      },
      "id": "c95d42514fe6a5bc",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833055313
    },
    {
      "id": "c95d42514fe6a5bc",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "c95d42514fe6a5bc",
        "c351182825157189"
      ],
      "date": 1696833056990
    },
    {
      "type": "edit",
      "id": "c95d42514fe6a5bc",
      "item": {
        "type": "reference",
        "id": "c95d42514fe6a5bc",
        "site": "marc.tries.fed.wiki",
        "slug": "5-economics-of-change-and-change-of-economics",
        "title": "5. Economics of Change and Change of Economics",
        "text": "Changing for John Waters to see effect."
      },
      "date": 1696833064933
    },
    {
      "item": {
        "type": "factory",
        "id": "9a20bb6e1f0fd473"
      },
      "id": "9a20bb6e1f0fd473",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833099278
    },
    {
      "id": "9a20bb6e1f0fd473",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "c351182825157189"
      ],
      "date": 1696833102246
    },
    {
      "type": "edit",
      "id": "9a20bb6e1f0fd473",
      "item": {
        "type": "reference",
        "id": "9a20bb6e1f0fd473",
        "site": "wiki.ralfbarkow.ch",
        "slug": "economics-of-developer-tooling",
        "title": "Economics of Developer Tooling",
        "text": "One of the common failure modes for the 2011-2014 crop of Backend-as-a-Service offerings was their inability to technically support large customers. The economics of developer tooling are a super-power-law. So, if you hope to pay your employees you'll need to grow with your biggest customers. [https://news.ycombinator.com/item?id=33215770 hn]"
      },
      "date": 1696833104929
    },
    {
      "item": {
        "type": "factory",
        "id": "d157be81fc7f1f13"
      },
      "id": "d157be81fc7f1f13",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833145899
    },
    {
      "id": "d157be81fc7f1f13",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "d157be81fc7f1f13",
        "c351182825157189"
      ],
      "date": 1696833148030
    },
    {
      "type": "edit",
      "id": "d157be81fc7f1f13",
      "item": {
        "type": "reference",
        "id": "d157be81fc7f1f13",
        "site": "marc.tries.fed.wiki",
        "slug": "doughnut-economics",
        "title": "Doughnut Economics",
        "text": "Necessary. Sufficient. Excessive and destructive."
      },
      "date": 1696833151298
    },
    {
      "item": {
        "type": "factory",
        "id": "a8c21f7138cec7d4"
      },
      "id": "a8c21f7138cec7d4",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833152825
    },
    {
      "id": "a8c21f7138cec7d4",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "d157be81fc7f1f13",
        "a8c21f7138cec7d4",
        "c351182825157189"
      ],
      "date": 1696833155079
    },
    {
      "type": "edit",
      "id": "a8c21f7138cec7d4",
      "item": {
        "type": "pagefold",
        "id": "a8c21f7138cec7d4",
        "text": "~"
      },
      "date": 1696833157991
    },
    {
      "item": {
        "type": "factory",
        "id": "2bb27a0d77bf3c1a"
      },
      "id": "2bb27a0d77bf3c1a",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833205722
    },
    {
      "id": "2bb27a0d77bf3c1a",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "a8c21f7138cec7d4",
        "c351182825157189"
      ],
      "date": 1696833212374
    },
    {
      "type": "edit",
      "id": "2bb27a0d77bf3c1a",
      "item": {
        "type": "reference",
        "id": "2bb27a0d77bf3c1a",
        "site": "e2o.federated.wiki",
        "slug": "from-economics-to-organising",
        "title": "From economics to organising",
        "text": "This wiki contains the text of a draft chapter for a book in honour of economist Robin Murray. The draft is 30k+ words, in five main sections with a short intro and coda. It includes thinking on the structure and principles of a 'college of conviviality' and a pattern language of activist practice."
      },
      "date": 1696833215166
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "economics-of-programming-languages",
        "title": "Economics of Programming Languages",
        "text": "Thank you for coming everyone. I'm Evan. I designed this programming language [[Elm]] and I've been working on it over 10 years now and I wanted to share what I learned that I would want to have heard when I started out as a student."
      },
      "after": "41f26ccbcd548b45",
      "date": 1696833416156
    },
    {
      "item": {
        "type": "reference",
        "id": "8235f5a9decdc3ba",
        "site": "wh.daviding.wiki.openlearning.cc",
        "slug": "world-hypotheses-and-economics",
        "title": "World Hypotheses and Economics",
        "text": "In investigating questions of plurality in economic theory, [Michael C. Daley](https://www.une.edu/people/michael-c-daley) wrote a [doctoral dissertation at the University of New Hampshire in 2000](https://scholars.unh.edu/dissertation/2118)."
      },
      "id": "8235f5a9decdc3ba",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696833472445
    },
    {
      "id": "8235f5a9decdc3ba",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189"
      ],
      "date": 1696833474298,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "8235f5a9decdc3ba",
      "item": {
        "type": "reference",
        "id": "8235f5a9decdc3ba",
        "site": "wh.daviding.wiki.openlearning.cc",
        "slug": "world-hypotheses-and-economics",
        "title": "World Hypotheses and Economics",
        "text": "In investigating questions of plurality in economic theory, [Michael C. Daley](https://www.une.edu/people/michael-c-daley) wrote a [doctoral dissertation at the University of New Hampshire in 2000](https://scholars.unh.edu/dissertation/2118)."
      },
      "date": 1696833476701
    },
    {
      "type": "fork",
      "date": 1696833479331
    },
    {
      "id": "84ea89ad4b093684",
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "economics",
        "title": "Economics",
        "text": "A basic way to imagine “microscopically” modeling an economic system is to have a [[Token-Event Graph]] in which the tokens are something like “configurations of agents”, and the events are possible transactions between them.",
        "id": "84ea89ad4b093684"
      },
      "after": "41f26ccbcd548b45",
      "date": 1696833521991
    },
    {
      "type": "edit",
      "id": "41f26ccbcd548b45",
      "item": {
        "type": "paragraph",
        "id": "41f26ccbcd548b45",
        "text": "⇒ [[Rente]] [⇐ [[Economics]]] ⇒ [[Landlord Instead of an Advertiser]]"
      },
      "date": 1696833805120
    },
    {
      "type": "add",
      "id": "92913c526c33f0f3",
      "item": {
        "type": "paragraph",
        "id": "92913c526c33f0f3",
        "text": "73. Brätland (2003, pp. 9–10; emphasis in the original)."
      },
      "after": "41f26ccbcd548b45",
      "date": 1696836126409
    },
    {
      "id": "7ed421a360d9dced",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "7ed421a360d9dced",
        "text": "⇒ [[Invest in Infrastructure]]"
      },
      "after": "41f26ccbcd548b45",
      "attribution": {
        "page": "Rente"
      },
      "date": 1696836135435
    },
    {
      "type": "edit",
      "id": "92913c526c33f0f3",
      "item": {
        "type": "paragraph",
        "id": "92913c526c33f0f3",
        "text": "73. Brätland (2003, pp. 9–10; […]."
      },
      "date": 1696836153635
    },
    {
      "type": "edit",
      "id": "7ed421a360d9dced",
      "item": {
        "type": "paragraph",
        "id": "7ed421a360d9dced",
        "text": "⇒ [[Invest in Infrastructure]] ⇒ [[Subadditivity]]"
      },
      "date": 1696836202706
    },
    {
      "id": "92913c526c33f0f3",
      "type": "remove",
      "removedTo": {
        "page": "Subadditivity"
      },
      "date": 1696836236704
    },
    {
      "item": {
        "type": "factory",
        "id": "b10aa7328e72fcff"
      },
      "id": "b10aa7328e72fcff",
      "type": "add",
      "after": "c351182825157189",
      "date": 1696847269629
    },
    {
      "type": "edit",
      "id": "b10aa7328e72fcff",
      "item": {
        "type": "reference",
        "id": "b10aa7328e72fcff",
        "site": "patterns.relocalizecreativity.net",
        "slug": "notes-from-pattern-theory",
        "title": "Notes from Pattern Theory",
        "text": "[https://www.amazon.com/Pattern-Theory-Introduction-Perspectives-Christopher/dp/1505637430 Amaxon]"
      },
      "date": 1696847274545
    },
    {
      "type": "edit",
      "id": "b10aa7328e72fcff",
      "item": {
        "type": "reference",
        "id": "b10aa7328e72fcff",
        "site": "patterns.relocalizecreativity.net",
        "slug": "notes-from-pattern-theory",
        "title": "Notes from Pattern Theory",
        "text": "\nLEITNER, Helmut, 2015. Pattern theory: introduction and perspectives on the tracks of Christopher Alexander. . First printing. Graz: Helmut Leitner, HLS Software. Pattern research series, 001. ISBN 978-1-5056-3743-4. Q295 .L4613 2015\n"
      },
      "date": 1696847313714
    },
    {
      "type": "edit",
      "id": "b10aa7328e72fcff",
      "item": {
        "type": "reference",
        "id": "b10aa7328e72fcff",
        "site": "patterns.relocalizecreativity.net",
        "slug": "notes-from-pattern-theory",
        "title": "Notes from Pattern Theory",
        "text": "LEITNER, Helmut, 2015. Pattern theory: introduction and perspectives on the tracks of Christopher Alexander. Graz: Helmut Leitner, HLS Software. Pattern research series, 001. ISBN 978-1-5056-3743-4. "
      },
      "date": 1696847334316
    },
    {
      "type": "edit",
      "id": "b10aa7328e72fcff",
      "item": {
        "type": "reference",
        "id": "b10aa7328e72fcff",
        "site": "patterns.relocalizecreativity.net",
        "slug": "notes-from-pattern-theory",
        "title": "Notes from Pattern Theory",
        "text": "LEITNER, Helmut, 2015. Pattern theory: introduction and perspectives on the tracks of [[Christopher Alexander]]. Graz: Helmut Leitner, HLS Software. Pattern research series, 001. ISBN 978-1-5056-3743-4. "
      },
      "date": 1696847352750
    },
    {
      "item": {
        "type": "factory",
        "id": "26f5f134b396f863"
      },
      "id": "26f5f134b396f863",
      "type": "add",
      "after": "b10aa7328e72fcff",
      "date": 1696848131424
    },
    {
      "type": "edit",
      "id": "26f5f134b396f863",
      "item": {
        "type": "paragraph",
        "id": "26f5f134b396f863",
        "text": "Warning (with-editor): Cannot determine a suitable Emacsclient\n\nDetermining an Emacsclient executable suitable for the\ncurrent Emacs instance failed.  For more information\nplease see https://github.com/magit/magit/wiki/Emacsclient. Disable showing Disable logging\nWarning (emacsql): Since your Emacs does not come with\nbuilt-in SQLite support [1], but does support C modules, the best\nEmacSQL backend is provided by the third-party `sqlite3' package\n[2].\n\nPlease install the `sqlite3' Elisp package using your preferred\nEmacs package manager, and install the SQLite shared library\nusing your distribution's package manager.  That package should\nbe named something like `libsqlite3' [3] and NOT just `sqlite3'.\n\nIn the current Emacs instance the legacy backend is used, which\nuses a custom SQLite executable.  Using an external process like\nthat is less reliable and less performant, and in a few releases\nsupport for that might be removed.\n\n[1]: Supported since Emacs 29.1, provided it was not disabled\n     with `--without-sqlite3'.\n[2]: https://github.com/pekingduck/emacs-sqlite3-api\n[3]: On Debian https://packages.debian.org/buster/libsqlite3-0 Disable showing Disable logging\n"
      },
      "date": 1696848133403
    },
    {
      "type": "edit",
      "id": "26f5f134b396f863",
      "item": {
        "type": "paragraph",
        "id": "26f5f134b396f863",
        "text": "Warning (with-editor): Cannot determine a suitable [[Emacsclient]]\n\nDetermining an Emacsclient executable suitable for the\ncurrent Emacs instance failed.  For more information\nplease see https://github.com/magit/magit/wiki/Emacsclient. Disable showing Disable logging\nWarning (emacsql): Since your Emacs does not come with\nbuilt-in SQLite support [1], but does support C modules, the best\nEmacSQL backend is provided by the third-party `sqlite3' package\n[2].\n\nPlease install the `sqlite3' Elisp package using your preferred\nEmacs package manager, and install the SQLite shared library\nusing your distribution's package manager.  That package should\nbe named something like `libsqlite3' [3] and NOT just `sqlite3'.\n\nIn the current Emacs instance the legacy backend is used, which\nuses a custom SQLite executable.  Using an external process like\nthat is less reliable and less performant, and in a few releases\nsupport for that might be removed.\n\n[1]: Supported since Emacs 29.1, provided it was not disabled\n     with `--without-sqlite3'.\n[2]: https://github.com/pekingduck/emacs-sqlite3-api\n[3]: On Debian https://packages.debian.org/buster/libsqlite3-0 Disable showing Disable logging\n"
      },
      "date": 1696848145560
    },
    {
      "type": "edit",
      "id": "26f5f134b396f863",
      "item": {
        "type": "paragraph",
        "id": "26f5f134b396f863",
        "text": "⇒ [[SQLite]]"
      },
      "date": 1696848235942
    },
    {
      "type": "add",
      "id": "a9e772e301b61391",
      "item": {
        "type": "paragraph",
        "id": "a9e772e301b61391",
        "text": "Warning (with-editor): Cannot determine a suitable [[Emacsclient]]\n\nDetermining an Emacsclient executable suitable for the\ncurrent Emacs instance failed.  For more information\nplease see https://github.com/magit/magit/wiki/Emacsclient. Disable showing Disable logging\nWarning (emacsql): Since your Emacs does not come with\nbuilt-in SQLite support [1], but does support C modules, the best\nEmacSQL backend is provided by the third-party `sqlite3' package\n[2].\n\nPlease install the `sqlite3' Elisp package using your preferred\nEmacs package manager, and install the SQLite shared library\nusing your distribution's package manager.  That package should\nbe named something like `libsqlite3' [3] and NOT just `sqlite3'.\n\nIn the current Emacs instance the legacy backend is used, which\nuses a custom SQLite executable.  Using an external process like\nthat is less reliable and less performant, and in a few releases\nsupport for that might be removed.\n\n[1]: Supported since Emacs 29.1, provided it was not disabled\n     with `--without-sqlite3'.\n[2]: https://github.com/pekingduck/emacs-sqlite3-api\n[3]: On Debian https://packages.debian.org/buster/libsqlite3-0 Disable showing Disable logging"
      },
      "after": "26f5f134b396f863",
      "date": 1696848236309
    },
    {
      "type": "edit",
      "id": "26f5f134b396f863",
      "item": {
        "type": "paragraph",
        "id": "26f5f134b396f863",
        "text": "⇒ [[Pattern Theory]]"
      },
      "date": 1696848305188
    },
    {
      "type": "add",
      "id": "0612754c312239f3",
      "item": {
        "type": "paragraph",
        "id": "0612754c312239f3",
        "text": "⇒ [[SQLite]]"
      },
      "after": "26f5f134b396f863",
      "date": 1696848305847
    },
    {
      "id": "b10aa7328e72fcff",
      "type": "remove",
      "removedTo": {
        "page": "Pattern Theory"
      },
      "date": 1696848311488
    },
    {
      "item": {
        "type": "factory",
        "id": "a30bc82680982490"
      },
      "id": "a30bc82680982490",
      "type": "add",
      "after": "a9e772e301b61391",
      "date": 1696848858071
    },
    {
      "type": "edit",
      "id": "a30bc82680982490",
      "item": {
        "type": "image",
        "id": "a30bc82680982490",
        "text": "Uploaded image",
        "size": "wide",
        "width": 430,
        "height": 184,
        "url": "/assets/plugins/image/60fa0e130fdc827dc96e97cf48885ddb.jpg"
      },
      "date": 1696848885825
    },
    {
      "type": "edit",
      "id": "a30bc82680982490",
      "item": {
        "type": "image",
        "id": "a30bc82680982490",
        "text": "A commit after a year's break",
        "size": "wide",
        "width": 430,
        "height": 184,
        "url": "/assets/plugins/image/60fa0e130fdc827dc96e97cf48885ddb.jpg"
      },
      "date": 1696849067459
    },
    {
      "type": "add",
      "id": "3a80f217c56eda1c",
      "item": {
        "type": "paragraph",
        "id": "3a80f217c56eda1c",
        "text": "⇒ [[Elm]]"
      },
      "after": "a9e772e301b61391",
      "date": 1696849129169
    },
    {
      "type": "edit",
      "id": "a30bc82680982490",
      "item": {
        "type": "image",
        "id": "a30bc82680982490",
        "text": "A commit after a year's break [https://github.com/elm/compiler/commits/master github]",
        "size": "wide",
        "width": 430,
        "height": 184,
        "url": "/assets/plugins/image/60fa0e130fdc827dc96e97cf48885ddb.jpg"
      },
      "date": 1696849145351
    },
    {
      "item": {
        "type": "factory",
        "id": "5be1804be40d40b2"
      },
      "id": "5be1804be40d40b2",
      "type": "add",
      "after": "a30bc82680982490",
      "date": 1696849468431
    },
    {
      "type": "edit",
      "id": "5be1804be40d40b2",
      "item": {
        "type": "paragraph",
        "id": "5be1804be40d40b2",
        "text": "New macOS ARM binary available! No more segfaults "
      },
      "date": 1696849473439
    },
    {
      "type": "edit",
      "id": "5be1804be40d40b2",
      "item": {
        "type": "paragraph",
        "id": "5be1804be40d40b2",
        "text": "New macOS ARM binary available! No more segfaults [https://discourse.elm-lang.org/t/new-macos-arm-binary-available-no-more-segfaults/9362 discourse]"
      },
      "date": 1696849485541
    },
    {
      "item": {
        "type": "factory",
        "id": "d1bbfa7ca9465e2d"
      },
      "id": "d1bbfa7ca9465e2d",
      "type": "add",
      "after": "5be1804be40d40b2",
      "date": 1696849666850
    },
    {
      "type": "edit",
      "id": "d1bbfa7ca9465e2d",
      "item": {
        "type": "paragraph",
        "id": "d1bbfa7ca9465e2d",
        "text": "Update elm-tooling to 1.15.0 and follow the instructions in the elm-tooling 1.15.0 changelog 11."
      },
      "date": 1696849668436
    },
    {
      "type": "edit",
      "id": "d1bbfa7ca9465e2d",
      "item": {
        "type": "paragraph",
        "id": "d1bbfa7ca9465e2d",
        "text": "Update elm-tooling to 1.15.0 and follow the instructions in the elm-tooling 1.15.0 changelog [https://github.com/elm-tooling/elm-tooling-cli/blob/main/CHANGELOG.md#version-1150-2023-09-30 github]."
      },
      "date": 1696849687319
    },
    {
      "type": "edit",
      "id": "d1bbfa7ca9465e2d",
      "item": {
        "type": "paragraph",
        "id": "d1bbfa7ca9465e2d",
        "text": "Update [[elm-tooling]] to 1.15.0 and follow the instructions in the elm-tooling 1.15.0 changelog [https://github.com/elm-tooling/elm-tooling-cli/blob/main/CHANGELOG.md#version-1150-2023-09-30 github]."
      },
      "date": 1696849714904
    },
    {
      "item": {
        "type": "paragraph",
        "id": "585438b6ae3303ec",
        "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
      },
      "id": "585438b6ae3303ec",
      "type": "add",
      "after": "d1bbfa7ca9465e2d",
      "date": 1696850433883
    },
    {
      "type": "edit",
      "id": "585438b6ae3303ec",
      "item": {
        "type": "paragraph",
        "id": "585438b6ae3303ec",
        "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
      },
      "date": 1696850436119
    },
    {
      "type": "edit",
      "id": "585438b6ae3303ec",
      "item": {
        "type": "paragraph",
        "id": "585438b6ae3303ec",
        "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
      },
      "date": 1696850455764
    },
    {
      "type": "edit",
      "id": "585438b6ae3303ec",
      "item": {
        "type": "paragraph",
        "id": "585438b6ae3303ec",
        "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
      },
      "date": 1696850459812
    },
    {
      "item": {
        "type": "paragraph",
        "id": "e476e670e9822f83",
        "text": "See, e.g. How LLMs teach you things you didn’t know you didn’t know [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]"
      },
      "id": "e476e670e9822f83",
      "type": "add",
      "after": "585438b6ae3303ec",
      "date": 1696850482320
    },
    {
      "type": "edit",
      "id": "e476e670e9822f83",
      "item": {
        "type": "paragraph",
        "id": "e476e670e9822f83",
        "text": "See, e.g. How LLMs teach you things you didn’t know you didn’t know [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]"
      },
      "date": 1696850487384
    },
    {
      "type": "edit",
      "id": "e476e670e9822f83",
      "item": {
        "type": "paragraph",
        "id": "e476e670e9822f83",
        "text": "See, e.g. How LLMs teach you things you didn’t know you didn’t know [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]"
      },
      "date": 1696850494913
    },
    {
      "type": "edit",
      "id": "e476e670e9822f83",
      "item": {
        "type": "paragraph",
        "id": "e476e670e9822f83",
        "text": "See, e.g. How LLMs teach you things you didn’t know you didn’t know [https://blog.jonudell.net/2023/09/07/how-llms-teach-you-things-you-didnt-know-you-didnt-know/ post]"
      },
      "date": 1696850517627
    },
    {
      "item": {
        "type": "factory",
        "id": "40eadc78ce4a7d12"
      },
      "id": "40eadc78ce4a7d12",
      "type": "add",
      "after": "e476e670e9822f83",
      "date": 1696850585100
    },
    {
      "id": "40eadc78ce4a7d12",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "e476e670e9822f83"
      ],
      "date": 1696850588029,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "edit",
      "id": "40eadc78ce4a7d12",
      "item": {
        "type": "pagefold",
        "id": "40eadc78ce4a7d12",
        "text": "~"
      },
      "date": 1696850605019
    },
    {
      "type": "fork",
      "date": 1696850606459
    },
    {
      "type": "edit",
      "id": "585438b6ae3303ec",
      "item": {
        "type": "paragraph",
        "id": "585438b6ae3303ec",
        "text": "⇒ [[DMX]]"
      },
      "date": 1696850648182
    },
    {
      "type": "add",
      "id": "2d6a1e6804a3b2cb",
      "item": {
        "type": "paragraph",
        "id": "2d6a1e6804a3b2cb",
        "text": "How can DMX be integrated with open-source Large Language Models? [https://forum.dmx.systems/t/how-can-dmx-be-integrated-with-open-source-large-language-models/172 post]"
      },
      "after": "585438b6ae3303ec",
      "date": 1696850648541
    },
    {
      "type": "edit",
      "id": "41f26ccbcd548b45",
      "item": {
        "type": "paragraph",
        "id": "41f26ccbcd548b45",
        "text": "⇒ [[Rente]] [⇐ [[Economics]]] ⇒ [[Landlord Instead of an Advertiser]] ⇒ [[Internet Landlord]]"
      },
      "date": 1696850867865
    },
    {
      "type": "edit",
      "id": "41f26ccbcd548b45",
      "item": {
        "type": "paragraph",
        "id": "41f26ccbcd548b45",
        "text": "⇒ [[Rente]] [⇐ [[Economics]]] ⇒ [[Landlord Instead of an Advertiser]] ⇒ [[Internet Landlord]] ⇒ [[Invest in Infrastructure]]"
      },
      "date": 1696852555910
    },
    {
      "type": "add",
      "id": "d204add219c3bcab",
      "item": {
        "type": "paragraph",
        "id": "d204add219c3bcab",
        "text": "The company has invested heavily in infrastructure and will continue to do so to serve its customers."
      },
      "after": "41f26ccbcd548b45",
      "date": 1696852705825
    },
    {
      "type": "edit",
      "id": "d204add219c3bcab",
      "item": {
        "type": "paragraph",
        "id": "d204add219c3bcab",
        "text": "[[dreyeck.ch]] has invested heavily in infrastructure and will continue to do so to serve its customers."
      },
      "date": 1696852720526
    },
    {
      "type": "edit",
      "id": "d204add219c3bcab",
      "item": {
        "type": "paragraph",
        "id": "d204add219c3bcab",
        "text": "The [[dreyeck.ch]] company has invested heavily in infrastructure and will continue to do so in order to serve its customers."
      },
      "date": 1696852752177
    },
    {
      "item": {
        "type": "code",
        "id": "51b11af12795343f",
        "text": "$ which emacsclient\nwhich: no emacsclient in (/run/wrappers/bin:/home/rgb/.nix-profile/bin:/etc/profiles/per-user/rgb/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin)"
      },
      "id": "51b11af12795343f",
      "type": "add",
      "after": "e476e670e9822f83",
      "date": 1696853765297
    },
    {
      "type": "edit",
      "id": "51b11af12795343f",
      "item": {
        "type": "code",
        "id": "51b11af12795343f",
        "text": "$ which emacsclient\nwhich: no emacsclient in (/run/wrappers/bin:/home/rgb/.nix-profile/bin:/etc/profiles/per-user/rgb/bin:/nix/var/nix/profiles/default/bin:/run/current-system/sw/bin)"
      },
      "date": 1696853779898
    },
    {
      "id": "51b11af12795343f",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83"
      ],
      "date": 1696853787393,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696853794639
    },
    {
      "type": "edit",
      "id": "d204add219c3bcab",
      "item": {
        "type": "paragraph",
        "id": "d204add219c3bcab",
        "text": "The [[dreyeck gmbh]] company has invested heavily in infrastructure and will continue to do so in order to serve its customers."
      },
      "date": 1696853913288
    },
    {
      "item": {
        "type": "factory",
        "id": "a8d1dbccc592a753"
      },
      "id": "a8d1dbccc592a753",
      "type": "add",
      "after": "e476e670e9822f83",
      "date": 1696861335055
    },
    {
      "type": "edit",
      "id": "a8d1dbccc592a753",
      "item": {
        "type": "paragraph",
        "id": "a8d1dbccc592a753",
        "text": "⇒ [[Wiki Spike CSS]]"
      },
      "date": 1696861345876
    },
    {
      "item": {
        "type": "factory",
        "id": "4abeb6916015ae3f"
      },
      "id": "4abeb6916015ae3f",
      "type": "add",
      "after": "a8d1dbccc592a753",
      "date": 1696862379467
    },
    {
      "type": "edit",
      "id": "4abeb6916015ae3f",
      "item": {
        "type": "paragraph",
        "id": "4abeb6916015ae3f",
        "text": "SimpleHTTPServer not found python3"
      },
      "date": 1696862382240
    },
    {
      "type": "edit",
      "id": "4abeb6916015ae3f",
      "item": {
        "type": "paragraph",
        "id": "4abeb6916015ae3f",
        "text": "Python SimpleHTTPServer - Python HTTP Server"
      },
      "date": 1696862393329
    },
    {
      "type": "add",
      "id": "ce313df7d43477a3",
      "item": {
        "type": "paragraph",
        "id": "ce313df7d43477a3",
        "text": "SimpleHTTPServer not found python3"
      },
      "after": "4abeb6916015ae3f",
      "date": 1696862394600
    },
    {
      "type": "edit",
      "id": "4abeb6916015ae3f",
      "item": {
        "type": "paragraph",
        "id": "4abeb6916015ae3f",
        "text": "Python SimpleHTTPServer - Python HTTP Server [https://www.digitalocean.com/community/tutorials/python-simplehttpserver-http-server page]"
      },
      "date": 1696862404956
    },
    {
      "type": "add",
      "id": "042d31e35cbbbd50",
      "item": {
        "type": "paragraph",
        "id": "042d31e35cbbbd50",
        "text": "> You can use Python SimpleHTTPServer to turn any directory into a simple HTTP web server."
      },
      "after": "4abeb6916015ae3f",
      "date": 1696862568466
    },
    {
      "type": "edit",
      "id": "042d31e35cbbbd50",
      "item": {
        "type": "markdown",
        "id": "042d31e35cbbbd50",
        "text": "> You can use Python SimpleHTTPServer to turn any directory into a simple HTTP web server."
      },
      "date": 1696862569712
    },
    {
      "item": {
        "type": "factory",
        "id": "cf0b9fafa4a0a07b"
      },
      "id": "cf0b9fafa4a0a07b",
      "type": "add",
      "after": "ce313df7d43477a3",
      "date": 1696862678770
    },
    {
      "type": "edit",
      "id": "cf0b9fafa4a0a07b",
      "item": {
        "type": "code",
        "id": "cf0b9fafa4a0a07b",
        "text": "cd ~/Projects/RalfBarkow/wiki-spike-css/hello.fed.wiki"
      },
      "date": 1696862682384
    },
    {
      "item": {
        "type": "factory",
        "id": "af63cb679c7f213e"
      },
      "id": "af63cb679c7f213e",
      "type": "add",
      "after": "cf0b9fafa4a0a07b",
      "date": 1696862695937
    },
    {
      "type": "edit",
      "id": "af63cb679c7f213e",
      "item": {
        "type": "code",
        "id": "af63cb679c7f213e",
        "text": "python3 -m http.server                                        ~/Projects/RalfBarkow/wiki-spike-css/hello.fed.wiki\n\nServing HTTP on :: port 8000 (http://[::]:8000/) ...\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET / HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /style.css HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /pages.json HTTP/1.1\" 200 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] code 404, message File not found\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:43] \"GET /favicon.ico HTTP/1.1\" 404 -\n::ffff:127.0.0.1 - - [09/Oct/2023 16:43:57] \"GET / HTTP/1.1\" 304 -"
      },
      "date": 1696862697928
    },
    {
      "type": "edit",
      "id": "ce313df7d43477a3",
      "item": {
        "type": "paragraph",
        "id": "ce313df7d43477a3",
        "text": "SimpleHTTPServer not found python3 [https://stackoverflow.com/questions/60306156/simplehttpserver-not-found-python3 stackoverflow]"
      },
      "date": 1696862726345
    },
    {
      "type": "edit",
      "id": "4abeb6916015ae3f",
      "item": {
        "type": "paragraph",
        "id": "4abeb6916015ae3f",
        "text": "Python SimpleHTTPServer - Python HTTP Server [https://www.digitalocean.com/community/tutorials/python-simplehttpserver-http-server page] [https://www.pythonforbeginners.com/modules-in-python/how-to-use-simplehttpserver page]"
      },
      "date": 1696862956047
    },
    {
      "item": {
        "type": "factory",
        "id": "96534b6cbdbdc8e3"
      },
      "id": "96534b6cbdbdc8e3",
      "type": "add",
      "after": "af63cb679c7f213e",
      "date": 1696864123802
    },
    {
      "type": "edit",
      "id": "96534b6cbdbdc8e3",
      "item": {
        "type": "paragraph",
        "id": "96534b6cbdbdc8e3",
        "text": "⇒ [[Render Story]]"
      },
      "date": 1696864138160
    },
    {
      "type": "add",
      "id": "56a8edec850538c1",
      "item": {
        "type": "paragraph",
        "id": "56a8edec850538c1",
        "text": "case "
      },
      "after": "96534b6cbdbdc8e3",
      "date": 1696864167555
    },
    {
      "type": "edit",
      "id": "56a8edec850538c1",
      "item": {
        "type": "paragraph",
        "id": "56a8edec850538c1",
        "text": "case paragraph.text of"
      },
      "date": 1696864205363
    },
    {
      "type": "add",
      "id": "51fe23a4c1d60beb",
      "item": {
        "type": "paragraph",
        "id": "51fe23a4c1d60beb",
        "text": "If no other wiki style links are found, paragraph.text is the only container."
      },
      "after": "56a8edec850538c1",
      "date": 1696864254203
    },
    {
      "id": "032ddbb0ca793316",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "032ddbb0ca793316",
        "text": "⇒ [[Typescript Locator]] ⇒ [[Conversation as Search]] ⇒ [[Title]] ⇒ [[Square-Brackets]]  ⇒ [[Accumulation]]"
      },
      "after": "51fe23a4c1d60beb",
      "attribution": {
        "page": "2023-10-06"
      },
      "date": 1696864284688
    },
    {
      "id": "65497f0624c08ce5",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "65497f0624c08ce5",
        "text": "> A markup convention is to enclose a title in double [[Square-Brackets]] to make a link."
      },
      "after": "032ddbb0ca793316",
      "attribution": {
        "page": "Title"
      },
      "date": 1696864336204
    },
    {
      "type": "edit",
      "id": "65497f0624c08ce5",
      "item": {
        "type": "markdown",
        "id": "65497f0624c08ce5",
        "text": "> A markup convention is to enclose a title in double [[Square-Brackets]] to make a link."
      },
      "date": 1696864340365
    },
    {
      "type": "edit",
      "id": "65497f0624c08ce5",
      "item": {
        "type": "markdown",
        "id": "65497f0624c08ce5",
        "text": "> A markup convention is to [[enclose]] a [[Title]] in double [[Square-Brackets]] to make a link."
      },
      "date": 1696864341485
    },
    {
      "id": "8b7544c8c5917d4b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8b7544c8c5917d4b",
        "text": "[[Square-brackets]] are blind to multiplicity, making them clearly non-numeric. Strictly speaking, [ ] does not absorb the forms within its environment (no forms in the same space interact). More accurately, [ ] completely fills its container, so that the outer container can support no other contents. From the perspective of the outer container, [[Unification]] asserts that there is only one empty square-bracket whereas [[Accumulation]] asserts that every round-bracket makes a difference."
      },
      "after": "51fe23a4c1d60beb",
      "attribution": {
        "page": "Square-Brackets"
      },
      "date": 1696864414870
    },
    {
      "type": "edit",
      "id": "8b7544c8c5917d4b",
      "item": {
        "type": "paragraph",
        "id": "8b7544c8c5917d4b",
        "text": "[[Square-brackets]] are blind to multiplicity, making them clearly non-numeric. Strictly speaking, [ ] does not absorb the forms within its environment (no forms in the same space interact). More accurately, [ ] completely fills its container, so that the outer container can support no other contents. From the perspective of the outer container, [[Unification]] asserts that there is only one empty square-bracket whereas [[Accumulation]] asserts that every round-bracket makes a difference."
      },
      "date": 1696864428696
    },
    {
      "type": "edit",
      "id": "8b7544c8c5917d4b",
      "item": {
        "type": "paragraph",
        "id": "8b7544c8c5917d4b",
        "text": "[[Square-brackets]] are blind to multiplicity, making them clearly non-numeric. Strictly speaking, [ ] does not absorb the forms within its environment (no forms in the same space interact). More accurately, [ ] completely fills its container, so that the outer container can support no other contents. From the perspective of the outer container, [[Unification]] asserts that there is only one empty square-bracket whereas [[Accumulation]] asserts that every round-bracket makes a difference."
      },
      "date": 1696864487309
    },
    {
      "type": "edit",
      "id": "51fe23a4c1d60beb",
      "item": {
        "type": "paragraph",
        "id": "51fe23a4c1d60beb",
        "text": "If no other wiki style links are found, paragraph.text is the only container. (… completely fills its container)"
      },
      "date": 1696864551654
    },
    {
      "type": "add",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links"
      },
      "after": "56a8edec850538c1",
      "date": 1696864737578
    },
    {
      "type": "add",
      "id": "be7ee47e41a44354",
      "item": {
        "type": "paragraph",
        "id": "be7ee47e41a44354",
        "text": ""
      },
      "after": "9427df4ec5a42f4e",
      "date": 1696864752827
    },
    {
      "type": "edit",
      "id": "65497f0624c08ce5",
      "item": {
        "type": "markdown",
        "id": "65497f0624c08ce5",
        "text": "> A markup convention is to [[enclose]] a [[Title]] in double [[Square-Brackets]] to make a link."
      },
      "date": 1696864955248
    },
    {
      "item": {
        "type": "video",
        "id": "49e65c3929c284bf",
        "text": "YOUTUBE 62khGXfh8zg"
      },
      "id": "49e65c3929c284bf",
      "type": "add",
      "after": "482d0a05e321d0a0",
      "date": 1696865310721
    },
    {
      "item": {
        "type": "video",
        "id": "fbb6c0d28c81e876",
        "text": ""
      },
      "id": "fbb6c0d28c81e876",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696865312753
    },
    {
      "type": "remove",
      "id": "fbb6c0d28c81e876",
      "date": 1696865316154
    },
    {
      "type": "edit",
      "id": "49e65c3929c284bf",
      "item": {
        "type": "video",
        "id": "49e65c3929c284bf",
        "text": "YOUTUBE 62khGXfh8zg"
      },
      "date": 1696865329641
    },
    {
      "item": {
        "type": "factory",
        "id": "99f9253ba92aa6ae"
      },
      "id": "99f9253ba92aa6ae",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696865506315
    },
    {
      "id": "99f9253ba92aa6ae",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "99f9253ba92aa6ae",
        "49e65c3929c284bf"
      ],
      "date": 1696865509382,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696865514898
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "[https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696865546185
    },
    {
      "type": "add",
      "id": "c3aad64a32e5c14b",
      "item": {
        "type": "paragraph",
        "id": "c3aad64a32e5c14b",
        "text": "Why Elm is the right tool to build MiniLatex [https://dev.to/jxxcarlson/why-elm-is-the-right-tool-to-build-minilatex-3b87 page]"
      },
      "after": "482d0a05e321d0a0",
      "date": 1696865591725
    },
    {
      "type": "edit",
      "id": "c3aad64a32e5c14b",
      "item": {
        "type": "paragraph",
        "id": "c3aad64a32e5c14b",
        "text": "Why Elm is the right tool to build MiniLatex [https://dev.to/jxxcarlson/why-elm-is-the-right-tool-to-build-minilatex-3b87 page]"
      },
      "date": 1696865601880
    },
    {
      "type": "add",
      "id": "96115c307d5e0d7c",
      "item": {
        "type": "paragraph",
        "id": "96115c307d5e0d7c",
        "text": "[[email-parser]] [https://github.com/panthershark/email-parser/blob/513ffa7be655d3e165cda734fdcc8eea91dc7f0b/src/Email.elm#L92-L96 code]"
      },
      "after": "c3aad64a32e5c14b",
      "date": 1696865944592
    },
    {
      "type": "edit",
      "id": "96115c307d5e0d7c",
      "item": {
        "type": "paragraph",
        "id": "96115c307d5e0d7c",
        "text": "[[email-parser]] [https://github.com/panthershark/email-parser/blob/513ffa7be655d3e165cda734fdcc8eea91dc7f0b/src/Email.elm#L92-L96 code]"
      },
      "date": 1696865982455
    },
    {
      "item": {
        "type": "factory",
        "id": "0d830bbbb3b91f86"
      },
      "id": "0d830bbbb3b91f86",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696865995513
    },
    {
      "id": "0d830bbbb3b91f86",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "99f9253ba92aa6ae",
        "49e65c3929c284bf"
      ],
      "date": 1696866003542,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696866018708
    },
    {
      "type": "fork",
      "date": 1696866019815
    },
    {
      "type": "edit",
      "id": "0d830bbbb3b91f86",
      "item": {
        "type": "code",
        "id": "0d830bbbb3b91f86",
        "text": "localPart : Parser String\nlocalPart =\n    chompUntil \"@\"\n        |> getChompedString\n        |> andThen checkLocal\n"
      },
      "date": 1696866049455
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links, i.e., only one empty [[Square-Bracket]]\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696866184982
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links, i.e., only one empty [[Square-Bracket]]\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696866198056
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without links, i.e., only one empty [[Square-Bracket]]\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696866212617
    },
    {
      "item": {
        "type": "code",
        "id": "70e5cc3ad816ca16",
        "text": "chompUntil \"[\""
      },
      "id": "70e5cc3ad816ca16",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696866386016
    },
    {
      "type": "edit",
      "id": "70e5cc3ad816ca16",
      "item": {
        "type": "code",
        "id": "70e5cc3ad816ca16",
        "text": "chompUntil \"[\""
      },
      "date": 1696866391216
    },
    {
      "id": "70e5cc3ad816ca16",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "70e5cc3ad816ca16",
        "99f9253ba92aa6ae",
        "49e65c3929c284bf"
      ],
      "date": 1696866400295,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696866424031
    },
    {
      "type": "add",
      "id": "fdf3e3c262643848",
      "item": {
        "type": "paragraph",
        "id": "fdf3e3c262643848",
        "text": "⇒ [[Creating a Parser for Logical Propositions]]"
      },
      "after": "482d0a05e321d0a0",
      "date": 1696866576295
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "elm radio Episode #6 elm/parser [https://elm-radio.com/episode/elm-parser/ podcast] [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696867175676
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "[[elm radio]] Episode #6 elm/parser [https://elm-radio.com/episode/elm-parser/ podcast] [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696867183544
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "[[Elm Radio]] Episode #6 [[elm/parser]] [https://elm-radio.com/episode/elm-parser/ podcast] [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696867197289
    },
    {
      "item": {
        "type": "factory",
        "id": "e14959f760aebf4a"
      },
      "id": "e14959f760aebf4a",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696867430403
    },
    {
      "type": "edit",
      "id": "e14959f760aebf4a",
      "item": {
        "type": "reference",
        "id": "e14959f760aebf4a",
        "site": "wiki.ralfbarkow.ch",
        "slug": "demystifying-parsers",
        "title": "Demystifying Parsers",
        "text": "I ([[Tereza Sokol]]) usually take a look at the API first and that looks like this."
      },
      "date": 1696867433530
    },
    {
      "id": "e14959f760aebf4a",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "fdf3e3c262643848",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "70e5cc3ad816ca16",
        "99f9253ba92aa6ae",
        "e14959f760aebf4a",
        "49e65c3929c284bf"
      ],
      "date": 1696867445086,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696867452669
    },
    {
      "id": "931062fa5f50f167",
      "type": "add",
      "item": {
        "type": "image",
        "id": "931062fa5f50f167",
        "text": "Take a look at the API first. [https://youtu.be/M9ulswr1z0E?t=255 video]",
        "size": "wide",
        "width": 418,
        "height": 235,
        "url": "/assets/plugins/image/819a09630835a925ad9146b0f2da003f.jpg"
      },
      "after": "e14959f760aebf4a",
      "attribution": {
        "page": "Demystifying Parsers"
      },
      "date": 1696867488802
    },
    {
      "type": "add",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "text without links"
      },
      "after": "96115c307d5e0d7c",
      "date": 1696867546006
    },
    {
      "id": "4f54c2a23b5b0ee5",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "482d0a05e321d0a0",
        "fdf3e3c262643848",
        "c3aad64a32e5c14b",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "4f54c2a23b5b0ee5",
        "70e5cc3ad816ca16",
        "99f9253ba92aa6ae",
        "e14959f760aebf4a",
        "931062fa5f50f167",
        "49e65c3929c284bf"
      ],
      "date": 1696867548234,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696867578513
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "textWithoutLink"
      },
      "date": 1696867615156
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "textWithoutLink ="
      },
      "date": 1696867623200
    },
    {
      "type": "edit",
      "id": "70e5cc3ad816ca16",
      "item": {
        "type": "code",
        "id": "70e5cc3ad816ca16",
        "text": "    chompUntil \"[\"\n        |> getChompedString\n        |> andThen …"
      },
      "date": 1696867654502
    },
    {
      "type": "edit",
      "id": "49e65c3929c284bf",
      "item": {
        "type": "video",
        "id": "49e65c3929c284bf",
        "text": "YOUTUBE 62khGXfh8zg\n[[Martin Janiczek]], Elm compiler in Elm! Elm Europe 2019 "
      },
      "date": 1696867706254
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "[[Elm Radio]] Episode #6 [[elm/parser]] [https://elm-radio.com/episode/elm-parser/ podcast], Walking Though the Elm Woods [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696867851812
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "⇒ textWithoutLink ="
      },
      "date": 1696867979143
    },
    {
      "type": "add",
      "id": "ab0408b4efab0dd1",
      "item": {
        "type": "paragraph",
        "id": "ab0408b4efab0dd1",
        "text": "        { oneOf =\n            [ literal internalLink\n            , literal char"
      },
      "after": "4f54c2a23b5b0ee5",
      "date": 1696868093707
    },
    {
      "item": {
        "type": "factory",
        "id": "017856a9e5f190e3"
      },
      "id": "017856a9e5f190e3",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696868099134
    },
    {
      "type": "edit",
      "id": "017856a9e5f190e3",
      "item": {
        "type": "code",
        "id": "017856a9e5f190e3",
        "text": "        { oneOf =\n            [ literal internalLink\n            , literal char"
      },
      "date": 1696868101406
    },
    {
      "type": "edit",
      "id": "ab0408b4efab0dd1",
      "item": {
        "type": "paragraph",
        "id": "ab0408b4efab0dd1",
        "text": "oneOf"
      },
      "date": 1696868144795
    },
    {
      "type": "fork",
      "date": 1696868147393
    },
    {
      "type": "edit",
      "id": "017856a9e5f190e3",
      "item": {
        "type": "code",
        "id": "017856a9e5f190e3",
        "text": "        { oneOf =\n            [ textWithoutLink\n            , char"
      },
      "date": 1696868222822
    },
    {
      "type": "edit",
      "id": "c3aad64a32e5c14b",
      "item": {
        "type": "paragraph",
        "id": "c3aad64a32e5c14b",
        "text": "Why Elm is the right tool to build [[MiniLatex]] [https://dev.to/jxxcarlson/why-elm-is-the-right-tool-to-build-minilatex-3b87 page]"
      },
      "date": 1696868256859
    },
    {
      "type": "remove",
      "id": "482d0a05e321d0a0",
      "date": 1696868294537
    },
    {
      "type": "remove",
      "id": "fdf3e3c262643848",
      "date": 1696868296386
    },
    {
      "type": "remove",
      "id": "c3aad64a32e5c14b",
      "date": 1696868298327
    },
    {
      "type": "edit",
      "id": "96115c307d5e0d7c",
      "item": {
        "type": "paragraph",
        "id": "96115c307d5e0d7c",
        "text": "⇒ [[email-parser]] [https://github.com/panthershark/email-parser/blob/513ffa7be655d3e165cda734fdcc8eea91dc7f0b/src/Email.elm#L92-L96 code]"
      },
      "date": 1696868304467
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without link, i.e., only one empty [[Square-Bracket]]\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696868333981
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* text without link ([[Unification]] asserts that there is only one empty [[Square-Bracket]])\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696868409987
    },
    {
      "type": "edit",
      "id": "99f9253ba92aa6ae",
      "item": {
        "type": "paragraph",
        "id": "99f9253ba92aa6ae",
        "text": "[[Elm Radio]] Episode #6 [[elm/parser]] [https://elm-radio.com/episode/elm-parser/ podcast]"
      },
      "date": 1696868776055
    },
    {
      "type": "add",
      "id": "a838e6f95bbdb14f",
      "item": {
        "type": "paragraph",
        "id": "a838e6f95bbdb14f",
        "text": "Walking Though the Elm Woods [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "after": "99f9253ba92aa6ae",
      "date": 1696868777721
    },
    {
      "id": "a838e6f95bbdb14f",
      "type": "move",
      "order": [
        "41f26ccbcd548b45",
        "d204add219c3bcab",
        "7ed421a360d9dced",
        "84ea89ad4b093684",
        "undefined",
        "9a20bb6e1f0fd473",
        "c95d42514fe6a5bc",
        "2bb27a0d77bf3c1a",
        "d157be81fc7f1f13",
        "8235f5a9decdc3ba",
        "a8c21f7138cec7d4",
        "c351182825157189",
        "26f5f134b396f863",
        "0612754c312239f3",
        "51b11af12795343f",
        "a9e772e301b61391",
        "3a80f217c56eda1c",
        "a30bc82680982490",
        "5be1804be40d40b2",
        "d1bbfa7ca9465e2d",
        "40eadc78ce4a7d12",
        "585438b6ae3303ec",
        "2d6a1e6804a3b2cb",
        "e476e670e9822f83",
        "a8d1dbccc592a753",
        "4abeb6916015ae3f",
        "042d31e35cbbbd50",
        "ce313df7d43477a3",
        "cf0b9fafa4a0a07b",
        "af63cb679c7f213e",
        "96534b6cbdbdc8e3",
        "56a8edec850538c1",
        "9427df4ec5a42f4e",
        "51fe23a4c1d60beb",
        "8b7544c8c5917d4b",
        "032ddbb0ca793316",
        "65497f0624c08ce5",
        "96115c307d5e0d7c",
        "0d830bbbb3b91f86",
        "4f54c2a23b5b0ee5",
        "70e5cc3ad816ca16",
        "ab0408b4efab0dd1",
        "017856a9e5f190e3",
        "99f9253ba92aa6ae",
        "e14959f760aebf4a",
        "931062fa5f50f167",
        "a838e6f95bbdb14f",
        "49e65c3929c284bf"
      ],
      "date": 1696868823803,
      "error": {
        "type": "error",
        "msg": "",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1696868834020
    },
    {
      "type": "edit",
      "id": "a838e6f95bbdb14f",
      "item": {
        "type": "paragraph",
        "id": "a838e6f95bbdb14f",
        "text": "elm/parser @ Walking Though the Elm Woods [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696868883599
    },
    {
      "type": "edit",
      "id": "a838e6f95bbdb14f",
      "item": {
        "type": "paragraph",
        "id": "a838e6f95bbdb14f",
        "text": "[[elm/parser]] section in the \"Walking Though the Elm Woods\" book [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696869019280
    },
    {
      "type": "edit",
      "id": "a838e6f95bbdb14f",
      "item": {
        "type": "paragraph",
        "id": "a838e6f95bbdb14f",
        "text": "[[elm/parser]] section in the \"Walking Though the Elm Woods\" Elm cookbook [https://orasund.gitbook.io/elm-cookbook/frameworks-1/elm-parser page]"
      },
      "date": 1696869046579
    },
    {
      "type": "add",
      "id": "9f7fb31ed8c1f874",
      "item": {
        "type": "paragraph",
        "id": "9f7fb31ed8c1f874",
        "text": "Elm compiler written in Elm "
      },
      "after": "a838e6f95bbdb14f",
      "date": 1696869128309
    },
    {
      "type": "edit",
      "id": "9f7fb31ed8c1f874",
      "item": {
        "type": "paragraph",
        "id": "9f7fb31ed8c1f874",
        "text": "Elm compiler written in Elm [https://github.com/elm-in-elm/compiler github]"
      },
      "date": 1696869140253
    },
    {
      "type": "edit",
      "id": "9f7fb31ed8c1f874",
      "item": {
        "type": "paragraph",
        "id": "9f7fb31ed8c1f874",
        "text": "Elm compiler written in Elm [https://github.com/elm-in-elm/compiler github] [https://elm-in-elm.github.io/compiler/ page]"
      },
      "date": 1696869158202
    },
    {
      "item": {
        "type": "factory",
        "id": "03179922229d9f89"
      },
      "id": "03179922229d9f89",
      "type": "add",
      "after": "49e65c3929c284bf",
      "date": 1696875822648
    },
    {
      "type": "edit",
      "id": "03179922229d9f89",
      "item": {
        "type": "reference",
        "id": "03179922229d9f89",
        "site": "wiki.ralfbarkow.ch",
        "slug": "test-elm-applications",
        "title": "Test Elm Applications",
        "text": "Until now, you have focused on building [[Elm]] applications."
      },
      "date": 1696875824875
    },
    {
      "item": {
        "type": "factory",
        "id": "2fbd69f7e44b75e5"
      },
      "id": "2fbd69f7e44b75e5",
      "type": "add",
      "after": "03179922229d9f89",
      "date": 1696875838206
    },
    {
      "type": "edit",
      "id": "2fbd69f7e44b75e5",
      "item": {
        "type": "reference",
        "id": "2fbd69f7e44b75e5",
        "site": "wiki.ralfbarkow.ch",
        "slug": "parse-a-string-with-the-grammar",
        "title": "Parse a String with the Grammar",
        "text": "MainSpec.elm test case [https://github.com/RalfBarkow/vite-elm-dojo/blob/70ec0e3129afa2bebc2ae1084d8422093c8ed406/tests/MainSpec.elm#L8-L22 code] [⇐ [[Test Elm Applications]]] [https://www.linkedin.com/posts/ralfbarkow_tdd-elm-federatedwiki-activity-7115655109312696323-UTtV post]"
      },
      "date": 1696875840894
    },
    {
      "item": {
        "type": "factory",
        "id": "edec94ddfa533425"
      },
      "id": "edec94ddfa533425",
      "type": "add",
      "after": "2fbd69f7e44b75e5",
      "date": 1696882051757
    },
    {
      "type": "edit",
      "id": "edec94ddfa533425",
      "item": {
        "type": "reference",
        "id": "edec94ddfa533425",
        "site": "wiki.ralfbarkow.ch",
        "slug": "result",
        "title": "Result",
        "text": "is the result of a computation that may fail. [https://package.elm-lang.org/packages/elm/core/latest/Result package]"
      },
      "date": 1696882055399
    },
    {
      "item": {
        "type": "factory",
        "id": "24372c469aff6db0"
      },
      "id": "24372c469aff6db0",
      "type": "add",
      "after": "edec94ddfa533425",
      "date": 1696882065586
    },
    {
      "type": "edit",
      "id": "24372c469aff6db0",
      "item": {
        "type": "code",
        "id": "24372c469aff6db0",
        "text": "result : Result Error String\nresult =\n    let\n        actions _ found _ =\n            Ok (String.toUpper found)\n\n        predicate _ _ state =\n            ( True, state )\n    in\n    grammarString\n        |> fromString\n        |> Result.andThen (\\grammar -> parse grammar \"\" actions predicate \"abc\")\n\n"
      },
      "date": 1696882068464
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "⇒ textWithoutLink = [https://github.com/RalfBarkow/vite-elm-dojo/blob/2ecba357ce7927936358fc75559b5c32d642d69d/src/Main.elm#L7 code]"
      },
      "date": 1696885690810
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "⇒ textWithoutLink[https://github.com/RalfBarkow/vite-elm-dojo/blob/2ecba357ce7927936358fc75559b5c32d642d69d/src/Main.elm#L7 code]"
      },
      "date": 1696885707714
    },
    {
      "type": "edit",
      "id": "4f54c2a23b5b0ee5",
      "item": {
        "type": "paragraph",
        "id": "4f54c2a23b5b0ee5",
        "text": "⇒ textWithoutLink [https://github.com/RalfBarkow/vite-elm-dojo/blob/2ecba357ce7927936358fc75559b5c32d642d69d/src/Main.elm#L7 code]"
      },
      "date": 1696885711410
    },
    {
      "type": "edit",
      "id": "70e5cc3ad816ca16",
      "item": {
        "type": "code",
        "id": "70e5cc3ad816ca16",
        "text": "textWithoutLink : Parser String\ntextWithoutLink =\n    chompUntil \"[\"\n        |> getChompedString\n\n\n\n-- |> andThen checkLink\n"
      },
      "date": 1696885730381
    },
    {
      "id": "70e5cc3ad816ca16",
      "type": "remove",
      "removedTo": {
        "page": "Text without Link"
      },
      "date": 1696918084300
    },
    {
      "type": "edit",
      "id": "9427df4ec5a42f4e",
      "item": {
        "type": "markdown",
        "id": "9427df4ec5a42f4e",
        "text": "* [[Text without Link]] ([[Unification]] asserts that there is only one empty [[Square-Bracket]])\n* [[Internal Link]]\n* [[External Link]]"
      },
      "date": 1696919873488
    }
  ]
}