{
  "title": "Parsing Cypher",
  "story": [
    {
      "type": "paragraph",
      "id": "97166336eac02069",
      "text": "We've shown typical translations of [[Cypher in Javascript]]. Here we consider how we might automate that translation."
    },
    {
      "type": "paragraph",
      "id": "61c4f4876badc8b4",
      "text": "The [[openCypher]] standardization effort includes grammars in EBNF and Railroad Diagrams. [https://opencypher.org/resources/ opencypher]"
    },
    {
      "type": "paragraph",
      "id": "1531eecc12f36221",
      "text": "The [[PEG]].js parser generator for javascript hosts an interactive grammar development environment that builds and runs a partial grammar against test input. [https://pegjs.org/online pegjs]"
    },
    {
      "type": "pagefold",
      "id": "b11e681fd34f54cc",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "005fb208eeb4034f",
      "text": "We've had encouraging initial success parsing one sample query with excerpts from the openCypher grammar."
    },
    {
      "type": "code",
      "id": "791678afe7fbfcea",
      "text": "match (n:Employee) <-[:Manager]- (:Project)"
    },
    {
      "type": "code",
      "id": "cc268e3996427024",
      "text": "Match =\n  'match' _ p:PatternElement\n  { return `match(${p})` }\n\nPatternElement =\n  l:NodePattern _\n  x:(RelationshipPattern NodePattern)*\n  { return `eval(${l},${x})` }\n\nNodePattern =\n  '(' v:Variable? ':' l:Label ')'\n  { return `\\nnode(${v},${l})` }\n\nRelationshipPattern =\n  '<-' _ d:RelationshipDetail? '-' _\n  { return `\\nin(${d})` }\n  \nRelationshipDetail =\n  '[' v:Variable? ':' t:Type ']'\n  { return `rel(${v},${t})` }\n\nVariable = \n  v:Word\n  { return v }\n  \nLabel =\n  l:Word\n  { return `'${l}'` }\n  \nType =\n  t:Word\n  { return `'${t}'` }\n\nWord =\n  [A-Za-z]+\n  { return text() }\n  \n_ =\n  [ \\t\\n\\r]* \n\n"
    },
    {
      "type": "paragraph",
      "id": "3c2721bedb75d73a",
      "text": "This produced the mock translation including the essential elements but only suggestive javascript actions."
    },
    {
      "type": "code",
      "id": "7cc1fd4aba73f29c",
      "text": "match(eval(\nnode(n,'Employee'),\nin(rel(null,'Manager')),\nnode(null,'Project')))"
    },
    {
      "type": "pagefold",
      "id": "695c55e41afcc30f",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "e794b107eb6fbb8d",
      "text": "We download the generated parser, hacked the exports,  and run it within an html script. [https://github.com/WardCunningham/assets/blob/master/pages/mock-graph-data/cypher.html github]"
    },
    {
      "type": "frame",
      "id": "e6b1157110e7955d",
      "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/cypher.html\nHEIGHT 300"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Parsing Cypher",
        "story": []
      },
      "date": 1645145400408
    },
    {
      "item": {
        "type": "factory",
        "id": "97166336eac02069"
      },
      "id": "97166336eac02069",
      "type": "add",
      "date": 1645145414880
    },
    {
      "type": "edit",
      "id": "97166336eac02069",
      "item": {
        "type": "paragraph",
        "id": "97166336eac02069",
        "text": "We've shown typical translations of [[Cypher in Javascript]]. Here we consider how we might automate that translation."
      },
      "date": 1645145490776
    },
    {
      "item": {
        "type": "factory",
        "id": "61c4f4876badc8b4"
      },
      "id": "61c4f4876badc8b4",
      "type": "add",
      "after": "97166336eac02069",
      "date": 1645146325036
    },
    {
      "type": "edit",
      "id": "61c4f4876badc8b4",
      "item": {
        "type": "paragraph",
        "id": "61c4f4876badc8b4",
        "text": "The openCypher standardization effort includes grammars in EBNF and Railroad Diagrams. [https://opencypher.org/resources/ opencypher]"
      },
      "date": 1645146400047
    },
    {
      "type": "add",
      "id": "1531eecc12f36221",
      "item": {
        "type": "paragraph",
        "id": "1531eecc12f36221",
        "text": "The PEG.js parser generator for javascript hosts an interactive grammar development environment that builds and runs a partial grammar against test input. [https://pegjs.org/online pegjs]"
      },
      "after": "61c4f4876badc8b4",
      "date": 1645146561729
    },
    {
      "item": {
        "type": "factory",
        "id": "b11e681fd34f54cc"
      },
      "id": "b11e681fd34f54cc",
      "type": "add",
      "after": "1531eecc12f36221",
      "date": 1645146677425
    },
    {
      "type": "edit",
      "id": "b11e681fd34f54cc",
      "item": {
        "type": "pagefold",
        "id": "b11e681fd34f54cc",
        "text": "."
      },
      "date": 1645146681206
    },
    {
      "item": {
        "type": "factory",
        "id": "005fb208eeb4034f"
      },
      "id": "005fb208eeb4034f",
      "type": "add",
      "after": "b11e681fd34f54cc",
      "date": 1645146683741
    },
    {
      "type": "edit",
      "id": "005fb208eeb4034f",
      "item": {
        "type": "paragraph",
        "id": "005fb208eeb4034f",
        "text": "We've had encouraging initial success parsing one sample query with excerpts from the openCypher grammar."
      },
      "date": 1645146759970
    },
    {
      "item": {
        "type": "factory",
        "id": "791678afe7fbfcea"
      },
      "id": "791678afe7fbfcea",
      "type": "add",
      "after": "005fb208eeb4034f",
      "date": 1645146763955
    },
    {
      "type": "edit",
      "id": "791678afe7fbfcea",
      "item": {
        "type": "code",
        "id": "791678afe7fbfcea",
        "text": "match (n:Employee) <-[:Manager]- (:Project)"
      },
      "date": 1645146767982
    },
    {
      "item": {
        "type": "factory",
        "id": "cc268e3996427024"
      },
      "id": "cc268e3996427024",
      "type": "add",
      "after": "791678afe7fbfcea",
      "date": 1645146785354
    },
    {
      "type": "edit",
      "id": "cc268e3996427024",
      "item": {
        "type": "code",
        "id": "cc268e3996427024",
        "text": "Match =\n  'match' _ p:PatternElement\n  { return `match(${p})` }\n\nPatternElement =\n  l:NodePattern _\n  x:(RelationshipPattern NodePattern)*\n  { return `eval(${l},${x})` }\n\nNodePattern =\n  '(' v:Variable? ':' l:Label ')'\n  { return `\\nnode(${v},${l})` }\n\nRelationshipPattern =\n  '<-' _ d:RelationshipDetail? '-' _\n  { return `\\nin(${d})` }\n  \nRelationshipDetail =\n  '[' v:Variable? ':' t:Type ']'\n  { return `rel(${v},${t})` }\n\nVariable = \n  v:Word\n  { return v }\n  \nLabel =\n  l:Word\n  { return `'${l}'` }\n  \nType =\n  t:Word\n  { return `'${t}'` }\n\nWord =\n  [A-Za-z]+\n  { return text() }\n  \n_ =\n  [ \\t\\n\\r]* \n\n"
      },
      "date": 1645146791914
    },
    {
      "item": {
        "type": "factory",
        "id": "3c2721bedb75d73a"
      },
      "id": "3c2721bedb75d73a",
      "type": "add",
      "after": "cc268e3996427024",
      "date": 1645146831958
    },
    {
      "type": "edit",
      "id": "3c2721bedb75d73a",
      "item": {
        "type": "paragraph",
        "id": "3c2721bedb75d73a",
        "text": "This produced the mock translation including the essential elements but only a suggestive complement of javascript actions."
      },
      "date": 1645146892051
    },
    {
      "type": "edit",
      "id": "3c2721bedb75d73a",
      "item": {
        "type": "paragraph",
        "id": "3c2721bedb75d73a",
        "text": "This produced the mock translation including the essential elements but only suggestive javascript functions."
      },
      "date": 1645146915351
    },
    {
      "type": "edit",
      "id": "3c2721bedb75d73a",
      "item": {
        "type": "paragraph",
        "id": "3c2721bedb75d73a",
        "text": "This produced the mock translation including the essential elements but only suggestive javascript actions."
      },
      "date": 1645146956520
    },
    {
      "item": {
        "type": "factory",
        "id": "7cc1fd4aba73f29c"
      },
      "id": "7cc1fd4aba73f29c",
      "type": "add",
      "after": "3c2721bedb75d73a",
      "date": 1645146961179
    },
    {
      "type": "edit",
      "id": "7cc1fd4aba73f29c",
      "item": {
        "type": "code",
        "id": "7cc1fd4aba73f29c",
        "text": "match(eval(\nnode(n,'Employee'),\nin(rel(null,'Manager')),\nnode(null,'Project')))"
      },
      "date": 1645146965725
    },
    {
      "item": {
        "type": "factory",
        "id": "695c55e41afcc30f"
      },
      "id": "695c55e41afcc30f",
      "type": "add",
      "after": "7cc1fd4aba73f29c",
      "date": 1645148387545
    },
    {
      "type": "edit",
      "id": "695c55e41afcc30f",
      "item": {
        "type": "pagefold",
        "id": "695c55e41afcc30f",
        "text": "."
      },
      "date": 1645148392862
    },
    {
      "item": {
        "type": "factory",
        "id": "e6b1157110e7955d"
      },
      "id": "e6b1157110e7955d",
      "type": "add",
      "after": "695c55e41afcc30f",
      "date": 1645148395405
    },
    {
      "type": "edit",
      "id": "e6b1157110e7955d",
      "item": {
        "type": "frame",
        "id": "e6b1157110e7955d",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/cypher.html\nHEIGHT 600"
      },
      "date": 1645148900608
    },
    {
      "type": "edit",
      "id": "e6b1157110e7955d",
      "item": {
        "type": "frame",
        "id": "e6b1157110e7955d",
        "text": "http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/cypher.html\nHEIGHT 300"
      },
      "date": 1645149494580
    },
    {
      "item": {
        "type": "factory",
        "id": "e794b107eb6fbb8d"
      },
      "id": "e794b107eb6fbb8d",
      "type": "add",
      "after": "e6b1157110e7955d",
      "date": 1645157114327
    },
    {
      "type": "edit",
      "id": "e794b107eb6fbb8d",
      "item": {
        "type": "paragraph",
        "id": "e794b107eb6fbb8d",
        "text": "We download the generated parser, hacked the exports,  and run it within an html script. "
      },
      "date": 1645157224100
    },
    {
      "type": "edit",
      "id": "e794b107eb6fbb8d",
      "item": {
        "type": "paragraph",
        "id": "e794b107eb6fbb8d",
        "text": "We download the generated parser, hacked the exports,  and run it within an html script. [https://github.com/WardCunningham/assets/blob/master/pages/mock-graph-data/cypher.html github]"
      },
      "date": 1645157382019
    },
    {
      "id": "e794b107eb6fbb8d",
      "type": "move",
      "order": [
        "97166336eac02069",
        "61c4f4876badc8b4",
        "1531eecc12f36221",
        "b11e681fd34f54cc",
        "005fb208eeb4034f",
        "791678afe7fbfcea",
        "cc268e3996427024",
        "3c2721bedb75d73a",
        "7cc1fd4aba73f29c",
        "695c55e41afcc30f",
        "e794b107eb6fbb8d",
        "e6b1157110e7955d"
      ],
      "date": 1645157386910
    },
    {
      "type": "fork",
      "site": "ward.dojo.fed.wiki",
      "date": 1645162536690
    },
    {
      "item": {
        "type": "factory",
        "id": "bb4ca91b56ffe850"
      },
      "id": "bb4ca91b56ffe850",
      "type": "add",
      "after": "e6b1157110e7955d",
      "date": 1645162611106
    },
    {
      "type": "edit",
      "id": "bb4ca91b56ffe850",
      "item": {
        "type": "assets",
        "id": "bb4ca91b56ffe850",
        "text": "mock-graph-data"
      },
      "date": 1645162618541
    },
    {
      "type": "edit",
      "id": "bb4ca91b56ffe850",
      "item": {
        "type": "assets",
        "id": "bb4ca91b56ffe850",
        "text": "pages/mock-graph-data"
      },
      "date": 1645162627736
    },
    {
      "type": "edit",
      "id": "e6b1157110e7955d",
      "item": {
        "type": "frame",
        "id": "e6b1157110e7955d",
        "text": "//wiki.ralfbarkow.ch/assets/pages/mock-graph-data/cypher.html\nHEIGHT 300"
      },
      "date": 1645163023377
    },
    {
      "item": {
        "type": "factory",
        "id": "094b003d0d6c48cf"
      },
      "id": "094b003d0d6c48cf",
      "type": "add",
      "after": "bb4ca91b56ffe850",
      "date": 1645163236730
    },
    {
      "type": "edit",
      "id": "094b003d0d6c48cf",
      "item": {
        "type": "pagefold",
        "id": "094b003d0d6c48cf",
        "text": "mock-graph-data/"
      },
      "date": 1645163240115
    },
    {
      "id": "094b003d0d6c48cf",
      "type": "move",
      "order": [
        "97166336eac02069",
        "61c4f4876badc8b4",
        "1531eecc12f36221",
        "b11e681fd34f54cc",
        "005fb208eeb4034f",
        "791678afe7fbfcea",
        "cc268e3996427024",
        "3c2721bedb75d73a",
        "7cc1fd4aba73f29c",
        "695c55e41afcc30f",
        "e794b107eb6fbb8d",
        "e6b1157110e7955d",
        "094b003d0d6c48cf",
        "bb4ca91b56ffe850"
      ],
      "date": 1645163244836
    },
    {
      "type": "remove",
      "id": "bb4ca91b56ffe850",
      "date": 1645164028923
    },
    {
      "type": "remove",
      "id": "094b003d0d6c48cf",
      "date": 1645164033096
    },
    {
      "type": "edit",
      "id": "1531eecc12f36221",
      "item": {
        "type": "paragraph",
        "id": "1531eecc12f36221",
        "text": "The [[PEG]].js parser generator for javascript hosts an interactive grammar development environment that builds and runs a partial grammar against test input. [https://pegjs.org/online pegjs]"
      },
      "date": 1651152782928
    },
    {
      "type": "edit",
      "id": "61c4f4876badc8b4",
      "item": {
        "type": "paragraph",
        "id": "61c4f4876badc8b4",
        "text": "The [[openCypher]] standardization effort includes grammars in EBNF and Railroad Diagrams. [https://opencypher.org/resources/ opencypher]"
      },
      "date": 1652347644617
    }
  ]
}