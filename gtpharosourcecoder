{
  "title": "GtPharoSourceCoder",
  "story": [
    {
      "type": "markdown",
      "id": "a0477fd74ffe60dd",
      "text": "# Source coder\nI am a coder for the source code. I know about the `sourceCode` ({{gtClass:GtCoderTextSource}}) and `completionStrategy` ({{gtClass:GtCompletionStrategy}}).\n## Actions\nAll source coders know about basic actions such as code evaluation (`do it all, do it and go, do it selection and go`) or different browsing abilities. Those actions can only be executed in a presence of a text editor UI element that is passed as an argument. It is required to provide a text editor element in order to get information about cursor position or current selection, in addition to being able to have a UI context to notify user or provide her with a feedback of the executed action. All actions are always performed on the current source code text (expanded/collapsed state is not taken into account).\n## Add-ons\nThe source coder extends the addons ({{gtClass:GtCoderAddOns}}) with extra stylers (see {{gtClass:GtTextualCoderAddOns}}) that allows users to add extra contextual information within the text editor via text attributes.\n## Implementation details\nIt is important to notice that I do not directly reference a text editor and I should not store any UI related information such as cursor position or selection.\n\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "GtPharoSourceCoder",
        "story": []
      },
      "date": 1657109913351
    },
    {
      "item": {
        "type": "factory",
        "id": "a0477fd74ffe60dd"
      },
      "id": "a0477fd74ffe60dd",
      "type": "add",
      "date": 1657109915243
    },
    {
      "type": "edit",
      "id": "a0477fd74ffe60dd",
      "item": {
        "type": "markdown",
        "id": "a0477fd74ffe60dd",
        "text": "# Source coder\nI am a coder for the source code. I know about the `sourceCode` ({{gtClass:GtCoderTextSource}}) and `completionStrategy` ({{gtClass:GtCompletionStrategy}}).\n## Actions\nAll source coders know about basic actions such as code evaluation (`do it all, do it and go, do it selection and go`) or different browsing abilities. Those actions can only be executed in a presence of a text editor UI element that is passed as an argument. It is required to provide a text editor element in order to get information about cursor position or current selection, in addition to being able to have a UI context to notify user or provide her with a feedback of the executed action. All actions are always performed on the current source code text (expanded/collapsed state is not taken into account).\n## Add-ons\nThe source coder extends the addons ({{gtClass:GtCoderAddOns}}) with extra stylers (see {{gtClass:GtTextualCoderAddOns}}) that allows users to add extra contextual information within the text editor via text attributes.\n## Implementation details\nIt is important to notice that I do not directly reference a text editor and I should not store any UI related information such as cursor position or selection.\n\n"
      },
      "date": 1657109921847
    }
  ]
}