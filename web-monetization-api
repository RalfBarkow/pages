{
  "title": "Web Monetization API",
  "story": [
    {
      "id": "040db601-3d74-4bb5-8300-d19f569bc1f3",
      "type": "markdown",
      "text": "To speak about web monetization is to speak about web advertising and user data. When accessing free content you are handing your personal data or getting bombarded with ads. Most likely both. There are a few ways to monetize your content. Let's recap them:- [https://codeburst.io/web-monetization-api-a-new-web-monetization-alternative-eb72b5c58bd6 codeburst.io]"
    },
    {
      "id": "72ac1142-a6aa-40b2-a1cd-cb77dc383802",
      "type": "markdown",
      "text": "- Web Monetization API: A New Web Monetization Alternative- [https://codeburst.io/web-monetization-api-a-new-web-monetization-alternative-eb72b5c58bd6 codeburst.io]"
    },
    {
      "type": "markdown",
      "id": "b341767af5592e9d",
      "text": "Web Monetization (WM) is a proposed API standard that allows websites to request a stream of very small payments (e.g. fractions of a cent) from a user.\n\nThe API's framework provides new revenue models for websites and web-based services and is an alternative to subscription services and advertising, all while preserving the user's privacy.\n\nIn exchange for payments from the user, websites can provide the user with a \"premium\" experience, such as allowing access to exclusive content, removing advertising, or even removing the need to log in to access content or services.\n"
    },
    {
      "type": "markdown",
      "id": "c9a28b5a09819207",
      "text": "# Web Monetization Receivers\n"
    },
    {
      "type": "markdown",
      "id": "55f5678e6fb63c55",
      "text": "This page describes the functions of the Web Monetization (WM) receiver and how existing payment services might become a WM receiver.\n"
    },
    {
      "type": "markdown",
      "id": "7a46703d7cd7d678",
      "text": "\nA WM receiver is a digital entity that accepts payments over Interledger on behalf of a website and is capable of receiving micropayments.\n"
    },
    {
      "type": "markdown",
      "id": "5d99a336f076ab42",
      "text": "\nWhen a user has Web Monetization enabled in their browser and they visit a monetized website, the browser resolves a unique receiving address for sending payments to the website's WM receiver. The browser then begins sending payments through the user's WM sender.\n"
    },
    {
      "type": "markdown",
      "id": "9b4a33b3922fc843",
      "text": "\n# Payment pointers\n"
    },
    {
      "type": "markdown",
      "id": "523e31b978cc5a11",
      "text": "A payment pointer is a unique URL assigned to your payment account by your WM receiver.\n"
    },
    {
      "type": "markdown",
      "id": "157225408d558f18",
      "text": "\nThe expectation is that a WM receiver will issue one or more payment pointers to its customers and these customers will embed the pointer into the websites they want to monetize. The user's browser then fetches connection details from the pointer to open a payment stream with the WM receiver.\n"
    },
    {
      "type": "markdown",
      "id": "7b89518c3e62fb2e",
      "text": "\nPayment pointers resolve to secure URLs, making it possible for WM receivers to redirect browsers to alternate addresses using standard HTTP redirects.\n"
    },
    {
      "type": "markdown",
      "id": "7cd1bb1c35d2d8a8",
      "text": "\nOne benefit of payment pointers is that they provide a level of indirection that allows browsers to protect the privacy of users from their WM senders. Specifically, a browser uses a pointer to request a unique destination address and shared secret from the website's WM receiver. Only the unique destination address for the session is given to the WM sender. This prevents the WM sender from correlating a payment pointer with a website.\n"
    },
    {
      "type": "markdown",
      "id": "0a0907efdc66547b",
      "text": "# Receiving payments\nAny entity that is able to accept payments on behalf of websites can be a WM receiver if it supports the necessary protocols. To accept a stream of payments on behalf of its users, a WM receiver MUST support the following protocols from the Interledger stack:\n"
    },
    {
      "type": "markdown",
      "id": "07fade6ac0e3e75f",
      "text": "- [[Interledger Protocol]]\n- [[Simple Payment Setup Protocol]]\n- [[STREAM Protocol]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Web Monetization API",
        "story": []
      },
      "date": 1630088144378
    },
    {
      "item": {
        "type": "factory",
        "id": "b341767af5592e9d"
      },
      "id": "b341767af5592e9d",
      "type": "add",
      "date": 1630088145472
    },
    {
      "type": "edit",
      "id": "b341767af5592e9d",
      "item": {
        "type": "markdown",
        "id": "b341767af5592e9d",
        "text": "# Receiving payments\nAny entity that is able to accept payments on behalf of websites can be a WM receiver if it supports the necessary protocols. To accept a stream of payments on behalf of its users, a WM receiver MUST support the following protocols from the Interledger stack:\n"
      },
      "date": 1630088160063
    },
    {
      "type": "add",
      "id": "07fade6ac0e3e75f",
      "item": {
        "type": "markdown",
        "id": "07fade6ac0e3e75f",
        "text": "- [[Interledger Protocol]] (ILP) - Establishes a - micropayment stream and sends payments\n- [[Simple Payment Setup Protocol]] (SPSP) - Exchanges payment information between payee and payer to facilitate payment over ILP\n-- [[STREAM Protocol]] - Establishes micropayment streams between entities using the ILP\n"
      },
      "after": "b341767af5592e9d",
      "date": 1630088194047
    },
    {
      "type": "edit",
      "id": "07fade6ac0e3e75f",
      "item": {
        "type": "markdown",
        "id": "07fade6ac0e3e75f",
        "text": "- [[Interledger Protocol]]\n- [[Simple Payment Setup Protocol]] (SPSP) - Exchanges payment information between payee and payer to facilitate payment over ILP\n-- [[STREAM Protocol]] - Establishes micropayment streams between entities using the ILP\n"
      },
      "date": 1630088213562
    },
    {
      "type": "edit",
      "id": "07fade6ac0e3e75f",
      "item": {
        "type": "markdown",
        "id": "07fade6ac0e3e75f",
        "text": "- [[Interledger Protocol]]\n- [[Simple Payment Setup Protocol]]\n-- [[STREAM Protocol]] - Establishes micropayment streams between entities using the ILP\n"
      },
      "date": 1630088236584
    },
    {
      "type": "edit",
      "id": "07fade6ac0e3e75f",
      "item": {
        "type": "markdown",
        "id": "07fade6ac0e3e75f",
        "text": "- [[Interledger Protocol]]\n- [[Simple Payment Setup Protocol]]\n- [[STREAM Protocol]]"
      },
      "date": 1630088260362
    },
    {
      "type": "edit",
      "id": "b341767af5592e9d",
      "item": {
        "type": "markdown",
        "id": "b341767af5592e9d",
        "text": "Web Monetization Receivers\nThis page describes the functions of the Web Monetization (WM) receiver and how existing payment services might become a WM receiver.\n\nA WM receiver is a digital entity that accepts payments over Interledger on behalf of a website and is capable of receiving micropayments.\n\nWhen a user has Web Monetization enabled in their browser and they visit a monetized website, the browser resolves a unique receiving address for sending payments to the website's WM receiver. The browser then begins sending payments through the user's WM sender.\n\nPayment pointers#\nA payment pointer is a unique URL assigned to your payment account by your WM receiver.\n\nThe expectation is that a WM receiver will issue one or more payment pointers to its customers and these customers will embed the pointer into the websites they want to monetize. The user's browser then fetches connection details from the pointer to open a payment stream with the WM receiver.\n\nPayment pointers resolve to secure URLs, making it possible for WM receivers to redirect browsers to alternate addresses using standard HTTP redirects.\n\nOne benefit of payment pointers is that they provide a level of indirection that allows browsers to protect the privacy of users from their WM senders. Specifically, a browser uses a pointer to request a unique destination address and shared secret from the website's WM receiver. Only the unique destination address for the session is given to the WM sender. This prevents the WM sender from correlating a payment pointer with a website.\n"
      },
      "date": 1630088325880
    },
    {
      "type": "add",
      "id": "0a0907efdc66547b",
      "item": {
        "type": "markdown",
        "id": "0a0907efdc66547b",
        "text": "# Receiving payments\nAny entity that is able to accept payments on behalf of websites can be a WM receiver if it supports the necessary protocols. To accept a stream of payments on behalf of its users, a WM receiver MUST support the following protocols from the Interledger stack:\n"
      },
      "after": "b341767af5592e9d",
      "date": 1630088327520
    },
    {
      "type": "edit",
      "id": "b341767af5592e9d",
      "item": {
        "type": "markdown",
        "id": "b341767af5592e9d",
        "text": "# Web Monetization Receivers\nThis page describes the functions of the Web Monetization (WM) receiver and how existing payment services might become a WM receiver.\n"
      },
      "date": 1630088331448
    },
    {
      "type": "add",
      "id": "7a46703d7cd7d678",
      "item": {
        "type": "markdown",
        "id": "7a46703d7cd7d678",
        "text": "\nA WM receiver is a digital entity that accepts payments over Interledger on behalf of a website and is capable of receiving micropayments.\n"
      },
      "after": "b341767af5592e9d",
      "date": 1630088333478
    },
    {
      "type": "add",
      "id": "5d99a336f076ab42",
      "item": {
        "type": "markdown",
        "id": "5d99a336f076ab42",
        "text": "\nWhen a user has Web Monetization enabled in their browser and they visit a monetized website, the browser resolves a unique receiving address for sending payments to the website's WM receiver. The browser then begins sending payments through the user's WM sender.\n"
      },
      "after": "7a46703d7cd7d678",
      "date": 1630088335769
    },
    {
      "type": "add",
      "id": "9b4a33b3922fc843",
      "item": {
        "type": "markdown",
        "id": "9b4a33b3922fc843",
        "text": "\n# Payment pointers\n"
      },
      "after": "5d99a336f076ab42",
      "date": 1630088345178
    },
    {
      "type": "add",
      "id": "523e31b978cc5a11",
      "item": {
        "type": "markdown",
        "id": "523e31b978cc5a11",
        "text": "A payment pointer is a unique URL assigned to your payment account by your WM receiver.\n"
      },
      "after": "9b4a33b3922fc843",
      "date": 1630088346918
    },
    {
      "type": "add",
      "id": "157225408d558f18",
      "item": {
        "type": "markdown",
        "id": "157225408d558f18",
        "text": "\nThe expectation is that a WM receiver will issue one or more payment pointers to its customers and these customers will embed the pointer into the websites they want to monetize. The user's browser then fetches connection details from the pointer to open a payment stream with the WM receiver.\n"
      },
      "after": "523e31b978cc5a11",
      "date": 1630088348531
    },
    {
      "type": "add",
      "id": "7b89518c3e62fb2e",
      "item": {
        "type": "markdown",
        "id": "7b89518c3e62fb2e",
        "text": "\nPayment pointers resolve to secure URLs, making it possible for WM receivers to redirect browsers to alternate addresses using standard HTTP redirects.\n"
      },
      "after": "157225408d558f18",
      "date": 1630088350799
    },
    {
      "type": "add",
      "id": "7cd1bb1c35d2d8a8",
      "item": {
        "type": "markdown",
        "id": "7cd1bb1c35d2d8a8",
        "text": "\nOne benefit of payment pointers is that they provide a level of indirection that allows browsers to protect the privacy of users from their WM senders. Specifically, a browser uses a pointer to request a unique destination address and shared secret from the website's WM receiver. Only the unique destination address for the session is given to the WM sender. This prevents the WM sender from correlating a payment pointer with a website.\n"
      },
      "after": "7b89518c3e62fb2e",
      "date": 1630088351653
    },
    {
      "type": "edit",
      "id": "b341767af5592e9d",
      "item": {
        "type": "markdown",
        "id": "b341767af5592e9d",
        "text": "Web Monetization (WM) is a proposed API standard that allows websites to request a stream of very small payments (e.g. fractions of a cent) from a user.\n\nThe API's framework provides new revenue models for websites and web-based services and is an alternative to subscription services and advertising, all while preserving the user's privacy.\n\nIn exchange for payments from the user, websites can provide the user with a \"premium\" experience, such as allowing access to exclusive content, removing advertising, or even removing the need to log in to access content or services.\n"
      },
      "date": 1630088377923
    },
    {
      "type": "add",
      "id": "c9a28b5a09819207",
      "item": {
        "type": "markdown",
        "id": "c9a28b5a09819207",
        "text": "# Web Monetization Receivers\n"
      },
      "after": "b341767af5592e9d",
      "date": 1630088386047
    },
    {
      "type": "add",
      "id": "55f5678e6fb63c55",
      "item": {
        "type": "markdown",
        "id": "55f5678e6fb63c55",
        "text": "This page describes the functions of the Web Monetization (WM) receiver and how existing payment services might become a WM receiver.\n"
      },
      "after": "c9a28b5a09819207",
      "date": 1630088386454
    },
    {
      "id": "040db601-3d74-4bb5-8300-d19f569bc1f3",
      "type": "add",
      "item": {
        "id": "040db601-3d74-4bb5-8300-d19f569bc1f3",
        "type": "markdown",
        "text": "To speak about web monetization is to speak about web advertising and user data. When accessing free content you are handing your personal data or getting bombarded with ads. Most likely both. There are a few ways to monetize your content. Let's recap them:- [https://codeburst.io/web-monetization-api-a-new-web-monetization-alternative-eb72b5c58bd6 codeburst.io]"
      },
      "date": 1630088435261
    },
    {
      "id": "72ac1142-a6aa-40b2-a1cd-cb77dc383802",
      "type": "add",
      "item": {
        "id": "72ac1142-a6aa-40b2-a1cd-cb77dc383802",
        "type": "markdown",
        "text": "- Web Monetization API: A New Web Monetization Alternative- [https://codeburst.io/web-monetization-api-a-new-web-monetization-alternative-eb72b5c58bd6 codeburst.io]"
      },
      "after": "040db601-3d74-4bb5-8300-d19f569bc1f3",
      "date": 1630088438308
    },
    {
      "type": "fork",
      "site": "livecode.world",
      "date": 1630100247452
    }
  ]
}