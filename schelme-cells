{
  "title": "Schelme Cells",
  "story": [
    {
      "type": "paragraph",
      "id": "2d6119ab2b8d7cec",
      "text": "elm-sheet, schelme based spreadsheet. [https://github.com/bburdette/cellme github] by [[Ben Burdette]]"
    },
    {
      "type": "paragraph",
      "id": "f903ade4fedcd97c",
      "text": "Schelme cells, which are [[schelme]] programs that can refer to each other by id. Suitable for making schelme spreadsheets and such."
    },
    {
      "type": "paragraph",
      "id": "677dd3346a858192",
      "text": "Cellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are [[contain]]ed in a [[Container]] of some sort, 'cc'."
    },
    {
      "type": "paragraph",
      "id": "4aad68d0aed2e6e3",
      "text": "ArrayCellme implements Cellme where the cells are contained in a 2D array and have (Int,Int) ids.\n\nDictCellme implements Cellme where the cells are contained in a Dict and have String ids."
    },
    {
      "type": "paragraph",
      "id": "ae322c0a7e0cb914",
      "text": "Check out the live demos of both – demo source is in the examples dir."
    },
    {
      "type": "paragraph",
      "id": "64dfea2fbd86741c",
      "text": "2D array (spreadsheet) demo. [https://bburdette.github.io/cellme/arraycelldemo.html page]\n\nMarkdown demo. [https://bburdette.github.io/cellme/mdcelldemo.html page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Schelme Cells",
        "story": []
      },
      "date": 1696253746523
    },
    {
      "id": "2d6119ab2b8d7cec",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2d6119ab2b8d7cec",
        "text": "elm-sheet, schelme based spreadsheet. [https://github.com/bburdette/cellme github] by [[Ben Burdette]]"
      },
      "attribution": {
        "page": "2023-10-02"
      },
      "date": 1696253750418
    },
    {
      "item": {
        "type": "factory",
        "id": "f903ade4fedcd97c"
      },
      "id": "f903ade4fedcd97c",
      "type": "add",
      "after": "2d6119ab2b8d7cec",
      "date": 1696253777626
    },
    {
      "type": "edit",
      "id": "f903ade4fedcd97c",
      "item": {
        "type": "paragraph",
        "id": "f903ade4fedcd97c",
        "text": "Schelme cells, which are schelme programs that can refer to each other by id. Suitable for making schelme spreadsheets and such.\n\nCellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are contained in a container of some sort, 'cc'.\n\nArrayCellme implements Cellme where the cells are contained in a 2D array and have (Int,Int) ids.\n\nDictCellme implements Cellme where the cells are contained in a Dict and have String ids.\n\nCheck out the live demos of both - demo source is in the examples dir.\n\n2D array (spreadsheet) demo.\n\nMarkdown demo."
      },
      "date": 1696253778898
    },
    {
      "type": "edit",
      "id": "f903ade4fedcd97c",
      "item": {
        "type": "paragraph",
        "id": "f903ade4fedcd97c",
        "text": "Schelme cells, which are [[schelme]] programs that can refer to each other by id. Suitable for making schelme spreadsheets and such."
      },
      "date": 1696253794217
    },
    {
      "type": "add",
      "id": "677dd3346a858192",
      "item": {
        "type": "paragraph",
        "id": "677dd3346a858192",
        "text": "Cellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are contained in a container of some sort, 'cc'.\n\nArrayCellme implements Cellme where the cells are contained in a 2D array and have (Int,Int) ids.\n\nDictCellme implements Cellme where the cells are contained in a Dict and have String ids.\n\nCheck out the live demos of both - demo source is in the examples dir.\n\n2D array (spreadsheet) demo.\n\nMarkdown demo."
      },
      "after": "f903ade4fedcd97c",
      "date": 1696253795317
    },
    {
      "type": "edit",
      "id": "677dd3346a858192",
      "item": {
        "type": "paragraph",
        "id": "677dd3346a858192",
        "text": "Cellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are contained in a container of some sort, 'cc'.\n\nArrayCellme implements Cellme where the cells are contained in a 2D array and have (Int,Int) ids.\n\nDictCellme implements Cellme where the cells are contained in a Dict and have String ids."
      },
      "date": 1696255232793
    },
    {
      "type": "add",
      "id": "ae322c0a7e0cb914",
      "item": {
        "type": "paragraph",
        "id": "ae322c0a7e0cb914",
        "text": "Check out the live demos of both – demo source is in the examples dir."
      },
      "after": "677dd3346a858192",
      "date": 1696255237582
    },
    {
      "type": "add",
      "id": "64dfea2fbd86741c",
      "item": {
        "type": "paragraph",
        "id": "64dfea2fbd86741c",
        "text": "2D array (spreadsheet) demo.\n\nMarkdown demo."
      },
      "after": "ae322c0a7e0cb914",
      "date": 1696255238551
    },
    {
      "type": "edit",
      "id": "64dfea2fbd86741c",
      "item": {
        "type": "paragraph",
        "id": "64dfea2fbd86741c",
        "text": "2D array (spreadsheet) demo. [https://bburdette.github.io/cellme/arraycelldemo.html page]\n\nMarkdown demo."
      },
      "date": 1696255260531
    },
    {
      "type": "edit",
      "id": "64dfea2fbd86741c",
      "item": {
        "type": "paragraph",
        "id": "64dfea2fbd86741c",
        "text": "2D array (spreadsheet) demo. [https://bburdette.github.io/cellme/arraycelldemo.html page]\n\nMarkdown demo. [https://bburdette.github.io/cellme/mdcelldemo.html page]"
      },
      "date": 1696255285070
    },
    {
      "type": "edit",
      "id": "677dd3346a858192",
      "item": {
        "type": "paragraph",
        "id": "677dd3346a858192",
        "text": "Cellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are [[contain]]ed in a container of some sort, 'cc'."
      },
      "date": 1696255348603
    },
    {
      "type": "add",
      "id": "4aad68d0aed2e6e3",
      "item": {
        "type": "paragraph",
        "id": "4aad68d0aed2e6e3",
        "text": "ArrayCellme implements Cellme where the cells are contained in a 2D array and have (Int,Int) ids.\n\nDictCellme implements Cellme where the cells are contained in a Dict and have String ids."
      },
      "after": "677dd3346a858192",
      "date": 1696255351427
    },
    {
      "type": "edit",
      "id": "677dd3346a858192",
      "item": {
        "type": "paragraph",
        "id": "677dd3346a858192",
        "text": "Cellme.Cellme is an abstraction for cells that can refer to each other by some 'id', and are [[contain]]ed in a [[Container]] of some sort, 'cc'."
      },
      "date": 1696255362771
    }
  ]
}