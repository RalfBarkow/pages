{
  "title": "Promise Pages for Links",
  "story": [
    {
      "type": "paragraph",
      "id": "4e3b46f0c1ce4b46",
      "text": "See [[Dynamic Diagrams Improved]]"
    },
    {
      "type": "html",
      "id": "90a4d961d88531fd",
      "text": "<img width=70% src=https://matrix.org/_matrix/media/v1/thumbnail/matrix.org/kuAbBIaVgPWEHTUyGtqGLDpV?width=800&height=600>"
    },
    {
      "type": "paragraph",
      "id": "192bc9d8eb299702",
      "text": "A [[Context]] object holds what we know about a link. We make a new context for every link we follow. The old code (red) would start a GET request and then wait for that to finish. The new code (green) first checks to see if we have already started that request and if not, falls back to the old logic.\n\n"
    },
    {
      "type": "paragraph",
      "id": "36f89b03385478d2",
      "text": "This logic is part of the HERE keyword. Think of it as saying, now that we are finally here, let's look closely at this page.\n\n"
    },
    {
      "type": "paragraph",
      "id": "0f510ec84d278c9a",
      "text": "There is a corresponding small modification to the LINKS keyword. Think of it as rummaging through the links on a page and choosing some to follow. Most (but not all) context objects are created by LINKS. Now we slip into these context objects a partially completed GET request to be finished when only when needed."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Promise Pages for Links",
        "story": []
      },
      "date": 1553609491880
    },
    {
      "item": {
        "type": "factory",
        "id": "e4b92316486910c8"
      },
      "id": "e4b92316486910c8",
      "type": "add",
      "date": 1553609531098
    },
    {
      "type": "edit",
      "id": "e4b92316486910c8",
      "item": {
        "type": "paragraph",
        "id": "e4b92316486910c8",
        "text": "Browsing works as well as it does because the browser overlaps many requests. This turns out to be especially true for the dynamic diagrams recently added via algorithmic markup in Graphviz plugin. Our goal has always been to explore a region of the wiki by following all of the links on a page at once. I've now enabled this mechanism with a deceptively small code change."
      },
      "date": 1553609549895
    },
    {
      "type": "add",
      "id": "4e3b46f0c1ce4b46",
      "item": {
        "type": "paragraph",
        "id": "4e3b46f0c1ce4b46",
        "text": "See [[Dynamic Diagrams Improved]]"
      },
      "after": "e4b92316486910c8",
      "date": 1553609562982
    },
    {
      "item": {
        "type": "factory",
        "id": "90a4d961d88531fd"
      },
      "id": "90a4d961d88531fd",
      "type": "add",
      "after": "4e3b46f0c1ce4b46",
      "date": 1553609643377
    },
    {
      "type": "edit",
      "id": "90a4d961d88531fd",
      "item": {
        "type": "html",
        "id": "90a4d961d88531fd",
        "text": "<center><img width=80% src=https://matrix.org/_matrix/media/v1/thumbnail/matrix.org/kuAbBIaVgPWEHTUyGtqGLDpV?width=800&height=600></center>"
      },
      "date": 1553609679156
    },
    {
      "type": "edit",
      "id": "90a4d961d88531fd",
      "item": {
        "type": "html",
        "id": "90a4d961d88531fd",
        "text": "<img width=80% src=https://matrix.org/_matrix/media/v1/thumbnail/matrix.org/kuAbBIaVgPWEHTUyGtqGLDpV?width=800&height=600>"
      },
      "date": 1553609697394
    },
    {
      "type": "edit",
      "id": "90a4d961d88531fd",
      "item": {
        "type": "html",
        "id": "90a4d961d88531fd",
        "text": "<img width=70% src=https://matrix.org/_matrix/media/v1/thumbnail/matrix.org/kuAbBIaVgPWEHTUyGtqGLDpV?width=800&height=600>"
      },
      "date": 1553609707698
    },
    {
      "item": {
        "type": "factory",
        "id": "192bc9d8eb299702"
      },
      "id": "192bc9d8eb299702",
      "type": "add",
      "after": "90a4d961d88531fd",
      "date": 1553609770138
    },
    {
      "type": "edit",
      "id": "192bc9d8eb299702",
      "item": {
        "type": "paragraph",
        "id": "192bc9d8eb299702",
        "text": "A context object holds what we know about a link. We make a new context for every link we follow. The old code (red) would start a GET request and then wait for that to finish. The new code (green) first checks to see if we have already started that request and if not, falls back to the old logic.\n\n"
      },
      "date": 1553609777480
    },
    {
      "type": "add",
      "id": "36f89b03385478d2",
      "item": {
        "type": "paragraph",
        "id": "36f89b03385478d2",
        "text": "This logic is part of the HERE keyword. Think of it as saying, now that we are finally here, let's look closely at this page.\n\n"
      },
      "after": "192bc9d8eb299702",
      "date": 1553609780960
    },
    {
      "type": "add",
      "id": "0f510ec84d278c9a",
      "item": {
        "type": "paragraph",
        "id": "0f510ec84d278c9a",
        "text": "There is a corresponding small modification to the LINKS keyword. Think of it as rummaging through the links on a page and choosing some to follow. Most (but not all) context objects are created by LINKS. Now we slip into these context objects a partially completed GET request to be finished when only when needed."
      },
      "after": "36f89b03385478d2",
      "date": 1553609786751
    },
    {
      "type": "edit",
      "id": "e4b92316486910c8",
      "item": {
        "type": "paragraph",
        "id": "e4b92316486910c8",
        "text": "Browsing works as well as it does because the browser overlaps many requests. This turns out to be especially true for the dynamic diagrams recently added via algorithmic markup in Graphviz plugin. Our goal has always been to explore a region of the wiki by following all of the links on a page at once. We've now enabled this mechanism with a deceptively small code change."
      },
      "date": 1553610454236
    },
    {
      "type": "fork",
      "site": "ward.asia.wiki.org",
      "date": 1638309039490
    },
    {
      "type": "edit",
      "id": "e4b92316486910c8",
      "item": {
        "type": "paragraph",
        "id": "e4b92316486910c8",
        "text": "Browsing works as well as it does because the browser overlaps many requests. This turns out to be especially true for the dynamic diagrams recently added via [[algorithmic markup]] in [[Graphviz plugin]]. Our goal has always been to explore a region of the wiki by following all of the links on a page at once. We've now enabled this mechanism with a deceptively small code change."
      },
      "date": 1651310985098
    },
    {
      "type": "edit",
      "id": "192bc9d8eb299702",
      "item": {
        "type": "paragraph",
        "id": "192bc9d8eb299702",
        "text": "A [[context]] object holds what we know about a link. We make a new context for every link we follow. The old code (red) would start a GET request and then wait for that to finish. The new code (green) first checks to see if we have already started that request and if not, falls back to the old logic.\n\n"
      },
      "date": 1675260385895
    },
    {
      "type": "edit",
      "id": "e4b92316486910c8",
      "item": {
        "type": "paragraph",
        "id": "e4b92316486910c8",
        "text": "Browsing works as well as it does because the browser overlaps many requests. This turns out to be especially true for the dynamic diagrams recently added via [[Algorithmic Markup]] in [[Graphviz plugin]]. Our goal has always been to explore a region of the wiki by following all of the links on a page at once. We've now enabled this mechanism with a deceptively small code change."
      },
      "date": 1675879079566
    },
    {
      "id": "e4b92316486910c8",
      "type": "remove",
      "removedTo": {
        "page": "explore"
      },
      "date": 1708266255089
    },
    {
      "type": "edit",
      "id": "192bc9d8eb299702",
      "item": {
        "type": "paragraph",
        "id": "192bc9d8eb299702",
        "text": "A [[Context]] object holds what we know about a link. We make a new context for every link we follow. The old code (red) would start a GET request and then wait for that to finish. The new code (green) first checks to see if we have already started that request and if not, falls back to the old logic.\n\n"
      },
      "date": 1708266307350
    }
  ]
}