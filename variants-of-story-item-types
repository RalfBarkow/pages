{
  "title": "Variants of Story Item Types",
  "story": [
    {
      "type": "paragraph",
      "id": "5c3432e3e2aab6ae",
      "text": "Context: [[Render Story]] and [[Paul Rodwell]]'s page"
    },
    {
      "type": "reference",
      "id": "6dd45d5a8b8a07df",
      "site": "goals.pod.rodwell.me",
      "slug": "items-based-on-content-type",
      "title": "Items based on Content Type",
      "text": "Creating different […] item types, and plugins, based on how an item is edited rather what the content is, is the road to needless complexity. "
    },
    {
      "type": "markdown",
      "id": "2b120d2b02b321a0",
      "text": "> There are already a number of variants of the 'text' […] item. With the original 'paragraph' item having been joined by 'html', 'markdown' and at least one other wiki markup (that is known about)."
    },
    {
      "type": "markdown",
      "id": "3919205e80640e9b",
      "text": "## A Better Approach"
    },
    {
      "type": "paragraph",
      "id": "a91034609ba52dc4",
      "text": "For text items it would be better to have a single item type – the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor."
    },
    {
      "type": "paragraph",
      "id": "4747c8295f454774",
      "text": "So our maybe new function unknownStoryItemType not only has to do with the unknown future.type_, but could also take care of the unknown paragraph.type_. It adds this unknown story item type as an alias for the paragraph type. Add it to the list of story item types to be treated as a paragraph."
    },
    {
      "type": "pagefold",
      "id": "77a1e14cdf3bf5f9",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "9625edea215fc6ab",
      "site": "wiki.ralfbarkow.ch",
      "slug": "container-types",
      "title": "Container Types",
      "text": "[[James Algebra]] uses three distinct types of [[Container]]s to express numeric and non-numeric structure."
    },
    {
      "type": "reference",
      "id": "50c59403d47cffef",
      "site": "goals.pod.rodwell.me",
      "slug": "do-internal-link",
      "title": "Do Internal Link",
      "text": "The wiki global offers plugins an implementation of [[Collaborative Link]] called doInternalLink."
    },
    {
      "type": "markdown",
      "id": "2547d4a9f4a54b0e",
      "text": "> Refresh.coffee assembles a pageInfo structure and then calls pageHandler's get function with success and fail callbacks. [https://github.com/fedwiki/wiki-client/blob/9ab91291c067bf09f77ba3d51dd3c8e7549b4bfd/lib/refresh.coffee#L451 github]"
    },
    {
      "type": "paragraph",
      "id": "1774ada0cb139c34",
      "text": "newFuturePage [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/refresh.coffee#L428 code] checks if a page with a given title already exists in the neighborhood's sites and provides appropriate messages or actions based on the outcome. (ChatGPT August 3 Version)"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Variants of Story Item Types",
        "story": []
      },
      "date": 1694273088303
    },
    {
      "item": {
        "type": "factory",
        "id": "5c3432e3e2aab6ae"
      },
      "id": "5c3432e3e2aab6ae",
      "type": "add",
      "date": 1694273089814
    },
    {
      "type": "edit",
      "id": "5c3432e3e2aab6ae",
      "item": {
        "type": "paragraph",
        "id": "5c3432e3e2aab6ae",
        "text": "Context:"
      },
      "date": 1694273097178
    },
    {
      "id": "6dd45d5a8b8a07df",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "6dd45d5a8b8a07df",
        "site": "goals.pod.rodwell.me",
        "slug": "items-based-on-content-type",
        "title": "Items based on Content Type",
        "text": "Creating different […] item types, and plugins, based on how an item is edited rather what the content is, is the road to needless complexity. "
      },
      "after": "5c3432e3e2aab6ae",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273110476
    },
    {
      "type": "edit",
      "id": "5c3432e3e2aab6ae",
      "item": {
        "type": "paragraph",
        "id": "5c3432e3e2aab6ae",
        "text": "Context: [[Render Story]] and"
      },
      "date": 1694273111746
    },
    {
      "id": "2b120d2b02b321a0",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2b120d2b02b321a0",
        "text": "> There are already a number of variants of the 'text' […] item. With the original 'paragraph' item having been joined by 'html', 'markdown' and at least one other wiki markup (that is known about)."
      },
      "after": "6dd45d5a8b8a07df",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273118871
    },
    {
      "id": "3919205e80640e9b",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "3919205e80640e9b",
        "text": "## A Better Approach"
      },
      "after": "2b120d2b02b321a0",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273123555
    },
    {
      "id": "a91034609ba52dc4",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a91034609ba52dc4",
        "text": "For text items it would be better to have a single item type – the text would be stored with standard way (a minimal HTML subset is suggested, so standard libraries can be used). The user should be able to select the type of mark-up they prefer to use, and be presented with an appropriate editor."
      },
      "after": "3919205e80640e9b",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273131791
    },
    {
      "id": "4747c8295f454774",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "4747c8295f454774",
        "text": "So our maybe new function unknownStoryItemType not only has to do with the unknown future.type_, but could also take care of the unknown paragraph.type_. It adds this unknown story item type as an alias for the paragraph type. Add it to the list of story element types to be treated as a paragraph."
      },
      "after": "a91034609ba52dc4",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273138073
    },
    {
      "type": "edit",
      "id": "5c3432e3e2aab6ae",
      "item": {
        "type": "paragraph",
        "id": "5c3432e3e2aab6ae",
        "text": "Context: [[Render Story]] and [[Paul Rodwell]]'s"
      },
      "date": 1694273181077
    },
    {
      "type": "edit",
      "id": "5c3432e3e2aab6ae",
      "item": {
        "type": "paragraph",
        "id": "5c3432e3e2aab6ae",
        "text": "Context: [[Render Story]] and [[Paul Rodwell]]'s page:"
      },
      "date": 1694273204216
    },
    {
      "type": "edit",
      "id": "5c3432e3e2aab6ae",
      "item": {
        "type": "paragraph",
        "id": "5c3432e3e2aab6ae",
        "text": "Context: [[Render Story]] and [[Paul Rodwell]]'s page"
      },
      "date": 1694273209285
    },
    {
      "item": {
        "type": "factory",
        "id": "77a1e14cdf3bf5f9"
      },
      "id": "77a1e14cdf3bf5f9",
      "type": "add",
      "after": "4747c8295f454774",
      "date": 1694273236572
    },
    {
      "type": "edit",
      "id": "77a1e14cdf3bf5f9",
      "item": {
        "type": "pagefold",
        "id": "77a1e14cdf3bf5f9",
        "text": "~"
      },
      "date": 1694273240121
    },
    {
      "item": {
        "type": "factory",
        "id": "9625edea215fc6ab"
      },
      "id": "9625edea215fc6ab",
      "type": "add",
      "after": "77a1e14cdf3bf5f9",
      "date": 1694273254385
    },
    {
      "type": "edit",
      "id": "9625edea215fc6ab",
      "item": {
        "type": "reference",
        "id": "9625edea215fc6ab",
        "site": "wiki.ralfbarkow.ch",
        "slug": "container-types",
        "title": "Container Types",
        "text": "[[James Algebra]] uses three distinct types of [[Container]]s to express numeric and non-numeric structure."
      },
      "date": 1694273256317
    },
    {
      "id": "50c59403d47cffef",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "50c59403d47cffef",
        "site": "goals.pod.rodwell.me",
        "slug": "do-internal-link",
        "title": "Do Internal Link",
        "text": "The wiki global offers plugins an implementation of [[Collaborative Link]] called doInternalLink."
      },
      "after": "9625edea215fc6ab",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273283623
    },
    {
      "id": "2547d4a9f4a54b0e",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "2547d4a9f4a54b0e",
        "text": "> Refresh.coffee assembles a pageInfo structure and then calls pageHandler's get function with success and fail callbacks. [https://github.com/fedwiki/wiki-client/blob/9ab91291c067bf09f77ba3d51dd3c8e7549b4bfd/lib/refresh.coffee#L451 github]"
      },
      "after": "50c59403d47cffef",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273290083
    },
    {
      "id": "1774ada0cb139c34",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "1774ada0cb139c34",
        "text": "newFuturePage [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/refresh.coffee#L428 code]"
      },
      "after": "2547d4a9f4a54b0e",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273300389
    },
    {
      "id": "3937a8c6d5650a77",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3937a8c6d5650a77",
        "text": "This function seems to be part of a larger system for managing wiki-like pages, where it checks if a page with a given title already exists in the neighborhood's sites and provides appropriate messages or actions based on the outcome. (ChatGPT August 3 Version)"
      },
      "after": "1774ada0cb139c34",
      "attribution": {
        "page": "2023-09-09"
      },
      "date": 1694273338745
    },
    {
      "type": "remove",
      "id": "3937a8c6d5650a77",
      "date": 1694273356072
    },
    {
      "type": "edit",
      "id": "1774ada0cb139c34",
      "item": {
        "type": "paragraph",
        "id": "1774ada0cb139c34",
        "text": "newFuturePage [https://github.com/fedwiki/wiki-client/blob/c892b0dd0c5efb593a4eed8833266b047571fbeb/lib/refresh.coffee#L428 code] checks if a page with a given title already exists in the neighborhood's sites and provides appropriate messages or actions based on the outcome. (ChatGPT August 3 Version)"
      },
      "date": 1694273357068
    },
    {
      "type": "edit",
      "id": "4747c8295f454774",
      "item": {
        "type": "paragraph",
        "id": "4747c8295f454774",
        "text": "So our maybe new function unknownStoryItemType not only has to do with the unknown future.type_, but could also take care of the unknown paragraph.type_. It adds this unknown story item type as an alias for the paragraph type. Add it to the list of story item types to be treated as a paragraph."
      },
      "date": 1694273586064
    }
  ]
}