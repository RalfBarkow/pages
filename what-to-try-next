{
  "title": "What to Try Next",
  "story": [
    {
      "type": "code",
      "id": "af214a97662cb84c",
      "text": "category: \"building\",\ntags: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\""
    },
    {
      "type": "paragraph",
      "id": "9a4edbc4bf733f3b",
      "text": "We have been writing in html files and then uploading them. We're also careful to repeat the boilerplate like the <head> elements. And, just now, we've shown we've got to escape text same as we do in the Paragraph plugin."
    },
    {
      "type": "markdown",
      "id": "0524c4a89722fa60",
      "text": "# Plan"
    },
    {
      "type": "paragraph",
      "id": "31a783d886bcb12b",
      "text": "First transcribe the two articles we've written into wiki pages as we wish we had written them."
    },
    {
      "type": "paragraph",
      "id": "68f2d794b9a693a5",
      "text": "Then write a page-json to html script and add it to the bottom of every article page. We'll download to upload to article assets on the [[Compose and Publish]] page. Maybe we use Template Literals to systemitize our html generation. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
    },
    {
      "type": "frame",
      "id": "3a3ff65ddc4dbdd8",
      "text": "http://blog.ward.dojo.fed.wiki/assets/pages/compose-and-publish/compose.html\nHEIGHT 0"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "What to Try Next",
        "story": []
      },
      "date": 1683423138457
    },
    {
      "item": {
        "type": "factory",
        "id": "9a4edbc4bf733f3b"
      },
      "id": "9a4edbc4bf733f3b",
      "type": "add",
      "date": 1683423149393
    },
    {
      "type": "edit",
      "id": "9a4edbc4bf733f3b",
      "item": {
        "type": "paragraph",
        "id": "9a4edbc4bf733f3b",
        "text": "We have been writing in html files and then uploading them. We're also careful to repeat the boilerplate like the <head> elements. And, just now, we've shown we've got to escape text same as we do in the Paragraph plugin."
      },
      "date": 1683423183291
    },
    {
      "item": {
        "type": "factory",
        "id": "0524c4a89722fa60"
      },
      "id": "0524c4a89722fa60",
      "type": "add",
      "after": "9a4edbc4bf733f3b",
      "date": 1683423201106
    },
    {
      "type": "edit",
      "id": "0524c4a89722fa60",
      "item": {
        "type": "markdown",
        "id": "0524c4a89722fa60",
        "text": "# Plan"
      },
      "date": 1683423209788
    },
    {
      "item": {
        "type": "factory",
        "id": "31a783d886bcb12b"
      },
      "id": "31a783d886bcb12b",
      "type": "add",
      "after": "0524c4a89722fa60",
      "date": 1683423222837
    },
    {
      "type": "edit",
      "id": "31a783d886bcb12b",
      "item": {
        "type": "paragraph",
        "id": "31a783d886bcb12b",
        "text": "First transcribe the two articles we've written into wiki pages as we wish we had written them."
      },
      "date": 1683423226807
    },
    {
      "type": "add",
      "id": "68f2d794b9a693a5",
      "item": {
        "type": "paragraph",
        "id": "68f2d794b9a693a5",
        "text": "Then write a page-json to html script and add it to the bottom of every article page. We'll download to upload to article assets on the [[Compose and Publish]] page. Maybe we use Template Literals to systemitize our html generation. [https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals mdn]"
      },
      "after": "31a783d886bcb12b",
      "date": 1683423277986
    },
    {
      "id": "3a3ff65ddc4dbdd8",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "3a3ff65ddc4dbdd8",
        "text": "http://blog.ward.dojo.fed.wiki/assets/pages/compose-and-publish/compose.html\nHEIGHT 0"
      },
      "after": "68f2d794b9a693a5",
      "attribution": {
        "page": "How We Begin"
      },
      "date": 1684594687989
    },
    {
      "item": {
        "type": "factory",
        "id": "af214a97662cb84c"
      },
      "id": "af214a97662cb84c",
      "type": "add",
      "after": "3a3ff65ddc4dbdd8",
      "date": 1684594729202
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "layout: 7"
      },
      "date": 1684594744637
    },
    {
      "id": "af214a97662cb84c",
      "type": "move",
      "order": [
        "af214a97662cb84c",
        "9a4edbc4bf733f3b",
        "0524c4a89722fa60",
        "31a783d886bcb12b",
        "68f2d794b9a693a5",
        "3a3ff65ddc4dbdd8"
      ],
      "date": 1684594748212
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntags: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595037598
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntagsx: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595056624
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntags: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595066948
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntagsx: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595074452
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntags: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595093843
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\"\ntagsx: \"new fast fun\"\ndate: \"May 20, 2023\"\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595174279
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\",\ntagsx: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595236883
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "{category: \"building\",\ntagsx: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\"}"
      },
      "date": 1684595245082
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "{\ncategory: \"building\",\ntagsx: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\"\n}"
      },
      "date": 1684595261690
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "{\ncategory: \"building\",\ntags: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\"\n}"
      },
      "date": 1684595272359
    },
    {
      "type": "edit",
      "id": "af214a97662cb84c",
      "item": {
        "type": "code",
        "id": "af214a97662cb84c",
        "text": "category: \"building\",\ntags: \"new fast fun\",\ndate: \"May 20, 2023\",\ntitle: \"We ask What to Try Next\""
      },
      "date": 1684595295533
    },
    {
      "type": "fork",
      "site": "blog.ward.dojo.fed.wiki",
      "date": 1684919070786
    }
  ]
}