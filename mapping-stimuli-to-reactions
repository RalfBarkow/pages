{
  "title": "Mapping Stimuli to Reactions",
  "story": [
    {
      "type": "paragraph",
      "id": "bcdd7d6a96968169",
      "text": "Assuming our eyes are working properly, we will have our raw perceptions sorted into nice looking hash buckets. But what to do with these now?"
    },
    {
      "type": "paragraph",
      "id": "b042b0843e6401e6",
      "text": "First, we should consider how come the hash buckets exist in the first place. This is so that we explicitly describe what gives them a reason to come into being, because the buckets are the distinctions drawn as a result of having some intention."
    },
    {
      "type": "paragraph",
      "id": "c22ed7e4657c130d",
      "text": "Some intentions are about using the incoming connection of our interfaces, such as “distinguish all the pieces of equipment in my home office”. Some others, however, require using the outgoing portion of our interfaces, for example: “look up a friend’s phone number and call”."
    },
    {
      "type": "paragraph",
      "id": "46848af59b167840",
      "text": "Intention induces relationships between the hash buckets corresponding to the things we perceive, and the things we know how to do. The map is built so that, after a period of training, we can quickly select the actions that we predict will satisfy our requirements with high probability. Of course, the things to do themselves are sorted into hash buckets as well."
    },
    {
      "type": "paragraph",
      "id": "71743c99b48a070b",
      "text": "Thus, in the same way that the 3x + 1 problem implied a behavior map in the integers, the space of distinctions observed as hash buckets according to our intentions needs to be mapped into the space of hash buckets corresponding to things to do. The problem is now how to choose the map wisely so that the feedback cycle of this mapping application converges to an attractor that has the emergent properties that satisfy our intentions."
    },
    {
      "type": "paragraph",
      "id": "c99fc3a0e447f0f7",
      "text": "This can be difficult for two reasons. If we see ourselves, together with the two hash bucket spaces, embedded into a space that has time as one of its dimensions, our first problem is that it is frequently impossible to have full knowledge of our position in this space because our presence affects it too much. But even when we achieve a reasonable degree of clarity of observation, our hash buckets typically have limited resolution — and even then, they can only resolve a subset of the information space we live in. More concretely, there are only so many colors we can see, so many sounds we can hear, and in general there is only so much resolution with which we can perceive."
    },
    {
      "type": "paragraph",
      "id": "ed84b37d6c41e250",
      "text": "Because of this lack of precision, the things we decide to do are (most of the time) approximations made in the hope that the actual results will be close enough to what we predicted. It is truly amazing that we can do so much with so little. At the same time, this means we are bound to run into cases when our approximations will not be as good as we need them to be. What are we going to do about that?"
    },
    {
      "type": "paragraph",
      "id": "092bc9840cb49b43",
      "text": "Let’s be bold and take for granted that we are always going to have prediction error. Then, predicting too far out into the future will cause the prediction error to accumulate and grow quickly."
    },
    {
      "type": "paragraph",
      "id": "b8f2904373ca6a72",
      "text": "Note how this relates so well to numerical integration of differential equations! "
    },
    {
      "type": "paragraph",
      "id": "93a3a9e4caa1dc8a",
      "text": "The better our hash buckets model the actual process at hand, the smaller the prediction error will be. However, no matter how good our understanding of something is, there is always the risk that something we are not aware of is at play."
    },
    {
      "type": "paragraph",
      "id": "ced18e6769769747",
      "text": "Hence the huge market for risk management of all sorts."
    },
    {
      "type": "paragraph",
      "id": "da1665e805ed5663",
      "text": "It follows that, more than being able to make extremely good predictions about the future, what matters is the ability to make corrections and adjust the predictions on the fly as soon as prediction error is detected, together with moving in the information space in such a way that always leaves room to make such corrections. In this way, given some general direction in which we know we want to move towards in our information space, we should spend time making sure that no matter which path we are going down on, the prediction error is not leading us astray and the required precision of movement is not beyond our reach. In short, what we need to ensure is that our lack of precision does not end up moving us so far away from the attractor we want to reach that we end up moving into the influence zone (or basin) of an unwanted attractor instead."
    },
    {
      "type": "paragraph",
      "id": "5dd2ef6d4cea5970",
      "text": "If we allow our environment to be represented by a system of linear equations up to some degree of accuracy, then its attractors will be given by the eigenvalues and eigenvectors of the approximating matrix. Thus, all we need to do to let it converge is to make sure our prediction error is less powerful than the eigenvalues. If all we are looking for is our particular attractor, it does not even matter if the prediction error is comparatively large, because as long as it is bounded quick convergence to the eigenvectors is guaranteed. "
    },
    {
      "type": "paragraph",
      "id": "21ba06e9de44feaa",
      "text": "Moreover, note how we can draw a distinction between programming languages that are early bound and those that are late bound. Early binding assumes that developer predictions into the future are of an extraordinary, almost clairvoyant quality. This is especially so as soon as one accepts that things change all the time. As such, the cost of the associated correction that becomes necessary when it is found that the attractor is too far away rises accordingly so much so that success typically lies beyond reach."
    },
    {
      "type": "paragraph",
      "id": "b39f45ba5c3de319",
      "text": "Progress is defined in terms of the contraction of the possible solution space."
    },
    {
      "type": "paragraph",
      "id": "9fba748982c7c718",
      "text": "Let’s review a concrete example that illustrates how these mechanisms work. Basically, there are two ways in which one can write programs that play chess. On one hand, we have the brute force methodology which examines every single possible move up to some practical limit. On the other hand, we have algorithms which try to determine whether certain play combinations are worth examining further. In some cases, they may also decide whether to wait until the next turn and stop making decisions until new information is known. Today’s chess programs are somewhere between these two extremes."
    },
    {
      "type": "paragraph",
      "id": "411a1e466d2f7c1c",
      "text": "[…]"
    },
    {
      "type": "paragraph",
      "id": "9d83fc666aee428c",
      "text": "Going from chess back to our more abstract problem, how can we summarize what we learned from the discussion above? To put it succintly, the design of the map between hash buckets corresponding to perceived distinctions and hash buckets corresponding to actions to take depends heavily on the estimated quality of our predictions."
    },
    {
      "type": "paragraph",
      "id": "4ef0a2704719981a",
      "text": "If we think we can predict well over long periods of time, then naturally we should increase the resolution of the hash buckets to take advantage of this. However, we should keep in mind that high quality predictions have a tendency to take significant time to calculate. In some cases, the time lag between prediction computation and action can introduce enough prediction error to the point that the results of some or all of the effort spent deciding what to do become useless or counterproductive."
    },
    {
      "type": "paragraph",
      "id": "a5ba2cf788b9f5d1",
      "text": "If, on the other hand, we can only predict reasonably over short periods of time, we might as well lower the resolution of the hash buckets we are using. What is the point of spending a lot of energy coming up with a prediction that has less uncertainty than the known minimum prediction error? In these cases, it is more important to correct any deviations as quickly as possible, instead of trying to determine the best possible course of action. In other words, when predictions are known to be of limited quality, what we should do is to use a good enough prediction calculated efficiently together with a consistent error correction mechanism."
    },
    {
      "type": "paragraph",
      "id": "c7d17b8863bf54f6",
      "text": "Another case in which it can be beneficial to lower the hash bucket resolution is when we can show that coarse, comparatively cheap short term predictions produce results just as good as more expensive, longer term considerations. As a valuable side effect, this may also have the advantage of lowering the feedback cycle time lag without compromising the quality of the overall convergence of the behavior to its attractor, thus making it easier for it to react quickly to unexpected circumstances."
    },
    {
      "type": "paragraph",
      "id": "c23827c94bbc0cea",
      "text": "⇒ [[Choosing Which Benefit Function to Maximize]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Mapping Stimuli to Reactions",
        "story": []
      },
      "date": 1660229811883
    },
    {
      "item": {
        "type": "factory",
        "id": "bcdd7d6a96968169"
      },
      "id": "bcdd7d6a96968169",
      "type": "add",
      "date": 1660229813188
    },
    {
      "type": "edit",
      "id": "bcdd7d6a96968169",
      "item": {
        "type": "paragraph",
        "id": "bcdd7d6a96968169",
        "text": "Assuming our eyes are working properly, we will have our raw perceptions sorted into nice looking hash buckets. But what to do with these now?"
      },
      "date": 1660229814639
    },
    {
      "item": {
        "type": "factory",
        "id": "b042b0843e6401e6"
      },
      "id": "b042b0843e6401e6",
      "type": "add",
      "after": "bcdd7d6a96968169",
      "date": 1660229835398
    },
    {
      "type": "edit",
      "id": "b042b0843e6401e6",
      "item": {
        "type": "paragraph",
        "id": "b042b0843e6401e6",
        "text": "First, we should consider how come the hash buckets exist in the first place. This is so that we explicitly describe what gives them a reason to come into being, because the buckets are the distinctions drawn as a result of having some intention."
      },
      "date": 1660229837955
    },
    {
      "item": {
        "type": "factory",
        "id": "c22ed7e4657c130d"
      },
      "id": "c22ed7e4657c130d",
      "type": "add",
      "after": "b042b0843e6401e6",
      "date": 1660229855529
    },
    {
      "type": "edit",
      "id": "c22ed7e4657c130d",
      "item": {
        "type": "paragraph",
        "id": "c22ed7e4657c130d",
        "text": "Some intentions are about using the incoming connection of our interfaces, such as “distinguish all the pieces of equipment in my home office”. Some others, however, require using the outgoing portion of our interfaces, for example: “look up a friend’s phone number and call”."
      },
      "date": 1660229857535
    },
    {
      "item": {
        "type": "factory",
        "id": "46848af59b167840"
      },
      "id": "46848af59b167840",
      "type": "add",
      "after": "c22ed7e4657c130d",
      "date": 1660229865118
    },
    {
      "type": "edit",
      "id": "46848af59b167840",
      "item": {
        "type": "paragraph",
        "id": "46848af59b167840",
        "text": "Intention induces relationships between the hash buckets corresponding to the things we perceive, and the things we know how to do. The map is built so that, after a period of training, we can quickly select the actions that we predict will satisfy our requirements with high probability. Of course, the things to do themselves are sorted into hash buckets as well."
      },
      "date": 1660229867080
    },
    {
      "item": {
        "type": "factory",
        "id": "71743c99b48a070b"
      },
      "id": "71743c99b48a070b",
      "type": "add",
      "after": "46848af59b167840",
      "date": 1660229901550
    },
    {
      "type": "edit",
      "id": "71743c99b48a070b",
      "item": {
        "type": "paragraph",
        "id": "71743c99b48a070b",
        "text": "Thus, in the same way that the 3x + 1 problem implied a behavior map in the integers, the space of distinctions observed as hash buckets according to our intentions needs to be mapped into the space of hash buckets corresponding to things to do. The problem is now how to choose the map wisely so that the feedback cycle of this mapping application converges to an attractor that has the emergent properties that satisfy our intentions."
      },
      "date": 1660229915732
    },
    {
      "item": {
        "type": "factory",
        "id": "c99fc3a0e447f0f7"
      },
      "id": "c99fc3a0e447f0f7",
      "type": "add",
      "after": "71743c99b48a070b",
      "date": 1660229934124
    },
    {
      "type": "edit",
      "id": "c99fc3a0e447f0f7",
      "item": {
        "type": "paragraph",
        "id": "c99fc3a0e447f0f7",
        "text": "This can be difficult for two reasons. If we see ourselves, together with the two hash bucket spaces, embedded into a space that has time as one of its dimensions, our first problem is that it is frequently impossible to have full knowledge of our position in this space because our presence affects it too much. But even when we achieve a reasonable degree of clarity of observation, our hash buckets typically have limited resolution — and even then, they can only resolve a subset of the information space we live in. More concretely, there are only so many colors"
      },
      "date": 1660229936985
    },
    {
      "type": "edit",
      "id": "c99fc3a0e447f0f7",
      "item": {
        "type": "paragraph",
        "id": "c99fc3a0e447f0f7",
        "text": "This can be difficult for two reasons. If we see ourselves, together with the two hash bucket spaces, embedded into a space that has time as one of its dimensions, our first problem is that it is frequently impossible to have full knowledge of our position in this space because our presence affects it too much. But even when we achieve a reasonable degree of clarity of observation, our hash buckets typically have limited resolution — and even then, they can only resolve a subset of the information space we live in. More concretely, there are only so many colors we can see, so many sounds we can hear, and in general there is only so much resolution with which we can perceive."
      },
      "date": 1660229944546
    },
    {
      "item": {
        "type": "factory",
        "id": "ed84b37d6c41e250"
      },
      "id": "ed84b37d6c41e250",
      "type": "add",
      "after": "c99fc3a0e447f0f7",
      "date": 1660229955818
    },
    {
      "type": "edit",
      "id": "ed84b37d6c41e250",
      "item": {
        "type": "paragraph",
        "id": "ed84b37d6c41e250",
        "text": "Because of this lack of precision, the things we decide to do are (most of the time) approximations made in the hope that the actual results will be close enough to what we predicted. It is truly amazing that we can do so much with so little. At the same time, this means we are bound to run into cases when our approximations will not be as good as we need them to be. What are we going to do about that?"
      },
      "date": 1660229959980
    },
    {
      "item": {
        "type": "factory",
        "id": "092bc9840cb49b43"
      },
      "id": "092bc9840cb49b43",
      "type": "add",
      "after": "ed84b37d6c41e250",
      "date": 1660229981457
    },
    {
      "type": "edit",
      "id": "092bc9840cb49b43",
      "item": {
        "type": "paragraph",
        "id": "092bc9840cb49b43",
        "text": "Let’s be bold and take for granted that we are always going to have prediction error. Then, predicting too far out into the future will cause the prediction error to accumulate and grow quickly7. The better our hash buckets model the actual process at hand, the smaller the prediction error will be. However, no matter how good our understanding of something is, there is always the risk that something we are not aware of is at play8."
      },
      "date": 1660229986807
    },
    {
      "type": "edit",
      "id": "092bc9840cb49b43",
      "item": {
        "type": "paragraph",
        "id": "092bc9840cb49b43",
        "text": "Let’s be bold and take for granted that we are always going to have prediction error. Then, predicting too far out into the future will cause the prediction error to accumulate and grow quickly7. The better our hash buckets model the actual process at hand, the smaller the prediction error will be. However, no matter how good our understanding of something is, there is always the risk that something we are not aware of is at play."
      },
      "date": 1660229996080
    },
    {
      "type": "add",
      "id": "ced18e6769769747",
      "item": {
        "type": "paragraph",
        "id": "ced18e6769769747",
        "text": "Hence the huge market for risk management of all sorts."
      },
      "after": "092bc9840cb49b43",
      "date": 1660229999479
    },
    {
      "type": "add",
      "id": "da1665e805ed5663",
      "item": {
        "type": "paragraph",
        "id": "da1665e805ed5663",
        "text": "It follows that, more than being able to make extremely good predictions about the future, what matters is the ability to make corrections and adjust the predictions on the fly as soon as prediction error is detected, together with moving in the information space in such a way that always leaves room to make such corrections. In this way, given some general direction in which we know we want to move towards in our information space, we should spend time making sure that no matter which path we are going down on, the prediction error is not leading us astray and the required precision of movement is not beyond our reach. In short, what we need to ensure is that our lack of precision does not end up moving us so far away from the attractor we want to reach that we end up moving into the influence zone (or basin) of an unwanted attractor instead9."
      },
      "after": "ced18e6769769747",
      "date": 1660230010170
    },
    {
      "type": "edit",
      "id": "da1665e805ed5663",
      "item": {
        "type": "paragraph",
        "id": "da1665e805ed5663",
        "text": "It follows that, more than being able to make extremely good predictions about the future, what matters is the ability to make corrections and adjust the predictions on the fly as soon as prediction error is detected, together with moving in the information space in such a way that always leaves room to make such corrections. In this way, given some general direction in which we know we want to move towards in our information space, we should spend time making sure that no matter which path we are going down on, the prediction error is not leading us astray and the required precision of movement is not beyond our reach. In short, what we need to ensure is that our lack of precision does not end up moving us so far away from the attractor we want to reach that we end up moving into the influence zone (or basin) of an unwanted attractor instead."
      },
      "date": 1660230020617
    },
    {
      "type": "add",
      "id": "5dd2ef6d4cea5970",
      "item": {
        "type": "paragraph",
        "id": "5dd2ef6d4cea5970",
        "text": "If we allow our environment to be represented by a system of linear equations up to some degree of accuracy, then its attractors will be given by the eigenvalues and eigenvectors of the approximating matrix. Thus, all we need to do to let it converge is to make sure our prediction error is less powerful than the eigenvalues. If all we are looking for is our particular attractor, it does not even matter if the prediction error is comparatively large, because as long as it is bounded quick convergence to the eigenvectors is guaranteed. "
      },
      "after": "da1665e805ed5663",
      "date": 1660230033370
    },
    {
      "type": "add",
      "id": "21ba06e9de44feaa",
      "item": {
        "type": "paragraph",
        "id": "21ba06e9de44feaa",
        "text": "Moreover, note how we can draw a distinction between programming languages that are early bound and those that are late bound. Early binding assumes that developer predictions into the future are of an extraordinary, almost clairvoyant quality. This is especially so as soon as one accepts that things change all the time. As such, the cost of the associated correction that becomes necessary when it is found that the attractor is too far away rises accordingly so much so that success typically lies beyond reach."
      },
      "after": "5dd2ef6d4cea5970",
      "date": 1660230033929
    },
    {
      "type": "edit",
      "id": "092bc9840cb49b43",
      "item": {
        "type": "paragraph",
        "id": "092bc9840cb49b43",
        "text": "Let’s be bold and take for granted that we are always going to have prediction error. Then, predicting too far out into the future will cause the prediction error to accumulate and grow quickly7. "
      },
      "date": 1660230226217
    },
    {
      "type": "add",
      "id": "93a3a9e4caa1dc8a",
      "item": {
        "type": "paragraph",
        "id": "93a3a9e4caa1dc8a",
        "text": "The better our hash buckets model the actual process at hand, the smaller the prediction error will be. However, no matter how good our understanding of something is, there is always the risk that something we are not aware of is at play."
      },
      "after": "092bc9840cb49b43",
      "date": 1660230228029
    },
    {
      "type": "edit",
      "id": "092bc9840cb49b43",
      "item": {
        "type": "paragraph",
        "id": "092bc9840cb49b43",
        "text": "Let’s be bold and take for granted that we are always going to have prediction error. Then, predicting too far out into the future will cause the prediction error to accumulate and grow quickly."
      },
      "date": 1660230233429
    },
    {
      "type": "add",
      "id": "b8f2904373ca6a72",
      "item": {
        "type": "paragraph",
        "id": "b8f2904373ca6a72",
        "text": "Note how this relates so well to numerical integration of differential equations! "
      },
      "after": "092bc9840cb49b43",
      "date": 1660230259357
    },
    {
      "item": {
        "type": "factory",
        "id": "b39f45ba5c3de319"
      },
      "id": "b39f45ba5c3de319",
      "type": "add",
      "after": "21ba06e9de44feaa",
      "date": 1660230364636
    },
    {
      "type": "edit",
      "id": "b39f45ba5c3de319",
      "item": {
        "type": "paragraph",
        "id": "b39f45ba5c3de319",
        "text": "Progress is defined in terms of the contraction of the possible solution space."
      },
      "date": 1660230376632
    },
    {
      "item": {
        "type": "factory",
        "id": "9fba748982c7c718"
      },
      "id": "9fba748982c7c718",
      "type": "add",
      "after": "b39f45ba5c3de319",
      "date": 1660230383806
    },
    {
      "type": "edit",
      "id": "9fba748982c7c718",
      "item": {
        "type": "paragraph",
        "id": "9fba748982c7c718",
        "text": "Let’s review a concrete example that illustrates how these mechanisms work. Basically, there are two ways in which one can write programs that play chess. On one hand, we have the brute force methodology which examines every single possible move up to some practical limit. On the other hand, we have algorithms which try to determine whether certain play combinations are worth examining further. In some cases, they may also decide whether to wait until the next turn and stop making decisions until new information is known. Today’s chess programs are somewhere between these two extremes."
      },
      "date": 1660230387357
    },
    {
      "type": "add",
      "id": "411a1e466d2f7c1c",
      "item": {
        "type": "paragraph",
        "id": "411a1e466d2f7c1c",
        "text": "[…]"
      },
      "after": "9fba748982c7c718",
      "date": 1660230389393
    },
    {
      "item": {
        "type": "factory",
        "id": "9d83fc666aee428c"
      },
      "id": "9d83fc666aee428c",
      "type": "add",
      "after": "411a1e466d2f7c1c",
      "date": 1660230444941
    },
    {
      "type": "edit",
      "id": "9d83fc666aee428c",
      "item": {
        "type": "paragraph",
        "id": "9d83fc666aee428c",
        "text": "Going from chess back to our more abstract problem, how can we summarize what we learned from the discussion above? To put it succintly, the design of the map between hash buckets corresponding to perceived distinctions and hash buckets corresponding to actions to take depends heavily on the estimated quality of our predictions."
      },
      "date": 1660230448079
    },
    {
      "type": "add",
      "id": "c7d17b8863bf54f6",
      "item": {
        "type": "paragraph",
        "id": "c7d17b8863bf54f6",
        "text": "[…]"
      },
      "after": "9d83fc666aee428c",
      "date": 1660230465556
    },
    {
      "type": "add",
      "id": "4ef0a2704719981a",
      "item": {
        "type": "paragraph",
        "id": "4ef0a2704719981a",
        "text": "If we think we can predict well over long periods of time, then naturally we should increase the resolution of the hash buckets to take advantage of this. However, we should keep in mind that high quality predictions have a tendency to"
      },
      "after": "9d83fc666aee428c",
      "date": 1660230481846
    },
    {
      "type": "edit",
      "id": "4ef0a2704719981a",
      "item": {
        "type": "paragraph",
        "id": "4ef0a2704719981a",
        "text": "If we think we can predict well over long periods of time, then naturally we should increase the resolution of the hash buckets to take advantage of this. However, we should keep in mind that high quality predictions have a tendency to take significant time to calculate. In some cases, the time lag between prediction computation and action can introduce enough prediction error to the point that the results of some or all of the effort spent deciding what to do become useless or counterproductive."
      },
      "date": 1660230490895
    },
    {
      "type": "edit",
      "id": "4ef0a2704719981a",
      "item": {
        "type": "paragraph",
        "id": "4ef0a2704719981a",
        "text": "If we think we can predict well over long periods of time, then naturally we should increase the resolution of the hash buckets to take advantage of this. However, we should keep in mind that high quality predictions have a tendency to take significant time to calculate. In some cases, the time lag between prediction computation and action can introduce enough prediction error to the point that the results of some or all of the effort spent deciding what to do become"
      },
      "date": 1660230519172
    },
    {
      "type": "edit",
      "id": "4ef0a2704719981a",
      "item": {
        "type": "paragraph",
        "id": "4ef0a2704719981a",
        "text": "If we think we can predict well over long periods of time, then naturally we should increase the resolution of the hash buckets to take advantage of this. However, we should keep in mind that high quality predictions have a tendency to take significant time to calculate. In some cases, the time lag between prediction computation and action can introduce enough prediction error to the point that the results of some or all of the effort spent deciding what to do become useless or counterproductive."
      },
      "date": 1660230530119
    },
    {
      "type": "add",
      "id": "a5ba2cf788b9f5d1",
      "item": {
        "type": "paragraph",
        "id": "a5ba2cf788b9f5d1",
        "text": "If, on the other hand, we can only predict reasonably over short periods of time, we might as well lower the resolution of the hash buckets we are using. What is the point of spending a lot of energy coming up with a prediction that has less uncertainty than the known minimum prediction error?10 "
      },
      "after": "4ef0a2704719981a",
      "date": 1660230539015
    },
    {
      "type": "add",
      "id": "4e972948bc72d8dd",
      "item": {
        "type": "paragraph",
        "id": "4e972948bc72d8dd",
        "text": "In these cases, it is more important to correct any deviations as quickly as possible, instead"
      },
      "after": "a5ba2cf788b9f5d1",
      "date": 1660230542448
    },
    {
      "type": "edit",
      "id": "a5ba2cf788b9f5d1",
      "item": {
        "type": "paragraph",
        "id": "a5ba2cf788b9f5d1",
        "text": "If, on the other hand, we can only predict reasonably over short periods of time, we might as well lower the resolution of the hash buckets we are using. What is the point of spending a lot of energy coming up with a prediction that has less uncertainty than the known minimum prediction error?"
      },
      "date": 1660230561723
    },
    {
      "type": "remove",
      "id": "4e972948bc72d8dd",
      "date": 1660230574816
    },
    {
      "type": "edit",
      "id": "a5ba2cf788b9f5d1",
      "item": {
        "type": "paragraph",
        "id": "a5ba2cf788b9f5d1",
        "text": "If, on the other hand, we can only predict reasonably over short periods of time, we might as well lower the resolution of the hash buckets we are using. What is the point of spending a lot of energy coming up with a prediction that has less uncertainty than the known minimum prediction error? In these cases, it is more important to correct any deviations as quickly as possible, instead"
      },
      "date": 1660230583521
    },
    {
      "type": "edit",
      "id": "a5ba2cf788b9f5d1",
      "item": {
        "type": "paragraph",
        "id": "a5ba2cf788b9f5d1",
        "text": "If, on the other hand, we can only predict reasonably over short periods of time, we might as well lower the resolution of the hash buckets we are using. What is the point of spending a lot of energy coming up with a prediction that has less uncertainty than the known minimum prediction error? In these cases, it is more important to correct any deviations as quickly as possible, instead of trying to determine the best possible course of action. In other words, when predictions are known to be of limited quality, what we should do is to use a good enough prediction calculated efficiently together with a consistent error correction mechanism."
      },
      "date": 1660230593362
    },
    {
      "type": "edit",
      "id": "c7d17b8863bf54f6",
      "item": {
        "type": "paragraph",
        "id": "c7d17b8863bf54f6",
        "text": "Another case in which it can be beneficial to lower the hash bucket resolution is when we can show that coarse, comparatively cheap short term predictions produce results just as good as more expensive, longer term considerations. As a valuable side effect, this may also have the advantage of lowering the feedback cycle time lag without compromising the quality of the overall convergence of the behavior to its attractor, thus making it easier for it to react quickly to unexpected circumstances."
      },
      "date": 1660230600850
    },
    {
      "type": "add",
      "id": "c23827c94bbc0cea",
      "item": {
        "type": "paragraph",
        "id": "c23827c94bbc0cea",
        "text": "Choosing Which Benefit Function to Maximize"
      },
      "after": "c7d17b8863bf54f6",
      "date": 1660230615204
    },
    {
      "type": "edit",
      "id": "c23827c94bbc0cea",
      "item": {
        "type": "paragraph",
        "id": "c23827c94bbc0cea",
        "text": "⇒ [[Choosing Which Benefit Function to Maximize]]"
      },
      "date": 1660230642193
    }
  ]
}