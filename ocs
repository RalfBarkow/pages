{
  "title": "OCS",
  "story": [
    {
      "type": "paragraph",
      "id": "7b8653eeb345b320",
      "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 [[Miriam Bedoni]]. Based on intellectual property of [[Alice from Wonderland]].]"
    },
    {
      "type": "paragraph",
      "id": "119d345988ceebd3",
      "text": "The trivial data processing is a side effect of the Pile Concatenations\nProcessing, which can be implemented on any other flow of information\nthan data and with any other StrucT required for a specific use of the \nPile Concatenations Processing. [⇒ [[Pile Concatenations Processor]]]\n"
    },
    {
      "type": "paragraph",
      "id": "dc2ddbd5593b15c8",
      "text": "OCS is a combination of OrdinarY and ComplementarY StrucT ([[ORD]], [[COMP]]),\nwhere ORD is used to represent the data and can also stand alone, e.g.\nis the use in the [[CSS]] (see also Pile_CSS.txt) and where COMP is used for \nthe QuerY function only and does not stand alone, but accompanies an ORD."
    },
    {
      "type": "paragraph",
      "id": "77115c006dc2ba68",
      "text": "All relations are used across seperate, distinguished data (such as files),\nso that identification of the [[WholE]]/s a specific ConnexioN belongs to, is\nnot a native feature of this StrucT and requires more expenditures than\nother tasks, such as relating to the direct [[Context]]. \nThe CSS is more advanced, considering this feature (see also Pile_CSS.txt)."
    },
    {
      "type": "paragraph",
      "id": "54aa92cb6d76fb7b",
      "text": "Note: ORD, (optionally) together with COMP, were also called the \n      InneR StrucT (INNER) of [[Pile]], when OCS was the only StrucT \n      for data representation in Pile and when additionally an \n      OuteR StrucT (OUTER) was developed, to illustrate the ability \n      to represent meta data by Pile. The OUTER today is not implemented.\n      For more information about the OUTER, please see Pile_OUTER.txt.\n\n"
    },
    {
      "type": "pagefold",
      "id": "a578ff69783ab704",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "8d51a05cbd5247eb",
      "site": "wiki.ralfbarkow.ch",
      "slug": "pile-concatenations-processor",
      "title": "Pile Concatenations Processor",
      "text": "Here's what we accomplished in the Pile-Programming Workshop, Juli, 22nd - 24th 2005."
    },
    {
      "type": "reference",
      "id": "71cd6576a31c1923",
      "site": "books.dreyeck.ch",
      "slug": "inside-vs-outside",
      "title": "Inside vs Outside",
      "text": "The key tool in riding is our self – our body and our mind. We can’t go out and buy a new self, because you and I are unique!"
    },
    {
      "type": "reference",
      "id": "6a3164818741a36b",
      "site": "wiki.ralfbarkow.ch",
      "slug": "outside",
      "title": "Outside",
      "text": "See [[Inside]] ⇒ [[Distinction]]."
    },
    {
      "type": "reference",
      "id": "941c13b70e438acd",
      "site": "marc.tries.fed.wiki",
      "slug": "inside",
      "title": "Inside",
      "text": "The key [[Distinction]] in any [[Context]] is Inside-Outside. \n"
    },
    {
      "type": "graphviz",
      "id": "02dd941c21a9e30e",
      "text": "DOT FROM lambda-browsing"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "OCS",
        "story": []
      },
      "date": 1695222879523
    },
    {
      "item": {
        "type": "factory",
        "id": "7b8653eeb345b320"
      },
      "id": "7b8653eeb345b320",
      "type": "add",
      "date": 1695222885859
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations\nProcessing. The example of data interpretation was chosen, because using\ndata, the required knowledge for verification, when tracing of the StrucT\nis done, is minimized to the knowledge about the string of data only.\n"
      },
      "date": 1695222888139
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt]\n"
      },
      "date": 1695222913811
    },
    {
      "item": {
        "type": "factory",
        "id": "a578ff69783ab704"
      },
      "id": "a578ff69783ab704",
      "type": "add",
      "after": "7b8653eeb345b320",
      "date": 1695222936005
    },
    {
      "type": "edit",
      "id": "a578ff69783ab704",
      "item": {
        "type": "pagefold",
        "id": "a578ff69783ab704",
        "text": "~"
      },
      "date": 1695222942001
    },
    {
      "item": {
        "type": "factory",
        "id": "8d51a05cbd5247eb"
      },
      "id": "8d51a05cbd5247eb",
      "type": "add",
      "after": "a578ff69783ab704",
      "date": 1695222943415
    },
    {
      "type": "edit",
      "id": "8d51a05cbd5247eb",
      "item": {
        "type": "reference",
        "id": "8d51a05cbd5247eb",
        "site": "wiki.ralfbarkow.ch",
        "slug": "pile-concatenations-processor",
        "title": "Pile Concatenations Processor",
        "text": "Here's what we accomplished in the Pile-Programming Workshop, Juli, 22nd - 24th 2005."
      },
      "date": 1695222945377
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 Miriam Bedoni\nBased on intellectual property of Alice from Wonderland.\n]\n"
      },
      "date": 1695222972516
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 Miriam Bedoni\nBased on intellectual property of Alice from Wonderland.]\n"
      },
      "date": 1695222985423
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 [[Miriam Bedoni]]. Based on intellectual property of Alice from Wonderland.]\n"
      },
      "date": 1695223003023
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 [[Miriam Bedoni]]. Based on intellectual property of [[Alice from Wonderland]].]\n"
      },
      "date": 1695223014416
    },
    {
      "type": "edit",
      "id": "7b8653eeb345b320",
      "item": {
        "type": "paragraph",
        "id": "7b8653eeb345b320",
        "text": "was developed as way of example to illustrate the Pile Concatenations Processing. The example of data interpretation was chosen, because using data, the required knowledge for verification, when tracing of the StrucT is done, is minimized to the knowledge about the string of data only. [1.0_Pile_OCS.txt, Copyright (C) 2005 [[Miriam Bedoni]]. Based on intellectual property of [[Alice from Wonderland]].]"
      },
      "date": 1695223043546
    },
    {
      "item": {
        "type": "factory",
        "id": "119d345988ceebd3"
      },
      "id": "119d345988ceebd3",
      "type": "add",
      "after": "8d51a05cbd5247eb",
      "date": 1695223075184
    },
    {
      "id": "119d345988ceebd3",
      "type": "move",
      "order": [
        "7b8653eeb345b320",
        "119d345988ceebd3",
        "a578ff69783ab704",
        "8d51a05cbd5247eb"
      ],
      "date": 1695223077002
    },
    {
      "type": "edit",
      "id": "119d345988ceebd3",
      "item": {
        "type": "paragraph",
        "id": "119d345988ceebd3",
        "text": "The trivial data processing is a side effect of the Pile Concatenations\nProcessing, which can be implemented on any other flow of information\nthan data and with any other StrucT required for a specific use of the \nPile Concatenations Processing.\n"
      },
      "date": 1695223078310
    },
    {
      "item": {
        "type": "factory",
        "id": "dc2ddbd5593b15c8"
      },
      "id": "dc2ddbd5593b15c8",
      "type": "add",
      "after": "8d51a05cbd5247eb",
      "date": 1695223087288
    },
    {
      "id": "dc2ddbd5593b15c8",
      "type": "move",
      "order": [
        "7b8653eeb345b320",
        "119d345988ceebd3",
        "dc2ddbd5593b15c8",
        "a578ff69783ab704",
        "8d51a05cbd5247eb"
      ],
      "date": 1695223088729
    },
    {
      "type": "edit",
      "id": "dc2ddbd5593b15c8",
      "item": {
        "type": "paragraph",
        "id": "dc2ddbd5593b15c8",
        "text": "OCS is a combination of OrdinarY and ComplementarY StrucT ([[ORD]], [[COMP]]),\nwhere ORD is used to represent the data and can also stand alone, e.g.\nis the use in the CSS (see also Pile_CSS.txt) and where COMP is used for \nthe QuerY function only and does not stand alone, but accompanies an ORD.\n"
      },
      "date": 1695223101922
    },
    {
      "type": "edit",
      "id": "dc2ddbd5593b15c8",
      "item": {
        "type": "paragraph",
        "id": "dc2ddbd5593b15c8",
        "text": "OCS is a combination of OrdinarY and ComplementarY StrucT ([[ORD]], [[COMP]]),\nwhere ORD is used to represent the data and can also stand alone, e.g.\nis the use in the [[CSS]] (see also Pile_CSS.txt) and where COMP is used for \nthe QuerY function only and does not stand alone, but accompanies an ORD.\n"
      },
      "date": 1695223137265
    },
    {
      "type": "edit",
      "id": "dc2ddbd5593b15c8",
      "item": {
        "type": "paragraph",
        "id": "dc2ddbd5593b15c8",
        "text": "OCS is a combination of OrdinarY and ComplementarY StrucT ([[ORD]], [[COMP]]),\nwhere ORD is used to represent the data and can also stand alone, e.g.\nis the use in the [[CSS]] (see also Pile_CSS.txt) and where COMP is used for \nthe QuerY function only and does not stand alone, but accompanies an ORD."
      },
      "date": 1695223162072
    },
    {
      "type": "add",
      "id": "77115c006dc2ba68",
      "item": {
        "type": "paragraph",
        "id": "77115c006dc2ba68",
        "text": "All relations are used across seperate, distinguished data (such as files),\nso that identification of the WholE/s a specific ConnexioN belongs to, is\nnot a native feature of this StrucT and requires more expenditures than\nother tasks, such as relating to the direct context. \nThe CSS is more advanced, considering this feature (see also Pile_CSS.txt).\n"
      },
      "after": "dc2ddbd5593b15c8",
      "date": 1695223162812
    },
    {
      "type": "edit",
      "id": "77115c006dc2ba68",
      "item": {
        "type": "paragraph",
        "id": "77115c006dc2ba68",
        "text": "All relations are used across seperate, distinguished data (such as files),\nso that identification of the [[WholE]]/s a specific ConnexioN belongs to, is\nnot a native feature of this StrucT and requires more expenditures than\nother tasks, such as relating to the direct context. \nThe CSS is more advanced, considering this feature (see also Pile_CSS.txt).\n"
      },
      "date": 1695223184308
    },
    {
      "type": "edit",
      "id": "77115c006dc2ba68",
      "item": {
        "type": "paragraph",
        "id": "77115c006dc2ba68",
        "text": "All relations are used across seperate, distinguished data (such as files),\nso that identification of the [[WholE]]/s a specific ConnexioN belongs to, is\nnot a native feature of this StrucT and requires more expenditures than\nother tasks, such as relating to the direct context. \nThe CSS is more advanced, considering this feature (see also Pile_CSS.txt)."
      },
      "date": 1695223226347
    },
    {
      "type": "add",
      "id": "54aa92cb6d76fb7b",
      "item": {
        "type": "paragraph",
        "id": "54aa92cb6d76fb7b",
        "text": "Note: ORD, (optionally) together with COMP, were also called the \n      InneR StrucT (INNER) of [[Pile]], when OCS was the only StrucT \n      for data representation in Pile and when additionally an \n      OuteR StrucT (OUTER) was developed, to illustrate the ability \n      to represent meta data by Pile. The OUTER today is not implemented.\n      For more information about the OUTER, please see Pile_OUTER.txt.\n\n"
      },
      "after": "77115c006dc2ba68",
      "date": 1695223234126
    },
    {
      "item": {
        "type": "factory",
        "id": "71cd6576a31c1923"
      },
      "id": "71cd6576a31c1923",
      "type": "add",
      "after": "8d51a05cbd5247eb",
      "date": 1695223262489
    },
    {
      "type": "edit",
      "id": "71cd6576a31c1923",
      "item": {
        "type": "reference",
        "id": "71cd6576a31c1923",
        "site": "books.dreyeck.ch",
        "slug": "inside-vs-outside",
        "title": "Inside vs Outside",
        "text": "The key tool in riding is our self – our body and our mind. We can’t go out and buy a new self, because you and I are unique!"
      },
      "date": 1695223288139
    },
    {
      "item": {
        "type": "factory",
        "id": "941c13b70e438acd"
      },
      "id": "941c13b70e438acd",
      "type": "add",
      "after": "71cd6576a31c1923",
      "date": 1695223322689
    },
    {
      "type": "edit",
      "id": "941c13b70e438acd",
      "item": {
        "type": "reference",
        "id": "941c13b70e438acd",
        "site": "marc.tries.fed.wiki",
        "slug": "inside",
        "title": "Inside",
        "text": "Whisp:"
      },
      "date": 1695223325847
    },
    {
      "type": "edit",
      "id": "941c13b70e438acd",
      "item": {
        "type": "reference",
        "id": "941c13b70e438acd",
        "site": "marc.tries.fed.wiki",
        "slug": "inside",
        "title": "Inside",
        "text": "The key [[Distinction]] in any context is Inside-Outside. \n"
      },
      "date": 1695223333445
    },
    {
      "item": {
        "type": "factory",
        "id": "6a3164818741a36b"
      },
      "id": "6a3164818741a36b",
      "type": "add",
      "after": "941c13b70e438acd",
      "date": 1695223374429
    },
    {
      "type": "edit",
      "id": "6a3164818741a36b",
      "item": {
        "type": "reference",
        "id": "6a3164818741a36b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "outside",
        "title": "Outside",
        "text": "See [[Inside]] ⇒ [[Distinction]]."
      },
      "date": 1695223377132
    },
    {
      "id": "6a3164818741a36b",
      "type": "move",
      "order": [
        "7b8653eeb345b320",
        "119d345988ceebd3",
        "dc2ddbd5593b15c8",
        "77115c006dc2ba68",
        "54aa92cb6d76fb7b",
        "a578ff69783ab704",
        "8d51a05cbd5247eb",
        "71cd6576a31c1923",
        "6a3164818741a36b",
        "941c13b70e438acd"
      ],
      "date": 1695223389201
    },
    {
      "type": "edit",
      "id": "119d345988ceebd3",
      "item": {
        "type": "paragraph",
        "id": "119d345988ceebd3",
        "text": "The trivial data processing is a side effect of the Pile Concatenations\nProcessing, which can be implemented on any other flow of information\nthan data and with any other StrucT required for a specific use of the \nPile Concatenations Processing. [⇒[[Pile Concatenations Processor]]]\n"
      },
      "date": 1695223483084
    },
    {
      "type": "edit",
      "id": "119d345988ceebd3",
      "item": {
        "type": "paragraph",
        "id": "119d345988ceebd3",
        "text": "The trivial data processing is a side effect of the Pile Concatenations\nProcessing, which can be implemented on any other flow of information\nthan data and with any other StrucT required for a specific use of the \nPile Concatenations Processing. [⇒ [[Pile Concatenations Processor]]]\n"
      },
      "date": 1695223537626
    },
    {
      "type": "edit",
      "id": "77115c006dc2ba68",
      "item": {
        "type": "paragraph",
        "id": "77115c006dc2ba68",
        "text": "All relations are used across seperate, distinguished data (such as files),\nso that identification of the [[WholE]]/s a specific ConnexioN belongs to, is\nnot a native feature of this StrucT and requires more expenditures than\nother tasks, such as relating to the direct [[Context]]. \nThe CSS is more advanced, considering this feature (see also Pile_CSS.txt)."
      },
      "date": 1695223598677
    },
    {
      "type": "edit",
      "id": "941c13b70e438acd",
      "item": {
        "type": "reference",
        "id": "941c13b70e438acd",
        "site": "marc.tries.fed.wiki",
        "slug": "inside",
        "title": "Inside",
        "text": "The key [[Distinction]] in any [[Context]] is Inside-Outside. \n"
      },
      "date": 1695223760733
    },
    {
      "item": {
        "type": "factory",
        "id": "fa81bcfcb85c3d34"
      },
      "id": "fa81bcfcb85c3d34",
      "type": "add",
      "after": "941c13b70e438acd",
      "date": 1695223764152
    },
    {
      "type": "remove",
      "id": "fa81bcfcb85c3d34",
      "date": 1695223766343
    },
    {
      "item": {
        "type": "factory",
        "id": "02dd941c21a9e30e"
      },
      "id": "02dd941c21a9e30e",
      "type": "add",
      "after": "941c13b70e438acd",
      "date": 1695223767650
    },
    {
      "type": "edit",
      "id": "02dd941c21a9e30e",
      "item": {
        "type": "graphviz",
        "id": "02dd941c21a9e30e",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1695223774054
    }
  ]
}