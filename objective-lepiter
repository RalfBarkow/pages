{
  "title": "Objective-Lepiter",
  "story": [
    {
      "type": "markdown",
      "id": "b54a621c5a756b5e",
      "text": "[[Sean DeNigris]]' library to have pages representing arbitrary domain objects. [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]"
    },
    {
      "type": "markdown",
      "id": "ddd100a1a6f447c4",
      "text": "The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation [â‡’ [[UID-Based Links]]], you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata. [https://github.com/seandenigris/Objective-Lepiter github]"
    },
    {
      "type": "markdown",
      "id": "1f47c40da20e50d0",
      "text": "# OlObjectUIDReference"
    },
    {
      "type": "markdown",
      "id": "13c7bda723776e4c",
      "text": "\"I am a dynamic reference to an object with a UUID, similar to what aFileLocator is for a file\".\n\n### Responsibilities\n- I maintain a UID representing an object\n- I am able to produce the object on demand\n- I am easily serializable because my state is only value objects which can be materialized independent of any particular object graph\n- Subclasses must implement #object in a way that preserves the previous point e.g. don't store a block or an object that will be serialized elsewhere\n\n### Collaborators\nMy client."
    },
    {
      "type": "pagefold",
      "id": "3845412b800c8711",
      "text": "~"
    },
    {
      "type": "graphviz",
      "id": "59b846d7ff12ebbc",
      "text": "DOT FROM lambda-browsing",
      "dot": "strict digraph {rankdir=LR\n\n\n\n\n\n\nnode [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n\"Objective-Lepiter\"\nnode [style=filled fillcolor=lightblue]\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"Objective-Lepiter\" -> \"Sean\nDeNigris\"\n\"Objective-Lepiter\" -> \"UID-Based\nLinks\"\n\"Objective-Lepiter\" -> \"Lepiter\"\n\"Objective-Lepiter\" -> \"Objective-Lepiter\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Sean\nDeNigris\"\n\"Sean\nDeNigris\" -> \"Computer\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"UID-Based\nLinks\"\n\"UID-Based\nLinks\" -> \"Lepiter\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Lepiter\"\n\"Lepiter\" -> \"Glamorous\nToolkit\nBook\"\n\"Lepiter\" -> \"Markdown\"\n\"Lepiter\" -> \"Glamorous\nToolkit\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Objective-Lepiter\"\n\"Objective-Lepiter\" -> \"Sean\nDeNigris\"\n\"Objective-Lepiter\" -> \"UID-Based\nLinks\"\n\"Objective-Lepiter\" -> \"Lepiter\"\n\"Objective-Lepiter\" -> \"Objective-Lepiter\"\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"Objective-Lepiter\"}",
      "svg": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 8.0.5 (0)\n -->\n<!-- Pages: 1 -->\n<svg width=\"630pt\" height=\"237pt\"\n viewBox=\"0.00 0.00 629.86 236.83\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 232.83)\">\n<polygon fill=\"white\" stroke=\"none\" points=\"-4,4 -4,-232.83 625.86,-232.83 625.86,4 -4,4\"/>\n<!-- Objective&#45;Lepiter -->\n<g id=\"node1\" class=\"node\">\n<title>Objective&#45;Lepiter</title>\n<ellipse fill=\"lightyellow\" stroke=\"black\" stroke-width=\"3\" cx=\"84.03\" cy=\"-122.42\" rx=\"84.03\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"84.03\" y=\"-118.22\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Objective&#45;Lepiter</text>\n</g>\n<!-- Objective&#45;Lepiter&#45;&gt;Objective&#45;Lepiter -->\n<g id=\"edge4\" class=\"edge\">\n<title>Objective&#45;Lepiter&#45;&gt;Objective&#45;Lepiter</title>\n<path fill=\"none\" stroke=\"black\" d=\"M51.72,-140.2C46.23,-149.73 57,-158.42 84.03,-158.42 100.09,-158.42 110.4,-155.35 114.99,-150.87\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"118.56,-151.56 116.35,-141.2 111.61,-150.67 118.56,-151.56\"/>\n</g>\n<!-- Sean\nDeNigris -->\n<g id=\"node2\" class=\"node\">\n<title>Sean\nDeNigris</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" cx=\"263.8\" cy=\"-199.42\" rx=\"49.27\" ry=\"29.42\"/>\n<text text-anchor=\"middle\" x=\"263.8\" y=\"-203.62\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Sean</text>\n<text text-anchor=\"middle\" x=\"263.8\" y=\"-186.82\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">DeNigris</text>\n</g>\n<!-- Objective&#45;Lepiter&#45;&gt;Sean\nDeNigris -->\n<g id=\"edge1\" class=\"edge\">\n<title>Objective&#45;Lepiter&#45;&gt;Sean\nDeNigris</title>\n<path fill=\"none\" stroke=\"black\" d=\"M124.49,-139.5C150.36,-150.71 184.42,-165.47 212.27,-177.53\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"210.66,-181.08 221.22,-181.84 213.44,-174.65 210.66,-181.08\"/>\n</g>\n<!-- UID&#45;Based\nLinks -->\n<g id=\"node3\" class=\"node\">\n<title>UID&#45;Based\nLinks</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" cx=\"263.8\" cy=\"-122.42\" rx=\"59.73\" ry=\"29.42\"/>\n<text text-anchor=\"middle\" x=\"263.8\" y=\"-126.62\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">UID&#45;Based</text>\n<text text-anchor=\"middle\" x=\"263.8\" y=\"-109.82\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Links</text>\n</g>\n<!-- Objective&#45;Lepiter&#45;&gt;UID&#45;Based\nLinks -->\n<g id=\"edge2\" class=\"edge\">\n<title>Objective&#45;Lepiter&#45;&gt;UID&#45;Based\nLinks</title>\n<path fill=\"none\" stroke=\"black\" d=\"M169.49,-122.42C176.93,-122.42 184.4,-122.42 191.71,-122.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"191.65,-125.92 201.65,-122.42 191.65,-118.92 191.65,-125.92\"/>\n</g>\n<!-- Lepiter -->\n<g id=\"node4\" class=\"node\">\n<title>Lepiter</title>\n<ellipse fill=\"white\" stroke=\"black\" stroke-width=\"3\" cx=\"412.96\" cy=\"-94.42\" rx=\"40.56\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"412.96\" y=\"-90.22\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Lepiter</text>\n</g>\n<!-- Objective&#45;Lepiter&#45;&gt;Lepiter -->\n<g id=\"edge3\" class=\"edge\">\n<title>Objective&#45;Lepiter&#45;&gt;Lepiter</title>\n<path fill=\"none\" stroke=\"black\" d=\"M126.69,-105.63C149.19,-97.45 177.7,-88.52 204.07,-84.42 256.53,-76.25 270.52,-81.43 323.53,-84.42 336.05,-85.12 349.53,-86.39 362.1,-87.78\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"361.52,-91.36 371.86,-89.04 362.33,-84.4 361.52,-91.36\"/>\n</g>\n<!-- Computer -->\n<g id=\"node5\" class=\"node\">\n<title>Computer</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"412.96\" cy=\"-199.42\" rx=\"53.44\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"412.96\" y=\"-195.22\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Computer</text>\n</g>\n<!-- Sean\nDeNigris&#45;&gt;Computer -->\n<g id=\"edge5\" class=\"edge\">\n<title>Sean\nDeNigris&#45;&gt;Computer</title>\n<path fill=\"none\" stroke=\"black\" d=\"M314.21,-199.42C325.16,-199.42 336.91,-199.42 348.33,-199.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"348.15,-202.92 358.15,-199.42 348.15,-195.92 348.15,-202.92\"/>\n</g>\n<!-- UID&#45;Based\nLinks&#45;&gt;Lepiter -->\n<g id=\"edge6\" class=\"edge\">\n<title>UID&#45;Based\nLinks&#45;&gt;Lepiter</title>\n<path fill=\"none\" stroke=\"black\" d=\"M320.85,-111.75C334.95,-109.07 349.97,-106.21 363.65,-103.61\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"364.13,-106.89 373.3,-101.58 362.82,-100.01 364.13,-106.89\"/>\n</g>\n<!-- Glamorous\nToolkit\nBook -->\n<g id=\"node6\" class=\"node\">\n<title>Glamorous\nToolkit\nBook</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"562.13\" cy=\"-171.42\" rx=\"59.73\" ry=\"41.3\"/>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-184.02\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Glamorous</text>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-167.22\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Toolkit</text>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-150.42\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Book</text>\n</g>\n<!-- Lepiter&#45;&gt;Glamorous\nToolkit\nBook -->\n<g id=\"edge7\" class=\"edge\">\n<title>Lepiter&#45;&gt;Glamorous\nToolkit\nBook</title>\n<path fill=\"none\" stroke=\"black\" d=\"M441.3,-108.72C459.04,-118 482.81,-130.44 504.5,-141.79\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"502.48,-145.21 512.97,-146.74 505.73,-139 502.48,-145.21\"/>\n</g>\n<!-- Markdown -->\n<g id=\"node7\" class=\"node\">\n<title>Markdown</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"562.13\" cy=\"-94.42\" rx=\"55.58\" ry=\"18\"/>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-90.22\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Markdown</text>\n</g>\n<!-- Lepiter&#45;&gt;Markdown -->\n<g id=\"edge8\" class=\"edge\">\n<title>Lepiter&#45;&gt;Markdown</title>\n<path fill=\"none\" stroke=\"black\" d=\"M454.96,-94.42C467.44,-94.42 481.49,-94.42 495.18,-94.42\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"495.05,-97.92 505.05,-94.42 495.05,-90.92 495.05,-97.92\"/>\n</g>\n<!-- Glamorous\nToolkit -->\n<g id=\"node8\" class=\"node\">\n<title>Glamorous\nToolkit</title>\n<ellipse fill=\"white\" stroke=\"black\" cx=\"562.13\" cy=\"-29.42\" rx=\"59.73\" ry=\"29.42\"/>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-33.62\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Glamorous</text>\n<text text-anchor=\"middle\" x=\"562.13\" y=\"-16.82\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">Toolkit</text>\n</g>\n<!-- Lepiter&#45;&gt;Glamorous\nToolkit -->\n<g id=\"edge9\" class=\"edge\">\n<title>Lepiter&#45;&gt;Glamorous\nToolkit</title>\n<path fill=\"none\" stroke=\"black\" d=\"M443.74,-81.26C461.87,-73.26 485.57,-62.79 506.93,-53.35\"/>\n<polygon fill=\"black\" stroke=\"black\" points=\"508.13,-56.21 515.87,-48.96 505.3,-49.8 508.13,-56.21\"/>\n</g>\n</g>\n</svg>\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Objective-Lepiter",
        "story": []
      },
      "date": 1653995103878
    },
    {
      "id": "b54a621c5a756b5e",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "SeanDeNigris â€” 2022-05-27\nThis is my library to have pages representing arbitrary domain objects. The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation, you might be able to hook into Lepiter's UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata https://github.com/seandenigris/Objective-Lepiter â‡’ [[Objective-Lepiter]]"
      },
      "date": 1653995108238
    },
    {
      "type": "fork",
      "date": 1653995119247
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "SeanDeNigris â€” 2022-05-27 [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]\nThis is my library to have pages representing arbitrary domain objects. The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation, you might be able to hook into Lepiter's UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata https://github.com/seandenigris/Objective-Lepiter â‡’ [[Objective-Lepiter]]"
      },
      "date": 1653995137839
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "SeanDeNigris â€” 2022-05-27 [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]\nThis is my library to have pages representing arbitrary domain objects. The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation, you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata https://github.com/seandenigris/Objective-Lepiter â‡’ [[Objective-Lepiter]]"
      },
      "date": 1653995165717
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "SeanDeNigris â€” 2022-05-27 [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]\nThis is my library to have pages representing arbitrary domain objects. The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation [â‡’ [[UID-Based Links]]], you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata https://github.com/seandenigris/Objective-Lepiter â‡’ [[Objective-Lepiter]]"
      },
      "date": 1653995197310
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "SeanDeNigris â€” 2022-05-27 [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]\nThis is my library to have pages representing arbitrary domain objects. The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation [â‡’ [[UID-Based Links]]], you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata. [https://github.com/seandenigris/Objective-Lepiter github] â‡’ [[Objective-Lepiter]]"
      },
      "date": 1653995230113
    },
    {
      "item": {
        "type": "factory",
        "id": "1f47c40da20e50d0"
      },
      "id": "1f47c40da20e50d0",
      "type": "add",
      "after": "b54a621c5a756b5e",
      "date": 1653995648108
    },
    {
      "type": "edit",
      "id": "1f47c40da20e50d0",
      "item": {
        "type": "markdown",
        "id": "1f47c40da20e50d0",
        "text": "# OlObjectUIDReference"
      },
      "date": 1653995654465
    },
    {
      "item": {
        "type": "factory",
        "id": "cadcb6b46409f8a2"
      },
      "id": "cadcb6b46409f8a2",
      "type": "add",
      "after": "1f47c40da20e50d0",
      "date": 1653995659770
    },
    {
      "type": "edit",
      "id": "cadcb6b46409f8a2",
      "item": {
        "type": "markdown",
        "id": "cadcb6b46409f8a2",
        "text": "\"I am a dynamic reference to an object with a UUID, similar to what aFileLocator is for a file\".\n\n#Responsibilities\n- I maintain a UID representing an object\n- I am able to produce the object on demand\n- I am easily serializable because my state is only value objects which can be materialized independent of any particular object graph\n- Subclasses must implement #object in a way that preserves the previous point e.g. don't store a block or an object that will be serialized elsewhere\n\n#Collaborators\nMy client."
      },
      "date": 1653995661365
    },
    {
      "type": "remove",
      "id": "cadcb6b46409f8a2",
      "date": 1653995668832
    },
    {
      "item": {
        "type": "factory",
        "id": "13c7bda723776e4c"
      },
      "id": "13c7bda723776e4c",
      "type": "add",
      "after": "1f47c40da20e50d0",
      "date": 1653995670035
    },
    {
      "type": "edit",
      "id": "13c7bda723776e4c",
      "item": {
        "type": "markdown",
        "id": "13c7bda723776e4c",
        "text": "\"I am a dynamic reference to an object with a UUID, similar to what aFileLocator is for a file\".\n\n#Responsibilities\n- I maintain a UID representing an object\n- I am able to produce the object on demand\n- I am easily serializable because my state is only value objects which can be materialized independent of any particular object graph\n- Subclasses must implement #object in a way that preserves the previous point e.g. don't store a block or an object that will be serialized elsewhere\n\n#Collaborators\nMy client."
      },
      "date": 1653995672097
    },
    {
      "type": "edit",
      "id": "13c7bda723776e4c",
      "item": {
        "type": "markdown",
        "id": "13c7bda723776e4c",
        "text": "\"I am a dynamic reference to an object with a UUID, similar to what aFileLocator is for a file\".\n\n### Responsibilities\n- I maintain a UID representing an object\n- I am able to produce the object on demand\n- I am easily serializable because my state is only value objects which can be materialized independent of any particular object graph\n- Subclasses must implement #object in a way that preserves the previous point e.g. don't store a block or an object that will be serialized elsewhere\n\n### Collaborators\nMy client."
      },
      "date": 1653995689019
    },
    {
      "item": {
        "type": "factory",
        "id": "3fcea9d0b94c8e79"
      },
      "id": "3fcea9d0b94c8e79",
      "type": "add",
      "after": "13c7bda723776e4c",
      "date": 1654084808103
    },
    {
      "type": "remove",
      "id": "3fcea9d0b94c8e79",
      "date": 1654084812531
    },
    {
      "item": {
        "type": "factory",
        "id": "3845412b800c8711"
      },
      "id": "3845412b800c8711",
      "type": "add",
      "after": "13c7bda723776e4c",
      "date": 1654084814783
    },
    {
      "type": "edit",
      "id": "3845412b800c8711",
      "item": {
        "type": "pagefold",
        "id": "3845412b800c8711",
        "text": "~"
      },
      "date": 1654084818389
    },
    {
      "item": {
        "type": "factory",
        "id": "59b846d7ff12ebbc"
      },
      "id": "59b846d7ff12ebbc",
      "type": "add",
      "after": "3845412b800c8711",
      "date": 1654084819858
    },
    {
      "type": "edit",
      "id": "59b846d7ff12ebbc",
      "item": {
        "type": "graphviz",
        "id": "59b846d7ff12ebbc",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1654084822550
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "[[Sean DeNigris]]' â€” 2022-05-27 \nThis is my library to have pages representing arbitrary domain objects."
      },
      "date": 1703868474230
    },
    {
      "type": "add",
      "id": "ddd100a1a6f447c4",
      "item": {
        "type": "markdown",
        "id": "ddd100a1a6f447c4",
        "text": "The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation [â‡’ [[UID-Based Links]]], you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata. [https://github.com/seandenigris/Objective-Lepiter github] â‡’ [[Objective-Lepiter]]"
      },
      "after": "b54a621c5a756b5e",
      "date": 1703868475719
    },
    {
      "type": "edit",
      "id": "b54a621c5a756b5e",
      "item": {
        "type": "markdown",
        "id": "b54a621c5a756b5e",
        "text": "[[Sean DeNigris]]' library to have pages representing arbitrary domain objects. [https://discord.com/channels/729445214812504107/735946052347363551/979841325245530132 discord]"
      },
      "date": 1703868488761
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1703868851508
    },
    {
      "type": "edit",
      "id": "ddd100a1a6f447c4",
      "item": {
        "type": "markdown",
        "id": "ddd100a1a6f447c4",
        "text": "The pages have titles, but they are mutable depending on object state, so the pages are keyed by UID. Regarding your situation [â‡’ [[UID-Based Links]]], you might be able to hook into [[Lepiter]]'s UID assignment and substitute your external UIDs, but it might be easier to just add the external UID as additional metadata. [https://github.com/seandenigris/Objective-Lepiter github]"
      },
      "date": 1703868863000
    }
  ]
}