{
  "title": "Direct Control Links",
  "story": [
    {
      "type": "reference",
      "id": "b3165afb95dd242e",
      "site": "found.ward.fed.wiki",
      "slug": "new-hampshire-style",
      "title": "New Hampshire Style",
      "text": "[[Brian Marick]]'s Software design evolution inspired by ecological and embodied cognition. [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html post] [https://github.com/marick/nh github]"
    },
    {
      "type": "reference",
      "id": "5f249bceba04f27c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "direct-perception",
      "title": "Direct Perception",
      "text": "Our first design principle is “Favor direct control links from perception to action.” The more usual jargon is “direct perception”, but I ([[Brian Marick]]) found that not helpful as I tried to understand. “Direct control link” is from Ron McClamrock, who describes how flies launch themselves into the air thusly: […] [https://podcast.oddly-influenced.dev/episodes/e41-the-offloaded-brain-part-1-behavior/transcript podcast] (7:28)"
    },
    {
      "type": "paragraph",
      "id": "6713f94c2b69ab82",
      "text": "Here are the guidelines or principles or heuristics I ([[Brian Marick]]) will be using for early prototypes."
    },
    {
      "type": "paragraph",
      "id": "9c2c008812bb56ff",
      "text": "1. The app and the user (hereafter: “Brian”) are considered two independent (asynchronous) animals interacting via an [[Environment]]."
    },
    {
      "type": "image",
      "id": "a7b82bb98c9d982f",
      "text": "Figure 4. The system under consideration in developmental studies; no part can be considered independent of any other part. ([[Evidencing New Psych Forms]])",
      "size": "wide",
      "width": 419,
      "height": 133,
      "url": "/assets/plugins/image/32bbd135b6d330916af4b36fdea840e9.jpg"
    },
    {
      "type": "paragraph",
      "id": "61449e2d05c9841a",
      "text": "For the sample app, the material environment is a [[Document]] (in the broad sense)."
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "are-we-a-model-or-a-document",
      "title": "Are We a Model or a Document?",
      "text": "by [[Ward Cunningham]]"
    },
    {
      "type": "image",
      "id": "46b9450938cfd8a8",
      "text": "two-sides",
      "size": "wide",
      "width": 419,
      "height": 232,
      "url": "/assets/plugins/image/cf8dec9a521e35eeb5479786dc5d56c7.jpg"
    },
    {
      "type": "reference",
      "id": "2bad525374bdbf36",
      "site": "wiki.ralfbarkow.ch",
      "slug": "sides",
      "title": "Sides",
      "text": "Idea that the \"physical\" and the \"mental\" are two [[sides]] of a single reality."
    },
    {
      "type": "reference",
      "id": "4fc83ec68cfb0c1c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "two-sided-form",
      "title": "Two-Sided Form",
      "text": "is a terminus technicus of sociological systems theory coined by Luhmann."
    },
    {
      "type": "reference",
      "site": "wiki.ralfbarkow.ch",
      "slug": "getting-two-sides-of-wiki-together",
      "title": "Getting Two sides of wiki together",
      "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of Wikipedia and Fedwiki:",
      "id": "060960eecbbf81b7"
    },
    {
      "type": "pagefold",
      "id": "9d9c13586254d7cc",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "9d9f62fe9d214047",
      "text": "2. The “app-animal” is divided into three systems. The perceptual system observes the environment, looking for new affordances. When one is seen, control is handed into the “control” system, which – typically – instructs the motor system, which changes the environment. This sequence is a direct control link, which is what I’ll be focusing on in early prototypes."
    },
    {
      "type": "reference",
      "id": "c4e2500ff1dd68ca",
      "site": "wiki.ralfbarkow.ch",
      "slug": "triproduktion",
      "title": "Triproduktion",
      "text": "Die konditionierte ›Triproduktion‹\nDES Sinnsystems"
    },
    {
      "type": "paragraph",
      "id": "b3f01ed9acf17826",
      "text": "⇒ [[Trifference]]"
    },
    {
      "type": "pagefold",
      "id": "69d5ebfa54356422",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "d7bbb3add43e2bb1",
      "text": "3. All modules are structured as a soup of actors that, ideally, communicate asynchronously. (Exceptions will come down to human weakness in managing complexity.) Prototypes will use Erlang processes. The app proper will use Swift actors, but they’ll be used as if they were as lightweight as Erlang processes. “Processes” is the term I’ll use going forward."
    },
    {
      "type": "paragraph",
      "id": "d4f62a372b2a127d",
      "text": "4. Perceptual processes will be indexical; they will be looking at something. Like, for example, a [[Paragraph]]. I will tend to use spatial metaphors for the objects of attention. For example, I think of a script as a series of paragraphs or groups of paragraphs, laid out in a linear fashion."
    },
    {
      "type": "paragraph",
      "id": "601496a89414b379",
      "text": "5. Perceptual processes are created by control processes that are, metaphorically, saying “I want you to pay attention to that and look for your affordance there.” When the affordance is seen, it will start a control process specific to that affordance and then exit. (The app-animal may want to watch for repeated affordances, but it will do that by having a control module recreate an indexical perceptual process.)"
    },
    {
      "type": "paragraph",
      "id": "3713177d0e3a3284",
      "text": "6. Perceptual processes may maintain state when an affordance requires observing a sequence of changes in the environment. As with all processes, the state will be minimal."
    },
    {
      "type": "paragraph",
      "id": "d6f1f224e6ed14a5",
      "text": "7. Perceptual processes will “get bored” over time and go away. I will prefer that to explicitly shutting them down. (There will be a layering of perceptual processes that will enable both this and indexicality, but I haven’t figured that out yet.)"
    },
    {
      "type": "paragraph",
      "id": "8a2ae2b5152a4185",
      "text": "8. Control processes will be ephemeral. They will react to an affordance by (1) changing what the perceptual system is attending to, and/or (2) instructing the motor system to change the environment. For convenience, I’m going to think of the control process as telling the motor system “create a new affordance – that is, an opportunity for action – for the human.” (I’m not sure about this.)"
    },
    {
      "type": "paragraph",
      "id": "2a0f0184aad6a32b",
      "text": "“The world is its own best model.” – Rodney Brooks"
    },
    {
      "type": "paragraph",
      "id": "3aac4fb000e622f2",
      "text": "9.Because control processes are ephemeral, any information needed to respond to a later affordance must be stored in the environment. It can be retrieved in two ways. (1) A perceptual process may be fired to “keep track of it”. (2) When needed, a perceptual process will be started to scan the environment for the information needed. (In general, reacquiring information will be favored over keeping track of it.)"
    },
    {
      "type": "paragraph",
      "id": "453bff543806e99a",
      "text": "10. Ephemeral control processes also implies that plans are handled the way the Pengi episode explained [https://podcast.oddly-influenced.dev/episodes/e44-an-interview-with-david-chapman-about-the-offloaded-brain podcast]: each step will leave an affordance in the environment that will prompt the next step."
    },
    {
      "type": "markdown",
      "id": "ee77c6db2396365a",
      "text": "> When it comes to the perceptual system, I’ll be borrowing the idea of focused (or indexical) attention from last episode’s Pengi system. For example, when I create a new note, certain processes will spring into life and watch the text I type into it. When I’m moving around in the script proper, the particular paragraph the cursor is in will be watched carefully. (I’m going to make the cursor position part of the document; that is, part of the environment. It’s some of the movement the app-animal will be watching.) [https://podcast.oddly-influenced.dev/episodes/e45-the-offloaded-brain-part-5-i-propose-a-software-design-style/transcript podcast]"
    },
    {
      "type": "paragraph",
      "id": "0887c20bcb92d4ec",
      "text": "11. For the most part, I want the app-animal to detect affordances by observing the environment. For example, it should notice when one paragraph is split in two with"
    },
    {
      "type": "code",
      "id": "5316a49c392ea0d8",
      "text": "\n\n"
    },
    {
      "type": "paragraph",
      "id": "a7dd7930d9c79e0d",
      "text": "two blank lines between them. But I'll probably first implement a key chord that means \"starting my split-a-paragraph editing thing now\" which will both split the paragraph and also send the affordance to the paragraph's watcher. That way seems a better first step. And recognizing some affordances may be too hard, so I'll settle for having to remember to signal my intent to the app-animal."
    },
    {
      "type": "paragraph",
      "id": "864ea9d64dc1aa4e",
      "text": "Parts of the content reproduced here are  © 2024 [[Brian Marick]]; see \"Coding, New Hampshire Style\" [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html page] for details."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Direct Control Links",
        "story": []
      },
      "date": 1704883899829
    },
    {
      "item": {
        "type": "factory",
        "id": "5f249bceba04f27c"
      },
      "id": "5f249bceba04f27c",
      "type": "add",
      "date": 1704883901266
    },
    {
      "type": "edit",
      "id": "5f249bceba04f27c",
      "item": {
        "type": "reference",
        "id": "5f249bceba04f27c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "direct-perception",
        "title": "Direct Perception",
        "text": "Our first design principle is “Favor direct control links from perception to action.” The more usual jargon is “direct perception”, but I ([[Brian Marick]]) found that not helpful as I tried to understand. “Direct control link” is from Ron McClamrock, who describes how flies launch themselves into the air thusly: […] [https://podcast.oddly-influenced.dev/episodes/e41-the-offloaded-brain-part-1-behavior/transcript podcast] (7:28)"
      },
      "date": 1704883903514
    },
    {
      "id": "b3165afb95dd242e",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "b3165afb95dd242e",
        "site": "found.ward.fed.wiki",
        "slug": "new-hampshire-style",
        "title": "New Hampshire Style",
        "text": "Software evolution inspired by ecological and embodied cognition. [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html post] [https://github.com/marick/nh github]"
      },
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704883909708
    },
    {
      "id": "6713f94c2b69ab82",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "6713f94c2b69ab82",
        "text": "Here are the guidelines or principles or heuristics I ([[Brian Marick]]) will be using for early prototypes."
      },
      "after": "5f249bceba04f27c",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923892279
    },
    {
      "id": "9c2c008812bb56ff",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9c2c008812bb56ff",
        "text": "1. The app and the user (hereafter: “Brian”) are considered two independent (asynchronous) animals interacting via an [[Environment]]."
      },
      "after": "6713f94c2b69ab82",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923896640
    },
    {
      "id": "a7b82bb98c9d982f",
      "type": "add",
      "item": {
        "type": "image",
        "id": "a7b82bb98c9d982f",
        "text": "Figure 4. The system under consideration in developmental studies; no part can be considered independent of any other part. ([[Evidencing New Psych Forms]])",
        "size": "wide",
        "width": 419,
        "height": 133,
        "url": "/assets/plugins/image/32bbd135b6d330916af4b36fdea840e9.jpg"
      },
      "after": "9c2c008812bb56ff",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923900737
    },
    {
      "id": "61449e2d05c9841a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "61449e2d05c9841a",
        "text": "For the sample app, the material environment is a [[Document]] (in the broad sense)."
      },
      "after": "a7b82bb98c9d982f",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923908588
    },
    {
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "are-we-a-model-or-a-document",
        "title": "Are We a Model or a Document?",
        "text": "by [[Ward Cunningham]]"
      },
      "after": "61449e2d05c9841a",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923922228
    },
    {
      "id": "46b9450938cfd8a8",
      "type": "add",
      "item": {
        "type": "image",
        "id": "46b9450938cfd8a8",
        "text": "two-sides",
        "size": "wide",
        "width": 419,
        "height": 232,
        "url": "/assets/plugins/image/cf8dec9a521e35eeb5479786dc5d56c7.jpg"
      },
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923926826
    },
    {
      "id": "2bad525374bdbf36",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "2bad525374bdbf36",
        "site": "wiki.ralfbarkow.ch",
        "slug": "sides",
        "title": "Sides",
        "text": "Idea that the \"physical\" and the \"mental\" are two [[sides]] of a single reality."
      },
      "after": "46b9450938cfd8a8",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923932424
    },
    {
      "id": "4fc83ec68cfb0c1c",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "4fc83ec68cfb0c1c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "two-sided-form",
        "title": "Two-Sided Form",
        "text": "is a terminus technicus of sociological systems theory coined by Luhmann."
      },
      "after": "2bad525374bdbf36",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923942560
    },
    {
      "id": "060960eecbbf81b7",
      "type": "add",
      "item": {
        "type": "reference",
        "site": "wiki.ralfbarkow.ch",
        "slug": "getting-two-sides-of-wiki-together",
        "title": "Getting Two sides of wiki together",
        "text": "Someone wrote in [[Two sides of wiki]] about the seemingly opposite purpose of Wikipedia and Fedwiki:",
        "id": "060960eecbbf81b7"
      },
      "after": "4fc83ec68cfb0c1c",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923946444
    },
    {
      "id": "9d9c13586254d7cc",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "9d9c13586254d7cc",
        "text": "~"
      },
      "after": "060960eecbbf81b7",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923950290
    },
    {
      "id": "9d9f62fe9d214047",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "9d9f62fe9d214047",
        "text": "2. The “app-animal” is divided into three systems. The perceptual system observes the environment, looking for new affordances. When one is seen, control is handed into the “control” system, which – typically – instructs the motor system, which changes the environment. This sequence is a direct control link, which is what I’ll be focusing on in early prototypes."
      },
      "after": "9d9c13586254d7cc",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923961135
    },
    {
      "id": "c4e2500ff1dd68ca",
      "type": "add",
      "item": {
        "type": "reference",
        "id": "c4e2500ff1dd68ca",
        "site": "wiki.ralfbarkow.ch",
        "slug": "triproduktion",
        "title": "Triproduktion",
        "text": "Die konditionierte ›Triproduktion‹\nDES Sinnsystems"
      },
      "after": "9d9f62fe9d214047",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923965341
    },
    {
      "id": "b3f01ed9acf17826",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b3f01ed9acf17826",
        "text": "⇒ [[Trifference]]"
      },
      "after": "c4e2500ff1dd68ca",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923968125
    },
    {
      "id": "69d5ebfa54356422",
      "type": "add",
      "item": {
        "type": "pagefold",
        "id": "69d5ebfa54356422",
        "text": "~"
      },
      "after": "b3f01ed9acf17826",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923972968
    },
    {
      "id": "d7bbb3add43e2bb1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d7bbb3add43e2bb1",
        "text": "3. All modules are structured as a soup of actors that, ideally, communicate asynchronously. (Exceptions will come down to human weakness in managing complexity.) Prototypes will use Erlang processes. The app proper will use Swift actors, but they’ll be used as if they were as lightweight as Erlang processes. “Processes” is the term I’ll use going forward."
      },
      "after": "69d5ebfa54356422",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923979328
    },
    {
      "id": "d4f62a372b2a127d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d4f62a372b2a127d",
        "text": "4. Perceptual processes will be indexical; they will be looking at something. Like, for example, a [[Paragraph]]. I will tend to use spatial metaphors for the objects of attention. For example, I think of a script as a series of paragraphs or groups of paragraphs, laid out in a linear fashion."
      },
      "after": "d7bbb3add43e2bb1",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923982774
    },
    {
      "id": "601496a89414b379",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "601496a89414b379",
        "text": "5. Perceptual processes are created by control processes that are, metaphorically, saying “I want you to pay attention to that and look for your affordance there.” When the affordance is seen, it will start a control process specific to that affordance and then exit. (The app-animal may want to watch for repeated affordances, but it will do that by having a control module recreate an indexical perceptual process.)"
      },
      "after": "d4f62a372b2a127d",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704923996799
    },
    {
      "id": "3713177d0e3a3284",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3713177d0e3a3284",
        "text": "6. Perceptual processes may maintain state when an affordance requires observing a sequence of changes in the environment. As with all processes, the state will be minimal."
      },
      "after": "601496a89414b379",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924000066
    },
    {
      "id": "d6f1f224e6ed14a5",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "d6f1f224e6ed14a5",
        "text": "7. Perceptual processes will “get bored” over time and go away. I will prefer that to explicitly shutting them down. (There will be a layering of perceptual processes that will enable both this and indexicality, but I haven’t figured that out yet.)"
      },
      "after": "3713177d0e3a3284",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924007243
    },
    {
      "id": "8a2ae2b5152a4185",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "8a2ae2b5152a4185",
        "text": "8. Control processes will be ephemeral. They will react to an affordance by (1) changing what the perceptual system is attending to, and/or (2) instructing the motor system to change the environment. For convenience, I’m going to think of the control process as telling the motor system “create a new affordance – that is, an opportunity for action – for the human.” (I’m not sure about this.)"
      },
      "after": "d6f1f224e6ed14a5",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924013019
    },
    {
      "id": "2a0f0184aad6a32b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2a0f0184aad6a32b",
        "text": "“The world is its own best model.” – Rodney Brooks"
      },
      "after": "8a2ae2b5152a4185",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924020512
    },
    {
      "id": "3aac4fb000e622f2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "3aac4fb000e622f2",
        "text": "9.Because control processes are ephemeral, any information needed to respond to a later affordance must be stored in the environment. It can be retrieved in two ways. (1) A perceptual process may be fired to “keep track of it”. (2) When needed, a perceptual process will be started to scan the environment for the information needed. (In general, reacquiring information will be favored over keeping track of it.)"
      },
      "after": "2a0f0184aad6a32b",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924024692
    },
    {
      "id": "453bff543806e99a",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "453bff543806e99a",
        "text": "10. Ephemeral control processes also implies that plans are handled the way the Pengi episode explained [https://podcast.oddly-influenced.dev/episodes/e44-an-interview-with-david-chapman-about-the-offloaded-brain podcast]: each step will leave an affordance in the environment that will prompt the next step."
      },
      "after": "3aac4fb000e622f2",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924028401
    },
    {
      "id": "ee77c6db2396365a",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "ee77c6db2396365a",
        "text": "> When it comes to the perceptual system, I’ll be borrowing the idea of focused (or indexical) attention from last episode’s Pengi system. For example, when I create a new note, certain processes will spring into life and watch the text I type into it. When I’m moving around in the script proper, the particular paragraph the cursor is in will be watched carefully. (I’m going to make the cursor position part of the document; that is, part of the environment. It’s some of the movement the app-animal will be watching.) [https://podcast.oddly-influenced.dev/episodes/e45-the-offloaded-brain-part-5-i-propose-a-software-design-style/transcript podcast]"
      },
      "after": "453bff543806e99a",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924033396
    },
    {
      "id": "0887c20bcb92d4ec",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "0887c20bcb92d4ec",
        "text": "11. For the most part, I want the app-animal to detect affordances by observing the environment. For example, it should notice when one paragraph is split in two with"
      },
      "after": "ee77c6db2396365a",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924041308
    },
    {
      "id": "5316a49c392ea0d8",
      "type": "add",
      "item": {
        "type": "code",
        "id": "5316a49c392ea0d8",
        "text": "\n\n"
      },
      "after": "0887c20bcb92d4ec",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924043473
    },
    {
      "id": "a7dd7930d9c79e0d",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "a7dd7930d9c79e0d",
        "text": "two blank lines between them. But I'll probably first implement a key chord that means \"starting my split-a-paragraph editing thing now\" which will both split the paragraph and also send the affordance to the paragraph's watcher. That way seems a better first step. And recognizing some affordances may be too hard, so I'll settle for having to remember to signal my intent to the app-animal."
      },
      "after": "5316a49c392ea0d8",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924046154
    },
    {
      "id": "864ea9d64dc1aa4e",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": " © 2024 Brian Marick "
      },
      "after": "a7dd7930d9c79e0d",
      "attribution": {
        "page": "2024-01-10"
      },
      "date": 1704924052252
    },
    {
      "type": "edit",
      "id": "864ea9d64dc1aa4e",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": " © 2024 Brian Marick [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html post] "
      },
      "date": 1704924097357
    },
    {
      "type": "edit",
      "id": "864ea9d64dc1aa4e",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": " © 2024 Brian Marick [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html page] "
      },
      "date": 1704924106568
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1704924178561
    },
    {
      "type": "edit",
      "id": "864ea9d64dc1aa4e",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": "Parts of the content reproduced here are  © 2024 Brian Marick; see [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html page] for details."
      },
      "date": 1704926269385
    },
    {
      "type": "edit",
      "id": "864ea9d64dc1aa4e",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": "Parts of the content reproduced here are  © 2024 [[Brian Marick]]; see [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html page] for details."
      },
      "date": 1704926302777
    },
    {
      "type": "edit",
      "id": "864ea9d64dc1aa4e",
      "item": {
        "type": "paragraph",
        "id": "864ea9d64dc1aa4e",
        "text": "Parts of the content reproduced here are  © 2024 [[Brian Marick]]; see \"Coding, New Hampshire Style\" [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html page] for details."
      },
      "date": 1704926369005
    },
    {
      "type": "edit",
      "id": "b3165afb95dd242e",
      "item": {
        "type": "reference",
        "id": "b3165afb95dd242e",
        "site": "found.ward.fed.wiki",
        "slug": "new-hampshire-style",
        "title": "New Hampshire Style",
        "text": "[[Brian Marick]]'s Software design evolution inspired by ecological and embodied cognition. [https://nh.oddly-influenced.dev/2024/01/03/here-are-some.html post] [https://github.com/marick/nh github]"
      },
      "date": 1704926699070
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1704926757046
    }
  ]
}