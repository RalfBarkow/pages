{
  "title": "RESequence",
  "story": [
    {
      "type": "paragraph",
      "id": "63495ecb10955321",
      "text": "This class implements a simple computational tool that takes its main input (the equations that it solves) from a [[Leibniz Context]]. It illustrates how computational tools can interface with [[Leibniz]]."
    },
    {
      "type": "paragraph",
      "id": "033b484edd7be4a1",
      "text": "The task that this computational tool accomplishes is solving [recurrence equations](https://en.wikipedia.org/wiki/Recurrence_relation). The equations are defined in a Leibniz context with a label. The labels of the equations to be solved (one per variable) are given to this tool, which compiles them to Pharo code (this happens in {{gtMethod:name=RESequence>>compileRules}}). Parameters, such as the initial values of the recurrence sequences, can also be specified as Leibniz expressions, but also as Pharo numbers. To see how parameters are extracted from Leibniz expressions, look at {{gtMethod:name=RESequence>>stepSize:}}."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "RESequence",
        "story": []
      },
      "date": 1706200834898
    },
    {
      "type": "edit",
      "id": "63495ecb10955321",
      "item": {
        "type": "paragraph",
        "id": "63495ecb10955321",
        "text": "This class implements a simple computational tool that takes its main input (the equations that it solves) from a Leibniz context. It illustrates how computational tools can interface with Leibniz.\n\nThe task that this computational tool accomplishes is solving [recurrence equations](https://en.wikipedia.org/wiki/Recurrence_relation). The equations are defined in a Leibniz context with a label. The labels of the equations to be solved (one per variable) are given to this tool, which compiles them to Pharo code (this happens in {{gtMethod:name=RESequence>>compileRules}}). Parameters, such as the initial values of the recurrence sequences, can also be specified as Leibniz expressions, but also as Pharo numbers. To see how parameters are extracted from Leibniz expressions, look at {{gtMethod:name=RESequence>>stepSize:}}.\n"
      },
      "date": 1706200837853
    },
    {
      "type": "fork",
      "date": 1706201053260
    },
    {
      "type": "edit",
      "id": "63495ecb10955321",
      "item": {
        "type": "paragraph",
        "id": "63495ecb10955321",
        "text": "This class implements a simple computational tool that takes its main input (the equations that it solves) from a Leibniz context. It illustrates how computational tools can interface with Leibniz."
      },
      "date": 1706201060262
    },
    {
      "type": "add",
      "id": "033b484edd7be4a1",
      "item": {
        "type": "paragraph",
        "id": "033b484edd7be4a1",
        "text": "The task that this computational tool accomplishes is solving [recurrence equations](https://en.wikipedia.org/wiki/Recurrence_relation). The equations are defined in a Leibniz context with a label. The labels of the equations to be solved (one per variable) are given to this tool, which compiles them to Pharo code (this happens in {{gtMethod:name=RESequence>>compileRules}}). Parameters, such as the initial values of the recurrence sequences, can also be specified as Leibniz expressions, but also as Pharo numbers. To see how parameters are extracted from Leibniz expressions, look at {{gtMethod:name=RESequence>>stepSize:}}."
      },
      "after": "63495ecb10955321",
      "date": 1706201061007
    },
    {
      "type": "edit",
      "id": "63495ecb10955321",
      "item": {
        "type": "paragraph",
        "id": "63495ecb10955321",
        "text": "This class implements a simple computational tool that takes its main input (the equations that it solves) from a [[Leibniz Context]]. It illustrates how computational tools can interface with [[Leibniz]]."
      },
      "date": 1706201092928
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1706210171860
    }
  ]
}