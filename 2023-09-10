{
  "title": "2023-09-10",
  "story": [
    {
      "type": "paragraph",
      "id": "1465910e21897571",
      "text": "⇒ [[Structure]]: Parsing all Open Source Elm Code [https://blog.mi.hdm-stuttgart.de/index.php/2018/09/01/parsing-all-open-source-elm-code/ page]"
    },
    {
      "type": "paragraph",
      "id": "f31886264c43a713",
      "text": "The problem is that Github works on the text level. All the code is just a huge collection of text files. It would be much more useful if we could operate on the structure which the text represents. Instead of searching for all files which contain the string “List.map” we could precisely search for all source files which actually contain a reference to the List.map function."
    },
    {
      "type": "video",
      "id": "463aaf5b0facac98",
      "text": "YOUTUBE DsA3MNlz6BU\n[[Felipe Hoffa]], What can we learn from 750B GitHub events and 42 TB of code? - GitHub Universe 2017"
    },
    {
      "type": "paragraph",
      "id": "385f4f473f432249",
      "text": "⇒ [[Boundary Algebra]] ⇒ [[Calculus]] ⇒ [[James Algebra]] ⇒ [[Symbol Manipulation]] ⇒ [[String Languages]]"
    },
    {
      "type": "paragraph",
      "id": "fa93ccdb6aa7fc6f",
      "text": "⇒ [[Navigation]]"
    },
    {
      "type": "paragraph",
      "id": "9fd807671f005db0",
      "text": "Elm-app-url: A simpler way of parsing URLs [https://discourse.elm-lang.org/t/elm-app-url-a-simpler-way-of-parsing-urls/8903/1 page]"
    },
    {
      "type": "video",
      "id": "4df44c9b248524d1",
      "text": "YOUTUBE syP2I-t-owc\n[[Simon Lydell]], Introducing elm-app-url"
    },
    {
      "type": "paragraph",
      "id": "7184585c762c482f",
      "text": "⇒ [[Render Story]] ⇒ [[Variants of Story Item Types]]  ⇒ [[Items based on Content Type]]"
    },
    {
      "type": "paragraph",
      "id": "ee031f9d4311c487",
      "text": "How to extend with wiki-style links? #3 [https://github.com/pablohirafuji/elm-markdown/issues/3 page]"
    },
    {
      "type": "paragraph",
      "id": "2c25dc579ca267e9",
      "text": "remark-wiki-link [https://github.com/landakram/remark-wiki-link#remark-wiki-link github] – Parse wiki-style links and render them as anchors"
    },
    {
      "type": "reference",
      "id": "c206e7e6f1ea6a61",
      "site": "wiki.ralfbarkow.ch",
      "slug": "qualified-links",
      "title": "Qualified Links",
      "text": "[[Link]]s that indicate their relationship type. For example, here's a wiki-style link that includes a relationship qualifier (instead of \"OTHER-NOTE\", insert your usual link ID format):"
    },
    {
      "type": "paragraph",
      "id": "7d4d03a0728b86e1",
      "text": "Notice that changing the protocol from https to http is considered a different domain! (And vice versa!) [https://package.elm-lang.org/packages/elm/browser/latest/Browser#UrlRequest page]"
    },
    {
      "type": "paragraph",
      "id": "88ce1f201dd4227b",
      "text": "⇒ [[Markdown]]: Dillinger [https://dillinger.io/ site], [https://github.com/joemccann/dillinger#dillinger github] ⇒ [[Literate Tools]]"
    },
    {
      "type": "paragraph",
      "id": "0105b451eae3e361",
      "text": "⇒ [[Breakdance]]"
    },
    {
      "type": "paragraph",
      "id": "dfbff7bec666e537",
      "text": "⇒ [[elm-markdown]] [https://github.com/dillonkearns/elm-markdown#elm-markdown github]"
    },
    {
      "type": "paragraph",
      "id": "a0a07d6183e36228",
      "text": "cellme [https://bburdette.github.io/cellme/mdcelldemo.html page], [https://github.com/bburdette/cellme#cellme github]"
    },
    {
      "type": "paragraph",
      "id": "3734b1b7c712f2b5",
      "text": "zknotes [https://github.com/bburdette/zknotes#zknotes github]"
    },
    {
      "type": "pagefold",
      "id": "6522f95084e6eceb",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "4f064f1cb868bdef",
      "text": "⇒ [[Consensual Hallucination]] ⇒ [[Hallucination]]"
    },
    {
      "type": "markdown",
      "id": "32c8a7c40e8b9180",
      "text": "# An Introduction to Boundary Logic with the Losp Deductive Engine"
    },
    {
      "type": "paragraph",
      "id": "1fc4d6bdc2569276",
      "text": "BRICKEN, William M. and GULLICHSEN, E., 1990. An introduction to boundary logic with the losp deductive engine. Future Computing Systems. 1990. Vol. 2, no. 4, p. 299–375."
    },
    {
      "type": "paragraph",
      "id": "7e34d3eaac773378",
      "text": "KAUFFMAN, Louis H., 2015. Self-reference, biologic and the structure of reproduction. Progress in Biophysics and Molecular Biology. 1 December 2015. Vol. 119, no. 3, p. 382–409. [Accessed 10 September 2023]. DOI 10.1016/j.pbiomolbio.2015.06.015. In this paper we explore the boundary shared by biology and formal systems."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-09-10",
        "story": []
      },
      "date": 1694337575328
    },
    {
      "item": {
        "type": "factory",
        "id": "292918457c637cad"
      },
      "id": "292918457c637cad",
      "type": "add",
      "date": 1694337581414
    },
    {
      "item": {
        "type": "factory",
        "id": "463aaf5b0facac98"
      },
      "id": "463aaf5b0facac98",
      "type": "add",
      "after": "292918457c637cad",
      "date": 1694337582847
    },
    {
      "type": "edit",
      "id": "463aaf5b0facac98",
      "item": {
        "type": "video",
        "id": "463aaf5b0facac98",
        "text": "YOUTUBE"
      },
      "date": 1694337592452
    },
    {
      "type": "edit",
      "id": "463aaf5b0facac98",
      "item": {
        "type": "video",
        "id": "463aaf5b0facac98",
        "text": "YOUTUBE https://youtu.be/"
      },
      "date": 1694337599406
    },
    {
      "type": "edit",
      "id": "463aaf5b0facac98",
      "item": {
        "type": "video",
        "id": "463aaf5b0facac98",
        "text": "YOUTUBE DsA3MNlz6BU"
      },
      "date": 1694337610010
    },
    {
      "type": "edit",
      "id": "292918457c637cad",
      "item": {
        "type": "paragraph",
        "id": "292918457c637cad",
        "text": "Parsing all Open Source Elm Code"
      },
      "date": 1694337623935
    },
    {
      "type": "edit",
      "id": "292918457c637cad",
      "item": {
        "type": "paragraph",
        "id": "292918457c637cad",
        "text": "Parsing all Open Source Elm Code [https://blog.mi.hdm-stuttgart.de/index.php/2018/09/01/parsing-all-open-source-elm-code/ page]"
      },
      "date": 1694337661459
    },
    {
      "item": {
        "type": "factory",
        "id": "f31886264c43a713"
      },
      "id": "f31886264c43a713",
      "type": "add",
      "after": "463aaf5b0facac98",
      "date": 1694337678370
    },
    {
      "type": "edit",
      "id": "f31886264c43a713",
      "item": {
        "type": "paragraph",
        "id": "f31886264c43a713",
        "text": "Parsing all Open Source Elm Code"
      },
      "date": 1694337681457
    },
    {
      "type": "edit",
      "id": "f31886264c43a713",
      "item": {
        "type": "paragraph",
        "id": "f31886264c43a713",
        "text": "The problem is that Github works on the text level. All the code is just a huge collection of text files. It would be much more useful if we could operate on the structure which the text represents. Instead of searching for all files which contain the string “List.map” we could precisely search for all source files which actually contain a reference to the List.map function."
      },
      "date": 1694337694427
    },
    {
      "id": "f31886264c43a713",
      "type": "move",
      "order": [
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98"
      ],
      "date": 1694337696606
    },
    {
      "item": {
        "type": "factory",
        "id": "1465910e21897571"
      },
      "id": "1465910e21897571",
      "type": "add",
      "after": "463aaf5b0facac98",
      "date": 1694337738514
    },
    {
      "id": "1465910e21897571",
      "type": "move",
      "order": [
        "1465910e21897571",
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98"
      ],
      "date": 1694337741294
    },
    {
      "type": "edit",
      "id": "1465910e21897571",
      "item": {
        "type": "paragraph",
        "id": "1465910e21897571",
        "text": "⇒ [[Structure]]"
      },
      "date": 1694337756033
    },
    {
      "item": {
        "type": "factory",
        "id": "385f4f473f432249"
      },
      "id": "385f4f473f432249",
      "type": "add",
      "after": "463aaf5b0facac98",
      "date": 1694337801810
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "In James algebra, there are no instances of counting, ordering or grouping because there is no imposition of structure other than that of containment. Importantly, only one axiom permits rearrangement of structure, the forte of string languages. The other two axioms (and most of the theorems) are void-based, they eliminate structure by erasure/deletion, by casting structure into void."
      },
      "date": 1694337804639
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "[[James Algebra]]"
      },
      "date": 1694337825049
    },
    {
      "type": "add",
      "id": "ef5cfc9565b117e4",
      "item": {
        "type": "paragraph",
        "id": "ef5cfc9565b117e4",
        "text": "In James algebra, there are no instances of counting, ordering or grouping because there is no imposition of structure other than that of containment. Importantly, only one axiom permits rearrangement of structure, the forte of string languages. The other two axioms (and most of the theorems) are void-based, they eliminate structure by erasure/deletion, by casting structure into void."
      },
      "after": "385f4f473f432249",
      "date": 1694337827155
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "⇒ [[James Algebra]]"
      },
      "date": 1694337836092
    },
    {
      "item": {
        "type": "factory",
        "id": "bdc8789e1c83b232"
      },
      "id": "bdc8789e1c83b232",
      "type": "add",
      "after": "ef5cfc9565b117e4",
      "date": 1694338168339
    },
    {
      "type": "edit",
      "id": "bdc8789e1c83b232",
      "item": {
        "type": "paragraph",
        "id": "bdc8789e1c83b232",
        "text": "\nHSU, Robert W., 1968. Review: A New String-Manipulating Language. Computers and the Humanities. Online. 1968. Vol. 2, no. 5, p. 256–262. Available from: http://www.jstor.org/stable/30199284\n"
      },
      "date": 1694338171096
    },
    {
      "item": {
        "type": "factory",
        "id": "83dc2a652526bf05"
      },
      "id": "83dc2a652526bf05",
      "type": "add",
      "after": "bdc8789e1c83b232",
      "date": 1694338243057
    },
    {
      "id": "83dc2a652526bf05",
      "type": "move",
      "order": [
        "1465910e21897571",
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98",
        "385f4f473f432249",
        "ef5cfc9565b117e4",
        "83dc2a652526bf05",
        "bdc8789e1c83b232"
      ],
      "date": 1694338245775
    },
    {
      "type": "edit",
      "id": "83dc2a652526bf05",
      "item": {
        "type": "reference",
        "id": "83dc2a652526bf05",
        "site": "wiki.ralfbarkow.ch",
        "slug": "iconic-arithmetic",
        "title": "Iconic Arithmetic",
        "text": "Well, the end of a seven year project. [[William Bricken]] recently met a correspondence friend for the first time. He immediately asked: “Why can’t you write a small book?”"
      },
      "date": 1694338247967
    },
    {
      "type": "edit",
      "id": "83dc2a652526bf05",
      "item": {
        "type": "reference",
        "id": "83dc2a652526bf05",
        "site": "wiki.ralfbarkow.ch",
        "slug": "iconic-arithmetic",
        "title": "Iconic Arithmetic",
        "text": "Volume I, p. 138"
      },
      "date": 1694338276610
    },
    {
      "type": "edit",
      "id": "bdc8789e1c83b232",
      "item": {
        "type": "paragraph",
        "id": "bdc8789e1c83b232",
        "text": "HSU, Robert W., 1968. Review: A New String-Manipulating Language. Computers and the Humanities. Online. 1968. Vol. 2, no. 5, p. 256–262. Available from: http://www.jstor.org/stable/30199284\n"
      },
      "date": 1694343842786
    },
    {
      "item": {
        "type": "factory",
        "id": "09a695869dfa9bc6"
      },
      "id": "09a695869dfa9bc6",
      "type": "add",
      "after": "bdc8789e1c83b232",
      "date": 1694344779394
    },
    {
      "type": "edit",
      "id": "09a695869dfa9bc6",
      "item": {
        "type": "paragraph",
        "id": "09a695869dfa9bc6",
        "text": "\nFORTE, Allen, 1967. The Programming Language SNOBOL3: An Introduction. Computers and the Humanities. 1967. Vol. 1, no. 5, p. 157–163. \n"
      },
      "date": 1694344784099
    },
    {
      "item": {
        "type": "factory",
        "id": "8dcb085e61365993"
      },
      "id": "8dcb085e61365993",
      "type": "add",
      "after": "09a695869dfa9bc6",
      "date": 1694344795153
    },
    {
      "type": "edit",
      "id": "8dcb085e61365993",
      "item": {
        "type": "paragraph",
        "id": "8dcb085e61365993",
        "text": "⇒ [[Symbol Manipulation]]"
      },
      "date": 1694344806452
    },
    {
      "item": {
        "type": "factory",
        "id": "7e203423fa55893a"
      },
      "id": "7e203423fa55893a",
      "type": "add",
      "after": "8dcb085e61365993",
      "date": 1694345930276
    },
    {
      "type": "edit",
      "id": "7e203423fa55893a",
      "item": {
        "type": "paragraph",
        "id": "7e203423fa55893a",
        "text": "\nGIAMMARRESI, Dora and RESTIVO, Antonio, 1997. Two-Dimensional Languages. In: ROZENBERG, Grzegorz and SALOMAA, Arto (eds.), Handbook of Formal Languages. Online. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 215–267. [Accessed 10 September 2023]. ISBN 978-3-642-63859-6. \n"
      },
      "date": 1694345932061
    },
    {
      "type": "edit",
      "id": "7e203423fa55893a",
      "item": {
        "type": "paragraph",
        "id": "7e203423fa55893a",
        "text": "GIAMMARRESI, Dora and RESTIVO, Antonio, 1997. Two-Dimensional Languages. In: ROZENBERG, Grzegorz and SALOMAA, Arto (eds.), Handbook of Formal Languages.. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 215–267. [Accessed 10 September 2023]. ISBN 978-3-642-63859-6. \n"
      },
      "date": 1694345943214
    },
    {
      "type": "edit",
      "id": "7e203423fa55893a",
      "item": {
        "type": "paragraph",
        "id": "7e203423fa55893a",
        "text": "GIAMMARRESI, Dora and RESTIVO, Antonio, 1997. Two-Dimensional Languages. In: ROZENBERG, Grzegorz and SALOMAA, Arto (eds.), Handbook of Formal Languages. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 215–267. [Accessed 10 September 2023]. ISBN 978-3-642-63859-6. \n"
      },
      "date": 1694345947230
    },
    {
      "type": "edit",
      "id": "7e203423fa55893a",
      "item": {
        "type": "paragraph",
        "id": "7e203423fa55893a",
        "text": "GIAMMARRESI, Dora and RESTIVO, Antonio, 1997. Two-Dimensional Languages. In: ROZENBERG, Grzegorz and SALOMAA, Arto (eds.), Handbook of Formal Languages. Berlin, Heidelberg: Springer Berlin Heidelberg. p. 215–267. [Accessed 10 September 2023]. ISBN 978-3-642-63859-6."
      },
      "date": 1694345972292
    },
    {
      "type": "add",
      "id": "d68007818c32d728",
      "item": {
        "type": "paragraph",
        "id": "d68007818c32d728",
        "text": "> As a primary requirement, we would like that the class of recognizable picture languages includes in some sense the class of recognizable string languages."
      },
      "after": "7e203423fa55893a",
      "date": 1694345973674
    },
    {
      "type": "edit",
      "id": "d68007818c32d728",
      "item": {
        "type": "markdown",
        "id": "d68007818c32d728",
        "text": "> As a primary requirement, we would like that the class of recognizable picture languages includes in some sense the class of recognizable string languages."
      },
      "date": 1694345974808
    },
    {
      "item": {
        "type": "factory",
        "id": "b117280fc60e7c80"
      },
      "id": "b117280fc60e7c80",
      "type": "add",
      "after": "d68007818c32d728",
      "date": 1694346002923
    },
    {
      "type": "edit",
      "id": "b117280fc60e7c80",
      "item": {
        "type": "paragraph",
        "id": "b117280fc60e7c80",
        "text": "⇒ [[String Languages]]"
      },
      "date": 1694346011533
    },
    {
      "id": "ef5cfc9565b117e4",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346023946
    },
    {
      "id": "83dc2a652526bf05",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346043118
    },
    {
      "id": "bdc8789e1c83b232",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346045338
    },
    {
      "id": "09a695869dfa9bc6",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346047293
    },
    {
      "type": "remove",
      "id": "8dcb085e61365993",
      "date": 1694346060191
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "⇒ [[James Algebra]] ⇒ [[Symbol Manipulation]]"
      },
      "date": 1694346061020
    },
    {
      "id": "7e203423fa55893a",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346064823
    },
    {
      "id": "d68007818c32d728",
      "type": "remove",
      "removedTo": {
        "page": "String Languages"
      },
      "date": 1694346067193
    },
    {
      "type": "remove",
      "id": "b117280fc60e7c80",
      "date": 1694346071511
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "⇒ [[James Algebra]] ⇒ [[Symbol Manipulation]] ⇒ [[String Languages]]"
      },
      "date": 1694346072543
    },
    {
      "type": "add",
      "id": "fa93ccdb6aa7fc6f",
      "item": {
        "type": "paragraph",
        "id": "fa93ccdb6aa7fc6f",
        "text": "⇒ [[Navigation]]"
      },
      "after": "385f4f473f432249",
      "date": 1694346412137
    },
    {
      "type": "add",
      "id": "9fd807671f005db0",
      "item": {
        "type": "paragraph",
        "id": "9fd807671f005db0",
        "text": "\nElm-app-url: A simpler way of parsing URLs "
      },
      "after": "fa93ccdb6aa7fc6f",
      "date": 1694347085048
    },
    {
      "type": "edit",
      "id": "9fd807671f005db0",
      "item": {
        "type": "paragraph",
        "id": "9fd807671f005db0",
        "text": "Elm-app-url: A simpler way of parsing URLs [https://discourse.elm-lang.org/t/elm-app-url-a-simpler-way-of-parsing-urls/8903/1 page]"
      },
      "date": 1694347098660
    },
    {
      "item": {
        "type": "factory",
        "id": "4df44c9b248524d1"
      },
      "id": "4df44c9b248524d1",
      "type": "add",
      "after": "9fd807671f005db0",
      "date": 1694347329975
    },
    {
      "type": "edit",
      "id": "4df44c9b248524d1",
      "item": {
        "type": "video",
        "id": "4df44c9b248524d1",
        "text": "YOUTUBE syP2I-t-owc"
      },
      "date": 1694347339953
    },
    {
      "type": "edit",
      "id": "4df44c9b248524d1",
      "item": {
        "type": "video",
        "id": "4df44c9b248524d1",
        "text": "YOUTUBE syP2I-t-owc\nIntroducing elm-app-url"
      },
      "date": 1694347359523
    },
    {
      "type": "edit",
      "id": "4df44c9b248524d1",
      "item": {
        "type": "video",
        "id": "4df44c9b248524d1",
        "text": "YOUTUBE syP2I-t-owc\n[[Simon Lydell]], Introducing elm-app-url"
      },
      "date": 1694347372775
    },
    {
      "item": {
        "type": "factory",
        "id": "ee031f9d4311c487"
      },
      "id": "ee031f9d4311c487",
      "type": "add",
      "after": "4df44c9b248524d1",
      "date": 1694347454989
    },
    {
      "type": "edit",
      "id": "ee031f9d4311c487",
      "item": {
        "type": "paragraph",
        "id": "ee031f9d4311c487",
        "text": " How to extend with wiki-style links? #3 "
      },
      "date": 1694347458469
    },
    {
      "type": "edit",
      "id": "ee031f9d4311c487",
      "item": {
        "type": "paragraph",
        "id": "ee031f9d4311c487",
        "text": " How to extend with wiki-style links? #3 [https://github.com/pablohirafuji/elm-markdown/issues/3 page]"
      },
      "date": 1694347466985
    },
    {
      "type": "edit",
      "id": "ee031f9d4311c487",
      "item": {
        "type": "paragraph",
        "id": "ee031f9d4311c487",
        "text": "How to extend with wiki-style links? #3 [https://github.com/pablohirafuji/elm-markdown/issues/3 page]"
      },
      "date": 1694347471524
    },
    {
      "id": "ee031f9d4311c487",
      "type": "remove",
      "removedTo": {
        "page": "UrlRequest"
      },
      "date": 1694347708342
    },
    {
      "id": "ee031f9d4311c487",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ee031f9d4311c487",
        "text": "How to extend with wiki-style links? #3 [https://github.com/pablohirafuji/elm-markdown/issues/3 page]"
      },
      "after": "4df44c9b248524d1",
      "attribution": {
        "page": "UrlRequest"
      },
      "date": 1694347724438
    },
    {
      "item": {
        "type": "factory",
        "id": "7d4d03a0728b86e1"
      },
      "id": "7d4d03a0728b86e1",
      "type": "add",
      "after": "ee031f9d4311c487",
      "date": 1694351755839
    },
    {
      "type": "edit",
      "id": "7d4d03a0728b86e1",
      "item": {
        "type": "paragraph",
        "id": "7d4d03a0728b86e1",
        "text": "Notice that changing the protocol from https to http is considered a different domain! (And vice versa!)"
      },
      "date": 1694351759453
    },
    {
      "type": "edit",
      "id": "7d4d03a0728b86e1",
      "item": {
        "type": "paragraph",
        "id": "7d4d03a0728b86e1",
        "text": "Notice that changing the protocol from https to http is considered a different domain! (And vice versa!) [https://package.elm-lang.org/packages/elm/browser/latest/Browser#UrlRequest page]"
      },
      "date": 1694351767822
    },
    {
      "item": {
        "type": "factory",
        "id": "7184585c762c482f"
      },
      "id": "7184585c762c482f",
      "type": "add",
      "after": "7d4d03a0728b86e1",
      "date": 1694351781752
    },
    {
      "type": "edit",
      "id": "7184585c762c482f",
      "item": {
        "type": "paragraph",
        "id": "7184585c762c482f",
        "text": "⇒ [[Render Story]]"
      },
      "date": 1694351793320
    },
    {
      "id": "7184585c762c482f",
      "type": "move",
      "order": [
        "1465910e21897571",
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98",
        "385f4f473f432249",
        "fa93ccdb6aa7fc6f",
        "9fd807671f005db0",
        "4df44c9b248524d1",
        "7184585c762c482f",
        "ee031f9d4311c487",
        "7d4d03a0728b86e1"
      ],
      "date": 1694351795642
    },
    {
      "type": "edit",
      "id": "7184585c762c482f",
      "item": {
        "type": "paragraph",
        "id": "7184585c762c482f",
        "text": "⇒ [[Render Story]] ⇒ [[Variants of Story Item Types]]"
      },
      "date": 1694351842502
    },
    {
      "type": "edit",
      "id": "7184585c762c482f",
      "item": {
        "type": "paragraph",
        "id": "7184585c762c482f",
        "text": "⇒ [[Render Story]] ⇒ [[Variants of Story Item Types]]  ⇒ [[Items based on Content Type]]"
      },
      "date": 1694351879998
    },
    {
      "item": {
        "type": "factory",
        "id": "88ce1f201dd4227b"
      },
      "id": "88ce1f201dd4227b",
      "type": "add",
      "after": "7d4d03a0728b86e1",
      "date": 1694352081253
    },
    {
      "type": "edit",
      "id": "88ce1f201dd4227b",
      "item": {
        "type": "paragraph",
        "id": "88ce1f201dd4227b",
        "text": "⇒ [[Markdown]]: Dillinger [https://dillinger.io/ site]"
      },
      "date": 1694352101943
    },
    {
      "type": "edit",
      "id": "88ce1f201dd4227b",
      "item": {
        "type": "paragraph",
        "id": "88ce1f201dd4227b",
        "text": "⇒ [[Markdown]]: Dillinger [https://dillinger.io/ site] ⇒ [[Literate Tools]]"
      },
      "date": 1694352265114
    },
    {
      "type": "edit",
      "id": "88ce1f201dd4227b",
      "item": {
        "type": "paragraph",
        "id": "88ce1f201dd4227b",
        "text": "⇒ [[Markdown]]: Dillinger [https://dillinger.io/ site], [https://github.com/joemccann/dillinger#dillinger github] ⇒ [[Literate Tools]]"
      },
      "date": 1694352388623
    },
    {
      "type": "add",
      "id": "0105b451eae3e361",
      "item": {
        "type": "paragraph",
        "id": "0105b451eae3e361",
        "text": "⇒ [[Breakdance]]"
      },
      "after": "88ce1f201dd4227b",
      "date": 1694352407213
    },
    {
      "item": {
        "type": "factory",
        "id": "6522f95084e6eceb"
      },
      "id": "6522f95084e6eceb",
      "type": "add",
      "after": "0105b451eae3e361",
      "date": 1694357662167
    },
    {
      "type": "edit",
      "id": "6522f95084e6eceb",
      "item": {
        "type": "pagefold",
        "id": "6522f95084e6eceb",
        "text": "~"
      },
      "date": 1694357666836
    },
    {
      "item": {
        "type": "factory",
        "id": "4f064f1cb868bdef"
      },
      "id": "4f064f1cb868bdef",
      "type": "add",
      "after": "6522f95084e6eceb",
      "date": 1694357668177
    },
    {
      "type": "edit",
      "id": "4f064f1cb868bdef",
      "item": {
        "type": "paragraph",
        "id": "4f064f1cb868bdef",
        "text": "⇒ [[Consensual Hallucination]]"
      },
      "date": 1694357678203
    },
    {
      "type": "edit",
      "id": "4f064f1cb868bdef",
      "item": {
        "type": "paragraph",
        "id": "4f064f1cb868bdef",
        "text": "⇒ [[Consensual Hallucination]] ⇒ [[Hallucination]]"
      },
      "date": 1694358122612
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "⇒ [[Boundary Algebar]] ⇒ [[Calculus]] ⇒ [[James Algebra]] ⇒ [[Symbol Manipulation]] ⇒ [[String Languages]]"
      },
      "date": 1694358172057
    },
    {
      "type": "edit",
      "id": "385f4f473f432249",
      "item": {
        "type": "paragraph",
        "id": "385f4f473f432249",
        "text": "⇒ [[Boundary Algebra]] ⇒ [[Calculus]] ⇒ [[James Algebra]] ⇒ [[Symbol Manipulation]] ⇒ [[String Languages]]"
      },
      "date": 1694358180731
    },
    {
      "item": {
        "type": "factory",
        "id": "1fc4d6bdc2569276"
      },
      "id": "1fc4d6bdc2569276",
      "type": "add",
      "after": "4f064f1cb868bdef",
      "date": 1694358404447
    },
    {
      "type": "edit",
      "id": "1fc4d6bdc2569276",
      "item": {
        "type": "paragraph",
        "id": "1fc4d6bdc2569276",
        "text": "\nKAUFFMAN, Louis H., 2015. Self-reference, biologic and the structure of reproduction. Progress in Biophysics and Molecular Biology. Online. 1 December 2015. Vol. 119, no. 3, p. 382–409. [Accessed 10 September 2023]. DOI 10.1016/j.pbiomolbio.2015.06.015. In this paper we explore the boundary shared by biology and formal systems.\n"
      },
      "date": 1694358406507
    },
    {
      "type": "edit",
      "id": "1fc4d6bdc2569276",
      "item": {
        "type": "paragraph",
        "id": "1fc4d6bdc2569276",
        "text": "KAUFFMAN, Louis H., 2015. Self-reference, biologic and the structure of reproduction. Progress in Biophysics and Molecular Biology. 1 December 2015. Vol. 119, no. 3, p. 382–409. [Accessed 10 September 2023]. DOI 10.1016/j.pbiomolbio.2015.06.015. In this paper we explore the boundary shared by biology and formal systems.\n"
      },
      "date": 1694358413653
    },
    {
      "item": {
        "type": "factory",
        "id": "32c8a7c40e8b9180"
      },
      "id": "32c8a7c40e8b9180",
      "type": "add",
      "after": "1fc4d6bdc2569276",
      "date": 1694358430535
    },
    {
      "id": "32c8a7c40e8b9180",
      "type": "move",
      "order": [
        "1465910e21897571",
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98",
        "385f4f473f432249",
        "fa93ccdb6aa7fc6f",
        "9fd807671f005db0",
        "4df44c9b248524d1",
        "7184585c762c482f",
        "ee031f9d4311c487",
        "7d4d03a0728b86e1",
        "88ce1f201dd4227b",
        "0105b451eae3e361",
        "6522f95084e6eceb",
        "4f064f1cb868bdef",
        "32c8a7c40e8b9180",
        "1fc4d6bdc2569276"
      ],
      "date": 1694358432222
    },
    {
      "type": "edit",
      "id": "32c8a7c40e8b9180",
      "item": {
        "type": "paragraph",
        "id": "32c8a7c40e8b9180",
        "text": "An"
      },
      "date": 1694358441842
    },
    {
      "type": "edit",
      "id": "32c8a7c40e8b9180",
      "item": {
        "type": "paragraph",
        "id": "32c8a7c40e8b9180",
        "text": "# An introduction to boundary logic with the losp deductive engine"
      },
      "date": 1694358449971
    },
    {
      "type": "edit",
      "id": "32c8a7c40e8b9180",
      "item": {
        "type": "markdown",
        "id": "32c8a7c40e8b9180",
        "text": "# An introduction to boundary logic with the losp deductive engine"
      },
      "date": 1694358451756
    },
    {
      "type": "edit",
      "id": "32c8a7c40e8b9180",
      "item": {
        "type": "markdown",
        "id": "32c8a7c40e8b9180",
        "text": "# An Introduction to Boundary Logic with the Losp Deductive Engine"
      },
      "date": 1694358463560
    },
    {
      "type": "edit",
      "id": "1fc4d6bdc2569276",
      "item": {
        "type": "paragraph",
        "id": "1fc4d6bdc2569276",
        "text": "BRICKEN, William M. and GULLICHSEN, E., 1990. An introduction to boundary logic with the losp deductive engine. Future Computing Systems. 1990. Vol. 2, no. 4, p. 299–375."
      },
      "date": 1694358479067
    },
    {
      "type": "add",
      "id": "7e34d3eaac773378",
      "item": {
        "type": "paragraph",
        "id": "7e34d3eaac773378",
        "text": "KAUFFMAN, Louis H., 2015. Self-reference, biologic and the structure of reproduction. Progress in Biophysics and Molecular Biology. 1 December 2015. Vol. 119, no. 3, p. 382–409. [Accessed 10 September 2023]. DOI 10.1016/j.pbiomolbio.2015.06.015. In this paper we explore the boundary shared by biology and formal systems."
      },
      "after": "1fc4d6bdc2569276",
      "date": 1694358479858
    },
    {
      "type": "add",
      "id": "dfbff7bec666e537",
      "item": {
        "type": "paragraph",
        "id": "dfbff7bec666e537",
        "text": "elm-markdown"
      },
      "after": "0105b451eae3e361",
      "date": 1694376840448
    },
    {
      "type": "edit",
      "id": "dfbff7bec666e537",
      "item": {
        "type": "paragraph",
        "id": "dfbff7bec666e537",
        "text": "elm-markdown [https://github.com/dillonkearns/elm-markdown#elm-markdown github]"
      },
      "date": 1694377096893
    },
    {
      "type": "edit",
      "id": "dfbff7bec666e537",
      "item": {
        "type": "paragraph",
        "id": "dfbff7bec666e537",
        "text": "⇒ [[elm-markdown]] [https://github.com/dillonkearns/elm-markdown#elm-markdown github]"
      },
      "date": 1694377108578
    },
    {
      "type": "add",
      "id": "a0a07d6183e36228",
      "item": {
        "type": "paragraph",
        "id": "a0a07d6183e36228",
        "text": "cellme"
      },
      "after": "dfbff7bec666e537",
      "date": 1694377481652
    },
    {
      "type": "edit",
      "id": "a0a07d6183e36228",
      "item": {
        "type": "paragraph",
        "id": "a0a07d6183e36228",
        "text": "cellme [https://bburdette.github.io/cellme/mdcelldemo.html page]"
      },
      "date": 1694377492656
    },
    {
      "type": "edit",
      "id": "a0a07d6183e36228",
      "item": {
        "type": "paragraph",
        "id": "a0a07d6183e36228",
        "text": "cellme [https://bburdette.github.io/cellme/mdcelldemo.html page], [https://github.com/bburdette/cellme#cellme github]"
      },
      "date": 1694377514955
    },
    {
      "type": "add",
      "id": "3734b1b7c712f2b5",
      "item": {
        "type": "paragraph",
        "id": "3734b1b7c712f2b5",
        "text": "zknotes"
      },
      "after": "a0a07d6183e36228",
      "date": 1694377582403
    },
    {
      "type": "edit",
      "id": "3734b1b7c712f2b5",
      "item": {
        "type": "paragraph",
        "id": "3734b1b7c712f2b5",
        "text": "zknotes [https://github.com/bburdette/zknotes#zknotes github]"
      },
      "date": 1694377593130
    },
    {
      "type": "add",
      "id": "2c25dc579ca267e9",
      "item": {
        "type": "paragraph",
        "id": "2c25dc579ca267e9",
        "text": "remark-wiki-link"
      },
      "after": "ee031f9d4311c487",
      "date": 1694378333627
    },
    {
      "type": "edit",
      "id": "2c25dc579ca267e9",
      "item": {
        "type": "paragraph",
        "id": "2c25dc579ca267e9",
        "text": "remark-wiki-link [https://github.com/landakram/remark-wiki-link#remark-wiki-link github]"
      },
      "date": 1694378344469
    },
    {
      "type": "edit",
      "id": "2c25dc579ca267e9",
      "item": {
        "type": "paragraph",
        "id": "2c25dc579ca267e9",
        "text": "remark-wiki-link [https://github.com/landakram/remark-wiki-link#remark-wiki-link github] – Parse wiki-style links and render them as anchors"
      },
      "date": 1694378404240
    },
    {
      "item": {
        "type": "factory",
        "id": "c206e7e6f1ea6a61"
      },
      "id": "c206e7e6f1ea6a61",
      "type": "add",
      "after": "7e34d3eaac773378",
      "date": 1694378545102
    },
    {
      "type": "edit",
      "id": "c206e7e6f1ea6a61",
      "item": {
        "type": "reference",
        "id": "c206e7e6f1ea6a61",
        "site": "wiki.ralfbarkow.ch",
        "slug": "qualified-links",
        "title": "Qualified Links",
        "text": "[[Link]]s that indicate their relationship type. For example, here's a wiki-style link that includes a relationship qualifier (instead of \"OTHER-NOTE\", insert your usual link ID format):"
      },
      "date": 1694378574317
    },
    {
      "id": "c206e7e6f1ea6a61",
      "type": "move",
      "order": [
        "1465910e21897571",
        "292918457c637cad",
        "f31886264c43a713",
        "463aaf5b0facac98",
        "385f4f473f432249",
        "fa93ccdb6aa7fc6f",
        "9fd807671f005db0",
        "4df44c9b248524d1",
        "7184585c762c482f",
        "ee031f9d4311c487",
        "2c25dc579ca267e9",
        "c206e7e6f1ea6a61",
        "7d4d03a0728b86e1",
        "88ce1f201dd4227b",
        "0105b451eae3e361",
        "dfbff7bec666e537",
        "a0a07d6183e36228",
        "3734b1b7c712f2b5",
        "6522f95084e6eceb",
        "4f064f1cb868bdef",
        "32c8a7c40e8b9180",
        "1fc4d6bdc2569276",
        "7e34d3eaac773378"
      ],
      "date": 1694378580486
    },
    {
      "type": "edit",
      "id": "463aaf5b0facac98",
      "item": {
        "type": "video",
        "id": "463aaf5b0facac98",
        "text": "YOUTUBE DsA3MNlz6BU\nWhat can we learn from 750B GitHub events and 42 TB of code? - GitHub Universe 2017"
      },
      "date": 1694420281878
    },
    {
      "type": "edit",
      "id": "463aaf5b0facac98",
      "item": {
        "type": "video",
        "id": "463aaf5b0facac98",
        "text": "YOUTUBE DsA3MNlz6BU\n[[Felipe Hoffa]], What can we learn from 750B GitHub events and 42 TB of code? - GitHub Universe 2017"
      },
      "date": 1694420437095
    },
    {
      "type": "remove",
      "id": "292918457c637cad",
      "date": 1694456964286
    },
    {
      "type": "edit",
      "id": "1465910e21897571",
      "item": {
        "type": "paragraph",
        "id": "1465910e21897571",
        "text": "⇒ [[Structure]]: Parsing all Open Source Elm Code [https://blog.mi.hdm-stuttgart.de/index.php/2018/09/01/parsing-all-open-source-elm-code/ page]"
      },
      "date": 1694456965873
    }
  ]
}