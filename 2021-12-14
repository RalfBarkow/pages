{
  "title": "2021-12-14",
  "story": [
    {
      "type": "paragraph",
      "id": "ee030d321ce20d74",
      "text": "[[Novelty Filters]], [[Binocular Rivalry]]"
    },
    {
      "type": "reference",
      "id": "43e531bdb1952920",
      "site": "wiki.ralfbarkow.ch",
      "slug": "thinking-different",
      "title": "Thinking Different",
      "text": "We think we've opened up a whole new way to use technology. This can happen when one takes some assumed requirement and reverse it. Wiki, for example, reversed the assumption that only the owner should edit the pages of a web site. Parser generators have traditionally been used to describe exactly what should be written and anything else is a \"syntax error\". Wiki allows writers to write what they think makes sense. With [[exploratory parsing]] we now have a way for the parser writer to discover what has been written after the fact. This inversion of control "
    },
    {
      "type": "reference",
      "id": "6fda2d298500b9f1",
      "site": "wiki.ralfbarkow.ch",
      "slug": "digital-methods-and-tools",
      "title": "Digital Methods and Tools",
      "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 103–113 [https://dmx.ralfbarkow.ch/filerepo/%2Fworkspace-349823%2FBerry%2C%20Fagerjord%202017%20-%20Digital%20humanities%20-%20103-113.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "876d5c786375c787",
      "text": "# Exploring as Opposed to Reading"
    },
    {
      "type": "paragraph",
      "id": "c308be743b4f0b51",
      "text": "botwhytho via [https://discord.com/channels/729445214812504107/735945764597006466/920188486051569714 discord]\nI would describe it as exploring as opposed to reading, obviously there will be some code reading but a lot more will be following senders and implementors to get you where you want. Such a search/exploration should start with one or multiple hypothesis to test. How do you think you could find the code that populates the toolbar that has the hamburger and other buttons/icons? When would that code be called"
    },
    {
      "type": "reference",
      "id": "e8ebb8fc600c97bb",
      "site": "wiki.ralfbarkow.ch",
      "slug": "exploratory-parsing",
      "title": "Exploratory Parsing",
      "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
    },
    {
      "type": "pagefold",
      "id": "92fd935136db6010",
      "text": "Federated Wiki"
    },
    {
      "type": "reference",
      "id": "ea11e8c83aa6ba97",
      "site": "ward.dojo.fed.wiki",
      "slug": "import-link-from-arrow",
      "title": "Import Link from Arrow",
      "text": "We test export as URL feature as another mechanism to [[Import from Arrow]]. Fork this page then add external links to the very long url the arrows app provides."
    },
    {
      "type": "reference",
      "id": "64f20c377e90d693",
      "site": "ward.dojo.fed.wiki",
      "slug": "marc--kerrys-process",
      "title": "Marc & Kerry's Process",
      "text": "Imported from Arrows: [https://arrows.app/#/import/json=eyJncmFwaCI6eyJub2RlcyI6W3siaWQiOiJuMCIsInBvc2l0aW9uIjp7IngiOjEyOS4yMDg3NzQ1ODM5NjM1NiwieSI6LTYuNjI0MzU4ODI1MTg0MDQ2fSwiY2FwdGlvbiI6Ik1vZGVscyIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6eyJib3JkZXItY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuMSIsInBvc2l0aW9uIjp7IngiOjM0NC43MTk1MjU1MTIzNjk0NCwieSI6MzY2LjY1MTIxMTM2MDEzNjR9LCJjYXB0aW9uIjoiQ2FzdWFsIExvb3AgRGlhZ3JhbSIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMiIsInBvc2l0aW9uIjp7IngiOjM0NC43MTk1MjU1MTIzNjk0LCJ5IjoxMTcuODAwODMxMjM2NTg5"
    },
    {
      "type": "paragraph",
      "id": "711f65bb2156f674",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1639447174269631NoqXa:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]"
    },
    {
      "type": "pagefold",
      "id": "202868efdf1ead65",
      "text": "Solving Economic Models with Python"
    },
    {
      "type": "paragraph",
      "id": "2cd96a6291e3ef49",
      "text": "[[Igor Letina]] via [https://twitter.com/IgorLetina/status/1470102518222966795 twitter]"
    },
    {
      "type": "markdown",
      "id": "684200a84ad05d63",
      "text": "> I am teaching a bachelor seminar called \"Solving Economic Models with Python\". The idea is to let students write a Python program that replicates, for different parameter values, the results of a recent paper. \n> \n> I was *really* impressed by my students this semester. "
    },
    {
      "type": "paragraph",
      "id": "987e76d0aba6cca4",
      "text": "Here is a demo of one program (shared with permission).\n\nIt replicates Shelegia and Motta (2021), \"The kill zone: Copying, acquisition and start-ups' direction of innovation\": https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html…\n\nYou can find the whole thing on [https://github.com/manuelbieri/shelegia_motta_2021 github]"
    },
    {
      "type": "paragraph",
      "id": "5990f7ec79fea650",
      "text": "Shelegia and Motta (2021) [https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html page]"
    },
    {
      "type": "paragraph",
      "id": "cd9114d5788b6222",
      "text": "As a \"book\", [[Igor Letina]] used the amazing (and free) resources from  Sargent and Stachurski:"
    },
    {
      "type": "paragraph",
      "id": "3914c0114fdefdd2",
      "text": "Python Programming for Economics and Finance [https://python-programming.quantecon.org/intro.html site]"
    },
    {
      "type": "paragraph",
      "id": "27fdbf909d69af4d",
      "text": "(plus some SymPy)."
    },
    {
      "type": "pagefold",
      "id": "7b013920c0abdad3",
      "text": "Lorin's Law"
    },
    {
      "type": "paragraph",
      "id": "26e164c896425387",
      "text": "[[Eric Dobbs]] via [https://twitter.com/dobbse/status/1470500282534711304?s=20 twitter]"
    },
    {
      "type": "markdown",
      "id": "b51d02b708489db2",
      "text": "> A counterfactual corollary of Lorin's Law \n@norootcause"
    },
    {
      "type": "paragraph",
      "id": "e93f6330a6c5f617",
      "text": "[[Tim Heckman]] via [https://twitter.com/theckman/status/1185233751028060161?s=20 twitter]"
    },
    {
      "type": "paragraph",
      "id": "6de30a67b465498a",
      "text": "Lorin's Law:\n\nOnce a system reaches a certain level of reliability, most major incidents will involve:\n\n- A manual intervention that was intended to mitigate a minor incident, or\n\n- Unexpected behavior of a subsystem whose primary purpose was to improve reliability\n\n#REdeployConf"
    },
    {
      "type": "pagefold",
      "id": "c3109e725bf4f8c2",
      "text": "feenk"
    },
    {
      "type": "paragraph",
      "id": "10462c924d0684d4",
      "text": "While implementing a balance tree, we detected a little problem in the algorithm.\n\nWe could write a failing assertion (see the debugger), but we still did not know what the problem was.\n\nThis is always an indication of a missing view into the problem.\n\n1/"
    },
    {
      "type": "html",
      "id": "987f786b63847596",
      "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCXHs2X0AcsE8Z?format=jpg&name=medium\"></center>"
    },
    {
      "type": "paragraph",
      "id": "1c6524b694c34f27",
      "text": "We already had a visualization of the tree, but it was not enough.\n\nAt a closer look, we noticed that we could add more information into the graph. So, we did.\n\nWe added for each node the max position found in the children. Here is viewing the graph from the debugger\n\n2/"
    },
    {
      "type": "html",
      "id": "2a7a27b2e6608b4e",
      "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCXXyjWYA0tB-Y?format=jpg&name=4096x4096\"></center>"
    },
    {
      "type": "paragraph",
      "id": "8dfa5a6181cdc597",
      "text": "What do you know!\n\nThe value of Max was not matching the max values in the children intervals.\n\nArmed with this observation, solving the problem was a few minutes away.\n\n3/"
    },
    {
      "type": "html",
      "id": "c6bdcb48dab34d77",
      "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCX6z8XIAYMvFN?format=jpg&name=4096x4096\"></center>"
    },
    {
      "type": "paragraph",
      "id": "4b5f617b8feab6eb",
      "text": "A few lessons.\n\nWriting a failing assertion was not enough to find the root cause. We still had to complement that with a visualization.\n\nThis only reinforces the idea that #MoldableDevelopment introduces a new feedback loop that complements existing ones, such as testing.\n\n4/"
    },
    {
      "type": "paragraph",
      "id": "ad1f8c2ee6d14744",
      "text": "We see these pattern over and over. Whenever we don’t know how to proceed, we know we don’t understand the problem. There is little point in trying to solve the problem before seeing it, so we stop and build a better view.\n\nThis is not waste. This is a multiplier.\n\n5/"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2021-12-14",
        "story": []
      },
      "date": 1639463906841
    },
    {
      "item": {
        "type": "factory",
        "id": "876d5c786375c787"
      },
      "id": "876d5c786375c787",
      "type": "add",
      "date": 1639463944431
    },
    {
      "type": "edit",
      "id": "876d5c786375c787",
      "item": {
        "type": "paragraph",
        "id": "876d5c786375c787",
        "text": "Exploring as Opposed to Reading"
      },
      "date": 1639463948921
    },
    {
      "item": {
        "type": "factory",
        "id": "0012303aee80cdc1"
      },
      "id": "0012303aee80cdc1",
      "type": "add",
      "after": "876d5c786375c787",
      "date": 1639463963342
    },
    {
      "type": "edit",
      "id": "0012303aee80cdc1",
      "item": {
        "type": "paragraph",
        "id": "0012303aee80cdc1",
        "text": "[https://discord.com/channels/729445214812504107/735945764597006466/920188486051569714 discord]"
      },
      "date": 1639463974142
    },
    {
      "item": {
        "type": "factory",
        "id": "c308be743b4f0b51"
      },
      "id": "c308be743b4f0b51",
      "type": "add",
      "after": "0012303aee80cdc1",
      "date": 1639463991872
    },
    {
      "type": "edit",
      "id": "c308be743b4f0b51",
      "item": {
        "type": "paragraph",
        "id": "c308be743b4f0b51",
        "text": "botwhytho — heute um 06:40 Uhr\nI would describe it as exploring as opposed to reading, obviously there will be some code reading but a lot more will be following senders and implementors to get you where you want. Such a search/exploration should start with one or multiple hypothesis to test. How do you think you could find the code that populates the toolbar that has the hamburger and other buttons/icons? When would that code be called"
      },
      "date": 1639463993297
    },
    {
      "item": {
        "type": "factory",
        "id": "92fd935136db6010"
      },
      "id": "92fd935136db6010",
      "type": "add",
      "after": "c308be743b4f0b51",
      "date": 1639470745845
    },
    {
      "type": "edit",
      "id": "92fd935136db6010",
      "item": {
        "type": "pagefold",
        "id": "92fd935136db6010",
        "text": "Federated Wiki"
      },
      "date": 1639470752431
    },
    {
      "item": {
        "type": "factory",
        "id": "ea11e8c83aa6ba97"
      },
      "id": "ea11e8c83aa6ba97",
      "type": "add",
      "after": "92fd935136db6010",
      "date": 1639470756240
    },
    {
      "type": "edit",
      "id": "ea11e8c83aa6ba97",
      "item": {
        "type": "reference",
        "id": "ea11e8c83aa6ba97",
        "site": "ward.dojo.fed.wiki",
        "slug": "import-link-from-arrow",
        "title": "Import Link from Arrow",
        "text": "We test export as URL feature as another mechanism to [[Import from Arrow]]. Fork this page then add external links to the very long url the arrows app provides."
      },
      "date": 1639470763860
    },
    {
      "item": {
        "type": "factory",
        "id": "64f20c377e90d693"
      },
      "id": "64f20c377e90d693",
      "type": "add",
      "after": "ea11e8c83aa6ba97",
      "date": 1639470773125
    },
    {
      "type": "edit",
      "id": "64f20c377e90d693",
      "item": {
        "type": "reference",
        "id": "64f20c377e90d693",
        "site": "ward.dojo.fed.wiki",
        "slug": "marc--kerrys-process",
        "title": "Marc & Kerry's Process",
        "text": "Imported from Arrows: [https://arrows.app/#/import/json=eyJncmFwaCI6eyJub2RlcyI6W3siaWQiOiJuMCIsInBvc2l0aW9uIjp7IngiOjEyOS4yMDg3NzQ1ODM5NjM1NiwieSI6LTYuNjI0MzU4ODI1MTg0MDQ2fSwiY2FwdGlvbiI6Ik1vZGVscyIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6eyJib3JkZXItY29sb3IiOiIjZjQ0ZTNiIn19LHsiaWQiOiJuMSIsInBvc2l0aW9uIjp7IngiOjM0NC43MTk1MjU1MTIzNjk0NCwieSI6MzY2LjY1MTIxMTM2MDEzNjR9LCJjYXB0aW9uIjoiQ2FzdWFsIExvb3AgRGlhZ3JhbSIsImxhYmVscyI6W10sInByb3BlcnRpZXMiOnt9LCJzdHlsZSI6e319LHsiaWQiOiJuMiIsInBvc2l0aW9uIjp7IngiOjM0NC43MTk1MjU1MTIzNjk0LCJ5IjoxMTcuODAwODMxMjM2NTg5"
      },
      "date": 1639470778101
    },
    {
      "item": {
        "type": "factory",
        "id": "711f65bb2156f674"
      },
      "id": "711f65bb2156f674",
      "type": "add",
      "after": "64f20c377e90d693",
      "date": 1639470902823
    },
    {
      "type": "edit",
      "id": "711f65bb2156f674",
      "item": {
        "type": "paragraph",
        "id": "711f65bb2156f674",
        "text": "[[Ward]] via [[matrix]]"
      },
      "date": 1639470918642
    },
    {
      "type": "edit",
      "id": "711f65bb2156f674",
      "item": {
        "type": "paragraph",
        "id": "711f65bb2156f674",
        "text": "[[Ward]] via [[https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1639447174269631NoqXa:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]]"
      },
      "date": 1639470933470
    },
    {
      "item": {
        "type": "factory",
        "id": "202868efdf1ead65"
      },
      "id": "202868efdf1ead65",
      "type": "add",
      "after": "711f65bb2156f674",
      "date": 1639471059845
    },
    {
      "type": "edit",
      "id": "202868efdf1ead65",
      "item": {
        "type": "pagefold",
        "id": "202868efdf1ead65",
        "text": "~"
      },
      "date": 1639471065322
    },
    {
      "item": {
        "type": "factory",
        "id": "3914c0114fdefdd2"
      },
      "id": "3914c0114fdefdd2",
      "type": "add",
      "after": "202868efdf1ead65",
      "date": 1639471066475
    },
    {
      "type": "edit",
      "id": "3914c0114fdefdd2",
      "item": {
        "type": "paragraph",
        "id": "3914c0114fdefdd2",
        "text": "Python Programming for Economics and Finance"
      },
      "date": 1639471069301
    },
    {
      "type": "edit",
      "id": "3914c0114fdefdd2",
      "item": {
        "type": "paragraph",
        "id": "3914c0114fdefdd2",
        "text": "Python Programming for Economics and Finance [https://python-programming.quantecon.org/intro.html site]"
      },
      "date": 1639471079397
    },
    {
      "item": {
        "type": "factory",
        "id": "2cd96a6291e3ef49"
      },
      "id": "2cd96a6291e3ef49",
      "type": "add",
      "after": "3914c0114fdefdd2",
      "date": 1639471262030
    },
    {
      "type": "edit",
      "id": "2cd96a6291e3ef49",
      "item": {
        "type": "paragraph",
        "id": "2cd96a6291e3ef49",
        "text": "Igor Letina"
      },
      "date": 1639471264408
    },
    {
      "id": "2cd96a6291e3ef49",
      "type": "move",
      "order": [
        "876d5c786375c787",
        "0012303aee80cdc1",
        "c308be743b4f0b51",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "3914c0114fdefdd2"
      ],
      "date": 1639471265734
    },
    {
      "type": "add",
      "id": "684200a84ad05d63",
      "item": {
        "type": "paragraph",
        "id": "684200a84ad05d63",
        "text": "I am teaching a bachelor seminar called \"Solving Economic Models with Python\". The idea is to let students write a Python program that replicates, for different parameter values, the results of a recent paper. \n\nI was *really* impressed by my students this semester. "
      },
      "after": "2cd96a6291e3ef49",
      "date": 1639471276994
    },
    {
      "type": "edit",
      "id": "2cd96a6291e3ef49",
      "item": {
        "type": "paragraph",
        "id": "2cd96a6291e3ef49",
        "text": "[[Igor Letina]] via [[https://twitter.com/IgorLetina/status/1470102518222966795 twitter]] "
      },
      "date": 1639471301952
    },
    {
      "type": "edit",
      "id": "2cd96a6291e3ef49",
      "item": {
        "type": "paragraph",
        "id": "2cd96a6291e3ef49",
        "text": "[[Igor Letina]] via [https://twitter.com/IgorLetina/status/1470102518222966795 twitter]"
      },
      "date": 1639471309858
    },
    {
      "type": "edit",
      "id": "684200a84ad05d63",
      "item": {
        "type": "paragraph",
        "id": "684200a84ad05d63",
        "text": "> I am teaching a bachelor seminar called \"Solving Economic Models with Python\". The idea is to let students write a Python program that replicates, for different parameter values, the results of a recent paper. \n\nI was *really* impressed by my students this semester. "
      },
      "date": 1639471315739
    },
    {
      "type": "edit",
      "id": "684200a84ad05d63",
      "item": {
        "type": "markdown",
        "id": "684200a84ad05d63",
        "text": "> I am teaching a bachelor seminar called \"Solving Economic Models with Python\". The idea is to let students write a Python program that replicates, for different parameter values, the results of a recent paper. \n\nI was *really* impressed by my students this semester. "
      },
      "date": 1639471316666
    },
    {
      "type": "edit",
      "id": "684200a84ad05d63",
      "item": {
        "type": "markdown",
        "id": "684200a84ad05d63",
        "text": "> I am teaching a bachelor seminar called \"Solving Economic Models with Python\". The idea is to let students write a Python program that replicates, for different parameter values, the results of a recent paper. \n> \n> I was *really* impressed by my students this semester. "
      },
      "date": 1639471322744
    },
    {
      "item": {
        "type": "factory",
        "id": "987e76d0aba6cca4"
      },
      "id": "987e76d0aba6cca4",
      "type": "add",
      "after": "3914c0114fdefdd2",
      "date": 1639471335396
    },
    {
      "type": "edit",
      "id": "987e76d0aba6cca4",
      "item": {
        "type": "paragraph",
        "id": "987e76d0aba6cca4",
        "text": "ere is a demo of one program (shared with permission).\n\nIt replicates Shelegia and Motta (2021), \"The kill zone: Copying, acquisition and start-ups' direction of innovation\": https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html…\n\nYou can find the whole thing on: https://github.com/manuelbieri/shelegia_motta_2021…"
      },
      "date": 1639471336878
    },
    {
      "id": "987e76d0aba6cca4",
      "type": "move",
      "order": [
        "876d5c786375c787",
        "0012303aee80cdc1",
        "c308be743b4f0b51",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "3914c0114fdefdd2"
      ],
      "date": 1639471339209
    },
    {
      "type": "edit",
      "id": "987e76d0aba6cca4",
      "item": {
        "type": "paragraph",
        "id": "987e76d0aba6cca4",
        "text": "Here is a demo of one program (shared with permission).\n\nIt replicates Shelegia and Motta (2021), \"The kill zone: Copying, acquisition and start-ups' direction of innovation\": https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html…\n\nYou can find the whole thing on: https://github.com/manuelbieri/shelegia_motta_2021…"
      },
      "date": 1639471348327
    },
    {
      "item": {
        "type": "factory",
        "id": "5990f7ec79fea650"
      },
      "id": "5990f7ec79fea650",
      "type": "add",
      "after": "3914c0114fdefdd2",
      "date": 1639471358153
    },
    {
      "type": "edit",
      "id": "5990f7ec79fea650",
      "item": {
        "type": "paragraph",
        "id": "5990f7ec79fea650",
        "text": "Shelegia and Motta (2021)"
      },
      "date": 1639471360862
    },
    {
      "id": "5990f7ec79fea650",
      "type": "move",
      "order": [
        "876d5c786375c787",
        "0012303aee80cdc1",
        "c308be743b4f0b51",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "3914c0114fdefdd2"
      ],
      "date": 1639471362352
    },
    {
      "type": "edit",
      "id": "5990f7ec79fea650",
      "item": {
        "type": "paragraph",
        "id": "5990f7ec79fea650",
        "text": "Shelegia and Motta (2021) [https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html page]"
      },
      "date": 1639471383792
    },
    {
      "type": "edit",
      "id": "711f65bb2156f674",
      "item": {
        "type": "paragraph",
        "id": "711f65bb2156f674",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1639447174269631NoqXa:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]"
      },
      "date": 1639471457313
    },
    {
      "type": "edit",
      "id": "202868efdf1ead65",
      "item": {
        "type": "pagefold",
        "id": "202868efdf1ead65",
        "text": "Solving Economic Models with Python"
      },
      "date": 1639471473791
    },
    {
      "type": "edit",
      "id": "987e76d0aba6cca4",
      "item": {
        "type": "paragraph",
        "id": "987e76d0aba6cca4",
        "text": "Here is a demo of one program (shared with permission).\n\nIt replicates Shelegia and Motta (2021), \"The kill zone: Copying, acquisition and start-ups' direction of innovation\": https://rawcdn.githack.com/manuelbieri/shelegia_motta_2021/5df2db1dde7ce219e36e560da6e606b5b83621a8/demo.html…\n\nYou can find the whole thing on [https://github.com/manuelbieri/shelegia_motta_2021 github]"
      },
      "date": 1639471570553
    },
    {
      "type": "add",
      "id": "cd9114d5788b6222",
      "item": {
        "type": "paragraph",
        "id": "cd9114d5788b6222",
        "text": "As a \"book\", I used the amazing (and free) resources from  Sargent and Stachurski:"
      },
      "after": "5990f7ec79fea650",
      "date": 1639471617121
    },
    {
      "type": "edit",
      "id": "cd9114d5788b6222",
      "item": {
        "type": "paragraph",
        "id": "cd9114d5788b6222",
        "text": "As a \"book\", [[Igor Letina]] used the amazing (and free) resources from  Sargent and Stachurski:"
      },
      "date": 1639471629337
    },
    {
      "item": {
        "type": "factory",
        "id": "27fdbf909d69af4d"
      },
      "id": "27fdbf909d69af4d",
      "type": "add",
      "after": "3914c0114fdefdd2",
      "date": 1639471646442
    },
    {
      "type": "edit",
      "id": "27fdbf909d69af4d",
      "item": {
        "type": "paragraph",
        "id": "27fdbf909d69af4d",
        "text": "(plus some SymPy)."
      },
      "date": 1639471648305
    },
    {
      "item": {
        "type": "factory",
        "id": "7b013920c0abdad3"
      },
      "id": "7b013920c0abdad3",
      "type": "add",
      "after": "27fdbf909d69af4d",
      "date": 1639471784812
    },
    {
      "type": "edit",
      "id": "7b013920c0abdad3",
      "item": {
        "type": "pagefold",
        "id": "7b013920c0abdad3",
        "text": "Lorin's Law"
      },
      "date": 1639471788172
    },
    {
      "item": {
        "type": "factory",
        "id": "26e164c896425387"
      },
      "id": "26e164c896425387",
      "type": "add",
      "after": "7b013920c0abdad3",
      "date": 1639471799576
    },
    {
      "type": "edit",
      "id": "26e164c896425387",
      "item": {
        "type": "paragraph",
        "id": "26e164c896425387",
        "text": "[[Eric Dobbs]] via ["
      },
      "date": 1639471811233
    },
    {
      "type": "edit",
      "id": "26e164c896425387",
      "item": {
        "type": "paragraph",
        "id": "26e164c896425387",
        "text": "[[Eric Dobbs]] via [https://twitter.com/dobbse/status/1470500282534711304?s=20 twitter]"
      },
      "date": 1639471824433
    },
    {
      "item": {
        "type": "factory",
        "id": "b51d02b708489db2"
      },
      "id": "b51d02b708489db2",
      "type": "add",
      "after": "26e164c896425387",
      "date": 1639471841441
    },
    {
      "type": "edit",
      "id": "b51d02b708489db2",
      "item": {
        "type": "paragraph",
        "id": "b51d02b708489db2",
        "text": "> A counterfactual corollary of Lorin's Law \n@norootcause"
      },
      "date": 1639471846472
    },
    {
      "type": "edit",
      "id": "b51d02b708489db2",
      "item": {
        "type": "markdown",
        "id": "b51d02b708489db2",
        "text": "> A counterfactual corollary of Lorin's Law \n@norootcause"
      },
      "date": 1639471847688
    },
    {
      "item": {
        "type": "factory",
        "id": "6de30a67b465498a"
      },
      "id": "6de30a67b465498a",
      "type": "add",
      "after": "b51d02b708489db2",
      "date": 1639471868480
    },
    {
      "type": "edit",
      "id": "6de30a67b465498a",
      "item": {
        "type": "paragraph",
        "id": "6de30a67b465498a",
        "text": "Lorin's Law:\n\nOnce a system reaches a certain level of reliability, most major incidents will involve:\n\n- A manual intervention that was intended to mitigate a minor incident, or\n\n- Unexpected behavior of a subsystem whose primary purpose was to improve reliability\n\n#REdeployConf"
      },
      "date": 1639471870036
    },
    {
      "item": {
        "type": "factory",
        "id": "e93f6330a6c5f617"
      },
      "id": "e93f6330a6c5f617",
      "type": "add",
      "after": "6de30a67b465498a",
      "date": 1639471881606
    },
    {
      "type": "edit",
      "id": "e93f6330a6c5f617",
      "item": {
        "type": "paragraph",
        "id": "e93f6330a6c5f617",
        "text": "[[Tim Heckman]] via [twitter]"
      },
      "date": 1639471890513
    },
    {
      "id": "e93f6330a6c5f617",
      "type": "move",
      "order": [
        "876d5c786375c787",
        "0012303aee80cdc1",
        "c308be743b4f0b51",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a"
      ],
      "date": 1639471893456
    },
    {
      "type": "edit",
      "id": "e93f6330a6c5f617",
      "item": {
        "type": "paragraph",
        "id": "e93f6330a6c5f617",
        "text": "[[Tim Heckman]] via [https://twitter.com/theckman/status/1185233751028060161?s=20 twitter]"
      },
      "date": 1639471911023
    },
    {
      "item": {
        "type": "factory",
        "id": "c3109e725bf4f8c2"
      },
      "id": "c3109e725bf4f8c2",
      "type": "add",
      "after": "6de30a67b465498a",
      "date": 1639472143176
    },
    {
      "type": "edit",
      "id": "c3109e725bf4f8c2",
      "item": {
        "type": "pagefold",
        "id": "c3109e725bf4f8c2",
        "text": "feenk"
      },
      "date": 1639472147057
    },
    {
      "item": {
        "type": "factory",
        "id": "10462c924d0684d4"
      },
      "id": "10462c924d0684d4",
      "type": "add",
      "after": "c3109e725bf4f8c2",
      "date": 1639472153632
    },
    {
      "type": "edit",
      "id": "10462c924d0684d4",
      "item": {
        "type": "paragraph",
        "id": "10462c924d0684d4",
        "text": "While implementing a balance tree, we detected a little problem in the algorithm.\n\nWe could write a failing assertion (see the debugger), but we still did not know what the problem was.\n\nThis is always an indication of a missing view into the problem.\n\n1/"
      },
      "date": 1639472155497
    },
    {
      "item": {
        "type": "factory",
        "id": "987f786b63847596"
      },
      "id": "987f786b63847596",
      "type": "add",
      "after": "10462c924d0684d4",
      "date": 1639472168590
    },
    {
      "type": "edit",
      "id": "987f786b63847596",
      "item": {
        "type": "html",
        "id": "987f786b63847596",
        "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCXHs2X0AcsE8Z?format=jpg&name=medium\"></center>"
      },
      "date": 1639472195393
    },
    {
      "item": {
        "type": "factory",
        "id": "1c6524b694c34f27"
      },
      "id": "1c6524b694c34f27",
      "type": "add",
      "after": "987f786b63847596",
      "date": 1639472270259
    },
    {
      "type": "edit",
      "id": "1c6524b694c34f27",
      "item": {
        "type": "paragraph",
        "id": "1c6524b694c34f27",
        "text": "We already had a visualization of the tree, but it was not enough.\n\nAt a closer look, we noticed that we could add more information into the graph. So, we did.\n\nWe added for each node the max position found in the children. Here is viewing the graph from the debugger\n\n2/"
      },
      "date": 1639472274098
    },
    {
      "item": {
        "type": "factory",
        "id": "31a034e263adf1de"
      },
      "id": "31a034e263adf1de",
      "type": "add",
      "after": "1c6524b694c34f27",
      "date": 1639472282769
    },
    {
      "type": "remove",
      "id": "31a034e263adf1de",
      "date": 1639472284858
    },
    {
      "item": {
        "type": "factory",
        "id": "2a7a27b2e6608b4e"
      },
      "id": "2a7a27b2e6608b4e",
      "type": "add",
      "after": "1c6524b694c34f27",
      "date": 1639472286083
    },
    {
      "type": "edit",
      "id": "2a7a27b2e6608b4e",
      "item": {
        "type": "html",
        "id": "2a7a27b2e6608b4e",
        "text": "<img src=\"https://pbs.twimg.com/media/FGCXXyjWYA0tB-Y?format=jpg&name=4096x4096\">"
      },
      "date": 1639472301484
    },
    {
      "type": "edit",
      "id": "2a7a27b2e6608b4e",
      "item": {
        "type": "html",
        "id": "2a7a27b2e6608b4e",
        "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCXXyjWYA0tB-Y?format=jpg&name=4096x4096\"></center>"
      },
      "date": 1639472334499
    },
    {
      "item": {
        "type": "factory",
        "id": "8dfa5a6181cdc597"
      },
      "id": "8dfa5a6181cdc597",
      "type": "add",
      "after": "2a7a27b2e6608b4e",
      "date": 1639472398102
    },
    {
      "type": "edit",
      "id": "8dfa5a6181cdc597",
      "item": {
        "type": "paragraph",
        "id": "8dfa5a6181cdc597",
        "text": "What do you know!\n\nThe value of Max was not matching the max values in the children intervals.\n\nArmed with this observation, solving the problem was a few minutes away.\n\n3/"
      },
      "date": 1639472402540
    },
    {
      "item": {
        "type": "factory",
        "id": "c6bdcb48dab34d77"
      },
      "id": "c6bdcb48dab34d77",
      "type": "add",
      "after": "8dfa5a6181cdc597",
      "date": 1639472411138
    },
    {
      "type": "edit",
      "id": "c6bdcb48dab34d77",
      "item": {
        "type": "html",
        "id": "c6bdcb48dab34d77",
        "text": "<center><img width=\"100%\" src=\"https://pbs.twimg.com/media/FGCX6z8XIAYMvFN?format=jpg&name=4096x4096\"></center>"
      },
      "date": 1639472438890
    },
    {
      "item": {
        "type": "factory",
        "id": "4b5f617b8feab6eb"
      },
      "id": "4b5f617b8feab6eb",
      "type": "add",
      "after": "c6bdcb48dab34d77",
      "date": 1639472466911
    },
    {
      "type": "edit",
      "id": "4b5f617b8feab6eb",
      "item": {
        "type": "paragraph",
        "id": "4b5f617b8feab6eb",
        "text": "A few lessons.\n\nWriting a failing assertion was not enough to find the root cause. We still had to complement that with a visualization.\n\nThis only reinforces the idea that #MoldableDevelopment introduces a new feedback loop that complements existing ones, such as testing.\n\n4/"
      },
      "date": 1639472468811
    },
    {
      "item": {
        "type": "factory",
        "id": "ad1f8c2ee6d14744"
      },
      "id": "ad1f8c2ee6d14744",
      "type": "add",
      "after": "4b5f617b8feab6eb",
      "date": 1639472476149
    },
    {
      "type": "edit",
      "id": "ad1f8c2ee6d14744",
      "item": {
        "type": "paragraph",
        "id": "ad1f8c2ee6d14744",
        "text": "We see these pattern over and over. Whenever we don’t know how to proceed, we know we don’t understand the problem. There is little point in trying to solve the problem before seeing it, so we stop and build a better view.\n\nThis is not waste. This is a multiplier.\n\n5/"
      },
      "date": 1639472477699
    },
    {
      "type": "edit",
      "id": "876d5c786375c787",
      "item": {
        "type": "paragraph",
        "id": "876d5c786375c787",
        "text": "# Exploring as Opposed to Reading"
      },
      "date": 1639472510189
    },
    {
      "type": "edit",
      "id": "876d5c786375c787",
      "item": {
        "type": "markdown",
        "id": "876d5c786375c787",
        "text": "# Exploring as Opposed to Reading"
      },
      "date": 1639472511534
    },
    {
      "type": "remove",
      "id": "0012303aee80cdc1",
      "date": 1639472516200
    },
    {
      "type": "edit",
      "id": "c308be743b4f0b51",
      "item": {
        "type": "paragraph",
        "id": "c308be743b4f0b51",
        "text": "botwhytho via [https://discord.com/channels/729445214812504107/735945764597006466/920188486051569714 discord]\nI would describe it as exploring as opposed to reading, obviously there will be some code reading but a lot more will be following senders and implementors to get you where you want. Such a search/exploration should start with one or multiple hypothesis to test. How do you think you could find the code that populates the toolbar that has the hamburger and other buttons/icons? When would that code be called"
      },
      "date": 1639472523731
    },
    {
      "item": {
        "type": "factory",
        "id": "e8ebb8fc600c97bb"
      },
      "id": "e8ebb8fc600c97bb",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639472747674
    },
    {
      "type": "edit",
      "id": "e8ebb8fc600c97bb",
      "item": {
        "type": "reference",
        "id": "e8ebb8fc600c97bb",
        "site": "wiki.ralfbarkow.ch",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "date": 1639472751353
    },
    {
      "id": "e8ebb8fc600c97bb",
      "type": "move",
      "order": [
        "876d5c786375c787",
        "c308be743b4f0b51",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639472759774
    },
    {
      "item": {
        "type": "factory",
        "id": "6fda2d298500b9f1"
      },
      "id": "6fda2d298500b9f1",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639476381207
    },
    {
      "type": "edit",
      "id": "6fda2d298500b9f1",
      "item": {
        "type": "reference",
        "id": "6fda2d298500b9f1",
        "site": "wiki.ralfbarkow.ch",
        "slug": "digital-methods-and-tools",
        "title": "Digital Methods and Tools",
        "text": "[[Berry, Fagerjord 2017 – Digital humanities]], p. 103–113 [https://dmx.ralfbarkow.ch/filerepo/%2Fworkspace-349823%2FBerry%2C%20Fagerjord%202017%20-%20Digital%20humanities%20-%20103-113.pdf pdf]"
      },
      "date": 1639476383506
    },
    {
      "id": "6fda2d298500b9f1",
      "type": "move",
      "order": [
        "6fda2d298500b9f1",
        "876d5c786375c787",
        "c308be743b4f0b51",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639476390663
    },
    {
      "item": {
        "type": "factory",
        "id": "4f2908e114a70503"
      },
      "id": "4f2908e114a70503",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639498549182
    },
    {
      "type": "edit",
      "id": "4f2908e114a70503",
      "item": {
        "type": "reference",
        "id": "4f2908e114a70503",
        "site": "wiki.ralfbarkow.ch",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "date": 1639498560908
    },
    {
      "id": "4f2908e114a70503",
      "type": "move",
      "order": [
        "6fda2d298500b9f1",
        "876d5c786375c787",
        "c308be743b4f0b51",
        "4f2908e114a70503",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639498584491
    },
    {
      "type": "remove",
      "id": "4f2908e114a70503",
      "date": 1639498590526
    },
    {
      "item": {
        "type": "factory",
        "id": "62f6b5199e216d0b"
      },
      "id": "62f6b5199e216d0b",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639498593205
    },
    {
      "type": "edit",
      "id": "62f6b5199e216d0b",
      "item": {
        "type": "reference",
        "id": "62f6b5199e216d0b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "exploratory-parsing",
        "title": "Exploratory Parsing",
        "text": "See AboutUs Getting Started blog post announcing the open-sourcing of this technology. [https://github.com/WardCunningham/devblog/blob/master/_posts/2011-07-03-getting-started-exploratory-parsing.markdown github]"
      },
      "date": 1639498604946
    },
    {
      "type": "remove",
      "id": "62f6b5199e216d0b",
      "date": 1639498608842
    },
    {
      "item": {
        "type": "factory",
        "id": "d2bb593d4dd0066d"
      },
      "id": "d2bb593d4dd0066d",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639498688200
    },
    {
      "type": "remove",
      "id": "d2bb593d4dd0066d",
      "date": 1639498696687
    },
    {
      "item": {
        "type": "factory",
        "id": "43e531bdb1952920"
      },
      "id": "43e531bdb1952920",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639500399078
    },
    {
      "type": "edit",
      "id": "43e531bdb1952920",
      "item": {
        "type": "reference",
        "id": "43e531bdb1952920",
        "site": "wiki.ralfbarkow.ch",
        "slug": "thinking-different",
        "title": "Thinking Different",
        "text": "We think we've opened up a whole new way to use technology. This can happen when one takes some assumed requirement and reverse it. Wiki, for example, reversed the assumption that only the owner should edit the pages of a web site. Parser generators have traditionally been used to describe exactly what should be written and anything else is a \"syntax error\". Wiki allows writers to write what they think makes sense. With exploratory parsing we now have a way for the parser writer to discover what has been written after the fact. This inversion of control "
      },
      "date": 1639500401143
    },
    {
      "id": "43e531bdb1952920",
      "type": "move",
      "order": [
        "43e531bdb1952920",
        "6fda2d298500b9f1",
        "876d5c786375c787",
        "c308be743b4f0b51",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639500409014
    },
    {
      "type": "edit",
      "id": "43e531bdb1952920",
      "item": {
        "type": "reference",
        "id": "43e531bdb1952920",
        "site": "wiki.ralfbarkow.ch",
        "slug": "thinking-different",
        "title": "Thinking Different",
        "text": "We think we've opened up a whole new way to use technology. This can happen when one takes some assumed requirement and reverse it. Wiki, for example, reversed the assumption that only the owner should edit the pages of a web site. Parser generators have traditionally been used to describe exactly what should be written and anything else is a \"syntax error\". Wiki allows writers to write what they think makes sense. With [[exploratory parsing]] we now have a way for the parser writer to discover what has been written after the fact. This inversion of control "
      },
      "date": 1639500438692
    },
    {
      "item": {
        "type": "factory",
        "id": "ee030d321ce20d74"
      },
      "id": "ee030d321ce20d74",
      "type": "add",
      "after": "ad1f8c2ee6d14744",
      "date": 1639505992560
    },
    {
      "type": "edit",
      "id": "ee030d321ce20d74",
      "item": {
        "type": "paragraph",
        "id": "ee030d321ce20d74",
        "text": "[[Novelty Filters]]"
      },
      "date": 1639505998774
    },
    {
      "id": "ee030d321ce20d74",
      "type": "move",
      "order": [
        "43e531bdb1952920",
        "6fda2d298500b9f1",
        "876d5c786375c787",
        "c308be743b4f0b51",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "ee030d321ce20d74",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639506020229
    },
    {
      "id": "ee030d321ce20d74",
      "type": "move",
      "order": [
        "ee030d321ce20d74",
        "43e531bdb1952920",
        "6fda2d298500b9f1",
        "876d5c786375c787",
        "c308be743b4f0b51",
        "e8ebb8fc600c97bb",
        "92fd935136db6010",
        "ea11e8c83aa6ba97",
        "64f20c377e90d693",
        "711f65bb2156f674",
        "202868efdf1ead65",
        "2cd96a6291e3ef49",
        "684200a84ad05d63",
        "987e76d0aba6cca4",
        "5990f7ec79fea650",
        "cd9114d5788b6222",
        "3914c0114fdefdd2",
        "27fdbf909d69af4d",
        "7b013920c0abdad3",
        "26e164c896425387",
        "b51d02b708489db2",
        "e93f6330a6c5f617",
        "6de30a67b465498a",
        "c3109e725bf4f8c2",
        "10462c924d0684d4",
        "987f786b63847596",
        "1c6524b694c34f27",
        "2a7a27b2e6608b4e",
        "8dfa5a6181cdc597",
        "c6bdcb48dab34d77",
        "4b5f617b8feab6eb",
        "ad1f8c2ee6d14744"
      ],
      "date": 1639506034953
    },
    {
      "type": "edit",
      "id": "ee030d321ce20d74",
      "item": {
        "type": "paragraph",
        "id": "ee030d321ce20d74",
        "text": "[[Novelty Filters]], [[Binocular Rivalry]]"
      },
      "date": 1639506312984
    }
  ]
}