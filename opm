{
  "title": "OPM",
  "story": [
    {
      "type": "paragraph",
      "id": "3f45f51de03fd322",
      "text": "Object-Process Methodology (OPM) has been developed at the [http://esml.iem.technion.ac.il/current-projects/ Enterprise Systems Modeling Laboratory at the Technion] led by [http://iew3.technion.ac.il/Home/Users/dori.phtml Dov Dori].  "
    },
    {
      "type": "paragraph",
      "id": "12e831ca74430924",
      "text": "In OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  "
    },
    {
      "type": "markdown",
      "id": "f26d004827a54d65",
      "text": ">A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness.   "
    },
    {
      "type": "html",
      "id": "1e2885e5226aa3e7",
      "text": "<blockquote>\nFunction, structure, and behavior are the three major facets of any system. Structure and behavior are two inseparable system aspects, as no system can be faithfully modeled without considering both in tandem.  \n</blockquote><blockquote>\nObject-Process Methodology (OPM) is a systems paradigm and language that combines structure-behavior co-design requirements with cognitive considerations. Based on formal mathematical foundations of graph grammars and a subset of natural language, OPM caters to human intuition in a bi-modal way via graphics and auto-generated natural language text. In a nutshell, OPM processes transform objects by creating them, consuming them, or changing their states. The concurrent representation of structure and behavior in the same, single diagram type is balanced, creating synergy whereby each aspect helps understanding the other. </blockquote>"
    },
    {
      "type": "html",
      "id": "7403a2982b40c11a",
      "text": "<blockquote>Dori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>"
    },
    {
      "type": "pagefold",
      "id": "51fee4628acacdd6",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "112ce21761583b38",
      "text": "Since 2019 there has been a web based application [https://www.opcloud.tech/ OPCloud]. It is clear that one must purchase a licence to use the full implementation. See [https://opcloud-trial.firebaseapp.com/login OPM login page]"
    },
    {
      "type": "pagefold",
      "id": "8ce3e72ccf195ead",
      "text": "."
    },
    {
      "type": "paragraph",
      "id": "b6ecd42d2485d868",
      "text": "The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/ http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil]."
    },
    {
      "type": "video",
      "id": "8927b3476d461432",
      "text": "YOUTUBE X8io71hTg8A\nMIT Intro to OPM by Dov Dori"
    },
    {
      "type": "paragraph",
      "id": "4982303fc9404aaf",
      "text": ""
    },
    {
      "type": "paragraph",
      "id": "9d1e3ac498a0b523",
      "text": "OPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing. "
    },
    {
      "type": "paragraph",
      "id": "a3613288159e93a0",
      "text": "Towards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. <i>Operational Semantics for Object-Process Methodology</i>. Dissertation, Haifa: Technion -- Israel Institute of Technology. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf]."
    },
    {
      "type": "paragraph",
      "id": "d52975f3b58ef12d",
      "text": "Towards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "OPM",
        "story": []
      },
      "date": 1408998915501
    },
    {
      "item": {
        "type": "factory",
        "id": "3f45f51de03fd322"
      },
      "id": "3f45f51de03fd322",
      "type": "add",
      "date": 1408998919150
    },
    {
      "type": "edit",
      "id": "3f45f51de03fd322",
      "item": {
        "type": "paragraph",
        "id": "3f45f51de03fd322",
        "text": "Object-Process Methodology (OPM) has been developed at the [http://esml.iem.technion.ac.il/current-projects/ EnterpriseSystems Modeling Laboratory at the Technion] led by [http://iew3.technion.ac.il/Home/Users/dori.phtml Dov Dori].  "
      },
      "date": 1408998933656
    },
    {
      "item": {
        "type": "paragraph",
        "id": "1e2885e5226aa3e7",
        "text": "\n<blockquote>\nFunction, structure, and behavior are the three major facets of any system. Structure and behavior are two inseparable system aspects, as no system can be faithfully modeled without considering both in tandem.  \n</blockquote><blockquote>\nObject-Process Methodology (OPM) is a systems paradigm and language that combines structure-behavior co-design requirements with cognitive considerations. Based on formal mathematical foundations of graph grammars and a subset of natural language, OPM caters to human intuition in a bi-modal way via graphics and auto-generated natural language text. In a nutshell, OPM processes transform objects by creating them, consuming them, or changing their states. The concurrent representation of structure and behavior in the same, single diagram type is balanced, creating synergy whereby each aspect helps understanding the other. \n\nDori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>\nIn OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil].\n\nOPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing.  \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "id": "1e2885e5226aa3e7",
      "type": "add",
      "after": "3f45f51de03fd322",
      "date": 1408998933693
    },
    {
      "type": "edit",
      "id": "1e2885e5226aa3e7",
      "item": {
        "type": "paragraph",
        "id": "1e2885e5226aa3e7",
        "text": "<blockquote>\nFunction, structure, and behavior are the three major facets of any system. Structure and behavior are two inseparable system aspects, as no system can be faithfully modeled without considering both in tandem.  \n</blockquote><blockquote>\nObject-Process Methodology (OPM) is a systems paradigm and language that combines structure-behavior co-design requirements with cognitive considerations. Based on formal mathematical foundations of graph grammars and a subset of natural language, OPM caters to human intuition in a bi-modal way via graphics and auto-generated natural language text. In a nutshell, OPM processes transform objects by creating them, consuming them, or changing their states. The concurrent representation of structure and behavior in the same, single diagram type is balanced, creating synergy whereby each aspect helps understanding the other. \n\nDori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>"
      },
      "date": 1408998948821
    },
    {
      "item": {
        "type": "paragraph",
        "id": "12e831ca74430924",
        "text": "\nIn OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil].\n\nOPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing.  \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "id": "12e831ca74430924",
      "type": "add",
      "after": "1e2885e5226aa3e7",
      "date": 1408998948864
    },
    {
      "type": "edit",
      "id": "12e831ca74430924",
      "item": {
        "type": "paragraph",
        "id": "12e831ca74430924",
        "text": "In OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil].\n\nOPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing.  \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "date": 1408998952836
    },
    {
      "type": "edit",
      "id": "12e831ca74430924",
      "item": {
        "type": "paragraph",
        "id": "12e831ca74430924",
        "text": "In OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/ ].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil]."
      },
      "date": 1408998985479
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9d1e3ac498a0b523",
        "text": "\n\nOPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing.  \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "id": "9d1e3ac498a0b523",
      "type": "add",
      "after": "12e831ca74430924",
      "date": 1408998985502
    },
    {
      "type": "edit",
      "id": "9d1e3ac498a0b523",
      "item": {
        "type": "paragraph",
        "id": "9d1e3ac498a0b523",
        "text": "\nOPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing.  \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "date": 1408998989110
    },
    {
      "type": "edit",
      "id": "12e831ca74430924",
      "item": {
        "type": "paragraph",
        "id": "12e831ca74430924",
        "text": "In OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/ http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil]."
      },
      "date": 1408999032500
    },
    {
      "type": "edit",
      "id": "9d1e3ac498a0b523",
      "item": {
        "type": "paragraph",
        "id": "9d1e3ac498a0b523",
        "text": "OPM is presented frequently at INCOSE meetings, where [https://www.incose.org/about/organization/bios/displayBio.aspx?bio_id=213273 Dori is an INCOSE Fellow].  Research continuing to extend OPM is ongoing. "
      },
      "date": 1408999052528
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a3613288159e93a0",
        "text": " \n\nTowards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. “Operational Semantics for Object-Process Methodology”. Dissertation, Haifa: Technion -- Israel Institute of Technology. http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf.\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "id": "a3613288159e93a0",
      "type": "add",
      "after": "9d1e3ac498a0b523",
      "date": 1408999052548
    },
    {
      "type": "edit",
      "id": "a3613288159e93a0",
      "item": {
        "type": "paragraph",
        "id": "a3613288159e93a0",
        "text": "Towards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. <i>Operational Semantics for Object-Process Methodology</i>. Dissertation, Haifa: Technion -- Israel Institute of Technology. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf ]."
      },
      "date": 1408999085476
    },
    {
      "item": {
        "type": "paragraph",
        "id": "d52975f3b58ef12d",
        "text": "\n\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "id": "d52975f3b58ef12d",
      "type": "add",
      "after": "a3613288159e93a0",
      "date": 1408999085533
    },
    {
      "type": "edit",
      "id": "d52975f3b58ef12d",
      "item": {
        "type": "paragraph",
        "id": "d52975f3b58ef12d",
        "text": "\nTowards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf."
      },
      "date": 1408999090529
    },
    {
      "type": "edit",
      "id": "a3613288159e93a0",
      "item": {
        "type": "paragraph",
        "id": "a3613288159e93a0",
        "text": "Towards an advancement of Model Driven Development, enhancing OPM with formal operational semantics provides a basis for developing an analysis and evaluation framework.  See Perelman, Valeria. 2011. <i>Operational Semantics for Object-Process Methodology</i>. Dissertation, Haifa: Technion -- Israel Institute of Technology. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf http://esml.iem.technion.ac.il/wp-content/uploads/2011/02/Lera-PhD-thesis-final.pdf]."
      },
      "date": 1408999113881
    },
    {
      "type": "edit",
      "id": "d52975f3b58ef12d",
      "item": {
        "type": "paragraph",
        "id": "d52975f3b58ef12d",
        "text": "Towards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf ."
      },
      "date": 1408999131106
    },
    {
      "type": "edit",
      "id": "d52975f3b58ef12d",
      "item": {
        "type": "paragraph",
        "id": "d52975f3b58ef12d",
        "text": "Towards reducing the complexity in sofwar systems, extending OPM for Domain Specific Languages is also underway.  See Bibliowicz, Arieh, and Dov Dori. 2013. “Creating Domain-Specific Modeling Languages with OPM/D: A Meta-Modeling Approach.” In Proceedings. Reykjavík, Iceland. [http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf http://esml.iem.technion.ac.il/wp-content/uploads/2011/07/2013-01-31-Metamodeling.pdf]."
      },
      "date": 1408999139548
    },
    {
      "type": "edit",
      "id": "3f45f51de03fd322",
      "item": {
        "type": "paragraph",
        "id": "3f45f51de03fd322",
        "text": "Object-Process Methodology (OPM) has been developed at the [http://esml.iem.technion.ac.il/current-projects/ Enterprise Systems Modeling Laboratory at the Technion] led by [http://iew3.technion.ac.il/Home/Users/dori.phtml Dov Dori].  "
      },
      "date": 1408999195970
    },
    {
      "type": "edit",
      "id": "1e2885e5226aa3e7",
      "item": {
        "type": "paragraph",
        "id": "1e2885e5226aa3e7",
        "text": "<blockquote>\nFunction, structure, and behavior are the three major facets of any system. Structure and behavior are two inseparable system aspects, as no system can be faithfully modeled without considering both in tandem.  \n</blockquote><blockquote>\nObject-Process Methodology (OPM) is a systems paradigm and language that combines structure-behavior co-design requirements with cognitive considerations. Based on formal mathematical foundations of graph grammars and a subset of natural language, OPM caters to human intuition in a bi-modal way via graphics and auto-generated natural language text. In a nutshell, OPM processes transform objects by creating them, consuming them, or changing their states. The concurrent representation of structure and behavior in the same, single diagram type is balanced, creating synergy whereby each aspect helps understanding the other. </blockquote>"
      },
      "date": 1409069190313
    },
    {
      "item": {
        "type": "paragraph",
        "id": "7403a2982b40c11a",
        "text": "\n\nDori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>"
      },
      "id": "7403a2982b40c11a",
      "type": "add",
      "after": "1e2885e5226aa3e7",
      "date": 1409069190333
    },
    {
      "type": "edit",
      "id": "7403a2982b40c11a",
      "item": {
        "type": "paragraph",
        "id": "7403a2982b40c11a",
        "text": "<blockquote>Dori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>"
      },
      "date": 1409069195907
    },
    {
      "item": {
        "type": "paragraph",
        "id": "f1a675e4a568a2e3",
        "text": ""
      },
      "id": "f1a675e4a568a2e3",
      "type": "add",
      "after": "12e831ca74430924",
      "date": 1409069488311
    },
    {
      "type": "remove",
      "id": "f1a675e4a568a2e3",
      "date": 1409069497352
    },
    {
      "item": {
        "type": "paragraph",
        "id": "4982303fc9404aaf",
        "text": ""
      },
      "id": "4982303fc9404aaf",
      "type": "add",
      "after": "12e831ca74430924",
      "date": 1409069529331
    },
    {
      "item": {
        "type": "paragraph",
        "id": "eaf43715fe60a3ef",
        "text": ""
      },
      "id": "eaf43715fe60a3ef",
      "type": "add",
      "after": "4982303fc9404aaf",
      "date": 1409069547700
    },
    {
      "type": "remove",
      "id": "eaf43715fe60a3ef",
      "date": 1409069551289
    },
    {
      "item": {
        "type": "factory",
        "id": "835f6790ddc40fd0"
      },
      "id": "835f6790ddc40fd0",
      "type": "add",
      "after": "d52975f3b58ef12d",
      "date": 1409069561043
    },
    {
      "type": "remove",
      "id": "835f6790ddc40fd0",
      "date": 1409069575120
    },
    {
      "item": {
        "type": "factory",
        "id": "6b4ca6390be70bb6"
      },
      "id": "6b4ca6390be70bb6",
      "type": "add",
      "after": "d52975f3b58ef12d",
      "date": 1409069582546
    },
    {
      "type": "edit",
      "id": "6b4ca6390be70bb6",
      "item": {
        "type": "paragraph",
        "id": "6b4ca6390be70bb6",
        "text": "https://www.youtube.com/watch?v=X8io71hTg8A"
      },
      "date": 1409069587092
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a93dc7bfb307559b",
        "text": ""
      },
      "id": "a93dc7bfb307559b",
      "type": "add",
      "after": "6b4ca6390be70bb6",
      "date": 1409069587110
    },
    {
      "type": "remove",
      "id": "a93dc7bfb307559b",
      "date": 1409069595645
    },
    {
      "type": "edit",
      "id": "6b4ca6390be70bb6",
      "item": {
        "type": "paragraph",
        "id": "6b4ca6390be70bb6",
        "text": "<iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/X8io71hTg8A\" frameborder=\"0\" allowfullscreen></iframe>"
      },
      "date": 1409069705311
    },
    {
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "12e831ca74430924",
        "4982303fc9404aaf",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "6b4ca6390be70bb6",
        "d52975f3b58ef12d"
      ],
      "id": "d52975f3b58ef12d",
      "date": 1409069737259
    },
    {
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "12e831ca74430924",
        "4982303fc9404aaf",
        "9d1e3ac498a0b523",
        "6b4ca6390be70bb6",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "id": "a3613288159e93a0",
      "date": 1409069740292
    },
    {
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "12e831ca74430924",
        "4982303fc9404aaf",
        "6b4ca6390be70bb6",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "id": "9d1e3ac498a0b523",
      "date": 1409069746133
    },
    {
      "type": "edit",
      "id": "1e2885e5226aa3e7",
      "item": {
        "type": "html",
        "id": "1e2885e5226aa3e7",
        "text": "<blockquote>\nFunction, structure, and behavior are the three major facets of any system. Structure and behavior are two inseparable system aspects, as no system can be faithfully modeled without considering both in tandem.  \n</blockquote><blockquote>\nObject-Process Methodology (OPM) is a systems paradigm and language that combines structure-behavior co-design requirements with cognitive considerations. Based on formal mathematical foundations of graph grammars and a subset of natural language, OPM caters to human intuition in a bi-modal way via graphics and auto-generated natural language text. In a nutshell, OPM processes transform objects by creating them, consuming them, or changing their states. The concurrent representation of structure and behavior in the same, single diagram type is balanced, creating synergy whereby each aspect helps understanding the other. </blockquote>"
      },
      "date": 1546315145450
    },
    {
      "type": "edit",
      "id": "7403a2982b40c11a",
      "item": {
        "type": "html",
        "id": "7403a2982b40c11a",
        "text": "<blockquote>Dori, Dov. 2011. “Object-Process Methodology for Structure-Behavior Co-Design.” In <i>Handbook of Conceptual Modeling</i>, edited by David W. Embley and Bernhard Thalheim, 209–58. 10.1007/978-3-642-15865-0_7: Springer Berlin Heidelberg. [[http://esml.iem.technion.ac.il/wp-content/uploads/2011/08/opm.pdf]].\n</blockquote>"
      },
      "date": 1546315149049
    },
    {
      "type": "fork",
      "site": "wiki.coevolving.com",
      "date": 1644015318563
    },
    {
      "type": "fork",
      "site": "daviding.wiki.openlearning.cc",
      "date": 1644015362958
    },
    {
      "type": "edit",
      "id": "12e831ca74430924",
      "item": {
        "type": "paragraph",
        "id": "12e831ca74430924",
        "text": "In OPM, systems are represented graphically in an Object-Process Diagram (OPD) and textually in an Object-Process Language (OPL).  Software tools can recognize OPD constructs and generate textual counterparts.  "
      },
      "date": 1644032269120
    },
    {
      "type": "add",
      "id": "b6ecd42d2485d868",
      "item": {
        "type": "paragraph",
        "id": "b6ecd42d2485d868",
        "text": "The Opcat tools is available from [http://esml.iem.technion.ac.il/opm/opcat-installation/ http://esml.iem.technion.ac.il/opm/opcat-installation/].  To draw an OPD without the text counterpart, the [http://dia-installer.de/ Dia Diagram Editor] has an [https://github.com/lehoff/dia_opm OPM stencil]."
      },
      "after": "12e831ca74430924",
      "date": 1644032271865
    },
    {
      "type": "add",
      "id": "112ce21761583b38",
      "item": {
        "type": "paragraph",
        "id": "112ce21761583b38",
        "text": "Since 2018 there has been a web based application OPCloud"
      },
      "after": "12e831ca74430924",
      "date": 1644032315184
    },
    {
      "type": "edit",
      "id": "112ce21761583b38",
      "item": {
        "type": "paragraph",
        "id": "112ce21761583b38",
        "text": "Since 2018 there has been a web based application [https://www.opcloud.tech/ OPCloud]. It is clear that one must purchase a licence to use the full implementation. "
      },
      "date": 1644032482961
    },
    {
      "type": "edit",
      "id": "112ce21761583b38",
      "item": {
        "type": "paragraph",
        "id": "112ce21761583b38",
        "text": "Since 2018 there has been a web based application [https://www.opcloud.tech/ OPCloud]. It is clear that one must purchase a licence to use the full implementation. See [https://opcloud-trial.firebaseapp.com/login OPM login page]"
      },
      "date": 1644032846061
    },
    {
      "item": {
        "type": "factory",
        "id": "51fee4628acacdd6"
      },
      "id": "51fee4628acacdd6",
      "type": "add",
      "after": "d52975f3b58ef12d",
      "date": 1644032851917
    },
    {
      "type": "edit",
      "id": "51fee4628acacdd6",
      "item": {
        "type": "pagefold",
        "id": "51fee4628acacdd6",
        "text": "."
      },
      "date": 1644032857143
    },
    {
      "id": "51fee4628acacdd6",
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "12e831ca74430924",
        "51fee4628acacdd6",
        "112ce21761583b38",
        "b6ecd42d2485d868",
        "4982303fc9404aaf",
        "6b4ca6390be70bb6",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "date": 1644032865871
    },
    {
      "item": {
        "type": "factory",
        "id": "8ce3e72ccf195ead"
      },
      "id": "8ce3e72ccf195ead",
      "type": "add",
      "after": "d52975f3b58ef12d",
      "date": 1644032868585
    },
    {
      "type": "edit",
      "id": "8ce3e72ccf195ead",
      "item": {
        "type": "pagefold",
        "id": "8ce3e72ccf195ead",
        "text": "."
      },
      "date": 1644032872472
    },
    {
      "id": "8ce3e72ccf195ead",
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "12e831ca74430924",
        "51fee4628acacdd6",
        "112ce21761583b38",
        "8ce3e72ccf195ead",
        "b6ecd42d2485d868",
        "4982303fc9404aaf",
        "6b4ca6390be70bb6",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "date": 1644032887053
    },
    {
      "type": "edit",
      "id": "112ce21761583b38",
      "item": {
        "type": "paragraph",
        "id": "112ce21761583b38",
        "text": "Since 2019 there has been a web based application [https://www.opcloud.tech/ OPCloud]. It is clear that one must purchase a licence to use the full implementation. See [https://opcloud-trial.firebaseapp.com/login OPM login page]"
      },
      "date": 1644035531526
    },
    {
      "type": "add",
      "id": "f26d004827a54d65",
      "item": {
        "type": "paragraph",
        "id": "f26d004827a54d65",
        "text": ">A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness."
      },
      "after": "3f45f51de03fd322",
      "date": 1646960278440
    },
    {
      "type": "edit",
      "id": "f26d004827a54d65",
      "item": {
        "type": "paragraph",
        "id": "f26d004827a54d65",
        "text": "> A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness."
      },
      "date": 1646960281586
    },
    {
      "type": "edit",
      "id": "f26d004827a54d65",
      "item": {
        "type": "factory",
        "id": "f26d004827a54d65",
        "text": ">A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness."
      },
      "date": 1646960288771
    },
    {
      "id": "12e831ca74430924",
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "12e831ca74430924",
        "f26d004827a54d65",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "51fee4628acacdd6",
        "112ce21761583b38",
        "8ce3e72ccf195ead",
        "b6ecd42d2485d868",
        "4982303fc9404aaf",
        "6b4ca6390be70bb6",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "date": 1646960325894
    },
    {
      "type": "edit",
      "id": "f26d004827a54d65",
      "item": {
        "type": "factory",
        "id": "f26d004827a54d65",
        "text": ">A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness.  "
      },
      "date": 1647040835082
    },
    {
      "type": "edit",
      "id": "f26d004827a54d65",
      "item": {
        "type": "markdown",
        "id": "f26d004827a54d65",
        "text": ">A single model type replaces the 9 SysML model types with no loss of fidelity or expressiveness.   "
      },
      "date": 1647040842102
    },
    {
      "item": {
        "type": "factory",
        "id": "8927b3476d461432"
      },
      "id": "8927b3476d461432",
      "type": "add",
      "after": "d52975f3b58ef12d",
      "date": 1647040978314
    },
    {
      "type": "edit",
      "id": "8927b3476d461432",
      "item": {
        "type": "video",
        "id": "8927b3476d461432",
        "text": "YOUTUBE X8io71hTg8A\nMIT Intro to OPM by Dov Dori"
      },
      "date": 1647041002931
    },
    {
      "type": "edit",
      "id": "6b4ca6390be70bb6",
      "item": {
        "type": "factory",
        "id": "6b4ca6390be70bb6",
        "text": "<iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/X8io71hTg8A\" frameborder=\"0\" allowfullscreen></iframe> "
      },
      "date": 1647041252263
    },
    {
      "type": "edit",
      "id": "6b4ca6390be70bb6",
      "item": {
        "type": "frame",
        "id": "6b4ca6390be70bb6",
        "text": "<iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/X8io71hTg8A\" frameborder=\"0\" allowfullscreen></iframe> \nDov Dori on OPM"
      },
      "date": 1647041324645
    },
    {
      "type": "remove",
      "id": "6b4ca6390be70bb6",
      "date": 1647041347755
    },
    {
      "id": "8927b3476d461432",
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "12e831ca74430924",
        "f26d004827a54d65",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "51fee4628acacdd6",
        "112ce21761583b38",
        "8ce3e72ccf195ead",
        "8927b3476d461432",
        "b6ecd42d2485d868",
        "4982303fc9404aaf",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "date": 1647041377295
    },
    {
      "id": "b6ecd42d2485d868",
      "type": "move",
      "order": [
        "3f45f51de03fd322",
        "12e831ca74430924",
        "f26d004827a54d65",
        "1e2885e5226aa3e7",
        "7403a2982b40c11a",
        "51fee4628acacdd6",
        "112ce21761583b38",
        "8ce3e72ccf195ead",
        "b6ecd42d2485d868",
        "8927b3476d461432",
        "4982303fc9404aaf",
        "9d1e3ac498a0b523",
        "a3613288159e93a0",
        "d52975f3b58ef12d"
      ],
      "date": 1647041453593
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1706637745831
    }
  ]
}