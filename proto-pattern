{
  "title": "Proto Pattern",
  "story": [
    {
      "type": "html",
      "text": "A [[Proto Pattern]] is a \"wanna-be\" pattern.  It is something documented in a pattern form, but lacks supporting known uses. (Also see:\n[[Safe Loop]], [[Buck Stops Here]])",
      "id": "a629f2b26bbc8fef6e680558687b907b"
    },
    {
      "type": "html",
      "text": "\nFinding those gems of \"good\" code, \"good\" design, or \"good\" whatever (see the [[Quality Withouta Name]]) is what [[Pattern Mining]] is all about.  Sometimes you think you have discovered a \"new\" pattern, which really means that it is so-far undocumented.  According to the [[Rule Of Three]], a pattern must be [[Used Three Times]] before it can really be called a \"pattern\". ([[Validation Through Implementation]])",
      "id": "22d82ccef5d3f4a2dc0758e8bed20672"
    },
    {
      "type": "html",
      "text": "\nWith a [[Proto Pattern]] you can document a concept in a pattern form, and be awaiting the blessing of at least two other uses before being canonized as a Pattern.  These [[Proto Pattern]]s may be published (like here on Wiki), where others may say \"Yeah!  I've done that before!\" and thus provide the much needed use case support the [[Proto Pattern]] needs.",
      "id": "97202f9088c4632ca52e0a516c69bfc1"
    },
    {
      "type": "html",
      "text": "\n[[Proto Pattern]]s, submitted for review in such a way, provide people not only with a means of documentation, but a channel for validation.  Many simply don't have the depth of experience or time for supporting research to find those other known uses of the pattern.",
      "id": "0428e88f67703b421a3fa4c7bf6c5db5"
    },
    {
      "type": "html",
      "text": "\nThe catch is that <b>everyone</b> must agree that they are [[Proto Pattern]]s.  Some safeguard must be in place so that the readers do not believe that they are [[Proven Practice]] before they really are [[Proven Practice]]. I believe that this means that we must label [[Proto Pattern]]s as such, clearly and unambiguously.",
      "id": "f084ef72bd1208afd33cc29ae06b2483"
    },
    {
      "type": "html",
      "text": "\nA pattern that has not been [[Used Three Times]], or does not have any [[Proven Practice]], should always be labeled and called a [[Proto Pattern]].",
      "id": "7dba9003a39078740fb9912855368cc7"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "\nI am starting to think that most of what we call <b>Patterns</b> are really [[Proto Pattern]]s. Some software patterns may have been used dozens of times, but are still suspect.  I tend to have more faith in organizational patterns (and programming idioms) than in software architecture/design patterns.  Do we have enough success stories in our software architecture and design efforts to catalog them as Patterns, teach them as [[Proven Practice]] and then move on?",
      "id": "fc4256db0eba03369be77c89312634b1"
    },
    {
      "type": "html",
      "text": "\nWhat if the [[Proven Practice]] is really [[Bad Proven Practice]]?",
      "id": "f6a9c1a34d6d2d4c2a139f7abed777f8"
    },
    {
      "type": "html",
      "text": "-- [[Todd Coram]] (not trying to start another argument).",
      "id": "3c4daa063d4da75cc5bbd2cfd8be7f22"
    },
    {
      "type": "html",
      "text": "\nNo argument here!  I agree that there are probably many patterns out there documenting current [[Bad Proven Practice]].  However, that is <b>still</b> a pattern.  Maybe this is another thing patterns can be used for: documenting current practice, not just to teach solutions, but to <i>re-evaluate</i> the solutions.",
      "id": "b0be38857c8ba822e89e1d3ba31f6fe3"
    },
    {
      "type": "html",
      "text": "\n[[Proto Pattern]]s can serve as a first-step.  Since there is no [[Proven Practice]], good or bad, it can go either way for the pattern.  But at least there is a wider audience that can review or try the [[Proto Pattern]] <i>before</i> it gets set in stone as a \"good thing.\"  This could cut down on the amount of \"new\" patterns that actually provide bad solutions.",
      "id": "0a9045dd43dd3e9e7ccbe9dae813992c"
    },
    {
      "type": "html",
      "text": "--[[David Hooker]]",
      "id": "ef4a2bd9534f4600911d29554966e36f"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "Sometimes it can help merely to identify potential [[Pattern Component]]s.",
      "id": "b535ba1e2c628ff20a6ffebde39764af"
    },
    {
      "type": "html",
      "text": "-- [[Dave Harris]]",
      "id": "92087690d81c0bf10a54642d86f9807a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "My reading of [[Christopher Alexander]] (and [[Douglas Hofstadter]]) suggests that any putative pattern makes sense only in the context of another pattern. Could it be that when we use evaluative words like \"good\" and \"bad\", or debate \"proven\" versus \"proto\", we could be identifying differences in the <i>context</i> of the alleged pattern in question?",
      "id": "2aaeb113c972a105e3ba9a6047312d73"
    },
    {
      "type": "html",
      "text": "\nIn that spirit, let me offer a heuristic (perhaps someone can make it into a pattern...), as follows:",
      "id": "b4533c1e8c75927e010a29251f6723d1"
    },
    {
      "type": "html",
      "text": " Each pattern is a kind of [[Abstract Pattern]].",
      "id": "3e8062bddd23190b9d236ff7720f56c0"
    },
    {
      "type": "html",
      "text": " Each [[Abstract Pattern]] has an attribute called its [[Pattern Context]] that contains an [[Abstract Pattern]].",
      "id": "ad869cb39bf68a5be773301cffaae8d3"
    },
    {
      "type": "html",
      "text": " A [[Live Pattern]] is an [[Abstract Pattern]] that has the [[Quality Withouta Name]].",
      "id": "da42ab41202d68518f651ac32bb2f765"
    },
    {
      "type": "html",
      "text": " A [[Dead Pattern]] is an [[Abstract Pattern]] that lacks the [[Quality Withouta Name]].",
      "id": "6205e332b1f7d748dbc7b13b240feb46"
    },
    {
      "type": "html",
      "text": " A [[Composed Pattern]] is an [[Abstract Pattern]] that is comprised of [[Abstract Patterns]] (though I purposely leave the meaning of \"comprised of\" vague).",
      "id": "e83aeb7e9349dad2947b1ccf2d916dfc"
    },
    {
      "type": "html",
      "text": " A [[Primitive Pattern]] is an [[Abstract Pattern]] for which no component patterns have been identified.",
      "id": "ac75b7ca895cb2f34bafef5b4fb5f3c0"
    },
    {
      "type": "html",
      "text": " The [[Pattern Context]] of a [[Live Pattern]] is always a [[Live Pattern]]. This means that an [[Abstract Pattern]] can only become a [[Live Pattern]] if its [[Pattern Context]] is also a [[Live Pattern]].",
      "id": "b6a68dc8bdd77f6c527401278776c121"
    },
    {
      "type": "html",
      "text": " There exists some [[Pattern Context Context]], whose [[Pattern Context]] is itself, and which is a [[Live Pattern]] (by construction). My intent here is to mirror the loop at the top of the Smalltalk metaclass hierarchy.",
      "id": "1ae942de0f4ac6101a68170d403421e8"
    },
    {
      "type": "html",
      "text": "\nIn the context of this heuristic, I would describe a related family of [[Abstract Pattern]] descendents:",
      "id": "c78af1b3b5d935707a39f516c6885b5c"
    },
    {
      "type": "html",
      "text": " [[Pattern Practice]]: An [[Abstract Pattern]] together with its [[Pattern Context]].",
      "id": "b469ce38ea5f6b17eaad08b9f72d32e0"
    },
    {
      "type": "html",
      "text": " [[Neo Practice]]: A [[Pattern Practice]] that has been [[Used No Times]].",
      "id": "d79eacda6023abcf5691efd254242a1a"
    },
    {
      "type": "html",
      "text": " [[Proto Practice]]: A [[Pattern Practice]] that has been [[Used One Time]].",
      "id": "11bbcedbedcf6b977e75310a8259de2f"
    },
    {
      "type": "html",
      "text": " [[Proven Practice]]: A [[Pattern Practice]] that has been [[Used Many Times]].",
      "id": "60291e60b52ff6f96b1d0599dc9ed48d"
    },
    {
      "type": "html",
      "text": "\nSince every [[Pattern Practice]] includes both the pattern and its [[Pattern Context]], any [[Proven Practice]] with Pattern A and [[Pattern Context]] B becomes a [[Neo Practice]] when either A or B is changed to C.",
      "id": "1e49edb566995ee5a163929008369e09"
    },
    {
      "type": "html",
      "text": "\nWithin this framework, any [[Pattern Practice]] (whether Neo, Proto, or Proven) can be described as bad if it fails to work and good if it works. I leave the definition of \"work\" as an exercise for the reader.",
      "id": "8ea6f1ea2b25affe7dd9b94356a34d6a"
    },
    {
      "type": "html",
      "text": "\nI think an [[Anti Pattern]], as described by [[Jim Coplien]] (and referenced above by [[Kiel Hodges]]), might be a [[Pattern Practice]] that can be shown not to work with ANY [[Pattern Context]].",
      "id": "151bac1c2840565aba31d20b5f3346c3"
    },
    {
      "type": "html",
      "text": "\nI chose [[Used Many Times]] instead of [[Used Three Times]] because I'm not sure that there's any magic in \"three\"...there's another pattern here in Wiki [([[Two Is An Impossible Number]])] that talks about counting as \"zero, one, many\".",
      "id": "db4205849091822d6029b1c4304a912f"
    },
    {
      "type": "html",
      "text": "\nI hope I've captured the spirit of [[Todd Coram]]'s point here: A [[Proven Practice]] that has been demonstrated to work a large number of times <i>in certain contexts</i> might still not work at all in other contexts.",
      "id": "5687e8867a39bf1c9c8d449a7c8aaa1e"
    },
    {
      "type": "html",
      "text": "\nFurthermore, since a [[Pattern Context]] is itself an [[Abstract Pattern]] (either composed or primitive), a [[Pattern Context]] of an existing good [[Proven Practice]] might change if someone discovers a subpattern of one of its [[Primitive Pattern]] components (and every [[Abstract Pattern]] must have at least ONE [[Primitive Pattern]]).",
      "id": "b3388398c1579e4cc35f2e06dddb6b1c"
    },
    {
      "type": "html",
      "text": "\nMy intent in this last point is to emphasize that the good- or bad- ness of EVERY pattern can change, no matter how many times its been used, when someone identifies or discovers additional structure within itself or its context.",
      "id": "2a6d6b0b7a9c1a700e8d57ef046dd55d"
    },
    {
      "type": "html",
      "text": "\nI hope this helps...",
      "id": "01c17fc0e23f61f2bed27b100fb63a9b"
    },
    {
      "type": "html",
      "text": "-- [[Tom Stambaugh]]",
      "id": "d0e1f1688fa727e6c371ebff0ad0965a"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "<i>an [[Anti Pattern]]... might be a [[Pattern Practice]] that can be shown not to work with ANY [[Pattern Context]].</i>",
      "id": "2c576e32540754474457e2241fd96dec"
    },
    {
      "type": "html",
      "text": "\nSome Patterns in [[Anti Pattern]] have been described as ",
      "id": "911ed615e7e415bf98aeebe4bec42142"
    },
    {
      "type": "html",
      "text": "<i>sometimes an [[Anti Pattern]]</i>.",
      "id": "977180d1f33bf38ec784166a47d3ec71"
    },
    {
      "type": "html",
      "text": "([[Cargo Cult]] is an example.) I think I prefer that something be one or the other or neither, but not both! --[[Kiel Hodges]]",
      "id": "22368134b2361939264c994d01a1106c"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "Can the [[Proto Pattern]]s concept be used more then just as a [[Pattern Wanna Be]]? ",
      "id": "06c300ffd0872923cc8e5b6357b4e0c4"
    },
    {
      "type": "html",
      "text": "\nOne of the great advantages of using the patterns form has been certain parts of our designs now have a well explained rationale.  We know what the \"forces\" are and how they affect the \"particular solution\". In short we know and write down much of the \"why\" of the design. ",
      "id": "08730c6befedb759132a2e74659fd947"
    },
    {
      "type": "html",
      "text": "\nThe comparison between building architecture and software architecture has also led to comparisons between blueprints and software modeling languages such as the [[Unified Modeling Language]]. However UML, like blueprints, does not in my opinion capture the rationale or the \"why\" aspect of things. Maybe the [[Proto Pattern]] concept can be used to supplement the \"blue prints\" we use to create software. ",
      "id": "eac2efee758c70f5587f943594894d00"
    },
    {
      "type": "html",
      "text": "\nPerhaps [[Proto Pattern]]s do not have the same form as patterns. Perhaps relevant additions and subtractions must be made to the [[Proto Pattern]]s concept? In fact, the concept itself may be a pattern --[[Umar Syyid]]",
      "id": "872d3a999f4be63413a289e348e8dfdb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "See [[Architects On Blueprints]], [[Pattern Proposals]]",
      "id": "eeb9484b080f064f77873bbbec35f1eb"
    },
    {
      "type": "html",
      "text": "<hr>",
      "id": "068f7d5054f1379d6c92f34ece5b87a4"
    },
    {
      "type": "html",
      "text": "[[Category Pattern]]",
      "id": "c6eaa4574993115126a30f5bc209da33"
    },
    {
      "type": "html",
      "text": "See original on  [http://c2.com/cgi/wiki?ProtoPattern c2.com]",
      "id": "ccc7b16fb9c5f9604ea32fb127261cc3"
    }
  ],
  "journal": [
    {
      "date": 1234894576000,
      "id": "b51d86b57a351704a991a029a652af3e",
      "type": "create",
      "item": {
        "title": "Proto Pattern",
        "story": [
          {
            "type": "html",
            "text": "A [[Proto Pattern]] is a \"wanna-be\" pattern.  It is something documented in a pattern form, but lacks supporting known uses. (Also see:\n[[Safe Loop]], [[Buck Stops Here]])",
            "id": "a629f2b26bbc8fef6e680558687b907b"
          },
          {
            "type": "html",
            "text": "\nFinding those gems of \"good\" code, \"good\" design, or \"good\" whatever (see the [[Quality Withouta Name]]) is what [[Pattern Mining]] is all about.  Sometimes you think you have discovered a \"new\" pattern, which really means that it is so-far undocumented.  According to the [[Rule Of Three]], a pattern must be [[Used Three Times]] before it can really be called a \"pattern\". ([[Validation Through Implementation]])",
            "id": "22d82ccef5d3f4a2dc0758e8bed20672"
          },
          {
            "type": "html",
            "text": "\nWith a [[Proto Pattern]] you can document a concept in a pattern form, and be awaiting the blessing of at least two other uses before being canonized as a Pattern.  These [[Proto Pattern]]s may be published (like here on Wiki), where others may say \"Yeah!  I've done that before!\" and thus provide the much needed use case support the [[Proto Pattern]] needs.",
            "id": "97202f9088c4632ca52e0a516c69bfc1"
          },
          {
            "type": "html",
            "text": "\n[[Proto Pattern]]s, submitted for review in such a way, provide people not only with a means of documentation, but a channel for validation.  Many simply don't have the depth of experience or time for supporting research to find those other known uses of the pattern.",
            "id": "0428e88f67703b421a3fa4c7bf6c5db5"
          },
          {
            "type": "html",
            "text": "\nThe catch is that <b>everyone</b> must agree that they are [[Proto Pattern]]s.  Some safeguard must be in place so that the readers do not believe that they are [[Proven Practice]] before they really are [[Proven Practice]]. I believe that this means that we must label [[Proto Pattern]]s as such, clearly and unambiguously.",
            "id": "f084ef72bd1208afd33cc29ae06b2483"
          },
          {
            "type": "html",
            "text": "\nA pattern that has not been [[Used Three Times]], or does not have any [[Proven Practice]], should always be labeled and called a [[Proto Pattern]].",
            "id": "7dba9003a39078740fb9912855368cc7"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "\nI am starting to think that most of what we call <b>Patterns</b> are really [[Proto Pattern]]s. Some software patterns may have been used dozens of times, but are still suspect.  I tend to have more faith in organizational patterns (and programming idioms) than in software architecture/design patterns.  Do we have enough success stories in our software architecture and design efforts to catalog them as Patterns, teach them as [[Proven Practice]] and then move on?",
            "id": "fc4256db0eba03369be77c89312634b1"
          },
          {
            "type": "html",
            "text": "\nWhat if the [[Proven Practice]] is really [[Bad Proven Practice]]?",
            "id": "f6a9c1a34d6d2d4c2a139f7abed777f8"
          },
          {
            "type": "html",
            "text": "-- [[Todd Coram]] (not trying to start another argument).",
            "id": "3c4daa063d4da75cc5bbd2cfd8be7f22"
          },
          {
            "type": "html",
            "text": "\nNo argument here!  I agree that there are probably many patterns out there documenting current [[Bad Proven Practice]].  However, that is <b>still</b> a pattern.  Maybe this is another thing patterns can be used for: documenting current practice, not just to teach solutions, but to <i>re-evaluate</i> the solutions.",
            "id": "b0be38857c8ba822e89e1d3ba31f6fe3"
          },
          {
            "type": "html",
            "text": "\n[[Proto Pattern]]s can serve as a first-step.  Since there is no [[Proven Practice]], good or bad, it can go either way for the pattern.  But at least there is a wider audience that can review or try the [[Proto Pattern]] <i>before</i> it gets set in stone as a \"good thing.\"  This could cut down on the amount of \"new\" patterns that actually provide bad solutions.",
            "id": "0a9045dd43dd3e9e7ccbe9dae813992c"
          },
          {
            "type": "html",
            "text": "--[[David Hooker]]",
            "id": "ef4a2bd9534f4600911d29554966e36f"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "Sometimes it can help merely to identify potential [[Pattern Component]]s.",
            "id": "b535ba1e2c628ff20a6ffebde39764af"
          },
          {
            "type": "html",
            "text": "-- [[Dave Harris]]",
            "id": "92087690d81c0bf10a54642d86f9807a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "My reading of [[Christopher Alexander]] (and [[Douglas Hofstadter]]) suggests that any putative pattern makes sense only in the context of another pattern. Could it be that when we use evaluative words like \"good\" and \"bad\", or debate \"proven\" versus \"proto\", we could be identifying differences in the <i>context</i> of the alleged pattern in question?",
            "id": "2aaeb113c972a105e3ba9a6047312d73"
          },
          {
            "type": "html",
            "text": "\nIn that spirit, let me offer a heuristic (perhaps someone can make it into a pattern...), as follows:",
            "id": "b4533c1e8c75927e010a29251f6723d1"
          },
          {
            "type": "html",
            "text": " Each pattern is a kind of [[Abstract Pattern]].",
            "id": "3e8062bddd23190b9d236ff7720f56c0"
          },
          {
            "type": "html",
            "text": " Each [[Abstract Pattern]] has an attribute called its [[Pattern Context]] that contains an [[Abstract Pattern]].",
            "id": "ad869cb39bf68a5be773301cffaae8d3"
          },
          {
            "type": "html",
            "text": " A [[Live Pattern]] is an [[Abstract Pattern]] that has the [[Quality Withouta Name]].",
            "id": "da42ab41202d68518f651ac32bb2f765"
          },
          {
            "type": "html",
            "text": " A [[Dead Pattern]] is an [[Abstract Pattern]] that lacks the [[Quality Withouta Name]].",
            "id": "6205e332b1f7d748dbc7b13b240feb46"
          },
          {
            "type": "html",
            "text": " A [[Composed Pattern]] is an [[Abstract Pattern]] that is comprised of [[Abstract Patterns]] (though I purposely leave the meaning of \"comprised of\" vague).",
            "id": "e83aeb7e9349dad2947b1ccf2d916dfc"
          },
          {
            "type": "html",
            "text": " A [[Primitive Pattern]] is an [[Abstract Pattern]] for which no component patterns have been identified.",
            "id": "ac75b7ca895cb2f34bafef5b4fb5f3c0"
          },
          {
            "type": "html",
            "text": " The [[Pattern Context]] of a [[Live Pattern]] is always a [[Live Pattern]]. This means that an [[Abstract Pattern]] can only become a [[Live Pattern]] if its [[Pattern Context]] is also a [[Live Pattern]].",
            "id": "b6a68dc8bdd77f6c527401278776c121"
          },
          {
            "type": "html",
            "text": " There exists some [[Pattern Context Context]], whose [[Pattern Context]] is itself, and which is a [[Live Pattern]] (by construction). My intent here is to mirror the loop at the top of the Smalltalk metaclass hierarchy.",
            "id": "1ae942de0f4ac6101a68170d403421e8"
          },
          {
            "type": "html",
            "text": "\nIn the context of this heuristic, I would describe a related family of [[Abstract Pattern]] descendents:",
            "id": "c78af1b3b5d935707a39f516c6885b5c"
          },
          {
            "type": "html",
            "text": " [[Pattern Practice]]: An [[Abstract Pattern]] together with its [[Pattern Context]].",
            "id": "b469ce38ea5f6b17eaad08b9f72d32e0"
          },
          {
            "type": "html",
            "text": " [[Neo Practice]]: A [[Pattern Practice]] that has been [[Used No Times]].",
            "id": "d79eacda6023abcf5691efd254242a1a"
          },
          {
            "type": "html",
            "text": " [[Proto Practice]]: A [[Pattern Practice]] that has been [[Used One Time]].",
            "id": "11bbcedbedcf6b977e75310a8259de2f"
          },
          {
            "type": "html",
            "text": " [[Proven Practice]]: A [[Pattern Practice]] that has been [[Used Many Times]].",
            "id": "60291e60b52ff6f96b1d0599dc9ed48d"
          },
          {
            "type": "html",
            "text": "\nSince every [[Pattern Practice]] includes both the pattern and its [[Pattern Context]], any [[Proven Practice]] with Pattern A and [[Pattern Context]] B becomes a [[Neo Practice]] when either A or B is changed to C.",
            "id": "1e49edb566995ee5a163929008369e09"
          },
          {
            "type": "html",
            "text": "\nWithin this framework, any [[Pattern Practice]] (whether Neo, Proto, or Proven) can be described as bad if it fails to work and good if it works. I leave the definition of \"work\" as an exercise for the reader.",
            "id": "8ea6f1ea2b25affe7dd9b94356a34d6a"
          },
          {
            "type": "html",
            "text": "\nI think an [[Anti Pattern]], as described by [[Jim Coplien]] (and referenced above by [[Kiel Hodges]]), might be a [[Pattern Practice]] that can be shown not to work with ANY [[Pattern Context]].",
            "id": "151bac1c2840565aba31d20b5f3346c3"
          },
          {
            "type": "html",
            "text": "\nI chose [[Used Many Times]] instead of [[Used Three Times]] because I'm not sure that there's any magic in \"three\"...there's another pattern here in Wiki [([[Two Is An Impossible Number]])] that talks about counting as \"zero, one, many\".",
            "id": "db4205849091822d6029b1c4304a912f"
          },
          {
            "type": "html",
            "text": "\nI hope I've captured the spirit of [[Todd Coram]]'s point here: A [[Proven Practice]] that has been demonstrated to work a large number of times <i>in certain contexts</i> might still not work at all in other contexts.",
            "id": "5687e8867a39bf1c9c8d449a7c8aaa1e"
          },
          {
            "type": "html",
            "text": "\nFurthermore, since a [[Pattern Context]] is itself an [[Abstract Pattern]] (either composed or primitive), a [[Pattern Context]] of an existing good [[Proven Practice]] might change if someone discovers a subpattern of one of its [[Primitive Pattern]] components (and every [[Abstract Pattern]] must have at least ONE [[Primitive Pattern]]).",
            "id": "b3388398c1579e4cc35f2e06dddb6b1c"
          },
          {
            "type": "html",
            "text": "\nMy intent in this last point is to emphasize that the good- or bad- ness of EVERY pattern can change, no matter how many times its been used, when someone identifies or discovers additional structure within itself or its context.",
            "id": "2a6d6b0b7a9c1a700e8d57ef046dd55d"
          },
          {
            "type": "html",
            "text": "\nI hope this helps...",
            "id": "01c17fc0e23f61f2bed27b100fb63a9b"
          },
          {
            "type": "html",
            "text": "-- [[Tom Stambaugh]]",
            "id": "d0e1f1688fa727e6c371ebff0ad0965a"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "<i>an [[Anti Pattern]]... might be a [[Pattern Practice]] that can be shown not to work with ANY [[Pattern Context]].</i>",
            "id": "2c576e32540754474457e2241fd96dec"
          },
          {
            "type": "html",
            "text": "\nSome Patterns in [[Anti Pattern]] have been described as ",
            "id": "911ed615e7e415bf98aeebe4bec42142"
          },
          {
            "type": "html",
            "text": "<i>sometimes an [[Anti Pattern]]</i>.",
            "id": "977180d1f33bf38ec784166a47d3ec71"
          },
          {
            "type": "html",
            "text": "([[Cargo Cult]] is an example.) I think I prefer that something be one or the other or neither, but not both! --[[Kiel Hodges]]",
            "id": "22368134b2361939264c994d01a1106c"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "Can the [[Proto Pattern]]s concept be used more then just as a [[Pattern Wanna Be]]? ",
            "id": "06c300ffd0872923cc8e5b6357b4e0c4"
          },
          {
            "type": "html",
            "text": "\nOne of the great advantages of using the patterns form has been certain parts of our designs now have a well explained rationale.  We know what the \"forces\" are and how they affect the \"particular solution\". In short we know and write down much of the \"why\" of the design. ",
            "id": "08730c6befedb759132a2e74659fd947"
          },
          {
            "type": "html",
            "text": "\nThe comparison between building architecture and software architecture has also led to comparisons between blueprints and software modeling languages such as the [[Unified Modeling Language]]. However UML, like blueprints, does not in my opinion capture the rationale or the \"why\" aspect of things. Maybe the [[Proto Pattern]] concept can be used to supplement the \"blue prints\" we use to create software. ",
            "id": "eac2efee758c70f5587f943594894d00"
          },
          {
            "type": "html",
            "text": "\nPerhaps [[Proto Pattern]]s do not have the same form as patterns. Perhaps relevant additions and subtractions must be made to the [[Proto Pattern]]s concept? In fact, the concept itself may be a pattern --[[Umar Syyid]]",
            "id": "872d3a999f4be63413a289e348e8dfdb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "See [[Architects On Blueprints]], [[Pattern Proposals]]",
            "id": "eeb9484b080f064f77873bbbec35f1eb"
          },
          {
            "type": "html",
            "text": "<hr>",
            "id": "068f7d5054f1379d6c92f34ece5b87a4"
          },
          {
            "type": "html",
            "text": "[[Category Pattern]]",
            "id": "c6eaa4574993115126a30f5bc209da33"
          },
          {
            "type": "html",
            "text": "See original on  [http://c2.com/cgi/wiki?ProtoPattern c2.com]",
            "id": "ccc7b16fb9c5f9604ea32fb127261cc3"
          }
        ]
      }
    },
    {
      "type": "fork",
      "site": "sfw.c2.com",
      "date": 1690525984708
    }
  ]
}