{
  "title": "Abstract Syntax Tree",
  "story": [
    {
      "type": "paragraph",
      "id": "67e7f93bf852a9a8",
      "text": "⇒ [[AST]] ⇒ [[Virtual Machine]]"
    },
    {
      "type": "markdown",
      "id": "676adc5fd40cb080",
      "text": "[[Sunir Shah]] (?) thinks \"compressed *Abstract Syntax Trees* might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than *loading* a purely native program off disk.\""
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Abstract Syntax Tree",
        "story": []
      },
      "date": 1655197620459
    },
    {
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "type": "add",
      "item": {
        "type": "html",
        "text": "\nI think compressed [[Abstract Syntax Tree]]s might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk. ",
        "id": "fda556578ce07362fac0e12f0e9addd0"
      },
      "date": 1655197673879
    },
    {
      "type": "edit",
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "item": {
        "type": "html",
        "text": "> I think compressed [[Abstract Syntax Tree]]s might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk. ",
        "id": "fda556578ce07362fac0e12f0e9addd0"
      },
      "date": 1655197678296
    },
    {
      "type": "edit",
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "item": {
        "type": "html",
        "text": "[[Sunir Shah]] (?) think compressed [[Abstract Syntax Tree]]s might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk. ",
        "id": "fda556578ce07362fac0e12f0e9addd0"
      },
      "date": 1655197733889
    },
    {
      "type": "edit",
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "item": {
        "type": "html",
        "text": "[[Sunir Shah]] (?) thinks \"compressed [[Abstract Syntax Tree]]s might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk.\"",
        "id": "fda556578ce07362fac0e12f0e9addd0"
      },
      "date": 1655197773745
    },
    {
      "item": {
        "type": "factory",
        "id": "67e7f93bf852a9a8"
      },
      "id": "67e7f93bf852a9a8",
      "type": "add",
      "after": "fda556578ce07362fac0e12f0e9addd0",
      "date": 1655197840363
    },
    {
      "type": "edit",
      "id": "67e7f93bf852a9a8",
      "item": {
        "type": "paragraph",
        "id": "67e7f93bf852a9a8",
        "text": "[[Virtual Machine]]"
      },
      "date": 1655197845496
    },
    {
      "type": "edit",
      "id": "67e7f93bf852a9a8",
      "item": {
        "type": "paragraph",
        "id": "67e7f93bf852a9a8",
        "text": "⇒ [[Virtual Machine]]"
      },
      "date": 1655197856225
    },
    {
      "id": "67e7f93bf852a9a8",
      "type": "move",
      "order": [
        "67e7f93bf852a9a8",
        "fda556578ce07362fac0e12f0e9addd0"
      ],
      "date": 1655197869960
    },
    {
      "type": "edit",
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "item": {
        "type": "html",
        "text": "[[Sunir Shah]] (?) thinks \"compressed *Abstract Syntax Trees* might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk.\"",
        "id": "fda556578ce07362fac0e12f0e9addd0"
      },
      "date": 1669301292175
    },
    {
      "item": {
        "type": "factory",
        "id": "676adc5fd40cb080"
      },
      "id": "676adc5fd40cb080",
      "type": "add",
      "after": "fda556578ce07362fac0e12f0e9addd0",
      "date": 1669301302877
    },
    {
      "type": "remove",
      "id": "fda556578ce07362fac0e12f0e9addd0",
      "date": 1669301304120
    },
    {
      "type": "edit",
      "id": "676adc5fd40cb080",
      "item": {
        "type": "markdown",
        "id": "676adc5fd40cb080",
        "text": "[[Sunir Shah]] (?) thinks \"compressed *Abstract Syntax Trees* might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than <i>loading</i> a purely native program off disk.\""
      },
      "date": 1669301305392
    },
    {
      "type": "edit",
      "id": "676adc5fd40cb080",
      "item": {
        "type": "markdown",
        "id": "676adc5fd40cb080",
        "text": "[[Sunir Shah]] (?) thinks \"compressed *Abstract Syntax Trees* might be better. I found a reference (although I'm not going to look right now) that showed that due to the growing latency gap between processors and disks, loading compressed abstract syntax trees off disk and compiling them on the fly was faster than *loading* a purely native program off disk.\""
      },
      "date": 1685965714115
    },
    {
      "type": "edit",
      "id": "67e7f93bf852a9a8",
      "item": {
        "type": "paragraph",
        "id": "67e7f93bf852a9a8",
        "text": "⇒ [[AST]] ⇒ [[Virtual Machine]]"
      },
      "date": 1694838826236
    }
  ]
}