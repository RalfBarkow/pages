{
  "title": "Develop Your PharoJS App",
  "story": [
    {
      "type": "markdown",
      "id": "eb97797fd4f2c532",
      "text": "# Develop the HTML Side\n\nEdit `www/index.html` [[file]] according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n\n"
    },
    {
      "type": "code",
      "id": "aac067d20693a02a",
      "text": "<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>"
    },
    {
      "type": "markdown",
      "id": "7879ec895addb35a",
      "text": "Add a reference to the `index.js` that will be generated by [[PharoJS]]. So, the `www/index.html` file should include this line:\n\n"
    },
    {
      "type": "code",
      "id": "840ae1083fff06a1",
      "text": "<script type=\"text/javascript\" src=\"js/index.js\"></script>"
    },
    {
      "type": "markdown",
      "id": "f6ee01c6149a47fa",
      "text": "You can add extra HTML files, as well as CSS files in the www folder. You can add third party javascript libraries too.\n"
    },
    {
      "type": "markdown",
      "id": "75a8131d20644bf8",
      "text": "Fix the security policy in the `index.html` file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: "
    },
    {
      "type": "code",
      "id": "957d6fec3e3f4b42",
      "text": "<meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \n"
    },
    {
      "type": "markdown",
      "id": "1d832c5d5fb3fd80",
      "text": "This is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Develop Your PharoJS App",
        "story": []
      },
      "date": 1650701386623
    },
    {
      "item": {
        "type": "factory",
        "id": "baa887f9f2015e33"
      },
      "id": "baa887f9f2015e33",
      "type": "add",
      "date": 1650701428957
    },
    {
      "type": "remove",
      "id": "baa887f9f2015e33",
      "date": 1650701430939
    },
    {
      "item": {
        "type": "factory",
        "id": "eb97797fd4f2c532"
      },
      "id": "eb97797fd4f2c532",
      "type": "add",
      "date": 1650701432210
    },
    {
      "type": "edit",
      "id": "eb97797fd4f2c532",
      "item": {
        "type": "markdown",
        "id": "eb97797fd4f2c532",
        "text": "# Develop the HTML Side\n\nEdit www/index.html file according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>\nAdd a reference to the index.js that will be generated by PharoJS. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\nYou can add extra HTML files, as well as CSS files in the www folder. You can add third party javascript libraries too.\nFix the security policy in the index.html file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: >meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \nThis is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
      },
      "date": 1650701438000
    },
    {
      "type": "edit",
      "id": "eb97797fd4f2c532",
      "item": {
        "type": "markdown",
        "id": "eb97797fd4f2c532",
        "text": "# Develop the HTML Side\n\nEdit `www/index.html` [[file]] according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>\nAdd a reference to the index.js that will be generated by PharoJS. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\nYou can add extra HTML files, as well as CSS files in the www folder. You can add third party javascript libraries too.\nFix the security policy in the index.html file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: >meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \nThis is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
      },
      "date": 1650701462674
    },
    {
      "type": "edit",
      "id": "eb97797fd4f2c532",
      "item": {
        "type": "markdown",
        "id": "eb97797fd4f2c532",
        "text": "# Develop the HTML Side\n\nEdit `www/index.html` [[file]] according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>\nAdd a reference to the index.js that will be generated by PharoJS. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\n"
      },
      "date": 1650718837975
    },
    {
      "type": "add",
      "id": "f6ee01c6149a47fa",
      "item": {
        "type": "markdown",
        "id": "f6ee01c6149a47fa",
        "text": "You can add extra HTML files, as well as CSS files in the www folder. You can add third party javascript libraries too.\nFix the security policy in the index.html file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: >meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \nThis is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
      },
      "after": "eb97797fd4f2c532",
      "date": 1650718840182
    },
    {
      "type": "edit",
      "id": "eb97797fd4f2c532",
      "item": {
        "type": "markdown",
        "id": "eb97797fd4f2c532",
        "text": "# Develop the HTML Side\n\nEdit `www/index.html` [[file]] according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>\n"
      },
      "date": 1650718844946
    },
    {
      "type": "add",
      "id": "7879ec895addb35a",
      "item": {
        "type": "markdown",
        "id": "7879ec895addb35a",
        "text": "Add a reference to the index.js that will be generated by PharoJS. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\n"
      },
      "after": "eb97797fd4f2c532",
      "date": 1650718846339
    },
    {
      "item": {
        "type": "factory",
        "id": "aac067d20693a02a"
      },
      "id": "aac067d20693a02a",
      "type": "add",
      "after": "f6ee01c6149a47fa",
      "date": 1650718849190
    },
    {
      "id": "aac067d20693a02a",
      "type": "move",
      "order": [
        "eb97797fd4f2c532",
        "aac067d20693a02a",
        "7879ec895addb35a",
        "f6ee01c6149a47fa"
      ],
      "date": 1650718852589
    },
    {
      "type": "edit",
      "id": "eb97797fd4f2c532",
      "item": {
        "type": "markdown",
        "id": "eb97797fd4f2c532",
        "text": "# Develop the HTML Side\n\nEdit `www/index.html` [[file]] according to your app requirements. Our app rely on 2 buttons, and a DIV to display the counter's value. Each of these three HTML elements has an ID attribute that we'll use in our Pharo code.\n\n"
      },
      "date": 1650718870929
    },
    {
      "type": "edit",
      "id": "aac067d20693a02a",
      "item": {
        "type": "code",
        "id": "aac067d20693a02a",
        "text": "<div id=\"countDisplay\" class=\"countText\">0</div>\n<button id=\"incrementButton\" class=\"incrementButton\">Increment</button>\n<button id=\"resetButton\" class=\"resetButton\">Reset</button>"
      },
      "date": 1650718871857
    },
    {
      "type": "edit",
      "id": "7879ec895addb35a",
      "item": {
        "type": "markdown",
        "id": "7879ec895addb35a",
        "text": "Add a reference to the `index.js` that will be generated by PharoJS. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\n"
      },
      "date": 1650718902557
    },
    {
      "type": "edit",
      "id": "7879ec895addb35a",
      "item": {
        "type": "markdown",
        "id": "7879ec895addb35a",
        "text": "Add a reference to the `index.js` that will be generated by [[PharoJS]]. So, the www/index.html file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\n"
      },
      "date": 1650718913610
    },
    {
      "type": "edit",
      "id": "7879ec895addb35a",
      "item": {
        "type": "markdown",
        "id": "7879ec895addb35a",
        "text": "Add a reference to the `index.js` that will be generated by [[PharoJS]]. So, the `www/index.html` file should include this line:\n<script type=\"text/javascript\" src=\"js/index.js\"></script>\n"
      },
      "date": 1650718925409
    },
    {
      "item": {
        "type": "factory",
        "id": "840ae1083fff06a1"
      },
      "id": "840ae1083fff06a1",
      "type": "add",
      "after": "f6ee01c6149a47fa",
      "date": 1650718932545
    },
    {
      "type": "edit",
      "id": "7879ec895addb35a",
      "item": {
        "type": "markdown",
        "id": "7879ec895addb35a",
        "text": "Add a reference to the `index.js` that will be generated by [[PharoJS]]. So, the `www/index.html` file should include this line:\n\n"
      },
      "date": 1650718933672
    },
    {
      "type": "edit",
      "id": "840ae1083fff06a1",
      "item": {
        "type": "code",
        "id": "840ae1083fff06a1",
        "text": "<script type=\"text/javascript\" src=\"js/index.js\"></script>"
      },
      "date": 1650718934337
    },
    {
      "id": "840ae1083fff06a1",
      "type": "move",
      "order": [
        "eb97797fd4f2c532",
        "aac067d20693a02a",
        "7879ec895addb35a",
        "840ae1083fff06a1",
        "f6ee01c6149a47fa"
      ],
      "date": 1650718936065
    },
    {
      "type": "edit",
      "id": "f6ee01c6149a47fa",
      "item": {
        "type": "markdown",
        "id": "f6ee01c6149a47fa",
        "text": "You can add extra HTML files, as well as CSS files in the www folder. You can add third party javascript libraries too.\n"
      },
      "date": 1650718948076
    },
    {
      "type": "add",
      "id": "75a8131d20644bf8",
      "item": {
        "type": "markdown",
        "id": "75a8131d20644bf8",
        "text": "Fix the security policy in the `index.html` file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: >meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \nThis is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
      },
      "after": "f6ee01c6149a47fa",
      "date": 1650718954755
    },
    {
      "type": "edit",
      "id": "75a8131d20644bf8",
      "item": {
        "type": "markdown",
        "id": "75a8131d20644bf8",
        "text": "Fix the security policy in the `index.html` file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: >meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \n"
      },
      "date": 1650718972473
    },
    {
      "type": "add",
      "id": "1d832c5d5fb3fd80",
      "item": {
        "type": "markdown",
        "id": "1d832c5d5fb3fd80",
        "text": "This is mandatory for development to run the tests. Otherwise, all tests will raise the Javascript interpreter NOT available error. On the console of the web browser, you'll read:\nContent Security Policy: The page's settings blocked the loading of a resource at ws://localhost:1068/javascript-bridge (\"default-src\")."
      },
      "after": "75a8131d20644bf8",
      "date": 1650718980319
    },
    {
      "item": {
        "type": "factory",
        "id": "957d6fec3e3f4b42"
      },
      "id": "957d6fec3e3f4b42",
      "type": "add",
      "after": "1d832c5d5fb3fd80",
      "date": 1650747277799
    },
    {
      "type": "edit",
      "id": "75a8131d20644bf8",
      "item": {
        "type": "markdown",
        "id": "75a8131d20644bf8",
        "text": "Fix the security policy in the `index.html` file to allow websockets connect from the app to the localhost. The meta tag for content security policy should be silimar to the following one: "
      },
      "date": 1650747278883
    },
    {
      "type": "edit",
      "id": "957d6fec3e3f4b42",
      "item": {
        "type": "code",
        "id": "957d6fec3e3f4b42",
        "text": "<meta http-equiv=\"Content-Security-Policy\" content=\"default-src ws://localhost:* 'self' data: gap: https://ssl.gstatic.com 'unsafe-eval'; style-src 'self' 'unsafe-inline'; media-src *; img-src 'self' data: content:;\"> \n"
      },
      "date": 1650747279998
    },
    {
      "id": "957d6fec3e3f4b42",
      "type": "move",
      "order": [
        "eb97797fd4f2c532",
        "aac067d20693a02a",
        "7879ec895addb35a",
        "840ae1083fff06a1",
        "f6ee01c6149a47fa",
        "75a8131d20644bf8",
        "957d6fec3e3f4b42",
        "1d832c5d5fb3fd80"
      ],
      "date": 1650747283104
    }
  ]
}