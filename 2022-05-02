{
  "title": "2022-05-02",
  "story": [
    {
      "type": "markdown",
      "id": "af5fd88cd820c0e2",
      "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651453664217930iwJAD:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nWrote this page to collect thoughts about using wiki's [[graphviz]] to make sense of the first software pattern language: https://explore.dbbs.co/pattern-language--point-of-view.html"
    },
    {
      "type": "reference",
      "id": "63def7890b2e48d7",
      "site": "explore.dbbs.co",
      "slug": "pattern-language--point-of-view",
      "title": "Pattern Language & Point of View",
      "text": "We explored Ward's original [[CHECKS]] pattern language to discover insights that might untangle some knots in wiki configuration management that have been disrupting programming flow. We reviewed an earlier HTML rendering. We reviewed a 2017 rendering into a federated wiki. We constructed a lineup diagram, exported the DOT and hand edited it into a circo layout. We found the resulting graph unsatisfying. We continued the exploration by forking every page to annotate it with an algorithmic, and  context-aware diagram. Here we share what we discovered."
    },
    {
      "type": "reference",
      "id": "3aba237a26ead12c",
      "site": "wiki.ralfbarkow.ch",
      "slug": "local-point-of-view",
      "title": "Local Point of View",
      "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that [[local point of view]] is important."
    },
    {
      "type": "markdown",
      "id": "45b7628d9d3a30ce",
      "text": "There is another hack I like here. I used another [[graphviz]] item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
    },
    {
      "type": "reference",
      "id": "dec0fcf41716d1ab",
      "site": "eric.dojo.fed.wiki",
      "slug": "graphs-of-checks",
      "title": "Graphs of CHECKS",
      "text": "We were getting our head around the [[CHECKS]] pattern language. Used a LINEUP diagram to generate some DOT. Then edited it slightly in [[Edotor]] where we tried many different layouts. None quite captured what we were feeling while browsing. So we turned to a variation of Thompson's [[Preview Next Diagram]]."
    },
    {
      "type": "code",
      "id": "e0ba636eb99a7589",
      "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE"
    },
    {
      "type": "graphviz",
      "id": "5e99f9a8c9cafca4",
      "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE"
    },
    {
      "type": "reference",
      "id": "5673635f1e8f1e29",
      "site": "eric.dojo.fed.wiki",
      "slug": "preview-next-diagram",
      "title": "Preview Next Diagram",
      "text": "Here we have modified the template for Thompson's main navigational diagram. This allows us to explore Thompson's thoughtfully constructed hypermedia site with our own question about how things are linked there."
    },
    {
      "type": "code",
      "id": "23201570ee318d34",
      "text": "DOT strict digraph\n  \nrankdir=TB\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\n    edge [style=solid penwidth=1 color=black]\n\n    LINKS HERE -> NODE\n       node [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n    BACKLINKS NODE -> HERE\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
    },
    {
      "type": "graphviz",
      "id": "9fec2aab318bf87a",
      "text": "DOT strict digraph\n  \nrankdir=TB\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\n    edge [style=solid penwidth=1 color=black]\n\n    LINKS HERE -> NODE\n       node [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n    BACKLINKS NODE -> HERE\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
    },
    {
      "type": "pagefold",
      "id": "b0ca78ce35602b72",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "82d21380e0dfa442",
      "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651349573181625uUOSb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]\nFound some beautiful graphs today. For context, I was studying [[Ward]]'s [[CHECKS]] pattern language this morning. Decided I wanted a picture of it. Ended up annotating each pattern with a variation of Preview Next Diagram. Here's a lineup with some comparisons. The circo layout on the left-most page has all the patterns, but is the least interesting graph. http://eric.dojo.fed.wiki/view/graphs-of-checks/view/deferred-validation/view/whole-value/view/meaningless-behavior\nThe interesting story here is that a thoughtfully constructed pattern language has a very interesting graph by virtue of the thought structured into the relationships between patterns in the language. But the interesting visualization of the graph comes from looking at one pattern and how the neighboring patterns relate.\nThe algorithm for these graphs is walking two steps in either direction from each pattern, first following the links forward and then following the links backward. We're styling each step differently: solid lines in forward directions, dotted lines backwards."
    },
    {
      "type": "markdown",
      "id": "2e8e496795f17903",
      "text": "Ward\nWow. That's interesting. How did I not think to do this?\nWard\nA reviewer, a shepherd we called them, suggested that I include a diagram showing how the patterns connected. That was included in the published version but not part of my document and probably lost. Let me look for the book.  \nWard\nI couldn't lay my hands on the printed book from the 1994 conference. I remember that I first divided the page on two dimensions, located the patterns within what might have been three rows and four columns. Then drew the connections called out by the links.\nAside: I did find a number of classics like the twenty year old \"guide to internet marketing\". I wonder how well that held up.\nJeff Miller\nI recall the XP practices being presented as a mutually reinforcing graph.\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nJeff Miller\nI'm near-certain that I have never had a copy.\n'94 was before I had escaped from my Ph.D. program.\nWard\nI was miffed that the publisher added \"Design\" to the title of our conference. There excuse was that design books were easier to sell.\nJeff Miller\nWell, you know, always an eye toward a sale is a success.\nLooking at the \"Deferred Validation\" pattern strongly recalls an Alan Cooper advisory around holding on to user input because it represented human-meaningful information whether or not it validated in the automated system's terms as a payment instrument, as a date, as a date sequence, as a length, as a name or address or telephone number.\nWard\nPattern Language of Program Design, Volume 1, edited by James O. Coplien and Douglas C. Schmidt (Addison-Wesley), contains the patterns from the first PLoP conference, held in 1994. The patterns range from very complete languages like CHECKS (see Chapter 23) to chapters that contain the author's thoughts about patterns rather than actual patterns.\nhttps://www.oreilly.com/library/view/pattern-oriented-software-architecture/9781119963998/chap24-sec005.html\n\npaul90\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nThere is a copy available to \"borrow\" at the internet archive. I don't see any diagrams, but probably looked in the wrong place."
    },
    {
      "type": "reference",
      "id": "d5d37989f91c2c2e",
      "site": "wiki.ralfbarkow.ch",
      "slug": "pattern-languages-of-program-design",
      "title": "Pattern Languages of Program Design",
      "text": "COPLIEN, James O. and SCHMIDT, Douglas C. (eds.), 1995. [[Pattern languages of program design]]. . Reading, Mass: Addison-Wesley. ISBN 978-0-201-60734-5. QA76.76.D47 P375 1995"
    },
    {
      "type": "pagefold",
      "id": "d818c6aa61e31bb4",
      "text": "~"
    },
    {
      "type": "video",
      "id": "c6d821072d70f45e",
      "text": "YOUTUBE JnVuDmOx6VI\n\nYES • ALTERNATE VIEWS • THE YES ALBUM • 1971"
    },
    {
      "type": "pagefold",
      "id": "10892ee74ea8997f",
      "text": "~"
    },
    {
      "type": "markdown",
      "id": "91ddd8f3da10e6be",
      "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=3000"
    },
    {
      "type": "paragraph",
      "id": "10fd97acdb84b44f",
      "text": "[…] the talk will really be an\nadvertisement for some software that i\nhave\nthat uh will draw pictures very\nconveniently and produce metapost code\nso you can create\nnice pretty pictures um\nvery quickly and easily\nand just show how to manipulate it and\nthose sort of things\nquestion does does your software also\nproduce\na list of 3d points for the knot so it\ncould be put into one of those\nuh energy programs like not plot no not\nat the moment it's a two dimensional\nthing it's it was it was originally\ndesigned to produce diagrams for notoids\nso it's all about planar diagrams\nit has given rise to some interesting\ndiscussions with roger about how to\nproduce aesthetic two-dimensional\ndiagrams which is a non-trivial problem\num i'm not thinking of talking about\nthat next week i think\num did you ever look at mr okey eyes old\nprogram uh that uh that does um a\ntwo-dimensional it's a two-dimensional\ndrawing program and then it produces a\nrather nice picture of the knot\nfrom your piecewise linear drawing\nand no\nso this this is a uh a program that uses\n\num circle packing uh to create a smooth\nof a knot\num it was developed on by reverse\nengineering some of the code in not\nscape or not plot\nnot plot it's been knocking around for\nsome 10 years\nand it will\nenable you to draw\narbitrary immersions so you can draw\nvirtual knots with any virtual number of\nvirtual crossings you like very nice\num you can draw notoids with shortcuts\nyou can scale things or take things all\nof the things you would expect to be\nable to do\num more interestingly and more can you\ndraw can you draw den grid diagrams\ngenocroft diagrams things like that uh\nno at the moment it's just for drawing\nwell so at the moment it can draw\nnot diagrams it can draw smooth states\num so you can\nuh you can just churn out all of the\nsmooth states for a particular uh\nknot diagram\nuh ucat or nottoid diagram you can\nuh\njust recently i've added the capability\nto draw individual smooth states if you\nwant simply to pick one of them\nso you can say i want the state with\nthese crossing smooth a b or whatever\ni can now draw diagrams from gauss codes\nor planar diagrams which was the the\nlast thing that was added which really\nmotivated me talking to roger about\nmaybe just advertising this and uh if\nyou make a drawing it will produce a\ncode for you from the drawing as well\nyou start from the code and create the\ndrawing but can you can you draw by hand\nand get the code from it no no it's a\ncommand line tool it's a symbol or i see\nfor churning out uh metapost code to put\ninto papers and things of that nature"
    },
    {
      "type": "markdown",
      "id": "45917215c4a4a6a9",
      "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=3273"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-05-02",
        "story": []
      },
      "date": 1651467322523
    },
    {
      "item": {
        "type": "factory",
        "id": "63def7890b2e48d7"
      },
      "id": "63def7890b2e48d7",
      "type": "add",
      "date": 1651467324236
    },
    {
      "type": "edit",
      "id": "63def7890b2e48d7",
      "item": {
        "type": "reference",
        "id": "63def7890b2e48d7",
        "site": "explore.dbbs.co",
        "slug": "pattern-language--point-of-view",
        "title": "Pattern Language & Point of View",
        "text": "We explored Ward's original CHECKS pattern language to discover insights that might untangle some knots in wiki configuration management that have been disrupting programming flow. We reviewed an earlier HTML rendering. We reviewed a 2017 rendering into a federated wiki. We constructed a lineup diagram, exported the DOT and hand edited it into a circo layout. We found the resulting graph unsatisfying. We continued the exploration by forking every page to annotate it with an algorithmic, and  context-aware diagram. Here we share what we discovered."
      },
      "date": 1651467328726
    },
    {
      "item": {
        "type": "factory",
        "id": "af5fd88cd820c0e2"
      },
      "id": "af5fd88cd820c0e2",
      "type": "add",
      "after": "63def7890b2e48d7",
      "date": 1651467347010
    },
    {
      "id": "af5fd88cd820c0e2",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7"
      ],
      "date": 1651467348876
    },
    {
      "type": "edit",
      "id": "af5fd88cd820c0e2",
      "item": {
        "type": "paragraph",
        "id": "af5fd88cd820c0e2",
        "text": "[[eric]] via [matrix]\nWrote this page to collect thoughts about using wiki's graphviz to make sense of the first software pattern language: https://explore.dbbs.co/pattern-language--point-of-view.html"
      },
      "date": 1651467362077
    },
    {
      "type": "edit",
      "id": "af5fd88cd820c0e2",
      "item": {
        "type": "paragraph",
        "id": "af5fd88cd820c0e2",
        "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651453664217930iwJAD:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nWrote this page to collect thoughts about using wiki's graphviz to make sense of the first software pattern language: https://explore.dbbs.co/pattern-language--point-of-view.html"
      },
      "date": 1651467373153
    },
    {
      "id": "af5fd88cd820c0e2",
      "type": "move",
      "order": [
        "63def7890b2e48d7",
        "af5fd88cd820c0e2"
      ],
      "date": 1651467380791
    },
    {
      "type": "edit",
      "id": "af5fd88cd820c0e2",
      "item": {
        "type": "markdown",
        "id": "af5fd88cd820c0e2",
        "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651453664217930iwJAD:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nWrote this page to collect thoughts about using wiki's graphviz to make sense of the first software pattern language: https://explore.dbbs.co/pattern-language--point-of-view.html"
      },
      "date": 1651467392353
    },
    {
      "item": {
        "type": "factory",
        "id": "fd830faac63c565b"
      },
      "id": "fd830faac63c565b",
      "type": "add",
      "after": "af5fd88cd820c0e2",
      "date": 1651468431054
    },
    {
      "type": "edit",
      "id": "fd830faac63c565b",
      "item": {
        "type": "paragraph",
        "id": "fd830faac63c565b",
        "text": "I especially like the poetic license of using the diagram of Visible Implication to make the point that local point of view is important.\nThere is another hack I like here. I used another graphviz item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "date": 1651468433944
    },
    {
      "type": "edit",
      "id": "fd830faac63c565b",
      "item": {
        "type": "paragraph",
        "id": "fd830faac63c565b",
        "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that local point of view is important.\nThere is another hack I like here. I used another graphviz item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "date": 1651468450133
    },
    {
      "type": "edit",
      "id": "fd830faac63c565b",
      "item": {
        "type": "markdown",
        "id": "fd830faac63c565b",
        "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that local point of view is important.\nThere is another hack I like here. I used another graphviz item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "date": 1651468499046
    },
    {
      "item": {
        "type": "factory",
        "id": "dec0fcf41716d1ab"
      },
      "id": "dec0fcf41716d1ab",
      "type": "add",
      "after": "fd830faac63c565b",
      "date": 1651468626478
    },
    {
      "type": "edit",
      "id": "dec0fcf41716d1ab",
      "item": {
        "type": "reference",
        "id": "dec0fcf41716d1ab",
        "site": "eric.dojo.fed.wiki",
        "slug": "graphs-of-checks",
        "title": "Graphs of CHECKS",
        "text": "We were getting our head around the CHECKS pattern language. Used a LINEUP diagram to generate some DOT. Then edited it slightly in Edotor where we tried many different layouts. None quite captured what we were feeling while browsing. So we turned to a variation of Thompson's [[Preview Next Diagram]]."
      },
      "date": 1651468635532
    },
    {
      "id": "af5fd88cd820c0e2",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7",
        "fd830faac63c565b",
        "dec0fcf41716d1ab"
      ],
      "date": 1651468767328
    },
    {
      "type": "edit",
      "id": "fd830faac63c565b",
      "item": {
        "type": "markdown",
        "id": "fd830faac63c565b",
        "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that [[local point of view]] is important.\nThere is another hack I like here. I used another graphviz item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "date": 1651468931711
    },
    {
      "type": "edit",
      "id": "fd830faac63c565b",
      "item": {
        "type": "markdown",
        "id": "fd830faac63c565b",
        "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that [[local point of view]] is important.\n"
      },
      "date": 1651468945373
    },
    {
      "id": "fd830faac63c565b",
      "type": "remove",
      "date": 1651468948472
    },
    {
      "type": "add",
      "id": "45b7628d9d3a30ce",
      "item": {
        "type": "markdown",
        "id": "45b7628d9d3a30ce",
        "text": "There is another hack I like here. I used another graphviz item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "after": "fd830faac63c565b",
      "date": 1651468950078
    },
    {
      "item": {
        "type": "factory",
        "id": "3aba237a26ead12c"
      },
      "id": "3aba237a26ead12c",
      "type": "add",
      "after": "dec0fcf41716d1ab",
      "date": 1651468968934
    },
    {
      "id": "3aba237a26ead12c",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7",
        "3aba237a26ead12c",
        "45b7628d9d3a30ce",
        "dec0fcf41716d1ab"
      ],
      "date": 1651468974874
    },
    {
      "type": "edit",
      "id": "3aba237a26ead12c",
      "item": {
        "type": "reference",
        "id": "3aba237a26ead12c",
        "site": "wiki.ralfbarkow.ch",
        "slug": "local-point-of-view",
        "title": "Local Point of View",
        "text": "I especially like the poetic license of using the diagram of [[Visible Implication]] to make the point that [[local point of view]] is important."
      },
      "date": 1651468977269
    },
    {
      "item": {
        "type": "factory",
        "id": "e0ba636eb99a7589"
      },
      "id": "e0ba636eb99a7589",
      "type": "add",
      "after": "dec0fcf41716d1ab",
      "date": 1651470712159
    },
    {
      "type": "edit",
      "id": "e0ba636eb99a7589",
      "item": {
        "type": "code",
        "id": "e0ba636eb99a7589",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE\n\n\n\n\n\n\n\n\n\n\n\nSTATIC\n\nstrict digraph {rankdir=LR\n\n\n\n\n\nnode [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n\"Preview\nNext\nDiagram\"\nnode [style=filled fillcolor=lightblue]\n\"Preview\nNext\nDiagram\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white]\nnode [style=filled fillcolor=white penwidth=3 color=black]\n\"Preview\nNext\nDiagram\" -> \"First\nLink\"\n\"Preview\nNext\nDiagram\" -> \"Agile\"\n\"Preview\nNext\nDiagram\" -> \"Next\nPage\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=filled fillcolor=white penwidth=1 color=black]\n\"Agile\"\n\"Agile\" -> \"Agile\nExperience\"\n\"Agile\" -> \"Agile\nMindset\"\n\"Agile\" -> \"Agile\nPractices\"\nnode [style=filled fillcolor=white penwidth=1 color=black]\nnode [style=\"filled,rounded,dotted\" fillcolor=white]\nedge [style=dotted]\n\"Preview\nNext\nDiagram\"\n\"Dynamic\nDiagrams\nImproved\" -> \"Preview\nNext\nDiagram\"\n\"2022-05-02\" -> \"Preview\nNext\nDiagram\"\n\"Graphs\nof\nCHECKS\" -> \"Preview\nNext\nDiagram\"\n\"Try\nBacklinks\nDiagram\" -> \"Preview\nNext\nDiagram\"\n\"Visualize\nthe\nConnections\" -> \"Preview\nNext\nDiagram\"\n\"mh\ngraph\nsnippets\" -> \"Preview\nNext\nDiagram\"\n\"Graph\nTemplates\" -> \"Preview\nNext\nDiagram\"}"
      },
      "date": 1651470714753
    },
    {
      "item": {
        "type": "factory",
        "id": "5e99f9a8c9cafca4"
      },
      "id": "5e99f9a8c9cafca4",
      "type": "add",
      "after": "e0ba636eb99a7589",
      "date": 1651470783047
    },
    {
      "type": "edit",
      "id": "5e99f9a8c9cafca4",
      "item": {
        "type": "graphviz",
        "id": "5e99f9a8c9cafca4",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE"
      },
      "date": 1651470787776
    },
    {
      "type": "edit",
      "id": "e0ba636eb99a7589",
      "item": {
        "type": "code",
        "id": "e0ba636eb99a7589",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^Next/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^Next/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n   node [style=\"filled,rounded,dotted\" fillcolor=white]\n   edge [style=dotted]\n   HERE NODE\n      BACKLINKS NODE -> HERE"
      },
      "date": 1651470792493
    },
    {
      "item": {
        "type": "factory",
        "id": "5673635f1e8f1e29"
      },
      "id": "5673635f1e8f1e29",
      "type": "add",
      "after": "5e99f9a8c9cafca4",
      "date": 1651470904183
    },
    {
      "id": "5673635f1e8f1e29",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7",
        "3aba237a26ead12c",
        "45b7628d9d3a30ce",
        "dec0fcf41716d1ab",
        "5673635f1e8f1e29",
        "e0ba636eb99a7589",
        "5e99f9a8c9cafca4"
      ],
      "date": 1651470909081
    },
    {
      "type": "edit",
      "id": "5673635f1e8f1e29",
      "item": {
        "type": "reference",
        "id": "5673635f1e8f1e29",
        "site": "eric.dojo.fed.wiki",
        "slug": "preview-next-diagram",
        "title": "Preview Next Diagram",
        "text": "Here we have modified the template for Thompson's main navigational diagram. This allows us to explore Thompson's thoughtfully constructed hypermedia site with our own question about how things are linked there."
      },
      "date": 1651470918704
    },
    {
      "id": "5673635f1e8f1e29",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7",
        "3aba237a26ead12c",
        "45b7628d9d3a30ce",
        "dec0fcf41716d1ab",
        "e0ba636eb99a7589",
        "5e99f9a8c9cafca4",
        "5673635f1e8f1e29"
      ],
      "date": 1651470969047
    },
    {
      "item": {
        "type": "factory",
        "id": "23201570ee318d34"
      },
      "id": "23201570ee318d34",
      "type": "add",
      "after": "5673635f1e8f1e29",
      "date": 1651470988330
    },
    {
      "type": "edit",
      "id": "23201570ee318d34",
      "item": {
        "type": "code",
        "id": "23201570ee318d34",
        "text": "DOT strict digraph\n  \nrankdir=TB\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\n    edge [style=solid penwidth=1 color=black]\n\n    LINKS HERE -> NODE\n       node [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n    BACKLINKS NODE -> HERE\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE\n\n\n\n\n\n\nSTATIC\n\nstrict digraph {rankdir=TB\n\n\n\n\nnode [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n\"Preview\nNext\nDiagram\"\nnode [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\nedge [style=solid penwidth=1 color=black]\n\"Preview\nNext\nDiagram\" -> \"First\nLink\"\n\"Preview\nNext\nDiagram\" -> \"Agile\"\n\"Preview\nNext\nDiagram\" -> \"Next\nPage\"\nnode [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\nnode [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n\"Agile\"\n\"Agile\" -> \"Agile\nExperience\"\n\"Agile\" -> \"Agile\nMindset\"\n\"Agile\" -> \"Agile\nPractices\"\nnode [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n\"Dynamic\nDiagrams\nImproved\" -> \"Preview\nNext\nDiagram\"\n\"2022-05-02\" -> \"Preview\nNext\nDiagram\"\n\"Graphs\nof\nCHECKS\" -> \"Preview\nNext\nDiagram\"\n\"Try\nBacklinks\nDiagram\" -> \"Preview\nNext\nDiagram\"\nnode [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\nedge [style=dotted penwidth=1 color=grey]\n\"Dynamic\nDiagrams\nin\nUse\" -> \"Dynamic\nDiagrams\nImproved\"\n\"Promise\nPages\nfor\nLinks\" -> \"Dynamic\nDiagrams\nImproved\"\nnode [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\nedge [style=dotted penwidth=1 color=grey]\n\"Welcome\nVisitors\" -> \"2022-05-02\"\nnode [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\nedge [style=dotted penwidth=1 color=grey]\n\"2022-05-02\" -> \"Graphs\nof\nCHECKS\"\nnode [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\nedge [style=dotted penwidth=1 color=grey]\n\"Try\nBacklinks\nDiagram\" -> \"Try\nBacklinks\nDiagram\"}"
      },
      "date": 1651470992828
    },
    {
      "type": "edit",
      "id": "23201570ee318d34",
      "item": {
        "type": "code",
        "id": "23201570ee318d34",
        "text": "DOT strict digraph\n  \nrankdir=TB\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\n    edge [style=solid penwidth=1 color=black]\n\n    LINKS HERE -> NODE\n       node [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n    BACKLINKS NODE -> HERE\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
      },
      "date": 1651471007696
    },
    {
      "item": {
        "type": "factory",
        "id": "9fec2aab318bf87a"
      },
      "id": "9fec2aab318bf87a",
      "type": "add",
      "after": "23201570ee318d34",
      "date": 1651471009827
    },
    {
      "type": "edit",
      "id": "9fec2aab318bf87a",
      "item": {
        "type": "graphviz",
        "id": "9fec2aab318bf87a",
        "text": "DOT strict digraph\n  \nrankdir=TB\n\n  node [shape=box style=\"solid,rounded,filled\" fillcolor=lightyellow penwidth=3 color=black]\n  HERE NODE\n    node [style=\"solid,rounded,filled\" fillcolor=white penwidth=2 color=black]\n    edge [style=solid penwidth=1 color=black]\n\n    LINKS HERE -> NODE\n       node [style=\"filled,rounded\" fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE\n\n    BACKLINKS NODE -> HERE\n       node [style=\"dotted,rounded,filled\" penwidth=1 fillcolor=white color=grey]\n       edge [style=dotted penwidth=1 color=grey]\n       HERE\n         BACKLINKS NODE -> HERE"
      },
      "date": 1651471013556
    },
    {
      "type": "edit",
      "id": "63def7890b2e48d7",
      "item": {
        "type": "reference",
        "id": "63def7890b2e48d7",
        "site": "explore.dbbs.co",
        "slug": "pattern-language--point-of-view",
        "title": "Pattern Language & Point of View",
        "text": "We explored Ward's original [[CHECKS]] pattern language to discover insights that might untangle some knots in wiki configuration management that have been disrupting programming flow. We reviewed an earlier HTML rendering. We reviewed a 2017 rendering into a federated wiki. We constructed a lineup diagram, exported the DOT and hand edited it into a circo layout. We found the resulting graph unsatisfying. We continued the exploration by forking every page to annotate it with an algorithmic, and  context-aware diagram. Here we share what we discovered."
      },
      "date": 1651471244179
    },
    {
      "type": "edit",
      "id": "dec0fcf41716d1ab",
      "item": {
        "type": "reference",
        "id": "dec0fcf41716d1ab",
        "site": "eric.dojo.fed.wiki",
        "slug": "graphs-of-checks",
        "title": "Graphs of CHECKS",
        "text": "We were getting our head around the [[CHECKS]] pattern language. Used a LINEUP diagram to generate some DOT. Then edited it slightly in Edotor where we tried many different layouts. None quite captured what we were feeling while browsing. So we turned to a variation of Thompson's [[Preview Next Diagram]]."
      },
      "date": 1651471415673
    },
    {
      "type": "edit",
      "id": "dec0fcf41716d1ab",
      "item": {
        "type": "reference",
        "id": "dec0fcf41716d1ab",
        "site": "eric.dojo.fed.wiki",
        "slug": "graphs-of-checks",
        "title": "Graphs of CHECKS",
        "text": "We were getting our head around the [[CHECKS]] pattern language. Used a LINEUP diagram to generate some DOT. Then edited it slightly in [[Edotor]] where we tried many different layouts. None quite captured what we were feeling while browsing. So we turned to a variation of Thompson's [[Preview Next Diagram]]."
      },
      "date": 1651471437028
    },
    {
      "type": "edit",
      "id": "45b7628d9d3a30ce",
      "item": {
        "type": "markdown",
        "id": "45b7628d9d3a30ce",
        "text": "There is another hack I like here. I used another [[graphviz]] item to draw the \"link\" to Visible Implication deliberately. I know that it will be excluded from the backlinks mechanisms, so my graphs on the bottom of each pattern will only graph nodes from the patterns.   ( See -> Visible Implication )  It's a hack, 'cos I know it'll break as soon as I get around to fixing the graphviz plugin so that it participates in backlinks. :-)\nGrr. I see now that https breaks this again. (edit: had to change the github pages settings to NOT enforce https)\nHere's a link that doesn't break\nhttp://explore.dbbs.co/view/pattern-language--point-of-view\n"
      },
      "date": 1651472224531
    },
    {
      "type": "edit",
      "id": "af5fd88cd820c0e2",
      "item": {
        "type": "markdown",
        "id": "af5fd88cd820c0e2",
        "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651453664217930iwJAD:matrix.org?via=matrix.org&via=matrix.allmende.io&via=chat.weho.st matrix]\nWrote this page to collect thoughts about using wiki's [[graphviz]] to make sense of the first software pattern language: https://explore.dbbs.co/pattern-language--point-of-view.html"
      },
      "date": 1651472628241
    },
    {
      "item": {
        "type": "factory",
        "id": "d5d37989f91c2c2e"
      },
      "id": "d5d37989f91c2c2e",
      "type": "add",
      "after": "9fec2aab318bf87a",
      "date": 1651478898305
    },
    {
      "item": {
        "type": "factory",
        "id": "b0ca78ce35602b72"
      },
      "id": "b0ca78ce35602b72",
      "type": "add",
      "after": "9fec2aab318bf87a",
      "date": 1651478901790
    },
    {
      "type": "edit",
      "id": "b0ca78ce35602b72",
      "item": {
        "type": "pagefold",
        "id": "b0ca78ce35602b72",
        "text": "~"
      },
      "date": 1651478904787
    },
    {
      "item": {
        "type": "factory",
        "id": "82d21380e0dfa442"
      },
      "id": "82d21380e0dfa442",
      "type": "add",
      "after": "b0ca78ce35602b72",
      "date": 1651478906877
    },
    {
      "type": "edit",
      "id": "82d21380e0dfa442",
      "item": {
        "type": "paragraph",
        "id": "82d21380e0dfa442",
        "text": "[[eric]] via [matrix]\nFound some beautiful graphs today. For context, I was studying Ward's CHECKS pattern language this morning. Decided I wanted a picture of it. Ended up annotating each pattern with a variation of Preview Next Diagram. Here's a lineup with some comparisons. The circo layout on the left-most page has all the patterns, but is the least interesting graph. http://eric.dojo.fed.wiki/view/graphs-of-checks/view/deferred-validation/view/whole-value/view/meaningless-behavior\nThe interesting story here is that a thoughtfully constructed pattern language has a very interesting graph by virtue of the thought structured into the relationships between patterns in the language. But the interesting visualization of the graph comes from looking at one pattern and how the neighboring patterns relate.\nThe algorithm for these graphs is walking two steps in either direction from each pattern, first following the links forward and then following the links backward. We're styling each step differently: solid lines in forward directions, dotted lines backwards."
      },
      "date": 1651478919801
    },
    {
      "type": "edit",
      "id": "82d21380e0dfa442",
      "item": {
        "type": "paragraph",
        "id": "82d21380e0dfa442",
        "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651349573181625uUOSb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]\nFound some beautiful graphs today. For context, I was studying Ward's CHECKS pattern language this morning. Decided I wanted a picture of it. Ended up annotating each pattern with a variation of Preview Next Diagram. Here's a lineup with some comparisons. The circo layout on the left-most page has all the patterns, but is the least interesting graph. http://eric.dojo.fed.wiki/view/graphs-of-checks/view/deferred-validation/view/whole-value/view/meaningless-behavior\nThe interesting story here is that a thoughtfully constructed pattern language has a very interesting graph by virtue of the thought structured into the relationships between patterns in the language. But the interesting visualization of the graph comes from looking at one pattern and how the neighboring patterns relate.\nThe algorithm for these graphs is walking two steps in either direction from each pattern, first following the links forward and then following the links backward. We're styling each step differently: solid lines in forward directions, dotted lines backwards."
      },
      "date": 1651478934669
    },
    {
      "type": "add",
      "id": "2e8e496795f17903",
      "item": {
        "type": "paragraph",
        "id": "2e8e496795f17903",
        "text": "Ward\nWow. That's interesting. How did I not think to do this?\nWard\nA reviewer, a shepherd we called them, suggested that I include a diagram showing how the patterns connected. That was included in the published version but not part of my document and probably lost. Let me look for the book.  \nWard\nI couldn't lay my hands on the printed book from the 1994 conference. I remember that I first divided the page on two dimensions, located the patterns within what might have been three rows and four columns. Then drew the connections called out by the links.\nAside: I did find a number of classics like the twenty year old \"guide to internet marketing\". I wonder how well that held up.\nJeff Miller\nI recall the XP practices being presented as a mutually reinforcing graph.\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nJeff Miller\nI'm near-certain that I have never had a copy.\n'94 was before I had escaped from my Ph.D. program.\nWard\nI was miffed that the publisher added \"Design\" to the title of our conference. There excuse was that design books were easier to sell.\nJeff Miller\nWell, you know, always an eye toward a sale is a success.\nLooking at the \"Deferred Validation\" pattern strongly recalls an Alan Cooper advisory around holding on to user input because it represented human-meaningful information whether or not it validated in the automated system's terms as a payment instrument, as a date, as a date sequence, as a length, as a name or address or telephone number.\nWard\nPattern Language of Program Design, Volume 1, edited by James O. Coplien and Douglas C. Schmidt (Addison-Wesley), contains the patterns from the first PLoP conference, held in 1994. The patterns range from very complete languages like CHECKS (see Chapter 23) to chapters that contain the author's thoughts about patterns rather than actual patterns.\nhttps://www.oreilly.com/library/view/pattern-oriented-software-architecture/9781119963998/chap24-sec005.html\n\npaul90\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nThere is a copy available to \"borrow\" at the internet archive. I don't see any diagrams, but probably looked in the wrong place."
      },
      "after": "82d21380e0dfa442",
      "date": 1651478994957
    },
    {
      "type": "edit",
      "id": "2e8e496795f17903",
      "item": {
        "type": "markdown",
        "id": "2e8e496795f17903",
        "text": "Ward\nWow. That's interesting. How did I not think to do this?\nWard\nA reviewer, a shepherd we called them, suggested that I include a diagram showing how the patterns connected. That was included in the published version but not part of my document and probably lost. Let me look for the book.  \nWard\nI couldn't lay my hands on the printed book from the 1994 conference. I remember that I first divided the page on two dimensions, located the patterns within what might have been three rows and four columns. Then drew the connections called out by the links.\nAside: I did find a number of classics like the twenty year old \"guide to internet marketing\". I wonder how well that held up.\nJeff Miller\nI recall the XP practices being presented as a mutually reinforcing graph.\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nJeff Miller\nI'm near-certain that I have never had a copy.\n'94 was before I had escaped from my Ph.D. program.\nWard\nI was miffed that the publisher added \"Design\" to the title of our conference. There excuse was that design books were easier to sell.\nJeff Miller\nWell, you know, always an eye toward a sale is a success.\nLooking at the \"Deferred Validation\" pattern strongly recalls an Alan Cooper advisory around holding on to user input because it represented human-meaningful information whether or not it validated in the automated system's terms as a payment instrument, as a date, as a date sequence, as a length, as a name or address or telephone number.\nWard\nPattern Language of Program Design, Volume 1, edited by James O. Coplien and Douglas C. Schmidt (Addison-Wesley), contains the patterns from the first PLoP conference, held in 1994. The patterns range from very complete languages like CHECKS (see Chapter 23) to chapters that contain the author's thoughts about patterns rather than actual patterns.\nhttps://www.oreilly.com/library/view/pattern-oriented-software-architecture/9781119963998/chap24-sec005.html\n\npaul90\nWard\nJeff, do you have a copy of the 1994 Pattern Languages of Program Design?\nThere is a copy available to \"borrow\" at the internet archive. I don't see any diagrams, but probably looked in the wrong place."
      },
      "date": 1651479002562
    },
    {
      "item": {
        "type": "factory",
        "id": "1a4ecb6d89f172e1"
      },
      "id": "1a4ecb6d89f172e1",
      "type": "add",
      "after": "2e8e496795f17903",
      "date": 1651479209550
    },
    {
      "type": "edit",
      "id": "1a4ecb6d89f172e1",
      "item": {
        "type": "paragraph",
        "id": "1a4ecb6d89f172e1",
        "text": "\nCOPLIEN, James O. and SCHMIDT, Douglas C. (eds.), 1995. Pattern languages of program design. . Reading, Mass: Addison-Wesley. ISBN 978-0-201-60734-5. QA76.76.D47 P375 1995\n"
      },
      "date": 1651479214126
    },
    {
      "item": {
        "type": "factory",
        "id": "4c9803a7eaa98acd"
      },
      "id": "4c9803a7eaa98acd",
      "type": "add",
      "after": "1a4ecb6d89f172e1",
      "date": 1651479259906
    },
    {
      "type": "edit",
      "id": "4c9803a7eaa98acd",
      "item": {
        "type": "paragraph",
        "id": "4c9803a7eaa98acd",
        "text": "Basel - UB Hauptbibliothek\n\nVerfügbar , Freihandmagazin UBH Kt 8932"
      },
      "date": 1651479261352
    },
    {
      "type": "edit",
      "id": "1a4ecb6d89f172e1",
      "item": {
        "type": "paragraph",
        "id": "1a4ecb6d89f172e1",
        "text": "COPLIEN, James O. and SCHMIDT, Douglas C. (eds.), 1995. [[Pattern languages of program design]]. . Reading, Mass: Addison-Wesley. ISBN 978-0-201-60734-5. QA76.76.D47 P375 1995\n"
      },
      "date": 1651479303160
    },
    {
      "id": "1a4ecb6d89f172e1",
      "type": "remove",
      "date": 1651479339493
    },
    {
      "id": "4c9803a7eaa98acd",
      "type": "remove",
      "date": 1651479341469
    },
    {
      "type": "edit",
      "id": "d5d37989f91c2c2e",
      "item": {
        "type": "reference",
        "id": "d5d37989f91c2c2e",
        "site": "wiki.ralfbarkow.ch",
        "slug": "pattern-languages-of-program-design",
        "title": "Pattern Languages of Program Design",
        "text": "COPLIEN, James O. and SCHMIDT, Douglas C. (eds.), 1995. [[Pattern languages of program design]]. . Reading, Mass: Addison-Wesley. ISBN 978-0-201-60734-5. QA76.76.D47 P375 1995"
      },
      "date": 1651479343250
    },
    {
      "type": "edit",
      "id": "82d21380e0dfa442",
      "item": {
        "type": "paragraph",
        "id": "82d21380e0dfa442",
        "text": "[[eric]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1651349573181625uUOSb:matrix.org?via=matrix.org&via=matrix.allmende.io&via=diglife.coop matrix]\nFound some beautiful graphs today. For context, I was studying [[Ward]]'s [[CHECKS]] pattern language this morning. Decided I wanted a picture of it. Ended up annotating each pattern with a variation of Preview Next Diagram. Here's a lineup with some comparisons. The circo layout on the left-most page has all the patterns, but is the least interesting graph. http://eric.dojo.fed.wiki/view/graphs-of-checks/view/deferred-validation/view/whole-value/view/meaningless-behavior\nThe interesting story here is that a thoughtfully constructed pattern language has a very interesting graph by virtue of the thought structured into the relationships between patterns in the language. But the interesting visualization of the graph comes from looking at one pattern and how the neighboring patterns relate.\nThe algorithm for these graphs is walking two steps in either direction from each pattern, first following the links forward and then following the links backward. We're styling each step differently: solid lines in forward directions, dotted lines backwards."
      },
      "date": 1651481348006
    },
    {
      "item": {
        "type": "factory",
        "id": "c6d821072d70f45e"
      },
      "id": "c6d821072d70f45e",
      "type": "add",
      "after": "d5d37989f91c2c2e",
      "date": 1651482972594
    },
    {
      "type": "edit",
      "id": "c6d821072d70f45e",
      "item": {
        "type": "video",
        "id": "c6d821072d70f45e",
        "text": "YOUTUBE JnVuDmOx6VI"
      },
      "date": 1651482982858
    },
    {
      "item": {
        "type": "factory",
        "id": "d818c6aa61e31bb4"
      },
      "id": "d818c6aa61e31bb4",
      "type": "add",
      "after": "c6d821072d70f45e",
      "date": 1651482984576
    },
    {
      "type": "edit",
      "id": "d818c6aa61e31bb4",
      "item": {
        "type": "pagefold",
        "id": "d818c6aa61e31bb4",
        "text": "~"
      },
      "date": 1651482988193
    },
    {
      "id": "d818c6aa61e31bb4",
      "type": "move",
      "order": [
        "af5fd88cd820c0e2",
        "63def7890b2e48d7",
        "3aba237a26ead12c",
        "45b7628d9d3a30ce",
        "dec0fcf41716d1ab",
        "e0ba636eb99a7589",
        "5e99f9a8c9cafca4",
        "5673635f1e8f1e29",
        "23201570ee318d34",
        "9fec2aab318bf87a",
        "b0ca78ce35602b72",
        "82d21380e0dfa442",
        "2e8e496795f17903",
        "d5d37989f91c2c2e",
        "d818c6aa61e31bb4",
        "c6d821072d70f45e"
      ],
      "date": 1651482990493
    },
    {
      "type": "edit",
      "id": "c6d821072d70f45e",
      "item": {
        "type": "video",
        "id": "c6d821072d70f45e",
        "text": "YOUTUBE JnVuDmOx6VI\nCH\n2:37 / 15:16\nOptionen\nYES • ALTERNATE VIEWS • THE YES ALBUM • 1971"
      },
      "date": 1651483000326
    },
    {
      "type": "edit",
      "id": "c6d821072d70f45e",
      "item": {
        "type": "video",
        "id": "c6d821072d70f45e",
        "text": "YOUTUBE JnVuDmOx6VI\n\nYES • ALTERNATE VIEWS • THE YES ALBUM • 1971"
      },
      "date": 1651483005478
    },
    {
      "item": {
        "type": "factory",
        "id": "10892ee74ea8997f"
      },
      "id": "10892ee74ea8997f",
      "type": "add",
      "after": "c6d821072d70f45e",
      "date": 1651497549132
    },
    {
      "type": "edit",
      "id": "10892ee74ea8997f",
      "item": {
        "type": "pagefold",
        "id": "10892ee74ea8997f",
        "text": "~"
      },
      "date": 1651497552596
    },
    {
      "item": {
        "type": "factory",
        "id": "91ddd8f3da10e6be"
      },
      "id": "91ddd8f3da10e6be",
      "type": "add",
      "after": "10892ee74ea8997f",
      "date": 1651497553852
    },
    {
      "type": "edit",
      "id": "91ddd8f3da10e6be",
      "item": {
        "type": "paragraph",
        "id": "91ddd8f3da10e6be",
        "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=2799"
      },
      "date": 1651497556721
    },
    {
      "type": "edit",
      "id": "91ddd8f3da10e6be",
      "item": {
        "type": "markdown",
        "id": "91ddd8f3da10e6be",
        "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=2799"
      },
      "date": 1651497558276
    },
    {
      "item": {
        "type": "factory",
        "id": "10fd97acdb84b44f"
      },
      "id": "10fd97acdb84b44f",
      "type": "add",
      "after": "91ddd8f3da10e6be",
      "date": 1651497684548
    },
    {
      "type": "edit",
      "id": "10fd97acdb84b44f",
      "item": {
        "type": "paragraph",
        "id": "10fd97acdb84b44f",
        "text": "\nand uh it's the talk will really be an\nadvertisement for some software that i\nhave\nthat uh will draw pictures very\nconveniently and produce metapost code\nso you can create\nnice pretty pictures um\nvery quickly and easily\nand just show how to manipulate it and\nthose sort of things\nquestion does does your software also\nproduce\na list of 3d points for the knot so it\ncould be put into one of those\nuh energy programs like not plot no not\nat the moment it's a two dimensional\nthing it's it was it was originally\ndesigned to produce diagrams for notoids\nso it's all about planar diagrams\nit has given rise to some interesting\ndiscussions with roger about how to\nproduce aesthetic two-dimensional\ndiagrams which is a non-trivial problem\num i'm not thinking of talking about\nthat next week i think\num did you ever look at mr okey eyes old\nprogram uh that uh that does um a\ntwo-dimensional it's a two-dimensional\ndrawing program and then it produces a\nrather nice picture of the knot\nfrom your piecewise linear drawing\nand no\nso this this is a uh a program that uses\n\num circle packing uh to create a smooth\nof a knot\num it was developed on by reverse\nengineering some of the code in not\nscape or not plot\nnot plot it's been knocking around for\nsome 10 years\nand it will\nenable you to draw\narbitrary immersions so you can draw\nvirtual knots with any virtual number of\nvirtual crossings you like very nice\num you can draw notoids with shortcuts\nyou can scale things or take things all\nof the things you would expect to be\nable to do\num more interestingly and more can you\ndraw can you draw den grid diagrams\ngenocroft diagrams things like that uh\nno at the moment it's just for drawing\nwell so at the moment it can draw\nnot diagrams it can draw smooth states\num so you can\nuh you can just churn out all of the\nsmooth states for a particular uh\nknot diagram\nuh ucat or nottoid diagram you can\nuh\njust recently i've added the capability\nto draw individual smooth states if you\nwant simply to pick one of them\nso you can say i want the state with\nthese crossing smooth a b or whatever\ni can now draw diagrams from gauss codes\nor planar diagrams which was the the\nlast thing that was added which really\nmotivated me talking to roger about\nmaybe just advertising this and uh if\nyou make a drawing it will produce a\ncode for you from the drawing as well\nyou start from the code and create the\ndrawing but can you can you draw by hand\nand get the code from it no no it's a\ncommand line tool it's a symbol or i see\nfor churning out uh metapost code to put\ninto papers and things of that nature"
      },
      "date": 1651497686436
    },
    {
      "type": "edit",
      "id": "91ddd8f3da10e6be",
      "item": {
        "type": "markdown",
        "id": "91ddd8f3da10e6be",
        "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=3000"
      },
      "date": 1651497717622
    },
    {
      "item": {
        "type": "factory",
        "id": "45917215c4a4a6a9"
      },
      "id": "45917215c4a4a6a9",
      "type": "add",
      "after": "10fd97acdb84b44f",
      "date": 1651498026555
    },
    {
      "type": "edit",
      "id": "45917215c4a4a6a9",
      "item": {
        "type": "paragraph",
        "id": "45917215c4a4a6a9",
        "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=3273"
      },
      "date": 1651498029575
    },
    {
      "type": "edit",
      "id": "45917215c4a4a6a9",
      "item": {
        "type": "markdown",
        "id": "45917215c4a4a6a9",
        "text": "https://youtubetranscript.com/?v=EOpUFMDIJXA&t=3273"
      },
      "date": 1651498031205
    },
    {
      "type": "edit",
      "id": "10fd97acdb84b44f",
      "item": {
        "type": "paragraph",
        "id": "10fd97acdb84b44f",
        "text": "[…] the talk will really be an\nadvertisement for some software that i\nhave\nthat uh will draw pictures very\nconveniently and produce metapost code\nso you can create\nnice pretty pictures um\nvery quickly and easily\nand just show how to manipulate it and\nthose sort of things\nquestion does does your software also\nproduce\na list of 3d points for the knot so it\ncould be put into one of those\nuh energy programs like not plot no not\nat the moment it's a two dimensional\nthing it's it was it was originally\ndesigned to produce diagrams for notoids\nso it's all about planar diagrams\nit has given rise to some interesting\ndiscussions with roger about how to\nproduce aesthetic two-dimensional\ndiagrams which is a non-trivial problem\num i'm not thinking of talking about\nthat next week i think\num did you ever look at mr okey eyes old\nprogram uh that uh that does um a\ntwo-dimensional it's a two-dimensional\ndrawing program and then it produces a\nrather nice picture of the knot\nfrom your piecewise linear drawing\nand no\nso this this is a uh a program that uses\n\num circle packing uh to create a smooth\nof a knot\num it was developed on by reverse\nengineering some of the code in not\nscape or not plot\nnot plot it's been knocking around for\nsome 10 years\nand it will\nenable you to draw\narbitrary immersions so you can draw\nvirtual knots with any virtual number of\nvirtual crossings you like very nice\num you can draw notoids with shortcuts\nyou can scale things or take things all\nof the things you would expect to be\nable to do\num more interestingly and more can you\ndraw can you draw den grid diagrams\ngenocroft diagrams things like that uh\nno at the moment it's just for drawing\nwell so at the moment it can draw\nnot diagrams it can draw smooth states\num so you can\nuh you can just churn out all of the\nsmooth states for a particular uh\nknot diagram\nuh ucat or nottoid diagram you can\nuh\njust recently i've added the capability\nto draw individual smooth states if you\nwant simply to pick one of them\nso you can say i want the state with\nthese crossing smooth a b or whatever\ni can now draw diagrams from gauss codes\nor planar diagrams which was the the\nlast thing that was added which really\nmotivated me talking to roger about\nmaybe just advertising this and uh if\nyou make a drawing it will produce a\ncode for you from the drawing as well\nyou start from the code and create the\ndrawing but can you can you draw by hand\nand get the code from it no no it's a\ncommand line tool it's a symbol or i see\nfor churning out uh metapost code to put\ninto papers and things of that nature"
      },
      "date": 1651498474783
    }
  ]
}