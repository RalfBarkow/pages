{
  "title": "Functions Are Containers",
  "story": [
    {
      "type": "paragraph",
      "id": "f3d9889961a92bff",
      "text": "Memoization via Representables [https://iagoleal.com/posts/representable-memoize/ post]"
    },
    {
      "type": "paragraph",
      "id": "2ae82cda351b50e1",
      "text": "What is the most basic [[Container]] type a language can have?"
    },
    {
      "type": "paragraph",
      "id": "38c7e82236bfbbca",
      "text": "Some people may answer vectors, others would go with hash tables, but in this post [[Iago Leal de Freitas]] is arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: [[Memoization]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Functions Are Containers",
        "story": []
      },
      "date": 1679895353229
    },
    {
      "id": "f3d9889961a92bff",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f3d9889961a92bff",
        "text": "Memoization via Representables [https://iagoleal.com/posts/representable-memoize/ post]"
      },
      "attribution": {
        "page": "2023-03-27"
      },
      "date": 1679895359068
    },
    {
      "id": "2ae82cda351b50e1",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "2ae82cda351b50e1",
        "text": "What is the most basic container type a language can have?"
      },
      "after": "f3d9889961a92bff",
      "attribution": {
        "page": "2023-03-27"
      },
      "date": 1679895360777
    },
    {
      "item": {
        "type": "factory",
        "id": "38c7e82236bfbbca"
      },
      "id": "38c7e82236bfbbca",
      "type": "add",
      "after": "2ae82cda351b50e1",
      "date": 1679895373274
    },
    {
      "type": "edit",
      "id": "38c7e82236bfbbca",
      "item": {
        "type": "paragraph",
        "id": "38c7e82236bfbbca",
        "text": "What is the most basic container type a language can have? Some people may answer vectors, others would go with hash tables, but in this post I am arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: memoization."
      },
      "date": 1679895375305
    },
    {
      "type": "edit",
      "id": "38c7e82236bfbbca",
      "item": {
        "type": "paragraph",
        "id": "38c7e82236bfbbca",
        "text": "Some people may answer vectors, others would go with hash tables, but in this post I am arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: memoization."
      },
      "date": 1679895382957
    },
    {
      "type": "edit",
      "id": "38c7e82236bfbbca",
      "item": {
        "type": "paragraph",
        "id": "38c7e82236bfbbca",
        "text": "Some people may answer vectors, others would go with hash tables, but in this post [[Iago Leal de Freitas]] is arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: memoization."
      },
      "date": 1679895414297
    },
    {
      "type": "edit",
      "id": "38c7e82236bfbbca",
      "item": {
        "type": "paragraph",
        "id": "38c7e82236bfbbca",
        "text": "Some people may answer vectors, others would go with hash tables, but in this post [[Iago Leal de Freitas]] is arguing in favor of functions. Yes, functions. Even though they aren’t generally seem as a data structure per se, we will see that most containers are in fact a way to represent a function with a given storage layout. To illustrate this “functions are containers” idea, let’s take a look at an application that tightly couples both concepts: [[Memoization]]."
      },
      "date": 1679895557630
    },
    {
      "type": "edit",
      "id": "2ae82cda351b50e1",
      "item": {
        "type": "paragraph",
        "id": "2ae82cda351b50e1",
        "text": "What is the most basic [[Container]] type a language can have?"
      },
      "date": 1679895599555
    }
  ]
}