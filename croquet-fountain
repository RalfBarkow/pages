{
  "title": "Croquet Fountain",
  "story": [
    {
      "type": "paragraph",
      "id": "57edb35d7d81bc6b",
      "text": "We join a fountain session in progress. Press space bar to shoot more shapes into the simulation. [https://croquet.io/fountain/?q=kf975jab4v croquet]"
    },
    {
      "type": "markdown",
      "id": "d5e1ee2cee388379",
      "text": "**Note**: Stops at `Starting Rapier physics!` (see Console Log)"
    },
    {
      "type": "frame",
      "id": "0d75a6348b2c5031",
      "text": "https://croquet.io/fountain/?q=kf975jab4v\nHEIGHT 400"
    },
    {
      "type": "paragraph",
      "id": "bcadcbea8907cdc6",
      "text": "Our sandbox configuration isn't sufficient to run this app. "
    },
    {
      "type": "markdown",
      "id": "7f3bab145d74cb58",
      "text": "# Greenlight"
    },
    {
      "type": "paragraph",
      "id": "4a5251dd6b011dfc",
      "text": "We've extracted a working iframe from the greenlight application. [https://tinlizzie.org/~ohshima/greenlight/?q=wa9ben5kwm croquet]"
    },
    {
      "type": "paragraph",
      "id": "4488426fb9d96453",
      "text": "<iframe id=\"iframe\" class=\"boards-iframe no-select\" src=\"https://croquet.io/fountain\" allow=\"camera; microphone; encrypted-media\" sandbox=\"allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-same-origin allow-scripts\" style=\"width: 100%; flex-grow: 10; border: 0px solid gray;\"></iframe>"
    },
    {
      "type": "paragraph",
      "id": "85b072cf94e50aa0",
      "text": "See [[Croquet Tutorial]] â‡’ [[Croquet Fountain]] â‡’ [[Quub Demo]] â‡’  [[Croquet Multiblaster]] â‡’ [[Multiblaster]] (Frame test)"
    },
    {
      "type": "graphviz",
      "id": "da0327a50747418f",
      "text": "DOT FROM lambda-browsing"
    },
    {
      "type": "pagefold",
      "id": "42e47dffbb164e3a",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "0ac24c293e5a0898",
      "text": "[[Croquet Developers Questions]]"
    },
    {
      "type": "markdown",
      "id": "78faf568add49035",
      "text": "Ward â€” [https://discord.com/channels/694586717247635488/966071402526543924/984317673854873601 discord]\nI have been showing off the fountain and explaining to others that the blocks fly through the air on their own but that when they collide that is an event that must be share so we see the same fountain behavior. I'm now coming to understand that the collisions themselves are predictable so no further communication is require to keep our bit-perfect simulations in sync. Is this true? This much is amazing. So then only when I inject additional blocks into the fountain do I need to share this injection event and that this is a simple event from which future collisions can be predicted. Have I got this all right now? \n"
    },
    {
      "type": "markdown",
      "id": "b068e42a75fd5f4d",
      "text": "codefrau ðŸ¦© â€” \nThat is true. The only event sent via the reflector is your tap (or more generally, user input, and possibly external data sources, because everything else is deterministic)\n"
    },
    {
      "type": "markdown",
      "id": "2de49436814b3101",
      "text": "yoshiki â€” \nAs far as user events are concerned that is true, as Vanessa said, in addition there are a few other kinds of network traffic used. On the same socket the user events are sent, there are tick messages (30Hz for Fountain) sent from the reflector to advance the [[Logical Time]]. [[Snapshot]] is taken now and then and sent from one client to the server."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Croquet Fountain",
        "story": []
      },
      "date": 1654115509140
    },
    {
      "item": {
        "type": "factory",
        "id": "0d75a6348b2c5031"
      },
      "id": "0d75a6348b2c5031",
      "type": "add",
      "date": 1654115511584
    },
    {
      "type": "edit",
      "id": "0d75a6348b2c5031",
      "item": {
        "type": "frame",
        "id": "0d75a6348b2c5031",
        "text": "https://croquet.io/fountain/?q=kf975jab4v"
      },
      "date": 1654115516845
    },
    {
      "type": "edit",
      "id": "0d75a6348b2c5031",
      "item": {
        "type": "frame",
        "id": "0d75a6348b2c5031",
        "text": "https://croquet.io/fountain/?q=kf975jab4v\nHEIGHT 400"
      },
      "date": 1654115530641
    },
    {
      "type": "fork",
      "date": 1654133871728
    },
    {
      "item": {
        "type": "factory",
        "id": "4488426fb9d96453"
      },
      "id": "4488426fb9d96453",
      "type": "add",
      "after": "0d75a6348b2c5031",
      "date": 1654133933830
    },
    {
      "type": "edit",
      "id": "4488426fb9d96453",
      "item": {
        "type": "paragraph",
        "id": "4488426fb9d96453",
        "text": "<iframe id=\"iframe\" class=\"boards-iframe no-select\" src=\"https://croquet.io/fountain\" allow=\"camera; microphone; encrypted-media\" sandbox=\"allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-same-origin allow-scripts\" style=\"width: 100%; flex-grow: 10; border: 0px solid gray;\"></iframe>"
      },
      "date": 1654133939824
    },
    {
      "type": "add",
      "id": "57edb35d7d81bc6b",
      "item": {
        "type": "paragraph",
        "id": "57edb35d7d81bc6b",
        "text": "We join a fountain session in progress. Press space bar to shoot more shapes into the simulation. [https://croquet.io/fountain/?q=kf975jab4v croquet]"
      },
      "after": "4488426fb9d96453",
      "date": 1654134058783
    },
    {
      "id": "57edb35d7d81bc6b",
      "type": "move",
      "order": [
        "0d75a6348b2c5031",
        "57edb35d7d81bc6b",
        "4488426fb9d96453"
      ],
      "date": 1654134073298
    },
    {
      "id": "0d75a6348b2c5031",
      "type": "move",
      "order": [
        "57edb35d7d81bc6b",
        "0d75a6348b2c5031",
        "4488426fb9d96453"
      ],
      "date": 1654134076024
    },
    {
      "item": {
        "type": "factory",
        "id": "bcadcbea8907cdc6"
      },
      "id": "bcadcbea8907cdc6",
      "type": "add",
      "after": "4488426fb9d96453",
      "date": 1654134088275
    },
    {
      "type": "edit",
      "id": "bcadcbea8907cdc6",
      "item": {
        "type": "paragraph",
        "id": "bcadcbea8907cdc6",
        "text": "Our sandbox configuration isn't sufficient to run this app. We've extracted a working iframe from the greenlight application."
      },
      "date": 1654134148320
    },
    {
      "type": "edit",
      "id": "bcadcbea8907cdc6",
      "item": {
        "type": "paragraph",
        "id": "bcadcbea8907cdc6",
        "text": "Our sandbox configuration isn't sufficient to run this app. We've extracted a working iframe from the greenlight application. [https://tinlizzie.org/~ohshima/greenlight/?q=wa9ben5kwm croquet]"
      },
      "date": 1654134185186
    },
    {
      "id": "bcadcbea8907cdc6",
      "type": "move",
      "order": [
        "57edb35d7d81bc6b",
        "0d75a6348b2c5031",
        "bcadcbea8907cdc6",
        "4488426fb9d96453"
      ],
      "date": 1654134187927
    },
    {
      "type": "add",
      "id": "85b072cf94e50aa0",
      "item": {
        "type": "paragraph",
        "id": "85b072cf94e50aa0",
        "text": "See [[Croquet Tutorial]]"
      },
      "after": "4488426fb9d96453",
      "date": 1654134260077
    },
    {
      "type": "fork",
      "site": "found.ward.bay.wiki.org",
      "date": 1654208157503
    },
    {
      "type": "edit",
      "id": "85b072cf94e50aa0",
      "item": {
        "type": "paragraph",
        "id": "85b072cf94e50aa0",
        "text": "See [[Croquet Tutorial]] â‡’ [[Croquet Fountain]] â‡’ [[Quub Demo]] â‡’  [[Croquet Multiblaster]] "
      },
      "date": 1654208517609
    },
    {
      "item": {
        "type": "factory",
        "id": "da0327a50747418f"
      },
      "id": "da0327a50747418f",
      "type": "add",
      "after": "85b072cf94e50aa0",
      "date": 1654208520812
    },
    {
      "type": "edit",
      "id": "da0327a50747418f",
      "item": {
        "type": "graphviz",
        "id": "da0327a50747418f",
        "text": "DOT FROM lambda-browsing"
      },
      "date": 1654208523337
    },
    {
      "type": "edit",
      "id": "85b072cf94e50aa0",
      "item": {
        "type": "paragraph",
        "id": "85b072cf94e50aa0",
        "text": "See [[Croquet Tutorial]] â‡’ [[Croquet Fountain]] â‡’ [[Quub Demo]] â‡’  [[Croquet Multiblaster]] â‡’ [[Multiblaster]] (Frame test)"
      },
      "date": 1654208547603
    },
    {
      "type": "add",
      "id": "d5e1ee2cee388379",
      "item": {
        "type": "paragraph",
        "id": "d5e1ee2cee388379",
        "text": "**Note**: Stops at `Starting Rapier physics!`"
      },
      "after": "57edb35d7d81bc6b",
      "date": 1654865596904
    },
    {
      "type": "edit",
      "id": "d5e1ee2cee388379",
      "item": {
        "type": "markdown",
        "id": "d5e1ee2cee388379",
        "text": "**Note**: Stops at `Starting Rapier physics!`"
      },
      "date": 1654865600974
    },
    {
      "type": "edit",
      "id": "bcadcbea8907cdc6",
      "item": {
        "type": "paragraph",
        "id": "bcadcbea8907cdc6",
        "text": "Our sandbox configuration isn't sufficient to run this app. "
      },
      "date": 1654865687994
    },
    {
      "type": "add",
      "id": "7f3bab145d74cb58",
      "item": {
        "type": "paragraph",
        "id": "7f3bab145d74cb58",
        "text": "# greenlight"
      },
      "after": "bcadcbea8907cdc6",
      "date": 1654865691334
    },
    {
      "type": "add",
      "id": "4a5251dd6b011dfc",
      "item": {
        "type": "paragraph",
        "id": "4a5251dd6b011dfc",
        "text": "We've extracted a working iframe from the greenlight application. [https://tinlizzie.org/~ohshima/greenlight/?q=wa9ben5kwm croquet]"
      },
      "after": "7f3bab145d74cb58",
      "date": 1654865692782
    },
    {
      "type": "edit",
      "id": "7f3bab145d74cb58",
      "item": {
        "type": "paragraph",
        "id": "7f3bab145d74cb58",
        "text": "# Greenlight"
      },
      "date": 1654865695508
    },
    {
      "type": "edit",
      "id": "7f3bab145d74cb58",
      "item": {
        "type": "markdown",
        "id": "7f3bab145d74cb58",
        "text": "# Greenlight"
      },
      "date": 1654865697256
    },
    {
      "item": {
        "type": "factory",
        "id": "42e47dffbb164e3a"
      },
      "id": "42e47dffbb164e3a",
      "type": "add",
      "after": "da0327a50747418f",
      "date": 1654865713578
    },
    {
      "type": "edit",
      "id": "42e47dffbb164e3a",
      "item": {
        "type": "pagefold",
        "id": "42e47dffbb164e3a",
        "text": "~"
      },
      "date": 1654865718659
    },
    {
      "item": {
        "type": "factory",
        "id": "78faf568add49035"
      },
      "id": "78faf568add49035",
      "type": "add",
      "after": "42e47dffbb164e3a",
      "date": 1654865729864
    },
    {
      "type": "edit",
      "id": "78faf568add49035",
      "item": {
        "type": "markdown",
        "id": "78faf568add49035",
        "text": "Ward â€” gestern um 06:47 Uhr\nI have been showing off the fountain and explaining to others that the blocks fly through the air on their own but that when they collide that is an event that must be share so we see the same fountain behavior. I'm now coming to understand that the collisions themselves are predictable so no further communication is require to keep our bit-perfect simulations in sync. Is this true? This much is amazing. So then only when I inject additional blocks into the fountain do I need to share this injection event and that this is a simple event from which future collisions can be predicted. Have I got this all right now? \n"
      },
      "date": 1654865731840
    },
    {
      "type": "edit",
      "id": "78faf568add49035",
      "item": {
        "type": "markdown",
        "id": "78faf568add49035",
        "text": "Ward â€” [https://discord.com/channels/694586717247635488/966071402526543924/984317673854873601 discord]\nI have been showing off the fountain and explaining to others that the blocks fly through the air on their own but that when they collide that is an event that must be share so we see the same fountain behavior. I'm now coming to understand that the collisions themselves are predictable so no further communication is require to keep our bit-perfect simulations in sync. Is this true? This much is amazing. So then only when I inject additional blocks into the fountain do I need to share this injection event and that this is a simple event from which future collisions can be predicted. Have I got this all right now? \n"
      },
      "date": 1654865745194
    },
    {
      "item": {
        "type": "factory",
        "id": "b068e42a75fd5f4d"
      },
      "id": "b068e42a75fd5f4d",
      "type": "add",
      "after": "78faf568add49035",
      "date": 1654865756981
    },
    {
      "type": "edit",
      "id": "b068e42a75fd5f4d",
      "item": {
        "type": "markdown",
        "id": "b068e42a75fd5f4d",
        "text": "codefrau ðŸ¦© â€” gestern um 08:19 Uhr\nThat is true. The only event sent via the reflector is your tap (or more generally, user input, and possibly external data sources, because everything else is deterministic)\n"
      },
      "date": 1654865759156
    },
    {
      "type": "edit",
      "id": "b068e42a75fd5f4d",
      "item": {
        "type": "markdown",
        "id": "b068e42a75fd5f4d",
        "text": "codefrau ðŸ¦© â€” \nThat is true. The only event sent via the reflector is your tap (or more generally, user input, and possibly external data sources, because everything else is deterministic)\n"
      },
      "date": 1654865767666
    },
    {
      "item": {
        "type": "factory",
        "id": "2de49436814b3101"
      },
      "id": "2de49436814b3101",
      "type": "add",
      "after": "b068e42a75fd5f4d",
      "date": 1654865784701
    },
    {
      "type": "edit",
      "id": "2de49436814b3101",
      "item": {
        "type": "markdown",
        "id": "2de49436814b3101",
        "text": "yoshiki â€” \nAs far as user events are concerned that is true, as Vanessa said, in addition there are a few other kinds of network traffic used. On the same socket the user events are sent, there are tick messages (30Hz for Fountain) sent from the reflector to advance the logical time. Snapshot is taken now and then and sent from one client to the server."
      },
      "date": 1654865790422
    },
    {
      "item": {
        "type": "factory",
        "id": "0ac24c293e5a0898"
      },
      "id": "0ac24c293e5a0898",
      "type": "add",
      "after": "2de49436814b3101",
      "date": 1654865845509
    },
    {
      "id": "0ac24c293e5a0898",
      "type": "move",
      "order": [
        "57edb35d7d81bc6b",
        "d5e1ee2cee388379",
        "0d75a6348b2c5031",
        "bcadcbea8907cdc6",
        "7f3bab145d74cb58",
        "4a5251dd6b011dfc",
        "4488426fb9d96453",
        "85b072cf94e50aa0",
        "da0327a50747418f",
        "42e47dffbb164e3a",
        "0ac24c293e5a0898",
        "78faf568add49035",
        "b068e42a75fd5f4d",
        "2de49436814b3101"
      ],
      "date": 1654865849957
    },
    {
      "type": "edit",
      "id": "0ac24c293e5a0898",
      "item": {
        "type": "paragraph",
        "id": "0ac24c293e5a0898",
        "text": "[[Croquet Developers Questions]]"
      },
      "date": 1654865855376
    },
    {
      "type": "edit",
      "id": "2de49436814b3101",
      "item": {
        "type": "markdown",
        "id": "2de49436814b3101",
        "text": "yoshiki â€” \nAs far as user events are concerned that is true, as Vanessa said, in addition there are a few other kinds of network traffic used. On the same socket the user events are sent, there are tick messages (30Hz for Fountain) sent from the reflector to advance the [[logical time]]. Snapshot is taken now and then and sent from one client to the server."
      },
      "date": 1654866164960
    },
    {
      "type": "edit",
      "id": "2de49436814b3101",
      "item": {
        "type": "markdown",
        "id": "2de49436814b3101",
        "text": "yoshiki â€” \nAs far as user events are concerned that is true, as Vanessa said, in addition there are a few other kinds of network traffic used. On the same socket the user events are sent, there are tick messages (30Hz for Fountain) sent from the reflector to advance the [[Logical Time]]. Snapshot is taken now and then and sent from one client to the server."
      },
      "date": 1654866193608
    },
    {
      "type": "edit",
      "id": "2de49436814b3101",
      "item": {
        "type": "markdown",
        "id": "2de49436814b3101",
        "text": "yoshiki â€” \nAs far as user events are concerned that is true, as Vanessa said, in addition there are a few other kinds of network traffic used. On the same socket the user events are sent, there are tick messages (30Hz for Fountain) sent from the reflector to advance the [[Logical Time]]. [[Snapshot]] is taken now and then and sent from one client to the server."
      },
      "date": 1654866356113
    },
    {
      "type": "edit",
      "id": "d5e1ee2cee388379",
      "item": {
        "type": "markdown",
        "id": "d5e1ee2cee388379",
        "text": "**Note**: Stops at `Starting Rapier physics!` (see Console Log)"
      },
      "date": 1654877806618
    }
  ]
}