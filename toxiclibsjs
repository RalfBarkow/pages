{
  "title": "Toxiclibsjs",
  "story": [
    {
      "type": "paragraph",
      "id": "fc45fc91d16126af",
      "text": "\"Toxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at [http://haptic-data.com/toxiclibsjs/ http://haptic-data.com/toxiclibsjs/].\"\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. [https://fosstodon.org/@rgb/112332472020878624 mastodon]\n\n"
    },
    {
      "type": "paragraph",
      "id": "b26ab8e0f0b0bd91",
      "text": "Toxiclibs.js can be used in the following ways:"
    },
    {
      "type": "markdown",
      "id": "ce5797dc8d3e032d",
      "text": " * As a single javascript file loaded into a webpage, with the contents of the entire library within a global toxi object.\n * As AMD modules that can be loaded independently or in packages, via RequireJS\n * In Node.js or Browserify applications, through NPM as commonjs modules.\n"
    },
    {
      "type": "paragraph",
      "id": "256b336a30d9c3c1",
      "text": "Use the build [https://github.com/hapticdata/toxiclibsjs?tab=readme-ov-file#use-the-build github], [http://haptic-data.com/toxiclibsjs site]"
    },
    {
      "type": "paragraph",
      "id": "828611640a70bc02",
      "text": "copy the file build/toxiclibs.js:"
    },
    {
      "type": "markdown",
      "id": "44b771a4f57e2a39",
      "text": "<script type=\"text/javascript\" src=\"js/toxiclibs.js\"></script>\n<script type=\"text/javascript\">\n\tvar myVector = new toxi.geom.Vec2D(window.innerWidth,window.innerHeight).scaleSelf(0.5);\n\tvar myColor = toxi.color.TColor.newRGB(128/255,64/255,32/255);\n</script>"
    },
    {
      "type": "assets",
      "id": "c6767cf8760e3cd8",
      "text": "pages/toxiclibsjs"
    },
    {
      "type": "code",
      "id": "b9e0b0a3f3ff51e4",
      "text": "/*!\n* toxiclibsjs - v0.3.3\n* http://haptic-data.com/toxiclibsjs\n* Created by [Kyle Phillips](http://haptic-data.com),\n* based on original work by [Karsten Schmidt](http://toxiclibs.org).\n* Licensed [GPLv2](http://www.gnu.org/licenses/lgpl-2.1.html) \n*/"
    },
    {
      "type": "code",
      "id": "fc806861d4da2238",
      "text": "console.log(myVector);\nconsole.log(myColor);"
    },
    {
      "type": "paragraph",
      "id": "26776f79168d83ec",
      "text": "Many of the constructors and other functions have additional support for option objects. For example: [http://haptic-data.com/toxiclibsjs site] > Differences from the original Toxiclibs"
    },
    {
      "type": "code",
      "id": "f7b12f186cb309bf",
      "text": "//any object with an `x` and `y` will work\nvar vec = new toxi.geom.Vec2D({ x: 0.5, y: 0.25 });\nvar map = new toxi.math.ScaleMap({\n  input: { min: 0, max: 100 },\n  output: { min: -1, max: 1}\n});\n//var mesh = sphere.toMesh({\n//  mesh: new toxi.geom.mesh.TriangleMesh('sphere'),\n//  resolution: 20\n//});"
    },
    {
      "type": "frame",
      "id": "142fe5bcefa780fa",
      "text": "//wiki.ralfbarkow.ch/assets/pages/toxiclibsjs/esm%2Btoxi.html"
    },
    {
      "type": "paragraph",
      "id": "1987b991ba0a5921",
      "text": "See Toxiclibs.js Examples [https://github.com/hapticdata/toxiclibsjs-examples github], MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page]  "
    },
    {
      "type": "paragraph",
      "id": "822ca366ecb6ff05",
      "text": "MeshDoodle shows how to use the toxi.geom.mesh.TriangleMesh class to dynamically build a 3D mesh, render it using Processing.js"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Toxiclibsjs",
        "story": []
      },
      "date": 1714052017953
    },
    {
      "item": {
        "type": "factory",
        "id": "c6767cf8760e3cd8"
      },
      "id": "c6767cf8760e3cd8",
      "type": "add",
      "date": 1714052020381
    },
    {
      "type": "edit",
      "id": "c6767cf8760e3cd8",
      "item": {
        "type": "assets",
        "id": "c6767cf8760e3cd8",
        "text": "pages/"
      },
      "date": 1714052027393
    },
    {
      "type": "edit",
      "id": "c6767cf8760e3cd8",
      "item": {
        "type": "assets",
        "id": "c6767cf8760e3cd8",
        "text": "pages/toxiclibsjs"
      },
      "date": 1714052036382
    },
    {
      "item": {
        "type": "factory",
        "id": "b9e0b0a3f3ff51e4"
      },
      "id": "b9e0b0a3f3ff51e4",
      "type": "add",
      "after": "c6767cf8760e3cd8",
      "date": 1714052128059
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "import * from "
      },
      "date": 1714052147452
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "import * from 'http://localhost:3000/assets/pages/toxiclibsjs/toxiclibs.js';"
      },
      "date": 1714052157741
    },
    {
      "id": "142fe5bcefa780fa",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "b9e0b0a3f3ff51e4",
      "attribution": {
        "page": "Playground: frame",
        "site": "wiki.ralfbarkow.ch"
      },
      "date": 1714052187632
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "import { toxi } from 'http://localhost:3000/assets/pages/toxiclibsjs/toxiclibs.js';"
      },
      "date": 1714052220537
    },
    {
      "item": {
        "type": "factory",
        "id": "fc45fc91d16126af"
      },
      "id": "fc45fc91d16126af",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1714052392248
    },
    {
      "id": "fc45fc91d16126af",
      "type": "move",
      "order": [
        "fc45fc91d16126af",
        "c6767cf8760e3cd8",
        "b9e0b0a3f3ff51e4",
        "142fe5bcefa780fa"
      ],
      "date": 1714052394077
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "Use the build"
      },
      "date": 1714052396431
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "Use the build [https://github.com/hapticdata/toxiclibsjs?tab=readme-ov-file#use-the-build github]"
      },
      "date": 1714052410468
    },
    {
      "type": "add",
      "id": "828611640a70bc02",
      "item": {
        "type": "paragraph",
        "id": "828611640a70bc02",
        "text": "copy the file build/toxiclibs.js:"
      },
      "after": "fc45fc91d16126af",
      "date": 1714052423335
    },
    {
      "type": "add",
      "id": "44b771a4f57e2a39",
      "item": {
        "type": "paragraph",
        "id": "44b771a4f57e2a39",
        "text": "<script type=\"text/javascript\" src=\"js/toxiclibs.js\"></script>\n<script type=\"text/javascript\">\n\tvar myVector = new toxi.geom.Vec2D(window.innerWidth,window.innerHeight).scaleSelf(0.5);\n\tvar myColor = toxi.color.TColor.newRGB(128/255,64/255,32/255);\n</script>"
      },
      "after": "828611640a70bc02",
      "date": 1714052448681
    },
    {
      "type": "edit",
      "id": "44b771a4f57e2a39",
      "item": {
        "type": "markdown",
        "id": "44b771a4f57e2a39",
        "text": "<script type=\"text/javascript\" src=\"js/toxiclibs.js\"></script>\n<script type=\"text/javascript\">\n\tvar myVector = new toxi.geom.Vec2D(window.innerWidth,window.innerHeight).scaleSelf(0.5);\n\tvar myColor = toxi.color.TColor.newRGB(128/255,64/255,32/255);\n</script>"
      },
      "date": 1714052451144
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "console.log(myVector);"
      },
      "date": 1714052565561
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "console.log(myVector);\nconsole.log(myColor);"
      },
      "date": 1714052583823
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714052695247
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1714053129815
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714053143692
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "Toxiclibs.js can be used in the following ways:"
      },
      "date": 1714053182355
    },
    {
      "type": "add",
      "id": "256b336a30d9c3c1",
      "item": {
        "type": "paragraph",
        "id": "256b336a30d9c3c1",
        "text": "Use the build [https://github.com/hapticdata/toxiclibsjs?tab=readme-ov-file#use-the-build github]"
      },
      "after": "fc45fc91d16126af",
      "date": 1714053183220
    },
    {
      "type": "add",
      "id": "ce5797dc8d3e032d",
      "item": {
        "type": "paragraph",
        "id": "ce5797dc8d3e032d",
        "text": " * As a single javascript file loaded into a webpage, with the contents of the entire library within a global toxi object.\n    As AMD modules that can be loaded independently or in packages, via RequireJS\n    In Node.js or Browserify applications, through NPM as commonjs modules.\n"
      },
      "after": "fc45fc91d16126af",
      "date": 1714053210628
    },
    {
      "type": "edit",
      "id": "ce5797dc8d3e032d",
      "item": {
        "type": "markdown",
        "id": "ce5797dc8d3e032d",
        "text": " * As a single javascript file loaded into a webpage, with the contents of the entire library within a global toxi object.\n    As AMD modules that can be loaded independently or in packages, via RequireJS\n    In Node.js or Browserify applications, through NPM as commonjs modules.\n"
      },
      "date": 1714053212242
    },
    {
      "type": "edit",
      "id": "ce5797dc8d3e032d",
      "item": {
        "type": "markdown",
        "id": "ce5797dc8d3e032d",
        "text": " * As a single javascript file loaded into a webpage, with the contents of the entire library within a global toxi object.\n * As AMD modules that can be loaded independently or in packages, via RequireJS\n * In Node.js or Browserify applications, through NPM as commonjs modules.\n"
      },
      "date": 1714053219429
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "/*!\n* toxiclibsjs - v0.3.3\n* http://haptic-data.com/toxiclibsjs\n* Created by [Kyle Phillips](http://haptic-data.com),\n* based on original work by [Karsten Schmidt](http://toxiclibs.org).\n* Licensed [GPLv2](http://www.gnu.org/licenses/lgpl-2.1.html) \n*/\nconsole.log(myVector);\nconsole.log(myColor);"
      },
      "date": 1714053420110
    },
    {
      "item": {
        "type": "factory",
        "id": "fc806861d4da2238"
      },
      "id": "fc806861d4da2238",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1714053886347
    },
    {
      "id": "fc806861d4da2238",
      "type": "move",
      "order": [
        "fc45fc91d16126af",
        "ce5797dc8d3e032d",
        "256b336a30d9c3c1",
        "828611640a70bc02",
        "44b771a4f57e2a39",
        "c6767cf8760e3cd8",
        "b9e0b0a3f3ff51e4",
        "fc806861d4da2238",
        "142fe5bcefa780fa"
      ],
      "date": 1714053889893
    },
    {
      "type": "edit",
      "id": "b9e0b0a3f3ff51e4",
      "item": {
        "type": "code",
        "id": "b9e0b0a3f3ff51e4",
        "text": "/*!\n* toxiclibsjs - v0.3.3\n* http://haptic-data.com/toxiclibsjs\n* Created by [Kyle Phillips](http://haptic-data.com),\n* based on original work by [Karsten Schmidt](http://toxiclibs.org).\n* Licensed [GPLv2](http://www.gnu.org/licenses/lgpl-2.1.html) \n*/"
      },
      "date": 1714053944604
    },
    {
      "type": "edit",
      "id": "fc806861d4da2238",
      "item": {
        "type": "code",
        "id": "fc806861d4da2238",
        "text": "console.log(myVector);\nconsole.log(myColor);"
      },
      "date": 1714053948539
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1714054150888
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714054154550
    },
    {
      "type": "edit",
      "id": "256b336a30d9c3c1",
      "item": {
        "type": "paragraph",
        "id": "256b336a30d9c3c1",
        "text": "Use the build [https://github.com/hapticdata/toxiclibsjs?tab=readme-ov-file#use-the-build github], [http://haptic-data.com/toxiclibsjs site]"
      },
      "date": 1714054487143
    },
    {
      "item": {
        "type": "factory",
        "id": "26776f79168d83ec"
      },
      "id": "26776f79168d83ec",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1714054552349
    },
    {
      "id": "26776f79168d83ec",
      "type": "move",
      "order": [
        "fc45fc91d16126af",
        "ce5797dc8d3e032d",
        "256b336a30d9c3c1",
        "828611640a70bc02",
        "44b771a4f57e2a39",
        "c6767cf8760e3cd8",
        "b9e0b0a3f3ff51e4",
        "fc806861d4da2238",
        "26776f79168d83ec",
        "142fe5bcefa780fa"
      ],
      "date": 1714054554068
    },
    {
      "type": "edit",
      "id": "26776f79168d83ec",
      "item": {
        "type": "paragraph",
        "id": "26776f79168d83ec",
        "text": "Many of the constructors and other functions have additional support for option objects. For example:"
      },
      "date": 1714054555829
    },
    {
      "item": {
        "type": "factory",
        "id": "f7b12f186cb309bf"
      },
      "id": "f7b12f186cb309bf",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1714054565675
    },
    {
      "id": "f7b12f186cb309bf",
      "type": "move",
      "order": [
        "fc45fc91d16126af",
        "ce5797dc8d3e032d",
        "256b336a30d9c3c1",
        "828611640a70bc02",
        "44b771a4f57e2a39",
        "c6767cf8760e3cd8",
        "b9e0b0a3f3ff51e4",
        "fc806861d4da2238",
        "26776f79168d83ec",
        "f7b12f186cb309bf",
        "142fe5bcefa780fa"
      ],
      "date": 1714054567340
    },
    {
      "type": "edit",
      "id": "f7b12f186cb309bf",
      "item": {
        "type": "code",
        "id": "f7b12f186cb309bf",
        "text": "//any object with an `x` and `y` will work\nvar vec = new toxi.geom.Vec2D({ x: 0.5, y: 0.25 });\nvar map = new toxi.math.ScaleMap({\n  input: { min: 0, max: 100 },\n  output: { min: -1, max: 1}\n});\nvar mesh = sphere.toMesh({\n  mesh: new toxi.geom.mesh.TriangleMesh('sphere'),\n  resolution: 20\n});"
      },
      "date": 1714054569669
    },
    {
      "type": "edit",
      "id": "f7b12f186cb309bf",
      "item": {
        "type": "code",
        "id": "f7b12f186cb309bf",
        "text": "//any object with an `x` and `y` will work\nvar vec = new toxi.geom.Vec2D({ x: 0.5, y: 0.25 });\nvar map = new toxi.math.ScaleMap({\n  input: { min: 0, max: 100 },\n  output: { min: -1, max: 1}\n});\n//var mesh = sphere.toMesh({\n//  mesh: new toxi.geom.mesh.TriangleMesh('sphere'),\n  resolution: 20\n});"
      },
      "date": 1714054628589
    },
    {
      "type": "edit",
      "id": "f7b12f186cb309bf",
      "item": {
        "type": "code",
        "id": "f7b12f186cb309bf",
        "text": "//any object with an `x` and `y` will work\nvar vec = new toxi.geom.Vec2D({ x: 0.5, y: 0.25 });\nvar map = new toxi.math.ScaleMap({\n  input: { min: 0, max: 100 },\n  output: { min: -1, max: 1}\n});\n//var mesh = sphere.toMesh({\n//  mesh: new toxi.geom.mesh.TriangleMesh('sphere'),\n//  resolution: 20\n});"
      },
      "date": 1714054639255
    },
    {
      "type": "edit",
      "id": "f7b12f186cb309bf",
      "item": {
        "type": "code",
        "id": "f7b12f186cb309bf",
        "text": "//any object with an `x` and `y` will work\nvar vec = new toxi.geom.Vec2D({ x: 0.5, y: 0.25 });\nvar map = new toxi.math.ScaleMap({\n  input: { min: 0, max: 100 },\n  output: { min: -1, max: 1}\n});\n//var mesh = sphere.toMesh({\n//  mesh: new toxi.geom.mesh.TriangleMesh('sphere'),\n//  resolution: 20\n//});"
      },
      "date": 1714054677223
    },
    {
      "type": "edit",
      "id": "26776f79168d83ec",
      "item": {
        "type": "paragraph",
        "id": "26776f79168d83ec",
        "text": "Many of the constructors and other functions have additional support for option objects. For example: [http://haptic-data.com/toxiclibsjs site]"
      },
      "date": 1714054798486
    },
    {
      "type": "edit",
      "id": "26776f79168d83ec",
      "item": {
        "type": "paragraph",
        "id": "26776f79168d83ec",
        "text": "Many of the constructors and other functions have additional support for option objects. For example: [http://haptic-data.com/toxiclibsjs site] â Differences from the original Toxiclibs"
      },
      "date": 1714054817814
    },
    {
      "type": "edit",
      "id": "26776f79168d83ec",
      "item": {
        "type": "paragraph",
        "id": "26776f79168d83ec",
        "text": "Many of the constructors and other functions have additional support for option objects. For example: [http://haptic-data.com/toxiclibsjs site] > Differences from the original Toxiclibs"
      },
      "date": 1714054835927
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1714054889887
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714054892825
    },
    {
      "type": "fork",
      "date": 1714054945272
    },
    {
      "item": {
        "type": "factory",
        "id": "1987b991ba0a5921"
      },
      "id": "1987b991ba0a5921",
      "type": "add",
      "after": "142fe5bcefa780fa",
      "date": 1714055160114
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See http://haptic-data.com/toxiclibsjs/examples/mesh-doodle"
      },
      "date": 1714055165772
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See MeshDoodle http://haptic-data.com/toxiclibsjs/examples/mesh-doodle"
      },
      "date": 1714055177500
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page]"
      },
      "date": 1714055189812
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page] and Toxiclibs.js Examples"
      },
      "date": 1714055241410
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page] and Toxiclibs.js Examples [https://github.com/hapticdata/toxiclibsjs-examples github]"
      },
      "date": 1714055256451
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See Toxiclibs.js Examples [https://github.com/hapticdata/toxiclibsjs-examples github] and MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page]  "
      },
      "date": 1714055288954
    },
    {
      "type": "edit",
      "id": "1987b991ba0a5921",
      "item": {
        "type": "paragraph",
        "id": "1987b991ba0a5921",
        "text": "See Toxiclibs.js Examples [https://github.com/hapticdata/toxiclibsjs-examples github], MeshDoodle [http://haptic-data.com/toxiclibsjs/examples/mesh-doodle page]  "
      },
      "date": 1714055303484
    },
    {
      "item": {
        "type": "factory",
        "id": "822ca366ecb6ff05"
      },
      "id": "822ca366ecb6ff05",
      "type": "add",
      "after": "1987b991ba0a5921",
      "date": 1714055411360
    },
    {
      "type": "edit",
      "id": "822ca366ecb6ff05",
      "item": {
        "type": "paragraph",
        "id": "822ca366ecb6ff05",
        "text": "MeshDoodle shows how to use the toxi.geom.mesh.TriangleMesh class to dynamically build a 3D mesh, render it using Processing.js"
      },
      "date": 1714055412886
    },
    {
      "type": "fork",
      "site": "wiki.ralfbarkow.ch",
      "date": 1714055468634
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//localhost:3000/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714055472367
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "âToxiclibs, made by Karsten Schmidt, is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by Kyle Philips. You can find out more about Toxiclibs.js at http://haptic-data.com/toxiclibsjs/.â\n\nAuszug aus\nProcessing 2: Creative Programming Cookbook\nDieses Material ist mÃ¶glicherweise urheberrechtlich geschÃ¼tzt."
      },
      "date": 1714056824177
    },
    {
      "type": "add",
      "id": "b26ab8e0f0b0bd91",
      "item": {
        "type": "paragraph",
        "id": "b26ab8e0f0b0bd91",
        "text": "Toxiclibs.js can be used in the following ways:"
      },
      "after": "fc45fc91d16126af",
      "date": 1714056824990
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "âToxiclibs, made by Karsten Schmidt, is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by Kyle Philips. You can find out more about Toxiclibs.js at http://haptic-data.com/toxiclibsjs/.â\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714056849204
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "âToxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Philips]]. You can find out more about Toxiclibs.js at http://haptic-data.com/toxiclibsjs/.â\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714056892744
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "âToxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at http://haptic-data.com/toxiclibsjs/.â\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714056932594
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "\"Toxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at http://haptic-data.com/toxiclibsjs/.\"\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714056973673
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "\"Toxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at [http://haptic-data.com/toxiclibsjs/ http://haptic-data.com/toxiclibsjs/].\"\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714057013197
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1714057219586
    },
    {
      "type": "edit",
      "id": "142fe5bcefa780fa",
      "item": {
        "type": "frame",
        "id": "142fe5bcefa780fa",
        "text": "//wiki.ralfbarkow.ch/assets/pages/toxiclibsjs/esm%2Btoxi.html"
      },
      "date": 1714057283069
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "\"Toxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at [http://haptic-data.com/toxiclibsjs/ http://haptic-data.com/toxiclibsjs/].\" [https://fosstodon.org/@rgb/112332472020878624 mastodon]\n\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. \n"
      },
      "date": 1714057749471
    },
    {
      "type": "edit",
      "id": "fc45fc91d16126af",
      "item": {
        "type": "paragraph",
        "id": "fc45fc91d16126af",
        "text": "\"Toxiclibs, made by [[Karsten Schmidt]], is probably the most widely used Processing library. It has some really good classes to work with 2D and 3D geometry, physics, colors, audio, and more. In this recipe, we'll take a look at the JavaScript port made by [[Kyle Phillips]]. You can find out more about Toxiclibs.js at [http://haptic-data.com/toxiclibsjs/ http://haptic-data.com/toxiclibsjs/].\"\n\nVANTOMME, Jan (ed.), 2012. Processing 2: creative programming cookbook: over 90 highly-effective recipes to unleash your creativity with. Birmingham: Packt Publ. Quick answers to common problems. ISBNÂ 978-1-84951-794-2. [https://fosstodon.org/@rgb/112332472020878624 mastodon]\n\n"
      },
      "date": 1714057788228
    }
  ]
}