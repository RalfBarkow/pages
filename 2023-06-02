{
  "title": "2023-06-02",
  "story": [
    {
      "type": "paragraph",
      "id": "7291f87b642b59c5",
      "text": "⇒ [[Elm and JSON]], [https://github.com/RalfBarkow/vite-elm-dojo/commit/7bb6c0d63ec2df3f0339fdab9de28d1f02584b75 commit] ⇒ [[Decoding JSON HTTP Responses]] ⇒ [[Exploratory Parsing]]"
    },
    {
      "type": "reference",
      "id": "bd74eabf23d230b1",
      "site": "js.ward.asia.wiki.org",
      "slug": "create-items-and-pages",
      "title": "Create Items and Pages",
      "text": "We create items and pages with all of the page json elements we would expect of complete pages."
    },
    {
      "type": "reference",
      "id": "1993a3dfe86732f8",
      "site": "wiki.ralfbarkow.ch",
      "slug": "create-new-page-test",
      "title": "Create New Page Test",
      "text": "A page with 0 items."
    },
    {
      "type": "paragraph",
      "id": "b5fc6f4889c45112",
      "text": "Note: The [[Create New Page Test]] was created with an [[HTML Form]]: [⇒ [[Form]]]"
    },
    {
      "type": "code",
      "id": "16b9736537ca911b",
      "text": "<form \n  action=\"http://new_page/\"\n  style=\"background-color:#eee; padding:15px;\">\n\n[[Create New Page]]<br><br>\n<input\n  name=title\n  size=50\n  placeholder=\"New Page Title\">\n<input\n  type=submit\n  value=create>\n</center>\n</form>"
    },
    {
      "type": "paragraph",
      "id": "83d2955b5044e8e3",
      "text": "State: \"We could not find this page.\""
    },
    {
      "type": "paragraph",
      "id": "7ce454b9998d0ad9",
      "text": "State: Creating"
    },
    {
      "type": "code",
      "id": "d55f2aeaf0d7ae03",
      "text": "-- create new blank page\n\n{\n  \"title\": \"Create New Page Test\",\n  \"story\": [\n    {\n      \"id\": \"d2836612fd516f0c\",\n      \"type\": \"future\",\n      \"text\": \"We could not find this page.\",\n      \"title\": \"Create New Page Test\"\n    }\n  ],\n  \"journal\": []\n}"
    },
    {
      "type": "paragraph",
      "id": "a237d227330ad06e",
      "text": "In this state (type future) there are values [[inside]] the story. The main value is the [[Indication]] that this page has not been found yet. (There are no values inside the journal.)"
    },
    {
      "type": "paragraph",
      "id": "5b6c1bc79340042a",
      "text": "type future ⇒ type create"
    },
    {
      "type": "code",
      "id": "39f0edb95f6e65d8",
      "text": "-- JSON for Create New Page Test\n\n{\n  \"title\": \"Create New Page Test\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"Create New Page Test\",\n        \"story\": []\n      },\n      \"date\": 1685700575889\n    }\n  ]\n}"
    },
    {
      "type": "paragraph",
      "id": "2d341950c2153754",
      "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal). [⇒ [[cross]] ⇒ [[Laws of Form Objects]]]"
    },
    {
      "type": "paragraph",
      "id": "7fcf23fa5c3a961e",
      "text": "MACMURRAY, Andrew, 2019. Map in Elm. [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post] ⇒ [[Over the Wall]] ⇒ [[List]]"
    },
    {
      "type": "paragraph",
      "id": "1a269d027f3f04d2",
      "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page], Elm Syntax [https://elm-lang.org/docs/syntax#lists page],  elm / core [https://package.elm-lang.org/packages/elm/core/latest/List page]: Deconstruct"
    },
    {
      "type": "code",
      "id": "83d329c202a5dbe0",
      "text": "isEmpty : List a -> Bool"
    },
    {
      "type": "paragraph",
      "id": "fb023ed0306b68d7",
      "text": "Determine if a list is empty."
    },
    {
      "type": "code",
      "id": "54b1a3a943a85403",
      "text": "isEmpty [] == True\n"
    },
    {
      "type": "paragraph",
      "id": "b58b09bee8e348a2",
      "text": "Note: It is usually preferable to use a case to test this so you do not forget to handle the (x :: xs) case as well!"
    },
    {
      "type": "reference",
      "id": "7e3a69d3b362958b",
      "site": "clive.tries.fed.wiki",
      "slug": "json-schema",
      "title": "JSON Schema",
      "text": "We define the schema for federated wiki pages to the depth that we know it. We use a BNF-like notation to suggest JSON elements. Any ambiguity will be resolved by examining the example. We close with a brief reflection on the successes of the format."
    },
    {
      "type": "paragraph",
      "id": "c566d95b8384df1d",
      "text": "Figure out how JSON decoders in [[Elm]] work by writing them. Step by step. [https://github.com/zwilias/elm-demystify-decoders github], Demystifying Elm JSON Decoders [https://blog.ilias.xyz/demystifying-decoders-d294ed35bc6e?gi=aeb248d9f701 post]"
    },
    {
      "type": "code",
      "id": "0f2f41bed8ba763a",
      "text": "npm -g i elm elm-test"
    },
    {
      "type": "paragraph",
      "id": "8517c3659c3bfaa3",
      "text": "Call for testing of elm-explorations/test 2.0.0 [https://discourse.elm-lang.org/t/call-for-testing-of-elm-explorations-test-2-0-0/8458 discourse], [https://www.npmjs.com/package/elm-test npmjs], [https://github.com/rtfeldman/node-test-runner github], [https://package.elm-lang.org/packages/elm-explorations/test/latest package]"
    },
    {
      "type": "paragraph",
      "id": "678c51b72e3ff643",
      "text": "⇒ vite-elm-dojo: Test-Explorer"
    },
    {
      "type": "paragraph",
      "id": "759d179ce050ddbc",
      "text": "fix(elm.json): elm-test 0.19.1-revision12 and elm-explorations/test 2.x #17 [https://github.com/zwilias/elm-demystify-decoders/pull/17 pr] ⇒ [[Ilias Van Peer]]"
    },
    {
      "type": "paragraph",
      "id": "7cd5d37e71d58b18",
      "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. ⇒ [[Decode into a Record]]"
    },
    {
      "type": "paragraph",
      "id": "e87a34284604b898",
      "text": "Evaluating a Region or Buffer [https://www.masteringemacs.org/article/evaluating-elisp-emacs page] in [[Emacs]]"
    },
    {
      "type": "code",
      "id": "4f27791c29e2d9e4",
      "text": "(setf (lsp-session-folders-blacklist (lsp-session)) nil)\n(lsp--persist-session (lsp-session))"
    },
    {
      "type": "paragraph",
      "id": "b2c22b1809032276",
      "text": "This will cleanup blacklist folders. [https://www.reddit.com/r/emacs/comments/bjrd3f/how_can_i_unlock_folder_from_lspmode_blacklist/ reddit]"
    },
    {
      "type": "reference",
      "id": "6881e81550462ace",
      "site": "wiki.ralfbarkow.ch",
      "slug": "lineup-based-signaling",
      "title": "Lineup Based Signaling",
      "text": "The breakthrough moment for us was when [[Eric Dobbs]] added lineup based signaling between Frames."
    },
    {
      "type": "reference",
      "id": "a1e40b373d6ddd6d",
      "site": "wiki.ralfbarkow.ch",
      "slug": "plugin-based-reusable-ui",
      "title": "Plugin-Based Reusable UI",
      "text": "This started as a playground to try elm-ui, but it is here as a proof of concept for a plugin-based reusable UI (for now based on an infamous iframe) and code sample for a question on StackOverflow"
    },
    {
      "type": "reference",
      "id": "2f07238ad018a484",
      "site": "wiki.dbbs.co",
      "slug": "collaborative-automation",
      "title": "Collaborative Automation",
      "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://blog.atomist.com/principles-of-collaborative-automation/ article]"
    },
    {
      "type": "reference",
      "id": "32d3ccab2f9f320e",
      "site": "wiki.ralfbarkow.ch",
      "slug": "elm-and-ai",
      "title": "Elm and AI",
      "text": "Can we get strong guarantees from AI tools that are known to hallucinate? We discuss some strategies, and ways that [[Elm]] might be a great target for AI assistance."
    },
    {
      "type": "pagefold",
      "id": "a6a505bfbf65be54",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "ef2724c698196fe7",
      "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post], Elm FAQ [https://faq.elm-community.org/ site]"
    },
    {
      "type": "markdown",
      "id": "39122ea652798ca0",
      "text": "* Types [https://guide.elm-lang.org/types/ page]\n* Type Aliases [https://guide.elm-lang.org/types/type_aliases.html page]"
    },
    {
      "type": "paragraph",
      "id": "3c7b33a0835ed7ee",
      "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean faq]: It is the empty tuple or [[Unit Type]]. It serves much like [[void]], null, or None in other languages."
    },
    {
      "type": "paragraph",
      "id": "3fd5ef1be9f1b93b",
      "text": "How can I use multiple Elm programs on the same page? [https://faq.elm-community.org/#how-can-i-use-multiple-elm-programs-on-the-same-page faq]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-06-02",
        "story": []
      },
      "date": 1685687587020
    },
    {
      "item": {
        "type": "factory",
        "id": "7291f87b642b59c5"
      },
      "id": "7291f87b642b59c5",
      "type": "add",
      "date": 1685687687684
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "["
      },
      "date": 1685687693837
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "[https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]"
      },
      "date": 1685687708550
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]"
      },
      "date": 1685687719636
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias."
      },
      "date": 1685687729672
    },
    {
      "item": {
        "type": "factory",
        "id": "39122ea652798ca0"
      },
      "id": "39122ea652798ca0",
      "type": "add",
      "after": "7291f87b642b59c5",
      "date": 1685687874351
    },
    {
      "type": "edit",
      "id": "39122ea652798ca0",
      "item": {
        "type": "markdown",
        "id": "39122ea652798ca0",
        "text": "* Types"
      },
      "date": 1685687879216
    },
    {
      "type": "edit",
      "id": "39122ea652798ca0",
      "item": {
        "type": "markdown",
        "id": "39122ea652798ca0",
        "text": "* Types [https://guide.elm-lang.org/types/ page]"
      },
      "date": 1685687889046
    },
    {
      "type": "edit",
      "id": "39122ea652798ca0",
      "item": {
        "type": "markdown",
        "id": "39122ea652798ca0",
        "text": "* Types [https://guide.elm-lang.org/types/ page]\n* Type Aliases"
      },
      "date": 1685687912322
    },
    {
      "type": "edit",
      "id": "39122ea652798ca0",
      "item": {
        "type": "markdown",
        "id": "39122ea652798ca0",
        "text": "* Types [https://guide.elm-lang.org/types/ page]\n* Type Aliases [https://guide.elm-lang.org/types/type_aliases.html page]"
      },
      "date": 1685687924016
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post]"
      },
      "date": 1685688055972
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post], [Elm FAQ"
      },
      "date": 1685688109118
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post], Elm FAQ "
      },
      "date": 1685688124663
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post], Elm FAQ [https://faq.elm-community.org/ site]"
      },
      "date": 1685688136218
    },
    {
      "item": {
        "type": "factory",
        "id": "3c7b33a0835ed7ee"
      },
      "id": "3c7b33a0835ed7ee",
      "type": "add",
      "after": "39122ea652798ca0",
      "date": 1685688262222
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean?"
      },
      "date": 1685688264708
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean faq]"
      },
      "date": 1685688279470
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean page]: It is the empty tuple or [[unit type]]. It serves much like void, null, or None in other languages."
      },
      "date": 1685688317213
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean faq]: It is the empty tuple or [[unit type]]. It serves much like void, null, or None in other languages."
      },
      "date": 1685688345114
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean faq]: It is the empty tuple or [[Unit Type]]. It serves much like void, null, or None in other languages."
      },
      "date": 1685688375947
    },
    {
      "type": "edit",
      "id": "3c7b33a0835ed7ee",
      "item": {
        "type": "paragraph",
        "id": "3c7b33a0835ed7ee",
        "text": "What does () mean? [https://faq.elm-community.org/#what-does--mean faq]: It is the empty tuple or [[Unit Type]]. It serves much like [[void]], null, or None in other languages."
      },
      "date": 1685688426906
    },
    {
      "item": {
        "type": "factory",
        "id": "3fd5ef1be9f1b93b"
      },
      "id": "3fd5ef1be9f1b93b",
      "type": "add",
      "after": "3c7b33a0835ed7ee",
      "date": 1685688819656
    },
    {
      "type": "edit",
      "id": "3fd5ef1be9f1b93b",
      "item": {
        "type": "paragraph",
        "id": "3fd5ef1be9f1b93b",
        "text": "How can I use multiple Elm programs on the same page?"
      },
      "date": 1685688823875
    },
    {
      "type": "edit",
      "id": "3fd5ef1be9f1b93b",
      "item": {
        "type": "paragraph",
        "id": "3fd5ef1be9f1b93b",
        "text": "How can I use multiple Elm programs on the same page? [https://faq.elm-community.org/#how-can-i-use-multiple-elm-programs-on-the-same-page faq]"
      },
      "date": 1685688835191
    },
    {
      "item": {
        "type": "factory",
        "id": "c566d95b8384df1d"
      },
      "id": "c566d95b8384df1d",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685688964026
    },
    {
      "type": "edit",
      "id": "c566d95b8384df1d",
      "item": {
        "type": "paragraph",
        "id": "c566d95b8384df1d",
        "text": "Figure out how JSON decoders in Elm work by writing them. Step by step.\n"
      },
      "date": 1685688966597
    },
    {
      "type": "edit",
      "id": "c566d95b8384df1d",
      "item": {
        "type": "paragraph",
        "id": "c566d95b8384df1d",
        "text": "Figure out how JSON decoders in Elm work by writing them. Step by step. [https://github.com/zwilias/elm-demystify-decoders github]\n"
      },
      "date": 1685688976719
    },
    {
      "type": "edit",
      "id": "c566d95b8384df1d",
      "item": {
        "type": "paragraph",
        "id": "c566d95b8384df1d",
        "text": "Figure out how JSON decoders in Elm work by writing them. Step by step. [https://github.com/zwilias/elm-demystify-decoders github], Demystifying Elm JSON Decoders\n"
      },
      "date": 1685688994884
    },
    {
      "type": "edit",
      "id": "c566d95b8384df1d",
      "item": {
        "type": "paragraph",
        "id": "c566d95b8384df1d",
        "text": "Figure out how JSON decoders in Elm work by writing them. Step by step. [https://github.com/zwilias/elm-demystify-decoders github], Demystifying Elm JSON Decoders [https://blog.ilias.xyz/demystifying-decoders-d294ed35bc6e?gi=aeb248d9f701 post]"
      },
      "date": 1685689014368
    },
    {
      "item": {
        "type": "factory",
        "id": "0f2f41bed8ba763a"
      },
      "id": "0f2f41bed8ba763a",
      "type": "add",
      "after": "c566d95b8384df1d",
      "date": 1685689164736
    },
    {
      "type": "edit",
      "id": "0f2f41bed8ba763a",
      "item": {
        "type": "code",
        "id": "0f2f41bed8ba763a",
        "text": "pm -g i elm elm-test"
      },
      "date": 1685689166423
    },
    {
      "type": "edit",
      "id": "0f2f41bed8ba763a",
      "item": {
        "type": "code",
        "id": "0f2f41bed8ba763a",
        "text": "npm -g i elm elm-test"
      },
      "date": 1685689173536
    },
    {
      "item": {
        "type": "factory",
        "id": "8517c3659c3bfaa3"
      },
      "id": "8517c3659c3bfaa3",
      "type": "add",
      "after": "0f2f41bed8ba763a",
      "date": 1685690243876
    },
    {
      "type": "edit",
      "id": "8517c3659c3bfaa3",
      "item": {
        "type": "paragraph",
        "id": "8517c3659c3bfaa3",
        "text": "Call for testing of elm-explorations/test 2.0.0"
      },
      "date": 1685690251390
    },
    {
      "item": {
        "type": "factory",
        "id": "1b729fb35565a311"
      },
      "id": "1b729fb35565a311",
      "type": "add",
      "after": "8517c3659c3bfaa3",
      "date": 1685690280890
    },
    {
      "type": "edit",
      "id": "1b729fb35565a311",
      "item": {
        "type": "paragraph",
        "id": "1b729fb35565a311",
        "text": "[https://www.npmjs.com/package/elm-test npmjs]"
      },
      "date": 1685690303888
    },
    {
      "type": "edit",
      "id": "1b729fb35565a311",
      "item": {
        "type": "paragraph",
        "id": "1b729fb35565a311",
        "text": "[https://www.npmjs.com/package/elm-test npmjs], [https://github.com/rtfeldman/node-test-runner github]"
      },
      "date": 1685690339493
    },
    {
      "type": "remove",
      "id": "1b729fb35565a311",
      "date": 1685690356088
    },
    {
      "type": "edit",
      "id": "8517c3659c3bfaa3",
      "item": {
        "type": "paragraph",
        "id": "8517c3659c3bfaa3",
        "text": "Call for testing of elm-explorations/test 2.0.0 [https://www.npmjs.com/package/elm-test npmjs], [https://github.com/rtfeldman/node-test-runner github]"
      },
      "date": 1685690357712
    },
    {
      "type": "edit",
      "id": "8517c3659c3bfaa3",
      "item": {
        "type": "paragraph",
        "id": "8517c3659c3bfaa3",
        "text": "Call for testing of elm-explorations/test 2.0.0 [https://discourse.elm-lang.org/t/call-for-testing-of-elm-explorations-test-2-0-0/8458 discourse], [https://www.npmjs.com/package/elm-test npmjs], [https://github.com/rtfeldman/node-test-runner github]"
      },
      "date": 1685690446546
    },
    {
      "type": "edit",
      "id": "8517c3659c3bfaa3",
      "item": {
        "type": "paragraph",
        "id": "8517c3659c3bfaa3",
        "text": "Call for testing of elm-explorations/test 2.0.0 [https://discourse.elm-lang.org/t/call-for-testing-of-elm-explorations-test-2-0-0/8458 discourse], [https://www.npmjs.com/package/elm-test npmjs], [https://github.com/rtfeldman/node-test-runner github], [https://package.elm-lang.org/packages/elm-explorations/test/latest package]"
      },
      "date": 1685690569203
    },
    {
      "item": {
        "type": "factory",
        "id": "678c51b72e3ff643"
      },
      "id": "678c51b72e3ff643",
      "type": "add",
      "after": "8517c3659c3bfaa3",
      "date": 1685690799755
    },
    {
      "type": "edit",
      "id": "678c51b72e3ff643",
      "item": {
        "type": "paragraph",
        "id": "678c51b72e3ff643",
        "text": "vite-elm-dojo: Test"
      },
      "date": 1685690805315
    },
    {
      "type": "edit",
      "id": "678c51b72e3ff643",
      "item": {
        "type": "paragraph",
        "id": "678c51b72e3ff643",
        "text": "vite-elm-dojo: Test-Explorer"
      },
      "date": 1685690816936
    },
    {
      "type": "edit",
      "id": "678c51b72e3ff643",
      "item": {
        "type": "paragraph",
        "id": "678c51b72e3ff643",
        "text": "⇒ vite-elm-dojo: Test-Explorer"
      },
      "date": 1685690838120
    },
    {
      "item": {
        "type": "factory",
        "id": "759d179ce050ddbc"
      },
      "id": "759d179ce050ddbc",
      "type": "add",
      "after": "678c51b72e3ff643",
      "date": 1685692091021
    },
    {
      "type": "edit",
      "id": "759d179ce050ddbc",
      "item": {
        "type": "paragraph",
        "id": "759d179ce050ddbc",
        "text": "fix(elm.json): elm-test 0.19.1-revision12 and elm-explorations/test 2.x #17 "
      },
      "date": 1685692096787
    },
    {
      "type": "edit",
      "id": "759d179ce050ddbc",
      "item": {
        "type": "paragraph",
        "id": "759d179ce050ddbc",
        "text": "fix(elm.json): elm-test 0.19.1-revision12 and elm-explorations/test 2.x #17 [https://github.com/zwilias/elm-demystify-decoders/pull/17 pr]"
      },
      "date": 1685692113234
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "⇒ [[Elm and JSON]] ⇒ [[Decoding JSON HTTP Responses]] ⇒ [[Exploratory Parsing]]"
      },
      "date": 1685695768847
    },
    {
      "type": "add",
      "id": "ef2724c698196fe7",
      "item": {
        "type": "paragraph",
        "id": "ef2724c698196fe7",
        "text": "Hints for Recursive Type Aliases [https://github.com/elm/compiler/blob/master/hints/recursive-alias.md#hints-for-recursive-type-aliases page]: At the root of this issue is the distinction between a type and a type alias. [https://www.bigbinary.com/blog/difference-between-type-and-type-alias-in-elm post], Elm FAQ [https://faq.elm-community.org/ site]"
      },
      "after": "7291f87b642b59c5",
      "date": 1685695769429
    },
    {
      "type": "edit",
      "id": "7291f87b642b59c5",
      "item": {
        "type": "paragraph",
        "id": "7291f87b642b59c5",
        "text": "⇒ [[Elm and JSON]], [https://github.com/RalfBarkow/vite-elm-dojo/commit/7bb6c0d63ec2df3f0339fdab9de28d1f02584b75 commit] ⇒ [[Decoding JSON HTTP Responses]] ⇒ [[Exploratory Parsing]]"
      },
      "date": 1685695796777
    },
    {
      "item": {
        "type": "factory",
        "id": "bd74eabf23d230b1"
      },
      "id": "bd74eabf23d230b1",
      "type": "add",
      "after": "759d179ce050ddbc",
      "date": 1685696228518
    },
    {
      "id": "bd74eabf23d230b1",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685696232419
    },
    {
      "type": "edit",
      "id": "bd74eabf23d230b1",
      "item": {
        "type": "reference",
        "id": "bd74eabf23d230b1",
        "site": "js.ward.asia.wiki.org",
        "slug": "create-items-and-pages",
        "title": "Create Items and Pages",
        "text": "We create items and pages with all of the page json elements we would expect of complete pages."
      },
      "date": 1685696235107
    },
    {
      "item": {
        "type": "factory",
        "id": "a6a505bfbf65be54"
      },
      "id": "a6a505bfbf65be54",
      "type": "add",
      "after": "759d179ce050ddbc",
      "date": 1685696249111
    },
    {
      "id": "a6a505bfbf65be54",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685696255592
    },
    {
      "type": "edit",
      "id": "a6a505bfbf65be54",
      "item": {
        "type": "pagefold",
        "id": "a6a505bfbf65be54",
        "text": "~"
      },
      "date": 1685696259746
    },
    {
      "item": {
        "type": "factory",
        "id": "7e3a69d3b362958b"
      },
      "id": "7e3a69d3b362958b",
      "type": "add",
      "after": "759d179ce050ddbc",
      "date": 1685696329725
    },
    {
      "type": "edit",
      "id": "7e3a69d3b362958b",
      "item": {
        "type": "reference",
        "id": "7e3a69d3b362958b",
        "site": "clive.tries.fed.wiki",
        "slug": "json-schema",
        "title": "JSON Schema",
        "text": "We define the schema for federated wiki pages to the depth that we know it. We use a BNF-like notation to suggest JSON elements. Any ambiguity will be resolved by examining the example. We close with a brief reflection on the successes of the format."
      },
      "date": 1685696334173
    },
    {
      "id": "7e3a69d3b362958b",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685696338997
    },
    {
      "id": "c566d95b8384df1d",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685697240111
    },
    {
      "id": "0f2f41bed8ba763a",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685697256873
    },
    {
      "id": "8517c3659c3bfaa3",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "678c51b72e3ff643",
        "759d179ce050ddbc"
      ],
      "date": 1685697421380
    },
    {
      "id": "678c51b72e3ff643",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b",
        "759d179ce050ddbc"
      ],
      "date": 1685697427183
    },
    {
      "id": "759d179ce050ddbc",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685697431738
    },
    {
      "type": "edit",
      "id": "c566d95b8384df1d",
      "item": {
        "type": "paragraph",
        "id": "c566d95b8384df1d",
        "text": "Figure out how JSON decoders in [[Elm]] work by writing them. Step by step. [https://github.com/zwilias/elm-demystify-decoders github], Demystifying Elm JSON Decoders [https://blog.ilias.xyz/demystifying-decoders-d294ed35bc6e?gi=aeb248d9f701 post]"
      },
      "date": 1685697830772
    },
    {
      "item": {
        "type": "factory",
        "id": "6881e81550462ace"
      },
      "id": "6881e81550462ace",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685698239070
    },
    {
      "type": "edit",
      "id": "6881e81550462ace",
      "item": {
        "type": "reference",
        "id": "6881e81550462ace",
        "site": "wiki.ralfbarkow.ch",
        "slug": "lineup-based-signaling",
        "title": "Lineup Based Signaling",
        "text": "The breakthrough moment for us was when [[Eric Dobbs]] added lineup based signaling between Frames."
      },
      "date": 1685698241724
    },
    {
      "id": "6881e81550462ace",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685698248270
    },
    {
      "item": {
        "type": "factory",
        "id": "a1e40b373d6ddd6d"
      },
      "id": "a1e40b373d6ddd6d",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685698319132
    },
    {
      "type": "edit",
      "id": "a1e40b373d6ddd6d",
      "item": {
        "type": "reference",
        "id": "a1e40b373d6ddd6d",
        "site": "wiki.ralfbarkow.ch",
        "slug": "plugin-based-reusable-ui",
        "title": "Plugin-Based Reusable UI",
        "text": "This started as a playground to try elm-ui, but it is here as a proof of concept for a plugin-based reusable UI (for now based on an infamous iframe) and code sample for a question on StackOverflow"
      },
      "date": 1685698320795
    },
    {
      "id": "a1e40b373d6ddd6d",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685698323354
    },
    {
      "item": {
        "type": "factory",
        "id": "2f07238ad018a484"
      },
      "id": "2f07238ad018a484",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685698358035
    },
    {
      "type": "edit",
      "id": "2f07238ad018a484",
      "item": {
        "type": "reference",
        "id": "2f07238ad018a484",
        "site": "wiki.dbbs.co",
        "slug": "collaborative-automation",
        "title": "Collaborative Automation",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1685698360930
    },
    {
      "id": "2f07238ad018a484",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685698366801
    },
    {
      "item": {
        "type": "factory",
        "id": "32d3ccab2f9f320e"
      },
      "id": "32d3ccab2f9f320e",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685698382941
    },
    {
      "type": "edit",
      "id": "32d3ccab2f9f320e",
      "item": {
        "type": "reference",
        "id": "32d3ccab2f9f320e",
        "site": "wiki.ralfbarkow.ch",
        "slug": "elm-and-ai",
        "title": "Elm and AI",
        "text": "Can we get strong guarantees from AI tools that are known to hallucinate? We discuss some strategies, and ways that [[Elm]] might be a great target for AI assistance."
      },
      "date": 1685698386100
    },
    {
      "id": "32d3ccab2f9f320e",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685698394915
    },
    {
      "type": "edit",
      "id": "759d179ce050ddbc",
      "item": {
        "type": "paragraph",
        "id": "759d179ce050ddbc",
        "text": "fix(elm.json): elm-test 0.19.1-revision12 and elm-explorations/test 2.x #17 [https://github.com/zwilias/elm-demystify-decoders/pull/17 pr] ⇒ [[Ilias Van Peer]]"
      },
      "date": 1685698480598
    },
    {
      "item": {
        "type": "factory",
        "id": "1993a3dfe86732f8"
      },
      "id": "1993a3dfe86732f8",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685700177352
    },
    {
      "type": "edit",
      "id": "1993a3dfe86732f8",
      "item": {
        "type": "reference",
        "id": "1993a3dfe86732f8",
        "site": "wiki.ralfbarkow.ch",
        "slug": "create-new-page-test",
        "title": "Create New Page Test",
        "text": "A page with 0 items."
      },
      "date": 1685700179501
    },
    {
      "id": "1993a3dfe86732f8",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700248580
    },
    {
      "item": {
        "type": "factory",
        "id": "d55f2aeaf0d7ae03"
      },
      "id": "d55f2aeaf0d7ae03",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685700385185
    },
    {
      "id": "d55f2aeaf0d7ae03",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "d55f2aeaf0d7ae03",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700397214
    },
    {
      "id": "d55f2aeaf0d7ae03",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "d55f2aeaf0d7ae03",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700403906
    },
    {
      "type": "edit",
      "id": "d55f2aeaf0d7ae03",
      "item": {
        "type": "code",
        "id": "d55f2aeaf0d7ae03",
        "text": "-- create new blank page\n\n{\n  \"title\": \"Create New Page Test\",\n  \"story\": [\n    {\n      \"id\": \"d2836612fd516f0c\",\n      \"type\": \"future\",\n      \"text\": \"We could not find this page.\",\n      \"title\": \"Create New Page Test\"\n    }\n  ],\n  \"journal\": []\n}"
      },
      "date": 1685700406100
    },
    {
      "type": "add",
      "id": "83d2955b5044e8e3",
      "item": {
        "type": "paragraph",
        "id": "83d2955b5044e8e3",
        "text": "We could not find this page."
      },
      "after": "7291f87b642b59c5",
      "date": 1685700443574
    },
    {
      "id": "83d2955b5044e8e3",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "d55f2aeaf0d7ae03",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700446788
    },
    {
      "type": "edit",
      "id": "83d2955b5044e8e3",
      "item": {
        "type": "paragraph",
        "id": "83d2955b5044e8e3",
        "text": "State: \"We could not find this page.\""
      },
      "date": 1685700511834
    },
    {
      "type": "add",
      "id": "7ce454b9998d0ad9",
      "item": {
        "type": "paragraph",
        "id": "7ce454b9998d0ad9",
        "text": "State: Creating"
      },
      "after": "83d2955b5044e8e3",
      "date": 1685700518200
    },
    {
      "item": {
        "type": "factory",
        "id": "39f0edb95f6e65d8"
      },
      "id": "39f0edb95f6e65d8",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685700624269
    },
    {
      "type": "edit",
      "id": "39f0edb95f6e65d8",
      "item": {
        "type": "code",
        "id": "39f0edb95f6e65d8",
        "text": "-- JSON for Create New Page Test\n\n{\n  \"title\": \"Create New Page Test\",\n  \"story\": [],\n  \"journal\": [\n    {\n      \"type\": \"create\",\n      \"item\": {\n        \"title\": \"Create New Page Test\",\n        \"story\": []\n      },\n      \"date\": 1685700575889\n    }\n  ]\n}"
      },
      "date": 1685700626478
    },
    {
      "id": "39f0edb95f6e65d8",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "39f0edb95f6e65d8",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700631180
    },
    {
      "type": "add",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "type future"
      },
      "after": "7ce454b9998d0ad9",
      "date": 1685700738594
    },
    {
      "id": "a237d227330ad06e",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "39f0edb95f6e65d8",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685700741069
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "type future ⇒ type create"
      },
      "date": 1685700779264
    },
    {
      "item": {
        "type": "factory",
        "id": "7fcf23fa5c3a961e"
      },
      "id": "7fcf23fa5c3a961e",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685701032786
    },
    {
      "type": "edit",
      "id": "7fcf23fa5c3a961e",
      "item": {
        "type": "paragraph",
        "id": "7fcf23fa5c3a961e",
        "text": "\nMACMURRAY, Andrew, 2019. Map in Elm. Medium. Online. 4 February 2019. [Accessed 31 May 2023]. Available from: https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139dUnderstanding and using Elm’s many maps\n"
      },
      "date": 1685701036661
    },
    {
      "type": "edit",
      "id": "7fcf23fa5c3a961e",
      "item": {
        "type": "paragraph",
        "id": "7fcf23fa5c3a961e",
        "text": "MACMURRAY, Andrew, 2019. Map in Elm. [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post]"
      },
      "date": 1685701072527
    },
    {
      "id": "7fcf23fa5c3a961e",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "39f0edb95f6e65d8",
        "7fcf23fa5c3a961e",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685701094079
    },
    {
      "type": "edit",
      "id": "7fcf23fa5c3a961e",
      "item": {
        "type": "paragraph",
        "id": "7fcf23fa5c3a961e",
        "text": "MACMURRAY, Andrew, 2019. Map in Elm. [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post] [[Over the Wall]]"
      },
      "date": 1685701136994
    },
    {
      "type": "edit",
      "id": "7fcf23fa5c3a961e",
      "item": {
        "type": "paragraph",
        "id": "7fcf23fa5c3a961e",
        "text": "MACMURRAY, Andrew, 2019. Map in Elm. [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post] ⇒ [[Over the Wall]]"
      },
      "date": 1685701152012
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future)"
      },
      "date": 1685701402495
    },
    {
      "type": "add",
      "id": "5b6c1bc79340042a",
      "item": {
        "type": "paragraph",
        "id": "5b6c1bc79340042a",
        "text": "type future ⇒ type create"
      },
      "after": "a237d227330ad06e",
      "date": 1685701404241
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values inside the story."
      },
      "date": 1685701434220
    },
    {
      "type": "add",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story."
      },
      "after": "5b6c1bc79340042a",
      "date": 1685701460585
    },
    {
      "id": "2d341950c2153754",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685701465274
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values inside the story. (There are no values inside the journal.)"
      },
      "date": 1685701514996
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal."
      },
      "date": 1685701524611
    },
    {
      "type": "add",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations"
      },
      "after": "7fcf23fa5c3a961e",
      "date": 1685701708438
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page]"
      },
      "date": 1685701717958
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List"
      },
      "date": 1685701828589
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page]"
      },
      "date": 1685701841953
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page], Elm Syntax [https://elm-lang.org/docs/syntax#lists page]"
      },
      "date": 1685701905132
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page], Elm Syntax [https://elm-lang.org/docs/syntax#lists page], https://package.elm-lang.org/packages/elm/core/latest/List page"
      },
      "date": 1685702002186
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page], Elm Syntax [https://elm-lang.org/docs/syntax#lists page],  elm / core [https://package.elm-lang.org/packages/elm/core/latest/List page]"
      },
      "date": 1685702040197
    },
    {
      "type": "edit",
      "id": "1a269d027f3f04d2",
      "item": {
        "type": "paragraph",
        "id": "1a269d027f3f04d2",
        "text": "List operations [https://www.tutorialspoint.com/elm/elm_list.htm page], List [https://elmprogramming.com/list.html page], Elm Syntax [https://elm-lang.org/docs/syntax#lists page],  elm / core [https://package.elm-lang.org/packages/elm/core/latest/List page]: Deconstruct"
      },
      "date": 1685702096071
    },
    {
      "item": {
        "type": "factory",
        "id": "83d329c202a5dbe0"
      },
      "id": "83d329c202a5dbe0",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685702111240
    },
    {
      "type": "edit",
      "id": "83d329c202a5dbe0",
      "item": {
        "type": "code",
        "id": "83d329c202a5dbe0",
        "text": "isEmpty : List a -> Bool"
      },
      "date": 1685702113148
    },
    {
      "id": "83d329c202a5dbe0",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685702119713
    },
    {
      "type": "add",
      "id": "fb023ed0306b68d7",
      "item": {
        "type": "paragraph",
        "id": "fb023ed0306b68d7",
        "text": "Determine if a list is empty."
      },
      "after": "1a269d027f3f04d2",
      "date": 1685702130885
    },
    {
      "id": "83d329c202a5dbe0",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685702132840
    },
    {
      "item": {
        "type": "factory",
        "id": "54b1a3a943a85403"
      },
      "id": "54b1a3a943a85403",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685702150357
    },
    {
      "type": "edit",
      "id": "54b1a3a943a85403",
      "item": {
        "type": "code",
        "id": "54b1a3a943a85403",
        "text": "isEmpty [] == True\n"
      },
      "date": 1685702154853
    },
    {
      "id": "54b1a3a943a85403",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685702163102
    },
    {
      "type": "add",
      "id": "b58b09bee8e348a2",
      "item": {
        "type": "paragraph",
        "id": "b58b09bee8e348a2",
        "text": "Note: It is usually preferable to use a case to test this so you do not forget to handle the (x :: xs) case as well!"
      },
      "after": "fb023ed0306b68d7",
      "date": 1685702182903
    },
    {
      "id": "54b1a3a943a85403",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685702184926
    },
    {
      "type": "edit",
      "id": "7fcf23fa5c3a961e",
      "item": {
        "type": "paragraph",
        "id": "7fcf23fa5c3a961e",
        "text": "MACMURRAY, Andrew, 2019. Map in Elm. [https://medium.com/@andrewMacmurray/the-meaning-of-map-in-elm-6480afc8139d post] ⇒ [[Over the Wall]] ⇒ [[List]]"
      },
      "date": 1685702488058
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values inside the story. The main value is the indication that this page has not been found yet. (There are no values inside the journal.)"
      },
      "date": 1685702796627
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values inside the story. The main value is the [[indication]] that this page has not been found yet. (There are no values inside the journal.)"
      },
      "date": 1685702868576
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values inside the story. The main value is the [[Indication]] that this page has not been found yet. (There are no values inside the journal.)"
      },
      "date": 1685702904465
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values [[inside]] have been reached. The wall is still intact afterwards, but the values are now changed."
      },
      "date": 1685703420590
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values [[inside]] have been reached. The wall is still intact afterwards, but the values are now changed. They were carried from one (in)side (the story) to the other (the journal)."
      },
      "date": 1685703531822
    },
    {
      "type": "edit",
      "id": "a237d227330ad06e",
      "item": {
        "type": "paragraph",
        "id": "a237d227330ad06e",
        "text": "In this state (type future) there are values [[inside]] the story. The main value is the [[Indication]] that this page has not been found yet. (There are no values inside the journal.)"
      },
      "date": 1685703566612
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They were carried from one (in)side (the story) to the other (the journal)."
      },
      "date": 1685703578231
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal)."
      },
      "date": 1685703719798
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal). [⇒]"
      },
      "date": 1685703978799
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal). [⇒ [[cross]]"
      },
      "date": 1685703989198
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal). [⇒ [[cross]]]"
      },
      "date": 1685703995884
    },
    {
      "type": "edit",
      "id": "2d341950c2153754",
      "item": {
        "type": "paragraph",
        "id": "2d341950c2153754",
        "text": "In this state (type create) there are no values inside the story. There are values inside the journal. The values inside have been reached. The wall is still intact afterwards, but the values are now changed. They have been carried over from one (inner) side (the story) to the other (the journal). [⇒ [[cross]] ⇒ [[Laws of Form Objects]]]"
      },
      "date": 1685704027403
    },
    {
      "item": {
        "type": "factory",
        "id": "16b9736537ca911b"
      },
      "id": "16b9736537ca911b",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685708916110
    },
    {
      "type": "edit",
      "id": "16b9736537ca911b",
      "item": {
        "type": "code",
        "id": "16b9736537ca911b",
        "text": "<form \n  action=\"http://new_page/\"\n  style=\"background-color:#eee; padding:15px;\">\n\n[[Create New Page]]<br><br>\n<input\n  name=title\n  size=50\n  placeholder=\"New Page Title\">\n<input\n  type=submit\n  value=create>\n</center>\n</form>"
      },
      "date": 1685708921132
    },
    {
      "id": "16b9736537ca911b",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "16b9736537ca911b",
        "1993a3dfe86732f8",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685708941096
    },
    {
      "id": "1993a3dfe86732f8",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "16b9736537ca911b",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685708961226
    },
    {
      "type": "add",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note:"
      },
      "after": "7291f87b642b59c5",
      "date": 1685709035320
    },
    {
      "id": "b5fc6f4889c45112",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "b5fc6f4889c45112",
        "16b9736537ca911b",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685709038888
    },
    {
      "type": "edit",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note: "
      },
      "date": 1685709045282
    },
    {
      "type": "edit",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note: The [[Create New Page Test]] was created using a [[HTML Form]]."
      },
      "date": 1685709108822
    },
    {
      "type": "edit",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note: The [[Create New Page Test]] was created using a [[HTML Form]]:"
      },
      "date": 1685709123201
    },
    {
      "type": "edit",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note: The [[Create New Page Test]] was created with an [[HTML Form]]:"
      },
      "date": 1685709153107
    },
    {
      "type": "edit",
      "id": "b5fc6f4889c45112",
      "item": {
        "type": "paragraph",
        "id": "b5fc6f4889c45112",
        "text": "Note: The [[Create New Page Test]] was created with an [[HTML Form]]: [⇒ [[Form]]]"
      },
      "date": 1685709180698
    },
    {
      "type": "add",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. "
      },
      "after": "759d179ce050ddbc",
      "date": 1685709753095
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github]"
      },
      "date": 1685709801338
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]"
      },
      "date": 1685709814299
    },
    {
      "item": {
        "type": "factory",
        "id": "4f27791c29e2d9e4"
      },
      "id": "4f27791c29e2d9e4",
      "type": "add",
      "after": "3fd5ef1be9f1b93b",
      "date": 1685710503212
    },
    {
      "type": "edit",
      "id": "4f27791c29e2d9e4",
      "item": {
        "type": "code",
        "id": "4f27791c29e2d9e4",
        "text": "(setf (lsp-session-folders-blacklist (lsp-session)) nil)\n(lsp--persist-session (lsp-session))"
      },
      "date": 1685710507430
    },
    {
      "id": "4f27791c29e2d9e4",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "b5fc6f4889c45112",
        "16b9736537ca911b",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "7cd5d37e71d58b18",
        "4f27791c29e2d9e4",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685710517265
    },
    {
      "type": "add",
      "id": "e87a34284604b898",
      "item": {
        "type": "paragraph",
        "id": "e87a34284604b898",
        "text": "Evaluating a Region or Buffer"
      },
      "after": "7cd5d37e71d58b18",
      "date": 1685710540510
    },
    {
      "type": "edit",
      "id": "e87a34284604b898",
      "item": {
        "type": "paragraph",
        "id": "e87a34284604b898",
        "text": "Evaluating a Region or Buffer [https://www.masteringemacs.org/article/evaluating-elisp-emacs page] in [[Emacs]]"
      },
      "date": 1685710571278
    },
    {
      "type": "add",
      "id": "b2c22b1809032276",
      "item": {
        "type": "paragraph",
        "id": "b2c22b1809032276",
        "text": "This will cleanup blacklist folders. "
      },
      "after": "e87a34284604b898",
      "date": 1685710666612
    },
    {
      "id": "b2c22b1809032276",
      "type": "move",
      "order": [
        "7291f87b642b59c5",
        "bd74eabf23d230b1",
        "1993a3dfe86732f8",
        "b5fc6f4889c45112",
        "16b9736537ca911b",
        "83d2955b5044e8e3",
        "7ce454b9998d0ad9",
        "d55f2aeaf0d7ae03",
        "a237d227330ad06e",
        "5b6c1bc79340042a",
        "39f0edb95f6e65d8",
        "2d341950c2153754",
        "7fcf23fa5c3a961e",
        "1a269d027f3f04d2",
        "83d329c202a5dbe0",
        "fb023ed0306b68d7",
        "54b1a3a943a85403",
        "b58b09bee8e348a2",
        "7e3a69d3b362958b",
        "c566d95b8384df1d",
        "0f2f41bed8ba763a",
        "8517c3659c3bfaa3",
        "678c51b72e3ff643",
        "759d179ce050ddbc",
        "7cd5d37e71d58b18",
        "e87a34284604b898",
        "4f27791c29e2d9e4",
        "b2c22b1809032276",
        "6881e81550462ace",
        "a1e40b373d6ddd6d",
        "2f07238ad018a484",
        "32d3ccab2f9f320e",
        "a6a505bfbf65be54",
        "ef2724c698196fe7",
        "39122ea652798ca0",
        "3c7b33a0835ed7ee",
        "3fd5ef1be9f1b93b"
      ],
      "date": 1685710668872
    },
    {
      "type": "edit",
      "id": "b2c22b1809032276",
      "item": {
        "type": "paragraph",
        "id": "b2c22b1809032276",
        "text": "This will cleanup blacklist folders. [https://www.reddit.com/r/emacs/comments/bjrd3f/how_can_i_unlock_folder_from_lspmode_blacklist/ reddit]]"
      },
      "date": 1685710701650
    },
    {
      "type": "edit",
      "id": "b2c22b1809032276",
      "item": {
        "type": "paragraph",
        "id": "b2c22b1809032276",
        "text": "This will cleanup blacklist folders. [https://www.reddit.com/r/emacs/comments/bjrd3f/how_can_i_unlock_folder_from_lspmode_blacklist/ reddit]"
      },
      "date": 1685710705427
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: t's common to decode into a record that has a type alias. "
      },
      "date": 1685710766205
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to decode into a record that has a type alias. "
      },
      "date": 1685710771285
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a record that has a type alias. "
      },
      "date": 1685710779015
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. "
      },
      "date": 1685710791668
    },
    {
      "type": "edit",
      "id": "7cd5d37e71d58b18",
      "item": {
        "type": "paragraph",
        "id": "7cd5d37e71d58b18",
        "text": "Use pipelines to build JSON Decoders in Elm. [https://github.com/NoRedInk/elm-json-decode-pipeline/tree/1.0.1 github], [https://package.elm-lang.org/packages/NoRedInk/elm-json-decode-pipeline/latest page]: It's common to [[decode]] into a [[Record]] that has a type alias. ⇒ [[Decode into a Record]]"
      },
      "date": 1685710887358
    }
  ]
}