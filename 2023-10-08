{
  "title": "2023-10-08",
  "story": [
    {
      "type": "paragraph",
      "id": "c609b7176d0c2d93",
      "text": "⇒ [[Economics]]"
    },
    {
      "type": "paragraph",
      "id": "b57376527405bcf9",
      "text": "“The [[Economics of Programming Languages]]” by Evan Czaplicki (Strange Loop 2023) [https://discourse.elm-lang.org/t/the-economics-of-programming-languages-by-evan-czaplicki-strange-loop-2023/9376 page]"
    },
    {
      "type": "video",
      "id": "26d8ebb966b3dc3b",
      "text": "YOUTUBE XZ3w_jec1v8"
    },
    {
      "type": "paragraph",
      "id": "c0f2d0cd767e3ec3",
      "text": "Small Assets without the Headache [https://elm-lang.org/news/small-assets-without-the-headache page]"
    },
    {
      "type": "paragraph",
      "id": "a672f6bd67b53117",
      "text": "[[Elm Studio]]"
    },
    {
      "type": "paragraph",
      "id": "0f93a2dc56291915",
      "text": "Worst Elm Code Possible [https://realmario.notion.site/realmario/Worst-Elm-Code-Possible-393f8fc7338b46afb13efb9766d909bf page]"
    },
    {
      "type": "paragraph",
      "id": "136e5ce694dc85ff",
      "text": "Snowdrift: A crowdmatching (crowdfunding) platform for public goods [https://discourse.elm-lang.org/t/snowdrift-a-crowdmatching-crowdfunding-platform-for-public-goods/9379 discourse] [https://gitlab.com/snowdrift/elm-website gitlab]"
    },
    {
      "type": "code",
      "id": "3a1fa286b7f57bac",
      "text": "  […]\nRan in 0ms   /elm.js\nUnexpected error TypeError: Cannot read properties of undefined (reading 'some')\n    at handleNavigationRequest (/Users/rgb/Projects/Snowdrift.coop/elm-website/elm-website/node_modules/elm-pages/generator/src/dev-server.js:311:59)\n-- PROBLEM BUILDING DEPENDENCIES --------------- \nI ran into a compilation error when trying to build the following package:\n\n    matheus23/elm-default-tailwind-modules 2.0.3\n\nThis probably means it has package constraints that are too wide. It may be\npossible to tweak your elm.json to avoid the root problem as a stopgap. Head\nover to https://elm-lang.org/community to get help figuring out how to take this\npath!\n\nNote: To help with the root problem, please report this to the package author\nalong with the following information:\n\n    elm/core 1.0.5\n    rtfeldman/elm-css 17.0.5\n\nIf you want to help out even more, try building the package locally. That should\ngive you much more specific information about why this package is failing to\nbuild, which will in turn make it easier for the package author to fix it!\nRan in 1ms   /content.json"
    },
    {
      "type": "paragraph",
      "id": "47fd34ba7b0851e6",
      "text": "Styles [https://gitlab.com/snowdrift/elm-website#styles page]"
    },
    {
      "type": "markdown",
      "id": "6f5e40faee2788c6",
      "text": "> Going for a utility classes approach [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] and atomic css [https://johnpolacek.github.io/the-case-for-atomic-css/ page]. Decided [[Tailwind]] was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
    },
    {
      "type": "paragraph",
      "id": "94d99f42f46ae59e",
      "text": "[[About Snowdrift.coop]]"
    },
    {
      "type": "paragraph",
      "id": "50381d11a7f86d17",
      "text": "Functional css for humans [https://github.com/tachyons-css/tachyons github] [https://tachyons.io/ site]"
    },
    {
      "type": "paragraph",
      "id": "a568211f5c3ba8d4",
      "text": "text-card [https://tachyons.io/components/cards/text-card/index.html page]"
    },
    {
      "type": "paragraph",
      "id": "ef6cc9171c71eae5",
      "text": "Tailwind CSS [https://package.elm-lang.org/packages/matheus23/elm-default-tailwind-modules/latest/ package]"
    },
    {
      "type": "paragraph",
      "id": "9aff21d33a0dc17d",
      "text": "elm-default-tailwind-modules [https://package.elm-lang.org/packages/matheus23/elm-default-tailwind-modules/latest/ package]"
    },
    {
      "type": "paragraph",
      "id": "f02feb75f65c4ac1",
      "text": "The default tailwind classes in Elm as elm-css generated using elm-tailwind-modules [https://github.com/matheus23/elm-default-tailwind-modules/tree/4.0.1 github]"
    },
    {
      "type": "paragraph",
      "id": "c8b8c1470edf8a91",
      "text": "CSS Utility Classes and \"Separation of Concerns\" [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] by [[Adam Wathan]]"
    },
    {
      "type": "paragraph",
      "id": "8b4fa7fce3efb75b",
      "text": "The Case for Atomic / Utility-First CSS [https://johnpolacek.github.io/the-case-for-atomic-css/ page]"
    },
    {
      "type": "paragraph",
      "id": "b2e00b1f7a9ec6c6",
      "text": "⇒ [[Atomic CSS]]"
    },
    {
      "type": "reference",
      "id": "6a22b6357cf6e143",
      "site": "spike.wiki.rodwell.me",
      "slug": "spike",
      "title": "Spike",
      "text": "Notes related to the current development spike."
    },
    {
      "type": "reference",
      "id": "769325536e2c4496",
      "site": "spike.wiki.rodwell.me",
      "slug": "inline-css-audit",
      "title": "Inline CSS Audit",
      "text": "Here, as part of a look at improving the use of CSS, we look at the style that is inlined by the client and plugins. Each plugin will get its own page."
    },
    {
      "type": "reference",
      "id": "00fbfa7176c95d47",
      "site": "spike.wiki.rodwell.me",
      "slug": "thoughts-on-css",
      "title": "Thoughts on CSS",
      "text": "Some random thoughts, about both the current and a possible future, CSS used in federated wiki."
    },
    {
      "type": "reference",
      "id": "d0f57cc350290d9b",
      "site": "spike.wiki.rodwell.me",
      "slug": "internal-link",
      "title": "Internal Link",
      "text": "Internal links make use of the page context, which provides a list of wiki to look in for the page."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2023-10-08",
        "story": []
      },
      "date": 1696744828314
    },
    {
      "item": {
        "type": "factory",
        "id": "c609b7176d0c2d93"
      },
      "id": "c609b7176d0c2d93",
      "type": "add",
      "date": 1696744857806
    },
    {
      "type": "edit",
      "id": "c609b7176d0c2d93",
      "item": {
        "type": "paragraph",
        "id": "c609b7176d0c2d93",
        "text": "“The Economics of Programming Languages” by Evan Czaplicki (Strange Loop 2023)"
      },
      "date": 1696744862776
    },
    {
      "type": "edit",
      "id": "c609b7176d0c2d93",
      "item": {
        "type": "paragraph",
        "id": "c609b7176d0c2d93",
        "text": "“The Economics of Programming Languages” by Evan Czaplicki (Strange Loop 2023) [https://discourse.elm-lang.org/t/the-economics-of-programming-languages-by-evan-czaplicki-strange-loop-2023/9376 page]"
      },
      "date": 1696744880994
    },
    {
      "item": {
        "type": "factory",
        "id": "26d8ebb966b3dc3b"
      },
      "id": "26d8ebb966b3dc3b",
      "type": "add",
      "after": "c609b7176d0c2d93",
      "date": 1696744890279
    },
    {
      "type": "edit",
      "id": "26d8ebb966b3dc3b",
      "item": {
        "type": "video",
        "id": "26d8ebb966b3dc3b",
        "text": "YOUTUBE XZ3w_jec1v8"
      },
      "date": 1696744905711
    },
    {
      "type": "edit",
      "id": "c609b7176d0c2d93",
      "item": {
        "type": "paragraph",
        "id": "c609b7176d0c2d93",
        "text": "“The [[Economics of Programming Languages]]” by Evan Czaplicki (Strange Loop 2023) [https://discourse.elm-lang.org/t/the-economics-of-programming-languages-by-evan-czaplicki-strange-loop-2023/9376 page]"
      },
      "date": 1696744977148
    },
    {
      "type": "edit",
      "id": "c609b7176d0c2d93",
      "item": {
        "type": "paragraph",
        "id": "c609b7176d0c2d93",
        "text": "[[Economics]]"
      },
      "date": 1696765477054
    },
    {
      "type": "add",
      "id": "b57376527405bcf9",
      "item": {
        "type": "paragraph",
        "id": "b57376527405bcf9",
        "text": "“The [[Economics of Programming Languages]]” by Evan Czaplicki (Strange Loop 2023) [https://discourse.elm-lang.org/t/the-economics-of-programming-languages-by-evan-czaplicki-strange-loop-2023/9376 page]"
      },
      "after": "c609b7176d0c2d93",
      "date": 1696765478820
    },
    {
      "type": "edit",
      "id": "c609b7176d0c2d93",
      "item": {
        "type": "paragraph",
        "id": "c609b7176d0c2d93",
        "text": "⇒ [[Economics]]"
      },
      "date": 1696765489045
    },
    {
      "item": {
        "type": "factory",
        "id": "769325536e2c4496"
      },
      "id": "769325536e2c4496",
      "type": "add",
      "after": "26d8ebb966b3dc3b",
      "date": 1696765647718
    },
    {
      "type": "edit",
      "id": "769325536e2c4496",
      "item": {
        "type": "reference",
        "id": "769325536e2c4496",
        "site": "spike.wiki.rodwell.me",
        "slug": "inline-css-audit",
        "title": "Inline CSS Audit",
        "text": "Here, as part of a look at improving the use of CSS, we look at the style that is inlined by the client and plugins. Each plugin will get its own page."
      },
      "date": 1696765655875
    },
    {
      "item": {
        "type": "factory",
        "id": "6a22b6357cf6e143"
      },
      "id": "6a22b6357cf6e143",
      "type": "add",
      "after": "769325536e2c4496",
      "date": 1696765814039
    },
    {
      "type": "edit",
      "id": "6a22b6357cf6e143",
      "item": {
        "type": "reference",
        "id": "6a22b6357cf6e143",
        "site": "spike.wiki.rodwell.me",
        "slug": "spike",
        "title": "Spike",
        "text": "Notes related to the current development spike."
      },
      "date": 1696765817549
    },
    {
      "id": "6a22b6357cf6e143",
      "type": "move",
      "order": [
        "c609b7176d0c2d93",
        "b57376527405bcf9",
        "26d8ebb966b3dc3b",
        "6a22b6357cf6e143",
        "769325536e2c4496"
      ],
      "date": 1696765820371
    },
    {
      "item": {
        "type": "factory",
        "id": "00fbfa7176c95d47"
      },
      "id": "00fbfa7176c95d47",
      "type": "add",
      "after": "769325536e2c4496",
      "date": 1696765831187
    },
    {
      "type": "edit",
      "id": "00fbfa7176c95d47",
      "item": {
        "type": "reference",
        "id": "00fbfa7176c95d47",
        "site": "spike.wiki.rodwell.me",
        "slug": "thoughts-on-css",
        "title": "Thoughts on CSS",
        "text": "Some random thoughts, about both the current and a possible future, CSS used in federated wiki."
      },
      "date": 1696765834083
    },
    {
      "item": {
        "type": "factory",
        "id": "d0f57cc350290d9b"
      },
      "id": "d0f57cc350290d9b",
      "type": "add",
      "after": "00fbfa7176c95d47",
      "date": 1696765856319
    },
    {
      "type": "edit",
      "id": "d0f57cc350290d9b",
      "item": {
        "type": "reference",
        "id": "d0f57cc350290d9b",
        "site": "spike.wiki.rodwell.me",
        "slug": "internal-link",
        "title": "Internal Link",
        "text": "Internal links make use of the page context, which provides a list of wiki to look in for the page."
      },
      "date": 1696765858430
    },
    {
      "item": {
        "type": "factory",
        "id": "c0f2d0cd767e3ec3"
      },
      "id": "c0f2d0cd767e3ec3",
      "type": "add",
      "after": "26d8ebb966b3dc3b",
      "date": 1696768280386
    },
    {
      "type": "edit",
      "id": "c0f2d0cd767e3ec3",
      "item": {
        "type": "paragraph",
        "id": "c0f2d0cd767e3ec3",
        "text": "Small Assets without the Headache"
      },
      "date": 1696768283600
    },
    {
      "type": "edit",
      "id": "c0f2d0cd767e3ec3",
      "item": {
        "type": "paragraph",
        "id": "c0f2d0cd767e3ec3",
        "text": "Small Assets without the Headache ]https://elm-lang.org/news/small-assets-without-the-headache page]"
      },
      "date": 1696768297504
    },
    {
      "type": "edit",
      "id": "c0f2d0cd767e3ec3",
      "item": {
        "type": "paragraph",
        "id": "c0f2d0cd767e3ec3",
        "text": "Small Assets without the Headache [https://elm-lang.org/news/small-assets-without-the-headache page]"
      },
      "date": 1696768302877
    },
    {
      "item": {
        "type": "factory",
        "id": "a672f6bd67b53117"
      },
      "id": "a672f6bd67b53117",
      "type": "add",
      "after": "c0f2d0cd767e3ec3",
      "date": 1696768643377
    },
    {
      "type": "edit",
      "id": "a672f6bd67b53117",
      "item": {
        "type": "paragraph",
        "id": "a672f6bd67b53117",
        "text": "[[Elm Studio]]"
      },
      "date": 1696768648495
    },
    {
      "type": "add",
      "id": "0f93a2dc56291915",
      "item": {
        "type": "paragraph",
        "id": "0f93a2dc56291915",
        "text": "Worst Elm Code Possible"
      },
      "after": "a672f6bd67b53117",
      "date": 1696769187672
    },
    {
      "type": "edit",
      "id": "0f93a2dc56291915",
      "item": {
        "type": "paragraph",
        "id": "0f93a2dc56291915",
        "text": "Worst Elm Code Possible [https://realmario.notion.site/realmario/Worst-Elm-Code-Possible-393f8fc7338b46afb13efb9766d909bf page]"
      },
      "date": 1696769197928
    },
    {
      "type": "add",
      "id": "94d99f42f46ae59e",
      "item": {
        "type": "paragraph",
        "id": "94d99f42f46ae59e",
        "text": "[[About Snowdrift.coop]]"
      },
      "after": "0f93a2dc56291915",
      "date": 1696769608295
    },
    {
      "type": "add",
      "id": "136e5ce694dc85ff",
      "item": {
        "type": "paragraph",
        "id": "136e5ce694dc85ff",
        "text": "Snowdrift: A crowdmatching (crowdfunding) platform for public goods "
      },
      "after": "0f93a2dc56291915",
      "date": 1696769991785
    },
    {
      "type": "edit",
      "id": "136e5ce694dc85ff",
      "item": {
        "type": "paragraph",
        "id": "136e5ce694dc85ff",
        "text": "Snowdrift: A crowdmatching (crowdfunding) platform for public goods [https://discourse.elm-lang.org/t/snowdrift-a-crowdmatching-crowdfunding-platform-for-public-goods/9379 discourse]"
      },
      "date": 1696770006312
    },
    {
      "type": "edit",
      "id": "136e5ce694dc85ff",
      "item": {
        "type": "paragraph",
        "id": "136e5ce694dc85ff",
        "text": "Snowdrift: A crowdmatching (crowdfunding) platform for public goods [https://discourse.elm-lang.org/t/snowdrift-a-crowdmatching-crowdfunding-platform-for-public-goods/9379 discourse] [https://gitlab.com/snowdrift/elm-website gitlab]"
      },
      "date": 1696770060480
    },
    {
      "type": "add",
      "id": "50381d11a7f86d17",
      "item": {
        "type": "paragraph",
        "id": "50381d11a7f86d17",
        "text": "Functional css for humans "
      },
      "after": "94d99f42f46ae59e",
      "date": 1696770215210
    },
    {
      "type": "edit",
      "id": "50381d11a7f86d17",
      "item": {
        "type": "paragraph",
        "id": "50381d11a7f86d17",
        "text": "Functional css for humans [] [https://tachyons.io/ site]"
      },
      "date": 1696770250094
    },
    {
      "type": "edit",
      "id": "50381d11a7f86d17",
      "item": {
        "type": "paragraph",
        "id": "50381d11a7f86d17",
        "text": "Functional css for humans [https://github.com/tachyons-css/tachyons github] [https://tachyons.io/ site]"
      },
      "date": 1696770267351
    },
    {
      "type": "add",
      "id": "a568211f5c3ba8d4",
      "item": {
        "type": "paragraph",
        "id": "a568211f5c3ba8d4",
        "text": "text-card [https://tachyons.io/components/cards/text-card/index.html page]"
      },
      "after": "50381d11a7f86d17",
      "date": 1696770600545
    },
    {
      "type": "add",
      "id": "ef6cc9171c71eae5",
      "item": {
        "type": "paragraph",
        "id": "ef6cc9171c71eae5",
        "text": "Tailwind CSS "
      },
      "after": "a568211f5c3ba8d4",
      "date": 1696771092121
    },
    {
      "type": "edit",
      "id": "ef6cc9171c71eae5",
      "item": {
        "type": "paragraph",
        "id": "ef6cc9171c71eae5",
        "text": "Tailwind CSS"
      },
      "date": 1696771115791
    },
    {
      "type": "add",
      "id": "9aff21d33a0dc17d",
      "item": {
        "type": "paragraph",
        "id": "9aff21d33a0dc17d",
        "text": "elm-default-tailwind-modules"
      },
      "after": "ef6cc9171c71eae5",
      "date": 1696771117496
    },
    {
      "type": "edit",
      "id": "ef6cc9171c71eae5",
      "item": {
        "type": "paragraph",
        "id": "ef6cc9171c71eae5",
        "text": "Tailwind CSS []https://package.elm-lang.org/packages/matheus23/elm-default-tailwind-modules/latest/ package]"
      },
      "date": 1696771134511
    },
    {
      "type": "edit",
      "id": "ef6cc9171c71eae5",
      "item": {
        "type": "paragraph",
        "id": "ef6cc9171c71eae5",
        "text": "Tailwind CSS [https://package.elm-lang.org/packages/matheus23/elm-default-tailwind-modules/latest/ package]"
      },
      "date": 1696771138849
    },
    {
      "type": "add",
      "id": "f02feb75f65c4ac1",
      "item": {
        "type": "paragraph",
        "id": "f02feb75f65c4ac1",
        "text": "The default tailwind classes in Elm as elm-css generated using elm-tailwind-modules "
      },
      "after": "9aff21d33a0dc17d",
      "date": 1696771161357
    },
    {
      "type": "edit",
      "id": "f02feb75f65c4ac1",
      "item": {
        "type": "paragraph",
        "id": "f02feb75f65c4ac1",
        "text": "The default tailwind classes in Elm as elm-css generated using elm-tailwind-modules [https://github.com/matheus23/elm-default-tailwind-modules/tree/4.0.1 github]"
      },
      "date": 1696771190010
    },
    {
      "type": "edit",
      "id": "9aff21d33a0dc17d",
      "item": {
        "type": "paragraph",
        "id": "9aff21d33a0dc17d",
        "text": "elm-default-tailwind-modules [https://package.elm-lang.org/packages/matheus23/elm-default-tailwind-modules/latest/ package]"
      },
      "date": 1696771264102
    },
    {
      "type": "add",
      "id": "c8b8c1470edf8a91",
      "item": {
        "type": "paragraph",
        "id": "c8b8c1470edf8a91",
        "text": "CSS Utility Classes and \"Separation of Concerns\""
      },
      "after": "f02feb75f65c4ac1",
      "date": 1696771301914
    },
    {
      "type": "edit",
      "id": "c8b8c1470edf8a91",
      "item": {
        "type": "paragraph",
        "id": "c8b8c1470edf8a91",
        "text": "CSS Utility Classes and \"Separation of Concerns\" [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ page]"
      },
      "date": 1696771318786
    },
    {
      "type": "edit",
      "id": "c8b8c1470edf8a91",
      "item": {
        "type": "paragraph",
        "id": "c8b8c1470edf8a91",
        "text": "CSS Utility Classes and \"Separation of Concerns\" [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] by"
      },
      "date": 1696771330548
    },
    {
      "type": "edit",
      "id": "c8b8c1470edf8a91",
      "item": {
        "type": "paragraph",
        "id": "c8b8c1470edf8a91",
        "text": "CSS Utility Classes and \"Separation of Concerns\" [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] by [[Adam Wathan]]"
      },
      "date": 1696771341695
    },
    {
      "item": {
        "type": "factory",
        "id": "3a1fa286b7f57bac"
      },
      "id": "3a1fa286b7f57bac",
      "type": "add",
      "after": "d0f57cc350290d9b",
      "date": 1696772135450
    },
    {
      "id": "3a1fa286b7f57bac",
      "type": "move",
      "order": [
        "c609b7176d0c2d93",
        "b57376527405bcf9",
        "26d8ebb966b3dc3b",
        "c0f2d0cd767e3ec3",
        "a672f6bd67b53117",
        "0f93a2dc56291915",
        "136e5ce694dc85ff",
        "3a1fa286b7f57bac",
        "94d99f42f46ae59e",
        "50381d11a7f86d17",
        "a568211f5c3ba8d4",
        "ef6cc9171c71eae5",
        "9aff21d33a0dc17d",
        "f02feb75f65c4ac1",
        "c8b8c1470edf8a91",
        "6a22b6357cf6e143",
        "769325536e2c4496",
        "00fbfa7176c95d47",
        "d0f57cc350290d9b"
      ],
      "date": 1696772140216
    },
    {
      "type": "edit",
      "id": "3a1fa286b7f57bac",
      "item": {
        "type": "code",
        "id": "3a1fa286b7f57bac",
        "text": "  […]\nRan in 0ms   /elm.js\nUnexpected error TypeError: Cannot read properties of undefined (reading 'some')\n    at handleNavigationRequest (/Users/rgb/Projects/Snowdrift.coop/elm-website/elm-website/node_modules/elm-pages/generator/src/dev-server.js:311:59)\n-- PROBLEM BUILDING DEPENDENCIES --------------- \nI ran into a compilation error when trying to build the following package:\n\n    matheus23/elm-default-tailwind-modules 2.0.3\n\nThis probably means it has package constraints that are too wide. It may be\npossible to tweak your elm.json to avoid the root problem as a stopgap. Head\nover to https://elm-lang.org/community to get help figuring out how to take this\npath!\n\nNote: To help with the root problem, please report this to the package author\nalong with the following information:\n\n    elm/core 1.0.5\n    rtfeldman/elm-css 17.0.5\n\nIf you want to help out even more, try building the package locally. That should\ngive you much more specific information about why this package is failing to\nbuild, which will in turn make it easier for the package author to fix it!\nRan in 1ms   /content.json"
      },
      "date": 1696772148441
    },
    {
      "item": {
        "type": "factory",
        "id": "47fd34ba7b0851e6"
      },
      "id": "47fd34ba7b0851e6",
      "type": "add",
      "after": "d0f57cc350290d9b",
      "date": 1696772301133
    },
    {
      "id": "47fd34ba7b0851e6",
      "type": "move",
      "order": [
        "c609b7176d0c2d93",
        "b57376527405bcf9",
        "26d8ebb966b3dc3b",
        "c0f2d0cd767e3ec3",
        "a672f6bd67b53117",
        "0f93a2dc56291915",
        "136e5ce694dc85ff",
        "3a1fa286b7f57bac",
        "47fd34ba7b0851e6",
        "94d99f42f46ae59e",
        "50381d11a7f86d17",
        "a568211f5c3ba8d4",
        "ef6cc9171c71eae5",
        "9aff21d33a0dc17d",
        "f02feb75f65c4ac1",
        "c8b8c1470edf8a91",
        "6a22b6357cf6e143",
        "769325536e2c4496",
        "00fbfa7176c95d47",
        "d0f57cc350290d9b"
      ],
      "date": 1696772305306
    },
    {
      "type": "edit",
      "id": "47fd34ba7b0851e6",
      "item": {
        "type": "paragraph",
        "id": "47fd34ba7b0851e6",
        "text": "Styles"
      },
      "date": 1696772307860
    },
    {
      "type": "edit",
      "id": "47fd34ba7b0851e6",
      "item": {
        "type": "paragraph",
        "id": "47fd34ba7b0851e6",
        "text": "Styles [https://gitlab.com/snowdrift/elm-website#styles page]"
      },
      "date": 1696772315411
    },
    {
      "type": "add",
      "id": "6f5e40faee2788c6",
      "item": {
        "type": "paragraph",
        "id": "6f5e40faee2788c6",
        "text": "> Going for a utility classes approach and atomic css. Decided Tailwind was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
      },
      "after": "47fd34ba7b0851e6",
      "date": 1696772333555
    },
    {
      "type": "edit",
      "id": "6f5e40faee2788c6",
      "item": {
        "type": "markdown",
        "id": "6f5e40faee2788c6",
        "text": "> Going for a utility classes approach and atomic css. Decided Tailwind was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
      },
      "date": 1696772334750
    },
    {
      "type": "edit",
      "id": "6f5e40faee2788c6",
      "item": {
        "type": "markdown",
        "id": "6f5e40faee2788c6",
        "text": "> Going for a utility classes approach and atomic css. Decided [[Tailwind]] was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
      },
      "date": 1696772348566
    },
    {
      "type": "edit",
      "id": "6f5e40faee2788c6",
      "item": {
        "type": "markdown",
        "id": "6f5e40faee2788c6",
        "text": "> Going for a utility classes approach [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] and atomic css. Decided [[Tailwind]] was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
      },
      "date": 1696772393727
    },
    {
      "type": "add",
      "id": "8b4fa7fce3efb75b",
      "item": {
        "type": "paragraph",
        "id": "8b4fa7fce3efb75b",
        "text": "The Case for Atomic / Utility-First CSS"
      },
      "after": "c8b8c1470edf8a91",
      "date": 1696772417532
    },
    {
      "type": "edit",
      "id": "8b4fa7fce3efb75b",
      "item": {
        "type": "paragraph",
        "id": "8b4fa7fce3efb75b",
        "text": "The Case for Atomic / Utility-First CSS [https://johnpolacek.github.io/the-case-for-atomic-css/ page]"
      },
      "date": 1696772459576
    },
    {
      "type": "add",
      "id": "b2e00b1f7a9ec6c6",
      "item": {
        "type": "paragraph",
        "id": "b2e00b1f7a9ec6c6",
        "text": "[[Atomic CSS]]"
      },
      "after": "8b4fa7fce3efb75b",
      "date": 1696772512771
    },
    {
      "type": "edit",
      "id": "6f5e40faee2788c6",
      "item": {
        "type": "markdown",
        "id": "6f5e40faee2788c6",
        "text": "> Going for a utility classes approach [https://adamwathan.me/css-utility-classes-and-separation-of-concerns/ post] and atomic css [https://johnpolacek.github.io/the-case-for-atomic-css/ page]. Decided [[Tailwind]] was the nicest system to use. We also skip the dependencies: no need to compile tailwind with Webpack as this Elm package uses the Elm compiler to handle that instead. This works in conjunction with elm-css for type-safe styling."
      },
      "date": 1696772553740
    },
    {
      "type": "edit",
      "id": "b2e00b1f7a9ec6c6",
      "item": {
        "type": "paragraph",
        "id": "b2e00b1f7a9ec6c6",
        "text": "⇒ [[Atomic CSS]]"
      },
      "date": 1696772924626
    }
  ]
}