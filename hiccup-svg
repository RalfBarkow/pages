{
  "title": "hiccup-svg",
  "story": [
    {
      "type": "html",
      "id": "3515ebfe0cb8a1bf",
      "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"270.773\" height=\"61.313\" viewBox=\"0 3.715312500000003 270.7734375 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M100.547 47.520L107.578 47.520C110.184 38.759 112.715 29.922 115.383 21.223L106.242 21.223L111.375 3.715L104.344 3.715C102.185 11.002 100.103 18.366 97.875 25.583L91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M126.773 13.454C126.755 11.502 125.215 9.973 123.258 9.973C121.289 9.973 119.742 11.520 119.742 13.489C119.742 15.387 121.289 16.934 123.258 16.934C125.215 16.934 126.755 15.406 126.773 13.454C126.773 13.442 126.773 13.430 126.773 13.418ZM109.688 47.520L116.719 47.520L124.523 21.223L117.492 21.223Z\"/><path d=\"M133.172 30.012L140.203 30.012C141.034 27.046 141.901 24.116 142.805 21.223L126.633 21.223L125.297 25.583L125.333 25.583C123.167 32.897 120.954 40.165 118.828 47.520L135 47.520C135.847 44.570 136.715 41.641 137.602 38.731L130.570 38.731L129.234 43.161L127.125 43.161L132.365 25.583L134.438 25.583Z\"/><path d=\"M151.453 30.012L158.484 30.012C159.315 27.046 160.182 24.116 161.086 21.223L144.914 21.223L143.578 25.583L143.615 25.583C141.448 32.897 139.236 40.165 137.109 47.520L153.281 47.520C154.128 44.570 154.996 41.641 155.883 38.731L148.852 38.731L147.516 43.161L145.406 43.161L150.646 25.583L152.719 25.583Z\"/><path d=\"M155.391 47.520L171.563 47.520C174.119 38.710 176.769 29.992 179.367 21.223L172.336 21.223L165.797 43.161L163.688 43.161L170.227 21.223L163.195 21.223C160.597 29.992 157.948 38.710 155.391 47.520Z\"/><path d=\"M182.813 47.520L189.844 47.520C192.450 38.759 194.980 29.922 197.648 21.223L181.477 21.223C177.073 35.757 172.814 50.436 168.469 65.028L175.500 65.028L187.172 25.583L189.281 25.583Z\"/><path d=\"M195.820 34.372L211.992 34.372L213.328 30.012L197.156 30.012Z\"/><path d=\"M224.578 30.012L231.609 30.012C232.440 27.046 233.307 24.116 234.211 21.223L218.039 21.223C217.135 24.116 216.268 27.046 215.438 30.012L221.977 38.731L220.641 43.161L218.531 43.161L219.867 38.731L212.836 38.731C211.949 41.641 211.081 44.570 210.234 47.520L226.406 47.520C227.253 44.570 228.121 41.641 229.008 38.731L222.469 30.012L223.734 25.583L225.844 25.583Z\"/><path d=\"M240.258 38.731L237.555 40.754L243.352 21.223L236.320 21.223L228.516 47.520L235.547 47.520L247.289 38.731L252.492 21.223L245.461 21.223Z\"/><path d=\"M241.594 65.028L257.766 65.028C261.731 51.954 265.537 38.721 269.438 25.583L270.773 21.223L254.602 21.223C251.933 29.922 249.404 38.760 246.797 47.520L253.828 47.520L260.297 25.583L262.406 25.583L252.070 60.668L249.961 60.668L251.227 56.309L244.195 56.309C243.357 59.244 242.489 62.150 241.594 65.028Z\"/></svg>"
    },
    {
      "type": "code",
      "id": "f3f01bfdebdcef8a",
      "text": "import { circle, svg } from 'https://esm.run/@thi.ng/hiccup-svg';\n\n// correct (direct invocation)\nsvg({}, circle([0, 0], 100, { fill: \"red\" }));\n\n// incorrect / unsupported (lazy evaluation)\n[svg, {}, [circle, [0, 0], 100, { fill: \"red\" }]]"
    },
    {
      "type": "markdown",
      "id": "00f76ff348892888",
      "text": "# Application Frame"
    },
    {
      "type": "frame",
      "id": "ddb9f8e3172ed2a3",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
    },
    {
      "type": "reference",
      "id": "b632db87ab4df667",
      "site": "localhost:3000",
      "slug": "howtothing-001",
      "title": "#HowToThing #001",
      "text": "[[Karsten Schmidt]] announces #HowToThing, small code snippets illustrating useful patterns and use cases for various libraries/projects in the [https://thi.ng thi.ng] ecosystem/anti-framework... [https://mastodon.thi.ng/@toxi/110898928550740865 mastodon], [https://fosstodon.org/@rgb/112287954793525879 toot]"
    },
    {
      "type": "paragraph",
      "id": "ec8b0f776fccacc2",
      "text": "‚áê [[rstream-system-bus]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "hiccup-svg",
        "story": []
      },
      "date": 1713439816526
    },
    {
      "item": {
        "type": "factory",
        "id": "3515ebfe0cb8a1bf"
      },
      "id": "3515ebfe0cb8a1bf",
      "type": "add",
      "date": 1713439829077
    },
    {
      "type": "edit",
      "id": "3515ebfe0cb8a1bf",
      "item": {
        "type": "html",
        "id": "3515ebfe0cb8a1bf",
        "text": "<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"270.773\" height=\"61.313\" viewBox=\"0 3.715312500000003 270.7734375 61.31250000000001\" stroke=\"none\"><style>path { fill: #333; } @media (prefers-color-scheme: dark) { path { fill: #ccc; } }</style><path d=\"M0 47.520L7.031 47.520C10.469 35.817 13.986 24.193 17.367 12.434L19.969 3.715L12.938 3.715L10.336 12.434L4.711 12.434L3.445 16.864L9.070 16.864Z\"/><path d=\"M18.281 47.520L25.313 47.520C27.919 38.759 30.449 29.922 33.117 21.223L23.977 21.223L29.109 3.715L22.078 3.715C19.919 11.002 17.838 18.366 15.609 25.583L9.141 47.520L16.172 47.520L22.641 25.583L24.750 25.583Z\"/><path d=\"M44.508 13.454C44.489 11.502 42.949 9.973 40.992 9.973C39.023 9.973 37.477 11.520 37.477 13.489C37.477 15.387 39.023 16.934 40.992 16.934C42.949 16.934 44.489 15.406 44.508 13.454C44.508 13.442 44.508 13.430 44.508 13.418ZM27.422 47.520L34.453 47.520L42.258 21.223L35.227 21.223Z\"/><path d=\"M44.578 44.145C44.578 42.176 43.031 40.629 41.063 40.629C39.164 40.629 37.617 42.176 37.617 44.145C37.617 46.114 39.164 47.661 41.133 47.661C43.102 47.661 44.648 46.114 44.648 44.145Z\"/><path d=\"M54.844 47.520L61.875 47.520C64.481 38.759 67.012 29.922 69.680 21.223L53.508 21.223C50.839 29.922 48.310 38.760 45.703 47.520L52.734 47.520L59.203 25.583L61.313 25.583Z\"/><path d=\"M58.781 65.028L74.953 65.028C78.918 51.954 82.725 38.721 86.625 25.583L87.961 21.223L71.789 21.223C69.121 29.922 66.591 38.760 63.984 47.520L71.016 47.520L77.484 25.583L79.594 25.583L69.258 60.668L67.148 60.668L68.414 56.309L61.383 56.309C60.544 59.244 59.677 62.150 58.781 65.028Z\"/><path d=\"M77.063 65.028L84.094 65.028L102.234 3.715L95.203 3.715Z\"/><path d=\"M100.547 47.520L107.578 47.520C110.184 38.759 112.715 29.922 115.383 21.223L106.242 21.223L111.375 3.715L104.344 3.715C102.185 11.002 100.103 18.366 97.875 25.583L91.406 47.520L98.438 47.520L104.906 25.583L107.016 25.583Z\"/><path d=\"M126.773 13.454C126.755 11.502 125.215 9.973 123.258 9.973C121.289 9.973 119.742 11.520 119.742 13.489C119.742 15.387 121.289 16.934 123.258 16.934C125.215 16.934 126.755 15.406 126.773 13.454C126.773 13.442 126.773 13.430 126.773 13.418ZM109.688 47.520L116.719 47.520L124.523 21.223L117.492 21.223Z\"/><path d=\"M133.172 30.012L140.203 30.012C141.034 27.046 141.901 24.116 142.805 21.223L126.633 21.223L125.297 25.583L125.333 25.583C123.167 32.897 120.954 40.165 118.828 47.520L135 47.520C135.847 44.570 136.715 41.641 137.602 38.731L130.570 38.731L129.234 43.161L127.125 43.161L132.365 25.583L134.438 25.583Z\"/><path d=\"M151.453 30.012L158.484 30.012C159.315 27.046 160.182 24.116 161.086 21.223L144.914 21.223L143.578 25.583L143.615 25.583C141.448 32.897 139.236 40.165 137.109 47.520L153.281 47.520C154.128 44.570 154.996 41.641 155.883 38.731L148.852 38.731L147.516 43.161L145.406 43.161L150.646 25.583L152.719 25.583Z\"/><path d=\"M155.391 47.520L171.563 47.520C174.119 38.710 176.769 29.992 179.367 21.223L172.336 21.223L165.797 43.161L163.688 43.161L170.227 21.223L163.195 21.223C160.597 29.992 157.948 38.710 155.391 47.520Z\"/><path d=\"M182.813 47.520L189.844 47.520C192.450 38.759 194.980 29.922 197.648 21.223L181.477 21.223C177.073 35.757 172.814 50.436 168.469 65.028L175.500 65.028L187.172 25.583L189.281 25.583Z\"/><path d=\"M195.820 34.372L211.992 34.372L213.328 30.012L197.156 30.012Z\"/><path d=\"M224.578 30.012L231.609 30.012C232.440 27.046 233.307 24.116 234.211 21.223L218.039 21.223C217.135 24.116 216.268 27.046 215.438 30.012L221.977 38.731L220.641 43.161L218.531 43.161L219.867 38.731L212.836 38.731C211.949 41.641 211.081 44.570 210.234 47.520L226.406 47.520C227.253 44.570 228.121 41.641 229.008 38.731L222.469 30.012L223.734 25.583L225.844 25.583Z\"/><path d=\"M240.258 38.731L237.555 40.754L243.352 21.223L236.320 21.223L228.516 47.520L235.547 47.520L247.289 38.731L252.492 21.223L245.461 21.223Z\"/><path d=\"M241.594 65.028L257.766 65.028C261.731 51.954 265.537 38.721 269.438 25.583L270.773 21.223L254.602 21.223C251.933 29.922 249.404 38.760 246.797 47.520L253.828 47.520L260.297 25.583L262.406 25.583L252.070 60.668L249.961 60.668L251.227 56.309L244.195 56.309C243.357 59.244 242.489 62.150 241.594 65.028Z\"/></svg>"
      },
      "date": 1713439831306
    },
    {
      "item": {
        "type": "factory",
        "id": "f3f01bfdebdcef8a"
      },
      "id": "f3f01bfdebdcef8a",
      "type": "add",
      "after": "3515ebfe0cb8a1bf",
      "date": 1713439845374
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { circle, svg } from \"@thi.ng/hiccup-svg\";\n\n// correct (direct invocation)\nsvg({}, circle([0, 0], 100, { fill: \"red\" }));\n\n// incorrect / unsupported (lazy evaluation)\n[svg, {}, [circle, [0, 0], 100, { fill: \"red\" }]]"
      },
      "date": 1713439852566
    },
    {
      "id": "ec8b0f776fccacc2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "ec8b0f776fccacc2",
        "text": "‚áê [[rstream-system-bus]]"
      },
      "after": "f3f01bfdebdcef8a",
      "attribution": {
        "page": "2024-04-18"
      },
      "date": 1713439857695
    },
    {
      "item": {
        "type": "factory",
        "id": "b632db87ab4df667"
      },
      "id": "b632db87ab4df667",
      "type": "add",
      "after": "ec8b0f776fccacc2",
      "date": 1713439899661
    },
    {
      "type": "edit",
      "id": "b632db87ab4df667",
      "item": {
        "type": "reference",
        "id": "b632db87ab4df667",
        "site": "localhost:3000",
        "slug": "howtothing-001",
        "title": "#HowToThing #001",
        "text": "[[Karsten Schmidt]] announces #HowToThing, small code snippets illustrating useful patterns and use cases for various libraries/projects in the [https://thi.ng thi.ng] ecosystem/anti-framework... [https://mastodon.thi.ng/@toxi/110898928550740865 mastodon], [https://fosstodon.org/@rgb/112287954793525879 toot]"
      },
      "date": 1713439902613
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { circle, svg } from \"https://cdn.skypack.dev/@thi.ng/hiccup-svg\";\n\n// correct (direct invocation)\nsvg({}, circle([0, 0], 100, { fill: \"red\" }));\n\n// incorrect / unsupported (lazy evaluation)\n[svg, {}, [circle, [0, 0], 100, { fill: \"red\" }]]"
      },
      "date": 1713439933098
    },
    {
      "id": "00f76ff348892888",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "00f76ff348892888",
        "text": "# Application Frame"
      },
      "after": "f3f01bfdebdcef8a",
      "attribution": {
        "page": "#HowToThing #001"
      },
      "date": 1713439941676
    },
    {
      "id": "ddb9f8e3172ed2a3",
      "type": "add",
      "item": {
        "type": "frame",
        "id": "ddb9f8e3172ed2a3",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/esm.html"
      },
      "after": "00f76ff348892888",
      "attribution": {
        "page": "#HowToThing #001"
      },
      "date": 1713439948088
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { circle, svg } from 'https://cdn.skypack.dev/@thi.ng/hiccup-svg';\n\n// correct (direct invocation)\nsvg({}, circle([0, 0], 100, { fill: \"red\" }));\n\n// incorrect / unsupported (lazy evaluation)\n[svg, {}, [circle, [0, 0], 100, { fill: \"red\" }]]"
      },
      "date": 1713439976837
    },
    {
      "type": "fork",
      "site": "localhost:3000",
      "date": 1713440073826
    },
    {
      "id": "ec8b0f776fccacc2",
      "type": "move",
      "order": [
        "3515ebfe0cb8a1bf",
        "f3f01bfdebdcef8a",
        "00f76ff348892888",
        "ddb9f8e3172ed2a3",
        "b632db87ab4df667",
        "ec8b0f776fccacc2"
      ],
      "date": 1713440077398
    },
    {
      "type": "edit",
      "id": "f3f01bfdebdcef8a",
      "item": {
        "type": "code",
        "id": "f3f01bfdebdcef8a",
        "text": "import { circle, svg } from 'https://esm.run/@thi.ng/hiccup-svg';\n\n// correct (direct invocation)\nsvg({}, circle([0, 0], 100, { fill: \"red\" }));\n\n// incorrect / unsupported (lazy evaluation)\n[svg, {}, [circle, [0, 0], 100, { fill: \"red\" }]]"
      },
      "date": 1713449677152
    }
  ]
}