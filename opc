{
  "title": "OPC",
  "story": [
    {
      "type": "paragraph",
      "id": "0c74d74e2b48d36d",
      "text": "OPC was founded by a few companies in the mid 90s in order to ease the exchange of process data [25]. OPC has been, and still is, developed by the OPC Foundation[26]. OPC is serverclient based, where the server is vendor-specific and the client general."
    },
    {
      "type": "paragraph",
      "id": "67b02c509c6be265",
      "text": "OPC consists of several specifications [25]–[27]. These specifications contain information about how the server and the client should exchange data. OPC DA (Data Access) was the first specification [28] that made it possible for any OPC DA client to access data from an OPC DA server that fulfils the same specification. OPC DA is used for moving real-time data from devices to Microsoft Windows applications, where real-time here means current data in the device, not historical. Nothing is said about how the data is transferred from the device to the application, and real-time is not defined either."
    },
    {
      "type": "paragraph",
      "id": "4a722ae9ebd799c7",
      "text": "OPC DA is based on COM/DCOM, which is a Microsoft technology. This choice leads to platform dependency, and there is, for instance, no standard solution for using OPC on Linux, even though such solutions exist. Another issue with OPC is the problem with firewalls when the OPC client and server are located on different machines. This is due to DCOM, a problem that can, however, be overcome by a tunneller [29]."
    },
    {
      "type": "paragraph",
      "id": "19533a29aef2cdd8",
      "text": "A first attempt to select another platform than COM/DCOM was presented within the OPC XML-DA specification, where COM/DCOM was replaced by web services. However, the performance was very poor compared to OPC DA [30].To overcome this weakness, a new specification was introduced; this specification is called OPC Unified Architecture (OPC UA) [31]. OPC UA uses two different transport protocols; SOAP over HTTP and TCP [32]. Compared to OPC XML-DA, OPC UA also supports binary encoding of the data instead of the XML encoding that produces a large amount of overhead data. The performance of OPC UA compared to OPC DA is somewhat slower, between 1.1 and 1.6 times when reading values [32]."
    },
    {
      "type": "paragraph",
      "id": "35bf95251d9b9ea8",
      "text": "According to Matrikon [33], the plan is not to replace OPC DA with OPC UA, instead both specifications should coexist and complement each other. OPC DA is still the most common specification, 99% of all OPC products today are implementations based on OPC DA [32]. Since this paper deals with CAPE tools, and to the authors’ knowledge there is no commercial CAPE tool available today that supports OPC UA, only OPC DA is considered. OPC UA is, however, very interesting. PLCOpen [34], a worldwide organization that works for resolving topics related to control programming, has chosen OPC UA as its technology for data exchange. An alternative to OPC DA is the OMG [35] specification Data Acquisition from Industrial Systems (DAIS) [36]. DAIS is based on real-time CORBA [37]. However, this specification is not used in the type of application covered in this paper. CAPE tools and PLCs of today generally utilize OPC for intercommunication."
    },
    {
      "type": "paragraph",
      "id": "9081e7c57fb3f341",
      "text": "⇒ [[OPC Together With CAPE Tools]]"
    },
    {
      "type": "pagefold",
      "id": "ced2043b3c9681be",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "57ef85d8e895d579",
      "text": "CARLSSON, Henrik, SVENSSON, Bo, DANIELSSON, Fredrik and LENNARTSON, Bengt, 2012. Methods for Reliable Simulation-Based PLC Code Verification. IEEE Transactions on Industrial Informatics. May 2012. Vol. 8, no. 2, p. 267–278. DOI 10.1109/TII.2011.2182653. [https://ieeexplore.ieee.org/abstract/document/6121945 page]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "OPC",
        "story": []
      },
      "date": 1659460647528
    },
    {
      "item": {
        "type": "factory",
        "id": "0c74d74e2b48d36d"
      },
      "id": "0c74d74e2b48d36d",
      "type": "add",
      "date": 1659460659990
    },
    {
      "type": "edit",
      "id": "0c74d74e2b48d36d",
      "item": {
        "type": "paragraph",
        "id": "0c74d74e2b48d36d",
        "text": "OPC was founded by a few companies in the mid 90s in order to ease the exchange of process data [25]. OPC has been, and still is, developed by the OPC Foundation[26]. OPC is serverclient based, where the server is vendor-specific and the client general."
      },
      "date": 1659460662487
    },
    {
      "item": {
        "type": "factory",
        "id": "ced2043b3c9681be"
      },
      "id": "ced2043b3c9681be",
      "type": "add",
      "after": "0c74d74e2b48d36d",
      "date": 1659460674292
    },
    {
      "type": "edit",
      "id": "ced2043b3c9681be",
      "item": {
        "type": "pagefold",
        "id": "ced2043b3c9681be",
        "text": "~"
      },
      "date": 1659460677598
    },
    {
      "item": {
        "type": "factory",
        "id": "57ef85d8e895d579"
      },
      "id": "57ef85d8e895d579",
      "type": "add",
      "after": "ced2043b3c9681be",
      "date": 1659460698736
    },
    {
      "type": "edit",
      "id": "57ef85d8e895d579",
      "item": {
        "type": "paragraph",
        "id": "57ef85d8e895d579",
        "text": "\nCARLSSON, Henrik, SVENSSON, Bo, DANIELSSON, Fredrik and LENNARTSON, Bengt, 2012. Methods for Reliable Simulation-Based PLC Code Verification. IEEE Transactions on Industrial Informatics. May 2012. Vol. 8, no. 2, p. 267–278. DOI 10.1109/TII.2011.2182653. "
      },
      "date": 1659460707326
    },
    {
      "type": "edit",
      "id": "57ef85d8e895d579",
      "item": {
        "type": "paragraph",
        "id": "57ef85d8e895d579",
        "text": "CARLSSON, Henrik, SVENSSON, Bo, DANIELSSON, Fredrik and LENNARTSON, Bengt, 2012. Methods for Reliable Simulation-Based PLC Code Verification. IEEE Transactions on Industrial Informatics. May 2012. Vol. 8, no. 2, p. 267–278. DOI 10.1109/TII.2011.2182653. [https://ieeexplore.ieee.org/abstract/document/6121945 page]"
      },
      "date": 1659460728664
    },
    {
      "type": "add",
      "id": "67b02c509c6be265",
      "item": {
        "type": "paragraph",
        "id": "67b02c509c6be265",
        "text": "OPC consists of several specifications [25]–[27]. These specifications contain information about how the server and the client should exchange data. OPC DA (Data Access) was the first specification [28] that made it possible for any OPC DA client to access data from an OPC DA server that fulfils the same specification. OPC DA is used for moving real-time data from devices to Microsoft Windows applications, where real-time here means current data in the device, not historical. Nothing is said about how the data is transferred from the device to the application, and real-time is not defined either."
      },
      "after": "0c74d74e2b48d36d",
      "date": 1659460764965
    },
    {
      "item": {
        "type": "factory",
        "id": "4a722ae9ebd799c7"
      },
      "id": "4a722ae9ebd799c7",
      "type": "add",
      "after": "57ef85d8e895d579",
      "date": 1659460811020
    },
    {
      "id": "4a722ae9ebd799c7",
      "type": "move",
      "order": [
        "0c74d74e2b48d36d",
        "67b02c509c6be265",
        "4a722ae9ebd799c7",
        "ced2043b3c9681be",
        "57ef85d8e895d579"
      ],
      "date": 1659460813359
    },
    {
      "type": "edit",
      "id": "4a722ae9ebd799c7",
      "item": {
        "type": "paragraph",
        "id": "4a722ae9ebd799c7",
        "text": "OPC DA is based on COM/DCOM, which is a Microsoft technology. This choice leads to platform dependency, and there is, for instance, no standard solution for using OPC on Linux, even though such solutions exist. Another issue with OPC is the problem with firewalls when the OPC client and server are located on different machines. This is due to DCOM, a problem that can, however, be overcome by a tunneller [29]."
      },
      "date": 1659460814953
    },
    {
      "type": "add",
      "id": "19533a29aef2cdd8",
      "item": {
        "type": "paragraph",
        "id": "19533a29aef2cdd8",
        "text": "A first attempt to select another platform than COM/DCOM was presented within the OPC XML-DA specification, where COM/DCOM was replaced by web services. However, the performance was very poor compared to OPC DA [30].To overcome this weakness, a new specification was introduced; this specification is called OPC Unified Architecture (OPC"
      },
      "after": "4a722ae9ebd799c7",
      "date": 1659460885918
    },
    {
      "type": "edit",
      "id": "19533a29aef2cdd8",
      "item": {
        "type": "paragraph",
        "id": "19533a29aef2cdd8",
        "text": "A first attempt to select another platform than COM/DCOM was presented within the OPC XML-DA specification, where COM/DCOM was replaced by web services. However, the performance was very poor compared to OPC DA [30].To overcome this weakness, a new specification was introduced; this specification is called OPC Unified Architecture (OPC UA) [31]. OPC UA uses two different transport protocols; SOAP over HTTP and TCP [32]. Compared to OPC XML-DA, OPC UA also supports binary encoding of the data instead of the XML encoding that produces a large amount of overhead data. The performance of OPC UA compared to OPC DA is somewhat slower, between 1.1 and 1.6 times when reading values [32]."
      },
      "date": 1659460905691
    },
    {
      "type": "add",
      "id": "35bf95251d9b9ea8",
      "item": {
        "type": "paragraph",
        "id": "35bf95251d9b9ea8",
        "text": "According to Matrikon [33], the plan is not to replace OPC DA with OPC UA, instead both specifications should coexist and complement each other. OPC DA is still the most common specification, 99% of all OPC products today are implementations based on OPC DA [32]. Since this paper deals with CAPE tools, and to the authors’ knowledge there is no commercial CAPE tool available today that supports OPC UA, only OPC DA is considered. OPC UA is, however, very interesting. PLCOpen [34], a worldwide organization that works for resolving topics related to control programming, has chosen OPC UA as its technology for data exchange. An alternative to OPC DA is the OMG [35] specification Data Acquisition from Industrial Systems (DAIS) [36]. DAIS is based on real-time CORBA [37]. However, this specification is not used in the type of application covered in this paper. CAPE tools and PLCs of today generally utilize OPC for intercommunication."
      },
      "after": "19533a29aef2cdd8",
      "date": 1659460987510
    },
    {
      "type": "add",
      "id": "9081e7c57fb3f341",
      "item": {
        "type": "paragraph",
        "id": "9081e7c57fb3f341",
        "text": "– [[OPC Together With CAPE Tools]]"
      },
      "after": "35bf95251d9b9ea8",
      "date": 1659461037216
    },
    {
      "type": "edit",
      "id": "9081e7c57fb3f341",
      "item": {
        "type": "paragraph",
        "id": "9081e7c57fb3f341",
        "text": "⇒ [[OPC Together With CAPE Tools]]"
      },
      "date": 1659461044549
    }
  ]
}