{
  "title": "2022-01-04",
  "story": [
    {
      "type": "pagefold",
      "id": "226bdd5ad4f46d3f",
      "text": "Glamorous Toolkit"
    },
    {
      "type": "reference",
      "id": "ed07244ef6a447e7",
      "site": "wiki.ralfbarkow.ch",
      "slug": "gtdrawexample",
      "title": "GtDrawExample",
      "text": "Example Showcasing a Proof of Concept for Line Drawing Functionality on top of Glamorous Toolkit. [https://github.com/botwhytho/GtDrawExample/tree/main#gtdrawexample github]"
    },
    {
      "type": "pagefold",
      "id": "21c6a5d8f2bdb78d",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "bc2aebe3cef29c37",
      "site": "wiki.ralfbarkow.ch",
      "slug": "cartographist",
      "title": "Cartographist",
      "text": "Cartographist can save, and load \"[[trails]]\" — the exact state of the session you've left — supporting researching topics over long periods of time. [https://szymonkaliski.com/projects/cartographist/ page]"
    },
    {
      "type": "pagefold",
      "id": "6a152360d7296836",
      "text": "Biota\n"
    },
    {
      "type": "reference",
      "id": "910999de59a109c5",
      "site": "three.ward.asia.wiki.org",
      "slug": "biota-traced",
      "title": "Biota Traced",
      "text": "We extract a log from a slightly modified biota."
    },
    {
      "type": "pagefold",
      "id": "4570c39605fa977d",
      "text": "Fed Wiki"
    },
    {
      "type": "reference",
      "id": "23a2ae0232bf8f73",
      "site": "wiki.ralfbarkow.ch",
      "slug": "test-point",
      "title": "Test Point",
      "text": "I recommended that large web applications include a route to diagnostic software such as object dumps and event traces. I wrote this HTTP 0.9 server to be included in desktop applications for similar debugging. [http://c2.com/doc/TestPoint/TestPointInPractice.pdf pdf]"
    },
    {
      "type": "paragraph",
      "id": "51fe536658ad8c8b",
      "text": "Animating a Network Simulation [https://c2.com/~ward/morse/SimNet/SimView.html page]"
    },
    {
      "type": "paragraph",
      "id": "af745475e4cea00a",
      "text": "Ward Cunningham\n2002\n\nI've converted an old pascal program that I wrote in college to java and have now refactored it using Intellij. The project started out as just practice with Intellij but has turned out to be a lot more fun than that. The program is a simulation of a nation-wide radio network. The simulation works as I remember, only much much faster. So fast, in fact, that I've added a real-time animation of the traffic flowing through the network, including a graphic traceroute to/from where ever I wave the mouse. Here is a screen shot of this operation in progress.\n"
    },
    {
      "type": "paragraph",
      "id": "a1fbb5832f261049",
      "text": "Automating a Traffic Network [https://c2.com/~ward/morse/SimNet/index.html site]"
    },
    {
      "type": "video",
      "id": "2b9fd1e34cf752e7",
      "text": "YOUTUBE hqnhNOlbc5s\nAnimating a Network Simulation, 2013"
    },
    {
      "type": "paragraph",
      "id": "574e99eebafb3118",
      "text": "We explore a computer simulation of a nation-wide amateur radio network first conceived of in 1977 and then visualized in 2002."
    },
    {
      "type": "reference",
      "id": "1024e92171740377",
      "site": "wiki.ralfbarkow.ch",
      "slug": "biologically-inspired-computing",
      "title": "Biologically Inspired Computing",
      "text": "The second simulator also tracks the flow of messages through a network. [https://c2.com/doc/TestPoint/TestPointInPractice.pdf pdf]"
    },
    {
      "type": "reference",
      "id": "bb1018420dd2d429",
      "site": "wiki.ralfbarkow.ch",
      "slug": "biota-language",
      "title": "Biota Language",
      "text": "[[Tom Ray]]'s success at evolving computer programs inspired the creation of Biota, a language and interpreter with a two-dimensional memory model and adjacency as its only addressing mode."
    },
    {
      "type": "markdown",
      "id": "f139d66687fd38aa",
      "text": "> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it\n"
    },
    {
      "type": "markdown",
      "id": "500be18338981193",
      "text": "The Origin of CyberLife\nAn interview with Steve Grand by Sue Wilcox\n[https://digitalspace.com/biota.org/papers/sginterview.html page]"
    },
    {
      "type": "pagefold",
      "id": "2c3e35099e49704a",
      "text": "Digitalk Smalltalk"
    },
    {
      "type": "reference",
      "id": "b047d790eba2e28a",
      "site": "code.fed.wiki.org",
      "slug": "wyatt-software",
      "title": "Wyatt Software",
      "text": "I jumped from research into commercial software development. Hired as a Smalltalk expert, I felt compelled to deliver on that promise. Loose oversight allowed room for innovation while still delivering a product eventually."
    },
    {
      "type": "pagefold",
      "id": "7f556cd4f357cb0d",
      "text": "Liberapay"
    },
    {
      "type": "paragraph",
      "id": "a85c94f7c9e3d44c",
      "text": "[[Liberapay]]"
    },
    {
      "type": "pagefold",
      "id": "478e1a19e0e9aef8",
      "text": "Event Sourcing"
    },
    {
      "type": "paragraph",
      "id": "69f9f39d8bc9d83e",
      "text": "﻿﻿"
    },
    {
      "type": "paragraph",
      "id": "08a26c353ad51ac7",
      "text": "[[Event-Driven Architectures in Pharo]]"
    },
    {
      "type": "paragraph",
      "id": "2f31738afe9e7bdb",
      "text": "[[Journal]] entries as [[Events]]"
    },
    {
      "type": "pagefold",
      "id": "1bbf2f057a967ca5",
      "text": "Advancers"
    },
    {
      "type": "reference",
      "id": "df4057512b1f08ba",
      "site": "found.ward.bay.wiki.org",
      "slug": "understanding-advancers",
      "title": "Understanding Advancers",
      "text": "You may think you want a screen that shows what you own but you really want a system that knows how you came to own it and can explain that."
    },
    {
      "type": "markdown",
      "id": "695204491b499ad7",
      "text": "[[Exploration Through Example]] [http://www.exampler.com/old-blog/2004/08/11/index.html post]"
    },
    {
      "type": "markdown",
      "id": "8b695a08fa50eeb4",
      "text": "> […] a problem. It was the one that advanced a position to a new date by processing all related transactions. It had grown to a convoluted mess of code, one that proved remarkably hard to clean up."
    },
    {
      "type": "reference",
      "id": "c2bfa7b2be057abf",
      "site": "code.fed.wiki.org",
      "slug": "foreign-currency",
      "title": "Foreign Currency",
      "text": "Most money objects are ill conceived. For example, all of large integer, rational number and floating point representations are useful within the same abstraction. Money objects should not round or truncate on their own in any calculation. Rather, rounding is associated with transactions and should be performed in this context. Mixed currency calculations have another set of representational and boundary condition issues which were explored with my work on WyCash."
    },
    {
      "type": "pagefold",
      "id": "d967245b3261c189",
      "text": "Malleable Systems Collective"
    },
    {
      "type": "markdown",
      "id": "1c70a138b9fdbba7",
      "text": "Alex: \n> I think it's undecidable if something WILL happen. It's probably not undecidable to say if it's possible to happen."
    },
    {
      "type": "paragraph",
      "id": "a01c09dade088660",
      "text": "Rice's theorem [https://en.wikipedia.org/wiki/Rice%27s_theorem wikipedia] implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives. [https://matrix.to/#/!bQveTkYXFyxLJQwcLG:matrix.org/$FVEUyQ1Z1SoKR1ilRHwGGH7jvj98Ii-bXAEe_YFNG10?via=matrix.org&via=dreyeck.freedombox.rocks&via=dagarten.modular.im matrix]"
    },
    {
      "type": "pagefold",
      "id": "e012a5377c533749",
      "text": "matrix"
    },
    {
      "type": "paragraph",
      "id": "d4f24000fbd1dae8",
      "text": "[[Commune]]"
    },
    {
      "type": "pagefold",
      "id": "513d4be75b607b39",
      "text": "Smalltalk"
    },
    {
      "type": "reference",
      "id": "8cdf0e40318718bd",
      "site": "wiki.ralfbarkow.ch",
      "slug": "smalltalk-vm-development",
      "title": "Smalltalk VM Development",
      "text": "Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "ce073cdaf2281551",
      "text": "[[Eliot Miranda]]\n"
    },
    {
      "type": "markdown",
      "id": "2032b7939d08700f",
      "text": "Smalltalk is an object *system*, rather than a language. -- Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf], p. 2"
    },
    {
      "type": "paragraph",
      "id": "3a33a584450b0edc",
      "text": "[[RPython]] toolchain"
    },
    {
      "type": "markdown",
      "id": "d398a6800cf4a377",
      "text": "# Implement a Matrix room on top of a Pharo VM"
    },
    {
      "type": "paragraph",
      "id": "e2f6b6b5e589f597",
      "text": "In Matrix, rooms don't belong to a specific server, but instead are replicated across all servers that are participating in a given room. As a result, each server in a room needs to be able to work out the room state independently and all servers in a room need to be able to arrive, as far as possible, at the same state when doing so. Doing this is what allows a room to \"appear\" the same for all users, regardless of the homeserver they are joining from. [https://matrix.org/docs/guides/implementing-stateres page]"
    },
    {
      "type": "paragraph",
      "id": "1609be3ed3874a81",
      "text": "See [[Implement a Matrix Room]] on Top of a Pharo VM"
    },
    {
      "type": "pagefold",
      "id": "4369b5fa2bbaace7",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "dbbeb093c65479cf",
      "text": "Secure private channels: the good, the bad, and the ugly [https://handbook.scuttlebutt.nz/stories/secure-private-channels page]"
    },
    {
      "type": "markdown",
      "id": "6fe1ca96288d60e9",
      "text": "> One thing that is fairly obvious is the [[TLS]] is not very good, and unsuitable for a p2p protocol. In a p2p protocol we can usually regard key management as a solved problem - with the web, there is the whole CA system to certify that a given peer (ip address) is actually the owner of the given domain, but in a p2p system peers are identified by their public key (which is stable) and not their ip address, which is unstable. Usually there is a some sort of look-up system to get the ip addresses,\nso it may not be necessary to send the key inside the connection."
    },
    {
      "type": "pagefold",
      "id": "45f7631535edc94f",
      "text": "gt v0.8.1147"
    },
    {
      "type": "markdown",
      "id": "f447e86291102828",
      "text": "Release version v0.8.1147 [https://github.com/feenkcom/gtoolkit/releases/tag/v0.8.1147 github]\n\n\n"
    },
    {
      "type": "code",
      "id": "fffe7082551a0bfb",
      "text": "Metacello new\n    baseline: 'GToolkitForPharo9';\n    repository: 'github://feenkcom/gtoolkit:v0.8.1147/src';\n    load"
    },
    {
      "type": "markdown",
      "id": "a0f4ea11950381e4",
      "text": "All commits (including upstream repositories) since last build:\n"
    },
    {
      "type": "markdown",
      "id": "d513207a2d3f8d23",
      "text": "https://github.com/feenkcom/Brick/commit/ebf1b0 by Alistair Grant\nAdd BrGlamorousVectorIcons class>>signal\n\n\n"
    },
    {
      "type": "markdown",
      "id": "121910781dd850f4",
      "text": "https://github.com/feenkcom/gtoolkit-phlow/commit/06f84e by Veit Heller\nAdd itemContextMenuStencil: to columned list view [feenkcom/gtoolkit#2103]\n\n\n"
    },
    {
      "type": "markdown",
      "id": "8382cd374559cc6b",
      "text": "https://github.com/feenkcom/gt4pharo/commit/23fc95 by Don Roberts\nAdded vertical resizer to class expander [feenkcom/#2329]\n\n\n"
    },
    {
      "type": "markdown",
      "id": "61fe6cdc1555f1fd",
      "text": "https://github.com/feenkcom/gt4pharo/commit/77a6f6 by Don Roberts\nAdded expander for classes within Pharo Coders [feenkcom/#2329]\n\nChange expanding behavior coder appearance\n\nRename refactoring\n\n\nhttps://github.com/feenkcom/gt4pharo/commit/f3dd06 by Tudor Girba\nfix typo. comment the baseline code by default feenkcom/gtoolkit##2328\n\n\n"
    },
    {
      "type": "paragraph",
      "id": "20cbbdddbd8f6c4f",
      "text": "Gt4PharoLink [[PharoLink]]"
    },
    {
      "type": "markdown",
      "id": "0265a6cd84825576",
      "text": "https://github.com/feenkcom/PharoLink/commit/2db120 by Manuel Leuenberger\nyet another attempt of fixing PharoLinkFileOpener to really not open changes with write access\n\n\n"
    },
    {
      "type": "markdown",
      "id": "be1cafdcb3720984",
      "text": "https://github.com/feenkcom/PharoLink/commit/febf06 by Manuel Leuenberger\nfix file opener to not open files with write access\n\n\n"
    },
    {
      "type": "markdown",
      "id": "80438dec34169684",
      "text": "https://github.com/feenkcom/gtoolkit-remoterunner/commit/7fd900 by Alistair Grant\nAdd GtRrTestsJob>>gtTestErrorsFor: to display tests that failed (as opposed to tasks).\n\n\n"
    },
    {
      "type": "markdown",
      "id": "5f0cdee74953b098",
      "text": "https://github.com/feenkcom/gtoolkit-remoterunner/commit/334e9c by Alistair Grant\nAdd GtRemoteRunner>>gtPingActionFor:\n\nhttps://github.com/feenkcom/gt4git/commit/160ac2 by Veit Heller\nUpdate Git tool view on commit\n\n\n"
    },
    {
      "type": "markdown",
      "id": "07051cccef936686",
      "text": "https://github.com/feenkcom/gt4git/commit/4ecec8 by Veit Heller\nUpdate Git tool view on commit\n\n\n"
    },
    {
      "type": "markdown",
      "id": "0c2e65a1f4308d52",
      "text": "https://github.com/feenkcom/gt4git/commit/335e9e by Veit Heller\nUpdate Git tool view on commit\n\n\n"
    },
    {
      "type": "markdown",
      "id": "803486b65da4d57c",
      "text": "https://github.com/feenkcom/gt4git/commit/3b493a by Veit Heller\nUpdate Git tool view on pull, push, and fetch\n\n\n"
    },
    {
      "type": "markdown",
      "id": "935b7757270a3303",
      "text": "https://github.com/feenkcom/gt4git/commit/be0840 by Veit Heller\nAdd commit list to the Git tool\n\n\n"
    },
    {
      "type": "markdown",
      "id": "51ff06aea25ee923",
      "text": "https://github.com/feenkcom/gt4git/commit/cda31c by Veit Heller\nWork on the Git tool"
    },
    {
      "type": "pagefold",
      "id": "8d3d0b1610489b5a",
      "text": "Federated Wiki"
    },
    {
      "type": "paragraph",
      "id": "6eff89999d2f8127",
      "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16413161971098612JKLoi:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nIf you haven't been keeping up with Thompson you might glance at the first two links he shares. But his virtuoso moment is in the third link, a short wiki page that is perfect in so many ways. Read it. Think about it. Then listen to him read the page to you. You might even listen twice, the second time noticing in the diagram how this one page fits into the web he has constructed. Bravo."
    },
    {
      "type": "paragraph",
      "id": "53d3cb2a07e2d46a",
      "text": "Thompson\nIn a DiG we are currently running with teachers at a school in England [https://st-ebbes.oxon.sch.uk/ site], we are using 'compassionate wisdom' as our base with profound impact. Which has me wondering further about what 'compassionate wisdom' means and how we might learn to cultivate it using the fedwiki. More thoughts."
    },
    {
      "type": "reference",
      "id": "fd80f4285f9d7c83",
      "site": "dig.wiki.innovateoregon.org",
      "slug": "designed-ingenuity-dig",
      "title": "Designed InGenuity (DIG)",
      "text": "**Designed inGenuity (DIG)** is a learning framework for the creative mind."
    },
    {
      "type": "reference",
      "id": "52dcaa78274ecd0a",
      "site": "wellspring.fed.wiki",
      "slug": "compassionate-wisdom",
      "title": "Compassionate Wisdom",
      "text": "We claim a commission, that of [[Reclaiming Humanity]] in our schools, in our society, in our world. A commission that guides us, challenges us, gives us courage to do the hard work of transformation."
    },
    {
      "type": "pagefold",
      "id": "ff3405b00ee5e891",
      "text": "c2-for-me\n"
    },
    {
      "type": "paragraph",
      "id": "90021173db2aa9a1",
      "text": "[[Patterns As Memes]]"
    },
    {
      "type": "paragraph",
      "id": "7aa2ad3b84e42abd",
      "text": "See fedwiki's [[C2 for Me]]"
    },
    {
      "type": "markdown",
      "id": "ac987ce9a14a236a",
      "text": "**Note**: This is an example for the 'excerpted pages' functionality of https://wiki.c2.com/"
    },
    {
      "type": "markdown",
      "id": "87af3995a4220cd1",
      "text": "> Examples of memes are tunes, ideas, catch-phrases, clothes fashions, ways of making pots or of building arches. Just as genes propagate themselves in the gene pool by leaping from body to body via sperms or eggs, so memes propagate themselves in the meme pool by leaping from brain to brain via a process which, in the broad sense, can be called imitation."
    },
    {
      "type": "reference",
      "id": "cd47feb3a7c309c9",
      "site": "marc.tries.fed.wiki",
      "slug": "c2-for-me",
      "title": "C2 for Me",
      "text": "This site's primary focus is PeopleProjectsAndPatterns in SoftwareDevelopment. However, it is more than just an InformalHistoryOfProgrammingIdeas. It started there, but the theme has created a culture and DramaticIdentity all its own. All Wiki content is WorkInProgress. Most of all, this is a forum where people share ideas! It changes as people come and go. Much of the information here is subjective. If you are looking for a dedicated reference site, try WikiPedia; WikiIsNotWikipedia!"
    },
    {
      "type": "reference",
      "id": "d4424342c4d5bf65",
      "site": "wiki.ralfbarkow.ch",
      "slug": "dramatic-identity",
      "title": "Dramatic Identity",
      "text": "See [[Category Dramatic Identity]] for a definition of [[Dramatic Identity]] as used on the [[Wiki Wiki Web]]."
    },
    {
      "type": "reference",
      "id": "53d0b8ec4d024655",
      "site": "sfw.c2.com",
      "slug": "systems-as-living-things",
      "title": "Systems As Living Things",
      "text": "When I went to OOPSLA last year, I missed [[Alan Kay]]'s talk. I heard that he had drawn some parallels between OO systems and biological systems. This line of thought has been floating around with me for a while now. Doubtless, some of what I'm about to write may duplicate other insights that people have made. I'd really appreciate it if anyone could tell me where to get additional information on such things."
    },
    {
      "type": "markdown",
      "id": "ac468b869ca42b86",
      "text": "> If we consider OO programs to be [[Knowledge Representations]], then programmers are means by which new knowledge is assimilated, and the \"experience\" of the system is reclassified. People tend to classify their experience, but we have the built in facility to tear down old structure and reclassify (build new structure). The systems that we build don't have that advantage yet. We are the agents of growth for them."
    },
    {
      "type": "reference",
      "id": "52c7276e544fa37f",
      "site": "sfw.c2.com",
      "slug": "knowledge-representations",
      "title": "Knowledge Representations",
      "text": "Knowledge Representations are ways of capturing knowledge and encoding it.  The foremost example is [[Natural Language]] which has been with the human race in oral form for no-body knows how long and in written form for some more than 5000 years.  It achieved sophisticated form certainly no later than 500 BC or earlier -- the works of the great Greek philosophers [[Three Old Greeks]] dates from about the mid-350's BC --- today's versions include AI KRL's (Knowledge Representation Languages) ontologies and more commonly the various data base systems."
    },
    {
      "type": "reference",
      "id": "b917b95d9114e21f",
      "site": "sfw.c2.com",
      "slug": "chrysler-comprehensive-compensation",
      "title": "Chrysler Comprehensive Compensation",
      "text": "I am involved in a [[Gemstone Project]] at [[Chrysler Corporation]] to replace their many payroll applications with a single application. The project has been going on for a couple of years. I was brought in to help with performance tuning, but ended up as a sort of [[Head Coach]] of an effort to [[Start Fresh]]. -- [[Kent Beck]]"
    },
    {
      "type": "reference",
      "id": "8ac7c44acb9f83fc",
      "site": "sfw.c2.com",
      "slug": "head-coach",
      "title": "Head Coach",
      "text": "Sometimes it is helpful for a project to have a person with technical savvy involved in the project, but not making minute by minute technical decisions. I'm not sure how to patternize this, though."
    },
    {
      "type": "reference",
      "id": "8a0dec46769ee4d3",
      "site": "sfw.c2.com",
      "slug": "egoless-programming",
      "title": "Egoless Programming",
      "text": "The opposite of [[Egotist Programming]].  :)"
    },
    {
      "type": "pagefold",
      "id": "5f9e75c33e0946a3",
      "text": "Turtle Graphics"
    },
    {
      "type": "markdown",
      "id": "f1228e9b1e47e5b2",
      "text": "> Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183\n"
    },
    {
      "type": "markdown",
      "id": "eb969eb90e17c979",
      "text": "[[Turtle Graphics]]\n[[Turtle Graphics in Javascript]]"
    },
    {
      "type": "reference",
      "id": "f896585aa686d4bd",
      "site": "clive.tries.fed.wiki",
      "slug": "future-proofing-ipfs-blockchains-and-other-systems",
      "title": "Future Proofing\nIPFS, Blockchains,\nand other Systems",
      "text": "Juan Benet spoke at- BPASE ’17 [https://cyber.stanford.edu/sites/default/files/juanbenet.pdf pdf]"
    },
    {
      "type": "pagefold",
      "id": "d351f317d9d2d1dd",
      "text": "cap-talk"
    },
    {
      "type": "markdown",
      "id": "95e39686336b666f",
      "text": "[cap-talk] Reasoning about Object Capabilities using Logical Relations and Effect Parametricity\n[https://marc.info/?l=cap-talk&m=145881706209595&w=2 page]"
    },
    {
      "type": "paragraph",
      "id": "916ee3aacc5fcc92",
      "text": "Reasoning about Object Capabilities\nwith Logical Relations and Effect Parametricity [https://lirias.kuleuven.be/bitstream/123456789/529252/1/paper-preprint.pdf pdf]"
    },
    {
      "type": "markdown",
      "id": "99b9ad57ed3018b6",
      "text": "> **Abstract**. Object capabilities are a technique for fine-grained privilege separation in programming languages and systems, with important applications in security. However, current formal characterisations do not fully capture capability-safety of a programming language and are not sufficient for verifying typical applications. Using state-of-the-art techniques from programming languages research, we define a logical relation\nfor a core calculus of JavaScript that better characterises capability-safety. The relation is powerful enough to reason about typical capability patterns and supports evolvable invariants on shared data structures, capabilities with restricted authority over them and isolated components with restricted communication channels. We use a novel notion of effect parametricity for deriving properties about effects. Our results imply memory access bounds that have previously been used to characterise capability-safety."
    },
    {
      "type": "markdown",
      "id": "a0024eaf12375667",
      "text": "In the object capabilities model, effects can only be produced by sending messages to *objects*. These can be objects in the sense of object-oriented programming, but not necessarily so.\n"
    },
    {
      "type": "markdown",
      "id": "e3f249ad096cc1a5",
      "text": "*Device objects* are primitive objects that model resources in the outside world and produce effects in the outside world when receiving a message. \n"
    },
    {
      "type": "markdown",
      "id": "79c194a58d1a281c",
      "text": "[…]\n"
    },
    {
      "type": "markdown",
      "id": "e3a5d7dffbaa51b3",
      "text": "Such capabilities (like our rAdNode) restrict\nother capabilities, make them [[conditional]] or revocable or otherwise modify and combine them. "
    },
    {
      "type": "pagefold",
      "id": "a0d06c2141ce2062",
      "text": "Conditional"
    },
    {
      "type": "markdown",
      "id": "b400552d62ea6cbd",
      "text": "Ward\n> Some ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\n\nI would like to follow up this idea with a quote from [[Biota Language]]:\n\n> Therefore, any instruction that can fail can be used as a [[conditional]] by simply placing an alternate sequence beside it."
    },
    {
      "type": "reference",
      "id": "7ce3fcb61b1d879b",
      "site": "wiki.ralfbarkow.ch",
      "slug": "american-information-exchange",
      "title": "American Information Exchange",
      "text": "The American Information Exchange (AMIX) was a platform for the buying and selling of information, goods and services as well as the exchange of information, ideas, and certain kinds of intellectual work product, created by economist and futurist Phil Salin[2] in the 1980s,[3][4] together with Chip Morningstar (chief architect)[5] and Randy Farmer,[6][7][8] and involvement from Esther Dyson and Mitch Kapor.[9] Economist Bill Tulloh was market manager.[10] [https://en.wikipedia.org/wiki/American_Information_Exchange wikipedia]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-01-04",
        "story": []
      },
      "date": 1641284095879
    },
    {
      "item": {
        "type": "factory",
        "id": "fbb8501fff26770a"
      },
      "id": "fbb8501fff26770a",
      "type": "add",
      "date": 1641284111347
    },
    {
      "type": "edit",
      "id": "fbb8501fff26770a",
      "item": {
        "type": "paragraph",
        "id": "fbb8501fff26770a",
        "text": "[[GtDrawExample]]"
      },
      "date": 1641284117983
    },
    {
      "item": {
        "type": "factory",
        "id": "ed07244ef6a447e7"
      },
      "id": "ed07244ef6a447e7",
      "type": "add",
      "after": "fbb8501fff26770a",
      "date": 1641284720283
    },
    {
      "type": "edit",
      "id": "ed07244ef6a447e7",
      "item": {
        "type": "reference",
        "id": "ed07244ef6a447e7",
        "site": "wiki.ralfbarkow.ch",
        "slug": "gtdrawexample",
        "title": "GtDrawExample",
        "text": "Example Showcasing a Proof of Concept for Line Drawing Functionality on top of Glamorous Toolkit. [https://github.com/botwhytho/GtDrawExample/tree/main#gtdrawexample github]"
      },
      "date": 1641284723164
    },
    {
      "item": {
        "type": "factory",
        "id": "226bdd5ad4f46d3f"
      },
      "id": "226bdd5ad4f46d3f",
      "type": "add",
      "after": "ed07244ef6a447e7",
      "date": 1641284735699
    },
    {
      "type": "edit",
      "id": "226bdd5ad4f46d3f",
      "item": {
        "type": "pagefold",
        "id": "226bdd5ad4f46d3f",
        "text": "Glamorous Toolkit"
      },
      "date": 1641284738412
    },
    {
      "id": "226bdd5ad4f46d3f",
      "type": "move",
      "order": [
        "fbb8501fff26770a",
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7"
      ],
      "date": 1641284740401
    },
    {
      "type": "remove",
      "id": "fbb8501fff26770a",
      "date": 1641284743077
    },
    {
      "item": {
        "type": "factory",
        "id": "6a152360d7296836"
      },
      "id": "6a152360d7296836",
      "type": "add",
      "after": "ed07244ef6a447e7",
      "date": 1641285351100
    },
    {
      "type": "edit",
      "id": "6a152360d7296836",
      "item": {
        "type": "pagefold",
        "id": "6a152360d7296836",
        "text": "Biota\n"
      },
      "date": 1641285356200
    },
    {
      "item": {
        "type": "factory",
        "id": "aa33bd45d89590e1"
      },
      "id": "aa33bd45d89590e1",
      "type": "add",
      "after": "6a152360d7296836",
      "date": 1641285357801
    },
    {
      "type": "edit",
      "id": "aa33bd45d89590e1",
      "item": {
        "type": "paragraph",
        "id": "aa33bd45d89590e1",
        "text": "Cartographist"
      },
      "date": 1641285359259
    },
    {
      "id": "aa33bd45d89590e1",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836"
      ],
      "date": 1641285363069
    },
    {
      "item": {
        "type": "factory",
        "id": "910999de59a109c5"
      },
      "id": "910999de59a109c5",
      "type": "add",
      "after": "6a152360d7296836",
      "date": 1641286344860
    },
    {
      "type": "edit",
      "id": "910999de59a109c5",
      "item": {
        "type": "reference",
        "id": "910999de59a109c5",
        "site": "three.ward.asia.wiki.org",
        "slug": "biota-traced",
        "title": "Biota Traced",
        "text": "We extract a log from a slightly modified biota."
      },
      "date": 1641286350237
    },
    {
      "item": {
        "type": "factory",
        "id": "4570c39605fa977d"
      },
      "id": "4570c39605fa977d",
      "type": "add",
      "after": "910999de59a109c5",
      "date": 1641286474175
    },
    {
      "type": "edit",
      "id": "4570c39605fa977d",
      "item": {
        "type": "pagefold",
        "id": "4570c39605fa977d",
        "text": "Fed Wiki"
      },
      "date": 1641286479315
    },
    {
      "item": {
        "type": "factory",
        "id": "23a2ae0232bf8f73"
      },
      "id": "23a2ae0232bf8f73",
      "type": "add",
      "after": "4570c39605fa977d",
      "date": 1641286481272
    },
    {
      "type": "edit",
      "id": "23a2ae0232bf8f73",
      "item": {
        "type": "reference",
        "id": "23a2ae0232bf8f73",
        "site": "wiki.ralfbarkow.ch",
        "slug": "test-point",
        "title": "Test Point",
        "text": "I recommended that large web applications include a route to diagnostic software such as object dumps and event traces. I wrote this HTTP 0.9 server to be included in desktop applications for similar debugging. [http://c2.com/doc/TestPoint/TestPointInPractice.pdf pdf]"
      },
      "date": 1641286762243
    },
    {
      "item": {
        "type": "factory",
        "id": "51fe536658ad8c8b"
      },
      "id": "51fe536658ad8c8b",
      "type": "add",
      "after": "23a2ae0232bf8f73",
      "date": 1641286764196
    },
    {
      "type": "edit",
      "id": "51fe536658ad8c8b",
      "item": {
        "type": "paragraph",
        "id": "51fe536658ad8c8b",
        "text": "Animating a Network Simulation"
      },
      "date": 1641286771039
    },
    {
      "type": "edit",
      "id": "51fe536658ad8c8b",
      "item": {
        "type": "paragraph",
        "id": "51fe536658ad8c8b",
        "text": "Animating a Network Simulation [https://c2.com/~ward/morse/SimNet/SimView.html page]"
      },
      "date": 1641286798584
    },
    {
      "type": "add",
      "id": "af745475e4cea00a",
      "item": {
        "type": "paragraph",
        "id": "af745475e4cea00a",
        "text": "Ward Cunningham\n2002\n\nI've converted an old pascal program that I wrote in college to java and have now refactored it using Intellij. The project started out as just practice with Intellij but has turned out to be a lot more fun than that. The program is a simulation of a nation-wide radio network. The simulation works as I remember, only much much faster. So fast, in fact, that I've added a real-time animation of the traffic flowing through the network, including a graphic traceroute to/from where ever I wave the mouse. Here is a screen shot of this operation in progress.\n\n"
      },
      "after": "51fe536658ad8c8b",
      "date": 1641286813996
    },
    {
      "type": "edit",
      "id": "af745475e4cea00a",
      "item": {
        "type": "paragraph",
        "id": "af745475e4cea00a",
        "text": "Ward Cunningham\n2002\n\nI've converted an old pascal program that I wrote in college to java and have now refactored it using Intellij. The project started out as just practice with Intellij but has turned out to be a lot more fun than that. The program is a simulation of a nation-wide radio network. The simulation works as I remember, only much much faster. So fast, in fact, that I've added a real-time animation of the traffic flowing through the network, including a graphic traceroute to/from where ever I wave the mouse. Here is a screen shot of this operation in progress.\n"
      },
      "date": 1641286911003
    },
    {
      "type": "add",
      "id": "a1fbb5832f261049",
      "item": {
        "type": "paragraph",
        "id": "a1fbb5832f261049",
        "text": "Automating a Traffic Network"
      },
      "after": "af745475e4cea00a",
      "date": 1641286914084
    },
    {
      "type": "edit",
      "id": "a1fbb5832f261049",
      "item": {
        "type": "paragraph",
        "id": "a1fbb5832f261049",
        "text": "Automating a Traffic Network [https://c2.com/~ward/morse/SimNet/index.html site]"
      },
      "date": 1641286929392
    },
    {
      "item": {
        "type": "factory",
        "id": "2b9fd1e34cf752e7"
      },
      "id": "2b9fd1e34cf752e7",
      "type": "add",
      "after": "a1fbb5832f261049",
      "date": 1641286945660
    },
    {
      "type": "edit",
      "id": "2b9fd1e34cf752e7",
      "item": {
        "type": "video",
        "id": "2b9fd1e34cf752e7",
        "text": "YOUTUBE hqnhNOlbc5s"
      },
      "date": 1641286957382
    },
    {
      "type": "edit",
      "id": "2b9fd1e34cf752e7",
      "item": {
        "type": "video",
        "id": "2b9fd1e34cf752e7",
        "text": "YOUTUBE hqnhNOlbc5s\nAnimating a Network Simulation, 2013"
      },
      "date": 1641286974961
    },
    {
      "item": {
        "type": "factory",
        "id": "574e99eebafb3118"
      },
      "id": "574e99eebafb3118",
      "type": "add",
      "after": "2b9fd1e34cf752e7",
      "date": 1641286987934
    },
    {
      "type": "edit",
      "id": "574e99eebafb3118",
      "item": {
        "type": "paragraph",
        "id": "574e99eebafb3118",
        "text": "We explore a computer simulation of a nation-wide amateur radio network first conceived of in 1977 and then visualized in 2002."
      },
      "date": 1641286989635
    },
    {
      "item": {
        "type": "factory",
        "id": "b05d4d84d405f06a"
      },
      "id": "b05d4d84d405f06a",
      "type": "add",
      "after": "574e99eebafb3118",
      "date": 1641287114970
    },
    {
      "type": "edit",
      "id": "b05d4d84d405f06a",
      "item": {
        "type": "paragraph",
        "id": "b05d4d84d405f06a",
        "text": "[[Biologically Inspired Computing]]"
      },
      "date": 1641287135992
    },
    {
      "item": {
        "type": "factory",
        "id": "dae7e4125d7abf92"
      },
      "id": "dae7e4125d7abf92",
      "type": "add",
      "after": "b05d4d84d405f06a",
      "date": 1641287792459
    },
    {
      "type": "remove",
      "id": "dae7e4125d7abf92",
      "date": 1641287798444
    },
    {
      "item": {
        "type": "factory",
        "id": "bb1018420dd2d429"
      },
      "id": "bb1018420dd2d429",
      "type": "add",
      "after": "b05d4d84d405f06a",
      "date": 1641287807514
    },
    {
      "type": "edit",
      "id": "bb1018420dd2d429",
      "item": {
        "type": "reference",
        "id": "bb1018420dd2d429",
        "site": "wiki.ralfbarkow.ch",
        "slug": "biota-language",
        "title": "Biota Language",
        "text": "[[Tom Ray]]'s success at evolving computer programs inspired the creation of Biota, a language and interpreter with a two-dimensional memory model and adjacency as its only addressing mode."
      },
      "date": 1641287811099
    },
    {
      "item": {
        "type": "factory",
        "id": "f139d66687fd38aa"
      },
      "id": "f139d66687fd38aa",
      "type": "add",
      "after": "bb1018420dd2d429",
      "date": 1641287813007
    },
    {
      "type": "edit",
      "id": "f139d66687fd38aa",
      "item": {
        "type": "markdown",
        "id": "f139d66687fd38aa",
        "text": "> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it"
      },
      "date": 1641287817053
    },
    {
      "item": {
        "type": "factory",
        "id": "7f556cd4f357cb0d"
      },
      "id": "7f556cd4f357cb0d",
      "type": "add",
      "after": "f139d66687fd38aa",
      "date": 1641289775854
    },
    {
      "item": {
        "type": "factory",
        "id": "a85c94f7c9e3d44c"
      },
      "id": "a85c94f7c9e3d44c",
      "type": "add",
      "after": "7f556cd4f357cb0d",
      "date": 1641289781527
    },
    {
      "type": "edit",
      "id": "7f556cd4f357cb0d",
      "item": {
        "type": "pagefold",
        "id": "7f556cd4f357cb0d",
        "text": "Liberapay"
      },
      "date": 1641289783256
    },
    {
      "type": "edit",
      "id": "a85c94f7c9e3d44c",
      "item": {
        "type": "paragraph",
        "id": "a85c94f7c9e3d44c",
        "text": "[[Liberapay]]"
      },
      "date": 1641289787239
    },
    {
      "item": {
        "type": "factory",
        "id": "478e1a19e0e9aef8"
      },
      "id": "478e1a19e0e9aef8",
      "type": "add",
      "after": "a85c94f7c9e3d44c",
      "date": 1641294927263
    },
    {
      "type": "edit",
      "id": "478e1a19e0e9aef8",
      "item": {
        "type": "pagefold",
        "id": "478e1a19e0e9aef8",
        "text": "Event Sourcing"
      },
      "date": 1641294929683
    },
    {
      "item": {
        "type": "factory",
        "id": "d349ccf3ab9df478"
      },
      "id": "d349ccf3ab9df478",
      "type": "add",
      "after": "478e1a19e0e9aef8",
      "date": 1641294941546
    },
    {
      "type": "remove",
      "id": "d349ccf3ab9df478",
      "date": 1641299955923
    },
    {
      "item": {
        "type": "factory",
        "id": "69f9f39d8bc9d83e"
      },
      "id": "69f9f39d8bc9d83e",
      "type": "add",
      "after": "478e1a19e0e9aef8",
      "date": 1641299957363
    },
    {
      "type": "edit",
      "id": "69f9f39d8bc9d83e",
      "item": {
        "type": "paragraph",
        "id": "69f9f39d8bc9d83e",
        "text": "﻿﻿"
      },
      "date": 1641299962121
    },
    {
      "item": {
        "type": "factory",
        "id": "08a26c353ad51ac7"
      },
      "id": "08a26c353ad51ac7",
      "type": "add",
      "after": "69f9f39d8bc9d83e",
      "date": 1641299967455
    },
    {
      "type": "edit",
      "id": "08a26c353ad51ac7",
      "item": {
        "type": "paragraph",
        "id": "08a26c353ad51ac7",
        "text": "[[Event-Driven Architectures in Pharo]]"
      },
      "date": 1641299975397
    },
    {
      "type": "add",
      "id": "2f31738afe9e7bdb",
      "item": {
        "type": "paragraph",
        "id": "2f31738afe9e7bdb",
        "text": "[[Journal]] entries as [[Events]]"
      },
      "after": "08a26c353ad51ac7",
      "date": 1641300362519
    },
    {
      "type": "edit",
      "id": "f139d66687fd38aa",
      "item": {
        "type": "markdown",
        "id": "f139d66687fd38aa",
        "text": "> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it\n"
      },
      "date": 1641300629271
    },
    {
      "type": "add",
      "id": "500be18338981193",
      "item": {
        "type": "markdown",
        "id": "500be18338981193",
        "text": "The Origin of CyberLife\nAn interview with Steve Grand by Sue Wilcox"
      },
      "after": "f139d66687fd38aa",
      "date": 1641300632731
    },
    {
      "type": "edit",
      "id": "500be18338981193",
      "item": {
        "type": "markdown",
        "id": "500be18338981193",
        "text": "The Origin of CyberLife\nAn interview with Steve Grand by Sue Wilcox\n[https://digitalspace.com/biota.org/papers/sginterview.html page]"
      },
      "date": 1641300647989
    },
    {
      "item": {
        "type": "factory",
        "id": "b047d790eba2e28a"
      },
      "id": "b047d790eba2e28a",
      "type": "add",
      "after": "2f31738afe9e7bdb",
      "date": 1641300757687
    },
    {
      "type": "edit",
      "id": "b047d790eba2e28a",
      "item": {
        "type": "reference",
        "id": "b047d790eba2e28a",
        "site": "code.fed.wiki.org",
        "slug": "wyatt-software",
        "title": "Wyatt Software",
        "text": "I jumped from research into commercial software development. Hired as a Smalltalk expert, I felt compelled to deliver on that promise. Loose oversight allowed room for innovation while still delivering a product eventually."
      },
      "date": 1641300763918
    },
    {
      "id": "b047d790eba2e28a",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb"
      ],
      "date": 1641300771141
    },
    {
      "item": {
        "type": "factory",
        "id": "2c3e35099e49704a"
      },
      "id": "2c3e35099e49704a",
      "type": "add",
      "after": "2f31738afe9e7bdb",
      "date": 1641300788923
    },
    {
      "type": "edit",
      "id": "2c3e35099e49704a",
      "item": {
        "type": "pagefold",
        "id": "2c3e35099e49704a",
        "text": "Digitalk Smalltalk\""
      },
      "date": 1641300791044
    },
    {
      "id": "2c3e35099e49704a",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb"
      ],
      "date": 1641300793939
    },
    {
      "type": "edit",
      "id": "2c3e35099e49704a",
      "item": {
        "type": "pagefold",
        "id": "2c3e35099e49704a",
        "text": "Digitalk Smalltalk"
      },
      "date": 1641300797911
    },
    {
      "item": {
        "type": "factory",
        "id": "1bbf2f057a967ca5"
      },
      "id": "1bbf2f057a967ca5",
      "type": "add",
      "after": "2f31738afe9e7bdb",
      "date": 1641301514466
    },
    {
      "type": "edit",
      "id": "1bbf2f057a967ca5",
      "item": {
        "type": "pagefold",
        "id": "1bbf2f057a967ca5",
        "text": "Advancers"
      },
      "date": 1641301518096
    },
    {
      "item": {
        "type": "factory",
        "id": "df4057512b1f08ba"
      },
      "id": "df4057512b1f08ba",
      "type": "add",
      "after": "1bbf2f057a967ca5",
      "date": 1641301520919
    },
    {
      "type": "edit",
      "id": "df4057512b1f08ba",
      "item": {
        "type": "reference",
        "id": "df4057512b1f08ba",
        "site": "found.ward.bay.wiki.org",
        "slug": "understanding-advancers",
        "title": "Understanding Advancers",
        "text": "You may think you want a screen that shows what you own but you really want a system that knows how you came to own it and can explain that."
      },
      "date": 1641301526685
    },
    {
      "item": {
        "type": "factory",
        "id": "695204491b499ad7"
      },
      "id": "695204491b499ad7",
      "type": "add",
      "after": "df4057512b1f08ba",
      "date": 1641301537842
    },
    {
      "type": "edit",
      "id": "695204491b499ad7",
      "item": {
        "type": "markdown",
        "id": "695204491b499ad7",
        "text": "http://www.exampler.com/old-blog/2004/08/11/index.html"
      },
      "date": 1641301540005
    },
    {
      "type": "edit",
      "id": "695204491b499ad7",
      "item": {
        "type": "markdown",
        "id": "695204491b499ad7",
        "text": "Exploration Through Example [http://www.exampler.com/old-blog/2004/08/11/index.html post]"
      },
      "date": 1641301711213
    },
    {
      "type": "edit",
      "id": "695204491b499ad7",
      "item": {
        "type": "markdown",
        "id": "695204491b499ad7",
        "text": "[[Exploration Through Example]] [http://www.exampler.com/old-blog/2004/08/11/index.html post]"
      },
      "date": 1641301734714
    },
    {
      "item": {
        "type": "factory",
        "id": "8b695a08fa50eeb4"
      },
      "id": "8b695a08fa50eeb4",
      "type": "add",
      "after": "695204491b499ad7",
      "date": 1641301890354
    },
    {
      "type": "edit",
      "id": "8b695a08fa50eeb4",
      "item": {
        "type": "markdown",
        "id": "8b695a08fa50eeb4",
        "text": "> […] a problem. It was the one that advanced a position to a new date by processing all related transactions. It had grown to a convoluted mess of code, one that proved remarkably hard to clean up."
      },
      "date": 1641301905837
    },
    {
      "item": {
        "type": "factory",
        "id": "f9159ad706840008"
      },
      "id": "f9159ad706840008",
      "type": "add",
      "after": "8b695a08fa50eeb4",
      "date": 1641302197242
    },
    {
      "type": "edit",
      "id": "f9159ad706840008",
      "item": {
        "type": "reference",
        "id": "f9159ad706840008",
        "site": "code.fed.wiki.org",
        "slug": "foreign-currency",
        "title": "Foreign Currency",
        "text": "Most money objects are ill conceived. For example, all of large integer, rational number and floating point representations are useful within the same abstraction. Money objects should not round or truncate on their own in any calculation. Rather, rounding is associated with transactions and should be performed in this context. Mixed currency calculations have another set of representational and boundary condition issues which were explored with my work on WyCash."
      },
      "date": 1641302204057
    },
    {
      "item": {
        "type": "factory",
        "id": "c2bfa7b2be057abf"
      },
      "id": "c2bfa7b2be057abf",
      "type": "add",
      "after": "f9159ad706840008",
      "date": 1641302225793
    },
    {
      "type": "edit",
      "id": "c2bfa7b2be057abf",
      "item": {
        "type": "reference",
        "id": "c2bfa7b2be057abf",
        "site": "code.fed.wiki.org",
        "slug": "foreign-currency",
        "title": "Foreign Currency",
        "text": "Most money objects are ill conceived. For example, all of large integer, rational number and floating point representations are useful within the same abstraction. Money objects should not round or truncate on their own in any calculation. Rather, rounding is associated with transactions and should be performed in this context. Mixed currency calculations have another set of representational and boundary condition issues which were explored with my work on WyCash."
      },
      "date": 1641302229088
    },
    {
      "type": "remove",
      "id": "f9159ad706840008",
      "date": 1641302233585
    },
    {
      "item": {
        "type": "factory",
        "id": "d967245b3261c189"
      },
      "id": "d967245b3261c189",
      "type": "add",
      "after": "c2bfa7b2be057abf",
      "date": 1641305518401
    },
    {
      "item": {
        "type": "factory",
        "id": "1c70a138b9fdbba7"
      },
      "id": "1c70a138b9fdbba7",
      "type": "add",
      "after": "d967245b3261c189",
      "date": 1641305525305
    },
    {
      "type": "edit",
      "id": "d967245b3261c189",
      "item": {
        "type": "pagefold",
        "id": "d967245b3261c189",
        "text": "~"
      },
      "date": 1641305526711
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": " Rice's theorem implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives."
      },
      "date": 1641305528500
    },
    {
      "type": "edit",
      "id": "d967245b3261c189",
      "item": {
        "type": "pagefold",
        "id": "d967245b3261c189",
        "text": "Malleable Systems Collective"
      },
      "date": 1641305570834
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": "Rice's theorem implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives."
      },
      "date": 1641305583867
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": "Rice's theorem [https://en.wikipedia.org/wiki/Rice%27s_theorem wikipedia] implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives."
      },
      "date": 1641305619527
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": "Rice's theorem [https://en.wikipedia.org/wiki/Rice%27s_theorem wikipedia] implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives. [https://matrix.to/#/!bQveTkYXFyxLJQwcLG:matrix.org/$FVEUyQ1Z1SoKR1ilRHwGGH7jvj98Ii-bXAEe_YFNG10?via=matrix.org&via=dreyeck.freedombox.rocks&via=dagarten.modular.im matrix]"
      },
      "date": 1641305638761
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": "I think it's undecidable if something WILL happen. It's probably not undecidable to say if it's possible to happen."
      },
      "date": 1641305689161
    },
    {
      "type": "add",
      "id": "a01c09dade088660",
      "item": {
        "type": "paragraph",
        "id": "a01c09dade088660",
        "text": "Rice's theorem [https://en.wikipedia.org/wiki/Rice%27s_theorem wikipedia] implies that no computable algorithm can determine whether a program exhibits malicious behavior (for any reasonable definition of \"malicious behavior\"). This doesn't mean that you can't rule out malicious behavior 100% of the time, you very well can, at least by some formal definition, but if you do, you are guaranteed to rule out non-malicious behavior as well. In other words, there is no perfect algorithm that gives 0 false positives and 0 false negatives. [https://matrix.to/#/!bQveTkYXFyxLJQwcLG:matrix.org/$FVEUyQ1Z1SoKR1ilRHwGGH7jvj98Ii-bXAEe_YFNG10?via=matrix.org&via=dreyeck.freedombox.rocks&via=dagarten.modular.im matrix]"
      },
      "after": "1c70a138b9fdbba7",
      "date": 1641305703867
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "paragraph",
        "id": "1c70a138b9fdbba7",
        "text": "Alex: > I think it's undecidable if something WILL happen. It's probably not undecidable to say if it's possible to happen."
      },
      "date": 1641305719970
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "markdown",
        "id": "1c70a138b9fdbba7",
        "text": "Alex: > I think it's undecidable if something WILL happen. It's probably not undecidable to say if it's possible to happen."
      },
      "date": 1641305721006
    },
    {
      "type": "edit",
      "id": "1c70a138b9fdbba7",
      "item": {
        "type": "markdown",
        "id": "1c70a138b9fdbba7",
        "text": "Alex: \n> I think it's undecidable if something WILL happen. It's probably not undecidable to say if it's possible to happen."
      },
      "date": 1641305724656
    },
    {
      "item": {
        "type": "factory",
        "id": "e012a5377c533749"
      },
      "id": "e012a5377c533749",
      "type": "add",
      "after": "a01c09dade088660",
      "date": 1641305900623
    },
    {
      "type": "edit",
      "id": "e012a5377c533749",
      "item": {
        "type": "pagefold",
        "id": "e012a5377c533749",
        "text": "Matrix"
      },
      "date": 1641305905248
    },
    {
      "item": {
        "type": "factory",
        "id": "d4f24000fbd1dae8"
      },
      "id": "d4f24000fbd1dae8",
      "type": "add",
      "after": "e012a5377c533749",
      "date": 1641305906635
    },
    {
      "type": "edit",
      "id": "d4f24000fbd1dae8",
      "item": {
        "type": "paragraph",
        "id": "d4f24000fbd1dae8",
        "text": "[[Commune]]"
      },
      "date": 1641305913860
    },
    {
      "type": "edit",
      "id": "e012a5377c533749",
      "item": {
        "type": "pagefold",
        "id": "e012a5377c533749",
        "text": "matrix"
      },
      "date": 1641305949499
    },
    {
      "type": "edit",
      "id": "aa33bd45d89590e1",
      "item": {
        "type": "paragraph",
        "id": "aa33bd45d89590e1",
        "text": "[[Cartographist]]"
      },
      "date": 1641308722402
    },
    {
      "item": {
        "type": "factory",
        "id": "513d4be75b607b39"
      },
      "id": "513d4be75b607b39",
      "type": "add",
      "after": "d4f24000fbd1dae8",
      "date": 1641310546189
    },
    {
      "type": "edit",
      "id": "513d4be75b607b39",
      "item": {
        "type": "pagefold",
        "id": "513d4be75b607b39",
        "text": "Smalltalk"
      },
      "date": 1641310551823
    },
    {
      "item": {
        "type": "factory",
        "id": "e35ab5290f9d6f5f"
      },
      "id": "e35ab5290f9d6f5f",
      "type": "add",
      "after": "513d4be75b607b39",
      "date": 1641310553450
    },
    {
      "type": "edit",
      "id": "e35ab5290f9d6f5f",
      "item": {
        "type": "paragraph",
        "id": "e35ab5290f9d6f5f",
        "text": "Two Decades of Smalltalk VM Development"
      },
      "date": 1641310557125
    },
    {
      "type": "edit",
      "id": "e35ab5290f9d6f5f",
      "item": {
        "type": "paragraph",
        "id": "e35ab5290f9d6f5f",
        "text": "Two Decades of Smalltalk VM Development [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf]"
      },
      "date": 1641310568406
    },
    {
      "item": {
        "type": "factory",
        "id": "1aace12d06d0fd9d"
      },
      "id": "1aace12d06d0fd9d",
      "type": "add",
      "after": "e35ab5290f9d6f5f",
      "date": 1641310585941
    },
    {
      "type": "edit",
      "id": "1aace12d06d0fd9d",
      "item": {
        "type": "markdown",
        "id": "1aace12d06d0fd9d",
        "text": "> **Abstract**. OpenSmalltalk-VM is a virtual machine (VM) for languages in the Smalltalk family (e.g. Squeak, Pharo) which is itself written in a subset of Smalltalk that can easily be translated to C. Development is done in Smalltalk, an activity we call\n“Simulation”. The production VM is derived by translating the core VM code to C. As a result, two execution models coexist: simulation, where the Smalltalk code is executed on top of a Smalltalk VM, and production, where the same code is compiled to an executable through a C compiler.\nIn this paper, we detail the VM simulation infrastructure\nand we report our experience developing and debugging the\ngarbage collector and the just-in-time compiler (JIT) within\nit. Then, we discuss how we use the simulation infrastructure\nto perform analysis on the runtime, directing some design\ndecisions we have made to tune VM performance."
      },
      "date": 1641310630443
    },
    {
      "type": "edit",
      "id": "1aace12d06d0fd9d",
      "item": {
        "type": "markdown",
        "id": "1aace12d06d0fd9d",
        "text": "> **Abstract**. OpenSmalltalk-VM is a virtual machine (VM) for languages in the Smalltalk family (e.g. Squeak, Pharo) which is itself written in a subset of Smalltalk that can easily be translated to C. Development is done in Smalltalk, an activity we call “Simulation”. The production VM is derived by translating the core VM code to C. As a result, two execution models coexist: simulation, where the Smalltalk code is executed on top of a Smalltalk VM, and production, where the same code is compiled to an executable through a C compiler.\nIn this paper, we detail the VM simulation infrastructure\nand we report our experience developing and debugging the\ngarbage collector and the just-in-time compiler (JIT) within\nit. Then, we discuss how we use the simulation infrastructure\nto perform analysis on the runtime, directing some design\ndecisions we have made to tune VM performance."
      },
      "date": 1641310647603
    },
    {
      "type": "edit",
      "id": "1aace12d06d0fd9d",
      "item": {
        "type": "markdown",
        "id": "1aace12d06d0fd9d",
        "text": "> **Abstract**. OpenSmalltalk-VM is a virtual machine (VM) for languages in the Smalltalk family (e.g. Squeak, Pharo) which is itself written in a subset of Smalltalk that can easily be translated to C. Development is done in Smalltalk, an activity we call “Simulation”. The production VM is derived by translating the core VM code to C. As a result, two execution models coexist: simulation, where the Smalltalk code is executed on top of a Smalltalk VM, and production, where the same code is compiled to an executable through a C compiler.\n>\n> In this paper, we detail the VM simulation infrastructure and we report our experience developing and debugging the garbage collector and the just-in-time compiler (JIT) within it. Then, we discuss how we use the simulation infrastructure to perform analysis on the runtime, directing some design decisions we have made to tune VM performance."
      },
      "date": 1641310676856
    },
    {
      "type": "edit",
      "id": "1aace12d06d0fd9d",
      "item": {
        "type": "markdown",
        "id": "1aace12d06d0fd9d",
        "text": "> **Abstract**. OpenSmalltalk-VM is a virtual machine (VM) for languages in the Smalltalk family (e.g. Squeak, Pharo) which is itself written in a subset of Smalltalk that can easily be translated to C. Development is done in Smalltalk, an activity we call “Simulation”. The production VM is derived by translating the core VM code to C. As a result, two execution models coexist: simulation, where the Smalltalk code is executed on top of a Smalltalk VM, and production, where the same code is compiled to an executable through a C compiler.\n>\n> In this paper, we detail the VM simulation infrastructure and we report our experience developing and debugging the garbage collector and the just-in-time compiler (JIT) within it. Then, we discuss how we use the simulation infrastructure to perform analysis on the runtime, directing some design decisions we have made to tune VM performance.\n"
      },
      "date": 1641310976354
    },
    {
      "type": "add",
      "id": "ce073cdaf2281551",
      "item": {
        "type": "markdown",
        "id": "ce073cdaf2281551",
        "text": "[[Eliot Miranda]]"
      },
      "after": "1aace12d06d0fd9d",
      "date": 1641310980565
    },
    {
      "type": "fork",
      "date": 1641311161882
    },
    {
      "type": "edit",
      "id": "e35ab5290f9d6f5f",
      "item": {
        "type": "paragraph",
        "id": "e35ab5290f9d6f5f",
        "text": "Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf]"
      },
      "date": 1641311172372
    },
    {
      "id": "e35ab5290f9d6f5f",
      "type": "remove",
      "date": 1641311177686
    },
    {
      "id": "1aace12d06d0fd9d",
      "type": "remove",
      "date": 1641311179872
    },
    {
      "item": {
        "type": "factory",
        "id": "8cdf0e40318718bd"
      },
      "id": "8cdf0e40318718bd",
      "type": "add",
      "after": "ce073cdaf2281551",
      "date": 1641311192379
    },
    {
      "type": "edit",
      "id": "8cdf0e40318718bd",
      "item": {
        "type": "reference",
        "id": "8cdf0e40318718bd",
        "site": "wiki.ralfbarkow.ch",
        "slug": "smalltalk-vm-development",
        "title": "Smalltalk VM Development",
        "text": "Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf]"
      },
      "date": 1641311195544
    },
    {
      "id": "ce073cdaf2281551",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551"
      ],
      "date": 1641311197942
    },
    {
      "type": "edit",
      "id": "ce073cdaf2281551",
      "item": {
        "type": "markdown",
        "id": "ce073cdaf2281551",
        "text": "[[Eliot Miranda]]\n"
      },
      "date": 1641311450350
    },
    {
      "type": "add",
      "id": "2032b7939d08700f",
      "item": {
        "type": "markdown",
        "id": "2032b7939d08700f",
        "text": "Smalltalk is an object system, rather than a lan-\nguage."
      },
      "after": "ce073cdaf2281551",
      "date": 1641311453652
    },
    {
      "type": "edit",
      "id": "2032b7939d08700f",
      "item": {
        "type": "markdown",
        "id": "2032b7939d08700f",
        "text": "Smalltalk is an object *system*, rather than a lan-\nguage."
      },
      "date": 1641311465644
    },
    {
      "type": "edit",
      "id": "2032b7939d08700f",
      "item": {
        "type": "markdown",
        "id": "2032b7939d08700f",
        "text": "Smalltalk is an object *system*, rather than a language."
      },
      "date": 1641311475020
    },
    {
      "type": "edit",
      "id": "2032b7939d08700f",
      "item": {
        "type": "markdown",
        "id": "2032b7939d08700f",
        "text": "Smalltalk is an object *system*, rather than a language. -- Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf], p. "
      },
      "date": 1641311487452
    },
    {
      "type": "edit",
      "id": "2032b7939d08700f",
      "item": {
        "type": "markdown",
        "id": "2032b7939d08700f",
        "text": "Smalltalk is an object *system*, rather than a language. -- Two Decades of [[Smalltalk VM Development]] [https://hal.archives-ouvertes.fr/hal-01883380/file/hal.pdf pdf], p. 2"
      },
      "date": 1641311514124
    },
    {
      "item": {
        "type": "factory",
        "id": "3a33a584450b0edc"
      },
      "id": "3a33a584450b0edc",
      "type": "add",
      "after": "2032b7939d08700f",
      "date": 1641311623020
    },
    {
      "type": "edit",
      "id": "3a33a584450b0edc",
      "item": {
        "type": "paragraph",
        "id": "3a33a584450b0edc",
        "text": "[[RPython]] toolchain"
      },
      "date": 1641311631977
    },
    {
      "item": {
        "type": "factory",
        "id": "d398a6800cf4a377"
      },
      "id": "d398a6800cf4a377",
      "type": "add",
      "after": "3a33a584450b0edc",
      "date": 1641312406821
    },
    {
      "type": "edit",
      "id": "d398a6800cf4a377",
      "item": {
        "type": "paragraph",
        "id": "d398a6800cf4a377",
        "text": "Implement a Matrix room on top of a Pharo VM"
      },
      "date": 1641312417125
    },
    {
      "type": "edit",
      "id": "d398a6800cf4a377",
      "item": {
        "type": "paragraph",
        "id": "d398a6800cf4a377",
        "text": "#Implement a Matrix room on top of a Pharo VM"
      },
      "date": 1641312481047
    },
    {
      "type": "edit",
      "id": "d398a6800cf4a377",
      "item": {
        "type": "markdown",
        "id": "d398a6800cf4a377",
        "text": "#Implement a Matrix room on top of a Pharo VM"
      },
      "date": 1641312482293
    },
    {
      "type": "edit",
      "id": "d398a6800cf4a377",
      "item": {
        "type": "markdown",
        "id": "d398a6800cf4a377",
        "text": "# Implement a Matrix room on top of a Pharo VM"
      },
      "date": 1641312484876
    },
    {
      "item": {
        "type": "factory",
        "id": "e2f6b6b5e589f597"
      },
      "id": "e2f6b6b5e589f597",
      "type": "add",
      "after": "d398a6800cf4a377",
      "date": 1641312488521
    },
    {
      "type": "edit",
      "id": "e2f6b6b5e589f597",
      "item": {
        "type": "paragraph",
        "id": "e2f6b6b5e589f597",
        "text": "[https://matrix.org/docs/guides/implementing-stateres page]"
      },
      "date": 1641312501176
    },
    {
      "type": "edit",
      "id": "e2f6b6b5e589f597",
      "item": {
        "type": "paragraph",
        "id": "e2f6b6b5e589f597",
        "text": "In Matrix, rooms don't belong to a specific server, but instead are replicated across all servers that are participating in a given room. As a result, each server in a room needs to be able to work out the room state independently and all servers in a room need to be able to arrive, as far as possible, at the same state when doing so. Doing this is what allows a room to \"appear\" the same for all users, regardless of the homeserver they are joining from. [https://matrix.org/docs/guides/implementing-stateres page]"
      },
      "date": 1641312511070
    },
    {
      "item": {
        "type": "factory",
        "id": "1609be3ed3874a81"
      },
      "id": "1609be3ed3874a81",
      "type": "add",
      "after": "e2f6b6b5e589f597",
      "date": 1641312668312
    },
    {
      "type": "edit",
      "id": "1609be3ed3874a81",
      "item": {
        "type": "paragraph",
        "id": "1609be3ed3874a81",
        "text": "See [[Implement a Matrix Room on Top of a Pharo VM]]"
      },
      "date": 1641312673260
    },
    {
      "type": "edit",
      "id": "1609be3ed3874a81",
      "item": {
        "type": "paragraph",
        "id": "1609be3ed3874a81",
        "text": "See [[Implement a Matrix Room]] on Top of a Pharo VM"
      },
      "date": 1641312733001
    },
    {
      "item": {
        "type": "factory",
        "id": "4369b5fa2bbaace7"
      },
      "id": "4369b5fa2bbaace7",
      "type": "add",
      "after": "1609be3ed3874a81",
      "date": 1641314093327
    },
    {
      "type": "edit",
      "id": "4369b5fa2bbaace7",
      "item": {
        "type": "pagefold",
        "id": "4369b5fa2bbaace7",
        "text": "~"
      },
      "date": 1641314099111
    },
    {
      "item": {
        "type": "factory",
        "id": "dbbeb093c65479cf"
      },
      "id": "dbbeb093c65479cf",
      "type": "add",
      "after": "4369b5fa2bbaace7",
      "date": 1641314100750
    },
    {
      "type": "edit",
      "id": "dbbeb093c65479cf",
      "item": {
        "type": "paragraph",
        "id": "dbbeb093c65479cf",
        "text": "Secure private channels: the good, the bad, and the ugly"
      },
      "date": 1641314104068
    },
    {
      "type": "edit",
      "id": "dbbeb093c65479cf",
      "item": {
        "type": "paragraph",
        "id": "dbbeb093c65479cf",
        "text": "Secure private channels: the good, the bad, and the ugly [https://handbook.scuttlebutt.nz/stories/secure-private-channels page]"
      },
      "date": 1641314120084
    },
    {
      "item": {
        "type": "factory",
        "id": "6fe1ca96288d60e9"
      },
      "id": "6fe1ca96288d60e9",
      "type": "add",
      "after": "dbbeb093c65479cf",
      "date": 1641314131692
    },
    {
      "type": "edit",
      "id": "6fe1ca96288d60e9",
      "item": {
        "type": "markdown",
        "id": "6fe1ca96288d60e9",
        "text": "> One thing that is fairly obvious is the TLS is not very good, and unsuitable for a p2p protocol. In a p2p protocol we can usually regard key management as a solved problem - with the web, there is the whole CA system to certify that a given peer (ip address) is actually the owner of the given domain, but in a p2p system peers are identified by their public key (which is stable) and not their ip address, which is unstable. Usually there is a some sort of look-up system to get the ip addresses,\nso it may not be necessary to send the key inside the connection."
      },
      "date": 1641314134775
    },
    {
      "type": "edit",
      "id": "6fe1ca96288d60e9",
      "item": {
        "type": "markdown",
        "id": "6fe1ca96288d60e9",
        "text": "> One thing that is fairly obvious is the [[TLS]] is not very good, and unsuitable for a p2p protocol. In a p2p protocol we can usually regard key management as a solved problem - with the web, there is the whole CA system to certify that a given peer (ip address) is actually the owner of the given domain, but in a p2p system peers are identified by their public key (which is stable) and not their ip address, which is unstable. Usually there is a some sort of look-up system to get the ip addresses,\nso it may not be necessary to send the key inside the connection."
      },
      "date": 1641314173519
    },
    {
      "item": {
        "type": "pagefold",
        "id": "45f7631535edc94f",
        "text": "gt v0.8.1147"
      },
      "id": "45f7631535edc94f",
      "type": "add",
      "after": "6fe1ca96288d60e9",
      "date": 1641318438752
    },
    {
      "item": {
        "type": "paragraph",
        "id": "0346c0d7019fe22a",
        "text": ""
      },
      "id": "0346c0d7019fe22a",
      "type": "add",
      "after": "45f7631535edc94f",
      "date": 1641318442724
    },
    {
      "type": "edit",
      "id": "45f7631535edc94f",
      "item": {
        "type": "pagefold",
        "id": "45f7631535edc94f",
        "text": "gt v0.8.1147"
      },
      "date": 1641318445483
    },
    {
      "type": "remove",
      "id": "0346c0d7019fe22a",
      "date": 1641318445701
    },
    {
      "item": {
        "type": "paragraph",
        "id": "20cbbdddbd8f6c4f",
        "text": "Gt4PharoLink"
      },
      "id": "20cbbdddbd8f6c4f",
      "type": "add",
      "after": "45f7631535edc94f",
      "date": 1641318450950
    },
    {
      "type": "edit",
      "id": "20cbbdddbd8f6c4f",
      "item": {
        "type": "paragraph",
        "id": "20cbbdddbd8f6c4f",
        "text": "Gt4PharoLink"
      },
      "date": 1641318455460
    },
    {
      "type": "edit",
      "id": "45f7631535edc94f",
      "item": {
        "type": "pagefold",
        "id": "45f7631535edc94f",
        "text": "gt v0.8.1147"
      },
      "date": 1641318544210
    },
    {
      "type": "add",
      "id": "7d935c83d1064845",
      "item": {
        "type": "paragraph",
        "id": "7d935c83d1064845",
        "text": ""
      },
      "after": "45f7631535edc94f",
      "date": 1641318567281
    },
    {
      "type": "add",
      "id": "f447e86291102828",
      "item": {
        "type": "markdown",
        "id": "f447e86291102828",
        "text": "Release version v0.8.1147\n\nMetacello new\n    baseline: 'GToolkitForPharo9';\n    repository: 'github://feenkcom/gtoolkit:v0.8.1147/src';\n    load\n\nAll commits (including upstream repositories) since last build:\nhttps://github.com/feenkcom/Brick/commit/ebf1b0 by Alistair Grant\nAdd BrGlamorousVectorIcons class>>signal\n\nhttps://github.com/feenkcom/gtoolkit-phlow/commit/06f84e by Veit Heller\nAdd itemContextMenuStencil: to columned list view [feenkcom/gtoolkit#2103]\n\nhttps://github.com/feenkcom/gt4pharo/commit/23fc95 by Don Roberts\nAdded vertical resizer to class expander [feenkcom/#2329]\n\nhttps://github.com/feenkcom/gt4pharo/commit/77a6f6 by Don Roberts\nAdded expander for classes within Pharo Coders [feenkcom/#2329]\n\nChange expanding behavior coder appearance\n\nRename refactoring\n\n\nhttps://github.com/feenkcom/gt4pharo/commit/f3dd06 by Tudor Girba\nfix typo. comment the baseline code by default feenkcom/gtoolkit##2328\n\nhttps://github.com/feenkcom/PharoLink/commit/2db120 by Manuel Leuenberger\nyet another attempt of fixing PharoLinkFileOpener to really not open changes with write access\n\nhttps://github.com/feenkcom/PharoLink/commit/febf06 by Manuel Leuenberger\nfix file opener to not open files with write access\n\nhttps://github.com/feenkcom/gtoolkit-remoterunner/commit/7fd900 by Alistair Grant\nAdd GtRrTestsJob>>gtTestErrorsFor: to display tests that failed (as opposed to tasks).\n\nhttps://github.com/feenkcom/gtoolkit-remoterunner/commit/334e9c by Alistair Grant\nAdd GtRemoteRunner>>gtPingActionFor:\n\nhttps://github.com/feenkcom/gt4git/commit/160ac2 by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/4ecec8 by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/335e9e by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/3b493a by Veit Heller\nUpdate Git tool view on pull, push, and fetch\n\nhttps://github.com/feenkcom/gt4git/commit/be0840 by Veit Heller\nAdd commit list to the Git tool\n\nhttps://github.com/feenkcom/gt4git/commit/cda31c by Veit Heller\nWork on the Git tool"
      },
      "after": "7d935c83d1064845",
      "date": 1641318583424
    },
    {
      "type": "edit",
      "id": "f447e86291102828",
      "item": {
        "type": "markdown",
        "id": "f447e86291102828",
        "text": "Release version v0.8.1147 [https://github.com/feenkcom/gtoolkit/releases/tag/v0.8.1147 github]\n\n\n"
      },
      "date": 1641318584929
    },
    {
      "type": "remove",
      "id": "7d935c83d1064845",
      "date": 1641318594265
    },
    {
      "type": "edit",
      "id": "f447e86291102828",
      "item": {
        "type": "markdown",
        "id": "f447e86291102828",
        "text": "Release version v0.8.1147 [https://github.com/feenkcom/gtoolkit/releases/tag/v0.8.1147 github]\n\n\n"
      },
      "date": 1641318596935
    },
    {
      "item": {
        "type": "code",
        "id": "fffe7082551a0bfb",
        "text": "Metacello new\n    baseline: 'GToolkitForPharo9';\n    repository: 'github://feenkcom/gtoolkit:v0.8.1147/src';\n    load"
      },
      "id": "fffe7082551a0bfb",
      "type": "add",
      "after": "20cbbdddbd8f6c4f",
      "date": 1641318606034
    },
    {
      "type": "edit",
      "id": "f447e86291102828",
      "item": {
        "type": "markdown",
        "id": "f447e86291102828",
        "text": "Release version v0.8.1147 [https://github.com/feenkcom/gtoolkit/releases/tag/v0.8.1147 github]\n\n\n"
      },
      "date": 1641318608440
    },
    {
      "type": "edit",
      "id": "fffe7082551a0bfb",
      "item": {
        "type": "code",
        "id": "fffe7082551a0bfb",
        "text": "Metacello new\n    baseline: 'GToolkitForPharo9';\n    repository: 'github://feenkcom/gtoolkit:v0.8.1147/src';\n    load"
      },
      "date": 1641318611991
    },
    {
      "id": "fffe7082551a0bfb",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "fffe7082551a0bfb",
        "f447e86291102828",
        "20cbbdddbd8f6c4f"
      ],
      "date": 1641318618514
    },
    {
      "type": "edit",
      "id": "f447e86291102828",
      "item": {
        "type": "markdown",
        "id": "f447e86291102828",
        "text": "Release version v0.8.1147 [https://github.com/feenkcom/gtoolkit/releases/tag/v0.8.1147 github]\n\n\n"
      },
      "date": 1641318623854
    },
    {
      "id": "f447e86291102828",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "20cbbdddbd8f6c4f"
      ],
      "date": 1641318626533,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1641318632243
    },
    {
      "type": "add",
      "id": "a0f4ea11950381e4",
      "item": {
        "type": "markdown",
        "id": "a0f4ea11950381e4",
        "text": "\nAll commits (including upstream repositories) since last build:\nhttps://github.com/feenkcom/Brick/commit/ebf1b0 by Alistair Grant\nAdd BrGlamorousVectorIcons class>>signal\n\nhttps://github.com/feenkcom/gtoolkit-phlow/commit/06f84e by Veit Heller\nAdd itemContextMenuStencil: to columned list view [feenkcom/gtoolkit#2103]\n\nhttps://github.com/feenkcom/gt4pharo/commit/23fc95 by Don Roberts\nAdded vertical resizer to class expander [feenkcom/#2329]\n\nhttps://github.com/feenkcom/gt4pharo/commit/77a6f6 by Don Roberts\nAdded expander for classes within Pharo Coders [feenkcom/#2329]\n\nChange expanding behavior coder appearance\n\nRename refactoring\n\n\nhttps://github.com/feenkcom/gt4pharo/commit/f3dd06 by Tudor Girba\nfix typo. comment the baseline code by default feenkcom/gtoolkit##2328\n\nhttps://github.com/feenkcom/PharoLink/commit/2db120 by Manuel Leuenberger\nyet another attempt of fixing PharoLinkFileOpener to really not open changes with write access\n\nhttps://github.com/feenkcom/PharoLink/commit/febf06 by Manuel Leuenberger\nfix file opener to not open files with write access\n\nhttps://github.com/feenkcom/gtoolkit-remoterunner/commit/7fd900 by Alistair Grant\nAdd GtRrTestsJob>>gtTestErrorsFor: to display tests that failed (as opposed to tasks).\n\nhttps://github.com/feenkcom/gtoolkit-remoterunner/commit/334e9c by Alistair Grant\nAdd GtRemoteRunner>>gtPingActionFor:\n\nhttps://github.com/feenkcom/gt4git/commit/160ac2 by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/4ecec8 by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/335e9e by Veit Heller\nUpdate Git tool view on commit\n\nhttps://github.com/feenkcom/gt4git/commit/3b493a by Veit Heller\nUpdate Git tool view on pull, push, and fetch\n\nhttps://github.com/feenkcom/gt4git/commit/be0840 by Veit Heller\nAdd commit list to the Git tool\n\nhttps://github.com/feenkcom/gt4git/commit/cda31c by Veit Heller\nWork on the Git tool"
      },
      "after": "f447e86291102828",
      "date": 1641318642735
    },
    {
      "type": "edit",
      "id": "a0f4ea11950381e4",
      "item": {
        "type": "markdown",
        "id": "a0f4ea11950381e4",
        "text": "All commits (including upstream repositories) since last build:\n"
      },
      "date": 1641318747148
    },
    {
      "type": "add",
      "id": "d513207a2d3f8d23",
      "item": {
        "type": "markdown",
        "id": "d513207a2d3f8d23",
        "text": "https://github.com/feenkcom/Brick/commit/ebf1b0 by Alistair Grant\nAdd BrGlamorousVectorIcons class>>signal\n\n\n"
      },
      "after": "a0f4ea11950381e4",
      "date": 1641318749540
    },
    {
      "type": "add",
      "id": "121910781dd850f4",
      "item": {
        "type": "markdown",
        "id": "121910781dd850f4",
        "text": "https://github.com/feenkcom/gtoolkit-phlow/commit/06f84e by Veit Heller\nAdd itemContextMenuStencil: to columned list view [feenkcom/gtoolkit#2103]\n\n\n"
      },
      "after": "d513207a2d3f8d23",
      "date": 1641318751415
    },
    {
      "type": "add",
      "id": "8382cd374559cc6b",
      "item": {
        "type": "markdown",
        "id": "8382cd374559cc6b",
        "text": "https://github.com/feenkcom/gt4pharo/commit/23fc95 by Don Roberts\nAdded vertical resizer to class expander [feenkcom/#2329]\n\n\n"
      },
      "after": "121910781dd850f4",
      "date": 1641318757027
    },
    {
      "type": "add",
      "id": "61fe6cdc1555f1fd",
      "item": {
        "type": "markdown",
        "id": "61fe6cdc1555f1fd",
        "text": "https://github.com/feenkcom/gt4pharo/commit/77a6f6 by Don Roberts\nAdded expander for classes within Pharo Coders [feenkcom/#2329]\n\nChange expanding behavior coder appearance\n\nRename refactoring\n\n\nhttps://github.com/feenkcom/gt4pharo/commit/f3dd06 by Tudor Girba\nfix typo. comment the baseline code by default feenkcom/gtoolkit##2328\n\n\n"
      },
      "after": "8382cd374559cc6b",
      "date": 1641318768131
    },
    {
      "type": "add",
      "id": "0265a6cd84825576",
      "item": {
        "type": "markdown",
        "id": "0265a6cd84825576",
        "text": "https://github.com/feenkcom/PharoLink/commit/2db120 by Manuel Leuenberger\nyet another attempt of fixing PharoLinkFileOpener to really not open changes with write access\n\n\n"
      },
      "after": "61fe6cdc1555f1fd",
      "date": 1641318776630
    },
    {
      "type": "add",
      "id": "be1cafdcb3720984",
      "item": {
        "type": "markdown",
        "id": "be1cafdcb3720984",
        "text": "https://github.com/feenkcom/PharoLink/commit/febf06 by Manuel Leuenberger\nfix file opener to not open files with write access\n\n\n"
      },
      "after": "0265a6cd84825576",
      "date": 1641318780511
    },
    {
      "type": "add",
      "id": "80438dec34169684",
      "item": {
        "type": "markdown",
        "id": "80438dec34169684",
        "text": "https://github.com/feenkcom/gtoolkit-remoterunner/commit/7fd900 by Alistair Grant\nAdd GtRrTestsJob>>gtTestErrorsFor: to display tests that failed (as opposed to tasks).\n\n\n"
      },
      "after": "be1cafdcb3720984",
      "date": 1641318789527
    },
    {
      "type": "add",
      "id": "5f0cdee74953b098",
      "item": {
        "type": "markdown",
        "id": "5f0cdee74953b098",
        "text": "https://github.com/feenkcom/gtoolkit-remoterunner/commit/334e9c by Alistair Grant\nAdd GtRemoteRunner>>gtPingActionFor:\n\nhttps://github.com/feenkcom/gt4git/commit/160ac2 by Veit Heller\nUpdate Git tool view on commit\n\n\n"
      },
      "after": "80438dec34169684",
      "date": 1641318820494
    },
    {
      "type": "add",
      "id": "07051cccef936686",
      "item": {
        "type": "markdown",
        "id": "07051cccef936686",
        "text": "https://github.com/feenkcom/gt4git/commit/4ecec8 by Veit Heller\nUpdate Git tool view on commit\n\n\n"
      },
      "after": "5f0cdee74953b098",
      "date": 1641318824392
    },
    {
      "type": "add",
      "id": "0c2e65a1f4308d52",
      "item": {
        "type": "markdown",
        "id": "0c2e65a1f4308d52",
        "text": "https://github.com/feenkcom/gt4git/commit/335e9e by Veit Heller\nUpdate Git tool view on commit\n\n\n"
      },
      "after": "07051cccef936686",
      "date": 1641318827529
    },
    {
      "type": "add",
      "id": "803486b65da4d57c",
      "item": {
        "type": "markdown",
        "id": "803486b65da4d57c",
        "text": "https://github.com/feenkcom/gt4git/commit/3b493a by Veit Heller\nUpdate Git tool view on pull, push, and fetch\n\n\n"
      },
      "after": "0c2e65a1f4308d52",
      "date": 1641318832374
    },
    {
      "type": "add",
      "id": "935b7757270a3303",
      "item": {
        "type": "markdown",
        "id": "935b7757270a3303",
        "text": "https://github.com/feenkcom/gt4git/commit/be0840 by Veit Heller\nAdd commit list to the Git tool\n\n\n"
      },
      "after": "803486b65da4d57c",
      "date": 1641318839353
    },
    {
      "type": "add",
      "id": "51ff06aea25ee923",
      "item": {
        "type": "markdown",
        "id": "51ff06aea25ee923",
        "text": "https://github.com/feenkcom/gt4git/commit/cda31c by Veit Heller\nWork on the Git tool"
      },
      "after": "935b7757270a3303",
      "date": 1641318842651
    },
    {
      "id": "20cbbdddbd8f6c4f",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923"
      ],
      "date": 1641318868956
    },
    {
      "type": "edit",
      "id": "20cbbdddbd8f6c4f",
      "item": {
        "type": "paragraph",
        "id": "20cbbdddbd8f6c4f",
        "text": "Gt4PharoLink [[PharoLink]]"
      },
      "date": 1641318969954
    },
    {
      "item": {
        "type": "pagefold",
        "id": "8d3d0b1610489b5a",
        "text": "Federated Wiki"
      },
      "id": "8d3d0b1610489b5a",
      "type": "add",
      "after": "51ff06aea25ee923",
      "date": 1641324903981
    },
    {
      "type": "edit",
      "id": "8d3d0b1610489b5a",
      "item": {
        "type": "pagefold",
        "id": "8d3d0b1610489b5a",
        "text": "Federated Wiki"
      },
      "date": 1641324910875
    },
    {
      "item": {
        "type": "paragraph",
        "id": "1c09bfb704e61e6a",
        "text": ""
      },
      "id": "1c09bfb704e61e6a",
      "type": "add",
      "after": "8d3d0b1610489b5a",
      "date": 1641324914904
    },
    {
      "type": "remove",
      "id": "1c09bfb704e61e6a",
      "date": 1641324918465
    },
    {
      "item": {
        "type": "paragraph",
        "id": "6eff89999d2f8127",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16413161971098612JKLoi:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nIf you haven't been keeping up with Thompson you might glance at the first two links he shares. But his virtuoso moment is in the third link, a short wiki page that is perfect in so many ways. Read it. Think about it. Then listen to him read the page to you. You might even listen twice, the second time noticing in the diagram how this one page fits into the web he has constructed. Bravo."
      },
      "id": "6eff89999d2f8127",
      "type": "add",
      "after": "8d3d0b1610489b5a",
      "date": 1641324924655
    },
    {
      "type": "edit",
      "id": "6eff89999d2f8127",
      "item": {
        "type": "paragraph",
        "id": "6eff89999d2f8127",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16413161971098612JKLoi:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nIf you haven't been keeping up with Thompson you might glance at the first two links he shares. But his virtuoso moment is in the third link, a short wiki page that is perfect in so many ways. Read it. Think about it. Then listen to him read the page to you. You might even listen twice, the second time noticing in the diagram how this one page fits into the web he has constructed. Bravo."
      },
      "date": 1641324943266
    },
    {
      "type": "edit",
      "id": "6eff89999d2f8127",
      "item": {
        "type": "paragraph",
        "id": "6eff89999d2f8127",
        "text": "[[Ward]] via [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$16413161971098612JKLoi:matrix.org?via=matrix.org&via=dreyeck.freedombox.rocks&via=matrix.goatpen.co matrix]\nIf you haven't been keeping up with Thompson you might glance at the first two links he shares. But his virtuoso moment is in the third link, a short wiki page that is perfect in so many ways. Read it. Think about it. Then listen to him read the page to you. You might even listen twice, the second time noticing in the diagram how this one page fits into the web he has constructed. Bravo."
      },
      "date": 1641324952684
    },
    {
      "item": {
        "type": "factory",
        "id": "fd80f4285f9d7c83"
      },
      "id": "fd80f4285f9d7c83",
      "type": "add",
      "after": "6eff89999d2f8127",
      "date": 1641324966403
    },
    {
      "item": {
        "type": "factory",
        "id": "52dcaa78274ecd0a"
      },
      "id": "52dcaa78274ecd0a",
      "type": "add",
      "after": "fd80f4285f9d7c83",
      "date": 1641324966989
    },
    {
      "item": {
        "type": "paragraph",
        "id": "53d3cb2a07e2d46a",
        "text": "Thompson\nIn a DiG we are currently running with teachers at a school in England, we are using 'compassionate wisdom' as our base with profound impact. Which has me wondering further about what 'compassionate wisdom' means and how we might learn to cultivate it using the fedwiki. More thoughts."
      },
      "id": "53d3cb2a07e2d46a",
      "type": "add",
      "after": "52dcaa78274ecd0a",
      "date": 1641324967630
    },
    {
      "type": "edit",
      "id": "53d3cb2a07e2d46a",
      "item": {
        "type": "paragraph",
        "id": "53d3cb2a07e2d46a",
        "text": "Thompson\nIn a DiG we are currently running with teachers at a school in England, we are using 'compassionate wisdom' as our base with profound impact. Which has me wondering further about what 'compassionate wisdom' means and how we might learn to cultivate it using the fedwiki. More thoughts."
      },
      "date": 1641324974698
    },
    {
      "id": "53d3cb2a07e2d46a",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a"
      ],
      "date": 1641324977695,
      "error": {
        "type": "error",
        "msg": "Internal Server Error",
        "response": "Server Ignoring move. Try reload."
      }
    },
    {
      "type": "fork",
      "date": 1641324980038
    },
    {
      "type": "edit",
      "id": "52dcaa78274ecd0a",
      "item": {
        "type": "reference",
        "id": "52dcaa78274ecd0a",
        "site": "wellspring.fed.wiki",
        "slug": "compassionate-wisdom",
        "title": "Compassionate Wisdom",
        "text": "We claim a commission, that of [[Reclaiming Humanity]] in our schools, in our society, in our world. A commission that guides us, challenges us, gives us courage to do the hard work of transformation."
      },
      "date": 1641325001111
    },
    {
      "type": "edit",
      "id": "fd80f4285f9d7c83",
      "item": {
        "type": "reference",
        "id": "fd80f4285f9d7c83",
        "site": "dig.wiki.innovateoregon.org",
        "slug": "designed-ingenuity-dig",
        "title": "Designed InGenuity (DIG)",
        "text": "**Designed inGenuity (DIG)** is a learning framework for the creative mind."
      },
      "date": 1641325044444
    },
    {
      "type": "edit",
      "id": "53d3cb2a07e2d46a",
      "item": {
        "type": "paragraph",
        "id": "53d3cb2a07e2d46a",
        "text": "Thompson\nIn a DiG we are currently running with teachers at a school in England [https://st-ebbes.oxon.sch.uk/ site], we are using 'compassionate wisdom' as our base with profound impact. Which has me wondering further about what 'compassionate wisdom' means and how we might learn to cultivate it using the fedwiki. More thoughts."
      },
      "date": 1641325082778
    },
    {
      "item": {
        "type": "factory",
        "id": "ff3405b00ee5e891"
      },
      "id": "ff3405b00ee5e891",
      "type": "add",
      "after": "52dcaa78274ecd0a",
      "date": 1641330560233
    },
    {
      "type": "edit",
      "id": "ff3405b00ee5e891",
      "item": {
        "type": "pagefold",
        "id": "ff3405b00ee5e891",
        "text": "c2-for-me\n"
      },
      "date": 1641330572259
    },
    {
      "item": {
        "type": "factory",
        "id": "cd47feb3a7c309c9"
      },
      "id": "cd47feb3a7c309c9",
      "type": "add",
      "after": "ff3405b00ee5e891",
      "date": 1641330574247
    },
    {
      "type": "edit",
      "id": "cd47feb3a7c309c9",
      "item": {
        "type": "reference",
        "id": "cd47feb3a7c309c9",
        "site": "marc.tries.fed.wiki",
        "slug": "c2-for-me",
        "title": "C2 for Me",
        "text": "This site's primary focus is PeopleProjectsAndPatterns in SoftwareDevelopment. However, it is more than just an InformalHistoryOfProgrammingIdeas. It started there, but the theme has created a culture and DramaticIdentity all its own. All Wiki content is WorkInProgress. Most of all, this is a forum where people share ideas! It changes as people come and go. Much of the information here is subjective. If you are looking for a dedicated reference site, try WikiPedia; WikiIsNotWikipedia!"
      },
      "date": 1641330580740
    },
    {
      "item": {
        "type": "factory",
        "id": "90021173db2aa9a1"
      },
      "id": "90021173db2aa9a1",
      "type": "add",
      "after": "cd47feb3a7c309c9",
      "date": 1641330644844
    },
    {
      "type": "edit",
      "id": "90021173db2aa9a1",
      "item": {
        "type": "paragraph",
        "id": "90021173db2aa9a1",
        "text": "[[Patterns As Memes]]"
      },
      "date": 1641330650113
    },
    {
      "id": "90021173db2aa9a1",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "cd47feb3a7c309c9"
      ],
      "date": 1641330653934
    },
    {
      "item": {
        "type": "factory",
        "id": "d4424342c4d5bf65"
      },
      "id": "d4424342c4d5bf65",
      "type": "add",
      "after": "cd47feb3a7c309c9",
      "date": 1641330726071
    },
    {
      "type": "edit",
      "id": "d4424342c4d5bf65",
      "item": {
        "type": "reference",
        "id": "d4424342c4d5bf65",
        "site": "wiki.ralfbarkow.ch",
        "slug": "dramatic-identity",
        "title": "Dramatic Identity",
        "text": "See [[Category Dramatic Identity]] for a definition of [[Dramatic Identity]] as used on the [[Wiki Wiki Web]]."
      },
      "date": 1641330728472
    },
    {
      "item": {
        "type": "factory",
        "id": "53d0b8ec4d024655"
      },
      "id": "53d0b8ec4d024655",
      "type": "add",
      "after": "d4424342c4d5bf65",
      "date": 1641330738415
    },
    {
      "type": "edit",
      "id": "53d0b8ec4d024655",
      "item": {
        "type": "reference",
        "id": "53d0b8ec4d024655",
        "site": "sfw.c2.com",
        "slug": "systems-as-living-things",
        "title": "Systems As Living Things",
        "text": "When I went to OOPSLA last year, I missed [[Alan Kay]]'s talk. I heard that he had drawn some parallels between OO systems and biological systems. This line of thought has been floating around with me for a while now. Doubtless, some of what I'm about to write may duplicate other insights that people have made. I'd really appreciate it if anyone could tell me where to get additional information on such things."
      },
      "date": 1641330742304
    },
    {
      "item": {
        "type": "factory",
        "id": "b917b95d9114e21f"
      },
      "id": "b917b95d9114e21f",
      "type": "add",
      "after": "53d0b8ec4d024655",
      "date": 1641330795888
    },
    {
      "type": "edit",
      "id": "b917b95d9114e21f",
      "item": {
        "type": "reference",
        "id": "b917b95d9114e21f",
        "site": "sfw.c2.com",
        "slug": "chrysler-comprehensive-compensation",
        "title": "Chrysler Comprehensive Compensation",
        "text": "I am involved in a [[Gemstone Project]] at [[Chrysler Corporation]] to replace their many payroll applications with a single application. The project has been going on for a couple of years. I was brought in to help with performance tuning, but ended up as a sort of [[Head Coach]] of an effort to [[Start Fresh]]. -- [[Kent Beck]]"
      },
      "date": 1641330800115
    },
    {
      "item": {
        "type": "factory",
        "id": "52c7276e544fa37f"
      },
      "id": "52c7276e544fa37f",
      "type": "add",
      "after": "b917b95d9114e21f",
      "date": 1641330862401
    },
    {
      "type": "edit",
      "id": "52c7276e544fa37f",
      "item": {
        "type": "reference",
        "id": "52c7276e544fa37f",
        "site": "sfw.c2.com",
        "slug": "knowledge-representations",
        "title": "Knowledge Representations",
        "text": "Knowledge Representations are ways of capturing knowledge and encoding it.  The foremost example is [[Natural Language]] which has been with the human race in oral form for no-body knows how long and in written form for some more than 5000 years.  It achieved sophisticated form certainly no later than 500 BC or earlier -- the works of the great Greek philosophers [[Three Old Greeks]] dates from about the mid-350's BC --- today's versions include AI KRL's (Knowledge Representation Languages) ontologies and more commonly the various data base systems."
      },
      "date": 1641330865695
    },
    {
      "item": {
        "type": "factory",
        "id": "ac468b869ca42b86"
      },
      "id": "ac468b869ca42b86",
      "type": "add",
      "after": "52c7276e544fa37f",
      "date": 1641330904595
    },
    {
      "type": "edit",
      "id": "ac468b869ca42b86",
      "item": {
        "type": "markdown",
        "id": "ac468b869ca42b86",
        "text": "> If we consider OO programs to be [[Knowledge Representations]], then programmers are means by which new knowledge is assimilated, and the \"experience\" of the system is reclassified. People tend to classify their experience, but we have the built in facility to tear down old structure and reclassify (build new structure). The systems that we build don't have that advantage yet. We are the agents of growth for them."
      },
      "date": 1641330909578
    },
    {
      "id": "ac468b869ca42b86",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "b917b95d9114e21f",
        "52c7276e544fa37f"
      ],
      "date": 1641330914587
    },
    {
      "item": {
        "type": "factory",
        "id": "8ac7c44acb9f83fc"
      },
      "id": "8ac7c44acb9f83fc",
      "type": "add",
      "after": "52c7276e544fa37f",
      "date": 1641330969223
    },
    {
      "type": "edit",
      "id": "8ac7c44acb9f83fc",
      "item": {
        "type": "reference",
        "id": "8ac7c44acb9f83fc",
        "site": "sfw.c2.com",
        "slug": "head-coach",
        "title": "Head Coach",
        "text": "Sometimes it is helpful for a project to have a person with technical savvy involved in the project, but not making minute by minute technical decisions. I'm not sure how to patternize this, though."
      },
      "date": 1641330973616
    },
    {
      "id": "8ac7c44acb9f83fc",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "b917b95d9114e21f",
        "8ac7c44acb9f83fc",
        "52c7276e544fa37f"
      ],
      "date": 1641330977211
    },
    {
      "id": "52c7276e544fa37f",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "52c7276e544fa37f",
        "b917b95d9114e21f",
        "8ac7c44acb9f83fc"
      ],
      "date": 1641330982089
    },
    {
      "type": "add",
      "id": "87af3995a4220cd1",
      "item": {
        "type": "paragraph",
        "id": "87af3995a4220cd1",
        "text": "> Examples of memes are tunes, ideas, catch-phrases, clothes fashions, ways of making pots or of building arches. Just as genes propagate themselves in the gene pool by leaping from body to body via sperms or eggs, so memes propagate themselves in the meme pool by leaping from brain to brain via a process which, in the broad sense, can be called imitation."
      },
      "after": "90021173db2aa9a1",
      "date": 1641331388323
    },
    {
      "type": "edit",
      "id": "87af3995a4220cd1",
      "item": {
        "type": "markdown",
        "id": "87af3995a4220cd1",
        "text": "> Examples of memes are tunes, ideas, catch-phrases, clothes fashions, ways of making pots or of building arches. Just as genes propagate themselves in the gene pool by leaping from body to body via sperms or eggs, so memes propagate themselves in the meme pool by leaping from brain to brain via a process which, in the broad sense, can be called imitation."
      },
      "date": 1641331389674
    },
    {
      "type": "add",
      "id": "7aa2ad3b84e42abd",
      "item": {
        "type": "paragraph",
        "id": "7aa2ad3b84e42abd",
        "text": "See fedwiki's C2 for Me"
      },
      "after": "90021173db2aa9a1",
      "date": 1641331581939
    },
    {
      "type": "edit",
      "id": "7aa2ad3b84e42abd",
      "item": {
        "type": "paragraph",
        "id": "7aa2ad3b84e42abd",
        "text": "See fedwiki's [[C2 for Me]]"
      },
      "date": 1641331593524
    },
    {
      "type": "add",
      "id": "ac987ce9a14a236a",
      "item": {
        "type": "paragraph",
        "id": "ac987ce9a14a236a",
        "text": "**Note**: This is an example for the 'excerpted pages' functionality of "
      },
      "after": "7aa2ad3b84e42abd",
      "date": 1641331633904
    },
    {
      "type": "edit",
      "id": "ac987ce9a14a236a",
      "item": {
        "type": "paragraph",
        "id": "ac987ce9a14a236a",
        "text": "**Note**: This is an example for the 'excerpted pages' functionality of https://wiki.c2.com/"
      },
      "date": 1641331653647
    },
    {
      "type": "edit",
      "id": "ac987ce9a14a236a",
      "item": {
        "type": "markdown",
        "id": "ac987ce9a14a236a",
        "text": "**Note**: This is an example for the 'excerpted pages' functionality of https://wiki.c2.com/"
      },
      "date": 1641331655245
    },
    {
      "item": {
        "type": "factory",
        "id": "8a0dec46769ee4d3"
      },
      "id": "8a0dec46769ee4d3",
      "type": "add",
      "after": "8ac7c44acb9f83fc",
      "date": 1641332163549
    },
    {
      "type": "edit",
      "id": "8a0dec46769ee4d3",
      "item": {
        "type": "reference",
        "id": "8a0dec46769ee4d3",
        "site": "sfw.c2.com",
        "slug": "egoless-programming",
        "title": "Egoless Programming",
        "text": "The opposite of [[Egotist Programming]].  :)"
      },
      "date": 1641332168426
    },
    {
      "item": {
        "type": "factory",
        "id": "5f9e75c33e0946a3"
      },
      "id": "5f9e75c33e0946a3",
      "type": "add",
      "after": "8a0dec46769ee4d3",
      "date": 1641340893294
    },
    {
      "item": {
        "type": "factory",
        "id": "f1228e9b1e47e5b2"
      },
      "id": "f1228e9b1e47e5b2",
      "type": "add",
      "after": "5f9e75c33e0946a3",
      "date": 1641340902182
    },
    {
      "type": "edit",
      "id": "5f9e75c33e0946a3",
      "item": {
        "type": "pagefold",
        "id": "5f9e75c33e0946a3",
        "text": "~"
      },
      "date": 1641340905057
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "paragraph",
        "id": "f1228e9b1e47e5b2",
        "text": "Don't over-plan. Know enough to get going, then do."
      },
      "date": 1641340906182
    },
    {
      "type": "add",
      "id": "7c72588dc517f8ad",
      "item": {
        "type": "paragraph",
        "id": "7c72588dc517f8ad",
        "text": "[https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf]"
      },
      "after": "f1228e9b1e47e5b2",
      "date": 1641340935271
    },
    {
      "type": "remove",
      "id": "7c72588dc517f8ad",
      "date": 1641340943596
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "paragraph",
        "id": "f1228e9b1e47e5b2",
        "text": "Don't over-plan. Know enough to get going, then do.[https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641340951814
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "paragraph",
        "id": "f1228e9b1e47e5b2",
        "text": "Don't over-plan. Know enough to get going, then do. [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641340960516
    },
    {
      "type": "edit",
      "id": "5f9e75c33e0946a3",
      "item": {
        "type": "pagefold",
        "id": "5f9e75c33e0946a3",
        "text": "Smalltalk/V 286 Tutorial and Programming Handbook"
      },
      "date": 1641341050622
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "paragraph",
        "id": "f1228e9b1e47e5b2",
        "text": "Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341064236
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "paragraph",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341081154
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "markdown",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341082368
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "markdown",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. \n-- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341091420
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "markdown",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. \n\n-- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341095934
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "markdown",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183"
      },
      "date": 1641341102080
    },
    {
      "type": "edit",
      "id": "5f9e75c33e0946a3",
      "item": {
        "type": "pagefold",
        "id": "5f9e75c33e0946a3",
        "text": "Turtle Graphics"
      },
      "date": 1641341305016
    },
    {
      "type": "edit",
      "id": "f1228e9b1e47e5b2",
      "item": {
        "type": "markdown",
        "id": "f1228e9b1e47e5b2",
        "text": "> Don't over-plan. Know enough to get going, then do. -- Smalltalk/V 286 Tutorial and Programming Handbook [https://rmod-files.lille.inria.fr/FreeBooks/SmalltalkVTutorial/SmalltalkVTutorial.pdf pdf], p. 183\n"
      },
      "date": 1641341313552
    },
    {
      "type": "add",
      "id": "eb969eb90e17c979",
      "item": {
        "type": "markdown",
        "id": "eb969eb90e17c979",
        "text": "[[Turtle Graphics]]"
      },
      "after": "f1228e9b1e47e5b2",
      "date": 1641341321061
    },
    {
      "type": "edit",
      "id": "eb969eb90e17c979",
      "item": {
        "type": "markdown",
        "id": "eb969eb90e17c979",
        "text": "[[Turtle Graphics]]\n[[Turtle Graphics in Javascript]]"
      },
      "date": 1641341677298
    },
    {
      "item": {
        "type": "factory",
        "id": "f896585aa686d4bd"
      },
      "id": "f896585aa686d4bd",
      "type": "add",
      "after": "eb969eb90e17c979",
      "date": 1641342245318
    },
    {
      "type": "edit",
      "id": "f896585aa686d4bd",
      "item": {
        "type": "reference",
        "id": "f896585aa686d4bd",
        "site": "clive.tries.fed.wiki",
        "slug": "future-proofing-ipfs-blockchains-and-other-systems",
        "title": "Future Proofing\nIPFS, Blockchains,\nand other Systems",
        "text": "Juan Benet spoke at- BPASE ’17 [https://cyber.stanford.edu/sites/default/files/juanbenet.pdf pdf]"
      },
      "date": 1641342252528
    },
    {
      "item": {
        "type": "factory",
        "id": "21c6a5d8f2bdb78d"
      },
      "id": "21c6a5d8f2bdb78d",
      "type": "add",
      "after": "f896585aa686d4bd",
      "date": 1641343007744
    },
    {
      "type": "edit",
      "id": "21c6a5d8f2bdb78d",
      "item": {
        "type": "pagefold",
        "id": "21c6a5d8f2bdb78d",
        "text": "~"
      },
      "date": 1641343012455
    },
    {
      "id": "21c6a5d8f2bdb78d",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "21c6a5d8f2bdb78d",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "7aa2ad3b84e42abd",
        "ac987ce9a14a236a",
        "87af3995a4220cd1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "52c7276e544fa37f",
        "b917b95d9114e21f",
        "8ac7c44acb9f83fc",
        "8a0dec46769ee4d3",
        "5f9e75c33e0946a3",
        "f1228e9b1e47e5b2",
        "eb969eb90e17c979",
        "f896585aa686d4bd"
      ],
      "date": 1641343024862
    },
    {
      "item": {
        "type": "factory",
        "id": "bc2aebe3cef29c37"
      },
      "id": "bc2aebe3cef29c37",
      "type": "add",
      "after": "f896585aa686d4bd",
      "date": 1641343032589
    },
    {
      "type": "edit",
      "id": "bc2aebe3cef29c37",
      "item": {
        "type": "reference",
        "id": "bc2aebe3cef29c37",
        "site": "wiki.ralfbarkow.ch",
        "slug": "cartographist",
        "title": "Cartographist",
        "text": "Cartographist can save, and load \"[[trails]]\" — the exact state of the session you've left — supporting researching topics over long periods of time. [https://szymonkaliski.com/projects/cartographist/ page]"
      },
      "date": 1641343035208
    },
    {
      "id": "bc2aebe3cef29c37",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "21c6a5d8f2bdb78d",
        "bc2aebe3cef29c37",
        "aa33bd45d89590e1",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "7aa2ad3b84e42abd",
        "ac987ce9a14a236a",
        "87af3995a4220cd1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "52c7276e544fa37f",
        "b917b95d9114e21f",
        "8ac7c44acb9f83fc",
        "8a0dec46769ee4d3",
        "5f9e75c33e0946a3",
        "f1228e9b1e47e5b2",
        "eb969eb90e17c979",
        "f896585aa686d4bd"
      ],
      "date": 1641343048401
    },
    {
      "type": "remove",
      "id": "aa33bd45d89590e1",
      "date": 1641343051249
    },
    {
      "item": {
        "type": "factory",
        "id": "1024e92171740377"
      },
      "id": "1024e92171740377",
      "type": "add",
      "after": "f896585aa686d4bd",
      "date": 1641343095072
    },
    {
      "type": "edit",
      "id": "1024e92171740377",
      "item": {
        "type": "reference",
        "id": "1024e92171740377",
        "site": "wiki.ralfbarkow.ch",
        "slug": "biologically-inspired-computing",
        "title": "Biologically Inspired Computing",
        "text": "The second simulator also tracks the flow of messages through a network. [https://c2.com/doc/TestPoint/TestPointInPractice.pdf pdf]"
      },
      "date": 1641343098007
    },
    {
      "id": "1024e92171740377",
      "type": "move",
      "order": [
        "226bdd5ad4f46d3f",
        "ed07244ef6a447e7",
        "21c6a5d8f2bdb78d",
        "bc2aebe3cef29c37",
        "6a152360d7296836",
        "910999de59a109c5",
        "4570c39605fa977d",
        "23a2ae0232bf8f73",
        "51fe536658ad8c8b",
        "af745475e4cea00a",
        "a1fbb5832f261049",
        "2b9fd1e34cf752e7",
        "574e99eebafb3118",
        "1024e92171740377",
        "b05d4d84d405f06a",
        "bb1018420dd2d429",
        "f139d66687fd38aa",
        "500be18338981193",
        "2c3e35099e49704a",
        "b047d790eba2e28a",
        "7f556cd4f357cb0d",
        "a85c94f7c9e3d44c",
        "478e1a19e0e9aef8",
        "69f9f39d8bc9d83e",
        "08a26c353ad51ac7",
        "2f31738afe9e7bdb",
        "1bbf2f057a967ca5",
        "df4057512b1f08ba",
        "695204491b499ad7",
        "8b695a08fa50eeb4",
        "c2bfa7b2be057abf",
        "d967245b3261c189",
        "1c70a138b9fdbba7",
        "a01c09dade088660",
        "e012a5377c533749",
        "d4f24000fbd1dae8",
        "513d4be75b607b39",
        "8cdf0e40318718bd",
        "ce073cdaf2281551",
        "2032b7939d08700f",
        "3a33a584450b0edc",
        "d398a6800cf4a377",
        "e2f6b6b5e589f597",
        "1609be3ed3874a81",
        "4369b5fa2bbaace7",
        "dbbeb093c65479cf",
        "6fe1ca96288d60e9",
        "45f7631535edc94f",
        "f447e86291102828",
        "fffe7082551a0bfb",
        "a0f4ea11950381e4",
        "d513207a2d3f8d23",
        "121910781dd850f4",
        "8382cd374559cc6b",
        "61fe6cdc1555f1fd",
        "20cbbdddbd8f6c4f",
        "0265a6cd84825576",
        "be1cafdcb3720984",
        "80438dec34169684",
        "5f0cdee74953b098",
        "07051cccef936686",
        "0c2e65a1f4308d52",
        "803486b65da4d57c",
        "935b7757270a3303",
        "51ff06aea25ee923",
        "8d3d0b1610489b5a",
        "6eff89999d2f8127",
        "53d3cb2a07e2d46a",
        "fd80f4285f9d7c83",
        "52dcaa78274ecd0a",
        "ff3405b00ee5e891",
        "90021173db2aa9a1",
        "7aa2ad3b84e42abd",
        "ac987ce9a14a236a",
        "87af3995a4220cd1",
        "cd47feb3a7c309c9",
        "d4424342c4d5bf65",
        "53d0b8ec4d024655",
        "ac468b869ca42b86",
        "52c7276e544fa37f",
        "b917b95d9114e21f",
        "8ac7c44acb9f83fc",
        "8a0dec46769ee4d3",
        "5f9e75c33e0946a3",
        "f1228e9b1e47e5b2",
        "eb969eb90e17c979",
        "f896585aa686d4bd"
      ],
      "date": 1641343118213
    },
    {
      "type": "remove",
      "id": "b05d4d84d405f06a",
      "date": 1641343125102
    },
    {
      "item": {
        "type": "factory",
        "id": "d351f317d9d2d1dd"
      },
      "id": "d351f317d9d2d1dd",
      "type": "add",
      "after": "f896585aa686d4bd",
      "date": 1641343727155
    },
    {
      "type": "edit",
      "id": "d351f317d9d2d1dd",
      "item": {
        "type": "pagefold",
        "id": "d351f317d9d2d1dd",
        "text": "cap-talk"
      },
      "date": 1641343730297
    },
    {
      "item": {
        "type": "factory",
        "id": "95e39686336b666f"
      },
      "id": "95e39686336b666f",
      "type": "add",
      "after": "d351f317d9d2d1dd",
      "date": 1641343731838
    },
    {
      "type": "edit",
      "id": "95e39686336b666f",
      "item": {
        "type": "paragraph",
        "id": "95e39686336b666f",
        "text": "https://marc.info/?l=cap-talk&m=145881706209595&w=2"
      },
      "date": 1641343737641
    },
    {
      "type": "edit",
      "id": "95e39686336b666f",
      "item": {
        "type": "markdown",
        "id": "95e39686336b666f",
        "text": "https://marc.info/?l=cap-talk&m=145881706209595&w=2"
      },
      "date": 1641343738886
    },
    {
      "type": "edit",
      "id": "95e39686336b666f",
      "item": {
        "type": "markdown",
        "id": "95e39686336b666f",
        "text": "[cap-talk] Reasoning about Object Capabilities using Logical Relations and Effect Parametricity\n[https://marc.info/?l=cap-talk&m=145881706209595&w=2 page]"
      },
      "date": 1641343785611
    },
    {
      "item": {
        "type": "factory",
        "id": "916ee3aacc5fcc92"
      },
      "id": "916ee3aacc5fcc92",
      "type": "add",
      "after": "95e39686336b666f",
      "date": 1641343841209
    },
    {
      "type": "edit",
      "id": "916ee3aacc5fcc92",
      "item": {
        "type": "paragraph",
        "id": "916ee3aacc5fcc92",
        "text": "Reasoning about Object Capabilities\nwith Logical Relations and Effect Parametricity"
      },
      "date": 1641343844655
    },
    {
      "type": "edit",
      "id": "916ee3aacc5fcc92",
      "item": {
        "type": "paragraph",
        "id": "916ee3aacc5fcc92",
        "text": "Reasoning about Object Capabilities\nwith Logical Relations and Effect Parametricity [https://lirias.kuleuven.be/bitstream/123456789/529252/1/paper-preprint.pdf pdf]"
      },
      "date": 1641343860737
    },
    {
      "type": "add",
      "id": "99b9ad57ed3018b6",
      "item": {
        "type": "paragraph",
        "id": "99b9ad57ed3018b6",
        "text": "> **Abstract**. Object capabilities are a technique for fine-grained\nprivilege separation in programming languages and systems,\nwith important applications in security. However, current for-\nmal characterisations do not fully capture capability-safety of\na programming language and are not sufficient for verifying\ntypical applications. Using state-of-the-art techniques from\nprogramming languages research, we define a logical relation\nfor a core calculus of JavaScript that better characterises\ncapability-safety. The relation is powerful enough to reason\nabout typical capability patterns and supports evolvable in-\nvariants on shared data structures, capabilities with restricted\nauthority over them and isolated components with restricted\ncommunication channels. We use a novel notion of effect\nparametricity for deriving properties about effects. Our results\nimply memory access bounds that have previously been used\nto characterise capability-safety."
      },
      "after": "916ee3aacc5fcc92",
      "date": 1641343892214
    },
    {
      "type": "edit",
      "id": "99b9ad57ed3018b6",
      "item": {
        "type": "markdown",
        "id": "99b9ad57ed3018b6",
        "text": "> **Abstract**. Object capabilities are a technique for fine-grained\nprivilege separation in programming languages and systems,\nwith important applications in security. However, current for-\nmal characterisations do not fully capture capability-safety of\na programming language and are not sufficient for verifying\ntypical applications. Using state-of-the-art techniques from\nprogramming languages research, we define a logical relation\nfor a core calculus of JavaScript that better characterises\ncapability-safety. The relation is powerful enough to reason\nabout typical capability patterns and supports evolvable in-\nvariants on shared data structures, capabilities with restricted\nauthority over them and isolated components with restricted\ncommunication channels. We use a novel notion of effect\nparametricity for deriving properties about effects. Our results\nimply memory access bounds that have previously been used\nto characterise capability-safety."
      },
      "date": 1641343893356
    },
    {
      "type": "edit",
      "id": "99b9ad57ed3018b6",
      "item": {
        "type": "markdown",
        "id": "99b9ad57ed3018b6",
        "text": "> **Abstract**. Object capabilities are a technique for fine-grained privilege separation in programming languages and systems, with important applications in security. However, current formal characterisations do not fully capture capability-safety of a programming language and are not sufficient for verifying typical applications. Using state-of-the-art techniques from programming languages research, we define a logical relation\nfor a core calculus of JavaScript that better characterises capability-safety. The relation is powerful enough to reason about typical capability patterns and supports evolvable invariants on shared data structures, capabilities with restricted authority over them and isolated components with restricted communication channels. We use a novel notion of effect parametricity for deriving properties about effects. Our results\nimply memory access bounds that have previously been used to characterise capability-safety."
      },
      "date": 1641343943509
    },
    {
      "type": "edit",
      "id": "99b9ad57ed3018b6",
      "item": {
        "type": "markdown",
        "id": "99b9ad57ed3018b6",
        "text": "> **Abstract**. Object capabilities are a technique for fine-grained privilege separation in programming languages and systems, with important applications in security. However, current formal characterisations do not fully capture capability-safety of a programming language and are not sufficient for verifying typical applications. Using state-of-the-art techniques from programming languages research, we define a logical relation\nfor a core calculus of JavaScript that better characterises capability-safety. The relation is powerful enough to reason about typical capability patterns and supports evolvable invariants on shared data structures, capabilities with restricted authority over them and isolated components with restricted communication channels. We use a novel notion of effect parametricity for deriving properties about effects. Our results imply memory access bounds that have previously been used to characterise capability-safety."
      },
      "date": 1641343950358
    },
    {
      "item": {
        "type": "factory",
        "id": "a0024eaf12375667"
      },
      "id": "a0024eaf12375667",
      "type": "add",
      "after": "99b9ad57ed3018b6",
      "date": 1641344038542
    },
    {
      "type": "edit",
      "id": "a0024eaf12375667",
      "item": {
        "type": "paragraph",
        "id": "a0024eaf12375667",
        "text": "In the object capabilities model, effects can only be\nproduced by sending messages to objects. These can be\nobjects in the sense of object-oriented programming, but\nnot necessarily so."
      },
      "date": 1641344041617
    },
    {
      "type": "edit",
      "id": "a0024eaf12375667",
      "item": {
        "type": "paragraph",
        "id": "a0024eaf12375667",
        "text": "In the object capabilities model, effects can only be produced by sending messages to objects. These can be objects in the sense of object-oriented programming, but not necessarily so."
      },
      "date": 1641344052451
    },
    {
      "type": "edit",
      "id": "a0024eaf12375667",
      "item": {
        "type": "paragraph",
        "id": "a0024eaf12375667",
        "text": "In the object capabilities model, effects can only be produced by sending messages to *objects*. These can be objects in the sense of object-oriented programming, but not necessarily so."
      },
      "date": 1641344061584
    },
    {
      "type": "edit",
      "id": "a0024eaf12375667",
      "item": {
        "type": "markdown",
        "id": "a0024eaf12375667",
        "text": "In the object capabilities model, effects can only be produced by sending messages to *objects*. These can be objects in the sense of object-oriented programming, but not necessarily so."
      },
      "date": 1641344062911
    },
    {
      "type": "edit",
      "id": "a0024eaf12375667",
      "item": {
        "type": "markdown",
        "id": "a0024eaf12375667",
        "text": "In the object capabilities model, effects can only be produced by sending messages to *objects*. These can be objects in the sense of object-oriented programming, but not necessarily so.\n"
      },
      "date": 1641344079724
    },
    {
      "type": "add",
      "id": "e3f249ad096cc1a5",
      "item": {
        "type": "markdown",
        "id": "e3f249ad096cc1a5",
        "text": "*Device objects* are primitive objects that\nmodel resources in the outside world and produce effects in the outside world when receiving a message. "
      },
      "after": "a0024eaf12375667",
      "date": 1641344089830
    },
    {
      "type": "edit",
      "id": "e3f249ad096cc1a5",
      "item": {
        "type": "markdown",
        "id": "e3f249ad096cc1a5",
        "text": "*Device objects* are primitive objects that model resources in the outside world and produce effects in the outside world when receiving a message. "
      },
      "date": 1641344094940
    },
    {
      "type": "edit",
      "id": "e3f249ad096cc1a5",
      "item": {
        "type": "markdown",
        "id": "e3f249ad096cc1a5",
        "text": "*Device objects* are primitive objects that model resources in the outside world and produce effects in the outside world when receiving a message. \n"
      },
      "date": 1641344260456
    },
    {
      "type": "add",
      "id": "79c194a58d1a281c",
      "item": {
        "type": "markdown",
        "id": "79c194a58d1a281c",
        "text": "[…]\n"
      },
      "after": "e3f249ad096cc1a5",
      "date": 1641344265411
    },
    {
      "type": "add",
      "id": "e3a5d7dffbaa51b3",
      "item": {
        "type": "markdown",
        "id": "e3a5d7dffbaa51b3",
        "text": "Such capabilities (like our rAdNode) restrict\nother capabilities, make them conditional or revocable or otherwise modify and combine them. "
      },
      "after": "79c194a58d1a281c",
      "date": 1641344278379
    },
    {
      "item": {
        "type": "factory",
        "id": "a0d06c2141ce2062"
      },
      "id": "a0d06c2141ce2062",
      "type": "add",
      "after": "e3a5d7dffbaa51b3",
      "date": 1641344308329
    },
    {
      "type": "edit",
      "id": "a0d06c2141ce2062",
      "item": {
        "type": "pagefold",
        "id": "a0d06c2141ce2062",
        "text": "~"
      },
      "date": 1641344313194
    },
    {
      "item": {
        "type": "factory",
        "id": "b400552d62ea6cbd"
      },
      "id": "b400552d62ea6cbd",
      "type": "add",
      "after": "a0d06c2141ce2062",
      "date": 1641344315589
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "paragraph",
        "id": "b400552d62ea6cbd",
        "text": "Ward\nSome ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\nI would like to follow up this idea with a quote from Biota Language:\n\nTherefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it."
      },
      "date": 1641344319556
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "paragraph",
        "id": "b400552d62ea6cbd",
        "text": "Ward\nSome ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\nI would like to follow up this idea with a quote from Biota Language:\n\n> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it."
      },
      "date": 1641344326331
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "markdown",
        "id": "b400552d62ea6cbd",
        "text": "Ward\nSome ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\nI would like to follow up this idea with a quote from Biota Language:\n\n> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it."
      },
      "date": 1641344327464
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "markdown",
        "id": "b400552d62ea6cbd",
        "text": "Ward\n> Some ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\n\nI would like to follow up this idea with a quote from Biota Language:\n\n> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it."
      },
      "date": 1641344343260
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "markdown",
        "id": "b400552d62ea6cbd",
        "text": "Ward\n> Some ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\n\nI would like to follow up this idea with a quote from [[Biota Language]]:\n\n> Therefore, any instruction that can fail can be used as a conditional by simply placing an alternate sequence beside it."
      },
      "date": 1641344370556
    },
    {
      "type": "edit",
      "id": "e3a5d7dffbaa51b3",
      "item": {
        "type": "markdown",
        "id": "e3a5d7dffbaa51b3",
        "text": "Such capabilities (like our rAdNode) restrict\nother capabilities, make them [[conditional]] or revocable or otherwise modify and combine them. "
      },
      "date": 1641344415986
    },
    {
      "type": "edit",
      "id": "a0d06c2141ce2062",
      "item": {
        "type": "pagefold",
        "id": "a0d06c2141ce2062",
        "text": "Conditional"
      },
      "date": 1641344423830
    },
    {
      "type": "edit",
      "id": "b400552d62ea6cbd",
      "item": {
        "type": "markdown",
        "id": "b400552d62ea6cbd",
        "text": "Ward\n> Some ideas: Draw the path as more like string connecting dots where instructions fail causing a redirection through the loops. Maybe also squeeze this more so that the dada point can be rendered along side.\n\nI would like to follow up this idea with a quote from [[Biota Language]]:\n\n> Therefore, any instruction that can fail can be used as a [[conditional]] by simply placing an alternate sequence beside it."
      },
      "date": 1641344435583
    },
    {
      "item": {
        "type": "factory",
        "id": "7ce3fcb61b1d879b"
      },
      "id": "7ce3fcb61b1d879b",
      "type": "add",
      "after": "b400552d62ea6cbd",
      "date": 1641344853112
    },
    {
      "type": "edit",
      "id": "7ce3fcb61b1d879b",
      "item": {
        "type": "reference",
        "id": "7ce3fcb61b1d879b",
        "site": "wiki.ralfbarkow.ch",
        "slug": "american-information-exchange",
        "title": "American Information Exchange",
        "text": "The American Information Exchange (AMIX) was a platform for the buying and selling of information, goods and services as well as the exchange of information, ideas, and certain kinds of intellectual work product, created by economist and futurist Phil Salin[2] in the 1980s,[3][4] together with Chip Morningstar (chief architect)[5] and Randy Farmer,[6][7][8] and involvement from Esther Dyson and Mitch Kapor.[9] Economist Bill Tulloh was market manager.[10] [https://en.wikipedia.org/wiki/American_Information_Exchange wikipedia]"
      },
      "date": 1641344856698
    },
    {
      "type": "fork",
      "date": 1643054072461
    }
  ]
}