{
  "title": "Geometry of Interaction",
  "story": [
    {
      "type": "paragraph",
      "id": "916d3006b587f9c2",
      "text": "The geometry of interaction machine. [https://dl.acm.org/doi/abs/10.1145/199448.199483 acm]"
    },
    {
      "type": "markdown",
      "id": "b50f65b8a760f455",
      "text": "> We investigate implementation techniques arising directly from Girard's *Geometry of Interaction* semantics for Linear Logic, specifically for a simple functional programming language (PCF). This gives rise to a very simple, compact, compilation schema and run-time system. We analyse various properties of this kind of computation that suggest substantial optimisations that could make this paradigm of implementation not only practical, but potentially more efficient than extant paradigms."
    },
    {
      "type": "paragraph",
      "id": "56fe31a2fe04e4f4",
      "text": "There are a number of established implementation techniques for functional programming languages. Broadly speaking these are based on graph rewriting [Wad71 ], stack manipulation, for example the SECD machine [Lan64], and buffered data-flow [FH88]. In this paper we present the Geometry of Interaction Machine – an implementation technique based on sequential, rather than buffered, data-flow."
    },
    {
      "type": "paragraph",
      "id": "346267c1fa5d69c9",
      "text": "[…] A new paradigm in semantics developed by [[Jean-Yves Girard]] under the name Geometry of interaction can now allow the study of the dynamics of computation. His motivations were to provide mathematical tools for the study of the cut-elimination process in Linear Logic proof structures; but the fundamental ideas are applicable to computation in general. The prominent features of his programme can be summarised as follows."
    },
    {
      "type": "markdown",
      "id": "fcc5daf9c94a0e66",
      "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the λ-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denotational tools. The model is termed *dynamic* since it captures the essential computational content. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Geometry of Interaction",
        "story": []
      },
      "date": 1663334224626
    },
    {
      "item": {
        "type": "factory",
        "id": "56fe31a2fe04e4f4"
      },
      "id": "56fe31a2fe04e4f4",
      "type": "add",
      "date": 1663334228098
    },
    {
      "id": "916d3006b587f9c2",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "916d3006b587f9c2",
        "text": "The geometry of interaction machine. [https://dl.acm.org/doi/abs/10.1145/199448.199483 acm]"
      },
      "date": 1663334232279
    },
    {
      "id": "b50f65b8a760f455",
      "type": "add",
      "item": {
        "type": "markdown",
        "id": "b50f65b8a760f455",
        "text": "> We investigate implementation techniques arising directly from Girard's [[Geometry of Interaction]] semantics for Linear Logic, specifically for a simple functional programming language (PCF). This gives rise to a very simple, compact, compilation schema and run-time system. We analyse various properties of this kind of computation that suggest substantial optimisations that could make this paradigm of implementation not only practical, but potentially more efficient than extant paradigms."
      },
      "after": "916d3006b587f9c2",
      "date": 1663334235108
    },
    {
      "type": "edit",
      "id": "b50f65b8a760f455",
      "item": {
        "type": "markdown",
        "id": "b50f65b8a760f455",
        "text": "> We investigate implementation techniques arising directly from Girard's *Geometry of Interaction* semantics for Linear Logic, specifically for a simple functional programming language (PCF). This gives rise to a very simple, compact, compilation schema and run-time system. We analyse various properties of this kind of computation that suggest substantial optimisations that could make this paradigm of implementation not only practical, but potentially more efficient than extant paradigms."
      },
      "date": 1663334243331
    },
    {
      "type": "edit",
      "id": "56fe31a2fe04e4f4",
      "item": {
        "type": "paragraph",
        "id": "56fe31a2fe04e4f4",
        "text": "There are a number of established implementation techniques for functional programming languages. Broadly speaking these are based on graph rewriting [Wad71 ], stack manipulation, for example the SECD machine [Lan64], and buffered data-flow [FH88]. In this paper we present the Geometry of Interaction Machine-an implementation technique based on sequential, rather than buffered, data-flow."
      },
      "date": 1663334282614
    },
    {
      "type": "edit",
      "id": "56fe31a2fe04e4f4",
      "item": {
        "type": "paragraph",
        "id": "56fe31a2fe04e4f4",
        "text": "There are a number of established implementation techniques for functional programming languages. Broadly speaking these are based on graph rewriting [Wad71 ], stack manipulation, for example the SECD machine [Lan64], and buffered data-flow [FH88]. In this paper we present the Geometry of Interaction Machine – an implementation technique based on sequential, rather than buffered, data-flow."
      },
      "date": 1663334306035
    },
    {
      "item": {
        "type": "factory",
        "id": "346267c1fa5d69c9"
      },
      "id": "346267c1fa5d69c9",
      "type": "add",
      "after": "56fe31a2fe04e4f4",
      "date": 1663334333276
    },
    {
      "type": "edit",
      "id": "346267c1fa5d69c9",
      "item": {
        "type": "paragraph",
        "id": "346267c1fa5d69c9",
        "text": "[…] A new paradigm in semantics developed by Jean-Yves Girard under the name Geometry of interaction can now allow the study of the dynamics of computation. His motivations were to provide mathematical tools for the study of the cut-elimination process in Linear Logic proof structures; but the fundamental ideas are applicable to computation in general. The prominent features of his programme can be summarised as follows."
      },
      "date": 1663334339814
    },
    {
      "type": "edit",
      "id": "346267c1fa5d69c9",
      "item": {
        "type": "paragraph",
        "id": "346267c1fa5d69c9",
        "text": "[…] A new paradigm in semantics developed by [[Jean-Yves Girard]] under the name Geometry of interaction can now allow the study of the dynamics of computation. His motivations were to provide mathematical tools for the study of the cut-elimination process in Linear Logic proof structures; but the fundamental ideas are applicable to computation in general. The prominent features of his programme can be summarised as follows."
      },
      "date": 1663334353810
    },
    {
      "item": {
        "type": "factory",
        "id": "fcc5daf9c94a0e66"
      },
      "id": "fcc5daf9c94a0e66",
      "type": "add",
      "after": "346267c1fa5d69c9",
      "date": 1663334377595
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the A-calculus ). The semantics is chiefly a study of the dynamics of the cut-elimination process (hence ~-reduction) using denot ational tools. The model is termed dynamic since it captures the essential computational cent ent. The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334386950
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the A-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence ~-reduction) using denot ational tools. The model is termed dynamic since it captures the essential computational cent ent. The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334394584
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the A-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence ~-reduction) using denot ational tools. The model is termed dynamic since it captures the essential computational cent ent. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334401622
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the A-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denot ational tools. The model is termed dynamic since it captures the essential computational cent ent. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334498149
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the λ-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denot ational tools. The model is termed dynamic since it captures the essential computational cent ent. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334560726
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the λ-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denotational tools. The model is termed dynamic since it captures the essential computational cent ent. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334576575
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the λ-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denotational tools. The model is termed *dynamic* since it captures the essential computational cent ent. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334592743
    },
    {
      "type": "edit",
      "id": "fcc5daf9c94a0e66",
      "item": {
        "type": "markdown",
        "id": "fcc5daf9c94a0e66",
        "text": "* The semantics is syntax free in that it avoids the bureaucratic issues that come with the notion of substitution (cf. the λ-calculus ). \n* The semantics is chiefly a study of the dynamics of the cut-elimination process (hence β-reduction) using denotational tools. The model is termed *dynamic* since it captures the essential computational content. \n* The semantics is operational in the sense that there are a set of prescribed rules specifying how computation should proceed at each step."
      },
      "date": 1663334607202
    }
  ]
}