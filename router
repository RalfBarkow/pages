{
  "title": "Router",
  "story": [
    {
      "type": "paragraph",
      "id": "b94a155e2506f221",
      "text": "maps the current state of the application via the URL and provides navigation interfaces"
    },
    {
      "type": "paragraph",
      "id": "27c768d3c56b8d43",
      "text": "These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code."
    },
    {
      "type": "paragraph",
      "id": "7b9c6d97a45754e7",
      "text": "Hybrid frameworks such as [[Analog]], which operate on both the client and server sides, take this approach further and provide server-side routing in addition to client-side navigation."
    },
    {
      "type": "pagefold",
      "id": "4286757bddd81dd0",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "dc49c2839a81588b",
      "text": "SPRINGER, Sebastian, 2023. Die neue Generation der JavaScript-Metaframeworks. iX. 26 Juli 2023. Bd. 2023, Nr. 8, S. 108–110 [https://www.heise.de/select/ix/2023/8/2309408465876534332 page]"
    },
    {
      "type": "reference",
      "id": "5d45c408dcb8a4d6",
      "site": "wiki.ralfbarkow.ch",
      "slug": "hilla-router",
      "title": "Hilla Router",
      "text": "is a small yet powerful client-side router JavaScript library. It uses a widely adopted express.js syntax for routers (users/:id) to map URLs to views. It has all the features of a modern router: async route resolution, animated transition, child routes, navigation guards, redirects, and more. – https://hilla.dev/docs/routing/router"
    },
    {
      "type": "reference",
      "id": "b6d0f1a6b9a93816",
      "site": "wiki.ralfbarkow.ch",
      "slug": "livenode-server",
      "title": "LiveNode Server",
      "text": "The aim of this project is to create a [[LiveCode Server]] that interoperates efficiently with [[NodeJS]]."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Router",
        "story": []
      },
      "date": 1692264738296
    },
    {
      "item": {
        "type": "factory",
        "id": "5d45c408dcb8a4d6"
      },
      "id": "5d45c408dcb8a4d6",
      "type": "add",
      "date": 1692264743684
    },
    {
      "type": "edit",
      "id": "5d45c408dcb8a4d6",
      "item": {
        "type": "reference",
        "id": "5d45c408dcb8a4d6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "hilla-router",
        "title": "Hilla Router",
        "text": "Hilla Router is a small yet powerful client-side router JavaScript library. It uses a widely adopted express.js syntax for routers (users/:id) to map URLs to views. It has all the features of a modern router: async route resolution, animated transition, child routes, navigation guards, redirects, and more. – https://hilla.dev/docs/routing/router"
      },
      "date": 1692264746374
    },
    {
      "item": {
        "type": "factory",
        "id": "b6d0f1a6b9a93816"
      },
      "id": "b6d0f1a6b9a93816",
      "type": "add",
      "after": "5d45c408dcb8a4d6",
      "date": 1692264782092
    },
    {
      "type": "edit",
      "id": "b6d0f1a6b9a93816",
      "item": {
        "type": "reference",
        "id": "b6d0f1a6b9a93816",
        "site": "wiki.ralfbarkow.ch",
        "slug": "livenode-server",
        "title": "LiveNode Server",
        "text": "The aim of this project is to create a [[LiveCode Server]] that interoperates efficiently with [[NodeJS]]."
      },
      "date": 1692264794106
    },
    {
      "type": "edit",
      "id": "5d45c408dcb8a4d6",
      "item": {
        "type": "reference",
        "id": "5d45c408dcb8a4d6",
        "site": "wiki.ralfbarkow.ch",
        "slug": "hilla-router",
        "title": "Hilla Router",
        "text": "is a small yet powerful client-side router JavaScript library. It uses a widely adopted express.js syntax for routers (users/:id) to map URLs to views. It has all the features of a modern router: async route resolution, animated transition, child routes, navigation guards, redirects, and more. – https://hilla.dev/docs/routing/router"
      },
      "date": 1692264803327
    },
    {
      "id": "b94a155e2506f221",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "In both cases, the [[Router]] maps the current state of the application via the URL and provides navigation interfaces. These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code. Hybrid frameworks such as Analog, which operate on both the client and server sides, take this approach further and provide server-side routing in addition to client-side navigation. "
      },
      "attribution": {
        "page": "2023-09-06"
      },
      "date": 1693992349204
    },
    {
      "item": {
        "type": "factory",
        "id": "4286757bddd81dd0"
      },
      "id": "4286757bddd81dd0",
      "type": "add",
      "after": "b6d0f1a6b9a93816",
      "date": 1693992351159
    },
    {
      "type": "edit",
      "id": "4286757bddd81dd0",
      "item": {
        "type": "pagefold",
        "id": "4286757bddd81dd0",
        "text": "~"
      },
      "date": 1693992355549
    },
    {
      "id": "4286757bddd81dd0",
      "type": "move",
      "order": [
        "b94a155e2506f221",
        "4286757bddd81dd0",
        "5d45c408dcb8a4d6",
        "b6d0f1a6b9a93816"
      ],
      "date": 1693992358876
    },
    {
      "type": "edit",
      "id": "b94a155e2506f221",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "maps the current state of the application via the URL and provides navigation interfaces. These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code. Hybrid frameworks such as Analog, which operate on both the client and server sides, take this approach further and provide server-side routing in addition to client-side navigation. "
      },
      "date": 1693992375543
    },
    {
      "id": "dc49c2839a81588b",
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "dc49c2839a81588b",
        "text": "SPRINGER, Sebastian, 2023. Die neue Generation der JavaScript-Metaframeworks. iX. 26 Juli 2023. Bd. 2023, Nr. 8, S. 108–110 [https://www.heise.de/select/ix/2023/8/2309408465876534332 page]"
      },
      "after": "4286757bddd81dd0",
      "attribution": {
        "page": "2023-09-06"
      },
      "date": 1693992377889
    },
    {
      "type": "edit",
      "id": "b94a155e2506f221",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "maps the current state of the application via the URL and provides navigation interfaces. These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code. Hybrid frameworks such as [[Analog]], which operate on both the client and server sides, take this approach further and provide server-side routing in addition to client-side navigation. "
      },
      "date": 1693992441358
    },
    {
      "type": "edit",
      "id": "b94a155e2506f221",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "maps the current state of the application via the URL and provides navigation interfaces. These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code. Hybrid frameworks such"
      },
      "date": 1693992585023
    },
    {
      "type": "edit",
      "id": "b94a155e2506f221",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "maps the current state of the application via the URL and provides navigation interfaces."
      },
      "date": 1693992592117
    },
    {
      "type": "add",
      "id": "27c768d3c56b8d43",
      "item": {
        "type": "paragraph",
        "id": "27c768d3c56b8d43",
        "text": "These can either be components that the framework renders regularly and that users can use like ordinary links, or navigation functions that the application itself uses to navigate from the program code."
      },
      "after": "b94a155e2506f221",
      "date": 1693992596052
    },
    {
      "type": "add",
      "id": "7b9c6d97a45754e7",
      "item": {
        "type": "paragraph",
        "id": "7b9c6d97a45754e7",
        "text": "Hybrid frameworks such as [[Analog]], which operate on both the client and server sides, take this approach further and provide server-side routing in addition to client-side navigation."
      },
      "after": "27c768d3c56b8d43",
      "date": 1693992596505
    },
    {
      "type": "edit",
      "id": "b94a155e2506f221",
      "item": {
        "type": "paragraph",
        "id": "b94a155e2506f221",
        "text": "maps the current state of the application via the URL and provides navigation interfaces"
      },
      "date": 1693992612569
    }
  ]
}