{
  "title": "Collaborative Automation",
  "story": [
    {
      "type": "paragraph",
      "id": "ab0e5783185a4d9d",
      "text": "[[Jessica Kerr]], aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of [[Automation]]. "
    },
    {
      "type": "paragraph",
      "id": "375696e34dc0615a",
      "text": "We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
    },
    {
      "type": "markdown",
      "id": "0f60295f47914c32",
      "text": "_jessitron's presentation clarifies a lot of background knowledge that surrounds what I presented at my poster session in the New Relic Product Offsite._\n"
    },
    {
      "type": "paragraph",
      "id": "ad08aa215b2b550e",
      "text": "We are part of a sociotechnical system. Code, running software, & tools are all on the team impacting lives with software. All of us learn and change every day."
    },
    {
      "type": "markdown",
      "id": "c34d98b10c42ce65",
      "text": "**Joint Activity:**\nBasic Compact, Mutually Predictable, Mutually Directable, Common Ground"
    },
    {
      "type": "markdown",
      "id": "04373eb09eccb81e",
      "text": "**Basic Compact:** mutual purpose until further notice"
    },
    {
      "type": "paragraph",
      "id": "2970d33cab08536c",
      "text": "A counterexample from aviation: there’s a story of a near miss of an airplane crash. There was a fuel leak, and the crew just happened to notice that the left fuel tank level was dropping while the engines were pulling from the right. They go look out the window, and ope! there goes the fuel! Then they observe that the rudder is way to the right, because the fuel levels threw the plane off balance, and the autopilot was just doing its business, compensating, compensating, turning more and more to the right, not telling anyone that it was near the edge of what it could do."
    },
    {
      "type": "paragraph",
      "id": "f2f423efe6795aa6",
      "text": "The lesson is: don't try harder! Talk to your team first."
    },
    {
      "type": "paragraph",
      "id": "51901dfc479ecc42",
      "text": "The Basic Compact means, don’t swallow errors! Errors are data. Maybe don’t surface them to users, but get that information to the humans on the team. That’s how we learn."
    },
    {
      "type": "paragraph",
      "id": "3ffd760c414ccaf0",
      "text": "Collaboration is not about being perfect. We work with each other within the team, so that the rest of the work can rely on the team."
    },
    {
      "type": "markdown",
      "id": "a5645263e6c8e0c3",
      "text": "**Mutually Predictable:** signal what you're doing and why."
    },
    {
      "type": "paragraph",
      "id": "5361910bee4063f6",
      "text": "In cars that have driver assist, there’s a thing that when you get too close to the car in front of you, it hits the brakes. Which is good -- unless you’re trying to pass that car. So you need to use your turn signal. This tells the driver-assist that you’re about to change lanes, so it can choose not to brake. It can predict you, and act in cooperation."
    },
    {
      "type": "paragraph",
      "id": "571bf738fbd2753d",
      "text": "In any machine learning software, I want it to report on what rules fired to trigger the result. The software needs to be accountable: able to explain why it acted as it did. That will let us reach mutual predictability."
    },
    {
      "type": "markdown",
      "id": "aaed3769e0fe82f0",
      "text": "**Mutually Directable**"
    },
    {
      "type": "paragraph",
      "id": "7a2fa77015efff70",
      "text": "There’s a funny property of negotiations: the person with the least flexibility has more power. If you’re a vendor, and I’m buying software from you, and I’m a manager who can authorize up to $20k/year, then I have more power. You have more responsibility — you have a number to meet this quarter. If you don’t sell it to me for $20k, then maybe we’ll have another meeting next week... maybe. I have less flexibility, and therefore more power."
    },
    {
      "type": "paragraph",
      "id": "559cbf699215fb0b",
      "text": "When the “computer says NO”, the computer is in charge."
    },
    {
      "type": "paragraph",
      "id": "c043cfc600310293",
      "text": "Within our teams, keep the human in charge. Humans are maximally flexible, so that means the automation needs ultimate flexibility too: meaning, it can get out of the way and let the human do something else."
    },
    {
      "type": "markdown",
      "id": "91855a486d966884",
      "text": "**Common Ground:** shared context and mental models"
    },
    {
      "type": "paragraph",
      "id": "30177d7bc9417b1b",
      "text": "Common ground is essential and expensive. It is also mathematically impossible in the presence of uncertain message passing."
    },
    {
      "type": "paragraph",
      "id": "2a250e45d92c7500",
      "text": "Counterexample: a nurse opens a patient record and clicks through six “Alert!” dialogs to get to the screen she needs. When “these two medicines are dangerous when combined” is at the same level as “this room is out of bedsheets,” then too much information is no information."
    },
    {
      "type": "paragraph",
      "id": "ff4632d42a5e9b29",
      "text": "Stop pretending we can defeat complexity, and start balancing it. “Increased complexity can be balanced with increased feedback.” (Woods, Cook)"
    },
    {
      "type": "paragraph",
      "id": "3d793cd59a81afd4",
      "text": "Let’s rename \"error messages\" to \"help and guidance\" messages, and teach people how the system works."
    },
    {
      "type": "markdown",
      "id": "63cd885170935e86",
      "text": "**Ironies of Automation:**\nsmarter automation is harder to operate; exceptions are the rule; automating easy stuff makes hard stuff harder; less flexible party has more power \n"
    },
    {
      "type": "paragraph",
      "id": "7a1a0953f9b949d7",
      "text": "Your people won’t be cheaper -- they’ll be more valuable. Don’t train people to follow procedures; computers can do that. Training for procedure is like programming except way more expensive. Train for understanding, to help with problem solving."
    },
    {
      "type": "paragraph",
      "id": "2c9968b494c97164",
      "text": "When software is inflexible, it has all the power, and that is not what we want. So make the best path obvious and easy, but never mandatory."
    },
    {
      "type": "paragraph",
      "id": "1b7a014fe4f656ca",
      "text": "When we increase the flows of learning, we keep getting better. There is no done; Our system is never going to be perfect. Your coworkers are never perfect. Your automations are never perfect. So make them collaborative."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Collaborative Automation",
        "story": []
      },
      "date": 1557588888967
    },
    {
      "item": {
        "type": "factory",
        "id": "ab0e5783185a4d9d"
      },
      "id": "ab0e5783185a4d9d",
      "type": "add",
      "date": 1557588890787
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. [https:// article]"
      },
      "date": 1557589079218
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1557589091339
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1557589142990
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. Four prerequisites and four precautions. [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1557589391039
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "Jessica Kerr, aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1557589668669
    },
    {
      "item": {
        "type": "factory",
        "id": "0f60295f47914c32"
      },
      "id": "0f60295f47914c32",
      "type": "add",
      "after": "ab0e5783185a4d9d",
      "date": 1557589672704
    },
    {
      "type": "edit",
      "id": "0f60295f47914c32",
      "item": {
        "type": "paragraph",
        "id": "0f60295f47914c32",
        "text": "*There's a lot of overlap between jessitron's presentation and what I presented at my poster session in the New Relic Product Offsite*"
      },
      "date": 1557589718489
    },
    {
      "type": "edit",
      "id": "0f60295f47914c32",
      "item": {
        "type": "factory",
        "id": "0f60295f47914c32",
        "text": "_There's a lot of overlap between jessitron's presentation and what I presented at my poster session in the New Relic Product Offsite_"
      },
      "date": 1557589759840
    },
    {
      "type": "edit",
      "id": "0f60295f47914c32",
      "item": {
        "type": "markdown",
        "id": "0f60295f47914c32",
        "text": "_There's a lot of overlap between jessitron's presentation and what I presented at my poster session in the New Relic Product Offsite._"
      },
      "date": 1557589777304
    },
    {
      "item": {
        "type": "factory",
        "id": "c34d98b10c42ce65"
      },
      "id": "c34d98b10c42ce65",
      "type": "add",
      "after": "0f60295f47914c32",
      "date": 1557589892292
    },
    {
      "type": "edit",
      "id": "c34d98b10c42ce65",
      "item": {
        "type": "paragraph",
        "id": "c34d98b10c42ce65",
        "text": "Joint Activity: Basic Compact, Mutually Predictable, Mutually Directable, Common Ground"
      },
      "date": 1557589946778
    },
    {
      "type": "add",
      "id": "04373eb09eccb81e",
      "item": {
        "type": "paragraph",
        "id": "04373eb09eccb81e",
        "text": "Basic Compact"
      },
      "after": "c34d98b10c42ce65",
      "date": 1557589950307
    },
    {
      "type": "add",
      "id": "a5645263e6c8e0c3",
      "item": {
        "type": "paragraph",
        "id": "a5645263e6c8e0c3",
        "text": "Mutually Predictable"
      },
      "after": "04373eb09eccb81e",
      "date": 1557589955444
    },
    {
      "type": "add",
      "id": "aaed3769e0fe82f0",
      "item": {
        "type": "paragraph",
        "id": "aaed3769e0fe82f0",
        "text": "Mutually Directable"
      },
      "after": "a5645263e6c8e0c3",
      "date": 1557589961107
    },
    {
      "type": "add",
      "id": "91855a486d966884",
      "item": {
        "type": "paragraph",
        "id": "91855a486d966884",
        "text": "Common Ground"
      },
      "after": "aaed3769e0fe82f0",
      "date": 1557589963969
    },
    {
      "type": "add",
      "id": "63cd885170935e86",
      "item": {
        "type": "paragraph",
        "id": "63cd885170935e86",
        "text": "Ironies of Automation: smarter automation is harder to operate; exceptions are the rule; automating easy stuff makes hard stuff harder; less flexible party has more power "
      },
      "after": "91855a486d966884",
      "date": 1557590058535
    },
    {
      "type": "edit",
      "id": "0f60295f47914c32",
      "item": {
        "type": "markdown",
        "id": "0f60295f47914c32",
        "text": "_There's a lot of overlap between jessitron's presentation and what I presented at my poster session in the New Relic Product Offsite._\n"
      },
      "date": 1557596014452
    },
    {
      "type": "add",
      "id": "ad08aa215b2b550e",
      "item": {
        "type": "paragraph",
        "id": "ad08aa215b2b550e",
        "text": "We are part of a sociotechnical system. Code, running software, & tools are all on the team impacting lives with software. All of us learn and change every day."
      },
      "after": "0f60295f47914c32",
      "date": 1557596072662
    },
    {
      "type": "add",
      "id": "2970d33cab08536c",
      "item": {
        "type": "paragraph",
        "id": "2970d33cab08536c",
        "text": "A counterexample from aviation: there’s a story of a near miss of an airplane crash. There was a fuel leak, and the crew just happened to notice that the left fuel tank level was dropping while the engines were pulling from the right. They go look out the window, and ope! there goes the fuel! Then they observe that the rudder is way to the right, because the fuel levels threw the plane off balance, and the autopilot was just doing its business, compensating, compensating, turning more and more to the right, not telling anyone that it was near the edge of what it could do.\n\nThe lesson is: don't try harder! Talk to your team first."
      },
      "after": "04373eb09eccb81e",
      "date": 1557596128427
    },
    {
      "type": "edit",
      "id": "04373eb09eccb81e",
      "item": {
        "type": "paragraph",
        "id": "04373eb09eccb81e",
        "text": "Basic Compact: mutual purpose until further notice"
      },
      "date": 1557598720239
    },
    {
      "type": "edit",
      "id": "a5645263e6c8e0c3",
      "item": {
        "type": "paragraph",
        "id": "a5645263e6c8e0c3",
        "text": "Mutually Predictable: signal what you're doing and why."
      },
      "date": 1557598756643
    },
    {
      "type": "add",
      "id": "5361910bee4063f6",
      "item": {
        "type": "paragraph",
        "id": "5361910bee4063f6",
        "text": "In cars that have driver assist, there’s a thing that when you get too close to the car in front of you, it hits the brakes. Which is good -- unless you’re trying to pass that car. So you need to your turn signal. This tells the driver-assist that you’re about to change lanes, so it can choose not to brake. It can predict you, and act in cooperation."
      },
      "after": "a5645263e6c8e0c3",
      "date": 1557598908801
    },
    {
      "type": "edit",
      "id": "5361910bee4063f6",
      "item": {
        "type": "paragraph",
        "id": "5361910bee4063f6",
        "text": "In cars that have driver assist, there’s a thing that when you get too close to the car in front of you, it hits the brakes. Which is good -- unless you’re trying to pass that car. So you need to use your turn signal. This tells the driver-assist that you’re about to change lanes, so it can choose not to brake. It can predict you, and act in cooperation."
      },
      "date": 1557598930514
    },
    {
      "type": "edit",
      "id": "2970d33cab08536c",
      "item": {
        "type": "paragraph",
        "id": "2970d33cab08536c",
        "text": "A counterexample from aviation: there’s a story of a near miss of an airplane crash. There was a fuel leak, and the crew just happened to notice that the left fuel tank level was dropping while the engines were pulling from the right. They go look out the window, and ope! there goes the fuel! Then they observe that the rudder is way to the right, because the fuel levels threw the plane off balance, and the autopilot was just doing its business, compensating, compensating, turning more and more to the right, not telling anyone that it was near the edge of what it could do."
      },
      "date": 1557598962136
    },
    {
      "type": "add",
      "id": "f2f423efe6795aa6",
      "item": {
        "type": "paragraph",
        "id": "f2f423efe6795aa6",
        "text": "The lesson is: don't try harder! Talk to your team first."
      },
      "after": "2970d33cab08536c",
      "date": 1557598964255
    },
    {
      "type": "add",
      "id": "51901dfc479ecc42",
      "item": {
        "type": "paragraph",
        "id": "51901dfc479ecc42",
        "text": "The Basic Compact means, don’t swallow errors! Errors are data. Maybe don’t surface them to users, but get that information to the humans on the team. That’s how we learn."
      },
      "after": "f2f423efe6795aa6",
      "date": 1557598970735
    },
    {
      "type": "add",
      "id": "3ffd760c414ccaf0",
      "item": {
        "type": "paragraph",
        "id": "3ffd760c414ccaf0",
        "text": "Collaboration is not about being perfect. We work with each other within the team, so that the rest of the work can rely on the team."
      },
      "after": "51901dfc479ecc42",
      "date": 1557598972583
    },
    {
      "type": "edit",
      "id": "0f60295f47914c32",
      "item": {
        "type": "markdown",
        "id": "0f60295f47914c32",
        "text": "_jessitron's presentation clarifies a lot of background knowledge that surrounds what I presented at my poster session in the New Relic Product Offsite._\n"
      },
      "date": 1557599038375
    },
    {
      "type": "add",
      "id": "571bf738fbd2753d",
      "item": {
        "type": "paragraph",
        "id": "571bf738fbd2753d",
        "text": "In any machine learning software, I want it to report on what rules fired to trigger the result. The software needs to be accountable: able to explain why it acted as it did. That will let us reach mutual predictability."
      },
      "after": "5361910bee4063f6",
      "date": 1557599136883
    },
    {
      "type": "edit",
      "id": "aaed3769e0fe82f0",
      "item": {
        "type": "paragraph",
        "id": "aaed3769e0fe82f0",
        "text": "Mutually Directable: plans are resources, not law."
      },
      "date": 1557599214341
    },
    {
      "type": "add",
      "id": "7a2fa77015efff70",
      "item": {
        "type": "paragraph",
        "id": "7a2fa77015efff70",
        "text": "There’s a funny property of negotiations: the person with the least flexibility has more power. If you’re a vendor, and I’m buying software from you, and I’m a manager who can authorize up to $20k/year, then I have more power. You have more responsibility — you have a number to meet this quarter. If you don’t sell it to me for $20k, then maybe we’ll have another meeting next week... maybe. I have less flexibility, and therefore more power."
      },
      "after": "aaed3769e0fe82f0",
      "date": 1557599413828
    },
    {
      "type": "add",
      "id": "559cbf699215fb0b",
      "item": {
        "type": "paragraph",
        "id": "559cbf699215fb0b",
        "text": "When the “computer says NO”, the computer is in charge."
      },
      "after": "7a2fa77015efff70",
      "date": 1557599416935
    },
    {
      "type": "add",
      "id": "c043cfc600310293",
      "item": {
        "type": "paragraph",
        "id": "c043cfc600310293",
        "text": "Within our teams, keep the human in charge. Humans are maximally flexible, so that means the automation needs ultimate flexibility too: meaning, it can get out of the way and let the human do something else."
      },
      "after": "559cbf699215fb0b",
      "date": 1557599417859
    },
    {
      "type": "edit",
      "id": "91855a486d966884",
      "item": {
        "type": "paragraph",
        "id": "91855a486d966884",
        "text": "Common Ground: shared context and mental models"
      },
      "date": 1557599472619
    },
    {
      "type": "add",
      "id": "30177d7bc9417b1b",
      "item": {
        "type": "paragraph",
        "id": "30177d7bc9417b1b",
        "text": "Common ground is essential and expensive. It is also mathematically impossible in the presence of uncertain message passing."
      },
      "after": "91855a486d966884",
      "date": 1557599582936
    },
    {
      "type": "add",
      "id": "2a250e45d92c7500",
      "item": {
        "type": "paragraph",
        "id": "2a250e45d92c7500",
        "text": "Counterexample: a nurse opens a patient record and clicks through six “Alert!” dialogs to get to the screen she needs. When “these two medicines are dangerous when combined” is at the same level as “this room is out of bedsheets,” then too much information is no information."
      },
      "after": "30177d7bc9417b1b",
      "date": 1557599625174
    },
    {
      "type": "add",
      "id": "ff4632d42a5e9b29",
      "item": {
        "type": "paragraph",
        "id": "ff4632d42a5e9b29",
        "text": "Stop pretending we can defeat complexity, and start balancing it. “Increased complexity can be balanced with increased feedback.” (Woods, Cook)"
      },
      "after": "2a250e45d92c7500",
      "date": 1557599725743
    },
    {
      "type": "add",
      "id": "3d793cd59a81afd4",
      "item": {
        "type": "paragraph",
        "id": "3d793cd59a81afd4",
        "text": "Let’s rename \"error messages\" to \"help and guidance\" messages, and teach people how the system works."
      },
      "after": "ff4632d42a5e9b29",
      "date": 1557599842195
    },
    {
      "type": "edit",
      "id": "aaed3769e0fe82f0",
      "item": {
        "type": "paragraph",
        "id": "aaed3769e0fe82f0",
        "text": "Mutually Directable"
      },
      "date": 1557599909316
    },
    {
      "type": "edit",
      "id": "04373eb09eccb81e",
      "item": {
        "type": "markdown",
        "id": "04373eb09eccb81e",
        "text": "*Basic Compact:* mutual purpose until further notice"
      },
      "date": 1557599976462
    },
    {
      "type": "edit",
      "id": "04373eb09eccb81e",
      "item": {
        "type": "markdown",
        "id": "04373eb09eccb81e",
        "text": "**Basic Compact:** mutual purpose until further notice"
      },
      "date": 1557599982398
    },
    {
      "type": "edit",
      "id": "a5645263e6c8e0c3",
      "item": {
        "type": "markdown",
        "id": "a5645263e6c8e0c3",
        "text": "**Mutually Predictable:** signal what you're doing and why."
      },
      "date": 1557599996723
    },
    {
      "type": "edit",
      "id": "aaed3769e0fe82f0",
      "item": {
        "type": "markdown",
        "id": "aaed3769e0fe82f0",
        "text": "**Mutually Directable**"
      },
      "date": 1557600006673
    },
    {
      "type": "edit",
      "id": "91855a486d966884",
      "item": {
        "type": "factory",
        "id": "91855a486d966884",
        "text": "**Common Ground:** shared context and mental models"
      },
      "date": 1557600015923
    },
    {
      "type": "edit",
      "id": "c34d98b10c42ce65",
      "item": {
        "type": "markdown",
        "id": "c34d98b10c42ce65",
        "text": "**Joint Activity:**\nBasic Compact, Mutually Predictable, Mutually Directable, Common Ground"
      },
      "date": 1557600050821
    },
    {
      "type": "edit",
      "id": "63cd885170935e86",
      "item": {
        "type": "markdown",
        "id": "63cd885170935e86",
        "text": "**Ironies of Automation:**\nsmarter automation is harder to operate; exceptions are the rule; automating easy stuff makes hard stuff harder; less flexible party has more power "
      },
      "date": 1557600079356
    },
    {
      "type": "edit",
      "id": "63cd885170935e86",
      "item": {
        "type": "markdown",
        "id": "63cd885170935e86",
        "text": "**Ironies of Automation:**\nsmarter automation is harder to operate; exceptions are the rule; automating easy stuff makes hard stuff harder; less flexible party has more power \n"
      },
      "date": 1557600251116
    },
    {
      "type": "add",
      "id": "33ee57f080ae94ff",
      "item": {
        "type": "factory",
        "id": "33ee57f080ae94ff",
        "text": "Smarter automation is harder to operate"
      },
      "after": "63cd885170935e86",
      "date": 1557600280387
    },
    {
      "type": "add",
      "id": "7a1a0953f9b949d7",
      "item": {
        "type": "paragraph",
        "id": "7a1a0953f9b949d7",
        "text": "Your people won’t be cheaper -- they’ll be more valuable. Don’t train people to follow procedures; computers can do that. Training for procedure is like programming except way more expensive. Train for understanding, to help with problem solving."
      },
      "after": "33ee57f080ae94ff",
      "date": 1557600313834
    },
    {
      "type": "add",
      "id": "2c9968b494c97164",
      "item": {
        "type": "paragraph",
        "id": "2c9968b494c97164",
        "text": "When software is inflexible, it has all the power, and that is not what we want. So make the best path obvious and easy, but never mandatory."
      },
      "after": "7a1a0953f9b949d7",
      "date": 1557600421400
    },
    {
      "type": "remove",
      "id": "33ee57f080ae94ff",
      "date": 1557600424582
    },
    {
      "type": "add",
      "id": "1b7a014fe4f656ca",
      "item": {
        "type": "paragraph",
        "id": "1b7a014fe4f656ca",
        "text": "When we increase the flows of learning, we keep getting better. There is no done; Our system is never going to be perfect. Your coworkers are never perfect. Your automations are never perfect. So make them collaborative."
      },
      "after": "2c9968b494c97164",
      "date": 1557600477085
    },
    {
      "type": "edit",
      "id": "91855a486d966884",
      "item": {
        "type": "paragraph",
        "id": "91855a486d966884",
        "text": "**Common Ground:** shared context & mental models"
      },
      "date": 1557771721266
    },
    {
      "type": "edit",
      "id": "91855a486d966884",
      "item": {
        "type": "markdown",
        "id": "91855a486d966884",
        "text": "**Common Ground:** shared context and mental models"
      },
      "date": 1557771733583
    },
    {
      "type": "fork",
      "date": 1557772004234
    },
    {
      "type": "fork",
      "site": "wiki.dbbs.co",
      "date": 1616606331195
    },
    {
      "type": "fork",
      "site": "marc.tries.fed.wiki",
      "date": 1631769014898
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "[[Jessica Kerr]], aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of automation. We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "date": 1640731523604
    },
    {
      "type": "edit",
      "id": "ab0e5783185a4d9d",
      "item": {
        "type": "paragraph",
        "id": "ab0e5783185a4d9d",
        "text": "[[Jessica Kerr]], aka [https://twitter.com/jessitron @jessitron], explains how modern software teams must collaborate not only with each other, but with their own tools of [[Automation]]. "
      },
      "date": 1681923301412
    },
    {
      "type": "add",
      "id": "375696e34dc0615a",
      "item": {
        "type": "paragraph",
        "id": "375696e34dc0615a",
        "text": "We must build systems that are good team players. She introduces the line of representation. Presents Four prerequisites (the pillars of joint activity) and four precautions (ironies of automation). [https://https://blog.atomist.com/principles-of-collaborative-automation/ article]"
      },
      "after": "ab0e5783185a4d9d",
      "date": 1681923301804
    }
  ]
}