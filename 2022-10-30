{
  "title": "2022-10-30",
  "story": [
    {
      "type": "markdown",
      "id": "375f807c2eec8d5c",
      "text": "# Export Garden to Super Collaborator"
    },
    {
      "type": "reference",
      "id": "15c54c7206196d7f",
      "site": "thompson.reimage.fed.wiki",
      "slug": "garden-cultivating",
      "title": "Garden Cultivating",
      "text": "Story of 29 pages with 15351 words and 75 more links."
    },
    {
      "type": "code",
      "id": "d58802f159127cf4",
      "text": "http://ward.dojo.fed.wiki/assets/pages/story-telling/start-garden.html"
    },
    {
      "type": "markdown",
      "id": "14ec0afbf23fcd37",
      "text": "* Scraping HTML with XPath. [https://books.pharo.org/booklet-Scraping/html/scrapingbook.html page]\n> I came with the idea of this booklet thank to Peter that kindly answered a question on the Pharo mailing-list. To help Peter showed to a Pharoer how to scrap the web site mentioned in Chapter 2 using XPath. In addition, some years ago I was maintaining Soup a scraping framework because I want to write an application to manage my magic cards. Since then I always wanted to try XPath and in addition I wanted to offer this booklet to Peter. Why because I asked Peter if he would like to write something and he told that he was at a great age where he would not take any commitment. I realised that I would like to get as old as him and be able to hack like a mad in Pharo with new technology. So this booklet is a gift to Peter, a great and gentle Pharoer. I would like to thank Monty the developer of the XML package suite for its great implementation and the feedback on this booklet. Stef "
    },
    {
      "type": "code",
      "id": "0e2e375dee053fe9",
      "text": "<script type=module>\n  import * as frame from 'http://code.fed.wiki/assets/v1/frame.js'\n  import * as tell from './telling.js'\n  import {Graph} from 'http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/graph.js'\n  const wordcount = story => story.reduce((sum,item) => sum + (item.text||'').split(/\\s+/).length, 0)\n  const uniq = (value, index, self) => self.indexOf(value) === index\n"
    },
    {
      "type": "paragraph",
      "id": "87c0a36fdc476c76",
      "text": "/home/rgb/.wiki/127.0.0.1/assets/v1"
    },
    {
      "type": "code",
      "id": "f62590281bf4166c",
      "text": "[rgb@wiki:~/.wiki/127.0.0.1/assets/v1]$ diff frame.js <(curl http://code.fed.wiki/assets/v1/frame.js)\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3469  100  3469    0     0   6001      0 --:--:-- --:--:-- --:--:--  6012"
    },
    {
      "type": "paragraph",
      "id": "27879cfe21314474",
      "text": "~/.wiki/127.0.0.1/assets/pages/mock-graph-data"
    },
    {
      "type": "paragraph",
      "id": "51cfb49124ae2724",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "fbbcff292bbeae30",
      "text": "New `<script type=module>`:"
    },
    {
      "type": "code",
      "id": "0e9f973099f9ab02",
      "text": "<script type=module>\n  import * as frame from 'https://wiki.ralfbarkow.ch/assets/v1/frame.js'\n  import * as tell from './telling.js'\n  import {Graph} from 'https://wiki.ralfbarkow.ch/assets/pages/mock-graph-data/graph.js'\n  const wordcount = story => story.reduce((sum,item) => sum + (item.text||'').split(/\\s+/).length, 0)\n  const uniq = (value, index, self) => self.indexOf(value) === index\n"
    },
    {
      "type": "markdown",
      "id": "91370032b7ab85b0",
      "text": "Now we can use the `export preview` and `start garden` buttons."
    },
    {
      "type": "markdown",
      "id": "08c8b575071907a9",
      "text": "fix: `Garden Preview.json`"
    },
    {
      "type": "code",
      "id": "a31aaaa5284cd69b",
      "text": "@@ -156,7 +194,7 @@\n     }\n\n     const jsons = beam.map(item => JSON.stringify(item))\n-    frame.download(jsons.join(\"\\n\"),'Garden Preview.jsonl','application/json')\n+    frame.download(jsons.join(\"\\n\"),'Garden Preview.json','application/json')\n   }\n\n </script>"
    },
    {
      "type": "pagefold",
      "id": "08b14c1a01ff28d5",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "e122d5825da4bdf9",
      "text": "Sample JSON project files. [https://www.dita-ot.org/dev/topics/project-files-yaml.html page]"
    },
    {
      "type": "paragraph",
      "id": "2b0ca7db8e07b76b",
      "text": "[[DITA Open Toolkit]]"
    },
    {
      "type": "pagefold",
      "id": "4e4e4d93f2029da1",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "558423acb7689337",
      "text": "\nSANDBERG, D. W., 1988. Smalltalk and exploratory programming. ACM SIGPLAN Notices. 1 October 1988. Vol. 23, no. 10, p. 85–92. DOI 10.1145/51607.51614. "
    },
    {
      "type": "markdown",
      "id": "ab7e31fd8a8f2f67",
      "text": "> Using Smalltalk-80, programmers can produce prototypes much faster than with C or Pascal. What techniques do Smalltalk-80 programmers use to produce these prototypes? What is special about Smalltalk-80 that enables them to uses these techniques? Can these techniques be used with conventional languages such as C? In an attempt to answer these questions we interviewed experienced Smalltalk programmers and asked how they approach programming in Smalltalk. Such introspective interviews that are conducted after completion of a project are known to be somewhat unreliable, but not enough is known to use any other methodology. What follows is a summary of the interviews, followed by an explanation of the results. Finally we discuss some of the weaknesses of Smalltalk and some possible solutions.\n"
    },
    {
      "type": "pagefold",
      "id": "817f616610d04381",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "2e5d005aacecf79c",
      "site": "david.reimage.fed.wiki",
      "slug": "self-confidence-stymied",
      "title": "Self-confidence Stymied",
      "text": "There is another thread to my schooling story that also reduced my confidence. The transition from a small primary school where I knew many of the students as friends, to what was at the time the largest secondary school in Queensland, was difficult."
    },
    {
      "type": "reference",
      "id": "eb1f518cfd5930e3",
      "site": "wiki.dbbs.co",
      "slug": "rhythm-autonomy-mastery-purpose-safety",
      "title": "Rhythm Autonomy Mastery Purpose Safety",
      "text": "Michael D. Hill introduces RAMPS as a motivation model: Rhythm, Autonomy, Mastery, Purpose, Safety. Michael even goes deep on Mastery as Motivator: The M of RAMPS. Next, Ron Jeffries sings harmony. [https://twitter.com/geepawhill @GeePawHill] [http://aardrock.com/ramps/ post]  [https://www.geepawhill.org/2017/09/05/a-sense-of-urgency-ramps-as-a-motivation-model/ site]"
    },
    {
      "type": "pagefold",
      "id": "78637f02dd9976b5",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "c4596d15d1f3605d",
      "text": "\nBOEHM, Omri, 2022. Radikaler Universalismus: jenseits von Identität. . Berlin: Propyläen. ISBN 978-3-549-10041-7. \n"
    },
    {
      "type": "markdown",
      "id": "eabf4bc771f8130e",
      "text": "⇒  [[A School Model from Another Time]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "2022-10-30",
        "story": []
      },
      "date": 1667120534478
    },
    {
      "item": {
        "type": "factory",
        "id": "15c54c7206196d7f"
      },
      "id": "15c54c7206196d7f",
      "type": "add",
      "date": 1667120564518
    },
    {
      "type": "edit",
      "id": "15c54c7206196d7f",
      "item": {
        "type": "reference",
        "id": "15c54c7206196d7f",
        "site": "thompson.reimage.fed.wiki",
        "slug": "garden-cultivating",
        "title": "Garden Cultivating",
        "text": "Story of 29 pages with 15351 words and 75 more links."
      },
      "date": 1667120568707
    },
    {
      "item": {
        "type": "factory",
        "id": "d58802f159127cf4"
      },
      "id": "d58802f159127cf4",
      "type": "add",
      "after": "15c54c7206196d7f",
      "date": 1667120579782
    },
    {
      "type": "edit",
      "id": "d58802f159127cf4",
      "item": {
        "type": "code",
        "id": "d58802f159127cf4",
        "text": "http://ward.dojo.fed.wiki/assets/pages/story-telling/start-garden.html"
      },
      "date": 1667120583547
    },
    {
      "item": {
        "type": "factory",
        "id": "14ec0afbf23fcd37"
      },
      "id": "14ec0afbf23fcd37",
      "type": "add",
      "after": "d58802f159127cf4",
      "date": 1667120646142
    },
    {
      "type": "edit",
      "id": "14ec0afbf23fcd37",
      "item": {
        "type": "markdown",
        "id": "14ec0afbf23fcd37",
        "text": "* Scraping HTML with XPath."
      },
      "date": 1667120656996
    },
    {
      "type": "edit",
      "id": "14ec0afbf23fcd37",
      "item": {
        "type": "markdown",
        "id": "14ec0afbf23fcd37",
        "text": "* Scraping HTML with XPath. [https://books.pharo.org/booklet-Scraping/html/scrapingbook.html page]"
      },
      "date": 1667120695981
    },
    {
      "item": {
        "type": "factory",
        "id": "0e2e375dee053fe9"
      },
      "id": "0e2e375dee053fe9",
      "type": "add",
      "after": "14ec0afbf23fcd37",
      "date": 1667121342597
    },
    {
      "type": "edit",
      "id": "0e2e375dee053fe9",
      "item": {
        "type": "code",
        "id": "0e2e375dee053fe9",
        "text": "<script type=module>\n  import * as frame from 'http://code.fed.wiki/assets/v1/frame.js'\n  import * as tell from './telling.js'\n  import {Graph} from 'http://ward.dojo.fed.wiki/assets/pages/mock-graph-data/graph.js'\n  const wordcount = story => story.reduce((sum,item) => sum + (item.text||'').split(/\\s+/).length, 0)\n  const uniq = (value, index, self) => self.indexOf(value) === index\n"
      },
      "date": 1667121345742
    },
    {
      "item": {
        "type": "factory",
        "id": "87c0a36fdc476c76"
      },
      "id": "87c0a36fdc476c76",
      "type": "add",
      "after": "0e2e375dee053fe9",
      "date": 1667121425422
    },
    {
      "type": "edit",
      "id": "87c0a36fdc476c76",
      "item": {
        "type": "paragraph",
        "id": "87c0a36fdc476c76",
        "text": "/home/rgb/.wiki/127.0.0.1/assets/v1"
      },
      "date": 1667121428411
    },
    {
      "item": {
        "type": "factory",
        "id": "f62590281bf4166c"
      },
      "id": "f62590281bf4166c",
      "type": "add",
      "after": "87c0a36fdc476c76",
      "date": 1667121510682
    },
    {
      "type": "edit",
      "id": "f62590281bf4166c",
      "item": {
        "type": "code",
        "id": "f62590281bf4166c",
        "text": "[rgb@wiki:~/.wiki/127.0.0.1/assets/v1]$ diff frame.js <(curl http://code.fed.wiki/assets/v1/frame.js)\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  3469  100  3469    0     0   6001      0 --:--:-- --:--:-- --:--:--  6012"
      },
      "date": 1667121512778
    },
    {
      "item": {
        "type": "factory",
        "id": "51cfb49124ae2724"
      },
      "id": "51cfb49124ae2724",
      "type": "add",
      "after": "f62590281bf4166c",
      "date": 1667121631465
    },
    {
      "item": {
        "type": "factory",
        "id": "27879cfe21314474"
      },
      "id": "27879cfe21314474",
      "type": "add",
      "after": "51cfb49124ae2724",
      "date": 1667121649362
    },
    {
      "type": "edit",
      "id": "27879cfe21314474",
      "item": {
        "type": "paragraph",
        "id": "27879cfe21314474",
        "text": "~/.wiki/127.0.0.1/assets/pages/mock-graph-data"
      },
      "date": 1667121651158
    },
    {
      "id": "27879cfe21314474",
      "type": "move",
      "order": [
        "15c54c7206196d7f",
        "d58802f159127cf4",
        "14ec0afbf23fcd37",
        "0e2e375dee053fe9",
        "87c0a36fdc476c76",
        "f62590281bf4166c",
        "27879cfe21314474",
        "51cfb49124ae2724"
      ],
      "date": 1667121652798
    },
    {
      "item": {
        "type": "factory",
        "id": "fbbcff292bbeae30"
      },
      "id": "fbbcff292bbeae30",
      "type": "add",
      "after": "51cfb49124ae2724",
      "date": 1667121855043
    },
    {
      "type": "edit",
      "id": "fbbcff292bbeae30",
      "item": {
        "type": "paragraph",
        "id": "fbbcff292bbeae30",
        "text": "New <script typeO"
      },
      "date": 1667121866363
    },
    {
      "type": "edit",
      "id": "fbbcff292bbeae30",
      "item": {
        "type": "paragraph",
        "id": "fbbcff292bbeae30",
        "text": "New <script type=module>:"
      },
      "date": 1667121874465
    },
    {
      "type": "edit",
      "id": "fbbcff292bbeae30",
      "item": {
        "type": "paragraph",
        "id": "fbbcff292bbeae30",
        "text": "New `<script type=module>`:"
      },
      "date": 1667121892238
    },
    {
      "type": "edit",
      "id": "fbbcff292bbeae30",
      "item": {
        "type": "markdown",
        "id": "fbbcff292bbeae30",
        "text": "New `<script type=module>`:"
      },
      "date": 1667121894222
    },
    {
      "item": {
        "type": "factory",
        "id": "0e9f973099f9ab02"
      },
      "id": "0e9f973099f9ab02",
      "type": "add",
      "after": "fbbcff292bbeae30",
      "date": 1667121895738
    },
    {
      "type": "edit",
      "id": "0e9f973099f9ab02",
      "item": {
        "type": "code",
        "id": "0e9f973099f9ab02",
        "text": "<script type=module>\n  import * as frame from 'https://wiki.ralfbarkow.ch/assets/v1/frame.js'\n  import * as tell from './telling.js'\n  import {Graph} from 'https://wiki.ralfbarkow.ch/assets/pages/mock-graph-data/graph.js'\n  const wordcount = story => story.reduce((sum,item) => sum + (item.text||'').split(/\\s+/).length, 0)\n  const uniq = (value, index, self) => self.indexOf(value) === index\n"
      },
      "date": 1667121898182
    },
    {
      "item": {
        "type": "factory",
        "id": "094547bbf832c89b"
      },
      "id": "094547bbf832c89b",
      "type": "add",
      "after": "0e9f973099f9ab02",
      "date": 1667123054566
    },
    {
      "type": "remove",
      "id": "094547bbf832c89b",
      "date": 1667123087051
    },
    {
      "type": "edit",
      "id": "094547bbf832c89b",
      "item": {
        "type": "paragraph",
        "id": "094547bbf832c89b",
        "text": "Now we can use the `export preview` and `start garden` buttons."
      },
      "date": 1667123103922
    },
    {
      "type": "edit",
      "id": "094547bbf832c89b",
      "item": {
        "type": "markdown",
        "id": "094547bbf832c89b",
        "text": "Now we can use the `export preview` and `start garden` buttons."
      },
      "date": 1667123107246
    },
    {
      "item": {
        "type": "factory",
        "id": "6a1c1f68d5020fe4"
      },
      "id": "6a1c1f68d5020fe4",
      "type": "add",
      "after": "094547bbf832c89b",
      "date": 1667123314622
    },
    {
      "type": "edit",
      "id": "6a1c1f68d5020fe4",
      "item": {
        "type": "code",
        "id": "6a1c1f68d5020fe4",
        "text": "@@ -156,7 +194,7 @@\n     }\n\n     const jsons = beam.map(item => JSON.stringify(item))\n-    frame.download(jsons.join(\"\\n\"),'Garden Preview.jsonl','application/json')\n+    frame.download(jsons.join(\"\\n\"),'Garden Preview.json','application/json')\n   }\n\n </script>"
      },
      "date": 1667123317156
    },
    {
      "item": {
        "type": "factory",
        "id": "375f807c2eec8d5c"
      },
      "id": "375f807c2eec8d5c",
      "type": "add",
      "after": "0e9f973099f9ab02",
      "date": 1667123584996
    },
    {
      "id": "375f807c2eec8d5c",
      "type": "move",
      "order": [
        "375f807c2eec8d5c",
        "15c54c7206196d7f",
        "d58802f159127cf4",
        "14ec0afbf23fcd37",
        "0e2e375dee053fe9",
        "87c0a36fdc476c76",
        "f62590281bf4166c",
        "27879cfe21314474",
        "51cfb49124ae2724",
        "fbbcff292bbeae30",
        "0e9f973099f9ab02"
      ],
      "date": 1667123592862
    },
    {
      "type": "edit",
      "id": "375f807c2eec8d5c",
      "item": {
        "type": "markdown",
        "id": "375f807c2eec8d5c",
        "text": "# Export Garden to Super Collaborator"
      },
      "date": 1667123597054
    },
    {
      "type": "edit",
      "id": "51cfb49124ae2724",
      "item": {
        "type": "paragraph",
        "id": "51cfb49124ae2724",
        "text": "[…]"
      },
      "date": 1667123639693
    },
    {
      "item": {
        "type": "factory",
        "id": "91370032b7ab85b0"
      },
      "id": "91370032b7ab85b0",
      "type": "add",
      "after": "0e9f973099f9ab02",
      "date": 1667123806267
    },
    {
      "type": "edit",
      "id": "91370032b7ab85b0",
      "item": {
        "type": "paragraph",
        "id": "91370032b7ab85b0",
        "text": "Now we can use the `export preview` and `start garden` buttons."
      },
      "date": 1667123829554
    },
    {
      "type": "edit",
      "id": "91370032b7ab85b0",
      "item": {
        "type": "markdown",
        "id": "91370032b7ab85b0",
        "text": "Now we can use the `export preview` and `start garden` buttons."
      },
      "date": 1667123831015
    },
    {
      "item": {
        "type": "factory",
        "id": "a31aaaa5284cd69b"
      },
      "id": "a31aaaa5284cd69b",
      "type": "add",
      "after": "91370032b7ab85b0",
      "date": 1667123849331
    },
    {
      "type": "edit",
      "id": "a31aaaa5284cd69b",
      "item": {
        "type": "code",
        "id": "a31aaaa5284cd69b",
        "text": "@@ -156,7 +194,7 @@\n     }\n\n     const jsons = beam.map(item => JSON.stringify(item))\n-    frame.download(jsons.join(\"\\n\"),'Garden Preview.jsonl','application/json')\n+    frame.download(jsons.join(\"\\n\"),'Garden Preview.json','application/json')\n   }\n\n </script>"
      },
      "date": 1667123852242
    },
    {
      "item": {
        "type": "factory",
        "id": "08c8b575071907a9"
      },
      "id": "08c8b575071907a9",
      "type": "add",
      "after": "a31aaaa5284cd69b",
      "date": 1667123865665
    },
    {
      "type": "edit",
      "id": "08c8b575071907a9",
      "item": {
        "type": "paragraph",
        "id": "08c8b575071907a9",
        "text": "fix: Garden Preview.json"
      },
      "date": 1667123869543
    },
    {
      "id": "08c8b575071907a9",
      "type": "move",
      "order": [
        "375f807c2eec8d5c",
        "15c54c7206196d7f",
        "d58802f159127cf4",
        "14ec0afbf23fcd37",
        "0e2e375dee053fe9",
        "87c0a36fdc476c76",
        "f62590281bf4166c",
        "27879cfe21314474",
        "51cfb49124ae2724",
        "fbbcff292bbeae30",
        "0e9f973099f9ab02",
        "91370032b7ab85b0",
        "08c8b575071907a9",
        "a31aaaa5284cd69b"
      ],
      "date": 1667123871470
    },
    {
      "item": {
        "type": "factory",
        "id": "08b14c1a01ff28d5"
      },
      "id": "08b14c1a01ff28d5",
      "type": "add",
      "after": "a31aaaa5284cd69b",
      "date": 1667124023555
    },
    {
      "type": "edit",
      "id": "08b14c1a01ff28d5",
      "item": {
        "type": "pagefold",
        "id": "08b14c1a01ff28d5",
        "text": "~"
      },
      "date": 1667124027832
    },
    {
      "item": {
        "type": "factory",
        "id": "e122d5825da4bdf9"
      },
      "id": "e122d5825da4bdf9",
      "type": "add",
      "after": "08b14c1a01ff28d5",
      "date": 1667124031833
    },
    {
      "type": "edit",
      "id": "e122d5825da4bdf9",
      "item": {
        "type": "paragraph",
        "id": "e122d5825da4bdf9",
        "text": "Sample JSON project files"
      },
      "date": 1667124036893
    },
    {
      "item": {
        "type": "factory",
        "id": "4e4e4d93f2029da1"
      },
      "id": "4e4e4d93f2029da1",
      "type": "add",
      "after": "e122d5825da4bdf9",
      "date": 1667124996821
    },
    {
      "type": "edit",
      "id": "4e4e4d93f2029da1",
      "item": {
        "type": "pagefold",
        "id": "4e4e4d93f2029da1",
        "text": "~"
      },
      "date": 1667125001036
    },
    {
      "item": {
        "type": "factory",
        "id": "558423acb7689337"
      },
      "id": "558423acb7689337",
      "type": "add",
      "after": "4e4e4d93f2029da1",
      "date": 1667125002735
    },
    {
      "type": "edit",
      "id": "558423acb7689337",
      "item": {
        "type": "paragraph",
        "id": "558423acb7689337",
        "text": "\nSANDBERG, D. W., 1988. Smalltalk and exploratory programming. ACM SIGPLAN Notices. 1 October 1988. Vol. 23, no. 10, p. 85–92. DOI 10.1145/51607.51614. "
      },
      "date": 1667125012705
    },
    {
      "type": "add",
      "id": "ab7e31fd8a8f2f67",
      "item": {
        "type": "paragraph",
        "id": "ab7e31fd8a8f2f67",
        "text": "> Using Smalltalk-80, programmers can produce prototypes much faster than with C or Pascal. What techniques do Smalltalk-80 programmers use to produce these prototypes? What is special about Smalltalk-80 that enables them to uses these techniques? Can these techniques be used with conventional languages such as C? In an attempt to answer these questions we interviewed experienced Smalltalk programmers and asked how they approach programming in Smalltalk. Such introspective interviews that are conducted after completion of a project are known to be somewhat unreliable, but not enough is known to use any other methodology. What follows is a summary of the interviews, followed by an explanation of the results. Finally we discuss some of the weaknesses of Smalltalk and some possible solutions.\n"
      },
      "after": "558423acb7689337",
      "date": 1667125013548
    },
    {
      "type": "edit",
      "id": "ab7e31fd8a8f2f67",
      "item": {
        "type": "markdown",
        "id": "ab7e31fd8a8f2f67",
        "text": "> Using Smalltalk-80, programmers can produce prototypes much faster than with C or Pascal. What techniques do Smalltalk-80 programmers use to produce these prototypes? What is special about Smalltalk-80 that enables them to uses these techniques? Can these techniques be used with conventional languages such as C? In an attempt to answer these questions we interviewed experienced Smalltalk programmers and asked how they approach programming in Smalltalk. Such introspective interviews that are conducted after completion of a project are known to be somewhat unreliable, but not enough is known to use any other methodology. What follows is a summary of the interviews, followed by an explanation of the results. Finally we discuss some of the weaknesses of Smalltalk and some possible solutions.\n"
      },
      "date": 1667125014882
    },
    {
      "type": "edit",
      "id": "e122d5825da4bdf9",
      "item": {
        "type": "paragraph",
        "id": "e122d5825da4bdf9",
        "text": "Sample JSON project files [https://www.dita-ot.org/dev/topics/project-files-yaml.html page]"
      },
      "date": 1667125031188
    },
    {
      "item": {
        "type": "factory",
        "id": "878f78cb4df39f71"
      },
      "id": "878f78cb4df39f71",
      "type": "add",
      "after": "ab7e31fd8a8f2f67",
      "date": 1667125054471
    },
    {
      "type": "remove",
      "id": "878f78cb4df39f71",
      "date": 1667125083361
    },
    {
      "type": "edit",
      "id": "14ec0afbf23fcd37",
      "item": {
        "type": "markdown",
        "id": "14ec0afbf23fcd37",
        "text": "* Scraping HTML with XPath. [https://books.pharo.org/booklet-Scraping/html/scrapingbook.html page]\n> I came with the idea of this booklet thank to Peter that kindly answered a question on the Pharo mailing-list. To help Peter showed to a Pharoer how to scrap the web site mentioned in Chapter 2 using XPath. In addition, some years ago I was maintaining Soup a scraping framework because I want to write an application to manage my magic cards. Since then I always wanted to try XPath and in addition I wanted to offer this booklet to Peter. Why because I asked Peter if he would like to write something and he told that he was at a great age where he would not take any commitment. I realised that I would like to get as old as him and be able to hack like a mad in Pharo with new technology. So this booklet is a gift to Peter, a great and gentle Pharoer. I would like to thank Monty the developer of the XML package suite for its great implementation and the feedback on this booklet. Stef "
      },
      "date": 1667125124582
    },
    {
      "type": "edit",
      "id": "08c8b575071907a9",
      "item": {
        "type": "paragraph",
        "id": "08c8b575071907a9",
        "text": "fix: `Garden Preview.json`"
      },
      "date": 1667125194110
    },
    {
      "type": "edit",
      "id": "08c8b575071907a9",
      "item": {
        "type": "markdown",
        "id": "08c8b575071907a9",
        "text": "fix: `Garden Preview.json`"
      },
      "date": 1667125196685
    },
    {
      "item": {
        "type": "factory",
        "id": "2e5d005aacecf79c"
      },
      "id": "2e5d005aacecf79c",
      "type": "add",
      "after": "ab7e31fd8a8f2f67",
      "date": 1667125230454
    },
    {
      "type": "edit",
      "id": "2e5d005aacecf79c",
      "item": {
        "type": "reference",
        "id": "2e5d005aacecf79c",
        "site": "david.reimage.fed.wiki",
        "slug": "self-confidence-stymied",
        "title": "Self-confidence Stymied",
        "text": "There is another thread to my schooling story that also reduced my confidence. The transition from a small primary school where I knew many of the students as friends, to what was at the time the largest secondary school in Queensland, was difficult."
      },
      "date": 1667125233912
    },
    {
      "item": {
        "type": "factory",
        "id": "eb1f518cfd5930e3"
      },
      "id": "eb1f518cfd5930e3",
      "type": "add",
      "after": "2e5d005aacecf79c",
      "date": 1667125311344
    },
    {
      "type": "edit",
      "id": "eb1f518cfd5930e3",
      "item": {
        "type": "reference",
        "id": "eb1f518cfd5930e3",
        "site": "wiki.dbbs.co",
        "slug": "rhythm-autonomy-mastery-purpose-safety",
        "title": "Rhythm Autonomy Mastery Purpose Safety",
        "text": "Michael D. Hill introduces RAMPS as a motivation model: Rhythm, Autonomy, Mastery, Purpose, Safety. Michael even goes deep on Mastery as Motivator: The M of RAMPS. Next, Ron Jeffries sings harmony. [https://twitter.com/geepawhill @GeePawHill] [http://aardrock.com/ramps/ post]  [https://www.geepawhill.org/2017/09/05/a-sense-of-urgency-ramps-as-a-motivation-model/ site]"
      },
      "date": 1667125342828
    },
    {
      "item": {
        "type": "factory",
        "id": "738a777b345d62b9"
      },
      "id": "738a777b345d62b9",
      "type": "add",
      "after": "eb1f518cfd5930e3",
      "date": 1667125352305
    },
    {
      "type": "remove",
      "id": "738a777b345d62b9",
      "date": 1667125381998
    },
    {
      "type": "edit",
      "id": "e122d5825da4bdf9",
      "item": {
        "type": "paragraph",
        "id": "e122d5825da4bdf9",
        "text": "Sample JSON project files. [https://www.dita-ot.org/dev/topics/project-files-yaml.html page]"
      },
      "date": 1667125921702
    },
    {
      "type": "add",
      "id": "2b0ca7db8e07b76b",
      "item": {
        "type": "paragraph",
        "id": "2b0ca7db8e07b76b",
        "text": "[[DITA Open Toolkit]]"
      },
      "after": "e122d5825da4bdf9",
      "date": 1667126077047
    },
    {
      "item": {
        "type": "factory",
        "id": "817f616610d04381"
      },
      "id": "817f616610d04381",
      "type": "add",
      "after": "eb1f518cfd5930e3",
      "date": 1667127619507
    },
    {
      "type": "edit",
      "id": "817f616610d04381",
      "item": {
        "type": "pagefold",
        "id": "817f616610d04381",
        "text": "~"
      },
      "date": 1667127623766
    },
    {
      "id": "817f616610d04381",
      "type": "move",
      "order": [
        "375f807c2eec8d5c",
        "15c54c7206196d7f",
        "d58802f159127cf4",
        "14ec0afbf23fcd37",
        "0e2e375dee053fe9",
        "87c0a36fdc476c76",
        "f62590281bf4166c",
        "27879cfe21314474",
        "51cfb49124ae2724",
        "fbbcff292bbeae30",
        "0e9f973099f9ab02",
        "91370032b7ab85b0",
        "08c8b575071907a9",
        "a31aaaa5284cd69b",
        "08b14c1a01ff28d5",
        "e122d5825da4bdf9",
        "2b0ca7db8e07b76b",
        "4e4e4d93f2029da1",
        "558423acb7689337",
        "ab7e31fd8a8f2f67",
        "817f616610d04381",
        "2e5d005aacecf79c",
        "eb1f518cfd5930e3"
      ],
      "date": 1667127628049
    },
    {
      "item": {
        "type": "factory",
        "id": "78637f02dd9976b5"
      },
      "id": "78637f02dd9976b5",
      "type": "add",
      "after": "eb1f518cfd5930e3",
      "date": 1667127629539
    },
    {
      "type": "edit",
      "id": "78637f02dd9976b5",
      "item": {
        "type": "pagefold",
        "id": "78637f02dd9976b5",
        "text": "~"
      },
      "date": 1667127633317
    },
    {
      "item": {
        "type": "factory",
        "id": "c4596d15d1f3605d"
      },
      "id": "c4596d15d1f3605d",
      "type": "add",
      "after": "78637f02dd9976b5",
      "date": 1667127639142
    },
    {
      "type": "edit",
      "id": "c4596d15d1f3605d",
      "item": {
        "type": "paragraph",
        "id": "c4596d15d1f3605d",
        "text": "\nBOEHM, Omri, 2022. Radikaler Universalismus: jenseits von Identität. . Berlin: Propyläen. ISBN 978-3-549-10041-7. \n"
      },
      "date": 1667127646590
    },
    {
      "item": {
        "type": "factory",
        "id": "6178e744e3fdcda5"
      },
      "id": "6178e744e3fdcda5",
      "type": "add",
      "after": "c4596d15d1f3605d",
      "date": 1667149184714
    },
    {
      "type": "edit",
      "id": "6178e744e3fdcda5",
      "item": {
        "type": "paragraph",
        "id": "6178e744e3fdcda5",
        "text": "\nDIXSON-DECLÈVE, Sandrine, GAFFNEY, Owen, GHOSH, Jayati, RANDERS, Jørgen, ROCKSTRÖM, Johan and STOKNES, Per Espen, 2022. "
      },
      "date": 1667149195643
    },
    {
      "type": "add",
      "id": "a5e32733030850ec",
      "item": {
        "type": "paragraph",
        "id": "a5e32733030850ec",
        "text": "> Earth for all: ein Survivalguide für unseren Planeten: der neue Bericht an den Club of Rome, 50 Jahre nach “Die Grenzen des Wachstums.” . 3. Auflage. München: oekom. ISBN 978-3-96238-387-9. \n"
      },
      "after": "6178e744e3fdcda5",
      "date": 1667149196294
    },
    {
      "type": "edit",
      "id": "a5e32733030850ec",
      "item": {
        "type": "markdown",
        "id": "a5e32733030850ec",
        "text": "> Earth for all: ein Survivalguide für unseren Planeten: der neue Bericht an den Club of Rome, 50 Jahre nach “Die Grenzen des Wachstums.” . 3. Auflage. München: oekom. ISBN 978-3-96238-387-9. \n"
      },
      "date": 1667149197521
    },
    {
      "type": "remove",
      "id": "a5e32733030850ec",
      "date": 1667149231681
    },
    {
      "type": "edit",
      "id": "6178e744e3fdcda5",
      "item": {
        "type": "paragraph",
        "id": "6178e744e3fdcda5",
        "text": "DIXSON-DECLÈVE, Sandrine, GAFFNEY, Owen, GHOSH, Jayati, RANDERS, Jørgen, ROCKSTRÖM, Johan and STOKNES, Per Espen, 2022. Earth for all: ein Survivalguide für unseren Planeten: der neue Bericht an den Club of Rome, 50 Jahre nach “Die Grenzen des Wachstums.” . 3. Auflage. München: oekom. ISBN 978-3-96238-387-9. \n"
      },
      "date": 1667149249032
    },
    {
      "item": {
        "type": "factory",
        "id": "eabf4bc771f8130e"
      },
      "id": "eabf4bc771f8130e",
      "type": "add",
      "after": "6178e744e3fdcda5",
      "date": 1667149967767
    },
    {
      "type": "edit",
      "id": "eabf4bc771f8130e",
      "item": {
        "type": "paragraph",
        "id": "eabf4bc771f8130e",
        "text": "A school model from another time\nIt seems paradoxical to want to implement empowerment of girls and women in a school system that would fit into 19th century patriarchal France. In the current school model, children are still and repeatedly held for standardized periods of about an hour so that they can be presented with things to memorize, often without explaining why. Exams usually focus on recapitulating what has been heard. Often what is learned is more part of a rite of passage and quickly forgotten. Beyond writing and arithmetic, the real learning takes place in the social interaction of students and in the difficult process of growing up. In many rural regions, school attendance in itself, the presence of a competent teacher and functioning toilets is an achievement.\nEverything else is a beautiful dream there. The clearly structured hierarchical school system, which often leads to a higher level of education, makes something truly invaluable possible: social mobility. Because with social mobility comes the hope of a better life, not only for the graduates but also for their families. But just because you can climb that ladder, and because many classrooms now have whiteboards and computers instead of chalkboards, doesn't mean you get a better education. If the five turnarounds show us anything, it's this: Much of our current problems stem from 19th-century reductionist and linear-causal thinking, according to which the world is a machine that can be broken down into its component parts and understood.\nThe revision of the educational system should be based on two pillars: Critical thinking and complex systems thinking. Because the most significant challenge of our days is not the\n Translated with www.DeepL.com/Translator (free version)"
      },
      "date": 1667149982237
    },
    {
      "type": "edit",
      "id": "eabf4bc771f8130e",
      "item": {
        "type": "paragraph",
        "id": "eabf4bc771f8130e",
        "text": "# A School Model from Another Time"
      },
      "date": 1667150012713
    },
    {
      "type": "add",
      "id": "018d981f88634ebe",
      "item": {
        "type": "paragraph",
        "id": "018d981f88634ebe",
        "text": "It seems paradoxical to want to implement empowerment of girls and women in a school system that would fit into 19th century patriarchal France. In the current school model, children are still and repeatedly held for standardized periods of about an hour so that they can be presented with things to memorize, often without explaining why. Exams usually focus on recapitulating what has been heard. Often what is learned is more part of a rite of passage and quickly forgotten. Beyond writing and arithmetic, the real learning takes place in the social interaction of students and in the difficult process of growing up. In many rural regions, school attendance in itself, the presence of a competent teacher and functioning toilets is an achievement.\nEverything else is a beautiful dream there. The clearly structured hierarchical school system, which often leads to a higher level of education, makes something truly invaluable possible: social mobility. Because with social mobility comes the hope of a better life, not only for the graduates but also for their families. But just because you can climb that ladder, and because many classrooms now have whiteboards and computers instead of chalkboards, doesn't mean you get a better education. If the five turnarounds show us anything, it's this: Much of our current problems stem from 19th-century reductionist and linear-causal thinking, according to which the world is a machine that can be broken down into its component parts and understood.\nThe revision of the educational system should be based on two pillars: Critical thinking and complex systems thinking. Because the most significant challenge of our days is not the\n"
      },
      "after": "eabf4bc771f8130e",
      "date": 1667150019784
    },
    {
      "type": "edit",
      "id": "eabf4bc771f8130e",
      "item": {
        "type": "markdown",
        "id": "eabf4bc771f8130e",
        "text": "# A School Model from Another Time"
      },
      "date": 1667150023217
    },
    {
      "type": "edit",
      "id": "eabf4bc771f8130e",
      "item": {
        "type": "markdown",
        "id": "eabf4bc771f8130e",
        "text": "# [[A School Model from Another Time]]"
      },
      "date": 1667150049159
    },
    {
      "id": "018d981f88634ebe",
      "type": "remove",
      "date": 1667150071285
    },
    {
      "type": "edit",
      "id": "eabf4bc771f8130e",
      "item": {
        "type": "markdown",
        "id": "eabf4bc771f8130e",
        "text": "⇒  [[A School Model from Another Time]]"
      },
      "date": 1667150084452
    },
    {
      "id": "6178e744e3fdcda5",
      "type": "remove",
      "date": 1667150547241
    }
  ]
}