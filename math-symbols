{
  "title": "Math Symbols",
  "story": [
    {
      "type": "paragraph",
      "id": "f1d1c4440d3f54ae",
      "text": "Install a font with all the math symbols [https://github.com/khinsen/leibniz-pharo#install-a-font-with-all-the-math-symbols github]\n\n"
    },
    {
      "type": "paragraph",
      "id": "1c42a8d7194c44fa",
      "text": "[[Leibniz]] makes generous use of Unicode glyphs that are not contained in the default fonts used by GToolkit. The best free code font (monospaced) [[Konrad Hinsen]] has found is JuliaMono. "
    },
    {
      "type": "markdown",
      "id": "770ef6e3f4c7d4d4",
      "text": "> For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. "
    },
    {
      "type": "paragraph",
      "id": "3461511d2a7f2c81",
      "text": "Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
    },
    {
      "type": "reference",
      "id": "1745659d49f94b35",
      "site": "wiki.ralfbarkow.ch",
      "slug": "symbol",
      "title": "Symbol",
      "text": "The idea is to list one hundred curious things about programming. These can be taken on faith. In some languages they are true. In other languages, no. Developing a sense of what might and might not be true is the part of programming that is rarely taught, probably because the inconsistency is an embarrassment."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Math Symbols",
        "story": []
      },
      "date": 1675319750680
    },
    {
      "item": {
        "type": "factory",
        "id": "f1d1c4440d3f54ae"
      },
      "id": "f1d1c4440d3f54ae",
      "type": "add",
      "date": 1675319762661
    },
    {
      "type": "edit",
      "id": "f1d1c4440d3f54ae",
      "item": {
        "type": "paragraph",
        "id": "f1d1c4440d3f54ae",
        "text": "Install a font with all the math symbols\n\nLeibniz makes generous use of Unicode glyphs that are not contained in the default fonts used by GToolkit. The best free code font (monospaced) I have found is JuliaMono. For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "date": 1675319765104
    },
    {
      "type": "edit",
      "id": "f1d1c4440d3f54ae",
      "item": {
        "type": "paragraph",
        "id": "f1d1c4440d3f54ae",
        "text": "Install a font with all the math symbols [https://github.com/khinsen/leibniz-pharo#install-a-font-with-all-the-math-symbols github]\n\n"
      },
      "date": 1675319779150
    },
    {
      "type": "add",
      "id": "1c42a8d7194c44fa",
      "item": {
        "type": "paragraph",
        "id": "1c42a8d7194c44fa",
        "text": "[[Leibniz]] makes generous use of Unicode glyphs that are not contained in the default fonts used by GToolkit. The best free code font (monospaced) I have found is JuliaMono. For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "after": "f1d1c4440d3f54ae",
      "date": 1675319783722
    },
    {
      "type": "edit",
      "id": "1c42a8d7194c44fa",
      "item": {
        "type": "paragraph",
        "id": "1c42a8d7194c44fa",
        "text": "[[Leibniz]] makes generous use of Unicode glyphs that are not contained in the default fonts used by GToolkit. The best free code font (monospaced) [[Konrad Hinsen]] has found is JuliaMono. For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "date": 1675319808226
    },
    {
      "type": "edit",
      "id": "1c42a8d7194c44fa",
      "item": {
        "type": "paragraph",
        "id": "1c42a8d7194c44fa",
        "text": "[[Leibniz]] makes generous use of Unicode glyphs that are not contained in the default fonts used by GToolkit. The best free code font (monospaced) [[Konrad Hinsen]] has found is JuliaMono. "
      },
      "date": 1675319822346
    },
    {
      "type": "add",
      "id": "770ef6e3f4c7d4d4",
      "item": {
        "type": "paragraph",
        "id": "770ef6e3f4c7d4d4",
        "text": "> For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "after": "1c42a8d7194c44fa",
      "date": 1675319823862
    },
    {
      "type": "edit",
      "id": "770ef6e3f4c7d4d4",
      "item": {
        "type": "markdown",
        "id": "770ef6e3f4c7d4d4",
        "text": "> For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "date": 1675319825626
    },
    {
      "type": "edit",
      "id": "770ef6e3f4c7d4d4",
      "item": {
        "type": "markdown",
        "id": "770ef6e3f4c7d4d4",
        "text": "> For standard text fonts, the options I am aware of are Arial Unicode MS and Noto Sans Math. "
      },
      "date": 1675319839709
    },
    {
      "item": {
        "type": "factory",
        "id": "3461511d2a7f2c81"
      },
      "id": "3461511d2a7f2c81",
      "type": "add",
      "after": "770ef6e3f4c7d4d4",
      "date": 1675319840925
    },
    {
      "type": "edit",
      "id": "3461511d2a7f2c81",
      "item": {
        "type": "paragraph",
        "id": "3461511d2a7f2c81",
        "text": "Leibniz will automatically select one of them, if available. Otherwise it will use the default code font of Glamorous Toolkit. It lacks many of the maths symbols that Leibniz uses. Some of them will be substituted from other fonts if possible, making the text readable but often ugly. Others will be replaced by a default glyph, making the code unreadable."
      },
      "date": 1675319842632
    },
    {
      "item": {
        "type": "factory",
        "id": "1745659d49f94b35"
      },
      "id": "1745659d49f94b35",
      "type": "add",
      "after": "3461511d2a7f2c81",
      "date": 1675319872505
    },
    {
      "type": "edit",
      "id": "1745659d49f94b35",
      "item": {
        "type": "reference",
        "id": "1745659d49f94b35",
        "site": "wiki.ralfbarkow.ch",
        "slug": "symbol",
        "title": "Symbol",
        "text": "The idea is to list one hundred curious things about programming. These can be taken on faith. In some languages they are true. In other languages, no. Developing a sense of what might and might not be true is the part of programming that is rarely taught, probably because the inconsistency is an embarrassment."
      },
      "date": 1675319874797
    }
  ]
}