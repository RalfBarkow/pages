{
  "title": "Distinctions, Forms, and Objects",
  "story": [
    {
      "type": "paragraph",
      "id": "37a11773727738cd",
      "text": "We have said numerous times that objects model distinctions. However, we have not examined this issue rigurously until now. It is time we take care of the loose ends so we can rely on a solid foundation for our traversals."
    },
    {
      "type": "paragraph",
      "id": "ec6064c53b444175",
      "text": "For example, distinctions are drawn in a form. We have assumed we always have a form where to create our objects, but what is that form exactly? And why can we assume it is always there so lightly?"
    },
    {
      "type": "paragraph",
      "id": "e4077a1e9313ad34",
      "text": "It turns out that the form is the object memory, and since Smalltalk provides automatic memory management, we do not have to worry about it. Stop for a moment and consider the implications. Drawing distinctions is what we do when we write Smalltalk programs. Drawing distinctions is what programs do for us. Automatic memory management means that the most important and elementary operations that occur in the process of reaching our objectives are tax free. In other words, Smalltalk not only keeps out of our way when we try to get things accomplished – it actually spends quite a bit of effort to let us achieve our goals without distractions."
    },
    {
      "type": "paragraph",
      "id": "1ff8f6614d882870",
      "text": "Nobody should have to put up with mandatory hindrances when using our most critical abilities: to perceive differences in value, to draw distinctions, to name those distinctions, and to allow messages to cross distinctions. Any level of inefficiency, obscurity, or unnecessary complication regarding these matters comes with extremely expensive consequences. If we allow any of these issues to creep up on us, we will also give up to their stealthy yet powerful influences. There is no limit to how much they can pervasively limit us, while at the same time letting us believe we are accomplishing something valuable. This delusion is absolutely inexcusable and unacceptable, and must be fought back at all costs."
    },
    {
      "type": "paragraph",
      "id": "8784b43f3433757a",
      "text": "Another issue that merits careful consideration is that when distinctions are drawn, the form on which they are inscribed is severed into two perfectly disjoint areas. These two are forms as well. That means that drawing a distinction creates a new form inside of it, and therefore objects contain their forms. What about their contents? In the same way we draw distinctions on a form, in Smalltalk we reference other objects by means of instance names and indexed slots. Since the internal structure of objects is defined by their class, this means that the shape of object forms is both predetermined and fixed."
    },
    {
      "type": "paragraph",
      "id": "23719c397bf58598",
      "text": "Even things like ordered collections are implemented in terms of fixed size objects — either arrays or themselves."
    },
    {
      "type": "paragraph",
      "id": "282360e769534bef",
      "text": "So what are objects, distinctions or forms? Well. . . actually, objects exhibit dual behavior. Seen from the outside, they behave like a distinction because they separate their insides from the outside. We typically mean this when we say that objects provide strong encapsulation for their “contents” — it is impossible to access the instance names of an object4. However, when seen from within, objects are forms. When the point of view resides inside of them, their contents are immediately accessible without the need to send a message. In this way, objects are both distinctions and forms at the same time. At any time, we can change the point of view by sending a message to an object and crossing the distinction boundary."
    },
    {
      "type": "paragraph",
      "id": "ee2ce9bec6b35b73",
      "text": "Something we have not discussed yet is the fact that the value of names can change in Smalltalk. As far as tracking down references to an object goes, however, we can assume that the values of names do not change. Therefore, we will leave the transmission of values across networks of distinctions for later."
    },
    {
      "type": "paragraph",
      "id": "68580d11027b54c9",
      "text": "⇒ [[Contexts of Immediate Name Accessibility]]"
    },
    {
      "type": "pagefold",
      "id": "c26e052dfe7e5649",
      "text": "~"
    },
    {
      "type": "paragraph",
      "id": "699e9417287ef5f9",
      "text": "Section 5.2.1 of [[A Mentoring Course on Smalltalk]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Distinctions, Forms, and Objects",
        "story": []
      },
      "date": 1660209066250
    },
    {
      "item": {
        "type": "factory",
        "id": "37a11773727738cd"
      },
      "id": "37a11773727738cd",
      "type": "add",
      "date": 1660209080780
    },
    {
      "type": "edit",
      "id": "37a11773727738cd",
      "item": {
        "type": "paragraph",
        "id": "37a11773727738cd",
        "text": "We have said numerous times that objects model distinctions. However, we have not examined this issue rigurously until now. It is time we take care of the loose ends so we can rely on a solid foundation for our traversals."
      },
      "date": 1660209082494
    },
    {
      "item": {
        "type": "factory",
        "id": "ec6064c53b444175"
      },
      "id": "ec6064c53b444175",
      "type": "add",
      "after": "37a11773727738cd",
      "date": 1660209162427
    },
    {
      "type": "edit",
      "id": "ec6064c53b444175",
      "item": {
        "type": "paragraph",
        "id": "ec6064c53b444175",
        "text": "For example, distinctions are drawn in a form. We have assumed we always have a form where to create our objects, but what is that form exactly? And why can we assume it is always there so lightly?"
      },
      "date": 1660209163908
    },
    {
      "item": {
        "type": "factory",
        "id": "e4077a1e9313ad34"
      },
      "id": "e4077a1e9313ad34",
      "type": "add",
      "after": "ec6064c53b444175",
      "date": 1660209175734
    },
    {
      "type": "edit",
      "id": "e4077a1e9313ad34",
      "item": {
        "type": "paragraph",
        "id": "e4077a1e9313ad34",
        "text": "It turns out that the form is the object memory, and since Smalltalk provides automatic memory management, we do not have to worry about it. Stop for a moment and consider the implications. Drawing distinctions is what we do when we write Smalltalk programs. Drawing distinctions is what programs do for us. Automatic memory management means that the most important and elementary operations that occur in the process of reaching our objectives are tax free. In other words, Smalltalk not only keeps out of our way when we try to get things accomplished – it actually spends quite a bit of effort to let us achieve our goals without distractions."
      },
      "date": 1660209184968
    },
    {
      "item": {
        "type": "factory",
        "id": "1ff8f6614d882870"
      },
      "id": "1ff8f6614d882870",
      "type": "add",
      "after": "e4077a1e9313ad34",
      "date": 1660209190529
    },
    {
      "type": "edit",
      "id": "1ff8f6614d882870",
      "item": {
        "type": "paragraph",
        "id": "1ff8f6614d882870",
        "text": "Nobody should have to put up with mandatory hindrances when using our most critical abilities: to perceive differences in value, to draw distinctions, to name those distinctions, and to allow messages to cross distinctions. Any level of inefficiency, obscurity, or unnecessary complication regarding these matters comes with extremely expensive consequences. If we allow any of these issues to creep up on us, we will also give up to their stealthy yet powerful influences. There is no limit to how much they can pervasively limit us, while at the same time letting us believe we are accomplishing something valuable. This delusion is absolutely inexcusable and unacceptable, and must be fought back at all costs."
      },
      "date": 1660209192287
    },
    {
      "item": {
        "type": "factory",
        "id": "8784b43f3433757a"
      },
      "id": "8784b43f3433757a",
      "type": "add",
      "after": "1ff8f6614d882870",
      "date": 1660209227796
    },
    {
      "type": "edit",
      "id": "8784b43f3433757a",
      "item": {
        "type": "paragraph",
        "id": "8784b43f3433757a",
        "text": "Another issue that merits careful consideration is that when distinctions are drawn, the form on which they are inscribed is severed into two perfectly disjoint areas. These two are forms as well. That means that drawing a distinction creates a new form inside of it, and therefore objects contain their forms. What about"
      },
      "date": 1660209234216
    },
    {
      "type": "edit",
      "id": "8784b43f3433757a",
      "item": {
        "type": "paragraph",
        "id": "8784b43f3433757a",
        "text": "Another issue that merits careful consideration is that when distinctions are drawn, the form on which they are inscribed is severed into two perfectly disjoint areas. These two are forms as well. That means that drawing a distinction creates a new form inside of it, and therefore objects contain their forms. What about their contents? In the same way we draw distinctions on a form, in Smalltalk we reference other objects by means of instance names and indexed slots. Since the internal structure of objects is defined by their class, this means that the shape of object forms is both predetermined and fixed."
      },
      "date": 1660209248272
    },
    {
      "item": {
        "type": "factory",
        "id": "23719c397bf58598"
      },
      "id": "23719c397bf58598",
      "type": "add",
      "after": "8784b43f3433757a",
      "date": 1660209254208
    },
    {
      "type": "edit",
      "id": "23719c397bf58598",
      "item": {
        "type": "paragraph",
        "id": "23719c397bf58598",
        "text": "Even things like ordered collections are implemented in terms of fixed size objects — either arrays or themselves."
      },
      "date": 1660209255564
    },
    {
      "item": {
        "type": "factory",
        "id": "282360e769534bef"
      },
      "id": "282360e769534bef",
      "type": "add",
      "after": "23719c397bf58598",
      "date": 1660209296540
    },
    {
      "type": "edit",
      "id": "282360e769534bef",
      "item": {
        "type": "paragraph",
        "id": "282360e769534bef",
        "text": "So what are objects, distinctions or forms? Well. . . actually, objects exhibit dual behavior. Seen from the outside, they behave like a distinction because they separate their insides from the outside. We typically mean this when we say that objects provide strong encapsulation for their “contents” — it is impossible to access the instance names of an object4. However, when seen from within, objects are forms. When the point of view resides inside of them, their contents are immediately accessible without the need to send a message. In this way, objects are both distinctions and forms at the same time. At any time, we can change the point of view by sending a message to an object and crossing the distinction boundary."
      },
      "date": 1660209298309
    },
    {
      "item": {
        "type": "factory",
        "id": "ee2ce9bec6b35b73"
      },
      "id": "ee2ce9bec6b35b73",
      "type": "add",
      "after": "282360e769534bef",
      "date": 1660209323555
    },
    {
      "type": "edit",
      "id": "ee2ce9bec6b35b73",
      "item": {
        "type": "paragraph",
        "id": "ee2ce9bec6b35b73",
        "text": "Something we have not discussed yet is the fact that the value of names can change in Smalltalk. As far as tracking down references to an object goes, however, we can assume that the values of names do not change. Therefore, we will leave the transmission of values across networks of distinctions for later."
      },
      "date": 1660209325127
    },
    {
      "item": {
        "type": "factory",
        "id": "68580d11027b54c9"
      },
      "id": "68580d11027b54c9",
      "type": "add",
      "after": "ee2ce9bec6b35b73",
      "date": 1660215771695
    },
    {
      "type": "edit",
      "id": "68580d11027b54c9",
      "item": {
        "type": "paragraph",
        "id": "68580d11027b54c9",
        "text": "– [[Contexts of Immediate Name Accessibility]]"
      },
      "date": 1660215779354
    },
    {
      "type": "edit",
      "id": "68580d11027b54c9",
      "item": {
        "type": "paragraph",
        "id": "68580d11027b54c9",
        "text": "⇒ [[Contexts of Immediate Name Accessibility]]"
      },
      "date": 1660217352058
    },
    {
      "item": {
        "type": "factory",
        "id": "c26e052dfe7e5649"
      },
      "id": "c26e052dfe7e5649",
      "type": "add",
      "after": "68580d11027b54c9",
      "date": 1660217360018
    },
    {
      "type": "edit",
      "id": "c26e052dfe7e5649",
      "item": {
        "type": "pagefold",
        "id": "c26e052dfe7e5649",
        "text": "~"
      },
      "date": 1660217363658
    },
    {
      "item": {
        "type": "factory",
        "id": "699e9417287ef5f9"
      },
      "id": "699e9417287ef5f9",
      "type": "add",
      "after": "c26e052dfe7e5649",
      "date": 1660217365060
    },
    {
      "type": "edit",
      "id": "699e9417287ef5f9",
      "item": {
        "type": "paragraph",
        "id": "699e9417287ef5f9",
        "text": "Section 5.2.1 of "
      },
      "date": 1660217376527
    },
    {
      "type": "edit",
      "id": "699e9417287ef5f9",
      "item": {
        "type": "paragraph",
        "id": "699e9417287ef5f9",
        "text": "Section 5.2.1 of [[A Mentoring Course on Smalltalk]]"
      },
      "date": 1660217384873
    }
  ]
}