{
  "title": "Markers in Order",
  "story": [
    {
      "type": "paragraph",
      "id": "54a39b1ea079b8c4",
      "text": "We want to rearrange markers so they draw episode lines in a graceful order. We count them off in a 2d field of dots."
    },
    {
      "type": "code",
      "id": "c8963fb39e7da82f",
      "text": "let text = \n`45.4837805, -122.7912138\n45.4836182, -122.7908421\n45.4822472, -122.7922277\n45.4834027, -122.7938305\n45.4841416, -122.7950527`"
    },
    {
      "type": "code",
      "id": "975577613341663d",
      "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=20; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
    },
    {
      "type": "paragraph",
      "id": "b3e976205e2a71d0",
      "text": "I got my coordinates confused but it doesn't matter because I am only interested in the shape produced."
    },
    {
      "type": "frame",
      "id": "777ff878d8f1cc7e",
      "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 400"
    },
    {
      "type": "reference",
      "id": "4850213e9f99e412",
      "site": "trails.ward.asia.wiki.org",
      "slug": "little-peoples-park",
      "title": "Little People's Park",
      "text": "I was heading out to the vicinity of the Nike HQ by my commute route from back when I worked there. I was surprised when I passed this park because I don't remember any water there. But then, that wasn't a thing for me back then."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Markers in Order",
        "story": [
          {
            "type": "paragraph",
            "id": "54a39b1ea079b8c4",
            "text": "Explain what this code does."
          },
          {
            "type": "code",
            "id": "c8963fb39e7da82f",
            "text": "2 + 3"
          },
          {
            "type": "frame",
            "id": "777ff878d8f1cc7e",
            "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 200"
          }
        ]
      },
      "date": 1632708888737
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "let text = \n`45.48224722222223, -122.79222777777778\n45.4836182, -122.7908421\n45.483780555555555, -122.79121388888889\n45.483402777777776, -122.79383055555556\n45.484141666666666, -122.79505277777777`"
      },
      "date": 1632709003527
    },
    {
      "item": {
        "type": "factory",
        "id": "975577613341663d"
      },
      "id": "975577613341663d",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1632709010105
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\")"
      },
      "date": 1632709033738
    },
    {
      "id": "975577613341663d",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "c8963fb39e7da82f",
        "975577613341663d",
        "777ff878d8f1cc7e"
      ],
      "date": 1632709038263
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((xy,i)=>[xy,i])"
      },
      "date": 1632709190621
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-48.2\n  let y = +lon-122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709483840
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-48.2\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709504615
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-48.4\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709532906
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-48.3\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709539216
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-48.2\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709550088
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-45.8\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709596144
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  let [lat,lon] = latlon.split(\", \")\n  let x = +lat-45.48\n  let y = +lon+122.8\n  return {i,x,y}\n})"
      },
      "date": 1632709622190
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => +(v*1000.toFixed(2))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.48)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632709769533
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => (v*1000).toFixed(2)\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.48)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632709815586
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => +(v*1000).toFixed(2)\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.48)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632709824965
    },
    {
      "type": "fork",
      "date": 1632714561640
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.48)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632714616558
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.49)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632714644389
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.8)\n  return {i,x,y}\n})"
      },
      "date": 1632714655876
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "let text = \n`45.4822472, -122.7922277\n45.4836182, -122.7908421\n45.4837805, -122.7912138\n45.4834027, -122.7938305\n45.4841416, -122.7950527`"
      },
      "date": 1632714807787
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.82)\n  return {i,x,y}\n})"
      },
      "date": 1632714851879
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.81)\n  return {i,x,y}\n})"
      },
      "date": 1632714859141
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.79)\n  return {i,x,y}\n})"
      },
      "date": 1632714867099
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.795)\n  return {i,x,y}\n})"
      },
      "date": 1632714875051
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.793)\n  return {i,x,y}\n})"
      },
      "date": 1632714890527
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.794)\n  return {i,x,y}\n})"
      },
      "date": 1632714902646
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.795)\n  return {i,x,y}\n})"
      },
      "date": 1632714916913
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*10000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})"
      },
      "date": 1632714930545
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})"
      },
      "date": 1632714949830
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})"
      },
      "date": 1632715168050
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='                                '\n  for (let p of dots) {\n    if (p.i == j) s.substr("
      },
      "date": 1632715400023
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='                                '.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = i\n  }\n  output.innerText += s.join(\"\")\n}"
      },
      "date": 1632715713546
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='                                '.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\"\")\n}"
      },
      "date": 1632715724587
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='                                '.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\"\")+\"\\n\"\n}"
      },
      "date": 1632715776503
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\"\")+\"\\n\"\n}"
      },
      "date": 1632715836861
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}"
      },
      "date": 1632715892435
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*5000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632715910785
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = v => Math.round(+(v*3000))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482)\n  let y = r(+lon+122.796)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632715944375
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,3000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632716074098
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,2000)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632716090228
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=50; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632716120140
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 600"
      },
      "date": 1632716132417
    },
    {
      "type": "edit",
      "id": "c8963fb39e7da82f",
      "item": {
        "type": "code",
        "id": "c8963fb39e7da82f",
        "text": "let text = \n`45.4837805, -122.7912138\n45.4836182, -122.7908421\n45.4822472, -122.7922277\n45.4834027, -122.7938305\n45.4841416, -122.7950527`"
      },
      "date": 1632716367911
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to rearrange markers so they draw episode lines in a graceful order. Here we count them off in a 2d matrix of dots."
      },
      "date": 1632716601112
    },
    {
      "type": "edit",
      "id": "54a39b1ea079b8c4",
      "item": {
        "type": "paragraph",
        "id": "54a39b1ea079b8c4",
        "text": "We want to rearrange markers so they draw episode lines in a graceful order. We count them off in a 2d field of dots."
      },
      "date": 1632716631046
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=20; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632716658959
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 300"
      },
      "date": 1632716678938
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "http://js.ward.asia.wiki.org/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 400"
      },
      "date": 1632716688302
    },
    {
      "item": {
        "type": "factory",
        "id": "4850213e9f99e412"
      },
      "id": "4850213e9f99e412",
      "type": "add",
      "after": "777ff878d8f1cc7e",
      "date": 1632716719701
    },
    {
      "type": "edit",
      "id": "4850213e9f99e412",
      "item": {
        "type": "reference",
        "id": "4850213e9f99e412",
        "site": "trails.ward.asia.wiki.org",
        "slug": "little-peoples-park",
        "title": "Little People's Park",
        "text": "I was heading out to the vicinity of the Nike HQ by my commute route from back when I worked there. I was surprised when I passed this park because I don't remember any water there. But then, that wasn't a thing for me back then."
      },
      "date": 1632716725346
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=20; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\"  \")+\"\\n\"\n}\n''"
      },
      "date": 1632716892200
    },
    {
      "type": "edit",
      "id": "975577613341663d",
      "item": {
        "type": "code",
        "id": "975577613341663d",
        "text": "let dots = text.split(\"\\n\").map((latlon,i)=> {\n  const r = (v,k) => Math.round(+(v*k))\n  let [lat,lon] = latlon.split(\", \")\n  let x = r(+lat-45.482,10000)\n  let y = r(+lon+122.796,3000)\n  return {i,x,y}\n})\nfor (let j=0; j<=20; j++) {\n  let s='..............................'.split(\"\")\n  for (let p of dots) {\n    if (p.y == j) s[p.x] = p.i\n  }\n  output.innerText += s.join(\" \")+\"\\n\"\n}\n''"
      },
      "date": 1632716903160
    },
    {
      "item": {
        "type": "factory",
        "id": "b3e976205e2a71d0"
      },
      "id": "b3e976205e2a71d0",
      "type": "add",
      "after": "4850213e9f99e412",
      "date": 1632716961486
    },
    {
      "type": "edit",
      "id": "b3e976205e2a71d0",
      "item": {
        "type": "paragraph",
        "id": "b3e976205e2a71d0",
        "text": "I got my coordinates confused but it doesn't matter because I am only interested in the shape produced by the sequence."
      },
      "date": 1632717038608
    },
    {
      "type": "edit",
      "id": "b3e976205e2a71d0",
      "item": {
        "type": "paragraph",
        "id": "b3e976205e2a71d0",
        "text": "I got my coordinates confused but it doesn't matter because I am only interested in the shape produced."
      },
      "date": 1632717051134
    },
    {
      "id": "b3e976205e2a71d0",
      "type": "move",
      "order": [
        "54a39b1ea079b8c4",
        "c8963fb39e7da82f",
        "975577613341663d",
        "b3e976205e2a71d0",
        "777ff878d8f1cc7e",
        "4850213e9f99e412"
      ],
      "date": 1632717055609
    },
    {
      "type": "fork",
      "site": "js.ward.asia.wiki.org",
      "date": 1663756407541
    },
    {
      "type": "edit",
      "id": "777ff878d8f1cc7e",
      "item": {
        "type": "frame",
        "id": "777ff878d8f1cc7e",
        "text": "//wiki.ralfbarkow.ch/assets/pages/snippet-template/basicjs.html?snippet-template\nHEIGHT 400"
      },
      "date": 1663756425499
    }
  ]
}