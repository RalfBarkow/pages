{
  "title": "Kahn’s Algorithm",
  "story": [
    {
      "type": "paragraph",
      "id": "3fa7cf4e9c573844",
      "text": "Since an event's auth chain forms a [[directed acyclic graph]] (DAG), we can say that each auth event is a \"node\" in the graph and each relationship between two events is an \"edge\". In our case, two nodes in the auth DAG have a relationship when one event refers to another event as an auth event. [https://matrix.org/docs/guides/implementing-stateres#kahns-algorithm page]"
    },
    {
      "type": "paragraph",
      "id": "dee0e7e2090686a6",
      "text": "[…]"
    },
    {
      "type": "markdown",
      "id": "6d94ff34897f95ee",
      "text": "In our case, [[Kahn's algorithm]] works on three main components:\n\n1. The unsorted input list of events, including the auth events\n1. A map, where we count how many incoming edges each node has\n1. The sorted output list of events, effectively the result of the algorithm"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Kahn’s Algorithm",
        "story": []
      },
      "date": 1641313420950
    },
    {
      "item": {
        "type": "factory",
        "id": "3fa7cf4e9c573844"
      },
      "id": "3fa7cf4e9c573844",
      "type": "add",
      "date": 1641313432099
    },
    {
      "type": "edit",
      "id": "3fa7cf4e9c573844",
      "item": {
        "type": "paragraph",
        "id": "3fa7cf4e9c573844",
        "text": "Since an event's auth chain forms a directed acyclic graph (DAG), we can say that each auth event is a \"node\" in the graph and each relationship between two events is an \"edge\". In our case, two nodes in the auth DAG have a relationship when one event refers to another event as an auth event."
      },
      "date": 1641313435965
    },
    {
      "type": "edit",
      "id": "3fa7cf4e9c573844",
      "item": {
        "type": "paragraph",
        "id": "3fa7cf4e9c573844",
        "text": "Since an event's auth chain forms a directed acyclic graph (DAG), we can say that each auth event is a \"node\" in the graph and each relationship between two events is an \"edge\". In our case, two nodes in the auth DAG have a relationship when one event refers to another event as an auth event. [https://matrix.org/docs/guides/implementing-stateres#kahns-algorithm page]"
      },
      "date": 1641313447472
    },
    {
      "type": "edit",
      "id": "3fa7cf4e9c573844",
      "item": {
        "type": "paragraph",
        "id": "3fa7cf4e9c573844",
        "text": "Since an event's auth chain forms a [[directed acyclic graph]] (DAG), we can say that each auth event is a \"node\" in the graph and each relationship between two events is an \"edge\". In our case, two nodes in the auth DAG have a relationship when one event refers to another event as an auth event. [https://matrix.org/docs/guides/implementing-stateres#kahns-algorithm page]"
      },
      "date": 1641313460866
    },
    {
      "item": {
        "type": "factory",
        "id": "dee0e7e2090686a6"
      },
      "id": "dee0e7e2090686a6",
      "type": "add",
      "after": "3fa7cf4e9c573844",
      "date": 1641313491545
    },
    {
      "item": {
        "type": "factory",
        "id": "6d94ff34897f95ee"
      },
      "id": "6d94ff34897f95ee",
      "type": "add",
      "after": "dee0e7e2090686a6",
      "date": 1641313498309
    },
    {
      "type": "edit",
      "id": "dee0e7e2090686a6",
      "item": {
        "type": "paragraph",
        "id": "dee0e7e2090686a6",
        "text": "[…]"
      },
      "date": 1641313499552
    },
    {
      "type": "edit",
      "id": "6d94ff34897f95ee",
      "item": {
        "type": "markdown",
        "id": "6d94ff34897f95ee",
        "text": "In our case, Kahn's algorithm works on three main components:\n\n1. The unsorted input list of events, including the auth events\n1. A map, where we count how many incoming edges each node has\n1. The sorted output list of events, effectively the result of the algorithm"
      },
      "date": 1641313517443
    },
    {
      "type": "edit",
      "id": "6d94ff34897f95ee",
      "item": {
        "type": "markdown",
        "id": "6d94ff34897f95ee",
        "text": "In our case, [[Kahn's algorithm]] works on three main components:\n\n1. The unsorted input list of events, including the auth events\n1. A map, where we count how many incoming edges each node has\n1. The sorted output list of events, effectively the result of the algorithm"
      },
      "date": 1641313527581
    }
  ]
}