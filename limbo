{
  "title": "Limbo",
  "story": [
    {
      "type": "paragraph",
      "id": "567f4e81dcc23273",
      "text": "Acrobatic dance of West Indian origin, in which the dancer bends the body backwards from the knees and moves under a crossbar with pushing dance steps."
    },
    {
      "type": "html",
      "id": "10f2fdeda91d9095",
      "text": "<img\n  src=\"https://miro.medium.com/v2/resize:fit:1000/format:webp/1*lnQUQ0cAxU9NV6zBT6yN0Q.jpeg\"\n  width=\"100%\"\n>"
    },
    {
      "type": "paragraph",
      "id": "83f19bdf0b871b26",
      "text": "[[Kent Beck]]'s Limbo – Scaling Development. [https://less.works/conferenza/sessions/2019-less-conference-munich-kent-beck-s-limbo-scaling-development-155 page] "
    },
    {
      "type": "paragraph",
      "id": "ba5380f0dec201cc",
      "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances on a fine line between two principles (\"[[Limbo on the Cheap]]\" via [[TCR]] – \"test && commit || revert\") to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
    },
    {
      "type": "markdown",
      "id": "98feb80f33498cf2",
      "text": "1. All work on (and production executes) the same program represented by a single [[Abstract Syntax Tree]].\n\n1. No one should cause problems for others (including users).\n"
    },
    {
      "type": "paragraph",
      "id": "64aa7efb83ef4a5a",
      "text": "Both principles are ideals that must be addressed in sequence."
    },
    {
      "type": "paragraph",
      "id": "7a04b51e133e8ec2",
      "text": "The changes that propagate through Limbo are transformations of the abstract syntax tree. This promotes a sequence of changes along the lines of \"make the change easy, then make the easy change\"."
    },
    {
      "type": "paragraph",
      "id": "55c297b7bd722adf",
      "text": "To prevent others from encountering problems, changes must be tested quickly and reliably in the field (for those changes that could cause problems)."
    },
    {
      "type": "paragraph",
      "id": "260495df3d1f0027",
      "text": "Limbo is an exercise in learning, hence the dogmatic attitude that everyone works on the same program until it goes into production. "
    },
    {
      "type": "paragraph",
      "id": "48c939297011b34a",
      "text": "⇒ [[One Rendering Tree]]"
    },
    {
      "type": "paragraph",
      "id": "0c47a3730a31e4fc",
      "text": "The strongest constraints in one dimension will foster the greatest innovation in another. Even if Limbo proves impractical, trying to achieve it will certainly have valuable side effects."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Limbo",
        "story": []
      },
      "date": 1659785626789
    },
    {
      "item": {
        "type": "factory",
        "id": "567f4e81dcc23273"
      },
      "id": "567f4e81dcc23273",
      "type": "add",
      "date": 1659785631914
    },
    {
      "type": "edit",
      "id": "567f4e81dcc23273",
      "item": {
        "type": "paragraph",
        "id": "567f4e81dcc23273",
        "text": "acrobatic dance of West Indian origin, in which the dancer bends the body back from the knees and moves with pushing dance steps under a crossbar"
      },
      "date": 1659785641403
    },
    {
      "item": {
        "type": "factory",
        "id": "45a5f145ea1882d4"
      },
      "id": "45a5f145ea1882d4",
      "type": "add",
      "after": "567f4e81dcc23273",
      "date": 1659785681716
    },
    {
      "type": "edit",
      "id": "45a5f145ea1882d4",
      "item": {
        "type": "pagefold",
        "id": "45a5f145ea1882d4",
        "text": "~"
      },
      "date": 1659785685848
    },
    {
      "item": {
        "type": "factory",
        "id": "83f19bdf0b871b26"
      },
      "id": "83f19bdf0b871b26",
      "type": "add",
      "after": "45a5f145ea1882d4",
      "date": 1659785687076
    },
    {
      "type": "edit",
      "id": "83f19bdf0b871b26",
      "item": {
        "type": "paragraph",
        "id": "83f19bdf0b871b26",
        "text": "[[Kent Beck]]'s Limbo - Scaling Development "
      },
      "date": 1659785693936
    },
    {
      "type": "edit",
      "id": "83f19bdf0b871b26",
      "item": {
        "type": "paragraph",
        "id": "83f19bdf0b871b26",
        "text": "[[Kent Beck]]'s Limbo - Scaling Development. [https://less.works/conferenza/sessions/2019-less-conference-munich-kent-beck-s-limbo-scaling-development-155 page] "
      },
      "date": 1659785755523
    },
    {
      "item": {
        "type": "factory",
        "id": "3f02cac89ef2e6e7"
      },
      "id": "3f02cac89ef2e6e7",
      "type": "add",
      "after": "83f19bdf0b871b26",
      "date": 1659785778208
    },
    {
      "type": "edit",
      "id": "3f02cac89ef2e6e7",
      "item": {
        "type": "markdown",
        "id": "3f02cac89ef2e6e7",
        "text": "> Limbo is live, shared programming in which the focus of two principles is constantly kept in balance (\"Limbo on the Cheap\" via \"test && commit || revert\")."
      },
      "date": 1659785781010
    },
    {
      "item": {
        "type": "factory",
        "id": "ba5380f0dec201cc"
      },
      "id": "ba5380f0dec201cc",
      "type": "add",
      "after": "3f02cac89ef2e6e7",
      "date": 1659785794085
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "\n\nLimbo dictates the below 2 principles to scale development for thousands of developers concurrently working on the same codebase:"
      },
      "date": 1659785808873
    },
    {
      "type": "add",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "paragraph",
        "id": "98feb80f33498cf2",
        "text": "1. Everyone works on the same executable program, which is represented by a syntax tree.\n1. No one is allowed to cause problems for others (including the users).\n\n"
      },
      "after": "ba5380f0dec201cc",
      "date": 1659785811065
    },
    {
      "type": "edit",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "markdown",
        "id": "98feb80f33498cf2",
        "text": "1. Everyone works on the same executable program, which is represented by a syntax tree.\n1. No one is allowed to cause problems for others (including the users).\n\n"
      },
      "date": 1659785812575
    },
    {
      "type": "edit",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "markdown",
        "id": "98feb80f33498cf2",
        "text": "1. Everyone works on the same executable program, which is represented by a [[syntax tree]].\n1. No one is allowed to cause problems for others (including the users).\n\n"
      },
      "date": 1659786061131
    },
    {
      "item": {
        "type": "factory",
        "id": "622eaee99d6bf57c"
      },
      "id": "622eaee99d6bf57c",
      "type": "add",
      "after": "98feb80f33498cf2",
      "date": 1673521626842
    },
    {
      "type": "edit",
      "id": "622eaee99d6bf57c",
      "item": {
        "type": "pagefold",
        "id": "622eaee99d6bf57c",
        "text": "~"
      },
      "date": 1673521630327
    },
    {
      "item": {
        "type": "factory",
        "id": "f5de6a5c3cc37dbf"
      },
      "id": "f5de6a5c3cc37dbf",
      "type": "add",
      "after": "622eaee99d6bf57c",
      "date": 1673521631677
    },
    {
      "type": "edit",
      "id": "f5de6a5c3cc37dbf",
      "item": {
        "type": "reference",
        "id": "f5de6a5c3cc37dbf",
        "site": "wiki.ralfbarkow.ch",
        "slug": "tcr",
        "title": "TCR",
        "text": "\"Test && Commit || Revert\""
      },
      "date": 1673521634074
    },
    {
      "item": {
        "type": "factory",
        "id": "ef73e6afbe19fbd5"
      },
      "id": "ef73e6afbe19fbd5",
      "type": "add",
      "after": "f5de6a5c3cc37dbf",
      "date": 1680730525675
    },
    {
      "type": "edit",
      "id": "ef73e6afbe19fbd5",
      "item": {
        "type": "paragraph",
        "id": "ef73e6afbe19fbd5",
        "text": "Limbo\n\nLimbo is live, shared programming. It balances precariously between two principles:\n\n    Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree.\n    No one is allowed to cause others (including users) problems.\n\nBoth principles are ideals to be successively approached.\n\nThe changes that propagate through Limbo are transformations of the abstract syntax tree. This encourages a “make the change easy, then make the easy change” sequence of changes.\n\nThe prohibition against causing other people problems implies quick and reliable local testing of changes (for those changes that might cause problems).\n\nLimbo is an exercise in learning, hence the dogmatic stance that everyone is working on the same program all the way out to production. Imposing the harshest constraints on one dimension will encourage the greatest innovation on another. Even if Limbo turns out to be impractical, attempting to achieve it is certain to provide valuable spin-offs."
      },
      "date": 1680730548091
    },
    {
      "type": "edit",
      "id": "ef73e6afbe19fbd5",
      "item": {
        "type": "paragraph",
        "id": "ef73e6afbe19fbd5",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post]\n\nLimbo is live, shared programming. It balances precariously between two principles:\n\n    Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree.\n    No one is allowed to cause others (including users) problems.\n\nBoth principles are ideals to be successively approached.\n\nThe changes that propagate through Limbo are transformations of the abstract syntax tree. This encourages a “make the change easy, then make the easy change” sequence of changes.\n\nThe prohibition against causing other people problems implies quick and reliable local testing of changes (for those changes that might cause problems).\n\nLimbo is an exercise in learning, hence the dogmatic stance that everyone is working on the same program all the way out to production. Imposing the harshest constraints on one dimension will encourage the greatest innovation on another. Even if Limbo turns out to be impractical, attempting to achieve it is certain to provide valuable spin-offs."
      },
      "date": 1680730579203
    },
    {
      "item": {
        "type": "factory",
        "id": "10f2fdeda91d9095"
      },
      "id": "10f2fdeda91d9095",
      "type": "add",
      "after": "ef73e6afbe19fbd5",
      "date": 1680730602212
    },
    {
      "type": "edit",
      "id": "10f2fdeda91d9095",
      "item": {
        "type": "html",
        "id": "10f2fdeda91d9095",
        "text": "<img\n  src=\"https://miro.medium.com/v2/resize:fit:1000/format:webp/1*lnQUQ0cAxU9NV6zBT6yN0Q.jpeg\"\n  width=\"100%\"\n>"
      },
      "date": 1680730622543
    },
    {
      "type": "edit",
      "id": "f5de6a5c3cc37dbf",
      "item": {
        "type": "reference",
        "id": "f5de6a5c3cc37dbf",
        "site": "wiki.ralfbarkow.ch",
        "slug": "tcr",
        "title": "TCR",
        "text": "\"[[Test]] && [[Commit]] || [[Revert]]\""
      },
      "date": 1680730649433
    },
    {
      "item": {
        "type": "factory",
        "id": "2f5f0e85a5581700"
      },
      "id": "2f5f0e85a5581700",
      "type": "add",
      "after": "10f2fdeda91d9095",
      "date": 1680730864391
    },
    {
      "type": "edit",
      "id": "2f5f0e85a5581700",
      "item": {
        "type": "pagefold",
        "id": "2f5f0e85a5581700",
        "text": "~"
      },
      "date": 1680730867697
    },
    {
      "id": "f5de6a5c3cc37dbf",
      "type": "move",
      "order": [
        "567f4e81dcc23273",
        "45a5f145ea1882d4",
        "83f19bdf0b871b26",
        "3f02cac89ef2e6e7",
        "ba5380f0dec201cc",
        "98feb80f33498cf2",
        "622eaee99d6bf57c",
        "ef73e6afbe19fbd5",
        "10f2fdeda91d9095",
        "2f5f0e85a5581700",
        "f5de6a5c3cc37dbf"
      ],
      "date": 1680730881760
    },
    {
      "id": "10f2fdeda91d9095",
      "type": "move",
      "order": [
        "10f2fdeda91d9095",
        "567f4e81dcc23273",
        "45a5f145ea1882d4",
        "83f19bdf0b871b26",
        "3f02cac89ef2e6e7",
        "ba5380f0dec201cc",
        "98feb80f33498cf2",
        "622eaee99d6bf57c",
        "ef73e6afbe19fbd5",
        "2f5f0e85a5581700",
        "f5de6a5c3cc37dbf"
      ],
      "date": 1680731057133
    },
    {
      "id": "567f4e81dcc23273",
      "type": "move",
      "order": [
        "567f4e81dcc23273",
        "10f2fdeda91d9095",
        "45a5f145ea1882d4",
        "83f19bdf0b871b26",
        "3f02cac89ef2e6e7",
        "ba5380f0dec201cc",
        "98feb80f33498cf2",
        "622eaee99d6bf57c",
        "ef73e6afbe19fbd5",
        "2f5f0e85a5581700",
        "f5de6a5c3cc37dbf"
      ],
      "date": 1680731060980
    },
    {
      "id": "f5de6a5c3cc37dbf",
      "type": "move",
      "order": [
        "567f4e81dcc23273",
        "10f2fdeda91d9095",
        "45a5f145ea1882d4",
        "83f19bdf0b871b26",
        "3f02cac89ef2e6e7",
        "f5de6a5c3cc37dbf",
        "ba5380f0dec201cc",
        "98feb80f33498cf2",
        "622eaee99d6bf57c",
        "ef73e6afbe19fbd5",
        "2f5f0e85a5581700"
      ],
      "date": 1680731113751
    },
    {
      "type": "remove",
      "id": "2f5f0e85a5581700",
      "date": 1680731118754
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo dictates the below 2 principles to scale development for thousands of developers concurrently working on the same codebase:"
      },
      "date": 1680731149757
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo dictates the below 2 principles to scale development for thousands of developers concurrently working on the same [[Codebase]]:"
      },
      "date": 1680731210138
    },
    {
      "type": "edit",
      "id": "ef73e6afbe19fbd5",
      "item": {
        "type": "paragraph",
        "id": "ef73e6afbe19fbd5",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post]\n\n"
      },
      "date": 1680731266277
    },
    {
      "type": "add",
      "id": "aef883aee2d499d6",
      "item": {
        "type": "paragraph",
        "id": "aef883aee2d499d6",
        "text": "Limbo is live, shared programming. It balances precariously between two principles:\n\n    Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree.\n    No one is allowed to cause others (including users) problems.\n\nBoth principles are ideals to be successively approached.\n\nThe changes that propagate through Limbo are transformations of the abstract syntax tree. This encourages a “make the change easy, then make the easy change” sequence of changes.\n\nThe prohibition against causing other people problems implies quick and reliable local testing of changes (for those changes that might cause problems).\n\nLimbo is an exercise in learning, hence the dogmatic stance that everyone is working on the same program all the way out to production. Imposing the harshest constraints on one dimension will encourage the greatest innovation on another. Even if Limbo turns out to be impractical, attempting to achieve it is certain to provide valuable spin-offs."
      },
      "after": "ef73e6afbe19fbd5",
      "date": 1680731270931
    },
    {
      "type": "edit",
      "id": "aef883aee2d499d6",
      "item": {
        "type": "paragraph",
        "id": "aef883aee2d499d6",
        "text": "Limbo is live, shared programming. It balances precariously between two principles:"
      },
      "date": 1680731304760
    },
    {
      "type": "add",
      "id": "571583d7bffd679c",
      "item": {
        "type": "paragraph",
        "id": "571583d7bffd679c",
        "text": "Everyone is working on (and production is executing) the same program, represented by a single abstract syntax tree."
      },
      "after": "aef883aee2d499d6",
      "date": 1680731310950
    },
    {
      "type": "add",
      "id": "3bd8de78d80a731e",
      "item": {
        "type": "paragraph",
        "id": "3bd8de78d80a731e",
        "text": "No one is allowed to cause others (including users) problems."
      },
      "after": "571583d7bffd679c",
      "date": 1680731313762
    },
    {
      "type": "add",
      "id": "64aa7efb83ef4a5a",
      "item": {
        "type": "paragraph",
        "id": "64aa7efb83ef4a5a",
        "text": "Both principles are ideals to be successively approached."
      },
      "after": "3bd8de78d80a731e",
      "date": 1680731316390
    },
    {
      "type": "add",
      "id": "7a04b51e133e8ec2",
      "item": {
        "type": "paragraph",
        "id": "7a04b51e133e8ec2",
        "text": "The changes that propagate through Limbo are transformations of the abstract syntax tree. This encourages a “make the change easy, then make the easy change” sequence of changes.\n\n"
      },
      "after": "64aa7efb83ef4a5a",
      "date": 1680731323639
    },
    {
      "type": "add",
      "id": "55c297b7bd722adf",
      "item": {
        "type": "paragraph",
        "id": "55c297b7bd722adf",
        "text": "The prohibition against causing other people problems implies quick and reliable local testing of changes (for those changes that might cause problems).\n\n"
      },
      "after": "7a04b51e133e8ec2",
      "date": 1680731332253
    },
    {
      "type": "add",
      "id": "260495df3d1f0027",
      "item": {
        "type": "paragraph",
        "id": "260495df3d1f0027",
        "text": "Limbo is an exercise in learning, hence the dogmatic stance that everyone is working on the same program all the way out to production. Imposing the harshest constraints on one dimension will encourage the greatest innovation on another. Even if Limbo turns out to be impractical, attempting to achieve it is certain to provide valuable spin-offs."
      },
      "after": "55c297b7bd722adf",
      "date": 1680731337583
    },
    {
      "type": "remove",
      "id": "ef73e6afbe19fbd5",
      "date": 1680731430830
    },
    {
      "type": "edit",
      "id": "aef883aee2d499d6",
      "item": {
        "type": "paragraph",
        "id": "aef883aee2d499d6",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post]\n is live, shared programming. It balances precariously between two principles:"
      },
      "date": 1680731438090
    },
    {
      "type": "edit",
      "id": "aef883aee2d499d6",
      "item": {
        "type": "paragraph",
        "id": "aef883aee2d499d6",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances precariously between two principles:"
      },
      "date": 1680731449374
    },
    {
      "type": "edit",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "markdown",
        "id": "98feb80f33498cf2",
        "text": "1. Everyone works on the same executable program, which is represented by a [[syntax tree]].\n1. No one should cause problems for others (including users).\n"
      },
      "date": 1680731649946
    },
    {
      "type": "remove",
      "id": "3bd8de78d80a731e",
      "date": 1680731660495
    },
    {
      "type": "edit",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "markdown",
        "id": "98feb80f33498cf2",
        "text": "1. All work on (and production executes) the same program represented by a single [[Abstract Syntax Tree]].\n1. No one should cause problems for others (including users).\n"
      },
      "date": 1680731726102
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo prescribes the following 2 principles to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
      },
      "date": 1680731847654
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It prescribes the following 2 principles to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
      },
      "date": 1680731904964
    },
    {
      "type": "edit",
      "id": "aef883aee2d499d6",
      "item": {
        "type": "paragraph",
        "id": "aef883aee2d499d6",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances on a fine line between two principles:"
      },
      "date": 1680731944812
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances on a fine line between two principles to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
      },
      "date": 1680731977985
    },
    {
      "type": "remove",
      "id": "aef883aee2d499d6",
      "date": 1680731984432
    },
    {
      "type": "remove",
      "id": "571583d7bffd679c",
      "date": 1680732084628
    },
    {
      "type": "remove",
      "id": "622eaee99d6bf57c",
      "date": 1680732091498
    },
    {
      "type": "edit",
      "id": "64aa7efb83ef4a5a",
      "item": {
        "type": "paragraph",
        "id": "64aa7efb83ef4a5a",
        "text": "Both principles are ideals that must be addressed in sequence."
      },
      "date": 1680732118981
    },
    {
      "type": "edit",
      "id": "7a04b51e133e8ec2",
      "item": {
        "type": "paragraph",
        "id": "7a04b51e133e8ec2",
        "text": "The changes that propagate through Limbo are transformations of the abstract syntax tree. This promotes a sequence of changes along the lines of \"make the change easy, then make the easy change\"."
      },
      "date": 1680732164716
    },
    {
      "type": "edit",
      "id": "55c297b7bd722adf",
      "item": {
        "type": "paragraph",
        "id": "55c297b7bd722adf",
        "text": "The prohibition against causing other people problems implies quick and reliable local testing of changes (for those changes that might cause problems)."
      },
      "date": 1680732180626
    },
    {
      "type": "edit",
      "id": "55c297b7bd722adf",
      "item": {
        "type": "paragraph",
        "id": "55c297b7bd722adf",
        "text": "To prevent others from encountering problems, changes must be tested quickly and reliably in the field (for those changes that could cause problems)."
      },
      "date": 1680732230486
    },
    {
      "type": "edit",
      "id": "260495df3d1f0027",
      "item": {
        "type": "paragraph",
        "id": "260495df3d1f0027",
        "text": "Limbo is an exercise in learning, hence the dogmatic attitude that everyone works on the same program until it goes into production. The most severe constraints in one dimension will foster the greatest innovation in another. Even if Limbo proves impractical, trying to achieve it will certainly have valuable side effects."
      },
      "date": 1680732257574
    },
    {
      "type": "edit",
      "id": "567f4e81dcc23273",
      "item": {
        "type": "paragraph",
        "id": "567f4e81dcc23273",
        "text": "acrobatic dance of West Indian origin, in which the dancer bends the body backwards from the knees and moves under a crossbar with pushing dance steps."
      },
      "date": 1680732349825
    },
    {
      "type": "edit",
      "id": "83f19bdf0b871b26",
      "item": {
        "type": "paragraph",
        "id": "83f19bdf0b871b26",
        "text": "[[Kent Beck]]'s Limbo – Scaling Development. [https://less.works/conferenza/sessions/2019-less-conference-munich-kent-beck-s-limbo-scaling-development-155 page] "
      },
      "date": 1680732512247
    },
    {
      "type": "edit",
      "id": "98feb80f33498cf2",
      "item": {
        "type": "markdown",
        "id": "98feb80f33498cf2",
        "text": "1. All work on (and production executes) the same program represented by a single [[Abstract Syntax Tree]].\n\n1. No one should cause problems for others (including users).\n"
      },
      "date": 1680732565635
    },
    {
      "type": "edit",
      "id": "3f02cac89ef2e6e7",
      "item": {
        "type": "markdown",
        "id": "3f02cac89ef2e6e7",
        "text": "> Limbo is live, shared programming in which the focus of two principles is constantly kept in balance (\"[[Limbo on the Cheap]]\" via \"test && commit || revert\")."
      },
      "date": 1680732685954
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances on a fine line between two principles (\"[[Limbo on the Cheap]]\" via [[TCR]] – \"test && commit || revert\")to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
      },
      "date": 1680733715997
    },
    {
      "type": "edit",
      "id": "ba5380f0dec201cc",
      "item": {
        "type": "paragraph",
        "id": "ba5380f0dec201cc",
        "text": "Limbo [https://medium.com/@kentbeck_7670/limbo-scaling-software-collaboration-afd4f00db4b post] is live, shared programming. It balances on a fine line between two principles (\"[[Limbo on the Cheap]]\" via [[TCR]] – \"test && commit || revert\") to scale development for thousands of developers working concurrently on the same [[Codebase]]:"
      },
      "date": 1680733723797
    },
    {
      "type": "remove",
      "id": "3f02cac89ef2e6e7",
      "date": 1680733746630
    },
    {
      "type": "remove",
      "id": "f5de6a5c3cc37dbf",
      "date": 1680733749503
    },
    {
      "type": "add",
      "id": "48c939297011b34a",
      "item": {
        "type": "paragraph",
        "id": "48c939297011b34a",
        "text": "[[One Rendering Tree||"
      },
      "after": "260495df3d1f0027",
      "date": 1680733819709
    },
    {
      "type": "edit",
      "id": "48c939297011b34a",
      "item": {
        "type": "paragraph",
        "id": "48c939297011b34a",
        "text": "⇒ [[One Rendering Tree]]"
      },
      "date": 1680733853670
    },
    {
      "type": "edit",
      "id": "260495df3d1f0027",
      "item": {
        "type": "paragraph",
        "id": "260495df3d1f0027",
        "text": "Limbo is an exercise in learning, hence the dogmatic attitude that everyone works on the same program until it goes into production. "
      },
      "date": 1680733878274
    },
    {
      "type": "add",
      "id": "0c47a3730a31e4fc",
      "item": {
        "type": "paragraph",
        "id": "0c47a3730a31e4fc",
        "text": "The most severe constraints in one dimension will foster the greatest innovation in another. Even if Limbo proves impractical, trying to achieve it will certainly have valuable side effects."
      },
      "after": "260495df3d1f0027",
      "date": 1680733878947
    },
    {
      "id": "48c939297011b34a",
      "type": "move",
      "order": [
        "567f4e81dcc23273",
        "10f2fdeda91d9095",
        "45a5f145ea1882d4",
        "83f19bdf0b871b26",
        "ba5380f0dec201cc",
        "98feb80f33498cf2",
        "64aa7efb83ef4a5a",
        "7a04b51e133e8ec2",
        "55c297b7bd722adf",
        "260495df3d1f0027",
        "48c939297011b34a",
        "0c47a3730a31e4fc"
      ],
      "date": 1680733881464
    },
    {
      "type": "edit",
      "id": "0c47a3730a31e4fc",
      "item": {
        "type": "paragraph",
        "id": "0c47a3730a31e4fc",
        "text": "The strongest constraints in one dimension will foster the greatest innovation in another. Even if Limbo proves impractical, trying to achieve it will certainly have valuable side effects."
      },
      "date": 1680733931562
    },
    {
      "type": "edit",
      "id": "567f4e81dcc23273",
      "item": {
        "type": "paragraph",
        "id": "567f4e81dcc23273",
        "text": "Acrobatic dance of West Indian origin, in which the dancer bends the body backwards from the knees and moves under a crossbar with pushing dance steps."
      },
      "date": 1680733969840
    },
    {
      "type": "remove",
      "id": "45a5f145ea1882d4",
      "date": 1680733987517
    }
  ]
}