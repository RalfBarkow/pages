{
  "title": "Observers",
  "story": [
    {
      "type": "markdown",
      "id": "550bce775583132d",
      "text": "# *Observers*, Reference Frames and Emergent Laws"
    },
    {
      "type": "paragraph",
      "id": "ef325e91763aa771",
      "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an [[Irreducible Computation]], but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads."
    },
    {
      "type": "paragraph",
      "id": "6b57632cfe11a49f",
      "text": "\nBut imagine you’re trying to see what’s going on in a multicomputational system. In principle you could keep track of the behaviors on all the threads as well as the complicated interweavings between them. But a crucial fact about us as observers is that we don’t normally do that. Instead, we normally combine things so that we can describe the system as somehow just progressively “evolving through time”.\n\nThere might in principle be some alien intelligence that routinely keeps track of all the different threads. But we humans—and the descriptions we use of the world—always tend to sequentialize things. In other words, in order to understand “what’s happening in the world” we try to approximate what might underneath be multicomputational by something that is “merely computational”. Instead of following lots of different “local times” on different threads, we try to think about things in terms of a single “global time”.\n\nAnd this isn’t just something we do “for convenience”; the tendency to “sequentialize” like this is directly related to our perception that we have a single thread of experience, which seems to be a key defining feature of our notion of consciousness and our general way of relating to the world.\n\nBut how should we line up different threads of time in a multicomputational system? A crucial point is that there typically isn’t just “one natural way” to do it. Instead, there are many possible choices. And it’s “up to the observer” which one to use—and therefore “how to parse” the behavior of the multicomputational system.\n\nThe underlying structure of the multiway system puts constraints on what’s possible, but typically there are many ways of choosing a sequence of “time slices” that successively sample the behavior of the system. Here are two choices of how to do this for the multiway system above: […]"
    },
    {
      "type": "paragraph",
      "id": "a0c025ed42974a57",
      "text": "In both cases the underlying multicomputational behavior is the same. But the “experience” of the observer is different. And—taking a term used in relativity theory that we’ll later see captures exactly the same idea—we can consider the different choices of time slices as different “reference frames” from which to view what’s going on.\n\nThe reference frame isn’t something intrinsic to the underlying multicomputational system (though the system does put constraints on what reference frames are possible). Instead, the reference frame is just something the observer “uses to understand the system”. But as soon as an observer sequentializes time—as I believe we characteristically do—then essentially by definition they must be using some reference frame.\n\nIn the ordinary computational paradigm there are fundamental limits on our prediction or understanding of the behavior of systems, associated with the phenomenon of computational irreducibility. And things get even more difficult when it comes to multicomputational systems—where not only can individual threads of history show computational irreducibility, but also these threads can interweave in computationally irreducible ways.\n\nBut what will an observer with a certain reference frame perceive about the multicomputational system? Well, it depends on the reference frame. And for example one might imagine that one could have a very elaborate reference frame that somehow “untangles” the computational irreducibility associated with the weaving of different threads and delivers some arbitrarily different “perception” of what’s going on.\n\nBut now there’s another crucial point: actual observers such as us don’t use arbitrary reference frames; they only use computationally bounded ones. In other words, there’s a limit to how complicated the reference frame can be, and how much computation it can effectively serve to “decode”.\n\n"
    },
    {
      "type": "paragraph",
      "id": "fc729b60d0e70a51",
      "text": "If the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems."
    },
    {
      "type": "paragraph",
      "id": "6bcdc8566513527a",
      "text": "\nBy the way, we’ve discussed sequentialization in time separately from computational boundedness. But in some sense sequentialization in time is actually just a particular example of computational boundedness that happens to be very obvious and significant for us humans. And potentially some alien intelligence could act as a computationally bounded observer with some other way of “simplifying time”.\n\nBut, OK, so we have a multicomputational system that’s behaving in some computationally irreducible way. And we have a computationally bounded observer who’s “parsing” the multicomputational system using particular reference frames. What will that observer perceive about the behavior of the system?\n\nWell, here’s the crucial and surprising thing that’s emerged from our Physics Project: with the setup for multicomputational systems that we’ve described, the observer will almost inevitably perceive the system to follow laws that are simple enough to be captured by mathematical equations. And in the case of physics these laws basically correspond in different situations to general relativity and to quantum mechanics.\n\nIn other words, despite the complexity of the underlying behavior of the multicomputational system, the comparative simplicity of the observer makes them inevitably sample only certain “simple aspects” of the whole behavior of the multicomputational system. In computational terms, the observer is perceiving a computationally reducible slice of the whole computationally irreducible behavior of the system.\n\nBut what exactly will they perceive? And how much does it depend on the details of the underlying computationally irreducible behavior? Well, here’s something very crucial—and surprising—about multicomputational systems: there’s a lot that can be said quite generically about what observers will perceive, largely independent of the details of underlying computationally irreducible behavior.\n\nIt’s deeply related to (but more general than) the result in thermodynamics and statistical physics that there are generic laws for, say, the perceived behavior of gases. At an underlying level, gases consist of large numbers of molecules with complicated and computationally irreducible patterns of motion. But a computationally bounded observer perceives only certain “coarse-grained” features—which don’t depend on the underlying properties of the molecules, and instead correspond to the familiar generic laws for gases.\n\nAnd so it is in general with multicomputational systems: that quite independent of the details of underlying computationally irreducible behavior there are generic (“computationally reducible”) laws that computationally bounded observers will perceive. The specifics of those laws will depend on aspects of the observer (like their sequentialization of time). But the fact that there will be such laws seems to be an essentially inevitable consequence of the core structure of multicomputational systems.\n\nAs soon as one imagines that events can occur “whenever and wherever” rules allow, this inevitably leads to a kind of inexorable combinatorial structure of interwoven “threads of time” that necessarily leads to certain “generic perceptions” by computationally bounded observers. There can be great complexity in the underlying behavior of multicomputational systems. But there’s a certain inevitable overall structure that gets revealed when observers sample the systems. And that inevitable structure can manifest itself in fairly simple laws for certain aspects of the system.\n\nA characteristic feature of systems based on the ordinary computational paradigm is the appearance of computational irreducibility and complex behavior. And with such systems it’s perfectly possible to have computationally bounded observers who sample this complex behavior and reduce it to rather simple features. But what tends to happen is that rather little is left; the observer has in a sense crushed everything out. (Imagine, say, an observer averaging the colors of a complex-enough-to-seem-random sequence of black and white cells to a simple uniform gray.)\n\nBut with a multicomputational system, things work differently. Because there’s enough inevitable structure in the fundamental multicomputational setup of the system that even when it’s sampled by a somewhat arbitrary observer there are still nontrivial effective laws that remain. And in the case of fundamental physics we can identify these laws as general relativity and quantum mechanics.\n\nBut the point is that because these laws depend only on the fundamental setup of the system, and on certain basic properties of the observer, we can expect that they will apply quite generally to multicomputational systems. Or, in other words, that we can expect to identify overall laws in basically any multicomputational system—and those laws will in effect be direct analogs of general relativity and quantum mechanics.\n\nIn ordinary computational systems there’s a very powerful general result: the Principle of Computational Equivalence, which leads to computational irreducibility. And this result also carries over to multicomputational systems. But in multicomputational systems—which basically inevitably have to be sampled by an observer—there’s an additional result: that from the fundamental structure of the system (and the observer) there’s a certain amount of computational reducibility, which leads to certain specific overall laws of behavior.\n\nWe might have thought that as we made the underlying structure of models more complicated—going from the ordinary computational paradigm to the multicomputational one—we’d inevitably have less to say about how systems generally behave. But actually—basically because of the interplay of the observer with the fundamental structure of the system—it’s the exact opposite. And that’s very important when it comes to theoretical science. Because it means that systems that seemed like they would show only unreachably complex behavior can actually have features that are described by definite overall laws that are potentially within reach even of the mathematical paradigm.\n\nOr, in other words, if one analyzes things correctly through the multicomputational paradigm, it’s potentially possible to find overall laws even in situations and fields where this seemed hopeless before."
    },
    {
      "type": "paragraph",
      "id": "3b511e3e95a4b2e3",
      "text": "⇒ [[Leveraging Ideas from Physics]]"
    },
    {
      "type": "graphviz",
      "id": "80a02bef28e74bce",
      "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^⇒/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^⇒/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE"
    },
    {
      "type": "pagefold",
      "id": "31f7aefe02a6708b",
      "text": "~"
    },
    {
      "type": "reference",
      "id": "21167b880a5584a1",
      "site": "frame.wiki.dbbs.co",
      "slug": "changing-frames",
      "title": "Changing Frames",
      "text": "Perception depends on context. From one point of view the way seems impassible. From another point of view the path is revealed. Each view is limited by its own frame. Changing frames changes perception. Changing perception changes both understanding and action."
    },
    {
      "type": "reference",
      "id": "c0003595d4b32312",
      "site": "frame.wiki.dbbs.co",
      "slug": "the-art-of-painting",
      "title": "The Art of Painting",
      "text": "_The Art of Painting (Dutch: Allegorie op de schilderkunst)_, is a 17th-century oil painting by Netherlands painter Johannes Vermeer.  [https://en.wikipedia.org/wiki/The_Art_of_Painting wikipedia]"
    },
    {
      "type": "reference",
      "id": "3ed3a2cfdf7c8857",
      "site": "frame.wiki.dbbs.co",
      "slug": "man-drawing-a-lute",
      "title": "Man Drawing a Lute",
      "text": "\"Man Drawing a Lute\", woodcut by Albrecht Dürer (1525) Location: Metropolitan Museum of Art, New York [https://commons.wikimedia.org/wiki/File:D%C3%BCrer_-_Man_Drawing_a_Lute.jpg wikipedia]"
    },
    {
      "type": "reference",
      "id": "7a0ae629b7f14a34",
      "site": "frame.wiki.dbbs.co",
      "slug": "codex-atlanticus-f-5-recto",
      "title": "Codex Atlanticus f. 5 recto",
      "text": "Drawings by Leonardo da Vinci. In the centre a bellows activated hydraulic pump; on the right: a man drawing an armillary sphere using a perspectograph. [https://www.ambrosiana.it/en/opere/atlantic-codex-codex-atlanticus-f-5-recto/ museum] [http://codex-atlanticus.it/#/Detail?detail=5 digital codex]"
    },
    {
      "type": "reference",
      "id": "e978fbdcd89ec768",
      "site": "frame.wiki.dbbs.co",
      "slug": "the-perspectival-eye",
      "title": "The Perspectival Eye",
      "text": "Heralded as “the most important event of the Renaissance”, the invention of linear perspective in the Italian quattrocento occupies a pivotal role in the intertwined processes of rationalization of vision and mathematization of space that constitutes one of the defining features of historical modernity. This process has unlocked formidable new sources of human knowledge and power over the world. Yet it also has simultaneously propelled a movement disembedding the activities of perception and spatial reasoning from their exclusive biological substrate to "
    },
    {
      "type": "reference",
      "id": "aee1d33e3c7fce80",
      "site": "frame.wiki.dbbs.co",
      "slug": "principles-of-linear-perspective",
      "title": "Principles of Linear Perspective",
      "text": "Brook Taylor, New Principles of Linear Perspective, p. 9  [https://www.google.com/books/edition/_/m0cEAAAAYAAJ?hl=en&gbpv=1&pg=PA9 google books]"
    },
    {
      "type": "reference",
      "id": "9b71281ee84bb96b",
      "site": "frame.wiki.dbbs.co",
      "slug": "les-perspecteurs-plate-2",
      "title": "Les Perspecteurs Plate 2",
      "text": "Abraham Bosse [http://expositions.bnf.fr/bosse/grand/246.htm site]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Observers",
        "story": []
      },
      "date": 1649830698587
    },
    {
      "item": {
        "type": "factory",
        "id": "550bce775583132d"
      },
      "id": "550bce775583132d",
      "type": "add",
      "date": 1649830705989
    },
    {
      "type": "edit",
      "id": "550bce775583132d",
      "item": {
        "type": "markdown",
        "id": "550bce775583132d",
        "text": "# [[Observers]], Reference Frames and Emergent Laws"
      },
      "date": 1649830714209
    },
    {
      "item": {
        "type": "factory",
        "id": "ef325e91763aa771"
      },
      "id": "ef325e91763aa771",
      "type": "add",
      "after": "550bce775583132d",
      "date": 1649830740750
    },
    {
      "type": "edit",
      "id": "ef325e91763aa771",
      "item": {
        "type": "paragraph",
        "id": "ef325e91763aa771",
        "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an irreducible computation, but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads.\n\nBut imagine you’re trying to see what’s going on in a multicomputational system. In principle you could keep track of the behaviors on all the threads as well as the complicated interweavings between them. But a crucial fact about us as observers is that we don’t normally do that. Instead, we normally combine things so that we can describe the system as somehow just progressively “evolving through time”.\n\nThere might in principle be some alien intelligence that routinely keeps track of all the different threads. But we humans—and the descriptions we use of the world—always tend to sequentialize things. In other words, in order to understand “what’s happening in the world” we try to approximate what might underneath be multicomputational by something that is “merely computational”. Instead of following lots of different “local times” on different threads, we try to think about things in terms of a single “global time”.\n\nAnd this isn’t just something we do “for convenience”; the tendency to “sequentialize” like this is directly related to our perception that we have a single thread of experience, which seems to be a key defining feature of our notion of consciousness and our general way of relating to the world.\n\nBut how should we line up different threads of time in a multicomputational system? A crucial point is that there typically isn’t just “one natural way” to do it. Instead, there are many possible choices. And it’s “up to the observer” which one to use—and therefore “how to parse” the behavior of the multicomputational system.\n\nThe underlying structure of the multiway system puts constraints on what’s possible, but typically there are many ways of choosing a sequence of “time slices” that successively sample the behavior of the system. Here are two choices of how to do this for the multiway system above: […]"
      },
      "date": 1649830744705
    },
    {
      "item": {
        "type": "factory",
        "id": "a0c025ed42974a57"
      },
      "id": "a0c025ed42974a57",
      "type": "add",
      "after": "ef325e91763aa771",
      "date": 1649830848027
    },
    {
      "type": "edit",
      "id": "a0c025ed42974a57",
      "item": {
        "type": "paragraph",
        "id": "a0c025ed42974a57",
        "text": "In both cases the underlying multicomputational behavior is the same. But the “experience” of the observer is different. And—taking a term used in relativity theory that we’ll later see captures exactly the same idea—we can consider the different choices of time slices as different “reference frames” from which to view what’s going on.\n\nThe reference frame isn’t something intrinsic to the underlying multicomputational system (though the system does put constraints on what reference frames are possible). Instead, the reference frame is just something the observer “uses to understand the system”. But as soon as an observer sequentializes time—as I believe we characteristically do—then essentially by definition they must be using some reference frame.\n\nIn the ordinary computational paradigm there are fundamental limits on our prediction or understanding of the behavior of systems, associated with the phenomenon of computational irreducibility. And things get even more difficult when it comes to multicomputational systems—where not only can individual threads of history show computational irreducibility, but also these threads can interweave in computationally irreducible ways.\n\nBut what will an observer with a certain reference frame perceive about the multicomputational system? Well, it depends on the reference frame. And for example one might imagine that one could have a very elaborate reference frame that somehow “untangles” the computational irreducibility associated with the weaving of different threads and delivers some arbitrarily different “perception” of what’s going on.\n\nBut now there’s another crucial point: actual observers such as us don’t use arbitrary reference frames; they only use computationally bounded ones. In other words, there’s a limit to how complicated the reference frame can be, and how much computation it can effectively serve to “decode”.\n\nIf the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems.\n\nBy the way, we’ve discussed sequentialization in time separately from computational boundedness. But in some sense sequentialization in time is actually just a particular example of computational boundedness that happens to be very obvious and significant for us humans. And potentially some alien intelligence could act as a computationally bounded observer with some other way of “simplifying time”.\n\nBut, OK, so we have a multicomputational system that’s behaving in some computationally irreducible way. And we have a computationally bounded observer who’s “parsing” the multicomputational system using particular reference frames. What will that observer perceive about the behavior of the system?\n\nWell, here’s the crucial and surprising thing that’s emerged from our Physics Project: with the setup for multicomputational systems that we’ve described, the observer will almost inevitably perceive the system to follow laws that are simple enough to be captured by mathematical equations. And in the case of physics these laws basically correspond in different situations to general relativity and to quantum mechanics.\n\nIn other words, despite the complexity of the underlying behavior of the multicomputational system, the comparative simplicity of the observer makes them inevitably sample only certain “simple aspects” of the whole behavior of the multicomputational system. In computational terms, the observer is perceiving a computationally reducible slice of the whole computationally irreducible behavior of the system.\n\nBut what exactly will they perceive? And how much does it depend on the details of the underlying computationally irreducible behavior? Well, here’s something very crucial—and surprising—about multicomputational systems: there’s a lot that can be said quite generically about what observers will perceive, largely independent of the details of underlying computationally irreducible behavior.\n\nIt’s deeply related to (but more general than) the result in thermodynamics and statistical physics that there are generic laws for, say, the perceived behavior of gases. At an underlying level, gases consist of large numbers of molecules with complicated and computationally irreducible patterns of motion. But a computationally bounded observer perceives only certain “coarse-grained” features—which don’t depend on the underlying properties of the molecules, and instead correspond to the familiar generic laws for gases.\n\nAnd so it is in general with multicomputational systems: that quite independent of the details of underlying computationally irreducible behavior there are generic (“computationally reducible”) laws that computationally bounded observers will perceive. The specifics of those laws will depend on aspects of the observer (like their sequentialization of time). But the fact that there will be such laws seems to be an essentially inevitable consequence of the core structure of multicomputational systems.\n\nAs soon as one imagines that events can occur “whenever and wherever” rules allow, this inevitably leads to a kind of inexorable combinatorial structure of interwoven “threads of time” that necessarily leads to certain “generic perceptions” by computationally bounded observers. There can be great complexity in the underlying behavior of multicomputational systems. But there’s a certain inevitable overall structure that gets revealed when observers sample the systems. And that inevitable structure can manifest itself in fairly simple laws for certain aspects of the system.\n\nA characteristic feature of systems based on the ordinary computational paradigm is the appearance of computational irreducibility and complex behavior. And with such systems it’s perfectly possible to have computationally bounded observers who sample this complex behavior and reduce it to rather simple features. But what tends to happen is that rather little is left; the observer has in a sense crushed everything out. (Imagine, say, an observer averaging the colors of a complex-enough-to-seem-random sequence of black and white cells to a simple uniform gray.)\n\nBut with a multicomputational system, things work differently. Because there’s enough inevitable structure in the fundamental multicomputational setup of the system that even when it’s sampled by a somewhat arbitrary observer there are still nontrivial effective laws that remain. And in the case of fundamental physics we can identify these laws as general relativity and quantum mechanics.\n\nBut the point is that because these laws depend only on the fundamental setup of the system, and on certain basic properties of the observer, we can expect that they will apply quite generally to multicomputational systems. Or, in other words, that we can expect to identify overall laws in basically any multicomputational system—and those laws will in effect be direct analogs of general relativity and quantum mechanics.\n\nIn ordinary computational systems there’s a very powerful general result: the Principle of Computational Equivalence, which leads to computational irreducibility. And this result also carries over to multicomputational systems. But in multicomputational systems—which basically inevitably have to be sampled by an observer—there’s an additional result: that from the fundamental structure of the system (and the observer) there’s a certain amount of computational reducibility, which leads to certain specific overall laws of behavior.\n\nWe might have thought that as we made the underlying structure of models more complicated—going from the ordinary computational paradigm to the multicomputational one—we’d inevitably have less to say about how systems generally behave. But actually—basically because of the interplay of the observer with the fundamental structure of the system—it’s the exact opposite. And that’s very important when it comes to theoretical science. Because it means that systems that seemed like they would show only unreachably complex behavior can actually have features that are described by definite overall laws that are potentially within reach even of the mathematical paradigm.\n\nOr, in other words, if one analyzes things correctly through the multicomputational paradigm, it’s potentially possible to find overall laws even in situations and fields where this seemed hopeless before."
      },
      "date": 1649830849361
    },
    {
      "type": "edit",
      "id": "a0c025ed42974a57",
      "item": {
        "type": "paragraph",
        "id": "a0c025ed42974a57",
        "text": "In both cases the underlying multicomputational behavior is the same. But the “experience” of the observer is different. And—taking a term used in relativity theory that we’ll later see captures exactly the same idea—we can consider the different choices of time slices as different “reference frames” from which to view what’s going on.\n\nThe reference frame isn’t something intrinsic to the underlying multicomputational system (though the system does put constraints on what reference frames are possible). Instead, the reference frame is just something the observer “uses to understand the system”. But as soon as an observer sequentializes time—as I believe we characteristically do—then essentially by definition they must be using some reference frame.\n\nIn the ordinary computational paradigm there are fundamental limits on our prediction or understanding of the behavior of systems, associated with the phenomenon of computational irreducibility. And things get even more difficult when it comes to multicomputational systems—where not only can individual threads of history show computational irreducibility, but also these threads can interweave in computationally irreducible ways.\n\nBut what will an observer with a certain reference frame perceive about the multicomputational system? Well, it depends on the reference frame. And for example one might imagine that one could have a very elaborate reference frame that somehow “untangles” the computational irreducibility associated with the weaving of different threads and delivers some arbitrarily different “perception” of what’s going on.\n\nBut now there’s another crucial point: actual observers such as us don’t use arbitrary reference frames; they only use computationally bounded ones. In other words, there’s a limit to how complicated the reference frame can be, and how much computation it can effectively serve to “decode”.\n\n"
      },
      "date": 1649831162136
    },
    {
      "type": "add",
      "id": "fc729b60d0e70a51",
      "item": {
        "type": "paragraph",
        "id": "fc729b60d0e70a51",
        "text": "If the observer is somehow embedded inside the multicomputational system (as must be the case if, for example, the system corresponds to the fundamental physics of our whole universe), then it’s necessary and inevitable that the observer (being a subpart of the whole system)—and the reference frames they use—must be computationally bounded. But the notion of a computationally bounded observer is actually something much more general—and as we’ll see in a series of examples later—it’s a central part of multicomputational models for all sorts of systems."
      },
      "after": "a0c025ed42974a57",
      "date": 1649831169271
    },
    {
      "type": "add",
      "id": "6bcdc8566513527a",
      "item": {
        "type": "paragraph",
        "id": "6bcdc8566513527a",
        "text": "\nBy the way, we’ve discussed sequentialization in time separately from computational boundedness. But in some sense sequentialization in time is actually just a particular example of computational boundedness that happens to be very obvious and significant for us humans. And potentially some alien intelligence could act as a computationally bounded observer with some other way of “simplifying time”.\n\nBut, OK, so we have a multicomputational system that’s behaving in some computationally irreducible way. And we have a computationally bounded observer who’s “parsing” the multicomputational system using particular reference frames. What will that observer perceive about the behavior of the system?\n\nWell, here’s the crucial and surprising thing that’s emerged from our Physics Project: with the setup for multicomputational systems that we’ve described, the observer will almost inevitably perceive the system to follow laws that are simple enough to be captured by mathematical equations. And in the case of physics these laws basically correspond in different situations to general relativity and to quantum mechanics.\n\nIn other words, despite the complexity of the underlying behavior of the multicomputational system, the comparative simplicity of the observer makes them inevitably sample only certain “simple aspects” of the whole behavior of the multicomputational system. In computational terms, the observer is perceiving a computationally reducible slice of the whole computationally irreducible behavior of the system.\n\nBut what exactly will they perceive? And how much does it depend on the details of the underlying computationally irreducible behavior? Well, here’s something very crucial—and surprising—about multicomputational systems: there’s a lot that can be said quite generically about what observers will perceive, largely independent of the details of underlying computationally irreducible behavior.\n\nIt’s deeply related to (but more general than) the result in thermodynamics and statistical physics that there are generic laws for, say, the perceived behavior of gases. At an underlying level, gases consist of large numbers of molecules with complicated and computationally irreducible patterns of motion. But a computationally bounded observer perceives only certain “coarse-grained” features—which don’t depend on the underlying properties of the molecules, and instead correspond to the familiar generic laws for gases.\n\nAnd so it is in general with multicomputational systems: that quite independent of the details of underlying computationally irreducible behavior there are generic (“computationally reducible”) laws that computationally bounded observers will perceive. The specifics of those laws will depend on aspects of the observer (like their sequentialization of time). But the fact that there will be such laws seems to be an essentially inevitable consequence of the core structure of multicomputational systems.\n\nAs soon as one imagines that events can occur “whenever and wherever” rules allow, this inevitably leads to a kind of inexorable combinatorial structure of interwoven “threads of time” that necessarily leads to certain “generic perceptions” by computationally bounded observers. There can be great complexity in the underlying behavior of multicomputational systems. But there’s a certain inevitable overall structure that gets revealed when observers sample the systems. And that inevitable structure can manifest itself in fairly simple laws for certain aspects of the system.\n\nA characteristic feature of systems based on the ordinary computational paradigm is the appearance of computational irreducibility and complex behavior. And with such systems it’s perfectly possible to have computationally bounded observers who sample this complex behavior and reduce it to rather simple features. But what tends to happen is that rather little is left; the observer has in a sense crushed everything out. (Imagine, say, an observer averaging the colors of a complex-enough-to-seem-random sequence of black and white cells to a simple uniform gray.)\n\nBut with a multicomputational system, things work differently. Because there’s enough inevitable structure in the fundamental multicomputational setup of the system that even when it’s sampled by a somewhat arbitrary observer there are still nontrivial effective laws that remain. And in the case of fundamental physics we can identify these laws as general relativity and quantum mechanics.\n\nBut the point is that because these laws depend only on the fundamental setup of the system, and on certain basic properties of the observer, we can expect that they will apply quite generally to multicomputational systems. Or, in other words, that we can expect to identify overall laws in basically any multicomputational system—and those laws will in effect be direct analogs of general relativity and quantum mechanics.\n\nIn ordinary computational systems there’s a very powerful general result: the Principle of Computational Equivalence, which leads to computational irreducibility. And this result also carries over to multicomputational systems. But in multicomputational systems—which basically inevitably have to be sampled by an observer—there’s an additional result: that from the fundamental structure of the system (and the observer) there’s a certain amount of computational reducibility, which leads to certain specific overall laws of behavior.\n\nWe might have thought that as we made the underlying structure of models more complicated—going from the ordinary computational paradigm to the multicomputational one—we’d inevitably have less to say about how systems generally behave. But actually—basically because of the interplay of the observer with the fundamental structure of the system—it’s the exact opposite. And that’s very important when it comes to theoretical science. Because it means that systems that seemed like they would show only unreachably complex behavior can actually have features that are described by definite overall laws that are potentially within reach even of the mathematical paradigm.\n\nOr, in other words, if one analyzes things correctly through the multicomputational paradigm, it’s potentially possible to find overall laws even in situations and fields where this seemed hopeless before."
      },
      "after": "fc729b60d0e70a51",
      "date": 1649831170090
    },
    {
      "type": "fork",
      "date": 1649831194808
    },
    {
      "item": {
        "type": "factory",
        "id": "3b511e3e95a4b2e3"
      },
      "id": "3b511e3e95a4b2e3",
      "type": "add",
      "after": "6bcdc8566513527a",
      "date": 1649831640858
    },
    {
      "type": "edit",
      "id": "3b511e3e95a4b2e3",
      "item": {
        "type": "paragraph",
        "id": "3b511e3e95a4b2e3",
        "text": "[[Leveraging Ideas from Physics]]"
      },
      "date": 1649831644746
    },
    {
      "type": "edit",
      "id": "3b511e3e95a4b2e3",
      "item": {
        "type": "paragraph",
        "id": "3b511e3e95a4b2e3",
        "text": "⇒ [[Leveraging Ideas from Physics]]"
      },
      "date": 1649831664691
    },
    {
      "type": "edit",
      "id": "ef325e91763aa771",
      "item": {
        "type": "paragraph",
        "id": "ef325e91763aa771",
        "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an irreducible computation, but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads."
      },
      "date": 1651151932083
    },
    {
      "type": "add",
      "id": "6b57632cfe11a49f",
      "item": {
        "type": "paragraph",
        "id": "6b57632cfe11a49f",
        "text": "\nBut imagine you’re trying to see what’s going on in a multicomputational system. In principle you could keep track of the behaviors on all the threads as well as the complicated interweavings between them. But a crucial fact about us as observers is that we don’t normally do that. Instead, we normally combine things so that we can describe the system as somehow just progressively “evolving through time”.\n\nThere might in principle be some alien intelligence that routinely keeps track of all the different threads. But we humans—and the descriptions we use of the world—always tend to sequentialize things. In other words, in order to understand “what’s happening in the world” we try to approximate what might underneath be multicomputational by something that is “merely computational”. Instead of following lots of different “local times” on different threads, we try to think about things in terms of a single “global time”.\n\nAnd this isn’t just something we do “for convenience”; the tendency to “sequentialize” like this is directly related to our perception that we have a single thread of experience, which seems to be a key defining feature of our notion of consciousness and our general way of relating to the world.\n\nBut how should we line up different threads of time in a multicomputational system? A crucial point is that there typically isn’t just “one natural way” to do it. Instead, there are many possible choices. And it’s “up to the observer” which one to use—and therefore “how to parse” the behavior of the multicomputational system.\n\nThe underlying structure of the multiway system puts constraints on what’s possible, but typically there are many ways of choosing a sequence of “time slices” that successively sample the behavior of the system. Here are two choices of how to do this for the multiway system above: […]"
      },
      "after": "ef325e91763aa771",
      "date": 1651151970056
    },
    {
      "type": "edit",
      "id": "ef325e91763aa771",
      "item": {
        "type": "paragraph",
        "id": "ef325e91763aa771",
        "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an [[irreducible computation]], but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads."
      },
      "date": 1651151980689
    },
    {
      "item": {
        "type": "factory",
        "id": "80a02bef28e74bce"
      },
      "id": "80a02bef28e74bce",
      "type": "add",
      "after": "3b511e3e95a4b2e3",
      "date": 1652029632821
    },
    {
      "type": "edit",
      "id": "80a02bef28e74bce",
      "item": {
        "type": "graphviz",
        "id": "80a02bef28e74bce",
        "text": "DOT strict digraph\n  \nrankdir=LR\n\n  node [style=filled fillcolor=lightyellow penwidth=3 color=black fontname=\"Helvetica\"]\n  HERE NODE\n\n    node [style=filled fillcolor=lightblue]\n    WHERE /^⇒/\n      LINKS HERE -> NODE\n          node [style=filled fillcolor=white]\n          HERE NODE\n            WHERE /^⇒/\n              LINKS HERE -> NODE\n\n    node [style=filled fillcolor=white penwidth=3 color=black]\n    LINKS HERE -> NODE\n       node [style=filled fillcolor=white penwidth=1 color=black]\n       HERE NODE\n         LINKS HERE -> NODE"
      },
      "date": 1652029635712
    },
    {
      "type": "edit",
      "id": "550bce775583132d",
      "item": {
        "type": "markdown",
        "id": "550bce775583132d",
        "text": "# *Observers*, Reference Frames and Emergent Laws"
      },
      "date": 1664207507866
    },
    {
      "type": "edit",
      "id": "ef325e91763aa771",
      "item": {
        "type": "paragraph",
        "id": "ef325e91763aa771",
        "text": "In the mathematical paradigm one expects to immediately “read off” from a model what happens at a particular time. In the computational paradigm one might have to run an [[Irreducible Computation]], but then one can still “read off” what happens after a certain time. But in the multicomputational paradigm, it’s more complicated—because now there are multiple threads of time, with no intrinsic way to line up “what happens when” across different threads."
      },
      "date": 1664207625189
    },
    {
      "item": {
        "type": "factory",
        "id": "21167b880a5584a1"
      },
      "id": "21167b880a5584a1",
      "type": "add",
      "after": "80a02bef28e74bce",
      "date": 1664207775421
    },
    {
      "type": "edit",
      "id": "21167b880a5584a1",
      "item": {
        "type": "reference",
        "id": "21167b880a5584a1",
        "site": "frame.wiki.dbbs.co",
        "slug": "changing-frames",
        "title": "Changing Frames",
        "text": "Perception depends on context. From one point of view the way seems impassible. From another point of view the path is revealed. Each view is limited by its own frame. Changing frames changes perception. Changing perception changes both understanding and action."
      },
      "date": 1664207791376
    },
    {
      "item": {
        "type": "factory",
        "id": "9b71281ee84bb96b"
      },
      "id": "9b71281ee84bb96b",
      "type": "add",
      "after": "21167b880a5584a1",
      "date": 1664207794316
    },
    {
      "type": "edit",
      "id": "9b71281ee84bb96b",
      "item": {
        "type": "reference",
        "id": "9b71281ee84bb96b",
        "site": "frame.wiki.dbbs.co",
        "slug": "les-perspecteurs-plate-2",
        "title": "Les Perspecteurs Plate 2",
        "text": "Abraham Bosse [http://expositions.bnf.fr/bosse/grand/246.htm site]"
      },
      "date": 1664207799552
    },
    {
      "item": {
        "type": "factory",
        "id": "31f7aefe02a6708b"
      },
      "id": "31f7aefe02a6708b",
      "type": "add",
      "after": "9b71281ee84bb96b",
      "date": 1664207802005
    },
    {
      "type": "edit",
      "id": "31f7aefe02a6708b",
      "item": {
        "type": "pagefold",
        "id": "31f7aefe02a6708b",
        "text": "~"
      },
      "date": 1664207805958
    },
    {
      "id": "31f7aefe02a6708b",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "9b71281ee84bb96b"
      ],
      "date": 1664207808362
    },
    {
      "item": {
        "type": "factory",
        "id": "e978fbdcd89ec768"
      },
      "id": "e978fbdcd89ec768",
      "type": "add",
      "after": "9b71281ee84bb96b",
      "date": 1664207836295
    },
    {
      "type": "edit",
      "id": "e978fbdcd89ec768",
      "item": {
        "type": "reference",
        "id": "e978fbdcd89ec768",
        "site": "frame.wiki.dbbs.co",
        "slug": "the-perspectival-eye",
        "title": "The Perspectival Eye",
        "text": "Heralded as “the most important event of the Renaissance”, the invention of linear perspective in the Italian quattrocento occupies a pivotal role in the intertwined processes of rationalization of vision and mathematization of space that constitutes one of the defining features of historical modernity. This process has unlocked formidable new sources of human knowledge and power over the world. Yet it also has simultaneously propelled a movement disembedding the activities of perception and spatial reasoning from their exclusive biological substrate to "
      },
      "date": 1664207840229
    },
    {
      "item": {
        "type": "factory",
        "id": "aee1d33e3c7fce80"
      },
      "id": "aee1d33e3c7fce80",
      "type": "add",
      "after": "e978fbdcd89ec768",
      "date": 1664207852565
    },
    {
      "type": "edit",
      "id": "aee1d33e3c7fce80",
      "item": {
        "type": "reference",
        "id": "aee1d33e3c7fce80",
        "site": "frame.wiki.dbbs.co",
        "slug": "principles-of-linear-perspective",
        "title": "Principles of Linear Perspective",
        "text": "Brook Taylor, New Principles of Linear Perspective, p. 9  [https://www.google.com/books/edition/_/m0cEAAAAYAAJ?hl=en&gbpv=1&pg=PA9 google books]"
      },
      "date": 1664207855824
    },
    {
      "item": {
        "type": "factory",
        "id": "c0003595d4b32312"
      },
      "id": "c0003595d4b32312",
      "type": "add",
      "after": "aee1d33e3c7fce80",
      "date": 1664207873180
    },
    {
      "id": "c0003595d4b32312",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "c0003595d4b32312",
        "9b71281ee84bb96b",
        "e978fbdcd89ec768",
        "aee1d33e3c7fce80"
      ],
      "date": 1664207876470
    },
    {
      "type": "edit",
      "id": "c0003595d4b32312",
      "item": {
        "type": "reference",
        "id": "c0003595d4b32312",
        "site": "frame.wiki.dbbs.co",
        "slug": "the-art-of-painting",
        "title": "The Art of Painting",
        "text": "_The Art of Painting (Dutch: Allegorie op de schilderkunst)_, is a 17th-century oil painting by Netherlands painter Johannes Vermeer.  [https://en.wikipedia.org/wiki/The_Art_of_Painting wikipedia]"
      },
      "date": 1664207879425
    },
    {
      "item": {
        "type": "factory",
        "id": "3ed3a2cfdf7c8857"
      },
      "id": "3ed3a2cfdf7c8857",
      "type": "add",
      "after": "aee1d33e3c7fce80",
      "date": 1664207898571
    },
    {
      "id": "3ed3a2cfdf7c8857",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "c0003595d4b32312",
        "3ed3a2cfdf7c8857",
        "9b71281ee84bb96b",
        "e978fbdcd89ec768",
        "aee1d33e3c7fce80"
      ],
      "date": 1664207900821
    },
    {
      "type": "edit",
      "id": "3ed3a2cfdf7c8857",
      "item": {
        "type": "reference",
        "id": "3ed3a2cfdf7c8857",
        "site": "frame.wiki.dbbs.co",
        "slug": "man-drawing-a-lute",
        "title": "Man Drawing a Lute",
        "text": "\"Man Drawing a Lute\", woodcut by Albrecht Dürer (1525) Location: Metropolitan Museum of Art, New York [https://commons.wikimedia.org/wiki/File:D%C3%BCrer_-_Man_Drawing_a_Lute.jpg wikipedia]"
      },
      "date": 1664207904579
    },
    {
      "item": {
        "type": "factory",
        "id": "7a0ae629b7f14a34"
      },
      "id": "7a0ae629b7f14a34",
      "type": "add",
      "after": "aee1d33e3c7fce80",
      "date": 1664207916944
    },
    {
      "id": "7a0ae629b7f14a34",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "c0003595d4b32312",
        "3ed3a2cfdf7c8857",
        "7a0ae629b7f14a34",
        "9b71281ee84bb96b",
        "e978fbdcd89ec768",
        "aee1d33e3c7fce80"
      ],
      "date": 1664207919911
    },
    {
      "type": "edit",
      "id": "7a0ae629b7f14a34",
      "item": {
        "type": "reference",
        "id": "7a0ae629b7f14a34",
        "site": "frame.wiki.dbbs.co",
        "slug": "codex-atlanticus-f-5-recto",
        "title": "Codex Atlanticus f. 5 recto",
        "text": "Drawings by Leonardo da Vinci. In the centre a bellows activated hydraulic pump; on the right: a man drawing an armillary sphere using a perspectograph. [https://www.ambrosiana.it/en/opere/atlantic-codex-codex-atlanticus-f-5-recto/ museum] [http://codex-atlanticus.it/#/Detail?detail=5 digital codex]"
      },
      "date": 1664207923844
    },
    {
      "id": "e978fbdcd89ec768",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "c0003595d4b32312",
        "3ed3a2cfdf7c8857",
        "7a0ae629b7f14a34",
        "e978fbdcd89ec768",
        "9b71281ee84bb96b",
        "aee1d33e3c7fce80"
      ],
      "date": 1664207940315
    },
    {
      "id": "aee1d33e3c7fce80",
      "type": "move",
      "order": [
        "550bce775583132d",
        "ef325e91763aa771",
        "6b57632cfe11a49f",
        "a0c025ed42974a57",
        "fc729b60d0e70a51",
        "6bcdc8566513527a",
        "3b511e3e95a4b2e3",
        "80a02bef28e74bce",
        "31f7aefe02a6708b",
        "21167b880a5584a1",
        "c0003595d4b32312",
        "3ed3a2cfdf7c8857",
        "7a0ae629b7f14a34",
        "e978fbdcd89ec768",
        "aee1d33e3c7fce80",
        "9b71281ee84bb96b"
      ],
      "date": 1664207957877
    }
  ]
}