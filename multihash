{
  "title": "Multihash",
  "journal": [
    {
      "date": 1604840974412,
      "item": {
        "title": "Multihash",
        "story": ""
      },
      "type": "create"
    },
    {
      "type": "fork",
      "date": 1604841200974
    },
    {
      "type": "fork",
      "site": "cryptoacademy.org",
      "date": 1604847359710
    },
    {
      "type": "edit",
      "id": "c2b99b62-930f-4a01-a99a-bbc97af61a20",
      "item": {
        "id": "c2b99b62-930f-4a01-a99a-bbc97af61a20",
        "type": "markdown",
        "text": "__Multihash__ is a protocol for differentiating outputs from various well-established hash functions, addressing size + encoding considerations. It is useful to write applications that future-proof their use of hashes, and allow multiple hash functions to coexist.\n"
      },
      "date": 1604847454483
    },
    {
      "type": "add",
      "id": "86f3ab5b60b2c203",
      "item": {
        "type": "markdown",
        "id": "86f3ab5b60b2c203",
        "text": "> Self-describing hashes\n"
      },
      "after": "c2b99b62-930f-4a01-a99a-bbc97af61a20",
      "date": 1604847460438
    },
    {
      "type": "add",
      "id": "e0457c4b3b35861e",
      "item": {
        "type": "markdown",
        "id": "e0457c4b3b35861e",
        "text": "# Safer, easier cryptographic hash function upgrades\n\nMultihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing.\n- How many programs out there assume a git hash is a sha1 hash?\n- How many scripts assume the hash value digest is exactly 160 bits?\n- How many tools will break when these values change?\n- How many programs will fail silently when these values change?\n\n\n"
      },
      "after": "86f3ab5b60b2c203",
      "date": 1604847508292
    },
    {
      "type": "add",
      "id": "321030b4234a05a7",
      "item": {
        "type": "markdown",
        "id": "321030b4234a05a7",
        "text": "This is precisely where Multihash shines. It was designed for upgrading."
      },
      "after": "e0457c4b3b35861e",
      "date": 1604847510223
    },
    {
      "type": "edit",
      "id": "e0457c4b3b35861e",
      "item": {
        "type": "markdown",
        "id": "e0457c4b3b35861e",
        "text": "# Safer, easier cryptographic hash function upgrades\n\nMultihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. \n"
      },
      "date": 1604847512932
    },
    {
      "type": "add",
      "id": "b98a2de0b34ef7f7",
      "item": {
        "type": "markdown",
        "id": "b98a2de0b34ef7f7",
        "text": "These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing.\n- How many programs out there assume a git hash is a sha1 hash?\n- How many scripts assume the hash value digest is exactly 160 bits?\n- How many tools will break when these values change?\n- How many programs will fail silently when these values change?\n\n\n"
      },
      "after": "e0457c4b3b35861e",
      "date": 1604847513697
    },
    {
      "type": "edit",
      "id": "b98a2de0b34ef7f7",
      "item": {
        "type": "markdown",
        "id": "b98a2de0b34ef7f7",
        "text": "These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. \n"
      },
      "date": 1604847517606
    },
    {
      "type": "add",
      "id": "325e679950bf6deb",
      "item": {
        "type": "markdown",
        "id": "325e679950bf6deb",
        "text": "Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing.\n- How many programs out there assume a git hash is a sha1 hash?\n- How many scripts assume the hash value digest is exactly 160 bits?\n- How many tools will break when these values change?\n- How many programs will fail silently when these values change?\n\n\n"
      },
      "after": "b98a2de0b34ef7f7",
      "date": 1604847517976
    },
    {
      "type": "edit",
      "id": "ef98db23-aaaf-4183-a1c2-4079bed84fda",
      "item": {
        "id": "ef98db23-aaaf-4183-a1c2-4079bed84fda",
        "type": "markdown",
        "text": "# Links"
      },
      "date": 1604847529657
    },
    {
      "item": {
        "type": "factory",
        "id": "bd849806e03e77b7"
      },
      "id": "bd849806e03e77b7",
      "type": "add",
      "after": "a229dfaa-1364-4f8b-8135-2c920fc6dc0b",
      "date": 1604847574344
    },
    {
      "type": "edit",
      "id": "bd849806e03e77b7",
      "item": {
        "type": "markdown",
        "id": "bd849806e03e77b7",
        "text": "# See also\n\n- [[Wiki Identity Provider]]\n- [[JSON Web Token]]\n- [[Self-sovereign identity]]\n- [[Decentralized identifiers]]\n- [[Multihash]]"
      },
      "date": 1604847576375
    },
    {
      "type": "edit",
      "id": "b98a2de0b34ef7f7",
      "item": {
        "type": "markdown",
        "id": "b98a2de0b34ef7f7",
        "text": "# Current problems with hashing\n"
      },
      "date": 1604847606376
    },
    {
      "type": "add",
      "id": "13b455de26a655c8",
      "item": {
        "type": "markdown",
        "id": "13b455de26a655c8",
        "text": "These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. \n"
      },
      "after": "b98a2de0b34ef7f7",
      "date": 1604847606803
    },
    {
      "type": "edit",
      "id": "e0457c4b3b35861e",
      "item": {
        "type": "markdown",
        "id": "e0457c4b3b35861e",
        "text": "Multihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. \n"
      },
      "date": 1604847622968
    },
    {
      "type": "add",
      "id": "07484f2936acea6b",
      "item": {
        "type": "markdown",
        "id": "07484f2936acea6b",
        "text": "> Safer, easier cryptographic hash function upgrades\n"
      },
      "after": "e0457c4b3b35861e",
      "date": 1604847623643
    },
    {
      "type": "fork",
      "site": "identity.thought.garden",
      "date": 1628789449103
    },
    {
      "type": "edit",
      "id": "bd849806e03e77b7",
      "item": {
        "type": "markdown",
        "id": "bd849806e03e77b7",
        "text": "# See also\n\n- [[Wiki Identity Provider]]\n- [[JSON Web Token]]\n- [[Self-sovereign identity]]\n- [[Decentralized identifiers]]"
      },
      "date": 1661583405286
    }
  ],
  "story": [
    {
      "id": "c2b99b62-930f-4a01-a99a-bbc97af61a20",
      "type": "markdown",
      "text": "__Multihash__ is a protocol for differentiating outputs from various well-established hash functions, addressing size + encoding considerations. It is useful to write applications that future-proof their use of hashes, and allow multiple hash functions to coexist.\n"
    },
    {
      "type": "markdown",
      "id": "86f3ab5b60b2c203",
      "text": "> Self-describing hashes\n"
    },
    {
      "type": "markdown",
      "id": "e0457c4b3b35861e",
      "text": "Multihash is particularly important in systems which depend on cryptographically secure hash functions. Attacks may break the cryptographic properties of secure hash functions. \n"
    },
    {
      "type": "markdown",
      "id": "07484f2936acea6b",
      "text": "> Safer, easier cryptographic hash function upgrades\n"
    },
    {
      "type": "markdown",
      "id": "b98a2de0b34ef7f7",
      "text": "# Current problems with hashing\n"
    },
    {
      "type": "markdown",
      "id": "13b455de26a655c8",
      "text": "These cryptographic breaks are particularly painful in large tool ecosystems, where tools may have made assumptions about hash values, such as function and digest size. \n"
    },
    {
      "type": "markdown",
      "id": "325e679950bf6deb",
      "text": "Upgrading becomes a nightmare, as all tools which make those assumptions would have to be upgraded to use the new hash function and new hash digest length. Tools may face serious interoperability problems or error-prone special casing.\n- How many programs out there assume a git hash is a sha1 hash?\n- How many scripts assume the hash value digest is exactly 160 bits?\n- How many tools will break when these values change?\n- How many programs will fail silently when these values change?\n\n\n"
    },
    {
      "type": "markdown",
      "id": "321030b4234a05a7",
      "text": "This is precisely where Multihash shines. It was designed for upgrading."
    },
    {
      "id": "ef98db23-aaaf-4183-a1c2-4079bed84fda",
      "type": "markdown",
      "text": "# Links"
    },
    {
      "id": "a229dfaa-1364-4f8b-8135-2c920fc6dc0b",
      "type": "markdown",
      "text": "- Whatâ€™s really happening... - [https://medium.com/textileio/whats-really-happening-when-you-add-a-file-to-ipfs-ae3b8b5e4b0f medium.com]\n- Decentralized Identifiers... - [https://www.w3.org/TR/did-core/ w3.org]\n- Multihash - [https://multiformats.io/multihash/ multiformats.io]\n- The Multihash Data Format - [https://tools.ietf.org/id/draft-multiformats-multihash-00.html ietf.org]\n- Use Cases for Decentralized... - [https://w3c-ccg.github.io/did-use-cases/#introduction github.io]\n- MultiHash | IPFS Core... - [https://richardschneider.github.io/net-ipfs-core/articles/multihash.html github.io]\n- Multihash â€“... - [https://news.ycombinator.com/item?id=13739219 ycombinator.com]\n- Content addressing | IPFS Docs - [https://docs.ipfs.io/concepts/content-addressing/ ipfs.io]"
    },
    {
      "type": "markdown",
      "id": "bd849806e03e77b7",
      "text": "# See also\n\n- [[Wiki Identity Provider]]\n- [[JSON Web Token]]\n- [[Self-sovereign identity]]\n- [[Decentralized identifiers]]"
    }
  ]
}