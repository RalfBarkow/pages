{
  "title": "Remote Database Schema Migration",
  "story": [
    {
      "type": "paragraph",
      "id": "2a706b9c3bc1b4e1",
      "text": "I was sure that we could not get the schema for [[WyCash Plus]] right on the first try. I was familiar with Smaltalk-80's object migration mechanisms. I designed a version that could serve us in a commercial software distribution environment."
    },
    {
      "type": "paragraph",
      "id": "db6cbf62243444ef",
      "text": "I chose to version each class independently and write that as a sequential integer in the serialized versions. Objects would be mutated to the current version on read. We supported all versions we ever had forever."
    },
    {
      "type": "paragraph",
      "id": "9dc8e008c4d2d33e",
      "text": "I recorded mutation vectors for each version to the present. These could add, remove and reorder fields within an object. One-off mutation methods handled the rare case where the vectors were not enough description."
    },
    {
      "type": "paragraph",
      "id": "ea57b1d01d721e7f",
      "text": "We shipped migrations to our customers with each release to be performed on their own machines when needed without any intervention."
    },
    {
      "type": "paragraph",
      "id": "ef61303172eaf85a",
      "text": "Occasionally we would send specific customers field patches that included migrations specific to their needs. This then folded into our ongoing development with no further attention. Different users might migrate in different orders so long as each abstraction migrated in sequence there was no problem."
    },
    {
      "type": "html",
      "id": "c7c773c625143b76",
      "text": "<h3> Management"
    },
    {
      "type": "paragraph",
      "id": "2bb7cabdeda84f18",
      "text": "I wrote a program that would manage a database of mutation vectors independent of our source code. This turned out to be hard for me to operate correctly. I was convinced fatal mistakes would be made so I discarded it in favor of hand-crafted vectors stored as an array per object in the running program."
    },
    {
      "type": "paragraph",
      "id": "bdbf25def81a6acc",
      "text": "[[Alan Darlington]] became most skillful of our group managing these resources. We would change what ever we wanted in development and then design the migrations to be delivered, consulting Alan if necessary."
    },
    {
      "type": "paragraph",
      "id": "d0334ecc4635366c",
      "text": "Alan Darlington eventually discovered a way to keep primary data in source code comments and use a \"do it\" to generate correct mutation vector arrays when needed. This was genius. It keep our version history in the source code management where it belonged."
    },
    {
      "type": "html",
      "id": "396ba557c6cc8c69",
      "text": "<h3> Persistence"
    },
    {
      "type": "paragraph",
      "id": "9eefb732049f6365",
      "text": "We were replacing spreadsheets and chose the same open/save approach to persistence. "
    },
    {
      "type": "paragraph",
      "id": "5f984134c37b8ec5",
      "text": "We supplemented this with a transaction log that could be read on startup to recover unsaved data. "
    },
    {
      "type": "paragraph",
      "id": "5e3515cc91135f95",
      "text": "One customer didn't know that save was expected and only ever turned off their PC when their work was done. When startup starting getting slow we suggested a save. All was better."
    },
    {
      "type": "paragraph",
      "id": "9c304231500438c4",
      "text": "We concocted a small scale sharing mechanism coded by reading each others recovery logs. This delayed the \"high volume\" implementation on top of a shared database."
    },
    {
      "type": "paragraph",
      "id": "f1e7ff5ba704e53d",
      "text": "We rewrote our serialization to use binary data rather than parsing text strings. We stored these records in a db with four tables: instruments, transactions, portfolios and other. Our mutation mechanisms survived this conversion."
    },
    {
      "type": "paragraph",
      "id": "20315fb912bc05a3",
      "text": "We found that interning symbols was slowing reading. We tried rewriting this as a custom primitive with no significant improvement. Success came with inserting our own symbol table in front of the system symbol table. With only our own symbols we achieved near perfect hashing."
    },
    {
      "type": "html",
      "id": "b787cc4f22456b44",
      "text": "<h3> Agility"
    },
    {
      "type": "paragraph",
      "id": "26f4e21fbe74f179",
      "text": "We let powerful database structures emerge. For example some instruments contained the transaction that provided collateral to the investment. This bundle would be saved in the instrument table without touching the transaction table unless the collateral were redeemed."
    },
    {
      "type": "paragraph",
      "id": "db858da923b9c6bf",
      "text": "I've described to others how we let our implementation evolve. Others would claim that such flexibility would be impossible and cited database migration as an overwhelming cost. When I described our solution I was told that I cheated by changing the rules. Imagine that."
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Remote Database Schema Migration"
      },
      "date": 1376949624428
    },
    {
      "item": {
        "type": "factory",
        "id": "2a706b9c3bc1b4e1"
      },
      "id": "2a706b9c3bc1b4e1",
      "type": "add",
      "date": 1376949629154
    },
    {
      "type": "edit",
      "id": "2a706b9c3bc1b4e1",
      "item": {
        "type": "paragraph",
        "id": "2a706b9c3bc1b4e1",
        "text": "I was sure that we could not get the schema for [[WyCash Plus]] right on the first try. I was familiar with Smaltalk-80's object migration mechanisms. I designed a version that could serve us in a commercial software distribution environment."
      },
      "date": 1376949756080
    },
    {
      "item": {
        "type": "paragraph",
        "id": "db6cbf62243444ef",
        "text": ""
      },
      "id": "db6cbf62243444ef",
      "type": "add",
      "after": "2a706b9c3bc1b4e1",
      "date": 1376949756585
    },
    {
      "type": "edit",
      "id": "db6cbf62243444ef",
      "item": {
        "type": "paragraph",
        "id": "db6cbf62243444ef",
        "text": "I chose to version each class independently and write that as a sequential integer in the serialized versions. Objects would be mutated to the current version on read. We supported all versions we ever had forever."
      },
      "date": 1376949951961
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9dc8e008c4d2d33e",
        "text": ""
      },
      "id": "9dc8e008c4d2d33e",
      "type": "add",
      "after": "db6cbf62243444ef",
      "date": 1376949952467
    },
    {
      "type": "edit",
      "id": "9dc8e008c4d2d33e",
      "item": {
        "type": "paragraph",
        "id": "9dc8e008c4d2d33e",
        "text": "I recorded mutation vectors for each version to the present. These could add, remove and reorder fields within an object. One-off mutation methods handled the rare case where the vectors were not enough description."
      },
      "date": 1376950130068
    },
    {
      "item": {
        "type": "paragraph",
        "id": "2bb7cabdeda84f18",
        "text": ""
      },
      "id": "2bb7cabdeda84f18",
      "type": "add",
      "after": "9dc8e008c4d2d33e",
      "date": 1376950130574
    },
    {
      "type": "edit",
      "id": "2bb7cabdeda84f18",
      "item": {
        "type": "paragraph",
        "id": "2bb7cabdeda84f18",
        "text": "I wrote a program that would manage a database of mutation vectors independent of our source code. This turned out to be hard for me to operate correctly. I was convinced fatal mistakes would be made so I discarded it in favor of hand-crafted vectors stored as an array per object in the running program."
      },
      "date": 1376950264785
    },
    {
      "item": {
        "type": "paragraph",
        "id": "bdbf25def81a6acc",
        "text": ""
      },
      "id": "bdbf25def81a6acc",
      "type": "add",
      "after": "2bb7cabdeda84f18",
      "date": 1376950265294
    },
    {
      "type": "edit",
      "id": "bdbf25def81a6acc",
      "item": {
        "type": "paragraph",
        "id": "bdbf25def81a6acc",
        "text": "Alan Darlington became most skillful of our group managing these resources. We would change what ever we wanted in development and then design the migrations to be delivered, consulting Alan if necessary."
      },
      "date": 1376950369381
    },
    {
      "item": {
        "type": "paragraph",
        "id": "d0334ecc4635366c",
        "text": ""
      },
      "id": "d0334ecc4635366c",
      "type": "add",
      "after": "bdbf25def81a6acc",
      "date": 1376950369887
    },
    {
      "type": "edit",
      "id": "d0334ecc4635366c",
      "item": {
        "type": "paragraph",
        "id": "d0334ecc4635366c",
        "text": "Alan Darlington eventually discovered a way to keep primary data in source code comments and use a \"do it\" to generate correct mutation vector arrays when needed. This was genius. It keep our version history in the source code management where it belonged."
      },
      "date": 1376950496913
    },
    {
      "item": {
        "type": "paragraph",
        "id": "c7c773c625143b76",
        "text": ""
      },
      "id": "c7c773c625143b76",
      "type": "add",
      "after": "9dc8e008c4d2d33e",
      "date": 1376950511089
    },
    {
      "type": "edit",
      "id": "c7c773c625143b76",
      "item": {
        "type": "paragraph",
        "id": "c7c773c625143b76",
        "text": "<h3> Management"
      },
      "date": 1376950520847
    },
    {
      "item": {
        "type": "paragraph",
        "id": "396ba557c6cc8c69",
        "text": ""
      },
      "id": "396ba557c6cc8c69",
      "type": "add",
      "after": "d0334ecc4635366c",
      "date": 1376950527663
    },
    {
      "type": "edit",
      "id": "396ba557c6cc8c69",
      "item": {
        "type": "paragraph",
        "id": "396ba557c6cc8c69",
        "text": "<h3> Storage Alternatives"
      },
      "date": 1376950599648
    },
    {
      "item": {
        "type": "paragraph",
        "id": "059d55663e8d5cb1",
        "text": ""
      },
      "id": "059d55663e8d5cb1",
      "type": "add",
      "after": "396ba557c6cc8c69",
      "date": 1376950600155
    },
    {
      "type": "remove",
      "id": "059d55663e8d5cb1",
      "date": 1376950608054
    },
    {
      "type": "edit",
      "id": "396ba557c6cc8c69",
      "item": {
        "type": "paragraph",
        "id": "396ba557c6cc8c69",
        "text": "<h3> Persistence"
      },
      "date": 1376950618758
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9eefb732049f6365",
        "text": ""
      },
      "id": "9eefb732049f6365",
      "type": "add",
      "after": "396ba557c6cc8c69",
      "date": 1376950622182
    },
    {
      "type": "edit",
      "id": "9eefb732049f6365",
      "item": {
        "type": "paragraph",
        "id": "9eefb732049f6365",
        "text": "We were replacing spreadsheets and chose the same open/save approach to persistence. "
      },
      "date": 1376950683549
    },
    {
      "item": {
        "type": "paragraph",
        "id": "5f984134c37b8ec5",
        "text": ""
      },
      "id": "5f984134c37b8ec5",
      "type": "add",
      "after": "9eefb732049f6365",
      "date": 1376950684054
    },
    {
      "type": "edit",
      "id": "5f984134c37b8ec5",
      "item": {
        "type": "paragraph",
        "id": "5f984134c37b8ec5",
        "text": "We supplemented this with a transaction log that could be read on startup to recover unsaved data. "
      },
      "date": 1376950776643
    },
    {
      "item": {
        "type": "paragraph",
        "id": "5e3515cc91135f95",
        "text": "One customer didn't know that save was expected and only ever turned off their PC when their work was done. "
      },
      "id": "5e3515cc91135f95",
      "type": "add",
      "after": "5f984134c37b8ec5",
      "date": 1376950777148
    },
    {
      "type": "edit",
      "id": "5e3515cc91135f95",
      "item": {
        "type": "paragraph",
        "id": "5e3515cc91135f95",
        "text": "One customer didn't know that save was expected and only ever turned off their PC when their work was done. When startup starting getting slow we suggested a save. All was better."
      },
      "date": 1376950832816
    },
    {
      "item": {
        "type": "paragraph",
        "id": "9c304231500438c4",
        "text": ""
      },
      "id": "9c304231500438c4",
      "type": "add",
      "after": "5e3515cc91135f95",
      "date": 1376950833322
    },
    {
      "type": "edit",
      "id": "9c304231500438c4",
      "item": {
        "type": "paragraph",
        "id": "9c304231500438c4",
        "text": "We concocted a small scale sharing mechanism coded by reading each others recovery logs. This delayed the \"high volume\" implementation on top of a shared database."
      },
      "date": 1376950912310
    },
    {
      "item": {
        "type": "paragraph",
        "id": "f1e7ff5ba704e53d",
        "text": ""
      },
      "id": "f1e7ff5ba704e53d",
      "type": "add",
      "after": "9c304231500438c4",
      "date": 1376950912816
    },
    {
      "type": "edit",
      "id": "f1e7ff5ba704e53d",
      "item": {
        "type": "paragraph",
        "id": "f1e7ff5ba704e53d",
        "text": "We rewrote our serialization to use binary data rather than parsing text strings. We stored these records in a db with four tables: instruments, transactions, portfolios and other. Our mutation mechanisms survived this conversion."
      },
      "date": 1376951089179
    },
    {
      "item": {
        "type": "paragraph",
        "id": "20315fb912bc05a3",
        "text": ""
      },
      "id": "20315fb912bc05a3",
      "type": "add",
      "after": "f1e7ff5ba704e53d",
      "date": 1376951089687
    },
    {
      "type": "edit",
      "id": "20315fb912bc05a3",
      "item": {
        "type": "paragraph",
        "id": "20315fb912bc05a3",
        "text": "We found that interning symbols was slowing reading. We tried rewriting this as a custom primitive with no significant improvement. Success came with inserting our own symbol table in front of the system symbol table. With only our own symbols we achieved near perfect hashing."
      },
      "date": 1376951210000
    },
    {
      "item": {
        "type": "paragraph",
        "id": "62a8590616d0b05d",
        "text": ""
      },
      "id": "62a8590616d0b05d",
      "type": "add",
      "after": "20315fb912bc05a3",
      "date": 1376951210508
    },
    {
      "type": "remove",
      "id": "62a8590616d0b05d",
      "date": 1376951243759
    },
    {
      "item": {
        "type": "paragraph",
        "id": "b787cc4f22456b44",
        "text": ""
      },
      "id": "b787cc4f22456b44",
      "type": "add",
      "after": "20315fb912bc05a3",
      "date": 1376951252320
    },
    {
      "type": "edit",
      "id": "b787cc4f22456b44",
      "item": {
        "type": "paragraph",
        "id": "b787cc4f22456b44",
        "text": "<h3> Agility"
      },
      "date": 1376951257358
    },
    {
      "item": {
        "type": "paragraph",
        "id": "26f4e21fbe74f179",
        "text": ""
      },
      "id": "26f4e21fbe74f179",
      "type": "add",
      "after": "b787cc4f22456b44",
      "date": 1376951257863
    },
    {
      "type": "edit",
      "id": "26f4e21fbe74f179",
      "item": {
        "type": "paragraph",
        "id": "26f4e21fbe74f179",
        "text": "We let powerful database structures emerge. For example some instruments contained the transaction that provided collateral to the investment. This bundle would be saved in the instrument table without touching the transaction table unless the collateral were redeemed."
      },
      "date": 1376951456402
    },
    {
      "item": {
        "type": "paragraph",
        "id": "db858da923b9c6bf",
        "text": ""
      },
      "id": "db858da923b9c6bf",
      "type": "add",
      "after": "26f4e21fbe74f179",
      "date": 1376951456908
    },
    {
      "type": "edit",
      "id": "db858da923b9c6bf",
      "item": {
        "type": "paragraph",
        "id": "db858da923b9c6bf",
        "text": "I've described to others how we let our implementation evolve. Others would claim that such flexibility would be impossible and cited database migration as an overwhelming cost. When I described our solution I was told that I cheated by changing the rules. Imagine that."
      },
      "date": 1376951679348
    },
    {
      "item": {
        "type": "paragraph",
        "id": "a7833276f873f22d",
        "text": ""
      },
      "id": "a7833276f873f22d",
      "type": "add",
      "after": "d0334ecc4635366c",
      "date": 1376951707811
    },
    {
      "type": "remove",
      "id": "a7833276f873f22d",
      "date": 1376951716098
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ea57b1d01d721e7f",
        "text": ""
      },
      "id": "ea57b1d01d721e7f",
      "type": "add",
      "after": "2bb7cabdeda84f18",
      "date": 1376951720491
    },
    {
      "type": "edit",
      "id": "ea57b1d01d721e7f",
      "item": {
        "type": "paragraph",
        "id": "ea57b1d01d721e7f",
        "text": "We shipped migrations to our customers with each release to be performed on their own machines when needed without any intervention."
      },
      "date": 1376951901486
    },
    {
      "type": "move",
      "order": [
        "2a706b9c3bc1b4e1",
        "db6cbf62243444ef",
        "9dc8e008c4d2d33e",
        "ea57b1d01d721e7f",
        "c7c773c625143b76",
        "2bb7cabdeda84f18",
        "bdbf25def81a6acc",
        "d0334ecc4635366c",
        "396ba557c6cc8c69",
        "9eefb732049f6365",
        "5f984134c37b8ec5",
        "5e3515cc91135f95",
        "9c304231500438c4",
        "f1e7ff5ba704e53d",
        "20315fb912bc05a3",
        "b787cc4f22456b44",
        "26f4e21fbe74f179",
        "db858da923b9c6bf"
      ],
      "id": "ea57b1d01d721e7f",
      "date": 1376951905010
    },
    {
      "item": {
        "type": "paragraph",
        "id": "ef61303172eaf85a",
        "text": ""
      },
      "id": "ef61303172eaf85a",
      "type": "add",
      "after": "ea57b1d01d721e7f",
      "date": 1376951912246
    },
    {
      "type": "edit",
      "id": "ef61303172eaf85a",
      "item": {
        "type": "paragraph",
        "id": "ef61303172eaf85a",
        "text": "Occasionally we would send specific customers field patches that included migrations specific to their needs. This then folded into our ongoing development with no further attention. Different users might migrate in different orders so long as each abstraction migrated in sequence there was no problem."
      },
      "date": 1376952182280
    },
    {
      "type": "edit",
      "id": "c7c773c625143b76",
      "item": {
        "type": "html",
        "id": "c7c773c625143b76",
        "text": "<h3> Management"
      },
      "date": 1420390472005
    },
    {
      "type": "edit",
      "id": "396ba557c6cc8c69",
      "item": {
        "type": "html",
        "id": "396ba557c6cc8c69",
        "text": "<h3> Persistence"
      },
      "date": 1420390474626
    },
    {
      "type": "edit",
      "id": "b787cc4f22456b44",
      "item": {
        "type": "html",
        "id": "b787cc4f22456b44",
        "text": "<h3> Agility"
      },
      "date": 1420390478017
    },
    {
      "type": "fork",
      "site": "code.fed.wiki.org",
      "date": 1649699241271
    },
    {
      "type": "edit",
      "id": "bdbf25def81a6acc",
      "item": {
        "type": "paragraph",
        "id": "bdbf25def81a6acc",
        "text": "[[Alan Darlington]] became most skillful of our group managing these resources. We would change what ever we wanted in development and then design the migrations to be delivered, consulting Alan if necessary."
      },
      "date": 1649699400010
    }
  ]
}