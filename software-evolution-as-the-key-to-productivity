{
  "title": "Software Evolution as the Key to Productivity",
  "story": [
    {
      "type": "markdown",
      "id": "ec57a17fff2ac61e",
      "text": "O. Nierstrasz, “Software Evolution as the Key to Productivity,” in Radical Innovations of Software and Systems Engineering in the Future, Berlin, Heidelberg, 2004, pp. 274–282. doi: 10.1007/978-3-540-24626-8_19.\n"
    },
    {
      "type": "markdown",
      "id": "91eb342600f18224",
      "text": "> **Abstract**. Despite the existence of a seemingly continuous stream of new technologies and methods, software productivity remains universally unimpressive. We argue that, as long as industry remains focused on short-term goals, and maintains a technology-centric view of software development, no progress will be made. A clear symptom of this problem is the fact that the metaphors we apply to software development are largely obsolete. Instead of thinking about software as we do about bridges, buildings or hardware components, we should encourage a view of software as a living and evolving entity that is developed and maintained by people. We begin with some assertions that are intended as food for thought. We continue by reviewing what we consider to be some of the key difficulties with software development today. We conclude with a few recommendations for research into software practices that take evolution into account.\n"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Software Evolution as the Key to Productivity",
        "story": []
      },
      "date": 1633631601541
    },
    {
      "item": {
        "type": "factory",
        "id": "ec57a17fff2ac61e"
      },
      "id": "ec57a17fff2ac61e",
      "type": "add",
      "date": 1633631727805
    },
    {
      "type": "edit",
      "id": "ec57a17fff2ac61e",
      "item": {
        "type": "markdown",
        "id": "ec57a17fff2ac61e",
        "text": "Nierstrasz"
      },
      "date": 1633631731906
    },
    {
      "type": "edit",
      "id": "ec57a17fff2ac61e",
      "item": {
        "type": "markdown",
        "id": "ec57a17fff2ac61e",
        "text": "O. Nierstrasz, “Software Evolution as the Key to Productivity,” in Radical Innovations of Software and Systems Engineering in the Future, Berlin, Heidelberg, 2004, pp. 274–282. doi: 10.1007/978-3-540-24626-8_19.\n"
      },
      "date": 1633631748556
    },
    {
      "type": "add",
      "id": "91eb342600f18224",
      "item": {
        "type": "markdown",
        "id": "91eb342600f18224",
        "text": "> **Abstract**. Despite the existence of a seemingly continuous stream of new technologies and methods, software productivity remains univer- sally unimpressive. We argue that, as long as industry remains focused on short-term goals, and maintains a technology-centric view of soft- ware development, no progress will be made. A clear symptom of this problem is the fact that the metaphors we apply to software develop- ment are largely obsolete. Instead of thinking about software as we do about bridges, buildings or hardware components, we should encourage a view of software as a living and evolving entity that is developed and maintained by people. We begin with some assertions that are intended as food for thought. We continue by reviewing what we consider to be some of the key difficulties with software development today. We con- clude with a few recommendations for research into software practices that take evolution into account.\n"
      },
      "after": "ec57a17fff2ac61e",
      "date": 1633631769472
    },
    {
      "type": "edit",
      "id": "91eb342600f18224",
      "item": {
        "type": "markdown",
        "id": "91eb342600f18224",
        "text": "> **Abstract**. Despite the existence of a seemingly continuous stream of new technologies and methods, software productivity remains universally unimpressive. We argue that, as long as industry remains focused on short-term goals, and maintains a technology-centric view of software development, no progress will be made. A clear symptom of this problem is the fact that the metaphors we apply to software development are largely obsolete. Instead of thinking about software as we do about bridges, buildings or hardware components, we should encourage a view of software as a living and evolving entity that is developed and maintained by people. We begin with some assertions that are intended as food for thought. We continue by reviewing what we consider to be some of the key difficulties with software development today. We conclude with a few recommendations for research into software practices that take evolution into account.\n"
      },
      "date": 1633631901066
    }
  ]
}