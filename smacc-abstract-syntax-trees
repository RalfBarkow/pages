{
  "title": "SmaCC Abstract Syntax Trees",
  "story": [
    {
      "type": "paragraph",
      "id": "87c6b7d4c05cce31",
      "text": "SmaCC can generate abstract syntax trees from an annotated grammar. In addition to the node classes to represent the trees, SmaCC also generates a generic visitor for the tree classes. [https://web.archive.org/web/20190901213124/http://www.refactoryworkers.com/SmaCC/ASTs.html wayback]"
    },
    {
      "type": "paragraph",
      "id": "e417f4f548aea6f7",
      "text": "To create an AST, you need to annotate your grammar. Let's start with the grammar of our simple expression parser from the tutorial. Since we are wanting to build an AST, I've removed the code that evaluates the expression."
    },
    {
      "type": "paragraph",
      "id": "df574232934688cf",
      "text": "⇒ [[SmaCC Tutorial]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "SmaCC Abstract Syntax Trees",
        "story": []
      },
      "date": 1652800355026
    },
    {
      "item": {
        "type": "factory",
        "id": "87c6b7d4c05cce31"
      },
      "id": "87c6b7d4c05cce31",
      "type": "add",
      "date": 1652800361358
    },
    {
      "type": "edit",
      "id": "87c6b7d4c05cce31",
      "item": {
        "type": "paragraph",
        "id": "87c6b7d4c05cce31",
        "text": "SmaCC can generate abstract syntax trees from an annotated grammar. In addition to the node classes to represent the trees, SmaCC also generates a generic visitor for the tree classes."
      },
      "date": 1652800363541
    },
    {
      "type": "edit",
      "id": "87c6b7d4c05cce31",
      "item": {
        "type": "paragraph",
        "id": "87c6b7d4c05cce31",
        "text": "SmaCC can generate abstract syntax trees from an annotated grammar. In addition to the node classes to represent the trees, SmaCC also generates a generic visitor for the tree classes. [https://web.archive.org/web/20190901213124/http://www.refactoryworkers.com/SmaCC/ASTs.html wayback]"
      },
      "date": 1652800373131
    },
    {
      "type": "add",
      "id": "e417f4f548aea6f7",
      "item": {
        "type": "paragraph",
        "id": "e417f4f548aea6f7",
        "text": "To create an AST, you need to annotate your grammar. Let's start with the grammar of our simple expression parser from the tutorial. Since we are wanting to build an AST, I've removed the code that evaluates the expression."
      },
      "after": "87c6b7d4c05cce31",
      "date": 1652800386060
    },
    {
      "item": {
        "type": "factory",
        "id": "df574232934688cf"
      },
      "id": "df574232934688cf",
      "type": "add",
      "after": "e417f4f548aea6f7",
      "date": 1652800395120
    },
    {
      "type": "edit",
      "id": "df574232934688cf",
      "item": {
        "type": "paragraph",
        "id": "df574232934688cf",
        "text": "SmaCC Tutorial"
      },
      "date": 1652800397987
    },
    {
      "type": "edit",
      "id": "df574232934688cf",
      "item": {
        "type": "paragraph",
        "id": "df574232934688cf",
        "text": "⇒ [[SmaCC Tutorial]]"
      },
      "date": 1652800408589
    }
  ]
}